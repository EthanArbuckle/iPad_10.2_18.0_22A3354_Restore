void sub_10011C98C(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  char v10;
  id v11;

  if (a1)
  {
    v6 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v7 = a1;
    v8 = DOCNode.fpfs_syncFetchFPItem()(v6);
    if (v8)
    {
      v9 = (void *)v8;
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v11 = v7;
      v10 = static NSObject.== infix(_:_:)(v11, v9);

      if ((v10 & 1) != 0)
      {
        a3(a2);

        return;
      }
    }
    else
    {

    }
  }
  a3(0);
}

void sub_10011CA90(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;

  if (!a1)
    goto LABEL_13;
  v4 = a1;
  v5 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    a1 = 0;
    goto LABEL_13;
  }
  if (a1 >= 0)
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v8 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v8))
    goto LABEL_12;
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = *(id *)(v4 + 32);
LABEL_7:
    v9 = v7;
    swift_bridgeObjectRelease(v4);
    a1 = (uint64_t)v9;
LABEL_13:
    v10 = (id)a1;
    a3();

    return;
  }
  __break(1u);
}

Swift::Int sub_10011CB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(a3 + 16, v7, 1, 0);
  v5 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v5);
  return OS_dispatch_semaphore.signal()();
}

void sub_10011CBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t All;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id *v16;
  void (*v17)(void);
  id v18;
  char *v19;
  _BYTE v20[32];

  sub_100069BD8(a2, (uint64_t)v20);
  v3 = type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast(&v19, v20, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
  {
    v4 = v19;
    v5 = sub_10006922C((uint64_t *)&unk_1006424B0);
    All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v5);
    if (All)
    {
      v7 = All;
      v8 = OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController;
      v9 = *(void **)&v4[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
      v10 = type metadata accessor for DOCItemCollectionViewController(0);
      v11 = swift_dynamicCastClass(v9, v10);
      if (!v11)
      {
LABEL_6:
        v14 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        sub_10047B204(v7, *(void **)&v4[v8], 0, 0);

        v16 = (id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v15);
        v17 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v16) + 0xA0);
        v18 = *v16;
        v17();

        swift_bridgeObjectRelease(v7);
        return;
      }
      v12 = (void *)v11;
      v13 = v9;
      if ((objc_msgSend(v12, "isEditing") & 1) != 0)
      {

        goto LABEL_6;
      }
      swift_bridgeObjectRetain(v7);
      v4 = v4;
      sub_10024A6F8((char *)v12, v7, v4);

      swift_bridgeObjectRelease_n(v7, 2);
    }

  }
}

void sub_10011CD5C(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  id *v6;
  void (*v7)(void);
  id v8;

  v4 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  sub_10047B204(a1, *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController), 0, 0);

  v6 = (id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v5);
  v7 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v6) + 0xA0);
  v8 = *v6;
  v7();

}

uint64_t sub_10011CE0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  sub_1000271D4(a1, (uint64_t)&v25, &qword_100642730);
  if (!*((_QWORD *)&v26 + 1))
    goto LABEL_30;
  v1 = sub_10006922C((uint64_t *)&unk_1006444E0);
  if ((swift_dynamicCast(&v24, &v25, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
    return 0;
  v2 = v24;
  if (*(_QWORD *)(v24 + 16) && (v3 = sub_10007EF08(0x7365646F4E636F64, 0xE800000000000000), (v4 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_30:
    sub_10000CB4C((uint64_t)&v25, &qword_100642730);
    return 0;
  }
  v5 = sub_10006922C((uint64_t *)&unk_100643CB0);
  if ((swift_dynamicCast(&v24, &v25, (char *)&type metadata for Any + 8, v5, 6) & 1) == 0)
    return 0;
  v6 = v24;
  v7 = swift_bridgeObjectRetain(v24);
  v8 = (uint64_t)sub_100122508(v7);
  swift_bridgeObjectRelease(v6);
  if ((unint64_t)v8 >> 62)
    goto LABEL_37;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v8, 2);
  while (v9)
  {
    v10 = v8 & 0xC000000000000001;
    v11 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v8 < 0)
      v11 = v8;
    v22 = v6;
    v23 = v11;
    v12 = 4;
    while (1)
    {
      v13 = v12 - 4;
      if (!v10)
        break;
      v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v8);
      v6 = v12 - 3;
      if (__OFADD__(v13, 1))
        goto LABEL_35;
LABEL_19:
      v15 = objc_msgSend(v14, "isSharedByCurrentUser", v22);
      if ((unint64_t)v8 >> 62)
      {
        swift_bridgeObjectRetain(v8);
        v16 = _CocoaArrayWrapper.endIndex.getter(v23);
      }
      else
      {
        v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v8);
      }
      if (!v16)
      {
        swift_unknownObjectRelease(v14);
        swift_bridgeObjectRelease(v8);
        v19 = 0;
        goto LABEL_34;
      }
      if (v10)
      {
        v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
      }
      else
      {
        if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_36;
        v17 = *(void **)(v8 + 32);
        swift_unknownObjectRetain(v17);
      }
      swift_bridgeObjectRelease(v8);
      v18 = objc_msgSend(v17, "isSharedByCurrentUser");
      swift_unknownObjectRelease(v14);
      swift_unknownObjectRelease(v17);
      if (((v15 ^ v18) & 1) == 0)
      {
        ++v12;
        if (v6 != v9)
          continue;
      }
      v19 = v15 ^ v18 ^ 1;
LABEL_34:
      v6 = v22;
      goto LABEL_42;
    }
    v14 = *(void **)(v8 + 8 * v12);
    swift_unknownObjectRetain(v14);
    v6 = v12 - 3;
    if (!__OFADD__(v13, 1))
      goto LABEL_19;
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v8 < 0)
      v21 = v8;
    else
      v21 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v8, 2);
    v9 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  v19 = 1;
LABEL_42:
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease_n(v8, 3);
  return v19;
}

void sub_10011D0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t All;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id *v11;
  void (*v12)(void);
  id v13;
  char *v14;
  _BYTE v15[32];

  sub_100069BD8(a2, (uint64_t)v15);
  v3 = type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
  {
    v4 = v14;
    v5 = sub_10006922C((uint64_t *)&unk_1006424B0);
    All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v5);
    if (All)
    {
      v7 = All;
      v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v9 = *(id *)&v4[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
      sub_10047B670(v7, v9, 0, 0);

      swift_bridgeObjectRelease(v7);
      v11 = (id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v10);
      v12 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v11) + 0xA0);
      v13 = *v11;
      v12();

    }
    else
    {

    }
  }
}

void sub_10011D210(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  _BYTE v6[32];

  sub_100069BD8(a2, (uint64_t)v6);
  v3 = type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
  {
    v4 = v5;
    sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
    sub_10011D2AC(a1, 0, v4);

  }
}

void sub_10011D2AC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
    if (v13 <= 0)
      return;
    swift_bridgeObjectRetain(a1);
    if (!_CocoaArrayWrapper.endIndex.getter(v12))
    {
      swift_bridgeObjectRelease(a1);
      return;
    }
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
    swift_bridgeObjectRetain(a1);
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v7 = *(_QWORD *)(a1 + 32);
    swift_unknownObjectRetain(v7);
  }
  swift_bridgeObjectRelease(a1);
  v8 = swift_allocObject(&unk_1005C7F70, 56, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a1;
  *(_BYTE *)(v8 + 32) = a2 & 1;
  *(_QWORD *)(v8 + 40) = v3;
  *(_QWORD *)(v8 + 48) = v7;
  v14[4] = sub_10012AD34;
  v15 = v8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10004A82C;
  v14[3] = &unk_1005C7F88;
  v9 = _Block_copy(v14);
  v10 = v15;
  swift_bridgeObjectRetain(a1);
  v11 = a3;
  swift_unknownObjectRetain(v7);
  swift_release(v10);
  DOCRunInMainThread(v9);
  _Block_release(v9);
  swift_unknownObjectRelease(v7);
}

void sub_10011D444(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t All;
  uint64_t v7;
  id v8;
  id v9;
  Class isa;
  id v11;
  char *v12;
  _BYTE v13[32];

  sub_100069BD8(a2, (uint64_t)v13);
  v3 = type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
  {
    v4 = v12;
    v5 = sub_10006922C((uint64_t *)&unk_1006424B0);
    All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v5);
    if (!All)
    {
LABEL_10:

      return;
    }
    v7 = All;
    if ((unint64_t)All >> 62)
    {
      if (All >= 0)
        All &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(All) > 1)
        goto LABEL_5;
    }
    else if (*(uint64_t *)((All & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
    {
LABEL_5:
      v8 = objc_msgSend(objc_allocWithZone((Class)DOCTagEditorViewController), "init");
      v9 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v8);
      UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationFormSheet);
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "setItems:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

      v11 = *(id *)&v4[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
      objc_msgSend(v11, "presentViewController:animated:completion:", v9, 1, 0);

      goto LABEL_10;
    }
    swift_bridgeObjectRelease(v7);
    sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
    sub_10011D2AC(a1, 1, v4);
    goto LABEL_10;
  }
}

void sub_10011D60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD aBlock[5];
  uint64_t v19;
  void *v20;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v17 = a1;
  else
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v17))
    goto LABEL_15;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v5 = *(_QWORD *)(a1 + 32);
    swift_unknownObjectRetain(v5);
  }
  swift_bridgeObjectRelease(a1);
  ObjectType = swift_getObjectType(v5, v6);
  v8 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  swift_unknownObjectRelease(v5);
  if (v8)
  {
    sub_100069BD8(a2, (uint64_t)aBlock);
    v9 = type metadata accessor for DOCActionContext();
    if ((swift_dynamicCast(&v20, aBlock, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
    {
      v10 = v20;
      v11 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v12 = swift_allocObject(&unk_1005C8CB8, 32, 7);
      *(_QWORD *)(v12 + 16) = v8;
      *(_QWORD *)(v12 + 24) = v10;
      aBlock[4] = sub_10012B890;
      v19 = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100175118;
      aBlock[3] = &unk_1005C8CD0;
      v13 = _Block_copy(aBlock);
      v14 = v19;
      v15 = v8;
      v16 = v10;
      swift_release(v14);
      objc_msgSend(v11, "fetchURLForItem:completionHandler:", v15, v13);
      _Block_release(v13);

    }
    else
    {

    }
  }
}

uint64_t sub_10011D808(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;

  sub_1000271D4(a1, (uint64_t)&v16, &qword_100642730);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_22;
  v1 = sub_10006922C((uint64_t *)&unk_1006444E0);
  if ((swift_dynamicCast(&v15, &v16, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
    return 0;
  v2 = v15;
  if (*(_QWORD *)(v15 + 16) && (v3 = sub_10007EF08(0x7365646F4E636F64, 0xE800000000000000), (v4 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v17 + 1))
  {
LABEL_22:
    sub_10000CB4C((uint64_t)&v16, &qword_100642730);
    return 0;
  }
  v5 = sub_10006922C((uint64_t *)&unk_100643CB0);
  if ((swift_dynamicCast(&v15, &v16, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
  {
    v6 = v15;
    if (v15 >> 62)
      goto LABEL_26;
    v7 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v15);
    while (v7)
    {
      v8 = 4;
      while (1)
      {
        v9 = v8 - 4;
        if ((v6 & 0xC000000000000001) == 0)
          break;
        v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6);
        v11 = v8 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_25;
LABEL_19:
        if (objc_msgSend(v10, "isShared"))
        {
          v12 = objc_msgSend(v10, "doc_isCollaborationInvitation");
          swift_unknownObjectRelease(v10);
          if ((v12 & 1) == 0)
          {
            swift_bridgeObjectRelease_n(v6, 2);
            return 1;
          }
        }
        else
        {
          swift_unknownObjectRelease(v10);
        }
        ++v8;
        if (v11 == v7)
          goto LABEL_30;
      }
      v10 = *(void **)(v6 + 8 * v8);
      swift_unknownObjectRetain(v10);
      v11 = v8 - 3;
      if (!__OFADD__(v9, 1))
        goto LABEL_19;
LABEL_25:
      __break(1u);
LABEL_26:
      if (v6 < 0)
        v14 = v6;
      else
        v14 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    }
LABEL_30:
    swift_bridgeObjectRelease_n(v6, 2);
  }
  return 0;
}

uint64_t sub_10011DA18(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;

  sub_1000271D4(a1, (uint64_t)&v16, &qword_100642730);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_20;
  v1 = sub_10006922C((uint64_t *)&unk_1006444E0);
  if ((swift_dynamicCast(&v15, &v16, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
    return 0;
  v2 = v15;
  if (*(_QWORD *)(v15 + 16) && (v3 = sub_10007EF08(0x7365646F4E636F64, 0xE800000000000000), (v4 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v17 + 1))
  {
LABEL_20:
    sub_10000CB4C((uint64_t)&v16, &qword_100642730);
    return 0;
  }
  v5 = sub_10006922C((uint64_t *)&unk_100643CB0);
  if ((swift_dynamicCast(&v15, &v16, (char *)&type metadata for Any + 8, v5, 6) & 1) == 0)
    return 0;
  v6 = v15;
  if (v15 >> 62)
    goto LABEL_24;
  v7 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v15);
  while (v7)
  {
    v8 = 4;
    while (1)
    {
      v9 = v8 - 4;
      if ((v6 & 0xC000000000000001) == 0)
        break;
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6);
      v11 = v8 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_23;
LABEL_17:
      *(_QWORD *)&v16 = v10;
      v12 = sub_10011DC04(&v16);
      swift_unknownObjectRelease(v10);
      if (!v12)
      {
        swift_bridgeObjectRelease_n(v6, 2);
        return 0;
      }
      ++v8;
      if (v11 == v7)
        goto LABEL_19;
    }
    v10 = *(_QWORD *)(v6 + 8 * v8);
    swift_unknownObjectRetain(v10);
    v11 = v8 - 3;
    if (!__OFADD__(v9, 1))
      goto LABEL_17;
LABEL_23:
    __break(1u);
LABEL_24:
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
  }
LABEL_19:
  swift_bridgeObjectRelease_n(v6, 2);
  return 1;
}

BOOL sub_10011DC04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  void *v43;
  char v45;
  double v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t *v58;
  NSObject *v59;
  int v60;
  uint64_t v61;
  id v62;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)*a1;
  ObjectType = swift_getObjectType(*a1, v7);
  if (objc_msgSend(v6, "isFolder")
    && (v9 = objc_msgSend(v6, "fpfs_fpItem")) != 0)
  {
    v10 = v9;
    v11 = (void *)objc_opt_self(FPProviderDomain);
    v62 = 0;
    v12 = v10;
    v13 = objc_msgSend(v11, "providerDomainForItem:cachePolicy:error:", v12, 3, &v62);
    v14 = v62;
    if (v13)
    {
      v15 = v13;
      v16 = v62;

      if ((objc_msgSend(v15, "supportsPickingFolders") & 1) != 0)
      {
        v17 = objc_msgSend(v6, "providerDomainID");
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v20 = v19;

        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSMBFileProvider);
        v23 = v21;
        if (v18 == v22 && v20 == v21)
        {

          swift_bridgeObjectRelease_n(v20, 2);
LABEL_13:
          v24 = 1;
          return (objc_msgSend(v6, "isTrashed") & 1) == 0
              && (objc_msgSend(v6, "isAnyParentTrashed") & 1) == 0
              && (objc_msgSend(v6, "isAppContainer") & 1) == 0
              && ((objc_msgSend(v6, "doc_isCollaborationInvitation") | v24) & 1) == 0
              && objc_msgSend(v6, "folderType") != (id)2
              && objc_msgSend(v6, "folderType") != (id)3;
        }
        v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);
        swift_bridgeObjectRelease(v20);
        *(_QWORD *)&v46 = swift_bridgeObjectRelease(v23).n128_u64[0];
        if ((v45 & 1) == 0)
        {
          v47 = objc_msgSend(v6, "providerDomainID", v46);
          v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
          v50 = v49;

          v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierExternalDeviceFileProvider);
          v53 = v51;
          if (v48 != v52 || v50 != v51)
          {
            v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v50, v52, v51, 0);
            swift_bridgeObjectRelease(v50);
            swift_bridgeObjectRelease(v53);

            return (objc_msgSend(v6, "isTrashed") & 1) == 0
                && (objc_msgSend(v6, "isAnyParentTrashed") & 1) == 0
                && (objc_msgSend(v6, "isAppContainer") & 1) == 0
                && ((objc_msgSend(v6, "doc_isCollaborationInvitation") | v24) & 1) == 0
                && objc_msgSend(v6, "folderType") != (id)2
                && objc_msgSend(v6, "folderType") != (id)3;
          }
          swift_bridgeObjectRelease_n(v50, 2);

          goto LABEL_13;
        }
      }

      goto LABEL_13;
    }
    v25 = v12;
    v26 = v62;
    v27 = _convertNSErrorToError(_:)(v14);

    v28 = v25;
    swift_willThrow(v29);

    v31 = Logger.DocumentManager.unsafeMutableAddressor(v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v31, v2);
    swift_errorRetain(v27);
    swift_unknownObjectRetain(v6);
    swift_errorRetain(v27);
    v32 = swift_unknownObjectRetain(v6);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    v60 = v34;
    if (!os_log_type_enabled(v33, v34))
    {

      swift_errorRelease(v27);
      swift_unknownObjectRelease_n(v6, 2);
      swift_errorRelease(v27);
      swift_errorRelease(v27);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      goto LABEL_13;
    }
    v35 = swift_slowAlloc(22, -1);
    v57 = v28;
    v36 = v35;
    v58 = (uint64_t *)swift_slowAlloc(8, -1);
    v56 = (void *)swift_slowAlloc(32, -1);
    v62 = v56;
    *(_DWORD *)v36 = 136315394;
    v55 = v36 + 4;
    v59 = v33;
    v37 = DOCNode.nodeDescription.getter(ObjectType);
    v39 = v38;
    v61 = sub_1000544FC(v37, v38, (uint64_t *)&v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);
    swift_unknownObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease(v39);
    *(_WORD *)(v36 + 12) = 2112;
    v55 = v36 + 14;
    swift_errorRetain(v27);
    v40 = _swift_stdlib_bridgeErrorToNSError(v27);
    v61 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);
    *v58 = v40;
    swift_errorRelease(v27);
    swift_errorRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v60, "Could not fetch provider domain for %s: %@", (uint8_t *)v36, 0x16u);
    v41 = sub_10006922C(&qword_100643AB0);
    v24 = 1;
    v42 = v58;
    swift_arrayDestroy(v58, 1, v41);
    swift_slowDealloc(v42, -1, -1);
    v43 = v56;
    swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    swift_errorRelease(v27);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v24 = 0;
  }
  return (objc_msgSend(v6, "isTrashed") & 1) == 0
      && (objc_msgSend(v6, "isAnyParentTrashed") & 1) == 0
      && (objc_msgSend(v6, "isAppContainer") & 1) == 0
      && ((objc_msgSend(v6, "doc_isCollaborationInvitation") | v24) & 1) == 0
      && objc_msgSend(v6, "folderType") != (id)2
      && objc_msgSend(v6, "folderType") != (id)3;
}

void sub_10011E1C0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD v15[6];

  v2 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v3 = static os_log_type_t.debug.getter();
  v4 = sub_10006922C((uint64_t *)&unk_100644560);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v5 + 56) = sub_10006922C((uint64_t *)&unk_100643CB0);
  *(_QWORD *)(v5 + 64) = sub_100062698(&qword_100643CC8, (uint64_t *)&unk_100643CB0, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v5 + 32) = a1;
  swift_bridgeObjectRetain(a1);
  os_log(_:dso:log:type:_:)("fetchPublishingURLAction unresolvedHandler %@", 45, 2, &_mh_execute_header, v2, v3, v5);

  swift_bridgeObjectRelease(v5);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v14 = a1;
  else
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v14))
    goto LABEL_13;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v7 = *(_QWORD *)(a1 + 32);
    swift_unknownObjectRetain(v7);
  }
  swift_bridgeObjectRelease(a1);
  ObjectType = swift_getObjectType(v7, v8);
  v10 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  swift_unknownObjectRelease(v7);
  if (v10)
  {
    v11 = objc_msgSend(objc_allocWithZone((Class)FPFetchPublishingURLOperation), "initWithItem:", v10);
    v15[4] = sub_10011E41C;
    v15[5] = 0;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_100175118;
    v15[3] = &unk_1005C8D48;
    v12 = _Block_copy(v15);
    objc_msgSend(v11, "setFetchCompletionBlock:", v12);
    _Block_release(v12);
    v13 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    objc_msgSend(v13, "scheduleAction:", v11);

  }
}

uint64_t sub_10011E41C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  NSURL *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  char v44[8];

  v42 = a2;
  v41 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100643470);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v41 - v10;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v16(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v25 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
    URL._bridgeToObjectiveC()(v26);
    v28 = v27;
    v29 = static UTType.url.getter();
    UTType.identifier.getter(v29);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v41);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    objc_msgSend(v25, "setValue:forPasteboardType:", v28, v32);

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v17 = sub_10000CB4C((uint64_t)v11, &qword_100643470);
  v18 = *(id *)DOCLog.UI.unsafeMutableAddressor(v17);
  v19 = static os_log_type_t.error.getter(v18);
  v20 = sub_10006922C((uint64_t *)&unk_100644560);
  v21 = swift_allocObject(v20, 112, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1004D4CE0;
  sub_1000271D4(a1, (uint64_t)v9, &qword_100643470);
  v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v9, 1, v12);
  if ((_DWORD)v22 == 1)
  {
    sub_10000CB4C((uint64_t)v9, &qword_100643470);
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v23 = URL.path.getter(v22);
    v24 = v34;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  *(_QWORD *)(v21 + 56) = &type metadata for String;
  v35 = sub_10006A638();
  *(_QWORD *)(v21 + 64) = v35;
  if (v24)
    v36 = v23;
  else
    v36 = 0;
  v37 = 0xE000000000000000;
  if (v24)
    v37 = v24;
  *(_QWORD *)(v21 + 32) = v36;
  *(_QWORD *)(v21 + 40) = v37;
  if (!v42)
  {
    v40 = (uint64_t *)(v21 + 72);
    *(_QWORD *)(v21 + 96) = &type metadata for String;
    *(_QWORD *)(v21 + 104) = v35;
    goto LABEL_15;
  }
  swift_getErrorValue(v42, v44, v43);
  v38 = Error.localizedDescription.getter(v43[1], v43[2]);
  v40 = (uint64_t *)(v21 + 72);
  *(_QWORD *)(v21 + 96) = &type metadata for String;
  *(_QWORD *)(v21 + 104) = v35;
  if (!v39)
  {
LABEL_15:
    *v40 = 0;
    v39 = 0xE000000000000000;
    goto LABEL_16;
  }
  *v40 = v38;
LABEL_16:
  *(_QWORD *)(v21 + 80) = v39;
  os_log(_:dso:log:type:_:)("fetchCompletionBlock returned URL: %@ error: %@ unresolvedHandler %@", 68, 2, &_mh_execute_header, v18, v19, v21, v41);

  return swift_bridgeObjectRelease(v21);
}

uint64_t sub_10011E76C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;

  sub_1000271D4(a1, (uint64_t)&v20, &qword_100642730);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_26;
  v1 = sub_10006922C((uint64_t *)&unk_1006444E0);
  if ((swift_dynamicCast(&v19, &v20, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
    return 0;
  v2 = v19;
  if (*(_QWORD *)(v19 + 16) && (v3 = sub_10007EF08(0x7365646F4E636F64, 0xE800000000000000), (v4 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v21 + 1))
  {
LABEL_26:
    sub_10000CB4C((uint64_t)&v20, &qword_100642730);
    return 0;
  }
  v5 = sub_10006922C((uint64_t *)&unk_100643CB0);
  if ((swift_dynamicCast(&v19, &v20, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
  {
    v6 = v19;
    if (v19 >> 62)
      goto LABEL_29;
    v7 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v19);
    while (v7)
    {
      v8 = 4;
      v9 = NSFileProviderItemCapabilitiesAllowsCopyingPublishingURL;
      while (1)
      {
        v10 = v8 - 4;
        if ((v6 & 0xC000000000000001) == 0)
          break;
        v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6);
        v12 = v8 - 3;
        if (__OFADD__(v10, 1))
          goto LABEL_28;
LABEL_19:
        v13 = objc_msgSend(v11, "fpfs_fpItem");
        if (v13
          && (v14 = v13, v15 = (unint64_t)objc_msgSend(v13, "capabilities"), v14, (v9 & v15) != 0)
          && (objc_msgSend(v11, "isTrashed") & 1) == 0)
        {
          v16 = objc_msgSend(v11, "isAnyParentTrashed");
          swift_unknownObjectRelease(v11);
          if ((v16 & 1) == 0)
          {
            swift_bridgeObjectRelease_n(v6, 2);
            return 1;
          }
        }
        else
        {
          swift_unknownObjectRelease(v11);
        }
        ++v8;
        if (v12 == v7)
          goto LABEL_33;
      }
      v11 = *(void **)(v6 + 8 * v8);
      swift_unknownObjectRetain(v11);
      v12 = v8 - 3;
      if (!__OFADD__(v10, 1))
        goto LABEL_19;
LABEL_28:
      __break(1u);
LABEL_29:
      if (v6 < 0)
        v18 = v6;
      else
        v18 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v18);
    }
LABEL_33:
    swift_bridgeObjectRelease_n(v6, 2);
  }
  return 0;
}

double UIPopoverPresentationController.doc_makeUpdateableWithReloadBlock(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, __n128);
  __n128 v10;
  double result;
  _QWORD v12[2];

  sub_10006922C(&qword_100646110);
  v5 = qword_100640D40;
  swift_retain();
  if (v5 != -1)
    swift_once(&qword_100640D40, sub_10011EE48);
  v6 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v2, qword_100643B80);
  KeyPath = swift_getKeyPath(&unk_1004DACD0);
  v8 = swift_allocObject(&unk_1005C7F20, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v12[0] = sub_100066584;
  v12[1] = v8;
  v9 = *(void (**)(_QWORD *, uint64_t, __n128))((swift_isaMask & *v6) + 0x80);
  v10 = swift_retain();
  v9(v12, KeyPath, v10);

  *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

void sub_10011EAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t (*v8)();
  void (*v9)(_QWORD *, uint64_t);
  _QWORD v10[2];

  sub_10006922C(&qword_100646110);
  if (qword_100640D40 != -1)
    swift_once(&qword_100640D40, sub_10011EE48);
  v5 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v2);
  KeyPath = swift_getKeyPath(&unk_1004DACD0);
  if (a1)
  {
    v7 = swift_allocObject(&unk_1005C9348, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = a2;
    v8 = sub_10010DF60;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v10[0] = v8;
  v10[1] = v7;
  v9 = *(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v5) + 0x80);
  sub_10008BA00(a1, a2);
  v9(v10, KeyPath);
  sub_100087534(a1, a2);

}

Swift::Void __swiftcall UIPopoverPresentationController.doc_reloadableSourceInfoDidChange()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t KeyPath;
  void (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  _QWORD v6[2];

  sub_10006922C(&qword_100646110);
  if (qword_100640D40 != -1)
    swift_once(&qword_100640D40, sub_10011EE48);
  v1 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0);
  KeyPath = swift_getKeyPath(&unk_1004DACD0);
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v1) + 0x78))(v6);
  swift_release(KeyPath);

  v3 = (void (*)(__n128))v6[0];
  if (v6[0])
  {
    v4 = v6[1];
    v5 = swift_retain();
    v3(v5);
    sub_100087534((uint64_t)v3, v4);
    sub_100087534((uint64_t)v3, v4);
  }
}

uint64_t (*sub_10011ECB8())()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  sub_10006922C(&qword_100646110);
  if (qword_100640D40 != -1)
    swift_once(&qword_100640D40, sub_10011EE48);
  v1 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0);
  KeyPath = swift_getKeyPath(&unk_1004DACD0);
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v1) + 0x78))(v7);
  swift_release(KeyPath);

  v3 = v7[0];
  if (!v7[0])
    return 0;
  v4 = v7[1];
  v5 = swift_allocObject(&unk_1005C9320, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  return sub_10010DF60;
}

Swift::Void __swiftcall UIPopoverPresentationController.doc_invalidateUpdateableWithReloadBlock()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t KeyPath;
  _QWORD v3[2];

  sub_10006922C(&qword_100646110);
  if (qword_100640D40 != -1)
    swift_once(&qword_100640D40, sub_10011EE48);
  v1 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0);
  KeyPath = swift_getKeyPath(&unk_1004DACD0);
  v3[0] = 0;
  v3[1] = 0;
  (*(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v1) + 0x80))(v3, KeyPath);

}

uint64_t sub_10011EE48()
{
  uint64_t result;

  sub_10006922C(&qword_100646110);
  result = static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)(0x656761726F7473, 0xE700000000000000);
  qword_100643B80 = result;
  return result;
}

uint64_t (*sub_10011EE90@<X0>(uint64_t (**a1)()@<X8>))()
{
  uint64_t (*result)();
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t (*v6)();

  result = sub_10011ECB8();
  if (result)
  {
    v4 = result;
    v5 = v3;
    result = (uint64_t (*)())swift_allocObject(&unk_1005C92F8, 32, 7);
    *((_QWORD *)result + 2) = v4;
    *((_QWORD *)result + 3) = v5;
    v6 = sub_10010DF60;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

void sub_10011EEF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject(&unk_1005C92D0, 32, 7);
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_100066584;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_10008BA00(v1, v2);
  sub_10011EAD0((uint64_t)v4, v3);
}

uint64_t sub_10011EF7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t DOCTestingPolicies.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for DOCPresentationLog()
{
  return objc_opt_self(_TtC5Files18DOCPresentationLog);
}

double sub_10011EFD0(char a1, uint64_t a2, void *a3)
{
  Swift::String v6;
  double result;

  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6._countAndFlagsBits = a2;
  v6._object = a3;
  String.append(_:)(v6);
  if ((a1 & 1) != 0)
    sub_10012B03C(0xD000000000000024, 0x800000010050FD50);
  *(_QWORD *)&result = swift_bridgeObjectRelease(0x800000010050FD50).n128_u64[0];
  return result;
}

void sub_10011F064(UIModalPresentationStyle a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  Swift::String v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  void (*v24)(void);
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD *);
  id v29;
  id v30;
  _QWORD v34[3];
  _QWORD v35[3];
  _BYTE v36[24];

  v6 = a6;
  v9 = (_BYTE *)(a4 + 16);
  v10 = a6 + 16;
  swift_beginAccess(a4 + 16, v36, 0, 0);
  v11 = *(_BYTE *)(a4 + 16);
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(79);
  v12._countAndFlagsBits = 0xD00000000000004DLL;
  v12._object = (void *)0x800000010050FD80;
  String.append(_:)(v12);
  v13 = objc_msgSend(a5, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  sub_10011EFD0(v11, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_beginAccess(v10, v35, 0, 0);
  LOBYTE(v6) = *(_BYTE *)(v6 + 16);
  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(77);
  v18._countAndFlagsBits = 0xD00000000000004BLL;
  v18._object = (void *)0x800000010050FDD0;
  String.append(_:)(v18);
  v19 = objc_msgSend(a5, "description");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v22);
  sub_10011EFD0(v6, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (a1 == UIModalPresentationPopover)
  {
    v24 = (void (*)(void))a2;
    v25 = a2 == 0;
    if (a2)
    {
      v26 = swift_allocObject(&unk_1005C81A0, 32, 7);
      v27 = a3;
      *(_QWORD *)(v26 + 16) = a2;
      *(_QWORD *)(v26 + 24) = a3;
      v28 = sub_10012B584;
    }
    else
    {
      v28 = 0;
      v26 = 0;
      v27 = a3;
    }
    sub_10008BA00(a2, v27);
    sub_100087534((uint64_t)v28, v26);
  }
  else
  {
    v25 = 0;
    v24 = (void (*)(void))a2;
    v27 = a3;
  }
  sub_10011EFD0(v25, 0xD000000000000035, (void *)0x800000010050FE20);
  swift_beginAccess(v9, v34, 1, 0);
  *v9 = 1;
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(a1);
  if (objc_msgSend(a5, "modalPresentationStyle") == (id)7 && v24)
  {
    v29 = objc_msgSend(a5, "popoverPresentationController", swift_retain().n128_f64[0]);
    sub_10011EFD0(v29 == 0, 0xD000000000000042, (void *)0x800000010050FE60);
    if (v29)
    {
      v30 = v29;
      v24();

      sub_100087534((uint64_t)v24, v27);
    }
    else
    {
      sub_100087534((uint64_t)v24, v27);
    }
  }
}

id sub_10011F378(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  Swift::String v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  double v21;
  _QWORD v24[3];
  _QWORD v25[3];
  _BYTE v26[24];

  v7 = a3 + 16;
  swift_beginAccess(a1 + 16, v26, 0, 0);
  v8 = *(_BYTE *)(a1 + 16);
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(66);
  v9._countAndFlagsBits = 0xD000000000000040;
  v9._object = (void *)0x800000010050FCC0;
  String.append(_:)(v9);
  v10 = objc_msgSend(a2, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  sub_10011EFD0((v8 & 1) == 0, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_beginAccess(v7, v25, 0, 0);
  LOBYTE(v11) = *(_BYTE *)(a3 + 16);
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(60);
  v15._object = (void *)0x800000010050FD10;
  v15._countAndFlagsBits = 0xD00000000000003ALL;
  String.append(_:)(v15);
  v16 = objc_msgSend(a2, "description");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  sub_10011EFD0(v11, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  *(_QWORD *)&v21 = swift_beginAccess(v7, v24, 1, 0).n128_u64[0];
  *(_BYTE *)(a3 + 16) = 1;
  return objc_msgSend(*(id *)(a4 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController), "presentViewController:animated:completion:", a2, 1, 0, v21);
}

id sub_10011F570(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;

  v12 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem);
  if (v12)
  {
    v13 = swift_allocObject(&unk_1005C80B0, 24, 7);
    *(_QWORD *)(v13 + 16) = v12;
    swift_unknownObjectRetain_n(v12, 2);
    sub_10011F064(UIModalPresentationPopover, (uint64_t)sub_10012B508, v13, a4, a5, a6);
    swift_unknownObjectRelease(v12);
    swift_release(v13);
  }
  else if (a1)
  {
    v17 = (_QWORD *)swift_allocObject(&unk_1005C8088, 48, 7);
    v17[2] = a1;
    v17[3] = a5;
    v17[4] = a7;
    v17[5] = a8;
    v18 = a1;
    v19 = a5;
    swift_unknownObjectRetain(a7);
    v20 = a8;
    sub_10011F064(UIModalPresentationPopover, (uint64_t)sub_10012B4FC, (uint64_t)v17, a4, v19, a6);

    swift_release(v17);
  }
  else
  {
    sub_10011F064(UIModalPresentationFormSheet, 0, 0, a4, a5, a6);
  }
  return sub_10011F378(a4, a5, a6, a3);
}

uint64_t sub_10011F6D4(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t KeyPath;
  uint64_t v17;
  void (*v18)(_QWORD *, uint64_t, __n128);
  __n128 v19;
  __n128 v20;
  _QWORD v22[2];
  __objc2_prot *v23;

  objc_msgSend(a1, "setSourceView:", a2);
  objc_msgSend(a2, "bounds");
  objc_msgSend(a1, "setSourceRect:");
  v23 = &OBJC_PROTOCOL___UIPopoverPresentationControllerDelegate;
  v10 = swift_dynamicCastObjCProtocolConditional(a3, 1, &v23);
  if (v10)
    objc_msgSend(a1, "setDelegate:", v10);
  v11 = swift_allocObject(&unk_1005C80D8, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  v12 = (_QWORD *)swift_allocObject(&unk_1005C8100, 40, 7);
  v12[2] = v11;
  v12[3] = a4;
  v12[4] = a5;
  sub_10006922C(&qword_100646110);
  v13 = qword_100640D40;
  swift_retain();
  swift_unknownObjectRetain(a4);
  v14 = a5;
  swift_retain();
  if (v13 != -1)
    swift_once(&qword_100640D40, sub_10011EE48);
  v15 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(a1, qword_100643B80);
  KeyPath = swift_getKeyPath(&unk_1004DACD0);
  v17 = swift_allocObject(&unk_1005C8128, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_10012B570;
  *(_QWORD *)(v17 + 24) = v12;
  v22[0] = sub_10010DF60;
  v22[1] = v17;
  v18 = *(void (**)(_QWORD *, uint64_t, __n128))((swift_isaMask & *v15) + 0x80);
  v19 = swift_retain();
  v18(v22, KeyPath, v19);
  swift_release(v11);

  return swift_release_n(v12, 2, v20);
}

void sub_10011F8B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD aBlock[5];
  uint64_t v14;
  char v15[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = swift_allocObject(&unk_1005C8150, 24, 7);
    *(_QWORD *)(v9 + 16) = v8;
    aBlock[4] = sub_10012B57C;
    v14 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100083540;
    aBlock[3] = &unk_1005C8168;
    v10 = _Block_copy(aBlock);
    v11 = v14;
    v12 = v8;
    swift_release(v11);
    objc_msgSend(a2, "getViewFor:waitForNewThumbnail::", a3, 0, v10);
    _Block_release(v10);

  }
}

void sub_10011F9AC(void *a1, uint64_t a2, void *a3)
{
  id v4;

  if (a1)
  {
    v4 = a1;
    objc_msgSend(a3, "setSourceView:", v4);
    objc_msgSend(v4, "bounds");
    objc_msgSend(a3, "setSourceRect:");

  }
}

void sub_10011FA18(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  uint64_t v10;
  objc_class *v11;
  _BYTE *v12;
  id v13;
  char *v14;
  id v15;
  Class isa;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  char *v26;
  id v27;
  char *v28;
  _QWORD *v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  UIModalPresentationStyle v44;
  uint64_t v45;
  UIModalPresentationStyle v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  __objc2_prot *v57;
  _QWORD v58[3];
  objc_super v59;

  v9 = *(void **)&a1[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
  v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting];
  v11 = (objc_class *)type metadata accessor for DOCServiceInfoViewController();
  v12 = objc_allocWithZone(v11);
  v12[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_configuration] = v9;
  v13 = objc_allocWithZone((Class)DOCItemInfoViewController);
  swift_unknownObjectRetain(v10);
  v14 = v12;
  v15 = v9;
  swift_bridgeObjectRetain(a2);
  sub_10006922C((uint64_t *)&unk_1006424B0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v13, "initWithNodes:configuration:actionReporting:", isa, v15, v10, swift_bridgeObjectRelease(a2).n128_f64[0]);

  *(_QWORD *)&v14[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] = v17;
  v18 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v17);
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController] = v18;
  objc_msgSend(v18, "_setBuiltinTransitionStyle:", 1);
  if ((a3 & 1) != 0)
  {
    v19 = v17;
    objc_msgSend(v19, "displayTagView");

  }
  v59.receiver = v14;
  v59.super_class = v11;
  v20 = objc_msgSendSuper2(&v59, "init");

  swift_unknownObjectRelease(v10);
  v21 = (_QWORD *)swift_allocObject(&unk_1005C7FC0, 56, 7);
  v21[2] = a2;
  v21[3] = a4;
  v22 = a5;
  v21[4] = v20;
  v21[5] = a5;
  v21[6] = a1;
  swift_bridgeObjectRetain_n(a2, 3);
  v23 = v20;
  swift_unknownObjectRetain_n(a5, 3);
  v24 = a1;
  v25 = v23;
  v26 = v24;
  v27 = v25;
  v28 = v26;
  v29 = (_QWORD *)((uint64_t (*)(void))UIViewController.associatedObjectStorage.getter)();
  KeyPath = swift_getKeyPath(&unk_1004DAD48);
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v29) + 0x78))(v58);
  swift_release(KeyPath);

  v31 = v58[0];
  v32 = swift_release(v58[0]);
  if (!v31)
  {
    v57 = &OBJC_PROTOCOL____TtP5Files26DOCPresentationPreheatable__0;
    v32 = swift_dynamicCastObjCProtocolConditional(v27, 1, &v57);
    if (v32)
    {
      v33 = v32;
      v34 = v27;
      v35 = (_QWORD *)((uint64_t (*)(void))UIViewController.associatedObjectStorage.getter)();
      v36 = swift_getKeyPath(&unk_1004DAD48);
      v37 = type metadata accessor for DOCPresentationPreheatController();
      v38 = swift_allocObject(v37, 41, 7);
      *(_QWORD *)(v38 + 16) = 0x3FE0000000000000;
      v39 = swift_unknownObjectWeakInit(v38 + 24);
      *(_QWORD *)(v38 + 32) = _swiftEmptyArrayStorage;
      *(_BYTE *)(v38 + 40) = 0;
      swift_unknownObjectWeakAssign(v39, v33);
      v58[0] = v38;
      v22 = a5;
      (*(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v35) + 0x80))(v58, v36);

    }
  }
  v40 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v32);
  v41 = swift_getKeyPath(&unk_1004DAD48);
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v40) + 0x78))(v58);
  swift_release(v41);

  v42 = (_QWORD *)v58[0];
  if (v58[0])
  {
    if (*(_BYTE *)(v58[0] + 40) == 2)
    {
      if ((unint64_t)a2 >> 62)
      {
        if (a2 < 0)
          v55 = a2;
        else
          v55 = a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v43 = _CocoaArrayWrapper.endIndex.getter(v55);
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        v43 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v43 >= 2)
        v44 = UIModalPresentationFormSheet;
      else
        v44 = UIModalPresentationPopover;
      sub_10012B204(v27, v44, v22, v28);
      swift_bridgeObjectRelease(a2);
      swift_release(v21);
      v21 = v42;
    }
    else
    {
      v47 = swift_allocObject(&unk_1005C7FE8, 32, 7);
      *(_QWORD *)(v47 + 16) = sub_10012B440;
      *(_QWORD *)(v47 + 24) = v21;
      v48 = v42 + 4;
      swift_beginAccess(v42 + 4, v58, 33, 0);
      v49 = (_QWORD *)v42[4];
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v49);
      v42[4] = v49;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v49 = sub_10008190C(0, v49[2] + 1, 1, v49);
        *v48 = v49;
      }
      v52 = v49[2];
      v51 = v49[3];
      if (v52 >= v51 >> 1)
      {
        v49 = sub_10008190C((_QWORD *)(v51 > 1), v52 + 1, 1, v49);
        *v48 = v49;
      }
      v49[2] = v52 + 1;
      v53 = &v49[2 * v52];
      v53[4] = sub_10010DF60;
      v53[5] = v47;
      swift_endAccess(v58);
      sub_1000E5CDC();
      swift_bridgeObjectRelease(a2);
      swift_release(v21);
      v21 = v42;
      v22 = a5;
    }
  }
  else
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v54 = a2;
      else
        v54 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v45 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v45 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v45 >= 2)
      v46 = UIModalPresentationFormSheet;
    else
      v46 = UIModalPresentationPopover;
    sub_10012B204(v27, v46, v22, v28);
    swift_bridgeObjectRelease(a2);
  }
  swift_release(v21);
  swift_bridgeObjectRelease(a2);

  swift_unknownObjectRelease_n(v22, 2);
}

void sub_10011FF94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char *a5)
{
  uint64_t v9;
  UIModalPresentationStyle v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 >= 2)
    v10 = UIModalPresentationFormSheet;
  else
    v10 = UIModalPresentationPopover;
  sub_10012B204(a3, v10, a4, a5);
}

uint64_t sub_100120024(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[5];
  uint64_t v48;

  v40 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  __chkstk_darwin(v3);
  v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTimeInterval(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v41 - 8);
  v13 = __chkstk_darwin(v41);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v37 - v16;
  v18 = *(void **)(a1 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController);
  v19 = type metadata accessor for DOCItemCollectionViewController(0);
  result = swift_dynamicCastClass(v18, v19);
  if (result)
  {
    v21 = result;
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v22 = v18;
    v39 = static OS_dispatch_queue.main.getter(v22);
    static DispatchTime.now()(v39);
    *v11 = 250;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchTimeInterval.milliseconds(_:), v8);
    + infix(_:_:)(v15, v11);
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    v38 = *(void (**)(char *, uint64_t))(v12 + 8);
    v23 = v41;
    v38(v15, v41);
    v24 = swift_allocObject(&unk_1005C8B00, 32, 7);
    v25 = v40;
    *(_QWORD *)(v24 + 16) = v21;
    *(_QWORD *)(v24 + 24) = v25;
    aBlock[4] = sub_10012B858;
    v48 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005C8B18;
    v26 = _Block_copy(aBlock);
    v27 = v48;
    v28 = v22;
    v29 = v25;
    v30 = swift_release(v27);
    static DispatchQoS.unspecified.getter(v30);
    aBlock[0] = _swiftEmptyArrayStorage;
    v31 = sub_10008BAAC();
    v32 = sub_10006922C((uint64_t *)&unk_100647540);
    v33 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v34 = v44;
    v35 = v46;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v46, v31);
    v36 = (void *)v39;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v7, v34, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
    return ((uint64_t (*)(char *, uint64_t))v38)(v17, v23);
  }
  return result;
}

uint64_t sub_10012036C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock[5];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v46 = a4;
  v7 = type metadata accessor for Logger(0);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  __chkstk_darwin(v7);
  v47 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v12);
  v16 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v45 - v17;
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v19 = sub_10000CB4C((uint64_t)v11, &qword_100643470);
    v20 = Logger.Application.unsafeMutableAddressor(v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v20, v49);
    v21 = a3;
    swift_errorRetain(a2);
    v22 = v21;
    v23 = swift_errorRetain(a2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(22, -1);
      v27 = (_QWORD *)swift_slowAlloc(8, -1);
      v46 = swift_slowAlloc(32, -1);
      aBlock[0] = v46;
      *(_DWORD *)v26 = 138412546;
      v52 = (uint64_t)v22;
      v28 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
      *v27 = v22;

      *(_WORD *)(v26 + 12) = 2080;
      v52 = a2;
      swift_errorRetain(a2);
      v29 = sub_10006922C((uint64_t *)&unk_1006434A0);
      v30 = String.init<A>(describing:)(&v52, v29);
      v32 = v31;
      v52 = sub_1000544FC(v30, v31, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
      swift_bridgeObjectRelease(v32);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to fetch URL for: %@ error: %s", (uint8_t *)v26, 0x16u);
      v33 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v27, 1, v33);
      swift_slowDealloc(v27, -1, -1);
      v34 = v46;
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {

      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v47, v49);
  }
  else
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v35(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
    v36 = *(unsigned __int8 *)(v13 + 80);
    v37 = (v36 + 16) & ~v36;
    v38 = (v14 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject(&unk_1005C83F8, v38 + 8, v36 | 7);
    v35((char *)(v39 + v37), v16, v12);
    v40 = (void *)v46;
    *(_QWORD *)(v39 + v38) = v46;
    aBlock[4] = (uint64_t)sub_10012B6A0;
    v51 = v39;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005C8410;
    v41 = _Block_copy(aBlock);
    v42 = v51;
    v43 = v40;
    swift_release(v42);
    DOCRunInMainThread(v41);
    _Block_release(v41);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

void sub_1001207AC(uint64_t a1, uint64_t a2)
{
  id v3;
  NSURL *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentSharingController());
  URL._bridgeToObjectiveC()(v4);
  v6 = v5;
  v7 = objc_msgSend(v3, "initWithFileURL:", v5);

  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationFormSheet);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController), "presentViewController:animated:completion:", v7, 1, 0);

}

id sub_100120BBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDocumentSharingController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCDocumentSharingController()
{
  return objc_opt_self(_TtC5FilesP33_9E9EA9120FD3595FAD4BD2167103835628DOCDocumentSharingController);
}

uint64_t sub_100120C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = *(void (**)(uint64_t, _QWORD *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v7);
  v11[3] = swift_getObjectType(a3, v9);
  v11[0] = a3;
  swift_retain();
  swift_unknownObjectRetain(a3);
  v6(v8, v11);
  swift_release(v5);
  swift_bridgeObjectRelease(v8);
  return sub_100068588(v11);
}

id sub_100120CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  _QWORD aBlock[5];
  uint64_t v18;
  Swift::String v19;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierTrash);
  v2 = v1;
  result = (id)_DocumentManagerBundle(v0);
  if (result)
  {
    v4 = result;
    v19._object = (void *)0x800000010050E520;
    v5._countAndFlagsBits = 0x6574656C6544;
    v5._object = (void *)0xE600000000000000;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v19._countAndFlagsBits = 0xD00000000000001BLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v19)._object;

    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = sub_10011884C;
    v18 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100120C10;
    aBlock[3] = &unk_1005C8DE8;
    v12 = _Block_copy(aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v18);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    objc_msgSend(v13, "setImage:", v15);
    objc_msgSend(v13, "setMenuSortOrder:", 27);
    if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet >= 2uLL)
    {
      v16 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1;
      if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~(UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1)) == 0)
      {
LABEL_7:
        objc_msgSend(v13, "setAvailability:", v16);
        objc_msgSend(v13, "setActionStyle:", 1);
        objc_msgSend(v13, "setRequiresFullyFormedItems:", 0);
        return v13;
      }
    }
    else
    {
      v16 = 1;
      if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL)
        goto LABEL_7;
    }
    v16 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_100120F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;
  Swift::String v18;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierUntrash);
  v2 = v1;
  result = (id)_DocumentManagerBundle(v0);
  if (result)
  {
    v4 = result;
    v18._object = (void *)0x8000000100510330;
    v5._countAndFlagsBits = 0x7265766F636552;
    v5._object = (void *)0xE700000000000000;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0xD000000000000048;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v18)._object;

    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = sub_100118B9C;
    v17 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100120C10;
    aBlock[3] = &unk_1005C8DC0;
    v12 = _Block_copy(aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v17);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    objc_msgSend(v13, "setImage:", v15);
    objc_msgSend(v13, "setMenuSortOrder:", 27);
    objc_msgSend(v13, "setRequiresFullyFormedItems:", 0);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100121134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void **aBlock;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  void *v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  Swift::String v25;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierRename);
  v2 = v1;
  result = (id)_DocumentManagerBundle(v0);
  if (result)
  {
    v4 = result;
    v25._object = (void *)0x8000000100510420;
    v5._countAndFlagsBits = 0x656D616E6552;
    v5._object = (void *)0xE600000000000000;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0xD000000000000044;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v25)._object;

    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v23 = sub_1001192D0;
    v24 = 0;
    aBlock = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_100120C10;
    v22 = &unk_1005C90B8;
    v12 = _Block_copy(&aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v24);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    objc_msgSend(v13, "setImage:", v15);
    objc_msgSend(v13, "setMenuSortOrder:", 3);
    objc_msgSend(v13, "setSupportsMultipleItems:", 0);
    if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet >= 2uLL)
    {
      v16 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1;
      if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~(UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1)) == 0)
      {
LABEL_7:
        objc_msgSend(v13, "setAvailability:", v16);
        v23 = (void (*)(uint64_t, uint64_t))sub_1001199E8;
        v24 = 0;
        aBlock = _NSConcreteStackBlock;
        v20 = 1107296256;
        v21 = sub_100068430;
        v22 = &unk_1005C90E0;
        v17 = _Block_copy(&aBlock);
        v18 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v17);
        _Block_release(v17);
        swift_release(v24);
        objc_msgSend(v13, "setFilteringPredicate:", v18);

        return v13;
      }
    }
    else
    {
      v16 = 1;
      if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL)
        goto LABEL_7;
    }
    v16 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_100121418(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *object;
  uint64_t v9;
  id result;
  void *v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  NSString v24;
  void *v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  void **aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  void *v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;

  if (a1 < 2)
  {
    result = (id)_DocumentManagerBundle(a1);
    if (result)
    {
      v16 = result;
      v40._countAndFlagsBits = 0xD00000000000005BLL;
      v40._object = (void *)0x8000000100510240;
      v17._object = (void *)0x8000000100510220;
      v17._countAndFlagsBits = 0xD000000000000013;
      v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v18.value._object = (void *)0xEB00000000656C62;
      v19._countAndFlagsBits = 1702260557;
      v19._object = (void *)0xE400000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v40)._object;

      v15 = 0;
LABEL_6:
      static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierMove);
      v21 = v20;
      v22 = objc_allocWithZone((Class)UIDocumentBrowserAction);
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
      v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v37 = sub_1001199EC;
      v38 = 0;
      aBlock = _NSConcreteStackBlock;
      v34 = 1107296256;
      v35 = sub_100120C10;
      v36 = &unk_1005C8D70;
      v25 = _Block_copy(&aBlock);
      v26 = objc_msgSend(v22, "initWithIdentifier:localizedTitle:unresolvedHandler:", v23, v24, v25);

      _Block_release(v25);
      swift_release(v38);
      if (v15)
      {
        v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v15);
      }
      else
      {
        v27 = 0;
      }
      objc_msgSend(v26, "setLocalizedCompactTitle:", v27);

      v28 = String._bridgeToObjectiveC()();
      v29 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v28);

      objc_msgSend(v26, "setImage:", v29);
      objc_msgSend(v26, "setMenuSortOrder:", 13);
      if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet >= 2uLL)
      {
        v30 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1;
        if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~(UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1)) == 0)
        {
LABEL_14:
          objc_msgSend(v26, "setAvailability:", v30);
          v37 = (void (*)(uint64_t, uint64_t))sub_1001199E8;
          v38 = 0;
          aBlock = _NSConcreteStackBlock;
          v34 = 1107296256;
          v35 = sub_100068430;
          v36 = &unk_1005C8D98;
          v31 = _Block_copy(&aBlock);
          v32 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v31);
          _Block_release(v31);
          swift_release(v38);
          objc_msgSend(v26, "setFilteringPredicate:", v32);

          return v26;
        }
      }
      else
      {
        v30 = 1;
        if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL)
          goto LABEL_14;
      }
      v30 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
      goto LABEL_14;
    }
  }
  else
  {
    v2._countAndFlagsBits = 0xD000000000000023;
    v3._countAndFlagsBits = 0xD00000000000005ELL;
    v2._object = (void *)0x80000001005102A0;
    v3._object = (void *)0x80000001005102D0;
    v4 = DOCLocalizedDictionaryString(_:comment:)(v2, v3);
    v5 = sub_10006922C((uint64_t *)&unk_100644560);
    v6 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v6 + 56) = &type metadata for Int;
    *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v6 + 32) = a1;
    static String.localizedStringWithFormat(_:_:)(v4._countAndFlagsBits, v4._object, v6);
    object = v7;
    swift_bridgeObjectRelease(v4._object);
    v9 = swift_bridgeObjectRelease(v6);
    result = (id)_DocumentManagerBundle(v9);
    if (result)
    {
      v11 = result;
      v39._countAndFlagsBits = 0xD00000000000005BLL;
      v39._object = (void *)0x8000000100510240;
      v12._object = (void *)0x8000000100510220;
      v12._countAndFlagsBits = 0xD000000000000013;
      v13.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v13.value._object = (void *)0xEB00000000656C62;
      v14._countAndFlagsBits = 1702260557;
      v14._object = (void *)0xE400000000000000;
      v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v39)._object;

      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100121880(uint64_t a1)
{
  id result;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  void **aBlock;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  void *v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v2 = result;
    v24._object = (void *)0x8000000100510150;
    v3._countAndFlagsBits = 0x6E694C2079706F43;
    v3._object = (void *)0xE90000000000006BLL;
    v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0xD00000000000004ELL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v24)._object;

    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierCopySharedLink);
    v8 = v7;
    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v22 = sub_10011E1C0;
    v23 = 0;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100120C10;
    v21 = &unk_1005C8CF8;
    v12 = _Block_copy(&aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v23);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    objc_msgSend(v13, "setImage:", v15);
    objc_msgSend(v13, "setPerformActionExitsEditMode:", 0);
    objc_msgSend(v13, "setSupportsMultipleItems:", 0);
    objc_msgSend(v13, "setNavigationSide:", 2);
    objc_msgSend(v13, "setAvailability:", 1);
    objc_msgSend(v13, "setMenuSortOrder:", 16);
    v22 = sub_10011E76C;
    v23 = 0;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100068430;
    v21 = &unk_1005C8D20;
    v16 = _Block_copy(&aBlock);
    v17 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v16);
    _Block_release(v16);
    swift_release(v23);
    objc_msgSend(v13, "setFilteringPredicate:", v17);

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100121B54(uint64_t a1, uint64_t a2)
{
  Swift::String v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSString v19;
  void *v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  void **aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  void *v31;
  void *v32;
  uint64_t v33;
  Swift::String v34;

  swift_getObjectType(a1, a2);
  v3 = DOCNode.displayName(withHiddenPathExtension:)(1);
  result = (id)_DocumentManagerBundle(v3._countAndFlagsBits);
  if (result)
  {
    v5 = result;
    v34._object = (void *)0x800000010050FF40;
    v6._object = (void *)0x800000010050FF20;
    v6._countAndFlagsBits = 0x1000000000000010;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v34._countAndFlagsBits = 0xD000000000000056;
    v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v34);

    v10 = sub_10006922C((uint64_t *)&unk_100644560);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v11 + 56) = &type metadata for String;
    *(_QWORD *)(v11 + 64) = sub_10006A638();
    *(Swift::String *)(v11 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)(v9._countAndFlagsBits, v9._object, v11);
    v13 = v12;
    swift_bridgeObjectRelease(v9._object);
    swift_bridgeObjectRelease(v11);
    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierMoveToNamedFolder);
    v15 = v14;
    v16 = swift_allocObject(&unk_1005C8358, 24, 7);
    *(_QWORD *)(v16 + 16) = a1;
    v17 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_unknownObjectRetain(a1);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v32 = sub_10012B5E0;
    v33 = v16;
    aBlock = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_100120C10;
    v31 = &unk_1005C8370;
    v20 = _Block_copy(&aBlock);
    v21 = objc_msgSend(v17, "initWithIdentifier:localizedTitle:unresolvedHandler:", v18, v19, v20);

    _Block_release(v20);
    swift_release(v33);
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

    objc_msgSend(v21, "setImage:", v23);
    objc_msgSend(v21, "setMenuSortOrder:", 14);
    objc_msgSend(v21, "setAvailability:", 1);
    v24 = swift_allocObject(&unk_1005C83A8, 24, 7);
    *(_QWORD *)(v24 + 16) = a1;
    v32 = sub_10012B5E8;
    v33 = v24;
    aBlock = _NSConcreteStackBlock;
    v29 = 1107296256;
    v30 = sub_100068430;
    v31 = &unk_1005C83C0;
    v25 = _Block_copy(&aBlock);
    v26 = (void *)objc_opt_self(NSPredicate);
    swift_unknownObjectRetain(a1);
    v27 = objc_msgSend(v26, "predicateWithBlock:", v25);
    _Block_release(v25);
    swift_release(v33);
    objc_msgSend(v21, "setFilteringPredicate:", v27);

    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100121EC8(uint64_t a1, uint64_t a2)
{
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  void *v15;
  id v16;
  _QWORD aBlock[5];
  uint64_t v18;
  Swift::String v19;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v5 = result;
    v19._object = (void *)0x8000000100510510;
    v6._countAndFlagsBits = 1852141647;
    v6._object = (void *)0xE400000000000000;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v19._countAndFlagsBits = 0xD00000000000004FLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v19)._object;

    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierMultipleSelection);
    v11 = v10;
    v12 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_retain(a2);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = a1;
    v18 = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003A7858;
    aBlock[3] = &unk_1005C9298;
    v15 = _Block_copy(aBlock);
    v16 = objc_msgSend(v12, "initWithIdentifier:localizedTitle:resolvedHandler:", v13, v14, v15);

    _Block_release(v15);
    swift_release(v18);
    objc_msgSend(v16, "setSupportsMultipleItems:", 1);
    objc_msgSend(v16, "setNavigationSide:", 3);
    objc_msgSend(v16, "setAvailability:", 2);
    objc_msgSend(v16, "setStyle:", 2);
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001220A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  _QWORD aBlock[5];
  uint64_t v15;
  Swift::String v16;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierUntrash);
  v2 = v1;
  result = (id)_DocumentManagerBundle(v0);
  if (result)
  {
    v4 = result;
    v16._object = (void *)0x80000001005104D0;
    v5._countAndFlagsBits = 0x207265766F636552;
    v5._object = (void *)0xEB000000006C6C41;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v16._countAndFlagsBits = 0xD000000000000030;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v16)._object;

    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = sub_100118FB0;
    v15 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100120C10;
    aBlock[3] = &unk_1005C9270;
    v12 = _Block_copy(aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v15);
    objc_msgSend(v13, "setMenuSortOrder:", 27);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10012224C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  void **aBlock;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  void *v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierMixedDelete);
  v2 = v1;
  result = (id)_DocumentManagerBundle(v0);
  if (result)
  {
    v4 = result;
    v24._object = (void *)0x800000010050E520;
    v5._countAndFlagsBits = 0x6574656C6544;
    v5._object = (void *)0xE600000000000000;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0xD00000000000001BLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v24)._object;

    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v22 = sub_10011CBC8;
    v23 = 0;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100120C10;
    v21 = &unk_1005C8870;
    v12 = _Block_copy(&aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v23);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    objc_msgSend(v13, "setImage:", v15);
    objc_msgSend(v13, "setAvailability:", 0);
    objc_msgSend(v13, "setSupportsMultipleItems:", 1);
    objc_msgSend(v13, "setActionStyle:", 1);
    objc_msgSend(v13, "setRequiresFullyFormedItems:", 0);
    v22 = sub_10011CE0C;
    v23 = 0;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100068430;
    v21 = &unk_1005C8898;
    v16 = _Block_copy(&aBlock);
    v17 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v16);
    _Block_release(v16);
    swift_release(v23);
    objc_msgSend(v13, "setFilteringPredicate:", v17);

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_100122508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
      v13 = v2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v2 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_13:
          __break(1u);
          return _swiftEmptyArrayStorage;
        }
LABEL_9:
        v8 = objc_msgSend(v7, "isShared", v13);
        if ((_DWORD)v8)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
          v9 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
          v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
          specialized ContiguousArray._endMutation()(v10);
          v6 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
          swift_unknownObjectRelease(v7);
        }
        ++v5;
        if (v2 == v4)
          return _swiftEmptyArrayStorage;
      }
      if (v5 < *(_QWORD *)(v6 + 16))
        break;
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v12 = a1;
      else
        v12 = a1 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(void **)(a1 + 8 * v5 + 32);
    swift_unknownObjectRetain(v7);
    v2 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_13;
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100122678(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = v3;
      v9 = objc_msgSend(v5, "effectiveParentItemIdentifier");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
      if (v10 == v13 && v12 == v14)
      {

        swift_bridgeObjectRelease_n(v12, 2);
      }
      else
      {
        v16 = v14;
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);

        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v16);
        if ((v17 & 1) == 0)
        {
          v18 = 0;
          goto LABEL_23;
        }
      }
      ++v4;
      v3 = v8;
      if (v7 == v8)
      {
        v18 = 1;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v18 = 1;
LABEL_23:
  swift_bridgeObjectRelease(a1);
  return v18;
}

id sub_100122810(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id result;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v6 = swift_allocObject(&unk_1005C82E0, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2;
    swift_retain_n(a3, 2);
    v9 = v8;
    if (v7)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
LABEL_20:
    swift_beginAccess(a3 + 16, aBlock, 1, 0);
    v26 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = 0;
    swift_unknownObjectRelease(v26);
    OS_dispatch_semaphore.signal()();

    swift_release(v6);
    return (id)swift_release(a3);
  }
  if (a1 < 0)
    v8 = (id)a1;
  else
    v8 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  v23 = a2;
  swift_retain_n(a3, 2);
  v24 = v23;
  swift_bridgeObjectRetain(a1);
  v25 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(a1);
  if (v25 <= 0)
    goto LABEL_20;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v8))
  {
    swift_bridgeObjectRelease(a1);
    v10 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  v10 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    v11 = *(id *)(a1 + 32);
  }
  v12 = v11;
  swift_bridgeObjectRelease(a1);
  v13 = objc_msgSend(v12, "effectiveParentItemIdentifier");

  v14 = v13;
  LOBYTE(v12) = sub_100122678(a1, (uint64_t)v14);

  if ((v12 & 1) == 0)
  {
    swift_beginAccess(a3 + 16, aBlock, 1, 0);
    v22 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = 0;
    swift_unknownObjectRelease(v22);
    OS_dispatch_semaphore.signal()();

    swift_release(v6);
    return (id)swift_release(a3);
  }

LABEL_9:
  result = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v8 = result;
  if (v10)
  {
LABEL_24:
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(a1 + 32);
LABEL_12:
    v17 = v16;
    v18 = objc_msgSend(v16, "itemID");

    v19 = swift_allocObject(&unk_1005C8308, 32, 7);
    *(_QWORD *)(v19 + 16) = sub_10012BC54;
    *(_QWORD *)(v19 + 24) = v6;
    aBlock[4] = sub_10012BC44;
    v28 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013103C;
    aBlock[3] = &unk_1005C8320;
    v20 = _Block_copy(aBlock);
    v21 = v28;
    swift_retain();
    swift_release(v21);
    objc_msgSend(v8, "fetchParentsForItemID:recursively:completionHandler:", v18, 0, v20);

    _Block_release(v20);
    swift_release(v6);

    return (id)swift_release(a3);
  }
  __break(1u);
  return result;
}

id sub_100122B28(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int i;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  _QWORD *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t *v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  int64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  id result;
  id v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  int64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  _QWORD aBlock[5];
  uint64_t v109;
  uint64_t v110;

  v8 = swift_allocObject(&unk_1005C8240, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_94;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = (id)a2;
  swift_retain_n(a3, 2);
  v12 = v11;
  if (v10 < 1)
  {
LABEL_98:
    swift_beginAccess(a3 + 16, aBlock, 1, 0);
    v94 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = 0;
    swift_unknownObjectRelease(v94);
    OS_dispatch_semaphore.signal()();
    swift_release(a3);

    return (id)swift_release(v8);
  }
  while (1)
  {
    v13 = swift_bridgeObjectRetain(a1);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v13);
    v110 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(a1);
      a1 = isUniquelyReferenced_nonNull_bridgeObject;
      v110 = isUniquelyReferenced_nonNull_bridgeObject;
    }
    v16 = a1 & 0xFFFFFFFFFFFFFF8;
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
      v18 = 0;
      v19 = v16 + 32;
      v20 = v16 + 24;
      while (1)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v19 + 8 * v18), v15);
        isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(ObjectType);
        if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
        {
          if (v18 >= v17 - 1)
            goto LABEL_17;
          v3 = v20 + 8 * v17--;
          while (1)
          {
            v23 = swift_getObjectType(*(_QWORD *)v3, v15);
            isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(v23);
            if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
              break;
            --v17;
            v3 -= 8;
            if (v18 >= v17)
              goto LABEL_17;
          }
          v21 = *(_QWORD *)(v19 + 8 * v18);
          *(_QWORD *)(v19 + 8 * v18) = *(_QWORD *)v3;
          *(_QWORD *)v3 = v21;
        }
        if (++v18 >= v17)
          goto LABEL_17;
      }
    }
    v18 = 0;
LABEL_17:
    specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
    v24 = v110;
    v25 = (unint64_t)v110 >> 62;
    if ((unint64_t)v110 >> 62)
    {
      if (v110 < 0)
        v95 = v110;
      else
        v95 = v110 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v110);
      v26 = _CocoaArrayWrapper.endIndex.getter(v95);
      result = (id)swift_bridgeObjectRelease(v24);
      if (v26 < v18)
        goto LABEL_133;
      swift_bridgeObjectRetain(v24);
      v3 = _CocoaArrayWrapper.endIndex.getter(v95);
      result = (id)swift_bridgeObjectRelease(v24);
      if (v3 < v18)
      {
LABEL_134:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain(v24);
      v96 = _CocoaArrayWrapper.endIndex.getter(v95);
      swift_bridgeObjectRelease(v24);
      if (v96 < v26)
      {
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
    }
    else
    {
      v26 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v26 < v18)
        goto LABEL_106;
    }
    if (v26 < 0)
      goto LABEL_107;
    v106 = (void *)a2;
    v104 = a3;
    a2 = v24 & 0xC000000000000001;
    if ((v24 & 0xC000000000000001) != 0 && v18 != v26)
    {
      if (v18 >= (unint64_t)v26)
        goto LABEL_110;
      v27 = v18;
      do
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v27++);
        a3 = v27;
      }
      while (v26 != v27);
    }
    v105 = v8;
    if (v25)
    {
      if (v24 < 0)
        v3 = v24;
      else
        v3 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v24);
      v107 = _CocoaArrayWrapper.subscript.getter(v18, v26, v3);
      v28 = v29;
      v8 = v30;
      v26 = v31;
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRetain(v24);
      a3 = _CocoaArrayWrapper.endIndex.getter(v3);
      swift_bridgeObjectRelease(v24);
      if (a3 < 0)
        goto LABEL_111;
      swift_bridgeObjectRetain(v24);
      v3 = _CocoaArrayWrapper.endIndex.getter(v3);
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      v28 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
      v26 = (2 * v26) | 1;
      v107 = v24 & 0xFFFFFFFFFFFFFF8;
      v3 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v24);
      v8 = v18;
    }
    if (v3 < v18)
      goto LABEL_108;
    if (v18 && a2)
    {
      for (i = 0; i != v18; ++i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i);
      }
    }
    if (v25)
    {
      v34 = v24 < 0 ? v24 : v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v24);
      v4 = (_QWORD *)_CocoaArrayWrapper.subscript.getter(0, v18, v34);
      v3 = v35;
      a2 = v36;
      v33 = v37;
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      v4 = (_QWORD *)(v24 & 0xFFFFFFFFFFFFFF8);
      v3 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
      v33 = (2 * v18) | 1;
      swift_bridgeObjectRetain(v24);
      a2 = 0;
    }
    a3 = ((unint64_t)v26 >> 1) - v8;
    if ((unint64_t)v26 >> 1 != v8)
      break;
    v38 = v33 >> 1;
    v26 = v38 - a2;
    if (__OFSUB__(v38, a2))
      goto LABEL_112;
    v39 = _swiftEmptyArrayStorage;
    if (!v26)
    {
      a2 = v104;
LABEL_65:
      v61 = v106;
      swift_retain();
      sub_100122810((uint64_t)v39, v61, a2);
      swift_release(v105);
      swift_bridgeObjectRelease(v24);
      swift_unknownObjectRelease(v107);
      swift_unknownObjectRelease(v4);
      swift_bridgeObjectRelease(v39);

      return (id)swift_release_n(a2, 2, v62);
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (uint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)(v38 - a2);
    if (v26 < 0)
      goto LABEL_114;
    if (a2 <= v38)
      v40 = v38;
    else
      v40 = a2;
    v9 = v40 - a2;
    v8 = v3 + 8 * a2;
    a2 = v104;
    while (v9)
    {
      v41 = *(_QWORD *)v8;
      v8 += 8;
      v42 = objc_opt_self(FPItem);
      v3 = swift_dynamicCastObjCClassUnconditional(v41, v42, 0, 0, 0);
      v43 = swift_unknownObjectRetain(v41);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v43);
      a3 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(a3);
      v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(a3, v3);
      a1 = (uint64_t)aBlock;
      specialized ContiguousArray._endMutation()(v44);
      --v9;
      if (!--v26)
      {
        v39 = (_QWORD *)aBlock[0];
        goto LABEL_65;
      }
    }
    __break(1u);
LABEL_94:
    if (a1 < 0)
      v90 = a1;
    else
      v90 = a1 & 0xFFFFFFFFFFFFFF8;
    v91 = (id)a2;
    swift_retain_n(a3, 2);
    v92 = v91;
    swift_bridgeObjectRetain(a1);
    v93 = _CocoaArrayWrapper.endIndex.getter(v90);
    swift_bridgeObjectRelease(a1);
    if (v93 < 1)
      goto LABEL_98;
  }
  if ((uint64_t)((unint64_t)v26 >> 1) <= v8)
    goto LABEL_113;
  v103 = v4;
  v45 = *(_QWORD *)(v28 + 8 * v8);
  v46 = objc_opt_self(FINode);
  v47 = (void *)swift_dynamicCastObjCClass(v45, v46);
  if (!v47 || (v48 = objc_msgSend(v47, "parent")) == 0)
  {
    swift_beginAccess(v104 + 16, aBlock, 1, 0);
    v59 = *(_QWORD *)(v104 + 16);
    *(_QWORD *)(v104 + 16) = 0;
    swift_unknownObjectRelease(v59);
    OS_dispatch_semaphore.signal()();
    swift_release(v104);

    swift_release(v105);
    swift_bridgeObjectRelease(v24);
    swift_unknownObjectRelease(v107);
    return (id)swift_unknownObjectRelease(v4);
  }
  v26 = (uint64_t)v48;
  v101 = v3;
  v102 = v33;
  swift_unknownObjectRetain(v107);
  v49 = (uint64_t *)(v28 + 8 * v8);
  do
  {
    v3 = *v49;
    v50 = objc_opt_self(FINode);
    v51 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v50, 0, 0, 0);
    swift_unknownObjectRetain(v3);
    v52 = objc_msgSend(v51, "parent");
    if (!v52)
    {
      v63 = v107;
      swift_unknownObjectRelease(v107);
LABEL_68:
      swift_unknownObjectRelease(v3);
      swift_beginAccess(v104 + 16, aBlock, 1, 0);
      v64 = *(_QWORD *)(v104 + 16);
      *(_QWORD *)(v104 + 16) = 0;
      swift_unknownObjectRelease(v64);
      OS_dispatch_semaphore.signal()();
      swift_unknownObjectRelease(v63);
      swift_unknownObjectRelease(v103);

      v65 = v110;
      swift_release(v104);

      v66 = v105;
      goto LABEL_126;
    }
    v53 = v52;
    v4 = (_QWORD *)sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v18 = (Swift::Int)(id)v26;
    v54 = v53;
    LOBYTE(v53) = static NSObject.== infix(_:_:)(v54, v18);
    swift_unknownObjectRelease(v3);

    if ((v53 & 1) == 0)
    {
      v63 = v107;
      v3 = v107;
      goto LABEL_68;
    }
    ++v49;
    --a3;
  }
  while (a3);
  v8 = v107;
  swift_unknownObjectRelease(v107);
  v55 = v102 >> 1;
  if (a2 == v102 >> 1)
  {
    a2 = v104;
    swift_beginAccess(v104 + 16, aBlock, 1, 0);
    v56 = *(_QWORD *)(v104 + 16);
    *(_QWORD *)(v104 + 16) = v26;
    v57 = (id)v18;
    swift_unknownObjectRetain(v57);
    swift_unknownObjectRelease(v56);
    v58 = v106;
    OS_dispatch_semaphore.signal()();
    swift_unknownObjectRelease(v103);

    a3 = v105;
    goto LABEL_124;
  }
  v67 = v55 - a2;
  if (__OFSUB__(v55, a2))
    goto LABEL_115;
  v26 = (uint64_t)_swiftEmptyArrayStorage;
  a3 = v105;
  if (!v67)
  {
    a2 = v104;
LABEL_80:
    v4 = (_QWORD *)swift_allocObject(&unk_1005C8268, 40, 7);
    v4[2] = v18;
    v4[3] = sub_10012B5B4;
    v4[4] = a3;
    if ((unint64_t)v26 >> 62)
      goto LABEL_116;
    v74 = *(void **)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    v75 = (id)v18;
    swift_retain_n(a3, 2);
    v76 = v75;
    if (v74)
    {
      swift_bridgeObjectRetain(v26);
      goto LABEL_83;
    }
LABEL_122:
    swift_beginAccess(a2 + 16, aBlock, 1, 0);
    v100 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 16) = 0;
    swift_unknownObjectRelease(v100);
    OS_dispatch_semaphore.signal()();

    swift_unknownObjectRelease(v8);
    v8 = (uint64_t)v103;
LABEL_123:
    swift_bridgeObjectRelease(v26);
    swift_release(a3);

    swift_release(v4);
    v58 = v106;
LABEL_124:
    swift_unknownObjectRelease(v8);
    v65 = v110;
    swift_release(a2);

    goto LABEL_125;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v55 - a2);
  if (v67 < 0)
  {
    __break(1u);
    goto LABEL_129;
  }
  if (a2 <= v55)
    v68 = v102 >> 1;
  else
    v68 = a2;
  v3 = v68 - a2;
  a3 = v101 + 8 * a2;
  v8 = (uint64_t)DSConflictStrategy_ptr;
  a2 = v104;
  while (v3)
  {
    v69 = *(_QWORD *)a3;
    a3 += 8;
    v70 = objc_opt_self(FPItem);
    v26 = swift_dynamicCastObjCClassUnconditional(v69, v70, 0, 0, 0);
    v71 = swift_unknownObjectRetain(v69);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v71);
    v72 = *(_QWORD *)(aBlock[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v72);
    v73 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v26);
    specialized ContiguousArray._endMutation()(v73);
    --v3;
    if (!--v67)
    {
      v8 = v107;
      v26 = aBlock[0];
      a3 = v105;
      goto LABEL_80;
    }
  }
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  if (v26 < 0)
    v74 = (void *)v26;
  else
    v74 = (void *)(v26 & 0xFFFFFFFFFFFFFF8);
  v97 = (id)v18;
  swift_retain_n(a3, 2);
  v98 = v97;
  swift_bridgeObjectRetain(v26);
  v99 = _CocoaArrayWrapper.endIndex.getter(v74);
  swift_bridgeObjectRelease(v26);
  if (v99 <= 0)
    goto LABEL_122;
  swift_bridgeObjectRetain(v26);
  if (_CocoaArrayWrapper.endIndex.getter(v74))
  {
LABEL_83:
    v107 = v26 & 0xC000000000000001;
    if ((v26 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_131;
      }
      v77 = *(id *)(v26 + 32);
      goto LABEL_86;
    }
LABEL_129:
    v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
LABEL_86:
    v78 = v77;
    swift_bridgeObjectRelease(v26);
    v79 = objc_msgSend(v78, "effectiveParentItemIdentifier");

    v80 = v79;
    v81 = v26;
    v82 = v80;
    v3 = v81;
    LOBYTE(v79) = sub_100122678(v81, (uint64_t)v80);

    if ((v79 & 1) != 0)
    {

      goto LABEL_88;
    }
    swift_beginAccess(a2 + 16, aBlock, 1, 0);
    v89 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 16) = 0;
    swift_unknownObjectRelease(v89);
    OS_dispatch_semaphore.signal()();

    swift_unknownObjectRelease(v8);
    v8 = (uint64_t)v103;
    v26 = v3;
    goto LABEL_123;
  }
  swift_bridgeObjectRelease(v26);
  v3 = v26;
  v107 = v26 & 0xC000000000000001;
LABEL_88:
  result = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v74 = result;
  if (!v107)
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v83 = *(id *)(v3 + 32);
      goto LABEL_91;
    }
    __break(1u);
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
LABEL_131:
  v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
LABEL_91:
  v84 = v83;
  v85 = objc_msgSend(v83, "itemID");

  v86 = swift_allocObject(&unk_1005C8290, 32, 7);
  *(_QWORD *)(v86 + 16) = sub_10012B5C0;
  *(_QWORD *)(v86 + 24) = v4;
  aBlock[4] = sub_10012B5CC;
  v109 = v86;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10013103C;
  aBlock[3] = &unk_1005C82A8;
  v87 = _Block_copy(aBlock);
  v88 = v109;
  swift_retain();
  swift_release(v88);
  objc_msgSend(v74, "fetchParentsForItemID:recursively:completionHandler:", v85, 0, v87);

  _Block_release(v87);
  swift_bridgeObjectRelease(v3);
  swift_release(a3);
  swift_release(v4);
  swift_unknownObjectRelease(v103);

  swift_unknownObjectRelease(v8);
  v65 = v110;
  swift_release(a2);

LABEL_125:
  v66 = a3;
LABEL_126:
  swift_release(v66);
  return (id)swift_bridgeObjectRelease(v65);
}

uint64_t sub_100123758(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  dispatch_semaphore_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE v25[24];

  v2 = type metadata accessor for DispatchTime(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v8 = &v25[-v7 - 8];
  v9 = type metadata accessor for DispatchTimeInterval(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!((unint64_t)a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_3;
    return 0;
  }
  if (a1 < 0)
    v21 = a1;
  else
    v21 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v22 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(a1);
  if (v22 < 1)
    return 0;
LABEL_3:
  v13 = dispatch_semaphore_create(0);
  v14 = swift_allocObject(&unk_1005C8218, 24, 7);
  v15 = v3;
  *(_QWORD *)(v14 + 16) = 0;
  v16 = (_QWORD *)(v14 + 16);
  v24 = v14;
  sub_100122B28(a1, (int64_t)v13, v14);
  *v12 = 2;
  v17 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v9);
  static DispatchTime.now()(v17);
  + infix(_:_:)(v6, v12);
  v18 = *(void (**)(char *, uint64_t))(v15 + 8);
  v18(v6, v2);
  v19 = OS_dispatch_semaphore.wait(timeout:)(v8) & 1;
  v18(v8, v2);
  LOBYTE(v19) = static DispatchTimeoutResult.== infix(_:_:)(v19, 1);

  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  v20 = 0;
  if ((v19 & 1) == 0)
  {
    swift_beginAccess(v16, v25, 0, 0);
    v20 = *v16;
    swift_unknownObjectRetain(*v16);
  }
  swift_release(v24);
  return v20;
}

id sub_100123978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  void *object;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;
  void *v19;
  id v20;
  void **aBlock;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  void *v24;
  void *v25;
  uint64_t v26;
  Swift::String v27;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDuplicate);
  v4 = v3;
  result = (id)_DocumentManagerBundle(v2);
  if (result)
  {
    v6 = result;
    v27._countAndFlagsBits = 0xD000000000000028;
    v27._object = (void *)0x8000000100510040;
    v7._countAndFlagsBits = 0x746163696C707544;
    v7._object = (void *)0xE900000000000065;
    v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v8.value._object = (void *)0xEB00000000656C62;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v27)._object;

    v11 = swift_allocObject(&unk_1005C8650, 24, 7);
    *(_QWORD *)(v11 + 16) = a1;
    v12 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_unknownObjectRetain(a1);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v25 = sub_10012B748;
    v26 = v11;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100120C10;
    v24 = &unk_1005C8668;
    v15 = _Block_copy(&aBlock);
    v16 = objc_msgSend(v12, "initWithIdentifier:localizedTitle:unresolvedHandler:", v13, v14, v15);

    _Block_release(v15);
    swift_release(v26);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

    objc_msgSend(v16, "setImage:", v18);
    objc_msgSend(v16, "setAvailability:", UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1);
    objc_msgSend(v16, "setSupportsMultipleItems:", 1);
    objc_msgSend(v16, "setMenuSortOrder:", 6);
    v25 = sub_10011C768;
    v26 = 0;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100068430;
    v24 = &unk_1005C8690;
    v19 = _Block_copy(&aBlock);
    v20 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v19);
    _Block_release(v19);
    swift_release(v26);
    objc_msgSend(v16, "setFilteringPredicate:", v20);

    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100123C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *object;
  id v13;
  NSString v14;
  NSString v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Class isa;
  void *v27;
  id v28;
  void **aBlock;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  void *v32;
  void *v33;
  uint64_t v34;
  Swift::String v35;

  v0 = type metadata accessor for UTType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierFavorite);
  v6 = v5;
  result = (id)_DocumentManagerBundle(v4);
  if (result)
  {
    v8 = result;
    v35._object = (void *)0x8000000100510010;
    v9._countAndFlagsBits = 0x657469726F766146;
    v9._object = (void *)0xE800000000000000;
    v10.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v10.value._object = (void *)0xEB00000000656C62;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0xD000000000000029;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v35)._object;

    v13 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v33 = sub_10011A588;
    v34 = 0;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_100120C10;
    v32 = &unk_1005C85F0;
    v16 = _Block_copy(&aBlock);
    v17 = objc_msgSend(v13, "initWithIdentifier:localizedTitle:unresolvedHandler:", v14, v15, v16);

    _Block_release(v16);
    swift_release(v34);
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v18);

    objc_msgSend(v17, "setImage:", v19);
    objc_msgSend(v17, "setSupportsMultipleItems:", 0);
    v20 = sub_10006922C(&qword_100643CC0);
    v21 = swift_allocObject(v20, 48, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1004D9670;
    v22 = static UTType.folder.getter();
    v23 = UTType.identifier.getter(v22);
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    *(_QWORD *)(v21 + 32) = v23;
    *(_QWORD *)(v21 + 40) = v25;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v17, "setSupportedContentTypes:", isa);

    objc_msgSend(v17, "setMenuSortOrder:", 15);
    v33 = sub_10011A594;
    v34 = 0;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_100068430;
    v32 = &unk_1005C8618;
    v27 = _Block_copy(&aBlock);
    v28 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v27);
    _Block_release(v27);
    swift_release(v34);
    objc_msgSend(v17, "setFilteringPredicate:", v28);

    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100123FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *object;
  id v13;
  NSString v14;
  NSString v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Class isa;
  void *v27;
  id v28;
  void **aBlock;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  void *v32;
  void *v33;
  uint64_t v34;
  Swift::String v35;

  v0 = type metadata accessor for UTType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierUnfavorite);
  v6 = v5;
  result = (id)_DocumentManagerBundle(v4);
  if (result)
  {
    v8 = result;
    v35._object = (void *)0x800000010050FFE0;
    v9._countAndFlagsBits = 0x69726F7661666E55;
    v9._object = (void *)0xEA00000000006574;
    v10.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v10.value._object = (void *)0xEB00000000656C62;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0xD00000000000002BLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v35)._object;

    v13 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v33 = sub_10011A7F8;
    v34 = 0;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_100120C10;
    v32 = &unk_1005C85A0;
    v16 = _Block_copy(&aBlock);
    v17 = objc_msgSend(v13, "initWithIdentifier:localizedTitle:unresolvedHandler:", v14, v15, v16);

    _Block_release(v16);
    swift_release(v34);
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v18);

    objc_msgSend(v17, "setImage:", v19);
    objc_msgSend(v17, "setSupportsMultipleItems:", 0);
    v20 = sub_10006922C(&qword_100643CC0);
    v21 = swift_allocObject(v20, 48, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1004D9670;
    v22 = static UTType.folder.getter();
    v23 = UTType.identifier.getter(v22);
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    *(_QWORD *)(v21 + 32) = v23;
    *(_QWORD *)(v21 + 40) = v25;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v17, "setSupportedContentTypes:", isa);

    objc_msgSend(v17, "setMenuSortOrder:", 15);
    v33 = sub_10011A93C;
    v34 = 0;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_100068430;
    v32 = &unk_1005C85C8;
    v27 = _Block_copy(&aBlock);
    v28 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v27);
    _Block_release(v27);
    swift_release(v34);
    objc_msgSend(v17, "setFilteringPredicate:", v28);

    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10012434C(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSString v19;
  void *v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void **aBlock;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  void *v32;
  void *v33;
  uint64_t v34;

  v2._countAndFlagsBits = 0xD000000000000023;
  v2._object = (void *)0x8000000100510380;
  v3._countAndFlagsBits = 0xD00000000000005FLL;
  v3._object = (void *)0x80000001005103B0;
  v4 = DOCLocalizedDictionaryString(_:comment:)(v2, v3);
  v5 = sub_10006922C((uint64_t *)&unk_100644560);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v6 + 56) = &type metadata for Int;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 32) = a1;
  static String.localizedStringWithFormat(_:_:)(v4._countAndFlagsBits, v4._object, v6);
  v8 = v7;
  swift_bridgeObjectRelease(v4._object);
  swift_bridgeObjectRelease(v6);
  if (a1 < 1)
  {
    v14 = 0;
  }
  else
  {
    v9._countAndFlagsBits = 0xD000000000000023;
    v9._object = (void *)0x8000000100510380;
    v10._countAndFlagsBits = 0xD00000000000005FLL;
    v10._object = (void *)0x80000001005103B0;
    v11 = DOCLocalizedDictionaryString(_:comment:)(v9, v10);
    v12 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v12 + 56) = &type metadata for Int;
    *(_QWORD *)(v12 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v12 + 32) = 0;
    static String.localizedStringWithFormat(_:_:)(v11._countAndFlagsBits, v11._object, v12);
    v14 = v13;
    swift_bridgeObjectRelease(v11._object);
    swift_bridgeObjectRelease(v12);
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierCopy);
  v16 = v15;
  v17 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v33 = sub_10011ACF8;
  v34 = 0;
  aBlock = _NSConcreteStackBlock;
  v30 = 1107296256;
  v31 = sub_1003A7858;
  v32 = &unk_1005C8E10;
  v20 = _Block_copy(&aBlock);
  v21 = objc_msgSend(v17, "initWithIdentifier:localizedTitle:resolvedHandler:", v18, v19, v20);

  _Block_release(v20);
  swift_release(v34);
  if (v14)
  {
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v21, "setLocalizedCompactTitle:", v22, 1, 2);

  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

  objc_msgSend(v21, "setImage:", v24);
  if (UIDocumentBrowserActionAvailabilityToolbar >= 2uLL)
  {
    v25 = UIDocumentBrowserActionAvailabilityToolbar | 1;
    if ((UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0)
      goto LABEL_13;
  }
  else
  {
    v25 = 1;
    if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet <= 1uLL)
    {
      if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL)
        goto LABEL_15;
      goto LABEL_14;
    }
  }
  v25 |= UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
LABEL_13:
  if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~v25) != 0)
LABEL_14:
    v25 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
LABEL_15:
  objc_msgSend(v21, "setAvailability:", v25);
  objc_msgSend(v21, "setSupportsMultipleItems:", 1);
  objc_msgSend(v21, "setMenuSortOrder:", 11);
  v33 = sub_10011BCBC;
  v34 = 0;
  aBlock = _NSConcreteStackBlock;
  v30 = 1107296256;
  v31 = sub_100068430;
  v32 = &unk_1005C8E38;
  v26 = _Block_copy(&aBlock);
  v27 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v26);
  _Block_release(v26);
  swift_release(v34);
  objc_msgSend(v21, "setFilteringPredicate:", v27);

  return v21;
}

id sub_100124770(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  NSString v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  void **v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  void *v19;
  uint64_t v20;

  static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierManageShare);
  v4 = v3;
  v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  swift_bridgeObjectRetain(a2);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v19 = sub_10011D60C;
  v20 = 0;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_100120C10;
  v18 = &unk_1005C8C58;
  v8 = _Block_copy(&v15);
  v9 = objc_msgSend(v5, "initWithIdentifier:localizedTitle:unresolvedHandler:", v6, v7, v8);

  _Block_release(v8);
  swift_release(v20);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

  objc_msgSend(v9, "setImage:", v11);
  objc_msgSend(v9, "setSupportsMultipleItems:", 0);
  objc_msgSend(v9, "setNavigationSide:", 2);
  objc_msgSend(v9, "setAvailability:", 1);
  objc_msgSend(v9, "setMenuSortOrder:", 18);
  v19 = sub_10011D808;
  v20 = 0;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_100068430;
  v18 = &unk_1005C8C80;
  v12 = _Block_copy(&v15);
  v13 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v12);
  _Block_release(v12);
  swift_release(v20);
  objc_msgSend(v9, "setFilteringPredicate:", v13);

  return v9;
}

uint64_t sub_1001249C8(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_29;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v34 = v3;
    v5 = v3 & 0xC000000000000001;
    v6 = 4;
    v36 = v3 & 0xC000000000000001;
    v35 = v4;
    while (1)
    {
      v7 = v6 - 4;
      if (!v5)
        break;
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v3);
      v10 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_28;
LABEL_11:
      ObjectType = swift_getObjectType(v9, v8);
      if ((DOCNode.isFINode.getter(ObjectType) & 1) != 0
        && (v13 = swift_getObjectType(a2, v12), (DOCNode.isFINode.getter(v13) & 1) != 0))
      {
        v14 = objc_opt_self(FINode);
        v15 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v9, v14, 0, 0, 0), "parent");
        v16 = objc_opt_self(FINode);
        v17 = swift_dynamicCastObjCClassUnconditional(a2, v16, 0, 0, 0);
        if (!v15)
        {
          swift_bridgeObjectRelease(v3);
          swift_unknownObjectRelease(v9);
          return 0;
        }
        v18 = v17;
        sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
        swift_unknownObjectRetain(a2);
        v19 = v15;
        v5 = v36;
        LOBYTE(v18) = static NSObject.== infix(_:_:)(v19, v18);
        swift_unknownObjectRelease(v9);

        swift_unknownObjectRelease(a2);
        if ((v18 & 1) == 0)
          goto LABEL_26;
      }
      else if ((DOCNode.isFPItem.getter(ObjectType) & 1) != 0)
      {
        v20 = objc_opt_self(FPItem);
        v21 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v9, v20, 0, 0, 0), "parentItemID");
        v22 = FPItemID.identifierString.getter();
        v24 = v23;

        v25 = objc_msgSend(a2, "fpfs_fpItem");
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(v25, "itemID");

          v28 = FPItemID.identifierString.getter();
          v30 = v29;

          if (v22 == v28 && v24 == v30)
          {
            swift_unknownObjectRelease(v9);
            swift_bridgeObjectRelease_n(v24, 2);
            v3 = v34;
LABEL_26:
            swift_bridgeObjectRelease(v3);
            return 0;
          }
          v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v28, v30, 0);
          swift_unknownObjectRelease(v9);
          swift_bridgeObjectRelease(v24);
          swift_bridgeObjectRelease(v30);
          v3 = v34;
          v4 = v35;
          v5 = v36;
          if ((v31 & 1) != 0)
            goto LABEL_26;
        }
        else
        {
          swift_unknownObjectRelease(v9);
          swift_bridgeObjectRelease(v24);
          v4 = v35;
        }
      }
      else
      {
        swift_unknownObjectRelease(v9);
      }
      ++v6;
      if (v10 == v4)
        goto LABEL_33;
    }
    v9 = *(_QWORD *)(v3 + 8 * v6);
    swift_unknownObjectRetain(v9);
    v10 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_11;
LABEL_28:
    __break(1u);
LABEL_29:
    if (v3 < 0)
      v33 = v3;
    else
      v33 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v33);
  }
LABEL_33:
  swift_bridgeObjectRelease(v3);
  return 1;
}

void sub_100124D28(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v6 = swift_allocObject(&unk_1005C8790, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(id *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a3, 2);
    if (v7)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
LABEL_20:
    a2(0);
    swift_release(a3);
    swift_release(v6);
    return;
  }
  if (a1 < 0)
    v7 = (id)a1;
  else
    v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_retain_n(a3, 2);
  swift_bridgeObjectRetain(a1);
  v18 = _CocoaArrayWrapper.endIndex.getter(v7);
  swift_bridgeObjectRelease(a1);
  if (v18 <= 0)
    goto LABEL_20;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v7))
  {
    swift_bridgeObjectRelease(a1);
    v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    v9 = *(id *)(a1 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease(a1);
  v11 = objc_msgSend(v10, "effectiveParentItemIdentifier");

  v19 = v11;
  LOBYTE(v10) = sub_100122678(a1, (uint64_t)v19);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release(a3);
    swift_release(v6);

    return;
  }

LABEL_9:
  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (v8)
  {
LABEL_23:
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(a1 + 32);
LABEL_12:
    v13 = v12;
    v14 = objc_msgSend(v12, "itemID", v19);

    v15 = swift_allocObject(&unk_1005C87B8, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_10010DF60;
    *(_QWORD *)(v15 + 24) = v6;
    aBlock[4] = sub_10012BC44;
    v21 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013103C;
    aBlock[3] = &unk_1005C87D0;
    v16 = _Block_copy(aBlock);
    v17 = v21;
    swift_retain();
    swift_release(v17);
    objc_msgSend(v7, "fetchParentsForItemID:recursively:completionHandler:", v14, 0, v16);

    _Block_release(v16);
    swift_release(a3);
    swift_release(v6);

    return;
  }
  __break(1u);
}

void sub_100125028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _UNKNOWN **v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  char v58;
  uint64_t v59;
  int64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(uint64_t);
  void *v97;
  uint64_t v98;
  _QWORD aBlock[5];
  uint64_t v100;
  uint64_t v101;

  v8 = swift_allocObject(&unk_1005C86F0, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_92;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n(a3, 2);
  if (v10 < 1)
  {
LABEL_96:
    ((void (*)(_QWORD))a2)(0);
    swift_release(a3);
    swift_release(v8);
    return;
  }
  while (1)
  {
    v11 = swift_bridgeObjectRetain(a1);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
    v101 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(a1);
      a1 = isUniquelyReferenced_nonNull_bridgeObject;
      v101 = isUniquelyReferenced_nonNull_bridgeObject;
    }
    v97 = (void *)v8;
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      v16 = 0;
      v8 = v14 + 32;
      v17 = v14 + 24;
      while (1)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v8 + 8 * v16), v13);
        isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(ObjectType);
        if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
        {
          if (v16 >= v15 - 1)
            goto LABEL_17;
          v20 = (_QWORD *)(v17 + 8 * v15--);
          while (1)
          {
            v21 = swift_getObjectType(*v20, v13);
            isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(v21);
            if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
              break;
            --v15;
            --v20;
            if (v16 >= v15)
              goto LABEL_17;
          }
          v18 = *(_QWORD *)(v8 + 8 * v16);
          *(_QWORD *)(v8 + 8 * v16) = *v20;
          *v20 = v18;
        }
        if (++v16 >= v15)
          goto LABEL_17;
      }
    }
    v16 = 0;
LABEL_17:
    v96 = (void (*)(uint64_t))a2;
    specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
    a2 = v101;
    v22 = (unint64_t)v101 >> 62;
    if ((unint64_t)v101 >> 62)
    {
      if (v101 < 0)
        v87 = v101;
      else
        v87 = v101 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v101);
      v23 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v23 < v16)
        goto LABEL_130;
      swift_bridgeObjectRetain(a2);
      v8 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v8 < v16)
      {
LABEL_131:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(a2);
      v88 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v88 < v23)
      {
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
    }
    else
    {
      v23 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v23 < v16)
        goto LABEL_104;
    }
    if (v23 < 0)
      goto LABEL_105;
    v3 = (_UNKNOWN **)(a2 & 0xC000000000000001);
    if ((a2 & 0xC000000000000001) != 0 && v16 != v23)
    {
      if (v16 >= (unint64_t)v23)
        goto LABEL_108;
      v24 = v16;
      do
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v24++);
      }
      while (v23 != v24);
    }
    if (v22)
    {
      if (a2 < 0)
        v8 = a2;
      else
        v8 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v98 = _CocoaArrayWrapper.subscript.getter(v16, v23, v8);
      v25 = v26;
      v4 = v27;
      v23 = v28;
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRetain(a2);
      v29 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(a2);
      if (v29 < 0)
        goto LABEL_109;
      swift_bridgeObjectRetain(a2);
      v8 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v25 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v23 = (2 * v23) | 1;
      v98 = a2 & 0xFFFFFFFFFFFFFF8;
      v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      v4 = v16;
    }
    if (v8 < v16)
      goto LABEL_106;
    if (v16 && v3)
    {
      for (i = 0; i != v16; v3 = (_UNKNOWN **)i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v22)
    {
      v32 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v31 = _CocoaArrayWrapper.subscript.getter(0, v16, v32);
      v8 = v33;
      v16 = v34;
      v95 = v35;
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v31 = a2 & 0xFFFFFFFFFFFFFF8;
      v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v95 = (2 * v16) | 1;
      swift_bridgeObjectRetain(a2);
      v16 = 0;
    }
    v36 = ((unint64_t)v23 >> 1) - v4;
    if ((unint64_t)v23 >> 1 != v4)
      break;
    v37 = v8;
    v4 = v31;
    v8 = (v95 >> 1) - v16;
    if (__OFSUB__(v95 >> 1, v16))
      goto LABEL_110;
    v38 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_54:
      swift_retain();
      sub_100124D28((uint64_t)v38, v96, a3);
      swift_release(v97);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v98);
      swift_unknownObjectRelease(v4);
      swift_bridgeObjectRelease(v38);
      swift_release_n(a3, 2, v47);
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (uint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)((v95 >> 1) - v16);
    if (v8 < 0)
      goto LABEL_112;
    if (v16 <= (uint64_t)(v95 >> 1))
      v39 = v95 >> 1;
    else
      v39 = v16;
    v9 = v39 - v16;
    v40 = (uint64_t *)(v37 + 8 * v16);
    v3 = DSConflictStrategy_ptr;
    while (v9)
    {
      v41 = *v40++;
      v42 = objc_opt_self(FPItem);
      v43 = swift_dynamicCastObjCClassUnconditional(v41, v42, 0, 0, 0);
      v44 = swift_unknownObjectRetain(v41);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v44);
      v45 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
      v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
      a1 = (uint64_t)aBlock;
      specialized ContiguousArray._endMutation()(v46);
      --v9;
      if (!--v8)
      {
        v38 = (_QWORD *)aBlock[0];
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_92:
    if (a1 < 0)
      v85 = a1;
    else
      v85 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_retain_n(a3, 2);
    swift_bridgeObjectRetain(a1);
    v86 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(a1);
    if (v86 < 1)
      goto LABEL_96;
  }
  if ((uint64_t)((unint64_t)v23 >> 1) <= v4)
    goto LABEL_111;
  v94 = v8;
  v48 = *(_QWORD *)(v25 + 8 * v4);
  v49 = objc_opt_self(FINode);
  v50 = (void *)swift_dynamicCastObjCClass(v48, v49);
  if (!v50 || (v51 = objc_msgSend(v50, "parent")) == 0)
  {
    v96(0);
    swift_release(a3);
    swift_release(v97);
    swift_bridgeObjectRelease(a2);
    swift_unknownObjectRelease(v98);
    swift_unknownObjectRelease(v31);
    return;
  }
  v23 = (uint64_t)v51;
  v92 = v31;
  v93 = a3;
  swift_unknownObjectRetain(v98);
  v52 = (uint64_t *)(v25 + 8 * v4);
  do
  {
    v53 = *v52;
    v54 = objc_opt_self(FINode);
    v55 = (void *)swift_dynamicCastObjCClassUnconditional(v53, v54, 0, 0, 0);
    swift_unknownObjectRetain(v53);
    v56 = objc_msgSend(v55, "parent");
    if (!v56)
    {
      v62 = v98;
      swift_unknownObjectRelease(v98);
LABEL_67:
      swift_unknownObjectRelease(v53);
      v96(0);
      swift_release(v93);
      swift_release(v97);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v62);
      swift_unknownObjectRelease(v92);

      return;
    }
    v57 = v56;
    sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v4 = (uint64_t)(id)v23;
    v3 = v57;
    v58 = static NSObject.== infix(_:_:)(v3, v4);
    swift_unknownObjectRelease(v53);

    if ((v58 & 1) == 0)
    {
      v62 = v98;
      v53 = v98;
      goto LABEL_67;
    }
    ++v52;
    --v36;
  }
  while (v36);
  v59 = v98;
  swift_unknownObjectRelease(v98);
  v60 = v95 >> 1;
  if (v16 == v95 >> 1)
  {
    v61 = (id)v4;
    a3 = v93;
    v96(v23);
    swift_unknownObjectRelease(v92);

    v16 = (uint64_t)v97;
    goto LABEL_122;
  }
  v8 = v60 - v16;
  a3 = v93;
  if (__OFSUB__(v60, v16))
    goto LABEL_113;
  v23 = (uint64_t)_swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_78:
    v3 = (_UNKNOWN **)swift_allocObject(&unk_1005C8718, 40, 7);
    v3[2] = (_UNKNOWN *)v4;
    v3[3] = sub_100066584;
    v16 = (uint64_t)v97;
    v8 = v98;
    v3[4] = v97;
    if ((unint64_t)v23 >> 62)
      goto LABEL_114;
    v70 = *(id *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    v71 = (id)v4;
    swift_retain_n(v97, 2);
    v72 = v71;
    if (v70)
    {
      swift_bridgeObjectRetain(v23);
      goto LABEL_81;
    }
LABEL_120:
    v96(0);

    swift_unknownObjectRelease(v8);
LABEL_121:
    v59 = v92;
    swift_bridgeObjectRelease(v23);
    swift_release(v16);

    swift_release(v3);
LABEL_122:
    swift_unknownObjectRelease(v59);
    swift_release(a3);
    swift_release(v16);
    v84 = a2;
    goto LABEL_123;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v60 - v16);
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_126;
  }
  if (v16 <= v60)
    v63 = v95 >> 1;
  else
    v63 = v16;
  v64 = v63 - v16;
  v23 = v94 + 8 * v16;
  v3 = DSConflictStrategy_ptr;
  while (v64)
  {
    v65 = *(_QWORD *)v23;
    v23 += 8;
    v66 = objc_opt_self(FPItem);
    v16 = swift_dynamicCastObjCClassUnconditional(v65, v66, 0, 0, 0);
    v67 = swift_unknownObjectRetain(v65);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v67);
    v68 = *(_QWORD *)(aBlock[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v68);
    v69 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v16);
    specialized ContiguousArray._endMutation()(v69);
    --v64;
    if (!--v8)
    {
      v23 = aBlock[0];
      goto LABEL_78;
    }
  }
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  if (v23 < 0)
    v70 = (id)v23;
  else
    v70 = (id)(v23 & 0xFFFFFFFFFFFFFF8);
  v89 = (id)v4;
  swift_retain_n(v16, 2);
  v90 = v89;
  swift_bridgeObjectRetain(v23);
  v91 = _CocoaArrayWrapper.endIndex.getter(v70);
  swift_bridgeObjectRelease(v23);
  if (v91 <= 0)
    goto LABEL_120;
  swift_bridgeObjectRetain(v23);
  if (_CocoaArrayWrapper.endIndex.getter(v70))
  {
LABEL_81:
    v36 = v23 & 0xC000000000000001;
    if ((v23 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_128;
      }
      v73 = *(id *)(v23 + 32);
      goto LABEL_84;
    }
LABEL_126:
    v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
LABEL_84:
    v74 = v73;
    swift_bridgeObjectRelease(v23);
    v75 = objc_msgSend(v74, "effectiveParentItemIdentifier");

    v76 = v75;
    LOBYTE(v75) = sub_100122678(v23, (uint64_t)v76);

    if ((v75 & 1) != 0)
    {

      goto LABEL_86;
    }
    v96(0);

    swift_unknownObjectRelease(v98);
    v16 = (uint64_t)v97;
    goto LABEL_121;
  }
  swift_bridgeObjectRelease(v23);
  v36 = v23 & 0xC000000000000001;
LABEL_86:
  v70 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (!v36)
  {
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v77 = *(id *)(v23 + 32);
      goto LABEL_89;
    }
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_128:
  v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
LABEL_89:
  v78 = v77;
  v79 = objc_msgSend(v77, "itemID");

  v80 = swift_allocObject(&unk_1005C8740, 32, 7);
  *(_QWORD *)(v80 + 16) = sub_10012BA4C;
  *(_QWORD *)(v80 + 24) = v3;
  aBlock[4] = sub_10012BC44;
  v100 = v80;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10013103C;
  aBlock[3] = &unk_1005C8758;
  v81 = _Block_copy(aBlock);
  v82 = v100;
  swift_retain();
  swift_release(v82);
  objc_msgSend(v70, "fetchParentsForItemID:recursively:completionHandler:", v79, 0, v81);

  _Block_release(v81);
  swift_bridgeObjectRelease(v23);
  swift_release(v97);
  swift_release(v3);
  swift_unknownObjectRelease(v92);

  swift_unknownObjectRelease(v98);
  v83 = v101;
  swift_release(a3);
  swift_release(v97);
  v84 = v83;
LABEL_123:
  swift_bridgeObjectRelease(v84);
}

uint64_t sub_100125B6C(void *a1, uint64_t a2, char *a3, void *a4, void *a5)
{
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  v44 = type metadata accessor for Logger(0);
  v42 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_allocObject(&unk_1005C8830, 32, 7);
  *(_QWORD *)(result + 16) = a4;
  *(_QWORD *)(result + 24) = a5;
  v43 = a3;
  if (*(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    v13 = result;
    v14 = a4;
    v15 = a5;
    v16 = a1;
    v17 = sub_10004FD50();
    __chkstk_darwin(v17);
    *(&v38 - 2) = (uint64_t)v16;
    *(&v38 - 1) = a2;
    v18 = sub_100174BD4(sub_10012B7C8, (uint64_t)(&v38 - 4), v17);

    v19 = swift_bridgeObjectRelease(v17);
    if (v18)
    {
      v20 = swift_unknownObjectRetain(v18);
      sub_100125F10(v20, (uint64_t)v14, v15);
      swift_release(v13);
      return swift_unknownObjectRelease_n(v18, 2);
    }
    else
    {
      v41 = a2;
      v21 = Logger.UI.unsafeMutableAddressor(v19);
      v22 = v42;
      v23 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v11, v21, v44);
      v24 = v16;
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.default.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc(22, -1);
        v40 = swift_slowAlloc(64, -1);
        v46[0] = v40;
        *(_DWORD *)v27 = 136315394;
        v45 = sub_1000544FC(0xD000000000000027, 0x8000000100510090, v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
        *(_WORD *)(v27 + 12) = 2080;
        v28 = objc_msgSend(v24, "displayName", v27 + 14);
        v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v39 = v11;
        v30 = v22;
        v31 = v29;
        v33 = v32;

        v45 = sub_1000544FC(v31, v33, v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);

        swift_bridgeObjectRelease(v33);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s - Waiting for matching node for %s", (uint8_t *)v27, 0x16u);
        v34 = v40;
        swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v44);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
      }
      v35 = v41;
      v36 = (_QWORD *)swift_allocObject(&unk_1005C8858, 40, 7);
      v36[2] = v24;
      v36[3] = sub_10012B7C0;
      v36[4] = v13;
      v37 = v24;
      swift_retain();
      sub_1001B4164(v37, v35, (uint64_t)sub_10012B810, (uint64_t)v36, v43);
      swift_release(v13);
      return swift_release(v36);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100125F10(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = swift_unknownObjectRetain(a1);
    sub_10012616C(v11, a2, a3);
    return swift_unknownObjectRelease(a1);
  }
  else
  {
    v13 = Logger.UI.unsafeMutableAddressor(v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
    v14 = swift_unknownObjectRetain_n(a3, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(22, -1);
      v18 = swift_slowAlloc(64, -1);
      v24 = v18;
      *(_DWORD *)v17 = 136315394;
      v23 = sub_1000544FC(0xD00000000000001ELL, 0x80000001005100C0, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
      *(_WORD *)(v17 + 12) = 2080;
      v23 = (uint64_t)a3;
      swift_unknownObjectRetain(a3);
      v19 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v20 = String.init<A>(describing:)(&v23, v19);
      v22 = v21;
      v23 = sub_1000544FC(v20, v21, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);

      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s did not find matching node for node: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_10012616C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46[24];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
  v13 = *(_QWORD *)(v12 + 16);
  v43 = v10;
  if (v13)
  {
    v36 = a2;
    v37 = a3;
    v38 = v7;
    v39 = v6;
    v14 = *(_QWORD *)(v11 + 8);
    v15 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain_n(v12, 2);
    v41 = v14;
    swift_bridgeObjectRetain(v14);
    v40 = v15;
    swift_bridgeObjectRetain(v15);
    v42 = v12;
    v16 = (uint64_t *)(v12 + 64);
    while (1)
    {
      v17 = *(v16 - 4);
      v18 = *(v16 - 3);
      v19 = *(v16 - 2);
      v20 = *(v16 - 1);
      v21 = *v16;
      swift_beginAccess(*v16 + 16, v46, 0, 0);
      v22 = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v20);
      swift_retain();
      swift_bridgeObjectRetain(v22);
      v23 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v24 = Array<A>.contains(node:)(a1, v22, v23);
      swift_bridgeObjectRelease(v22);
      if ((v24 & 1) != 0)
        break;
      swift_release(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v18);
      v16 += 5;
      if (!--v13)
      {
        v47 = v17;
        v48 = v18;
        v49 = v19;
        v50 = v20;
        v51 = v21;
        swift_bridgeObjectRelease(v40);
        swift_bridgeObjectRelease(v41);
        v8 = swift_bridgeObjectRelease_n(v42, 2);
        v7 = v38;
        v6 = v39;
        v10 = v43;
        a3 = v37;
        goto LABEL_6;
      }
    }
    v47 = v17;
    v48 = v18;
    v49 = v19;
    v50 = v20;
    v51 = v21;
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease_n(v42, 2);
    if ((*(_BYTE *)(v21 + 24) & 1) == 0)
      sub_10017CEE0(&v47, 0);
    swift_release(v21);
    swift_bridgeObjectRelease(v20);
    return swift_bridgeObjectRelease(v18);
  }
  else
  {
LABEL_6:
    v25 = Logger.UI.unsafeMutableAddressor(v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v25, v6);
    v26 = swift_unknownObjectRetain_n(a3, 2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(22, -1);
      v30 = swift_slowAlloc(64, -1);
      v45 = v30;
      *(_DWORD *)v29 = 136315394;
      v44 = sub_1000544FC(0xD00000000000001CLL, 0x80000001005100E0, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      *(_WORD *)(v29 + 12) = 2080;
      v44 = (uint64_t)a3;
      swift_unknownObjectRetain(a3);
      v31 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v32 = String.init<A>(describing:)(&v44, v31);
      v34 = v33;
      v44 = sub_1000544FC(v32, v33, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);

      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s can not find section containing node: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v43, v6);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
}

void sub_10012650C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v6 = swift_allocObject(&unk_1005C8970, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(id *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a3, 2);
    if (v7)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
LABEL_20:
    a2(0);
    swift_release(a3);
    swift_release(v6);
    return;
  }
  if (a1 < 0)
    v7 = (id)a1;
  else
    v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_retain_n(a3, 2);
  swift_bridgeObjectRetain(a1);
  v18 = _CocoaArrayWrapper.endIndex.getter(v7);
  swift_bridgeObjectRelease(a1);
  if (v18 <= 0)
    goto LABEL_20;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v7))
  {
    swift_bridgeObjectRelease(a1);
    v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    v9 = *(id *)(a1 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease(a1);
  v11 = objc_msgSend(v10, "effectiveParentItemIdentifier");

  v19 = v11;
  LOBYTE(v10) = sub_100122678(a1, (uint64_t)v19);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release(a3);
    swift_release(v6);

    return;
  }

LABEL_9:
  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (v8)
  {
LABEL_23:
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(a1 + 32);
LABEL_12:
    v13 = v12;
    v14 = objc_msgSend(v12, "itemID", v19);

    v15 = swift_allocObject(&unk_1005C8998, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_10012BC58;
    *(_QWORD *)(v15 + 24) = v6;
    aBlock[4] = sub_10012BC44;
    v21 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013103C;
    aBlock[3] = &unk_1005C89B0;
    v16 = _Block_copy(aBlock);
    v17 = v21;
    swift_retain();
    swift_release(v17);
    objc_msgSend(v7, "fetchParentsForItemID:recursively:completionHandler:", v14, 0, v16);

    _Block_release(v16);
    swift_release(a3);
    swift_release(v6);

    return;
  }
  __break(1u);
}

void sub_10012680C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _UNKNOWN **v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  char v58;
  uint64_t v59;
  int64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(uint64_t);
  void *v97;
  uint64_t v98;
  _QWORD aBlock[5];
  uint64_t v100;
  uint64_t v101;

  v8 = swift_allocObject(&unk_1005C88D0, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_92;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n(a3, 2);
  if (v10 < 1)
  {
LABEL_96:
    ((void (*)(_QWORD))a2)(0);
    swift_release(a3);
    swift_release(v8);
    return;
  }
  while (1)
  {
    v11 = swift_bridgeObjectRetain(a1);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
    v101 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(a1);
      a1 = isUniquelyReferenced_nonNull_bridgeObject;
      v101 = isUniquelyReferenced_nonNull_bridgeObject;
    }
    v97 = (void *)v8;
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      v16 = 0;
      v8 = v14 + 32;
      v17 = v14 + 24;
      while (1)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v8 + 8 * v16), v13);
        isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(ObjectType);
        if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
        {
          if (v16 >= v15 - 1)
            goto LABEL_17;
          v20 = (_QWORD *)(v17 + 8 * v15--);
          while (1)
          {
            v21 = swift_getObjectType(*v20, v13);
            isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(v21);
            if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
              break;
            --v15;
            --v20;
            if (v16 >= v15)
              goto LABEL_17;
          }
          v18 = *(_QWORD *)(v8 + 8 * v16);
          *(_QWORD *)(v8 + 8 * v16) = *v20;
          *v20 = v18;
        }
        if (++v16 >= v15)
          goto LABEL_17;
      }
    }
    v16 = 0;
LABEL_17:
    v96 = (void (*)(uint64_t))a2;
    specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
    a2 = v101;
    v22 = (unint64_t)v101 >> 62;
    if ((unint64_t)v101 >> 62)
    {
      if (v101 < 0)
        v87 = v101;
      else
        v87 = v101 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v101);
      v23 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v23 < v16)
        goto LABEL_130;
      swift_bridgeObjectRetain(a2);
      v8 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v8 < v16)
      {
LABEL_131:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(a2);
      v88 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v88 < v23)
      {
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
    }
    else
    {
      v23 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v23 < v16)
        goto LABEL_104;
    }
    if (v23 < 0)
      goto LABEL_105;
    v3 = (_UNKNOWN **)(a2 & 0xC000000000000001);
    if ((a2 & 0xC000000000000001) != 0 && v16 != v23)
    {
      if (v16 >= (unint64_t)v23)
        goto LABEL_108;
      v24 = v16;
      do
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v24++);
      }
      while (v23 != v24);
    }
    if (v22)
    {
      if (a2 < 0)
        v8 = a2;
      else
        v8 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v98 = _CocoaArrayWrapper.subscript.getter(v16, v23, v8);
      v25 = v26;
      v4 = v27;
      v23 = v28;
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRetain(a2);
      v29 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(a2);
      if (v29 < 0)
        goto LABEL_109;
      swift_bridgeObjectRetain(a2);
      v8 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v25 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v23 = (2 * v23) | 1;
      v98 = a2 & 0xFFFFFFFFFFFFFF8;
      v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      v4 = v16;
    }
    if (v8 < v16)
      goto LABEL_106;
    if (v16 && v3)
    {
      for (i = 0; i != v16; v3 = (_UNKNOWN **)i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v22)
    {
      v32 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v31 = _CocoaArrayWrapper.subscript.getter(0, v16, v32);
      v8 = v33;
      v16 = v34;
      v95 = v35;
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v31 = a2 & 0xFFFFFFFFFFFFFF8;
      v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v95 = (2 * v16) | 1;
      swift_bridgeObjectRetain(a2);
      v16 = 0;
    }
    v36 = ((unint64_t)v23 >> 1) - v4;
    if ((unint64_t)v23 >> 1 != v4)
      break;
    v37 = v8;
    v4 = v31;
    v8 = (v95 >> 1) - v16;
    if (__OFSUB__(v95 >> 1, v16))
      goto LABEL_110;
    v38 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_54:
      swift_retain();
      sub_10012650C((uint64_t)v38, v96, a3);
      swift_release(v97);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v98);
      swift_unknownObjectRelease(v4);
      swift_bridgeObjectRelease(v38);
      swift_release_n(a3, 2, v47);
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (uint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)((v95 >> 1) - v16);
    if (v8 < 0)
      goto LABEL_112;
    if (v16 <= (uint64_t)(v95 >> 1))
      v39 = v95 >> 1;
    else
      v39 = v16;
    v9 = v39 - v16;
    v40 = (uint64_t *)(v37 + 8 * v16);
    v3 = DSConflictStrategy_ptr;
    while (v9)
    {
      v41 = *v40++;
      v42 = objc_opt_self(FPItem);
      v43 = swift_dynamicCastObjCClassUnconditional(v41, v42, 0, 0, 0);
      v44 = swift_unknownObjectRetain(v41);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v44);
      v45 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
      v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
      a1 = (uint64_t)aBlock;
      specialized ContiguousArray._endMutation()(v46);
      --v9;
      if (!--v8)
      {
        v38 = (_QWORD *)aBlock[0];
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_92:
    if (a1 < 0)
      v85 = a1;
    else
      v85 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_retain_n(a3, 2);
    swift_bridgeObjectRetain(a1);
    v86 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(a1);
    if (v86 < 1)
      goto LABEL_96;
  }
  if ((uint64_t)((unint64_t)v23 >> 1) <= v4)
    goto LABEL_111;
  v94 = v8;
  v48 = *(_QWORD *)(v25 + 8 * v4);
  v49 = objc_opt_self(FINode);
  v50 = (void *)swift_dynamicCastObjCClass(v48, v49);
  if (!v50 || (v51 = objc_msgSend(v50, "parent")) == 0)
  {
    v96(0);
    swift_release(a3);
    swift_release(v97);
    swift_bridgeObjectRelease(a2);
    swift_unknownObjectRelease(v98);
    swift_unknownObjectRelease(v31);
    return;
  }
  v23 = (uint64_t)v51;
  v92 = v31;
  v93 = a3;
  swift_unknownObjectRetain(v98);
  v52 = (uint64_t *)(v25 + 8 * v4);
  do
  {
    v53 = *v52;
    v54 = objc_opt_self(FINode);
    v55 = (void *)swift_dynamicCastObjCClassUnconditional(v53, v54, 0, 0, 0);
    swift_unknownObjectRetain(v53);
    v56 = objc_msgSend(v55, "parent");
    if (!v56)
    {
      v62 = v98;
      swift_unknownObjectRelease(v98);
LABEL_67:
      swift_unknownObjectRelease(v53);
      v96(0);
      swift_release(v93);
      swift_release(v97);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v62);
      swift_unknownObjectRelease(v92);

      return;
    }
    v57 = v56;
    sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v4 = (uint64_t)(id)v23;
    v3 = v57;
    v58 = static NSObject.== infix(_:_:)(v3, v4);
    swift_unknownObjectRelease(v53);

    if ((v58 & 1) == 0)
    {
      v62 = v98;
      v53 = v98;
      goto LABEL_67;
    }
    ++v52;
    --v36;
  }
  while (v36);
  v59 = v98;
  swift_unknownObjectRelease(v98);
  v60 = v95 >> 1;
  if (v16 == v95 >> 1)
  {
    v61 = (id)v4;
    a3 = v93;
    v96(v23);
    swift_unknownObjectRelease(v92);

    v16 = (uint64_t)v97;
    goto LABEL_122;
  }
  v8 = v60 - v16;
  a3 = v93;
  if (__OFSUB__(v60, v16))
    goto LABEL_113;
  v23 = (uint64_t)_swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_78:
    v3 = (_UNKNOWN **)swift_allocObject(&unk_1005C88F8, 40, 7);
    v3[2] = (_UNKNOWN *)v4;
    v3[3] = sub_1000D9F90;
    v16 = (uint64_t)v97;
    v8 = v98;
    v3[4] = v97;
    if ((unint64_t)v23 >> 62)
      goto LABEL_114;
    v70 = *(id *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    v71 = (id)v4;
    swift_retain_n(v97, 2);
    v72 = v71;
    if (v70)
    {
      swift_bridgeObjectRetain(v23);
      goto LABEL_81;
    }
LABEL_120:
    v96(0);

    swift_unknownObjectRelease(v8);
LABEL_121:
    v59 = v92;
    swift_bridgeObjectRelease(v23);
    swift_release(v16);

    swift_release(v3);
LABEL_122:
    swift_unknownObjectRelease(v59);
    swift_release(a3);
    swift_release(v16);
    v84 = a2;
    goto LABEL_123;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v60 - v16);
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_126;
  }
  if (v16 <= v60)
    v63 = v95 >> 1;
  else
    v63 = v16;
  v64 = v63 - v16;
  v23 = v94 + 8 * v16;
  v3 = DSConflictStrategy_ptr;
  while (v64)
  {
    v65 = *(_QWORD *)v23;
    v23 += 8;
    v66 = objc_opt_self(FPItem);
    v16 = swift_dynamicCastObjCClassUnconditional(v65, v66, 0, 0, 0);
    v67 = swift_unknownObjectRetain(v65);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v67);
    v68 = *(_QWORD *)(aBlock[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v68);
    v69 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v16);
    specialized ContiguousArray._endMutation()(v69);
    --v64;
    if (!--v8)
    {
      v23 = aBlock[0];
      goto LABEL_78;
    }
  }
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  if (v23 < 0)
    v70 = (id)v23;
  else
    v70 = (id)(v23 & 0xFFFFFFFFFFFFFF8);
  v89 = (id)v4;
  swift_retain_n(v16, 2);
  v90 = v89;
  swift_bridgeObjectRetain(v23);
  v91 = _CocoaArrayWrapper.endIndex.getter(v70);
  swift_bridgeObjectRelease(v23);
  if (v91 <= 0)
    goto LABEL_120;
  swift_bridgeObjectRetain(v23);
  if (_CocoaArrayWrapper.endIndex.getter(v70))
  {
LABEL_81:
    v36 = v23 & 0xC000000000000001;
    if ((v23 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_128;
      }
      v73 = *(id *)(v23 + 32);
      goto LABEL_84;
    }
LABEL_126:
    v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
LABEL_84:
    v74 = v73;
    swift_bridgeObjectRelease(v23);
    v75 = objc_msgSend(v74, "effectiveParentItemIdentifier");

    v76 = v75;
    LOBYTE(v75) = sub_100122678(v23, (uint64_t)v76);

    if ((v75 & 1) != 0)
    {

      goto LABEL_86;
    }
    v96(0);

    swift_unknownObjectRelease(v98);
    v16 = (uint64_t)v97;
    goto LABEL_121;
  }
  swift_bridgeObjectRelease(v23);
  v36 = v23 & 0xC000000000000001;
LABEL_86:
  v70 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (!v36)
  {
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v77 = *(id *)(v23 + 32);
      goto LABEL_89;
    }
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_128:
  v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
LABEL_89:
  v78 = v77;
  v79 = objc_msgSend(v77, "itemID");

  v80 = swift_allocObject(&unk_1005C8920, 32, 7);
  *(_QWORD *)(v80 + 16) = sub_10012BA4C;
  *(_QWORD *)(v80 + 24) = v3;
  aBlock[4] = sub_10012BC44;
  v100 = v80;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10013103C;
  aBlock[3] = &unk_1005C8938;
  v81 = _Block_copy(aBlock);
  v82 = v100;
  swift_retain();
  swift_release(v82);
  objc_msgSend(v70, "fetchParentsForItemID:recursively:completionHandler:", v79, 0, v81);

  _Block_release(v81);
  swift_bridgeObjectRelease(v23);
  swift_release(v97);
  swift_release(v3);
  swift_unknownObjectRelease(v92);

  swift_unknownObjectRelease(v98);
  v83 = v101;
  swift_release(a3);
  swift_release(v97);
  v84 = v83;
LABEL_123:
  swift_bridgeObjectRelease(v84);
}

void sub_100127350(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v6 = swift_allocObject(&unk_1005C8A88, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(id *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a3, 2);
    if (v7)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
LABEL_20:
    a2(0);
    swift_release(a3);
    swift_release(v6);
    return;
  }
  if (a1 < 0)
    v7 = (id)a1;
  else
    v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_retain_n(a3, 2);
  swift_bridgeObjectRetain(a1);
  v18 = _CocoaArrayWrapper.endIndex.getter(v7);
  swift_bridgeObjectRelease(a1);
  if (v18 <= 0)
    goto LABEL_20;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v7))
  {
    swift_bridgeObjectRelease(a1);
    v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    v9 = *(id *)(a1 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease(a1);
  v11 = objc_msgSend(v10, "effectiveParentItemIdentifier");

  v19 = v11;
  LOBYTE(v10) = sub_100122678(a1, (uint64_t)v19);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release(a3);
    swift_release(v6);

    return;
  }

LABEL_9:
  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (v8)
  {
LABEL_23:
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(a1 + 32);
LABEL_12:
    v13 = v12;
    v14 = objc_msgSend(v12, "itemID", v19);

    v15 = swift_allocObject(&unk_1005C8AB0, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_10012BC5C;
    *(_QWORD *)(v15 + 24) = v6;
    aBlock[4] = sub_10012BC44;
    v21 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013103C;
    aBlock[3] = &unk_1005C8AC8;
    v16 = _Block_copy(aBlock);
    v17 = v21;
    swift_retain();
    swift_release(v17);
    objc_msgSend(v7, "fetchParentsForItemID:recursively:completionHandler:", v14, 0, v16);

    _Block_release(v16);
    swift_release(a3);
    swift_release(v6);

    return;
  }
  __break(1u);
}

void sub_100127650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _UNKNOWN **v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  char v58;
  uint64_t v59;
  int64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(uint64_t);
  void *v97;
  uint64_t v98;
  _QWORD aBlock[5];
  uint64_t v100;
  uint64_t v101;

  v8 = swift_allocObject(&unk_1005C89E8, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_92;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n(a3, 2);
  if (v10 < 1)
  {
LABEL_96:
    ((void (*)(_QWORD))a2)(0);
    swift_release(a3);
    swift_release(v8);
    return;
  }
  while (1)
  {
    v11 = swift_bridgeObjectRetain(a1);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
    v101 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(a1);
      a1 = isUniquelyReferenced_nonNull_bridgeObject;
      v101 = isUniquelyReferenced_nonNull_bridgeObject;
    }
    v97 = (void *)v8;
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      v16 = 0;
      v8 = v14 + 32;
      v17 = v14 + 24;
      while (1)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v8 + 8 * v16), v13);
        isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(ObjectType);
        if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
        {
          if (v16 >= v15 - 1)
            goto LABEL_17;
          v20 = (_QWORD *)(v17 + 8 * v15--);
          while (1)
          {
            v21 = swift_getObjectType(*v20, v13);
            isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(v21);
            if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
              break;
            --v15;
            --v20;
            if (v16 >= v15)
              goto LABEL_17;
          }
          v18 = *(_QWORD *)(v8 + 8 * v16);
          *(_QWORD *)(v8 + 8 * v16) = *v20;
          *v20 = v18;
        }
        if (++v16 >= v15)
          goto LABEL_17;
      }
    }
    v16 = 0;
LABEL_17:
    v96 = (void (*)(uint64_t))a2;
    specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
    a2 = v101;
    v22 = (unint64_t)v101 >> 62;
    if ((unint64_t)v101 >> 62)
    {
      if (v101 < 0)
        v87 = v101;
      else
        v87 = v101 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v101);
      v23 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v23 < v16)
        goto LABEL_130;
      swift_bridgeObjectRetain(a2);
      v8 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v8 < v16)
      {
LABEL_131:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(a2);
      v88 = _CocoaArrayWrapper.endIndex.getter(v87);
      swift_bridgeObjectRelease(a2);
      if (v88 < v23)
      {
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
    }
    else
    {
      v23 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v23 < v16)
        goto LABEL_104;
    }
    if (v23 < 0)
      goto LABEL_105;
    v3 = (_UNKNOWN **)(a2 & 0xC000000000000001);
    if ((a2 & 0xC000000000000001) != 0 && v16 != v23)
    {
      if (v16 >= (unint64_t)v23)
        goto LABEL_108;
      v24 = v16;
      do
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v24++);
      }
      while (v23 != v24);
    }
    if (v22)
    {
      if (a2 < 0)
        v8 = a2;
      else
        v8 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v98 = _CocoaArrayWrapper.subscript.getter(v16, v23, v8);
      v25 = v26;
      v4 = v27;
      v23 = v28;
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRetain(a2);
      v29 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(a2);
      if (v29 < 0)
        goto LABEL_109;
      swift_bridgeObjectRetain(a2);
      v8 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v25 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v23 = (2 * v23) | 1;
      v98 = a2 & 0xFFFFFFFFFFFFFF8;
      v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      v4 = v16;
    }
    if (v8 < v16)
      goto LABEL_106;
    if (v16 && v3)
    {
      for (i = 0; i != v16; v3 = (_UNKNOWN **)i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v22)
    {
      v32 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v31 = _CocoaArrayWrapper.subscript.getter(0, v16, v32);
      v8 = v33;
      v16 = v34;
      v95 = v35;
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v31 = a2 & 0xFFFFFFFFFFFFFF8;
      v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v95 = (2 * v16) | 1;
      swift_bridgeObjectRetain(a2);
      v16 = 0;
    }
    v36 = ((unint64_t)v23 >> 1) - v4;
    if ((unint64_t)v23 >> 1 != v4)
      break;
    v37 = v8;
    v4 = v31;
    v8 = (v95 >> 1) - v16;
    if (__OFSUB__(v95 >> 1, v16))
      goto LABEL_110;
    v38 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_54:
      swift_retain();
      sub_100127350((uint64_t)v38, v96, a3);
      swift_release(v97);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v98);
      swift_unknownObjectRelease(v4);
      swift_bridgeObjectRelease(v38);
      swift_release_n(a3, 2, v47);
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (uint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)((v95 >> 1) - v16);
    if (v8 < 0)
      goto LABEL_112;
    if (v16 <= (uint64_t)(v95 >> 1))
      v39 = v95 >> 1;
    else
      v39 = v16;
    v9 = v39 - v16;
    v40 = (uint64_t *)(v37 + 8 * v16);
    v3 = DSConflictStrategy_ptr;
    while (v9)
    {
      v41 = *v40++;
      v42 = objc_opt_self(FPItem);
      v43 = swift_dynamicCastObjCClassUnconditional(v41, v42, 0, 0, 0);
      v44 = swift_unknownObjectRetain(v41);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v44);
      v45 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
      v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
      a1 = (uint64_t)aBlock;
      specialized ContiguousArray._endMutation()(v46);
      --v9;
      if (!--v8)
      {
        v38 = (_QWORD *)aBlock[0];
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_92:
    if (a1 < 0)
      v85 = a1;
    else
      v85 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_retain_n(a3, 2);
    swift_bridgeObjectRetain(a1);
    v86 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(a1);
    if (v86 < 1)
      goto LABEL_96;
  }
  if ((uint64_t)((unint64_t)v23 >> 1) <= v4)
    goto LABEL_111;
  v94 = v8;
  v48 = *(_QWORD *)(v25 + 8 * v4);
  v49 = objc_opt_self(FINode);
  v50 = (void *)swift_dynamicCastObjCClass(v48, v49);
  if (!v50 || (v51 = objc_msgSend(v50, "parent")) == 0)
  {
    v96(0);
    swift_release(a3);
    swift_release(v97);
    swift_bridgeObjectRelease(a2);
    swift_unknownObjectRelease(v98);
    swift_unknownObjectRelease(v31);
    return;
  }
  v23 = (uint64_t)v51;
  v92 = v31;
  v93 = a3;
  swift_unknownObjectRetain(v98);
  v52 = (uint64_t *)(v25 + 8 * v4);
  do
  {
    v53 = *v52;
    v54 = objc_opt_self(FINode);
    v55 = (void *)swift_dynamicCastObjCClassUnconditional(v53, v54, 0, 0, 0);
    swift_unknownObjectRetain(v53);
    v56 = objc_msgSend(v55, "parent");
    if (!v56)
    {
      v62 = v98;
      swift_unknownObjectRelease(v98);
LABEL_67:
      swift_unknownObjectRelease(v53);
      v96(0);
      swift_release(v93);
      swift_release(v97);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v62);
      swift_unknownObjectRelease(v92);

      return;
    }
    v57 = v56;
    sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v4 = (uint64_t)(id)v23;
    v3 = v57;
    v58 = static NSObject.== infix(_:_:)(v3, v4);
    swift_unknownObjectRelease(v53);

    if ((v58 & 1) == 0)
    {
      v62 = v98;
      v53 = v98;
      goto LABEL_67;
    }
    ++v52;
    --v36;
  }
  while (v36);
  v59 = v98;
  swift_unknownObjectRelease(v98);
  v60 = v95 >> 1;
  if (v16 == v95 >> 1)
  {
    v61 = (id)v4;
    a3 = v93;
    v96(v23);
    swift_unknownObjectRelease(v92);

    v16 = (uint64_t)v97;
    goto LABEL_122;
  }
  v8 = v60 - v16;
  a3 = v93;
  if (__OFSUB__(v60, v16))
    goto LABEL_113;
  v23 = (uint64_t)_swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_78:
    v3 = (_UNKNOWN **)swift_allocObject(&unk_1005C8A10, 40, 7);
    v3[2] = (_UNKNOWN *)v4;
    v3[3] = sub_10012B820;
    v16 = (uint64_t)v97;
    v8 = v98;
    v3[4] = v97;
    if ((unint64_t)v23 >> 62)
      goto LABEL_114;
    v70 = *(id *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    v71 = (id)v4;
    swift_retain_n(v97, 2);
    v72 = v71;
    if (v70)
    {
      swift_bridgeObjectRetain(v23);
      goto LABEL_81;
    }
LABEL_120:
    v96(0);

    swift_unknownObjectRelease(v8);
LABEL_121:
    v59 = v92;
    swift_bridgeObjectRelease(v23);
    swift_release(v16);

    swift_release(v3);
LABEL_122:
    swift_unknownObjectRelease(v59);
    swift_release(a3);
    swift_release(v16);
    v84 = a2;
    goto LABEL_123;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v60 - v16);
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_126;
  }
  if (v16 <= v60)
    v63 = v95 >> 1;
  else
    v63 = v16;
  v64 = v63 - v16;
  v23 = v94 + 8 * v16;
  v3 = DSConflictStrategy_ptr;
  while (v64)
  {
    v65 = *(_QWORD *)v23;
    v23 += 8;
    v66 = objc_opt_self(FPItem);
    v16 = swift_dynamicCastObjCClassUnconditional(v65, v66, 0, 0, 0);
    v67 = swift_unknownObjectRetain(v65);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v67);
    v68 = *(_QWORD *)(aBlock[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v68);
    v69 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v16);
    specialized ContiguousArray._endMutation()(v69);
    --v64;
    if (!--v8)
    {
      v23 = aBlock[0];
      goto LABEL_78;
    }
  }
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  if (v23 < 0)
    v70 = (id)v23;
  else
    v70 = (id)(v23 & 0xFFFFFFFFFFFFFF8);
  v89 = (id)v4;
  swift_retain_n(v16, 2);
  v90 = v89;
  swift_bridgeObjectRetain(v23);
  v91 = _CocoaArrayWrapper.endIndex.getter(v70);
  swift_bridgeObjectRelease(v23);
  if (v91 <= 0)
    goto LABEL_120;
  swift_bridgeObjectRetain(v23);
  if (_CocoaArrayWrapper.endIndex.getter(v70))
  {
LABEL_81:
    v36 = v23 & 0xC000000000000001;
    if ((v23 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_128;
      }
      v73 = *(id *)(v23 + 32);
      goto LABEL_84;
    }
LABEL_126:
    v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
LABEL_84:
    v74 = v73;
    swift_bridgeObjectRelease(v23);
    v75 = objc_msgSend(v74, "effectiveParentItemIdentifier");

    v76 = v75;
    LOBYTE(v75) = sub_100122678(v23, (uint64_t)v76);

    if ((v75 & 1) != 0)
    {

      goto LABEL_86;
    }
    v96(0);

    swift_unknownObjectRelease(v98);
    v16 = (uint64_t)v97;
    goto LABEL_121;
  }
  swift_bridgeObjectRelease(v23);
  v36 = v23 & 0xC000000000000001;
LABEL_86:
  v70 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (!v36)
  {
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v77 = *(id *)(v23 + 32);
      goto LABEL_89;
    }
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_128:
  v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
LABEL_89:
  v78 = v77;
  v79 = objc_msgSend(v77, "itemID");

  v80 = swift_allocObject(&unk_1005C8A38, 32, 7);
  *(_QWORD *)(v80 + 16) = sub_10012BA4C;
  *(_QWORD *)(v80 + 24) = v3;
  aBlock[4] = sub_10012BC44;
  v100 = v80;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10013103C;
  aBlock[3] = &unk_1005C8A50;
  v81 = _Block_copy(aBlock);
  v82 = v100;
  swift_retain();
  swift_release(v82);
  objc_msgSend(v70, "fetchParentsForItemID:recursively:completionHandler:", v79, 0, v81);

  _Block_release(v81);
  swift_bridgeObjectRelease(v23);
  swift_release(v97);
  swift_release(v3);
  swift_unknownObjectRelease(v92);

  swift_unknownObjectRelease(v98);
  v83 = v101;
  swift_release(a3);
  swift_release(v97);
  v84 = v83;
LABEL_123:
  swift_bridgeObjectRelease(v84);
}

void sub_100128194(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v6 = swift_allocObject(&unk_1005C8BF0, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(id *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a3, 2);
    if (v7)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
LABEL_20:
    a2(0);
    swift_release(a3);
    swift_release(v6);
    return;
  }
  if (a1 < 0)
    v7 = (id)a1;
  else
    v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_retain_n(a3, 2);
  swift_bridgeObjectRetain(a1);
  v18 = _CocoaArrayWrapper.endIndex.getter(v7);
  swift_bridgeObjectRelease(a1);
  if (v18 <= 0)
    goto LABEL_20;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v7))
  {
    swift_bridgeObjectRelease(a1);
    v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    v9 = *(id *)(a1 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease(a1);
  v11 = objc_msgSend(v10, "effectiveParentItemIdentifier");

  v19 = v11;
  LOBYTE(v10) = sub_100122678(a1, (uint64_t)v19);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release(a3);
    swift_release(v6);

    return;
  }

LABEL_9:
  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (v8)
  {
LABEL_23:
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(a1 + 32);
LABEL_12:
    v13 = v12;
    v14 = objc_msgSend(v12, "itemID", v19);

    v15 = swift_allocObject(&unk_1005C8C18, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_10012BC60;
    *(_QWORD *)(v15 + 24) = v6;
    aBlock[4] = sub_10012BC44;
    v21 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013103C;
    aBlock[3] = &unk_1005C8C30;
    v16 = _Block_copy(aBlock);
    v17 = v21;
    swift_retain();
    swift_release(v17);
    objc_msgSend(v7, "fetchParentsForItemID:recursively:completionHandler:", v14, 0, v16);

    _Block_release(v16);
    swift_release(a3);
    swift_release(v6);

    return;
  }
  __break(1u);
}

void sub_100128494(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int i;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  int64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  void (*v99)(void);
  uint64_t v100;
  uint64_t v101;
  _QWORD aBlock[5];
  uint64_t v103;
  uint64_t v104;

  v8 = swift_allocObject(&unk_1005C8B50, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_92;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n(a3, 2);
  if (v10 < 1)
  {
LABEL_96:
    ((void (*)(_QWORD))a2)(0);
    swift_release(a3);
    swift_release(v8);
    return;
  }
  while (1)
  {
    v11 = swift_bridgeObjectRetain(a1);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
    v104 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(a1);
      a1 = isUniquelyReferenced_nonNull_bridgeObject;
      v104 = isUniquelyReferenced_nonNull_bridgeObject;
    }
    v99 = a2;
    v100 = v8;
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      v9 = 0;
      v16 = v14 + 32;
      v17 = v14 + 24;
      while (1)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v16 + 8 * v9), v13);
        isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(ObjectType);
        if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
        {
          if (v9 >= v15 - 1)
            goto LABEL_17;
          v20 = (_QWORD *)(v17 + 8 * v15--);
          while (1)
          {
            v21 = swift_getObjectType(*v20, v13);
            isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(v21);
            if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
              break;
            --v15;
            --v20;
            if (v9 >= v15)
              goto LABEL_17;
          }
          v18 = *(_QWORD *)(v16 + 8 * v9);
          *(_QWORD *)(v16 + 8 * v9) = *v20;
          *v20 = v18;
        }
        if (++v9 >= v15)
          goto LABEL_17;
      }
    }
    v9 = 0;
LABEL_17:
    specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
    v22 = v104;
    v23 = (unint64_t)v104 >> 62;
    if ((unint64_t)v104 >> 62)
    {
      if (v104 < 0)
        v89 = v104;
      else
        v89 = v104 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v104);
      v24 = _CocoaArrayWrapper.endIndex.getter(v89);
      swift_bridgeObjectRelease(v22);
      if (v24 < v9)
        goto LABEL_130;
      swift_bridgeObjectRetain(v22);
      v90 = _CocoaArrayWrapper.endIndex.getter(v89);
      swift_bridgeObjectRelease(v22);
      if (v90 < v9)
      {
LABEL_131:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(v22);
      v91 = _CocoaArrayWrapper.endIndex.getter(v89);
      swift_bridgeObjectRelease(v22);
      if (v91 < v24)
      {
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v24 < v9)
        goto LABEL_104;
    }
    if (v24 < 0)
      goto LABEL_105;
    v3 = v22 & 0xC000000000000001;
    if ((v22 & 0xC000000000000001) != 0 && v9 != v24)
    {
      if (v9 >= (unint64_t)v24)
        goto LABEL_108;
      v25 = v9;
      do
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v25++);
      }
      while (v24 != v25);
    }
    if (v23)
    {
      if (v22 < 0)
        v28 = v22;
      else
        v28 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v101 = _CocoaArrayWrapper.subscript.getter(v9, v24, v28);
      v26 = v29;
      v4 = v30;
      v24 = v31;
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRetain(v22);
      v32 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v22);
      if (v32 < 0)
        goto LABEL_109;
      swift_bridgeObjectRetain(v22);
      v27 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v26 = (v22 & 0xFFFFFFFFFFFFFF8) + 32;
      v24 = (2 * v24) | 1;
      v101 = v22 & 0xFFFFFFFFFFFFFF8;
      v27 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v22);
      v4 = v9;
    }
    if (v27 < v9)
      goto LABEL_106;
    if (v9 && v3)
    {
      for (i = 0; i != v9; v3 = i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v23)
    {
      v36 = v22 < 0 ? v22 : v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v34 = _CocoaArrayWrapper.subscript.getter(0, v9, v36);
      v35 = v37;
      v9 = v38;
      v98 = v39;
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v34 = v22 & 0xFFFFFFFFFFFFFF8;
      v35 = (v22 & 0xFFFFFFFFFFFFFF8) + 32;
      v98 = (2 * v9) | 1;
      swift_bridgeObjectRetain(v22);
      v9 = 0;
    }
    v23 = ((unint64_t)v24 >> 1) - v4;
    if ((unint64_t)v24 >> 1 != v4)
      break;
    v24 = v35;
    v4 = v34;
    v8 = (v98 >> 1) - v9;
    if (__OFSUB__(v98 >> 1, v9))
      goto LABEL_110;
    v40 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_54:
      swift_retain();
      sub_100128194((uint64_t)v40, (void (*)(_QWORD))v99, a3);
      swift_release(v100);
      swift_bridgeObjectRelease(v22);
      swift_unknownObjectRelease(v101);
      swift_unknownObjectRelease(v4);
      swift_bridgeObjectRelease(v40);
      swift_release_n(a3, 2, v48);
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (uint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)((v98 >> 1) - v9);
    if (v8 < 0)
      goto LABEL_112;
    if (v9 <= (uint64_t)(v98 >> 1))
      v41 = v98 >> 1;
    else
      v41 = v9;
    a2 = (void (*)(void))(v41 - v9);
    v42 = (uint64_t *)(v35 + 8 * v9);
    v3 = (unint64_t)DSConflictStrategy_ptr;
    while (a2)
    {
      v43 = *v42++;
      v44 = objc_opt_self(FPItem);
      v9 = swift_dynamicCastObjCClassUnconditional(v43, v44, 0, 0, 0);
      v45 = swift_unknownObjectRetain(v43);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v45);
      v46 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v46);
      v47 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v9);
      a1 = (uint64_t)aBlock;
      specialized ContiguousArray._endMutation()(v47);
      a2 = (void (*)(void))((char *)a2 - 1);
      if (!--v8)
      {
        v40 = (_QWORD *)aBlock[0];
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_92:
    if (a1 < 0)
      v87 = a1;
    else
      v87 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_retain_n(a3, 2);
    swift_bridgeObjectRetain(a1);
    v88 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(a1);
    if (v88 < 1)
      goto LABEL_96;
  }
  if ((uint64_t)((unint64_t)v24 >> 1) <= v4)
    goto LABEL_111;
  v97 = v35;
  v49 = *(_QWORD *)(v26 + 8 * v4);
  v50 = objc_opt_self(FINode);
  v51 = (void *)swift_dynamicCastObjCClass(v49, v50);
  if (!v51 || (v52 = objc_msgSend(v51, "parent")) == 0)
  {
    ((void (*)(_QWORD))v99)(0);
    swift_release(a3);
    swift_release(v100);
    swift_bridgeObjectRelease(v22);
    swift_unknownObjectRelease(v101);
    swift_unknownObjectRelease(v34);
    return;
  }
  v24 = (uint64_t)v52;
  v95 = a3;
  v96 = v34;
  swift_unknownObjectRetain(v101);
  v53 = (uint64_t *)(v26 + 8 * v4);
  do
  {
    v54 = *v53;
    v55 = objc_opt_self(FINode);
    v56 = (void *)swift_dynamicCastObjCClassUnconditional(v54, v55, 0, 0, 0);
    swift_unknownObjectRetain(v54);
    v57 = objc_msgSend(v56, "parent");
    if (!v57)
    {
      v64 = v101;
      swift_unknownObjectRelease(v101);
LABEL_67:
      swift_unknownObjectRelease(v54);
      ((void (*)(_QWORD))v99)(0);
      swift_release(v95);
      swift_release(v100);
      swift_bridgeObjectRelease(v22);
      swift_unknownObjectRelease(v64);
      swift_unknownObjectRelease(v96);

      return;
    }
    v58 = v57;
    v59 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v4 = (uint64_t)(id)v24;
    v60 = v58;
    v3 = static NSObject.== infix(_:_:)(v60, v4);
    swift_unknownObjectRelease(v54);

    if ((v3 & 1) == 0)
    {
      v64 = v101;
      v54 = v101;
      goto LABEL_67;
    }
    ++v53;
    --v23;
  }
  while (v23);
  swift_unknownObjectRelease(v101);
  v61 = v98 >> 1;
  if (v9 == v98 >> 1)
  {
    v62 = (id)v4;
    v63 = (void *)DOCNode.fpfs_syncFetchFPItem()(v59);
    a3 = v95;
    v99();
    swift_unknownObjectRelease(v96);

    swift_unknownObjectRelease(v101);
    v23 = v100;
    goto LABEL_122;
  }
  v65 = v61 - v9;
  a3 = v95;
  if (__OFSUB__(v61, v9))
    goto LABEL_113;
  v24 = (uint64_t)_swiftEmptyArrayStorage;
  v23 = v100;
  if (!v65)
  {
LABEL_78:
    v3 = swift_allocObject(&unk_1005C8B78, 40, 7);
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = sub_10012B884;
    *(_QWORD *)(v3 + 32) = v23;
    v9 = v96;
    if ((unint64_t)v24 >> 62)
      goto LABEL_114;
    v72 = *(id *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    v73 = (id)v4;
    swift_retain_n(v23, 2);
    v74 = v73;
    if (v72)
    {
      swift_bridgeObjectRetain(v24);
      goto LABEL_81;
    }
LABEL_120:
    ((void (*)(_QWORD))v99)(0);

    swift_unknownObjectRelease(v101);
LABEL_121:
    swift_bridgeObjectRelease(v24);
    swift_release(v23);

    swift_release(v3);
    swift_unknownObjectRelease(v9);
LABEL_122:
    swift_release(a3);
    swift_release(v23);
    v86 = v22;
    goto LABEL_123;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v61 - v9);
  if (v65 < 0)
  {
    __break(1u);
    goto LABEL_126;
  }
  if (v9 <= v61)
    v66 = v98 >> 1;
  else
    v66 = v9;
  v23 = v66 - v9;
  v24 = v97 + 8 * v9;
  v3 = (unint64_t)DSConflictStrategy_ptr;
  while (v23)
  {
    v67 = *(_QWORD *)v24;
    v24 += 8;
    v68 = objc_opt_self(FPItem);
    v9 = swift_dynamicCastObjCClassUnconditional(v67, v68, 0, 0, 0);
    v69 = swift_unknownObjectRetain(v67);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v70 = *(_QWORD *)(aBlock[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v70);
    v71 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v9);
    specialized ContiguousArray._endMutation()(v71);
    --v23;
    if (!--v65)
    {
      v24 = aBlock[0];
      v23 = v100;
      goto LABEL_78;
    }
  }
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  if (v24 < 0)
    v72 = (id)v24;
  else
    v72 = (id)(v24 & 0xFFFFFFFFFFFFFF8);
  v92 = (id)v4;
  swift_retain_n(v23, 2);
  v93 = v92;
  swift_bridgeObjectRetain(v24);
  v94 = _CocoaArrayWrapper.endIndex.getter(v72);
  swift_bridgeObjectRelease(v24);
  if (v94 <= 0)
    goto LABEL_120;
  swift_bridgeObjectRetain(v24);
  if (_CocoaArrayWrapper.endIndex.getter(v72))
  {
LABEL_81:
    v23 = v24 & 0xC000000000000001;
    if ((v24 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_128;
      }
      v75 = *(id *)(v24 + 32);
      goto LABEL_84;
    }
LABEL_126:
    v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
LABEL_84:
    v76 = v75;
    swift_bridgeObjectRelease(v24);
    v77 = objc_msgSend(v76, "effectiveParentItemIdentifier");

    v78 = v77;
    LOBYTE(v77) = sub_100122678(v24, (uint64_t)v78);

    if ((v77 & 1) != 0)
    {

      goto LABEL_86;
    }
    ((void (*)(_QWORD))v99)(0);

    swift_unknownObjectRelease(v101);
    v23 = v100;
    v9 = v96;
    goto LABEL_121;
  }
  swift_bridgeObjectRelease(v24);
  v23 = v24 & 0xC000000000000001;
LABEL_86:
  v72 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (!v23)
  {
    if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v79 = *(id *)(v24 + 32);
      goto LABEL_89;
    }
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_128:
  v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
LABEL_89:
  v80 = v79;
  v81 = objc_msgSend(v79, "itemID");

  v82 = swift_allocObject(&unk_1005C8BA0, 32, 7);
  *(_QWORD *)(v82 + 16) = sub_10012BA4C;
  *(_QWORD *)(v82 + 24) = v3;
  aBlock[4] = sub_10012BC44;
  v103 = v82;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10013103C;
  aBlock[3] = &unk_1005C8BB8;
  v83 = _Block_copy(aBlock);
  v84 = v103;
  swift_retain();
  swift_release(v84);
  objc_msgSend(v72, "fetchParentsForItemID:recursively:completionHandler:", v81, 0, v83);

  _Block_release(v83);
  swift_bridgeObjectRelease(v24);
  swift_release(v100);
  swift_release(v3);
  swift_unknownObjectRelease(v96);

  swift_unknownObjectRelease(v101);
  v85 = v104;
  swift_release(a3);
  swift_release(v100);
  v86 = v85;
LABEL_123:
  swift_bridgeObjectRelease(v86);
}

void sub_100128FF0(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  id v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v10 = (_QWORD *)swift_allocObject(&unk_1005C8538, 48, 7);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  if (!((unint64_t)a1 >> 62))
  {
    v11 = *(id *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a3, 2);
    swift_retain_n(a5, 2);
    if (v11)
    {
      swift_bridgeObjectRetain(a1);
LABEL_4:
      v12 = a1 & 0xC000000000000001;
      if ((a1 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_25;
        }
        v13 = *(id *)(a1 + 32);
      }
      v14 = v13;
      v15 = objc_msgSend(v13, "effectiveParentItemIdentifier", swift_bridgeObjectRelease(a1).n128_f64[0]);

      v16 = v15;
      LOBYTE(v14) = sub_100122678(a1, (uint64_t)v16);

      if ((v14 & 1) != 0)
      {

        goto LABEL_9;
      }
      sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v23 = (void *)static NSError.userCancelledError.getter();
      a2(v23, 1);
      swift_release(a3);
      swift_release(v10);

LABEL_21:
      goto LABEL_22;
    }
LABEL_20:
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v23 = (void *)static NSError.userCancelledError.getter();
    a2(v23, 1);
    swift_release(a3);
    swift_release(v10);
    goto LABEL_21;
  }
  if (a1 < 0)
    v11 = (id)a1;
  else
    v11 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_retain_n(a3, 2);
  swift_retain_n(a5, 2);
  swift_bridgeObjectRetain(a1);
  v24 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(a1);
  if (v24 <= 0)
    goto LABEL_20;
  swift_bridgeObjectRetain(a1);
  if (_CocoaArrayWrapper.endIndex.getter(v11))
    goto LABEL_4;
  swift_bridgeObjectRelease(a1);
  v12 = a1 & 0xC000000000000001;
LABEL_9:
  v11 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (v12)
  {
LABEL_25:
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(a1 + 32);
LABEL_12:
    v18 = v17;
    v19 = objc_msgSend(v17, "itemID");

    v20 = swift_allocObject(&unk_1005C8560, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_10012BA50;
    *(_QWORD *)(v20 + 24) = v10;
    aBlock[4] = sub_10012BC44;
    v26 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013103C;
    aBlock[3] = &unk_1005C8578;
    v21 = _Block_copy(aBlock);
    v22 = v26;
    swift_retain();
    objc_msgSend(v11, "fetchParentsForItemID:recursively:completionHandler:", v19, 0, v21, swift_release(v22).n128_f64[0]);

    _Block_release(v21);
    swift_release(a3);
    swift_release(v10);

LABEL_22:
    swift_release(a5);
    return;
  }
  __break(1u);
}

void sub_10012933C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int64_t a5)
{
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::Int i;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  int64_t v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  __n128 v63;
  __n128 v64;
  id v65;
  void *v66;
  int64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(void);
  void (*v102)(void *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  id v106;
  id v107;
  _QWORD aBlock[5];
  uint64_t v109;
  uint64_t v110;

  v10 = (_QWORD *)swift_allocObject(&unk_1005C8498, 48, 7);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v11 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_97;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n(a3, 2);
  swift_retain_n(a5, 2);
  if (v12 < 1)
  {
LABEL_101:
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v107 = (id)static NSError.userCancelledError.getter();
    ((void (*)(id, uint64_t))a2)(v107, 1);
    swift_release(a5);
    swift_release(a3);
    swift_release(v10);

    return;
  }
  while (1)
  {
    swift_bridgeObjectRetain(a1);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v13);
    v110 = a1;
    if (v11 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(a1);
      a1 = isUniquelyReferenced_nonNull_bridgeObject;
      v110 = isUniquelyReferenced_nonNull_bridgeObject;
    }
    v101 = (void (*)(void))a4;
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16)
    {
      v17 = 0;
      v18 = v15 + 32;
      a4 = v15 + 24;
      while (1)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v18 + 8 * v17));
        isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(ObjectType);
        if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
        {
          if (v17 >= v16 - 1)
            goto LABEL_17;
          v21 = (_QWORD *)(a4 + 8 * v16--);
          while (1)
          {
            v22 = swift_getObjectType(*v21);
            isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(v22);
            if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
              break;
            --v16;
            --v21;
            if (v17 >= v16)
              goto LABEL_17;
          }
          v19 = *(_QWORD *)(v18 + 8 * v17);
          *(_QWORD *)(v18 + 8 * v17) = *v21;
          *v21 = v19;
        }
        if (++v17 >= v16)
          goto LABEL_17;
      }
    }
    v17 = 0;
LABEL_17:
    v102 = (void (*)(void *, uint64_t))a2;
    specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
    a2 = v110;
    v23 = (unint64_t)v110 >> 62;
    if ((unint64_t)v110 >> 62)
    {
      if (v110 < 0)
        v92 = v110;
      else
        v92 = v110 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v110);
      v24 = _CocoaArrayWrapper.endIndex.getter(v92);
      swift_bridgeObjectRelease(a2);
      if (v24 < v17)
        goto LABEL_135;
      swift_bridgeObjectRetain(a2);
      v93 = _CocoaArrayWrapper.endIndex.getter(v92);
      swift_bridgeObjectRelease(a2);
      if (v93 < v17)
        goto LABEL_136;
      swift_bridgeObjectRetain(a2);
      v94 = _CocoaArrayWrapper.endIndex.getter(v92);
      swift_bridgeObjectRelease(a2);
      if (v94 < v24)
      {
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v24 < v17)
        goto LABEL_109;
    }
    if (v24 < 0)
      goto LABEL_110;
    v103 = a5;
    v104 = a3;
    a5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) != 0 && v17 != v24)
    {
      if (v17 >= (unint64_t)v24)
        goto LABEL_113;
      v25 = v17;
      do
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v25++);
      }
      while (v24 != v25);
    }
    if (v23)
    {
      if (a2 < 0)
        v28 = a2;
      else
        v28 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v106 = (id)_CocoaArrayWrapper.subscript.getter(v17, v24, v28);
      v26 = v29;
      a3 = v30;
      a4 = v31;
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRetain(a2);
      v32 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(a2);
      if (v32 < 0)
        goto LABEL_114;
      swift_bridgeObjectRetain(a2);
      v27 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v26 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      a4 = (2 * v24) | 1;
      v106 = (id)(a2 & 0xFFFFFFFFFFFFFF8);
      v27 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      a3 = v17;
    }
    if (v27 < v17)
      goto LABEL_111;
    if (v17 && a5)
    {
      for (i = 0; i != v17; ++i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i);
      }
    }
    v105 = v10;
    if (v23)
    {
      v36 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v34 = _CocoaArrayWrapper.subscript.getter(0, v17, v36);
      v35 = v37;
      a5 = v38;
      v23 = v39;
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v34 = a2 & 0xFFFFFFFFFFFFFF8;
      v35 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v23 = (2 * v17) | 1;
      swift_bridgeObjectRetain(a2);
      a5 = 0;
    }
    v10 = (_QWORD *)((a4 >> 1) - a3);
    if (a4 >> 1 != a3)
      break;
    v17 = v34;
    a4 = v23 >> 1;
    v11 = (v23 >> 1) - a5;
    if (__OFSUB__(v23 >> 1, a5))
      goto LABEL_115;
    a3 = v35;
    v40 = _swiftEmptyArrayStorage;
    if (!v11)
    {
      v10 = v105;
LABEL_66:
      swift_retain();
      swift_retain();
      sub_100128FF0((uint64_t)v40, v102, v104, (uint64_t)v101, v103);
      swift_release(v10);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v106);
      swift_unknownObjectRelease(v17);
      v63 = swift_bridgeObjectRelease(v40);
      swift_release_n(v104, 2, v63);
      swift_release_n(v103, 2, v64);
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (uint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)((v23 >> 1) - a5);
    v10 = v105;
    if ((v11 & 0x8000000000000000) != 0)
      goto LABEL_117;
    if (a5 <= (uint64_t)a4)
      v41 = v23 >> 1;
    else
      v41 = a5;
    v42 = v41 - a5;
    a3 += 8 * a5;
    a5 = (int64_t)DSConflictStrategy_ptr;
    while (v42)
    {
      v43 = *(id *)a3;
      a3 += 8;
      v44 = objc_opt_self(FPItem);
      a4 = swift_dynamicCastObjCClassUnconditional(v43, v44, 0, 0, 0);
      v45 = swift_unknownObjectRetain(v43);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v45);
      v46 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v46);
      v47 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, a4);
      a1 = (uint64_t)aBlock;
      specialized ContiguousArray._endMutation()(v47);
      --v42;
      if (!--v11)
      {
        v40 = (_QWORD *)aBlock[0];
        goto LABEL_66;
      }
    }
    __break(1u);
LABEL_97:
    if (a1 < 0)
      v90 = a1;
    else
      v90 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_retain_n(a3, 2);
    swift_retain_n(a5, 2);
    swift_bridgeObjectRetain(a1);
    v91 = _CocoaArrayWrapper.endIndex.getter(v90);
    swift_bridgeObjectRelease(a1);
    if (v91 < 1)
      goto LABEL_101;
  }
  if ((uint64_t)(a4 >> 1) <= a3)
    goto LABEL_116;
  v100 = v35;
  v48 = *(_QWORD *)(v26 + 8 * a3);
  v49 = objc_opt_self(FINode);
  v50 = (void *)swift_dynamicCastObjCClass(v48, v49);
  if (!v50 || (v51 = objc_msgSend(v50, "parent")) == 0)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v62 = (void *)static NSError.userCancelledError.getter();
    v102(v62, 1);
    swift_release(v103);
    swift_release(v104);
    swift_release(v105);
    swift_bridgeObjectRelease(a2);
    swift_unknownObjectRelease(v106);
    swift_unknownObjectRelease(v34);

    return;
  }
  a4 = (unint64_t)v51;
  v98 = v23;
  v99 = v34;
  swift_unknownObjectRetain(v106);
  a3 = v26 + 8 * a3;
  do
  {
    v52 = *(id *)a3;
    v53 = objc_opt_self(FINode);
    v54 = (void *)swift_dynamicCastObjCClassUnconditional(v52, v53, 0, 0, 0);
    swift_unknownObjectRetain(v52);
    v55 = objc_msgSend(v54, "parent");
    if (!v55)
    {
      v65 = v106;
      swift_unknownObjectRelease(v106);
LABEL_69:
      swift_unknownObjectRelease(v52);
      sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v66 = (void *)static NSError.userCancelledError.getter();
      v102(v66, 1);
      swift_release(v103);
      swift_release(v104);
      swift_release(v105);
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v65);
      swift_unknownObjectRelease(v99);

      return;
    }
    v56 = v55;
    v23 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v17 = (Swift::Int)(id)a4;
    v57 = v56;
    LOBYTE(v56) = static NSObject.== infix(_:_:)(v57, v17);
    swift_unknownObjectRelease(v52);

    if ((v56 & 1) == 0)
    {
      v65 = v106;
      v52 = v106;
      goto LABEL_69;
    }
    a3 += 8;
    v10 = (_QWORD *)((char *)v10 - 1);
  }
  while (v10);
  swift_unknownObjectRelease(v106);
  v58 = v98 >> 1;
  if (a5 != v98 >> 1)
  {
    v67 = v58 - a5;
    v10 = v105;
    if (__OFSUB__(v58, a5))
    {
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v67)
    {
      a5 = (int64_t)_swiftEmptyArrayStorage;
LABEL_83:
      a4 = swift_allocObject(&unk_1005C84C0, 40, 7);
      *(_QWORD *)(a4 + 16) = v17;
      *(_QWORD *)(a4 + 24) = sub_10012B6E4;
      *(_QWORD *)(a4 + 32) = v105;
      a3 = v103;
      v23 = v104;
      if (!((unint64_t)a5 >> 62))
      {
        v74 = *(id *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
        v75 = (id)v17;
        swift_retain_n(v105, 2);
        v76 = v75;
        if (v74)
        {
          v101 = (void (*)(void))a4;
          swift_bridgeObjectRetain(a5);
          goto LABEL_86;
        }
LABEL_125:
        sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
        v89 = (void *)static NSError.userCancelledError.getter();
        v102(v89, 1);

        swift_unknownObjectRelease(v106);
        goto LABEL_126;
      }
LABEL_119:
      if (a5 < 0)
        v95 = a5;
      else
        v95 = a5 & 0xFFFFFFFFFFFFFF8;
      v96 = (id)v17;
      swift_retain_n(v10, 2);
      v97 = v96;
      swift_bridgeObjectRetain(a5);
      v74 = (id)_CocoaArrayWrapper.endIndex.getter(v95);
      swift_bridgeObjectRelease(a5);
      if ((uint64_t)v74 > 0)
      {
        v101 = (void (*)(void))a4;
        swift_bridgeObjectRetain(a5);
        if (!_CocoaArrayWrapper.endIndex.getter(v95))
        {
          swift_bridgeObjectRelease(a5);
          a4 = a5 & 0xC000000000000001;
LABEL_91:
          v74 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
          if (!a4)
          {
            if (!*(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
              return;
            }
            v81 = *(id *)(a5 + 32);
LABEL_94:
            v82 = v81;
            v83 = objc_msgSend(v81, "itemID");

            v84 = swift_allocObject(&unk_1005C84E8, 32, 7);
            *(_QWORD *)(v84 + 16) = sub_10012BA4C;
            *(_QWORD *)(v84 + 24) = v101;
            aBlock[4] = sub_10012BC44;
            v109 = v84;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10013103C;
            aBlock[3] = &unk_1005C8500;
            v85 = _Block_copy(aBlock);
            v86 = v109;
            swift_retain();
            objc_msgSend(v74, "fetchParentsForItemID:recursively:completionHandler:", v83, 0, v85, swift_release(v86).n128_f64[0]);

            _Block_release(v85);
            swift_bridgeObjectRelease(a5);
            swift_release(v10);
            swift_release(v101);
            swift_unknownObjectRelease(v99);

            swift_unknownObjectRelease(v106);
            v87 = v110;
            swift_release(a3);
            swift_release(v23);
            swift_release(v10);
            v88 = v87;
            goto LABEL_128;
          }
LABEL_133:
          v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a5);
          goto LABEL_94;
        }
LABEL_86:
        a4 = a5 & 0xC000000000000001;
        if ((a5 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_133;
          }
          v77 = *(id *)(a5 + 32);
          goto LABEL_89;
        }
LABEL_131:
        v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a5);
LABEL_89:
        v78 = v77;
        v79 = objc_msgSend(v77, "effectiveParentItemIdentifier", swift_bridgeObjectRelease(a5).n128_f64[0]);

        v80 = v79;
        LOBYTE(v79) = sub_100122678(a5, (uint64_t)v80);

        if ((v79 & 1) != 0)
        {

          goto LABEL_91;
        }
        sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
        v89 = (void *)static NSError.userCancelledError.getter();
        v102(v89, 1);

        swift_unknownObjectRelease(v106);
        a4 = (unint64_t)v101;
LABEL_126:

        swift_bridgeObjectRelease(a5);
        swift_release(v10);

        swift_release(a4);
        goto LABEL_127;
      }
      goto LABEL_125;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v58 - a5);
    if (v67 < 0)
    {
      __break(1u);
      goto LABEL_131;
    }
    if (a5 <= v58)
      v68 = v98 >> 1;
    else
      v68 = a5;
    v23 = v68 - a5;
    a3 = v100 + 8 * a5;
    a5 = (int64_t)DSConflictStrategy_ptr;
    while (v23)
    {
      v69 = *(id *)a3;
      a3 += 8;
      v70 = objc_opt_self(FPItem);
      a4 = swift_dynamicCastObjCClassUnconditional(v69, v70, 0, 0, 0);
      v71 = swift_unknownObjectRetain(v69);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v71);
      v72 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v72);
      v73 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, a4);
      specialized ContiguousArray._endMutation()(v73);
      --v23;
      if (!--v67)
      {
        a5 = aBlock[0];
        goto LABEL_83;
      }
    }
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  v59 = (id)v17;
  v60 = objc_msgSend(v59, "fpfs_fpItem");
  v10 = v105;
  if (v60)
  {
    v61 = v60;
    a3 = v103;
    v101();
    v23 = v104;
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v61 = (void *)static NSError.userCancelledError.getter();
    v23 = v104;
    v102(v61, 1);
    a3 = v103;
  }

  swift_unknownObjectRelease(v106);
LABEL_127:
  swift_unknownObjectRelease(v99);
  swift_release(a3);
  swift_release(v23);
  swift_release(v10);
  v88 = a2;
LABEL_128:
  swift_bridgeObjectRelease(v88);
}

void sub_10012A024(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  id v3;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  if (!((unint64_t)a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
LABEL_20:
    a2(0);
    return;
  }
  if (a1 < 0)
    v3 = (id)a1;
  else
    v3 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(a1);
  v17 = _CocoaArrayWrapper.endIndex.getter(v3);
  swift_bridgeObjectRelease(a1);
  if (v17 <= 0)
    goto LABEL_20;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v3))
  {
    swift_bridgeObjectRelease(a1);
    v7 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  v7 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    v8 = *(id *)(a1 + 32);
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "effectiveParentItemIdentifier", swift_bridgeObjectRelease(a1).n128_f64[0]);

  v18 = v10;
  LOBYTE(v9) = sub_100122678(a1, (uint64_t)v18);

  if ((v9 & 1) == 0)
  {
    a2(0);

    return;
  }

LABEL_9:
  v3 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (v7)
  {
LABEL_24:
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(a1 + 32);
LABEL_12:
    v12 = v11;
    v13 = objc_msgSend(v11, "itemID", v18);

    v14 = swift_allocObject(&unk_1005C9230, 32, 7);
    *(_QWORD *)(v14 + 16) = a2;
    *(_QWORD *)(v14 + 24) = a3;
    aBlock[4] = sub_10012BC44;
    v20 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013103C;
    aBlock[3] = &unk_1005C9248;
    v15 = _Block_copy(aBlock);
    v16 = v20;
    swift_retain();
    objc_msgSend(v3, "fetchParentsForItemID:recursively:completionHandler:", v13, 0, v15, swift_release(v16).n128_f64[0]);

    _Block_release(v15);
    return;
  }
  __break(1u);
}

void sub_10012A298(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  int64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD);
  unint64_t v30;
  Swift::Int i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  int64_t v55;
  void (*v56)(_QWORD);
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  int64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(_QWORD);
  void (*v70)(_QWORD);
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(_QWORD);
  void (*v87)(_QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  void (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  _QWORD aBlock[5];
  uint64_t v96;
  uint64_t v97;

  v8 = a1;
  v9 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_92;
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_96:
    ((void (*)(_QWORD))a2)(0);
    return;
  }
  while (1)
  {
    v10 = swift_bridgeObjectRetain(v8);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v10);
    v97 = v8;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(v8);
      v8 = isUniquelyReferenced_nonNull_bridgeObject;
      v97 = isUniquelyReferenced_nonNull_bridgeObject;
    }
    v12 = v8 & 0xFFFFFFFFFFFFFF8;
    v13 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
      v14 = 0;
      v15 = v12 + 32;
      v3 = v12 + 24;
      while (1)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v15 + 8 * v14));
        isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(ObjectType);
        if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
        {
          if (v14 >= v13 - 1)
            goto LABEL_17;
          v18 = (_QWORD *)(v3 + 8 * v13--);
          while (1)
          {
            v19 = swift_getObjectType(*v18);
            isUniquelyReferenced_nonNull_bridgeObject = DOCNode.isFINode.getter(v19);
            if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
              break;
            --v13;
            --v18;
            if (v14 >= v13)
              goto LABEL_17;
          }
          v16 = *(_QWORD *)(v15 + 8 * v14);
          *(_QWORD *)(v15 + 8 * v14) = *v18;
          *v18 = v16;
        }
        if (++v14 >= v13)
          goto LABEL_17;
      }
    }
    v14 = 0;
LABEL_17:
    v93 = (uint64_t)a3;
    specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
    v20 = v97;
    v21 = (uint64_t *)((unint64_t)v97 >> 62);
    if ((unint64_t)v97 >> 62)
    {
      if (v97 < 0)
        v83 = v97;
      else
        v83 = v97 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v97);
      v22 = _CocoaArrayWrapper.endIndex.getter(v83);
      swift_bridgeObjectRelease(v97);
      if (v22 < v14)
        goto LABEL_129;
      swift_bridgeObjectRetain(v97);
      v84 = _CocoaArrayWrapper.endIndex.getter(v83);
      swift_bridgeObjectRelease(v97);
      if (v84 < v14)
      {
LABEL_130:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(v97);
      v85 = _CocoaArrayWrapper.endIndex.getter(v83);
      swift_bridgeObjectRelease(v97);
      if (v85 < v22)
      {
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
    }
    else
    {
      v22 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v22 < v14)
        goto LABEL_105;
    }
    if (v22 < 0)
      goto LABEL_106;
    v4 = v97 & 0xC000000000000001;
    if ((v97 & 0xC000000000000001) != 0 && v14 != v22)
    {
      if (v14 >= (unint64_t)v22)
        goto LABEL_109;
      v23 = v14;
      do
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v23++);
        v3 = v23;
      }
      while (v22 != v23);
    }
    v92 = (void (*)(_QWORD))a2;
    if (v21)
    {
      if (v97 < 0)
        v27 = v97;
      else
        v27 = v97 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v97);
      v94 = _CocoaArrayWrapper.subscript.getter(v14, v22, v27);
      v24 = v28;
      a2 = (uint64_t)v29;
      v25 = v30;
      swift_bridgeObjectRelease(v97);
      swift_bridgeObjectRetain(v97);
      v3 = _CocoaArrayWrapper.endIndex.getter(v27);
      swift_bridgeObjectRelease(v97);
      if (v3 < 0)
        goto LABEL_110;
      swift_bridgeObjectRetain(v97);
      v26 = _CocoaArrayWrapper.endIndex.getter(v27);
      swift_bridgeObjectRelease(v97);
    }
    else
    {
      v24 = (v97 & 0xFFFFFFFFFFFFFF8) + 32;
      v25 = (2 * v22) | 1;
      v94 = v97 & 0xFFFFFFFFFFFFFF8;
      v26 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v97);
      a2 = v14;
    }
    if (v26 < v14)
      goto LABEL_107;
    if (v14 && v4)
    {
      for (i = 0; i != v14; v4 = i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v21)
    {
      v33 = v97 < 0 ? v97 : v97 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v97);
      v3 = _CocoaArrayWrapper.subscript.getter(0, v14, v33);
      v32 = v34;
      v9 = v35;
      v91 = v36;
      swift_bridgeObjectRelease(v97);
    }
    else
    {
      v3 = v97 & 0xFFFFFFFFFFFFFF8;
      v32 = (v97 & 0xFFFFFFFFFFFFFF8) + 32;
      v91 = (2 * v14) | 1;
      swift_bridgeObjectRetain(v97);
      v9 = 0;
    }
    v21 = (uint64_t *)((v25 >> 1) - a2);
    if (v25 >> 1 != a2)
      break;
    v21 = (uint64_t *)v32;
    v8 = (v91 >> 1) - v9;
    if (__OFSUB__(v91 >> 1, v9))
      goto LABEL_111;
    v37 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_54:
      sub_10012A024((uint64_t)v37, v92, v93);
      swift_bridgeObjectRelease(v97);
      swift_unknownObjectRelease(v94);
      swift_unknownObjectRelease(v3);
      swift_bridgeObjectRelease(v37);
      return;
    }
    v4 = v3;
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)((v91 >> 1) - v9);
    if (v8 < 0)
      goto LABEL_113;
    if (v9 <= (uint64_t)(v91 >> 1))
      v38 = v91 >> 1;
    else
      v38 = v9;
    v3 = v38 - v9;
    a3 = (uint64_t *)(v32 + 8 * v9);
    a2 = (uint64_t)DSConflictStrategy_ptr;
    while (v3)
    {
      v39 = *a3++;
      v40 = objc_opt_self(FPItem);
      v9 = swift_dynamicCastObjCClassUnconditional(v39, v40, 0, 0, 0);
      v41 = swift_unknownObjectRetain(v39);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v41);
      v42 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v42);
      v43 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v9);
      specialized ContiguousArray._endMutation()(v43);
      --v3;
      if (!--v8)
      {
        v37 = (_QWORD *)aBlock[0];
        v3 = v4;
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_92:
    if (v8 < 0)
      v81 = v8;
    else
      v81 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v82 = _CocoaArrayWrapper.endIndex.getter(v81);
    swift_bridgeObjectRelease(v8);
    if (v82 < 1)
      goto LABEL_96;
  }
  if ((uint64_t)(v25 >> 1) <= a2)
    goto LABEL_112;
  v44 = *(_QWORD *)(v24 + 8 * a2);
  v45 = objc_opt_self(FINode);
  v46 = (void *)swift_dynamicCastObjCClass(v44, v45);
  if (!v46 || (v47 = objc_msgSend(v46, "parent")) == 0)
  {
    v92(0);
    swift_bridgeObjectRelease(v97);
    swift_unknownObjectRelease(v94);
    swift_unknownObjectRelease(v3);
    return;
  }
  v48 = v47;
  v89 = v32;
  v90 = v3;
  swift_unknownObjectRetain(v94);
  v49 = (uint64_t *)(v24 + 8 * a2);
  do
  {
    v50 = *v49;
    v51 = objc_opt_self(FINode);
    v52 = (void *)swift_dynamicCastObjCClassUnconditional(v50, v51, 0, 0, 0);
    swift_unknownObjectRetain(v50);
    v53 = objc_msgSend(v52, "parent");
    if (!v53)
    {
      v58 = v94;
      swift_unknownObjectRelease(v94);
LABEL_67:
      v59 = swift_unknownObjectRelease(v50);
      ((void (*)(_QWORD, __n128))v92)(0, v59);
      swift_bridgeObjectRelease(v97);
      swift_unknownObjectRelease(v58);
      swift_unknownObjectRelease(v90);

      return;
    }
    v54 = v53;
    v5 = (_QWORD *)sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    a2 = v48;
    v4 = v54;
    LOBYTE(v54) = static NSObject.== infix(_:_:)(v4, a2);
    swift_unknownObjectRelease(v50);

    if ((v54 & 1) == 0)
    {
      v58 = v94;
      v50 = v94;
      goto LABEL_67;
    }
    ++v49;
    v21 = (uint64_t *)((char *)v21 - 1);
  }
  while (v21);
  v21 = (uint64_t *)v94;
  swift_unknownObjectRelease(v94);
  v55 = v91 >> 1;
  if (v9 == v91 >> 1)
  {
    v56 = (void (*)(_QWORD))(id)a2;
    v92(v48);
    swift_unknownObjectRelease(v90);

    v57 = v94;
    goto LABEL_123;
  }
  v60 = v55 - v9;
  v3 = v93;
  if (__OFSUB__(v55, v9))
    goto LABEL_114;
  v4 = (int64_t)_swiftEmptyArrayStorage;
  if (!v60)
  {
LABEL_78:
    v5 = (_QWORD *)swift_allocObject(&unk_1005C91B8, 40, 7);
    v5[2] = a2;
    v5[3] = v92;
    v5[4] = v3;
    if ((unint64_t)v4 >> 62)
      goto LABEL_115;
    v68 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v69 = (void (*)(_QWORD))(id)a2;
    swift_retain_n(v3, 2);
    v70 = v69;
    if (v68)
    {
      swift_bridgeObjectRetain(v4);
      goto LABEL_81;
    }
LABEL_121:
    v92(0);

    swift_unknownObjectRelease(v21);
LABEL_122:
    swift_bridgeObjectRelease(v4);
    swift_release(v3);

    swift_release(v5);
    v57 = v90;
LABEL_123:
    swift_unknownObjectRelease(v57);
    swift_bridgeObjectRelease(v20);
    return;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v55 - v9);
  if (v60 < 0)
  {
    __break(1u);
    goto LABEL_125;
  }
  if (v9 <= v55)
    v61 = v91 >> 1;
  else
    v61 = v9;
  v3 = v61 - v9;
  v21 = (uint64_t *)(v89 + 8 * v9);
  v4 = (int64_t)DSConflictStrategy_ptr;
  while (v3)
  {
    v62 = *v21++;
    v63 = objc_opt_self(FPItem);
    v64 = swift_dynamicCastObjCClassUnconditional(v62, v63, 0, 0, 0);
    v65 = swift_unknownObjectRetain(v62);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v65);
    v66 = *(_QWORD *)(aBlock[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v66);
    v67 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
    specialized ContiguousArray._endMutation()(v67);
    --v3;
    if (!--v60)
    {
      v21 = (uint64_t *)v94;
      v4 = aBlock[0];
      v3 = v93;
      goto LABEL_78;
    }
  }
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  if (v4 < 0)
    v69 = (void (*)(_QWORD))v4;
  else
    v69 = (void (*)(_QWORD))(v4 & 0xFFFFFFFFFFFFFF8);
  v86 = (void (*)(_QWORD))(id)a2;
  swift_retain_n(v3, 2);
  v87 = v86;
  swift_bridgeObjectRetain(v4);
  v88 = _CocoaArrayWrapper.endIndex.getter(v69);
  swift_bridgeObjectRelease(v4);
  if (v88 <= 0)
    goto LABEL_121;
  swift_bridgeObjectRetain(v4);
  if (_CocoaArrayWrapper.endIndex.getter(v69))
  {
LABEL_81:
    v55 = v4 & 0xC000000000000001;
    if ((v4 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_127;
      }
      v71 = *(id *)(v4 + 32);
      goto LABEL_84;
    }
LABEL_125:
    v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
LABEL_84:
    v72 = v71;
    v73 = objc_msgSend(v71, "effectiveParentItemIdentifier", swift_bridgeObjectRelease(v4).n128_f64[0]);

    v74 = v73;
    LOBYTE(v73) = sub_100122678(v4, (uint64_t)v74);

    if ((v73 & 1) != 0)
    {

      goto LABEL_86;
    }
    v92(0);

    swift_unknownObjectRelease(v21);
    goto LABEL_122;
  }
  swift_bridgeObjectRelease(v4);
  v55 = v4 & 0xC000000000000001;
LABEL_86:
  v69 = (void (*)(_QWORD))objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (!v55)
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v75 = *(id *)(v4 + 32);
      goto LABEL_89;
    }
    __break(1u);
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
LABEL_127:
  v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
LABEL_89:
  v76 = v75;
  v77 = objc_msgSend(v75, "itemID", v89);

  v78 = swift_allocObject(&unk_1005C91E0, 32, 7);
  *(_QWORD *)(v78 + 16) = sub_10012BA4C;
  *(_QWORD *)(v78 + 24) = v5;
  aBlock[4] = sub_10012BC44;
  v96 = v78;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10013103C;
  aBlock[3] = &unk_1005C91F8;
  v79 = _Block_copy(aBlock);
  v80 = v96;
  swift_retain();
  objc_msgSend(v69, "fetchParentsForItemID:recursively:completionHandler:", v77, 0, v79, swift_release(v80).n128_f64[0]);

  _Block_release(v79);
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_release(v5);
  swift_unknownObjectRelease(v90);

  swift_unknownObjectRelease(v21);
  swift_bridgeObjectRelease(v97);
}

uint64_t sub_10012AD00()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10012AD34()
{
  uint64_t v0;

  sub_10011FA18(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

id sub_10012AD44(uint64_t (*a1)(uint64_t a1), uint64_t a2)
{
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;
  void *v19;
  id v20;
  void **aBlock;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  void *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  Swift::String v27;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v5 = result;
    v27._countAndFlagsBits = 0xD00000000000001BLL;
    v27._object = (void *)0x800000010050FFA0;
    v6._countAndFlagsBits = 0x6572616853;
    v6._object = (void *)0xE500000000000000;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v27)._object;

    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierShare);
    v11 = v10;
    v12 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_retain();
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v25 = a1;
    v26 = a2;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100120C10;
    v24 = &unk_1005C8438;
    v15 = _Block_copy(&aBlock);
    v16 = objc_msgSend(v12, "initWithIdentifier:localizedTitle:unresolvedHandler:", v13, v14, v15);

    _Block_release(v15);
    swift_release(v26);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

    objc_msgSend(v16, "setImage:", v18);
    objc_msgSend(v16, "setPerformActionExitsEditMode:", 0);
    objc_msgSend(v16, "setSupportsMultipleItems:", 1);
    objc_msgSend(v16, "setNavigationSide:", 2);
    objc_msgSend(v16, "setAvailability:", UIDocumentBrowserActionAvailabilityPreviewQuickActions | 1);
    objc_msgSend(v16, "setMenuSortOrder:", 16);
    v25 = sub_10011DA18;
    v26 = 0;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100068430;
    v24 = &unk_1005C8460;
    v19 = _Block_copy(&aBlock);
    v20 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v19);
    _Block_release(v19);
    swift_release(v26);
    objc_msgSend(v16, "setFilteringPredicate:", v20);

    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10012B03C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.UI.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v18 = a1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc(32, -1);
    v20 = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(a2);
    v19 = sub_1000544FC(v18, a2, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Presentation Error] %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_10012B204(void *a1, UIModalPresentationStyle a2, uint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  BOOL v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v8 = swift_allocObject(&unk_1005C8010, 17, 7);
  *(_BYTE *)(v8 + 16) = 0;
  v9 = swift_allocObject(&unk_1005C8010, 17, 7);
  *(_BYTE *)(v9 + 16) = 0;
  v10 = *(void **)&a4[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy];
  ObjectType = swift_getObjectType(a3, v11);
  v13 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  v21 = (id)v13;
  if (a2 != UIModalPresentationPopover || (v10 ? (v14 = v13 == 0) : (v14 = 1), v14))
  {
    sub_10011F064(a2, 0, 0, v8, a1, v9);
    sub_10011F378(v8, a1, v9, (uint64_t)a4);
    swift_release(v8);
    swift_release(v9);

  }
  else
  {
    v15 = (_QWORD *)swift_allocObject(&unk_1005C8038, 64, 7);
    v15[2] = a4;
    v15[3] = v8;
    v15[4] = a1;
    v15[5] = v9;
    v15[6] = v10;
    v15[7] = v21;
    aBlock[4] = sub_10012B4B0;
    v23 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100083540;
    aBlock[3] = &unk_1005C8050;
    v16 = _Block_copy(aBlock);
    v17 = v23;
    swift_unknownObjectRetain_n(v10, 2);
    v18 = v21;
    v19 = a4;
    swift_retain();
    v20 = a1;
    swift_retain();
    swift_release(v17);
    objc_msgSend(v10, "getViewFor:waitForNewThumbnail::", v18, 0, v16);
    _Block_release(v16);
    swift_release(v8);
    swift_release(v9);
    swift_unknownObjectRelease(v10);

  }
}

uint64_t sub_10012B404()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10012B440()
{
  uint64_t v0;

  sub_10011FF94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(char **)(v0 + 48));
}

uint64_t sub_10012B454()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10012B464()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

id sub_10012B4B0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10011F570(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_10012B4C0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10012B4FC(void *a1)
{
  uint64_t v1;

  return sub_10011F6D4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

id sub_10012B508(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, "setSourceItem:", *(_QWORD *)(v1 + 16));
}

uint64_t sub_10012B518()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012B53C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10012B570()
{
  uint64_t v0;

  sub_10011F8B4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_10012B57C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10011F9AC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10012B584(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_10012B5A8()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_release);
}

Swift::Int sub_10012B5B4(uint64_t a1)
{
  uint64_t v1;

  return sub_10011CB64(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10012B5C0(void *a1)
{
  uint64_t v1;

  sub_10011C98C(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

void sub_10012B5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10011CA90(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_10012B5D4()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_release);
}

void sub_10012B5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100119E8C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10012B5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10011A338(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10012B5F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCSmartFolderInputFile(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012B62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10012B6A0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1001207AC(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_10012B6E4(void *a1)
{
  uint64_t v1;

  sub_100481A28(a1, *(void (**)(id, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t sub_10012B6F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10012B724()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10012B748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10011BE0C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10012B750()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10012B77C(uint64_t a1)
{
  uint64_t v1;

  sub_10011BF44(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_10012B788()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012B7AC(uint64_t a1)
{
  uint64_t v1;

  return sub_10011C594(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10012B7B4()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_10012B7C0(uint64_t a1)
{
  uint64_t v1;

  return sub_10017E5CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10012B7C8(uint64_t *a1)
{
  uint64_t v1;

  return sub_10017AEC0(a1, *(_QWORD *)(v1 + 16), *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 24)) & 1;
}

uint64_t sub_10012B7E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10012B810(uint64_t a1)
{
  uint64_t v1;

  return sub_10017B538(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10012B820(uint64_t a1)
{
  uint64_t v1;

  return sub_100304AD4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10012B82C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012B858()
{
  uint64_t v0;

  return sub_1001851D0((uint64_t)_swiftEmptyArrayStorage, *(void **)(v0 + 24));
}

uint64_t sub_10012B884(uint64_t a1)
{
  uint64_t v1;

  return sub_1002FE8E8(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10012B890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10012036C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10012B898()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012B8BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012B8E0()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(uint64_t **)(v0 + 16);
  v2 = sub_10011ABA0(*(_QWORD *)(v0 + 24), 1);
  v3 = *v1;
  *v1 = (uint64_t)v2;
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_10012B910()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012B920()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  if (v0[8])
    sub_100068588(v0 + 5);
  return swift_deallocObject(v0, 72, 7);
}

void sub_10012B95C()
{
  uint64_t *v0;

  sub_10011B288(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_10012B96C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10012B97C()
{
  uint64_t v0;

  sub_10011B980(*(uint64_t **)(v0 + 16));
}

uint64_t sub_10012B984()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012B994()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012B9B8()
{
  uint64_t v0;

  return sub_10011BA3C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10012B9C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10012B9E4()
{
  uint64_t v0;

  sub_10011BC20(*(id *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_10012B9F0()
{
  sub_10011BB94();
}

uint64_t sub_10012B9F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10012BA08(_QWORD *a1)
{
  uint64_t v1;

  sub_1001198D0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10012BA10(void *a1)
{
  uint64_t v1;

  sub_100119764(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10012BA20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10012BC64()
{
  return sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
}

uint64_t type metadata accessor for DOCFileEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_100643E30;
  if (!qword_100643E30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCFileEntity);
  return result;
}

void sub_10012BCCC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_10006922C((uint64_t *)&unk_100643900);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v25 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v25 - v11;
  v13 = (int *)type metadata accessor for DOCFileEntity(0);
  v14 = v13[5];
  sub_10006922C((uint64_t *)&unk_100643910);
  *(_QWORD *)(a2 + v14) = EntityProperty<>.init()();
  v15 = v13[6];
  *(_QWORD *)(a2 + v15) = EntityProperty<>.init()();
  FileEntityIdentifier.init(fileProviderItemID:)(objc_msgSend(a1, "itemID"));
  *(_QWORD *)(a2 + v13[7]) = a1;
  v16 = a1;
  v17 = objc_msgSend(v16, "creationDate");
  if (v17)
  {
    v18 = v17;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v17);

    v19 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
  }
  else
  {
    v20 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
  }
  sub_1001114C4((uint64_t)v12, (uint64_t)v10);
  EntityProperty.wrappedValue.setter(v10);
  sub_10011150C((uint64_t)v12);
  v21 = objc_msgSend(v16, "contentModificationDate");
  if (v21)
  {
    v22 = v21;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

    v23 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 0, 1, v23);
  }
  else
  {
    v24 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v7, 1, 1, v24);
  }
  sub_1001114C4((uint64_t)v7, (uint64_t)v10);
  EntityProperty.wrappedValue.setter(v10);
  sub_10011150C((uint64_t)v7);

}

uint64_t sub_10012BF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = sub_10006922C((uint64_t *)&unk_10064B460);
  v1 = type metadata accessor for UTType(0);
  v2 = swift_allocObject(v0, ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v1 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) | 7);
  *(_OWORD *)(v2 + 16) = xmmword_1004D9670;
  result = static UTType.item.getter(v2);
  qword_100672670 = v2;
  return result;
}

uint64_t sub_10012BF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = sub_10006922C((uint64_t *)&unk_10064B460);
  v1 = type metadata accessor for UTType(0);
  v2 = swift_allocObject(v0, ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v1 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) | 7);
  *(_OWORD *)(v2 + 16) = xmmword_1004D9670;
  static UTType.item.getter(v2);
  v3 = type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject(v3, 64, 7);
  result = sub_10029FBBC(v2, 1);
  qword_100672678 = result;
  return result;
}

id sub_10012C00C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t countAndFlagsBits;
  void *v19;
  void *object;
  uint64_t v21;
  id result;
  void *v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  Swift::String v51;

  v2 = v1;
  v48 = a1;
  v3 = sub_10006922C(&qword_100643E80);
  __chkstk_darwin(v3);
  v47 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v46 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UTType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(int *)(type metadata accessor for DOCFileEntity(0) + 28);
  v16 = objc_msgSend(*(id *)(v2 + v15), "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v16);

  countAndFlagsBits = UTType.localizedDescription.getter(v17);
  object = v19;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!object)
  {
    result = (id)_DocumentManagerBundle(v21);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v23 = result;
    v51._object = (void *)0x80000001005105C0;
    v24._countAndFlagsBits = 0x746E656D75636F44;
    v24._object = (void *)0xE800000000000000;
    v25.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v25.value._object = (void *)0xEB00000000656C62;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = 0xD000000000000012;
    v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v51);
    countAndFlagsBits = v27._countAndFlagsBits;
    object = v27._object;

  }
  v28 = v8;
  v29 = *(void **)(v2 + v15);
  if ((objc_msgSend(v29, "isFolder") & 1) == 0)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v30 = DOCNode.localizedSizeDescription()();
    v49 = countAndFlagsBits;
    v50 = object;
    v31._countAndFlagsBits = 2108704;
    v31._object = (void *)0xE300000000000000;
    String.append(_:)(v31);
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v30._object);
    countAndFlagsBits = v49;
    object = v50;
  }
  v32 = objc_msgSend(v29, "displayName");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = v46;
  LocalizedStringResource.init(stringLiteral:)(v33, v35);
  LocalizedStringResource.init(stringLiteral:)(countAndFlagsBits, object);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v28);
  v37 = type metadata accessor for DisplayRepresentation.Image(0);
  v38 = v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v47, 1, 1, v37);
  v39 = sub_10006922C(&qword_100643E88);
  v40 = swift_allocObject(v39, ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72), *(unsigned __int8 *)(v9 + 80) | 7);
  *(_OWORD *)(v40 + 16) = xmmword_1004D9670;
  v41 = objc_msgSend(v29, "filename");
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v44 = v43;

  LocalizedStringResource.init(stringLiteral:)(v42, v44);
  return (id)DisplayRepresentation.init(title:subtitle:image:synonyms:)(v36, v7, v38, v40);
}

uint64_t sub_10012C3A8()
{
  if (qword_100640D48 != -1)
    swift_once(&qword_100640D48, sub_10012BF00);
  return swift_bridgeObjectRetain(qword_100672670);
}

uint64_t sub_10012C3E8()
{
  return sub_10005A360(&qword_100643D48, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DADF8);
}

uint64_t sub_10012C414()
{
  return sub_10005A360(&qword_100643D50, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAE28);
}

ValueMetadata *sub_10012C440()
{
  if (qword_100640D58 != -1)
    swift_once(&qword_100640D58, DOCSplitBrowserViewController.didCommitPreview(of:));
  return &type metadata for RenameFileIntent;
}

unint64_t sub_10012C484()
{
  unint64_t result;

  result = qword_100643D58;
  if (!qword_100643D58)
  {
    result = swift_getWitnessTable(&unk_1004E64E0, &type metadata for RenameFileIntent);
    atomic_store(result, (unint64_t *)&qword_100643D58);
  }
  return result;
}

uint64_t sub_10012C4C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_10006922C(&qword_100643EC0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[18] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[19] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[20] = swift_task_alloc(v6);
  v2[21] = swift_task_alloc(v6);
  v2[22] = swift_task_alloc(v6);
  return swift_task_switch(sub_10012C568, 0, 0);
}

uint64_t sub_10012C568()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v0[7] = v0[21];
  v0[2] = v0;
  v0[3] = sub_10012C5FC;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_10012D8FC;
  v4[3] = &unk_1005C93C8;
  v4[4] = v3;
  objc_msgSend(v2, "fetchURL:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_10012C5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 184) = v1;
  if (v1)
    v2 = sub_10012C7A4;
  else
    v2 = sub_10012C65C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10012C65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(void **)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t))(v3 + 32))(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v5);
  v7 = objc_msgSend(v6, "filename");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = objc_msgSend(v6, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = type metadata accessor for UTType(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 0, 1, v12);
  IntentFile.init(fileURL:filename:type:)(v2, v8, v10, v4);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
  swift_task_dealloc(v1);
  swift_task_dealloc(v14);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012C7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(void **)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  swift_willThrow();

  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012C81C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = v2;
  v3[4] = a2;
  v3[2] = a1;
  return swift_task_switch(sub_10012C838, 0, 0);
}

uint64_t sub_10012C838()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  char *v5;

  v1 = unk_100643EBC;
  v5 = (char *)&dword_100643EB8 + dword_100643EB8;
  v2 = *(id *)(v0[3] + *(int *)(v0[4] + 28));
  v3 = (_QWORD *)swift_task_alloc(v1);
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_10012C8B8;
  return ((uint64_t (*)(_QWORD, id))v5)(v0[2], v2);
}

uint64_t sub_10012C8B8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10012C900()
{
  return sub_10005A360(&qword_100643D70, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAEC0);
}

id sub_10012C92C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_10012D9EC(a1);
  *a2 = result;
  return result;
}

id sub_10012C950(uint64_t a1)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(*(void **)(v1 + *(int *)(a1 + 28)), 2, 1, 0);
  return v3;
}

uint64_t sub_10012C9B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1005640C4, 1);
}

uint64_t sub_10012C9C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2[15] = a1;
  v2[16] = a2;
  v3 = type metadata accessor for URL(0);
  v2[17] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[18] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[19] = swift_task_alloc(v5);
  v2[20] = swift_task_alloc(v5);
  v2[21] = swift_task_alloc(v5);
  return swift_task_switch(sub_10012CA3C, 0, 0);
}

uint64_t sub_10012CA3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0 + 2;
  v2 = v0[20];
  v3 = v0[16];
  v4 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v0[22] = v4;
  v5 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for DOCFileEntity(0) + 28));
  v0[7] = v2;
  v0[2] = v0;
  v0[3] = sub_10012CB14;
  v6 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v7 = v0 + 10;
  v7[1] = 0x40000000;
  v7[2] = sub_10012D8FC;
  v7[3] = &unk_1005C93B0;
  v7[4] = v6;
  objc_msgSend(v4, "fetchURLForItem:completionHandler:", v5, v7);
  return swift_continuation_await(v1);
}

uint64_t sub_10012CB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 184) = v1;
  if (v1)
    v2 = sub_10012CC2C;
  else
    v2 = sub_10012CB74;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10012CB74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v3, v5);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v1, v5);
  SentTransferredFile.init(_:allowAccessingOriginalFile:)(v4, 0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012CC2C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  swift_willThrow();

  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012CC94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_10012CCAC, 0, 0);
}

uint64_t sub_10012CCAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[4];
  v2 = swift_task_alloc(32);
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[6] = v3;
  v4 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  *v3 = v0;
  v3[1] = sub_10012CD68;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000016, 0x80000001005105E0, sub_10012D840, v2, v4);
}

uint64_t sub_10012CD68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10012CE08;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 40));
    v4 = sub_10012CDD4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10012CDD4()
{
  uint64_t v0;

  sub_10012BCCC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012CE08()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10012CE3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSURL *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v2 = sub_10006922C(&qword_100643EB0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  ReceivedTransferredFile.file.getter();
  URL._bridgeToObjectiveC()(v10);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005C9370, v14 + v4, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10012D8AC;
  v18 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005C9388;
  v16 = _Block_copy(aBlock);
  objc_msgSend(v9, "fetchItemForURL:completionHandler:", v12, v16, swift_release(v18).n128_f64[0]);
  _Block_release(v16);

}

uint64_t sub_10012D000(void *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1)
  {
    v8 = (uint64_t)a1;
    v2 = a1;
    v3 = sub_10006922C(&qword_100643EB0);
    return CheckedContinuation.resume(returning:)(&v8, v3);
  }
  else
  {
    if (a2)
    {
      v6 = a2;
    }
    else
    {
      sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v6 = static NSError.noSuchFileError.getter();
    }
    v8 = v6;
    swift_errorRetain(a2);
    v7 = sub_10006922C(&qword_100643EB0);
    return CheckedContinuation.resume(throwing:)(&v8, v7);
  }
}

uint64_t sub_10012D0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = type metadata accessor for UTType(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter(v5);
  return FileRepresentation.init(contentType:shouldAttemptToOpenInPlace:exporting:importing:)(v7, 0, &unk_100643EA0, 0, &unk_100643EA8, 0, a1, a2);
}

uint64_t sub_10012D14C()
{
  return sub_10005A360(&qword_100643D78, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF58);
}

unint64_t sub_10012D180()
{
  unint64_t result;

  result = qword_100643D90;
  if (!qword_100643D90)
  {
    result = swift_getWitnessTable(&unk_1004DE4E0, &type metadata for DOCFileEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100643D90);
  }
  return result;
}

double sub_10012D1C4@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_100640D50 != -1)
    swift_once(&qword_100640D50, sub_10012BF74);
  *a1 = qword_100672678;
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_10012D214()
{
  return sub_10005A360(&qword_100643DB8, (uint64_t (*)(uint64_t))&type metadata accessor for FileEntityIdentifier, (uint64_t)&protocol conformance descriptor for FileEntityIdentifier);
}

uint64_t sub_10012D240(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10005A360((unint64_t *)&unk_100643E90, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF28);
  return static AssistantSchemaEntity.typeDisplayRepresentation.getter(a1, v2);
}

uint64_t sub_10012D290()
{
  return sub_100062698(&qword_100643DC0, &qword_100643DC8, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10012D2BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10012D310(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10005A360(&qword_100643DB0, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DB120);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t *sub_10012D360(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for FileEntityIdentifier(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    swift_retain(v10);
    swift_retain(v11);
    v14 = v13;
  }
  return a1;
}

void sub_10012D40C(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6]));

}

uint64_t sub_10012D468(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v6 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  swift_retain(v9);
  swift_retain(v10);
  v13 = v12;
  return a1;
}

uint64_t sub_10012D4E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  v6 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a3[6];
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = a3[7];
  v14 = *(void **)(a2 + v13);
  v15 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  v16 = v14;

  return a1;
}

uint64_t sub_10012D588(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10012D5F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v6 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  return a1;
}

uint64_t sub_10012D684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012D690);
}

uint64_t sub_10012D690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FileEntityIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10012D70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012D718);
}

uint64_t sub_10012D718(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FileEntityIdentifier(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_10012D790(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for FileEntityIdentifier(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10012D814()
{
  return sub_100062698(&qword_100643E70, &qword_100643E78, (uint64_t)&protocol conformance descriptor for FileRepresentation<A>);
}

void sub_10012D840(uint64_t a1)
{
  sub_10012CE3C(a1);
}

uint64_t sub_10012D848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10006922C(&qword_100643EB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10012D8AC(void *a1, uint64_t a2)
{
  sub_10006922C(&qword_100643EB0);
  return sub_10012D000(a1, a2);
}

uint64_t sub_10012D8FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v16;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v11 = sub_10006922C((uint64_t *)&unk_100643490);
    v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
    *v13 = a3;
    v14 = a3;
    return swift_continuation_throwingResumeWithError(v10, v12);
  }
  else
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    (*(void (**)(_QWORD, char *, uint64_t))(v7 + 32))(*(_QWORD *)(*(_QWORD *)(v10 + 64) + 40), v9, v6);
    return swift_continuation_throwingResume(v10);
  }
}

id sub_10012D9EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  uint64_t v18;
  _QWORD *v19;

  v2 = type metadata accessor for DOCFileEntity(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v19 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1000EACB4(v8, (uint64_t)v5);
      v10 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
      NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(*(void **)&v5[*(int *)(v2 + 28)], 2, 1, 0);
      v11 = sub_1000EACF8((uint64_t)v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = v19[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized ContiguousArray._endMutation()(v13);
      v8 += v9;
      --v6;
    }
    while (v6);
    v7 = v19;
  }
  v14 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_10004F2F0(0, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v14, "initWithItemProviders:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  return v16;
}

id sub_10012DBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  v10 = &v4[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics];
  v11 = (void *)objc_opt_self(UIFont);
  v12 = v4;
  v13 = objc_msgSend(v11, "preferredFontForTextStyle:", UIFontTextStyleBody);
  *(_QWORD *)v10 = 0x4030000000000000;
  *((_QWORD *)v10 + 1) = v13;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel] = 0;
  v14 = &v12[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  v15 = &v12[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName];
  *(_QWORD *)v15 = a3;
  *((_QWORD *)v15 + 1) = a4;

  v22.receiver = v12;
  v22.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v22, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10012DD50();
  v17 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v18 = swift_allocObject(v17, 48, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v18 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v18 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v19 = v16;
  v20 = UIView.registerForTraitChanges<A>(_:handler:)(v18, sub_10012E478, 0, ObjectType);
  swift_unknownObjectRelease(v20);
  swift_bridgeObjectRelease(v18);

  return v19;
}

void sub_10012DD50()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  double v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;

  v1 = v0;
  v2 = sub_10012E0E4();
  objc_msgSend(v1, "addSubview:", v2);

  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004DAC10;
  v6 = sub_10012E0E4();
  v7 = objc_msgSend(v6, "leadingAnchor");

  v8 = objc_msgSend(v1, "leadingAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = sub_10012E0E4();
  v11 = objc_msgSend(v10, "trailingAnchor");

  v12 = objc_msgSend(v1, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v5 + 40) = v13;
  v14 = sub_10012E0E4();
  v15 = objc_msgSend(v14, "topAnchor");

  v16 = objc_msgSend(v1, "topAnchor");
  v17 = &v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics];
  v18 = *(double *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics];
  v19 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, v18);

  *(_QWORD *)(v5 + 48) = v19;
  v20 = sub_10012E0E4();
  v21 = objc_msgSend(v20, "bottomAnchor");

  v22 = objc_msgSend(v1, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -v18);

  *(_QWORD *)(v5 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName + 8];
  if (v26)
  {
    v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName];
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName + 8]);
    v28 = sub_10012E0E4();
    sub_10004F2F0(0, (unint64_t *)&qword_100643F10, NSMutableAttributedString_ptr);
    v29 = &v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText];
    v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText];
    v31 = *((_QWORD *)v29 + 1);
    v32 = (void *)*((_QWORD *)v17 + 1);
    swift_bridgeObjectRetain(v31);
    objc_msgSend(v28, "setAttributedText:", sub_10040792C(v30, v31, v27, v26, v32, 0, 1));
  }
  else
  {
    v28 = sub_10012E0E4();
    objc_msgSend(v28, "setText:", String._bridgeToObjectiveC()());
  }

}

id sub_10012E0E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel);
  }
  else
  {
    v4 = sub_10012E144(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10012E144(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v3);

  objc_msgSend(v2, "setFont:", *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics + 8));
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setTextAlignment:", 1);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  return v2;
}

void sub_10012E260()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName + 8));

}

uint64_t type metadata accessor for DOCPromptHeaderView()
{
  return objc_opt_self(_TtC5Files19DOCPromptHeaderView);
}

_QWORD *initializeBufferWithCopyOfBuffer for DOCPromptHeaderView.Metrics(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for DOCPromptHeaderView.Metrics(uint64_t a1)
{

}

_QWORD *assignWithCopy for DOCPromptHeaderView.Metrics(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for DOCPromptHeaderView.Metrics(_QWORD *a1, _QWORD *a2)
{
  void *v3;

  *a1 = *a2;
  v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCPromptHeaderView.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCPromptHeaderView.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCPromptHeaderView.Metrics()
{
  return &type metadata for DOCPromptHeaderView.Metrics;
}

void sub_10012E47C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName + 8);
  if (v1)
  {
    v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName);
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName + 8));
    v4 = sub_10012E0E4();
    sub_10004F2F0(0, (unint64_t *)&qword_100643F10, NSMutableAttributedString_ptr);
    v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText);
    v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText + 8);
    v7 = *(void **)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics + 8);
    swift_bridgeObjectRetain(v6);
    v8 = (id)sub_10040792C(v5, v6, v3, v1, v7, 0, 1);
    objc_msgSend(v4, "setAttributedText:", v8);

  }
}

double sub_10012E5BC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id *v9;
  id v10;
  Class isa;
  NSString v12;
  double result;
  _BYTE v14[32];

  v1 = sub_1003F1A98((uint64_t)_swiftEmptyArrayStorage);
  v2 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = type metadata accessor for JSONEncoder(0);
    swift_bridgeObjectRetain_n(v2, 2);
    v4 = *(_QWORD *)(v2 + 32);
    v5 = *(_BYTE *)(v4 + 48);
    swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
    v6 = swift_unknownObjectRetain(v4);
    v7 = JSONEncoder.init()(v6);
    v14[0] = v5;
    v8 = sub_10012FACC();
    dispatch thunk of JSONEncoder.encode<A>(_:)(v14, &type metadata for DOCMutableSidebarSection.PersistableState, v8);
    swift_release(v7);
    __asm { BR              X9 }
  }
  v9 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v9, v14, 0, 0);
  if (*v9)
  {
    v10 = *v9;
    swift_bridgeObjectRetain(v1);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v1);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setValue:forKey:", isa, v12);

  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for DOCSidebarData()
{
  return objc_opt_self(_TtC5Files14DOCSidebarData);
}

void sub_10012E9A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 24), 2);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x10012F4D4);
}

uint64_t sub_10012F52C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;

  v3 = *a1;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(id *)(a2 + 24);
  LOBYTE(a2) = static NSObject.== infix(_:_:)(v4, v5);

  return a2 & 1;
}

uint64_t sub_10012F5AC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 42, 7);
}

uint64_t sub_10012F5E0(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

unint64_t sub_10012F624()
{
  unint64_t result;

  result = qword_100644140;
  if (!qword_100644140)
  {
    result = swift_getWitnessTable(&unk_1004D9DFC, &type metadata for DOCMutableSidebarSection.PersistableState);
    atomic_store(result, (unint64_t *)&qword_100644140);
  }
  return result;
}

double sub_10012F668(_QWORD *a1, char a2, uint64_t a3)
{
  _QWORD *v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int64_t v38;
  char isUniquelyReferenced_nonNull_native;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  __int128 v45;
  _BYTE v46[24];
  _BYTE v47[24];

  v6 = (_QWORD *)(a3 + 32);
  *(_QWORD *)&result = swift_beginAccess(a3 + 32, v47, 0, 0).n128_u64[0];
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
LABEL_6:
    if ((a2 & 1) != 0)
      return result;
    v14 = sub_10006922C((uint64_t *)&unk_100644560);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
    v16 = a1[4];
    v17 = a1[5];
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    *(_QWORD *)(v15 + 64) = sub_10006A638();
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v17;
    sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v18 = swift_bridgeObjectRetain(v17);
    v19 = (void *)static OS_os_log.default.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    os_log(_:dso:log:type:_:)("Updating sections, inserting %@", 31, 2, &_mh_execute_header, v19, v20, v15);
    swift_bridgeObjectRelease(v15);

    v21 = *(_QWORD *)(a3 + 24);
    v22 = *(_QWORD *)(v21 + 16);
    if (!v22)
      return result;
    sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    v23 = (void *)a1[3];
    swift_bridgeObjectRetain_n(v21, 2);
    v24 = 0;
    while (1)
    {
      v45 = *(_OWORD *)(v21 + 16 * v24 + 32);
      v25 = v45;
      v26 = *(_QWORD *)(v45 + 24);
      swift_unknownObjectRetain(v45);
      v27 = v23;
      LOBYTE(v26) = static NSObject.== infix(_:_:)(v26, v27);

      if ((v26 & 1) != 0)
        break;
      ++v24;
      swift_unknownObjectRelease(v45);
      if (v22 == v24)
      {
        swift_bridgeObjectRelease_n(v21, 2);
        return result;
      }
    }
    swift_bridgeObjectRelease_n(v21, 2);
    swift_beginAccess(v6, v46, 33, 0);
    v36 = (_QWORD *)*v6;
    swift_unknownObjectRetain(v45);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
    *v6 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_16;
    goto LABEL_21;
  }
  *(_QWORD *)&v45 = v6;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v44 = a1;
  v10 = (void *)a1[3];
  swift_bridgeObjectRetain_n(v8, 2);
  v11 = 32;
  while (1)
  {
    v12 = *(_QWORD *)(v8 + v11);
    v13 = *(_QWORD *)(v12 + 24);
    swift_unknownObjectRetain(v12);
    v6 = v10;
    LOBYTE(v13) = static NSObject.== infix(_:_:)(v13, v6);

    if ((v13 & 1) != 0)
      break;
    swift_unknownObjectRelease(v12);
    v11 += 16;
    if (!--v9)
    {
      swift_bridgeObjectRelease_n(v8, 2);
      a1 = v44;
      v6 = (_QWORD *)v45;
      goto LABEL_6;
    }
  }
  swift_unknownObjectRelease(v12);
  swift_bridgeObjectRelease_n(v8, 2);
  if ((a2 & 1) != 0)
  {
    v28 = sub_10006922C((uint64_t *)&unk_100644560);
    v29 = swift_allocObject(v28, 72, 7);
    *(_OWORD *)(v29 + 16) = xmmword_1004D9670;
    v30 = v44[4];
    v31 = v44[5];
    *(_QWORD *)(v29 + 56) = &type metadata for String;
    *(_QWORD *)(v29 + 64) = sub_10006A638();
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v31;
    sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v32 = swift_bridgeObjectRetain(v31);
    v33 = (void *)static OS_os_log.default.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    os_log(_:dso:log:type:_:)("Updating sections, removing %@", 30, 2, &_mh_execute_header, v33, v34, v29);
    swift_bridgeObjectRelease(v29);

    __chkstk_darwin(v35);
    swift_beginAccess(v45, v46, 33, 0);
    v36 = (_QWORD *)v45;
    v25 = 0;
    sub_1001724F8((uint64_t (*)(__int128 *))sub_10012FAB0);
    v38 = *(_QWORD *)(*(_QWORD *)v45 + 16);
    if (v38 >= v37)
    {
      sub_10045BEE4(v37, v38);
      swift_endAccess(v46);
      return result;
    }
    __break(1u);
LABEL_21:
    v36 = sub_100153E40(0, v36[2] + 1, 1, v36);
    *v6 = v36;
LABEL_16:
    v40 = v45;
    v42 = v36[2];
    v41 = v36[3];
    if (v42 >= v41 >> 1)
    {
      v43 = sub_100153E40((_QWORD *)(v41 > 1), v42 + 1, 1, v36);
      v40 = v45;
      v36 = v43;
      *v6 = v43;
    }
    v36[2] = v42 + 1;
    *(_OWORD *)&v36[2 * v42 + 4] = v40;
    swift_endAccess(v46);
    *(_QWORD *)&result = swift_unknownObjectRelease(v25).n128_u64[0];
  }
  return result;
}

uint64_t sub_10012FAB0(uint64_t *a1)
{
  uint64_t v1;

  return sub_10012F52C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_10012FACC()
{
  unint64_t result;

  result = qword_100644150;
  if (!qword_100644150)
  {
    result = swift_getWitnessTable(&unk_1004D9DD4, &type metadata for DOCMutableSidebarSection.PersistableState);
    atomic_store(result, (unint64_t *)&qword_100644150);
  }
  return result;
}

uint64_t sub_10012FB10(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100142C70);
}

void sub_10012FB1C(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10015331C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_10012FC60(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100153328(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10012FDB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_10008958C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for DOCSearchSuggestion, &qword_100644308, &qword_100644300, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E0F80);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_10012FF8C(uint64_t a1)
{
  return sub_10008881C(a1, (uint64_t (*)(void))sub_100153D0C, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_10012FFA0(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100142EB0);
}

uint64_t sub_10012FFAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100081A50(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001300FC(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_1001430CC(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    v23 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_10013030C(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1001432DC);
}

void sub_100130318(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10015406C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100130470(uint64_t a1)
{
  return sub_10013092C(a1, (unint64_t *)type metadata accessor for DOCUIImageMenuItem, &qword_100644450, &qword_100644448, (uint64_t *)sub_1000E1080);
}

void sub_100130494(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100153D20(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1001305E4(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1001434F8);
}

uint64_t sub_1001305F0(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100143714);
}

uint64_t sub_1001305FC(uint64_t a1)
{
  return sub_10013092C(a1, (unint64_t *)type metadata accessor for DOCFileProviderSource, (unint64_t *)&unk_1006445A8, &qword_1006445A0, (uint64_t *)sub_1000E0F80);
}

uint64_t sub_100130620(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100143930);
}

uint64_t sub_10013062C(uint64_t a1)
{
  return sub_100130B50(a1, (uint64_t (*)(void))sub_1001543FC, (uint64_t *)&unk_100644420);
}

uint64_t sub_100130640(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100143B4C);
}

uint64_t sub_10013064C(uint64_t a1)
{
  return sub_100047DC0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100143D68);
}

uint64_t sub_100130658(uint64_t a1)
{
  return sub_10013092C(a1, (unint64_t *)type metadata accessor for DOCBrowserContainerController, (unint64_t *)&unk_100644368, &qword_100644360, (uint64_t *)sub_1000E0F80);
}

uint64_t sub_10013067C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;

  v9 = a4 >> 1;
  v10 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_11;
  v6 = a3;
  v7 = a2;
  v4 = a1;
  v8 = *v5;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_12;
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = v11 + v10;
  if (!__OFADD__(v11, v10))
    goto LABEL_4;
LABEL_17:
  __break(1u);
LABEL_18:
  v14 = 1;
LABEL_19:
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v27 = v8;
    else
      v27 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v18 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v18 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18 <= v12)
    v18 = v12;
  swift_bridgeObjectRetain(v8);
  v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v8);
  swift_bridgeObjectRelease(*v5);
  *v5 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
  if (v9 == v6)
  {
    while (v10 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      if (v8 < 0)
        v16 = v8;
      else
        v16 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v8);
      v12 = v17 + v10;
      if (__OFADD__(v17, v10))
        goto LABEL_17;
LABEL_4:
      v8 = *v5;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
      *v5 = v8;
      v14 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v8 < 0 || (v8 & 0x4000000000000000) != 0)
        goto LABEL_19;
      v15 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v12 > *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_18;
      if (v9 != v6)
        goto LABEL_24;
    }
    goto LABEL_31;
  }
LABEL_24:
  v19 = *(_QWORD *)(v15 + 16);
  if ((*(_QWORD *)(v15 + 24) >> 1) - v19 < v10)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    v20 = v15 + 8 * v19 + 32;
    v21 = v7 + 8 * v6;
    if (v21 < v20 + 8 * v10 && v20 < v21 + 8 * v10)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
      goto LABEL_40;
    }
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_arrayInitWithCopy(v20);
    if (!v10)
    {
LABEL_31:
      v25 = swift_unknownObjectRelease(v4);
      return specialized Array._endMutation()(v25);
    }
    v22 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = __OFADD__(v22, v10);
    v24 = v22 + v10;
    if (!v23)
    {
      *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
      goto LABEL_31;
    }
    goto LABEL_37;
  }
LABEL_38:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100130908(uint64_t a1)
{
  return sub_10013092C(a1, (unint64_t *)type metadata accessor for DOCGoToRecentLocation, &qword_100644598, &qword_100644590, (uint64_t *)sub_1000E0F80);
}

uint64_t sub_10013092C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_10008958C(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_100130B3C(uint64_t a1)
{
  return sub_100130B50(a1, (uint64_t (*)(void))sub_100154B1C, (uint64_t *)&unk_100644350);
}

uint64_t sub_100130B50(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t result;
  char v17;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4)
    goto LABEL_21;
  sub_10006922C(a3);
  swift_arrayInitWithCopy(v11);
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v13 = *(_QWORD *)(v5 + 16);
  v14 = __OFADD__(v13, v4);
  v15 = v13 + v4;
  if (!v14)
  {
    *(_QWORD *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100130CC4(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100154B30(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[10 * v9 + 4];
  if (a1 + 32 < v10 + 80 * v8 && v10 < a1 + 32 + 80 * v8)
    goto LABEL_24;
  sub_10006922C(&qword_100655F30);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

void sub_100130E38(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_100154D9C(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for ViewEntityIdentifier(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

id DOCFullDocumentManagerViewController.tabbedBrowserController.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v1 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v2 = objc_msgSend(v0, "configuration");
  v3 = objc_msgSend(v2, "sceneIdentifier");

  v4 = objc_msgSend(v1, "globalTabbedBrowserControllerForIdentifier:", v3);
  return v4;
}

uint64_t sub_10013103C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain();
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1001310F8()
{
  void *v0;
  char *v1;
  void *v2;
  id *v3;
  id v4;
  _QWORD *v5;
  char v6;
  char v7;
  _BYTE v9[24];

  if (!objc_msgSend(v0, "isEditing"))
    goto LABEL_7;
  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (!v1)
    goto LABEL_7;
  v2 = v1;
  v3 = (id *)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v9, 0, 0);
  v4 = *v3;
  v5 = *v3;

  if (!v4)
    goto LABEL_7;
  if (!objc_msgSend(v5, "isEditing"))
  {

LABEL_7:
    v7 = 0;
    return v7 & 1;
  }
  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x168))();

  v7 = v6 ^ 1;
  return v7 & 1;
}

uint64_t DOCFullDocumentManagerViewController.topMostItemCollectionViewController.getter()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _BYTE v9[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v9, 0, 0);
  v4 = *v3;
  if (*v3)
  {
    v5 = type metadata accessor for DOCItemCollectionViewController(0);
    v6 = swift_dynamicCastClass(v4, v5);
    if (v6)
      v7 = v4;
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id sub_100131280()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, "internalNavigationController");
  v2 = objc_msgSend(v1, "topViewController");

  if (v2)
  {
    v3 = objc_msgSend(v2, "navigationItem");

    v2 = objc_msgSend(v3, "searchController");
  }
  return v2;
}

void sub_100131318(void *a1, void *a2, int a3, int a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  _BYTE *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  int v36;
  char v37;
  id v38;
  char *v39;
  uint64_t v40;
  id v41;
  id v42;
  char *v43;
  void **v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  NSObject *v50;
  __n128 v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  char *v59;
  id v60;
  id v61;
  char *v62;
  void **v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  __n128 v69;
  os_log_type_t v70;
  uint8_t *v71;
  void *v72;
  id v73;
  unsigned int v74;
  uint64_t v75;
  _BYTE *v76;
  id v77;
  unsigned int v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  id v84;
  char *v85;
  void *v86;
  void **v87;
  void *v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  void *v95;
  id v96;
  uint64_t v97;
  _BYTE *v98;
  void *v99;
  _QWORD *v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  _QWORD *v107;
  uint64_t v108;
  _BYTE *v109;
  _QWORD *v110;
  uint64_t v111;
  void *v112;
  _QWORD *v113;
  _BYTE *v114;
  void *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t Available;
  uint64_t v130;
  id v131;
  _QWORD *v132;
  void *v133;
  uint64_t v134;
  id v135;
  id v136;
  _BYTE v137[12];
  int v138;
  _BYTE *v139;
  uint64_t v140;
  _QWORD *v141;
  _BYTE *v142;
  uint64_t v143;
  _QWORD *v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  _BYTE *v152;
  _BYTE *v153;
  char v154[24];
  _QWORD *v155;
  _QWORD aBlock[5];
  _QWORD *v157;

  v5 = v4;
  LODWORD(v151) = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v149 = *(_QWORD *)(v9 - 8);
  v150 = v9;
  __chkstk_darwin(v9);
  v148 = &v137[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for DispatchQoS(0);
  v146 = *(_QWORD *)(v11 - 8);
  v147 = v11;
  __chkstk_darwin(v11);
  v145 = &v137[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v144 = (_QWORD *)type metadata accessor for DispatchQoS.QoSClass(0);
  v143 = *(v144 - 1);
  __chkstk_darwin(v144);
  v142 = &v137[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v141 = (_QWORD *)type metadata accessor for Date(0);
  v140 = *(v141 - 1);
  __chkstk_darwin(v141);
  v139 = &v137[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v152 = &v137[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __chkstk_darwin(v18);
  v21 = &v137[-v19];
  if (!a2)
    goto LABEL_6;
  v138 = a3;
  v153 = &v137[-v19];
  v22 = a1;
  v23 = v16;
  v24 = v15;
  v25 = v4;
  v26 = a2;
  v27 = objc_msgSend(a2, "sourceIdentifier", v20);
  v28 = (void *)DOCDocumentSourceIdentifierSearch;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v31 = v30;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v34 = v32;
  if (v29 == v33 && v31 == v32)
  {
    v35 = v28;

    swift_bridgeObjectRelease_n(v31, 2);
    v36 = 0;
    a2 = v26;
    v5 = v25;
    v15 = v24;
    v16 = v23;
    a1 = v22;
    v21 = v153;
    goto LABEL_7;
  }
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);
  v38 = v28;

  swift_bridgeObjectRelease(v31);
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v34).n128_u64[0];
  v36 = 0;
  a2 = v26;
  v5 = v25;
  v15 = v24;
  v16 = v23;
  a1 = v22;
  v21 = v153;
  a3 = v138;
  if ((v37 & 1) == 0)
  {
LABEL_6:
    v39 = (char *)objc_msgSend(v5, "dataSource", v20);
    v40 = *(_QWORD *)&v39[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

    v36 = (v40 == 2) & (a3 ^ 1);
  }
LABEL_7:
  if ((objc_msgSend(v5, "isEditing") & 1) != 0)
  {
    if (v36)
    {
      v41 = objc_msgSend(v5, "configuration");
      v42 = objc_msgSend(v41, "sceneIdentifier");

      v43 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v42);
      v44 = (void **)&v43[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess(&v43[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
      v45 = *v44;
      *v44 = 0;
      sub_1000AE638(v45);

      v47 = Logger.UI.unsafeMutableAddressor(v46);
      v48 = v152;
      v49 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v152, v47, v15);
      v50 = Logger.logObject.getter(v49);
      v52 = static os_log_type_t.info.getter(v51);
      if (os_log_type_enabled(v50, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, v52, "[Interaction] Clearing last opened item in 'didSelect:wasAlreadySelected:onlyRevealIfColumnMode:': Showing column mode in edition", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v48, v15);
    }
  }
  else if (v36)
  {
    v54 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v55 = (void *)DOCNode.sourceIdentifier.getter(v54);
    v56 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v55, a1);

    v57 = v5;
    v58 = a2;
    v59 = (char *)v56;
    sub_100131EE8(v59, a2);

    v60 = objc_msgSend(v57, "configuration");
    v61 = objc_msgSend(v60, "sceneIdentifier");

    v62 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v61);
    v63 = (void **)&v62[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess(&v62[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
    v64 = *v63;
    *v63 = 0;
    sub_1000AE638(v64);

    v66 = Logger.UI.unsafeMutableAddressor(v65);
    v67 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v21, v66, v15);
    v68 = Logger.logObject.getter(v67);
    v70 = static os_log_type_t.info.getter(v69);
    if (os_log_type_enabled(v68, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v70, "[Interaction] Clearing last opened item in 'didSelect:wasAlreadySelected:onlyRevealIfColumnMode:': Showing column mode NOT in edition", v71, 2u);
      swift_slowDealloc(v71, -1, -1);
      v72 = v59;
    }
    else
    {
      v72 = v68;
      v68 = v59;
    }

    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v21, v15);
  }
  else if ((v151 & 1) == 0)
  {
    v73 = objc_msgSend(v5, "configuration");
    v74 = objc_msgSend(v73, "pickingItemsShouldBumpLastOpenDate");

    if (v74)
    {
      v76 = v139;
      Date.init()(v75);
      FPItem.setLastOpenDate(_:delay:)(v76, 3.0);
      (*(void (**)(_BYTE *, _QWORD *))(v140 + 8))(v76, v141);
    }
    v77 = objc_msgSend(v5, "configuration");
    v78 = objc_msgSend(v77, "isPickerUI");

    if (a2)
    {
      if (v78)
      {
        v79 = objc_msgSend(a2, "fileProviderItem");
        if (v79)
        {
          v80 = v79;
          sub_1002EC0A8((uint64_t)v79);

        }
      }
    }
    v81 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v82 = swift_allocObject(v81, 40, 7);
    v151 = xmmword_1004D9B40;
    *(_OWORD *)(v82 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v82 + 32) = a1;
    aBlock[0] = v82;
    specialized Array._endMutation()(v82);
    v83 = (_BYTE *)aBlock[0];
    v84 = a1;
    v85 = (char *)objc_msgSend(v5, "effectiveBrowserViewController");
    v153 = v83;
    if (v85)
    {
      v86 = v85;
      v87 = (void **)&v85[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v85[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v154, 0, 0);
      v88 = *v87;
      if (v88)
      {
        v89 = v5;
        v90 = a2;
        v91 = type metadata accessor for DOCItemCollectionViewController(0);
        v92 = swift_dynamicCastClass(v88, v91);
        if (v92)
        {
          v93 = v92;
          v94 = v88;

          v95 = *(void **)(v93 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
          v96 = v95;
          v86 = v94;
        }
        else
        {
          v95 = 0;
        }
        v5 = v89;
      }
      else
      {
        v90 = a2;
        v95 = 0;
      }

    }
    else
    {
      v90 = a2;
      v95 = 0;
    }
    v97 = type metadata accessor for DOCRelatedNodeMatcher();
    v98 = objc_msgSend(v5, "configuration");
    v99 = v5;
    v100 = (_QWORD *)swift_allocObject(&unk_1005CA2D0, 40, 7);
    v100[2] = v84;
    v100[3] = v90;
    v101 = v90;
    v100[4] = v99;
    v102 = v90;
    v103 = v84;
    v104 = v99;
    v105 = v102;
    v106 = v103;
    v107 = v104;
    v152 = v98;
    if (objc_msgSend(v98, "supportsRelatedFilesInPicker"))
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      *(_QWORD *)&v151 = v105;
      v108 = v143;
      v109 = v142;
      v110 = v144;
      (*(void (**)(_BYTE *, _QWORD, _QWORD *))(v143 + 104))(v142, enum case for DispatchQoS.QoSClass.userInitiated(_:), v144);
      v111 = static OS_dispatch_queue.global(qos:)(v109);
      v141 = v107;
      v112 = (void *)v111;
      (*(void (**)(_BYTE *, _QWORD *))(v108 + 8))(v109, v110);
      v113 = (_QWORD *)swift_allocObject(&unk_1005CA348, 56, 7);
      v114 = v153;
      v113[2] = v95;
      v113[3] = v114;
      v113[4] = v97;
      v113[5] = sub_1001461D0;
      v113[6] = v100;
      aBlock[4] = sub_100146228;
      v157 = v113;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CA360;
      v115 = _Block_copy(aBlock);
      v144 = v95;
      swift_bridgeObjectRetain(v114);
      swift_retain();
      v116 = v145;
      static DispatchQoS.unspecified.getter(v117);
      v155 = _swiftEmptyArrayStorage;
      v118 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v119 = sub_10006922C((uint64_t *)&unk_100647540);
      v120 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v121 = v148;
      v122 = v119;
      v123 = v150;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v155, v122, v120, v150, v118);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v116, v121, v115);
      _Block_release(v115);

      (*(void (**)(_BYTE *, uint64_t))(v149 + 8))(v121, v123);
      (*(void (**)(_BYTE *, uint64_t))(v146 + 8))(v116, v147);
      v124 = v157;
      swift_bridgeObjectRelease(v114);

      swift_release(v100);
      swift_release(v124);
    }
    else
    {
      v125 = swift_allocObject(v81, 40, 7);
      *(_OWORD *)(v125 + 16) = v151;
      *(_QWORD *)(v125 + 32) = v106;
      aBlock[0] = v125;
      specialized Array._endMutation()(v125);
      v126 = aBlock[0];
      v127 = v106;
      v128 = sub_10006922C((uint64_t *)&unk_1006424B0);
      Available = Array<A>.fpfs_syncFetchAvailableFPItems()(_swiftEmptyArrayStorage, v128);
      aBlock[0] = v126;
      sub_100047DC0(Available, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100142EB0);
      v130 = aBlock[0];
      v131 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v132 = (_QWORD *)swift_allocObject(&unk_1005CA2F8, 40, 7);
      v132[2] = v101;
      v132[3] = v107;
      v132[4] = v130;
      v133 = v107;
      v134 = swift_allocObject(&unk_1005CA320, 32, 7);
      *(_QWORD *)(v134 + 16) = sub_1001461E0;
      *(_QWORD *)(v134 + 24) = v132;
      v135 = v105;
      v136 = v133;
      swift_bridgeObjectRetain(v130);
      swift_retain();
      sub_10047BB5C(v130, (uint64_t)sub_1001461EC, v134);
      swift_bridgeObjectRelease(v153);

      swift_release(v100);
      swift_bridgeObjectRelease(v130);

      swift_release(v132);
      swift_release(v134);

    }
  }
}

void sub_100131EE8(char *a1, void *a2)
{
  void *v2;
  void *v3;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;

  v3 = v2;
  if (a2)
  {
    v6 = a2;
    v7 = (char *)objc_msgSend(v2, "dataSource");
    v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

    if (v8 == 2)
    {
      v9 = (char *)objc_msgSend(v3, "locationChangePacer");
      v11 = *(void **)&v9[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
      v10 = *(void **)&v9[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange + 8];
      sub_100146144(v11, v10);

      if (v11)
      {
        v12 = v10;
        sub_100146170(v11, v10);
        if (v10)
        {
          sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
          v6 = v6;
          v13 = static NSObject.== infix(_:_:)(v6, v12);

          if ((v13 & 1) != 0)
          {
            v14 = objc_msgSend(v3, "internalNavigationController");
            v15 = objc_msgSend(v14, "topViewController");

            if (v15)
            {
              v16 = type metadata accessor for DOCColumnViewController(0);
              if (swift_dynamicCastClass(v15, v16))
              {
                sub_10037C780((uint64_t *)v6);
                v17 = v15;
              }
              else
              {
                v17 = v6;
                v6 = v15;
              }

            }
          }
        }
      }
    }

  }
  v18 = objc_msgSend(v3, "locationChangePacer");
  sub_1004BB97C(a1, (char *)a2);

}

double sub_1001320AC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t Available;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  id v17;
  double result;
  uint64_t v19;

  v8 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v9 + 32) = a2;
  v19 = v9;
  specialized Array._endMutation()(v9);
  v10 = a2;
  v11 = sub_10006922C((uint64_t *)&unk_1006424B0);
  Available = Array<A>.fpfs_syncFetchAvailableFPItems()(a1, v11);
  sub_100047DC0(Available, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100142EB0);
  v13 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v14 = (_QWORD *)swift_allocObject(&unk_1005CA438, 40, 7);
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = v19;
  v15 = swift_allocObject(&unk_1005CA460, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001463EC;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a3;
  v17 = a4;
  swift_bridgeObjectRetain(v19);
  swift_retain();
  sub_10047BB5C(v19, (uint64_t)sub_100146570, v15);
  swift_bridgeObjectRelease(v19);

  swift_release(v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

void sub_100132204(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSString v22;
  Class isa;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  _QWORD *v36;
  id v37;
  _QWORD *v38;
  void *v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _QWORD aBlock[5];
  _QWORD *v46;
  _QWORD v47[5];

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v13 = objc_msgSend(a2, "fileProviderItem", v10);
    if (v13)
    {
      v14 = v13;
      v43 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v13);
      v15 = objc_msgSend(a3, "configuration");
      v16 = objc_msgSend(v15, "hostIdentifier");
      v44 = a1;
      v17 = v16;

      static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v19 = v18;

      v20 = v14;
      Date.init()(v20);
      v21 = objc_allocWithZone((Class)DOCHotFolderEvent);
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v24 = objc_msgSend(v21, "initWithAppBundleIdentifier:folderItem:type:lastUsedDate:frecency:", v22, v20, 0, isa, 1.0);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v25 = v43;
      DOCSmartFolderManager.register(event:)(v24);

      a1 = v44;
    }
  }
  v26 = objc_msgSend(a3, "configuration", v10);
  v27 = swift_bridgeObjectRetain(a4);
  v28 = DOCAnalyticsActionEvent.FileProvider.init(items:)(v27);
  v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v30 = objc_msgSend(v29, "bundleIdentifier");

  if (v30)
  {
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    if (!a2)
      goto LABEL_7;
    goto LABEL_6;
  }
  v31 = 0;
  v33 = 0;
  if (a2)
LABEL_6:
    a2 = (void *)DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(objc_msgSend(a2, "sourceIdentifier"));
LABEL_7:
  v34 = (char *)objc_msgSend(a3, "dataSource");
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v35 >= 3)
  {
    aBlock[0] = v35;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, aBlock, &type metadata for DOCDisplayMode, &type metadata for Int);
    __break(1u);
  }
  else
  {
    v36 = DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(v47, 2, v26, v28, v31, v33, a2, (v35 + 1));
    v37 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v36);
    DOCAnalyticsManager.sendActionEvent(_:)(v47);
    sub_1000B3334((uint64_t)v47);

    v38 = (_QWORD *)swift_allocObject(&unk_1005CA398, 40, 7);
    v38[2] = a4;
    v38[3] = a3;
    v38[4] = a1;
    aBlock[4] = sub_10014626C;
    v46 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CA3B0;
    v39 = _Block_copy(aBlock);
    v40 = v46;
    swift_bridgeObjectRetain(a4);
    v41 = a3;
    swift_bridgeObjectRetain(a1);
    swift_release(v40);
    DOCRunInMainThread(v39);
    _Block_release(v39);
  }
}

void sub_100132598(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  Class isa;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v5 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = swift_allocObject(&unk_1005CA3E8, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v11[4] = sub_1001462A4;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10004A82C;
  v11[3] = &unk_1005CA400;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = a2;
  swift_bridgeObjectRetain(a3);
  objc_msgSend(v5, "adoptPersonaFromItems:andPerformBlock:", isa, v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);

}

void sub_1001326BC(void *a1)
{
  id v2;
  void *v3;
  Class isa;

  v2 = objc_msgSend(a1, "delegate");
  if (v2)
  {
    v3 = v2;
    if ((objc_msgSend(v2, "respondsToSelector:", "documentBrowser:didPickDocumentsAtURLs:") & 1) != 0)
    {
      type metadata accessor for URL(0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "documentBrowser:didPickDocumentsAtURLs:", a1, isa);
      swift_unknownObjectRelease(v3);

    }
    else
    {
      swift_unknownObjectRelease(v3);
    }
  }
}

void sub_100132804(char *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  char v24;
  SEL *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t i;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  double v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t j;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __objc2_prot *v73;
  uint64_t v74;
  char v75[24];
  char v76[24];
  char v77[24];

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v71 = *(_QWORD *)(v6 - 8);
  v72 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v70 - v14;
  v16 = objc_msgSend(v2, "delegate", v13);
  if (v16)
  {
    v17 = v16;
    v73 = &OBJC_PROTOCOL___UIDocumentBrowserViewControllerPrivateDelegate;
    v18 = (void *)swift_dynamicCastObjCProtocolConditional(v16, 1);
    v19 = v18;
    if (v18)
    {
      if ((objc_msgSend(v18, "respondsToSelector:", "documentBrowser:shouldHandleLocation:") & 1) != 0
        && (objc_msgSend(v19, "documentBrowser:shouldHandleLocation:", v3, a1) & 1) == 0)
      {
        swift_unknownObjectRelease(v17);
        return;
      }
    }
    else
    {
      swift_unknownObjectRelease(v17);
    }
  }
  else
  {
    v19 = 0;
  }
  v20 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "searchLocation");
  v21 = v20;
  if (a2)
  {
    if (v20)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v22 = v19;
      v23 = a2;
      v24 = static NSObject.== infix(_:_:)(v23, v21);

      v19 = v22;
      if ((v24 & 1) != 0)
        goto LABEL_15;
    }
LABEL_14:
    sub_100131EE8(a1, a2);
    swift_unknownObjectRelease(v19);
    return;
  }
  if (v20)
  {

    goto LABEL_14;
  }
LABEL_15:
  v25 = (SEL *)&off_10061F000;
  v26 = (char *)objc_msgSend(v3, "hierarchyController", v19);
  v27 = (uint64_t)&v26[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v26[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v77, 0, 0);
  sub_1000271D4(v27, (uint64_t)v11, (uint64_t *)&unk_1006443D0);
  v28 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v11, 1, v28) == 1)
  {
    v31 = (uint64_t)&v26[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v26[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v76, 0, 0);
    sub_1000271D4(v31, (uint64_t)v15, (uint64_t *)&unk_1006443D0);
    v25 = (SEL *)&off_10061F000;
    sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1000AC0A0((uint64_t)v11, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v15, 0, 1, v28);
  }
  if (v30(v15, 1, v28) == 1)
  {
    sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006443D0);

    v32 = a1;
    goto LABEL_23;
  }
  v33 = v15[*(int *)(v28 + 24)];
  sub_10007C720((uint64_t)v15, type metadata accessor for DOCHierarchyController.FetchingOperationToken);

  v32 = a1;
  if ((v33 & 1) == 0)
  {
LABEL_23:
    v43 = (char *)objc_msgSend(v3, v25[355]);
    v44 = (uint64_t)&v43[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&v43[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v75, 0, 0);
    v45 = *(_QWORD *)v44;
    if (*(_QWORD *)v44 >> 62)
    {
      if (v45 < 0)
        v44 = *(_QWORD *)v44;
      else
        v44 = v45 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v45);
      v46 = (char *)_CocoaArrayWrapper.endIndex.getter(v44);
      v47 = v70;
      if (v46)
      {
LABEL_25:
        v48 = v46 - 1;
        if (__OFSUB__(v46, 1))
        {
          __break(1u);
        }
        else if ((v45 & 0xC000000000000001) == 0)
        {
          if (((unint64_t)v48 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v48 < *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v49 = (char *)*(id *)(v45 + 8 * (_QWORD)v48 + 32);
LABEL_30:
            v46 = v49;

            swift_bridgeObjectRelease(v45);
            sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
            if ((static NSObject.== infix(_:_:)(v46, v32) & 1) != 0)
            {
              v50 = objc_msgSend(v3, "dataSource");
              v44 = sub_10005F27C();

              v74 = (uint64_t)_swiftEmptyArrayStorage;
              if (!((unint64_t)v44 >> 62))
              {
                v51 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain(v44);
                if (v51)
                {
LABEL_33:
                  if (v51 < 1)
                  {
                    __break(1u);
                    goto LABEL_77;
                  }
                  for (i = 0; i != v51; ++i)
                  {
                    if ((v44 & 0xC000000000000001) != 0)
                      v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v44);
                    else
                      v54 = *(id *)(v44 + 8 * i + 32);
                    v55 = v54;
                    v56 = objc_msgSend(v54, "navigationItem");
                    v57 = objc_msgSend(v56, "searchController");

                    if (v57)
                    {
                      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
                      v60 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
                      v59 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
                      if (v60 >= v59 >> 1)
                        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
                      v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v57);
                      specialized Array._endMutation()(v53);
                    }
                  }
                  swift_bridgeObjectRelease(v44);
                  v62 = v74;
LABEL_62:
                  swift_bridgeObjectRelease(v44);
                  if ((unint64_t)v62 >> 62)
                  {
                    if (v62 < 0)
                      v69 = v62;
                    else
                      v69 = v62 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain(v62);
                    v65 = _CocoaArrayWrapper.endIndex.getter(v69);
                    if (v65)
                    {
LABEL_64:
                      if (v65 >= 1)
                      {
                        for (j = 0; j != v65; ++j)
                        {
                          if ((v62 & 0xC000000000000001) != 0)
                            v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v62);
                          else
                            v67 = *(id *)(v62 + 8 * j + 32);
                          v68 = v67;
                          objc_msgSend(v67, "setActive:", 0);

                        }
                        goto LABEL_74;
                      }
LABEL_77:
                      __break(1u);
                      return;
                    }
                  }
                  else
                  {
                    v65 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
                    swift_bridgeObjectRetain(v62);
                    if (v65)
                      goto LABEL_64;
                  }
LABEL_74:
                  swift_unknownObjectRelease(v70);
                  swift_bridgeObjectRelease_n(v62, 2);

                  return;
                }
LABEL_61:
                swift_bridgeObjectRelease(v44);
                v62 = (uint64_t)_swiftEmptyArrayStorage;
                goto LABEL_62;
              }
LABEL_57:
              if (v44 < 0)
                v64 = v44;
              else
                v64 = v44 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v44);
              v51 = _CocoaArrayWrapper.endIndex.getter(v64);
              if (v51)
                goto LABEL_33;
              goto LABEL_61;
            }

LABEL_52:
            v63 = objc_msgSend(v3, "locationChangePacer", v61);
            sub_1004BB97C(v32, 0);
            swift_unknownObjectRelease(v47);

            return;
          }
          __break(1u);
          goto LABEL_57;
        }
        v49 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v45);
        goto LABEL_30;
      }
    }
    else
    {
      v46 = *(char **)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)v44);
      v47 = v70;
      if (v46)
        goto LABEL_25;
    }

    *(_QWORD *)&v61 = swift_bridgeObjectRelease(v45).n128_u64[0];
    goto LABEL_52;
  }
  v35 = Logger.UI.unsafeMutableAddressor(v34);
  v37 = v71;
  v36 = v72;
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 16))(v8, v35, v72);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.error.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "The hierarchy controller is fetching location. Skipping the browsing.", v41, 2u);
    swift_slowDealloc(v41, -1, -1);
    swift_unknownObjectRelease(v70);

  }
  else
  {

    v42 = swift_unknownObjectRelease(v70);
  }
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v8, v36, v42);
}

void sub_100132FE4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)aBlock - v17;
  if (a2)
  {
    v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v16);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 112, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v22 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v22 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v22 + 32) = a3;
    v23 = a3;
    v24 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v22 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 72) = v24;
    os_log(_:dso:log:type:_:)("Error fetching the url for item %@ error %@", 43, 2, &_mh_execute_header, v19, v20, v22);

    swift_bridgeObjectRelease(v22);
  }
  else
  {
    sub_1000271D4(a1, (uint64_t)v10, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      v32 = sub_10000CB4C((uint64_t)v10, &qword_100643470);
      v33 = *(id *)DOCLog.UI.unsafeMutableAddressor(v32);
      static os_log_type_t.error.getter(v33);
      __break(1u);
    }
    else
    {
      v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v25(v18, v10, v11);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v18, v11);
      v26 = *(unsigned __int8 *)(v12 + 80);
      v27 = (v26 + 24) & ~v26;
      v28 = swift_allocObject(&unk_1005CA280, v27 + v13, v26 | 7);
      *(_QWORD *)(v28 + 16) = a4;
      v25((char *)(v28 + v27), v14, v11);
      aBlock[4] = sub_1001460F8;
      v35 = v28;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CA298;
      v29 = _Block_copy(aBlock);
      v30 = v35;
      v31 = a4;
      swift_release(v30);
      DOCRunInMainThread(v29);
      _Block_release(v29);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    }
  }
}

double sub_10013330C(void *a1, uint64_t a2)
{
  id v4;
  double result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;

  v4 = objc_msgSend(a1, "delegate");
  if (v4)
  {
    v6 = v4;
    if ((objc_msgSend(v4, "respondsToSelector:", "documentBrowser:didPickDocumentsAtURLs:") & 1) != 0
      && (objc_msgSend(v6, "respondsToSelector:", "documentBrowser:didPickDocumentsAtURLs:") & 1) != 0)
    {
      v7 = sub_10006922C((uint64_t *)&unk_100644550);
      v8 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned __int8 *)(v9 + 80);
      v11 = (v10 + 32) & ~v10;
      v12 = swift_allocObject(v7, v11 + *(_QWORD *)(v9 + 72), v10 | 7);
      *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12 + v11, a2, v8);
      swift_unknownObjectRetain(v6);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "documentBrowser:didPickDocumentsAtURLs:", a1, isa);
      swift_bridgeObjectRelease(v12);
      swift_unknownObjectRelease_n(v6, 2);

    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
    }
  }
  return result;
}

void DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  id *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  id v34;
  _QWORD *v35;
  _QWORD *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  char v41[24];
  void **aBlock;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  _QWORD *v47;

  v5 = v4;
  v10 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v11 = objc_msgSend(v5, "configuration");
  v12 = objc_msgSend(v11, "sceneIdentifier");

  v13 = objc_msgSend(v10, "globalTabbedBrowserControllerForIdentifier:", v12);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v14, "switchToTab:", 2);
    v15 = objc_msgSend(v14, "effectiveFullBrowser");

    if ((objc_msgSend(a1, "isFolder") & 1) == 0)
    {
      v16 = objc_msgSend(v14, "splitBrowserViewController");
      v17 = objc_msgSend(v16, "fullDocumentManagerViewController");

      v18 = (char *)objc_msgSend(v17, "effectiveBrowserViewController");
      if (!v18)
        goto LABEL_15;
      v19 = (id *)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v41, 0, 0);
      v20 = *v19;
      v21 = *v19;

      if (!v20)
        goto LABEL_15;
      v22 = type metadata accessor for DOCItemCollectionViewController(0);
      v23 = swift_dynamicCastClass(v21, v22);
      if (!v23)
      {

        goto LABEL_15;
      }
      v24 = (uint64_t *)(v23 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
      swift_beginAccess(v23 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, &v40, 0, 0);
      v25 = *v24;

      if (v25 != 2)
        goto LABEL_15;
    }
  }
  else
  {
    v15 = v5;
    if ((objc_msgSend(a1, "isFolder") & 1) == 0)
    {
LABEL_15:
      v34 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v33 = objc_msgSend(a1, "itemID");
      v35 = (_QWORD *)swift_allocObject(&unk_1005C96A8, 56, 7);
      v35[2] = a1;
      v35[3] = v15;
      v35[4] = v5;
      v35[5] = a3;
      v35[6] = a4;
      v46 = sub_100144E00;
      v47 = v35;
      aBlock = _NSConcreteStackBlock;
      v43 = 1107296256;
      v44 = sub_10013103C;
      v45 = &unk_1005C96C0;
      v30 = _Block_copy(&aBlock);
      v36 = v47;
      v37 = v5;
      swift_retain();
      v38 = a1;
      v39 = v15;
      swift_release(v36);
      objc_msgSend(v34, "fetchParentsForItemID:recursively:completionHandler:", v33, 0, v30);
      v32 = v13;
      v13 = v39;
      v15 = v34;
      goto LABEL_16;
    }
  }
  if ((a2 & 1) != 0)
    goto LABEL_15;
  if (objc_msgSend(a1, "isTrashed"))
  {
    v26 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "trashedItemsLocation");
  }
  else
  {
    v27 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v28 = (void *)DOCNode.sourceIdentifier.getter(v27);
    v26 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v28, a1);

  }
  v29 = swift_allocObject(&unk_1005C96F8, 32, 7);
  *(_QWORD *)(v29 + 16) = a3;
  *(_QWORD *)(v29 + 24) = a4;
  v46 = sub_100144E10;
  v47 = (_QWORD *)v29;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_10004A82C;
  v45 = &unk_1005C9710;
  v30 = _Block_copy(&aBlock);
  v31 = v47;
  v32 = v26;
  swift_retain();
  swift_release(v31);
  objc_msgSend(v15, "revealLocation:animated:completion:", v32, 1, v30);
  v33 = v32;
LABEL_16:

  _Block_release(v30);
}

void sub_1001339D0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  id v21;
  double v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  _QWORD aBlock[5];
  _QWORD *v54;

  v50 = a6;
  v51 = a5;
  v52 = a3;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return;
  v47 = a7;
  v48 = v12;
  v19 = a4;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v44 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v44 = a1;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v44))
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v20)
    goto LABEL_18;
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v21 = *(id *)(a1 + 32);
  }
  v49 = v21;
  *(_QWORD *)&v22 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (a2)
  {

  }
  else
  {
    if (objc_msgSend(v52, "isTrashed", v22))
    {
      v23 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "trashedItemsLocation");
    }
    else
    {
      v24 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v25 = (void *)DOCNode.sourceIdentifier.getter(v24);
      v26 = objc_allocWithZone((Class)DOCConcreteLocation);
      v23 = objc_msgSend(v26, "initWithSourceIdentifier:node:", v25, v49);

    }
    v27 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v46 = static OS_dispatch_queue.main.getter(v27);
    v28 = (_QWORD *)swift_allocObject(&unk_1005CA578, 64, 7);
    v28[2] = v19;
    v28[3] = v23;
    v29 = v50;
    v30 = v51;
    v45 = v19;
    v31 = v52;
    v28[4] = v51;
    v28[5] = v31;
    v32 = v47;
    v28[6] = v29;
    v28[7] = v32;
    aBlock[4] = sub_100146370;
    v54 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CA590;
    v50 = _Block_copy(aBlock);
    v33 = v54;
    v34 = v23;
    v35 = v30;
    v36 = v31;
    swift_retain();
    v37 = v45;
    v38 = swift_release(v33);
    static DispatchQoS.unspecified.getter(v38);
    aBlock[0] = _swiftEmptyArrayStorage;
    v39 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v40 = sub_10006922C((uint64_t *)&unk_100647540);
    v41 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v41, v11, v39);
    v42 = v50;
    v43 = (void *)v46;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v14, v50);

    _Block_release(v42);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

void sub_100133D88(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD v17[5];
  _QWORD *v18;

  v12 = (_QWORD *)swift_allocObject(&unk_1005CA5C8, 48, 7);
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v17[4] = sub_100146384;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10004A82C;
  v17[3] = &unk_1005CA5E0;
  v13 = _Block_copy(v17);
  v14 = v18;
  v15 = a3;
  v16 = a4;
  swift_retain();
  swift_release(v14);
  objc_msgSend(a1, "revealLocation:animated:completion:", a2, 0, v13);
  _Block_release(v13);
}

uint64_t sub_100133E78(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  _QWORD *v29;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1005CA618, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_100146394;
  v29 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CA630;
  v17 = _Block_copy(aBlock);
  v18 = v29;
  v19 = a1;
  v20 = a2;
  swift_retain();
  v21 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_10006922C((uint64_t *)&unk_100647540);
  v24 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v8, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v26);
}

void sub_1001340A4(void *a1, void *a2, void (*a3)(_QWORD), uint64_t a4)
{
  char *v7;
  void *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Class isa;
  void *v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;
  _BYTE v24[24];

  v7 = (char *)objc_msgSend(a1, "effectiveBrowserViewController");
  if (v7)
  {
    v8 = v7;
    v9 = (void **)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v24, 0, 0);
    v10 = *v9;
    if (v10)
    {
      v11 = type metadata accessor for DOCItemCollectionViewController(0);
      v12 = swift_dynamicCastClass(v10, v11);
      if (v12)
      {
        v13 = (void *)v12;
        v14 = v10;

        v15 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v16 = swift_allocObject(v15, 40, 7);
        *(_OWORD *)(v16 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v16 + 32) = a2;
        aBlock[0] = v16;
        specialized Array._endMutation()(v16);
        v17 = aBlock[0];
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v18 = a2;
        isa = Array._bridgeToObjectiveC()().super.isa;
        aBlock[4] = a3;
        v23 = a4;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10016C02C;
        aBlock[3] = &unk_1005CA658;
        v20 = _Block_copy(aBlock);
        v21 = v23;
        swift_retain();
        swift_release(v21);
        objc_msgSend(v13, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, 0, v20);
        _Block_release(v20);

        swift_bridgeObjectRelease(v17);
        return;
      }
    }

  }
  a3(0);
}

double sub_100134258(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  double result;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v3 = objc_msgSend(v1, "presentedViewController");
  if (v3)
  {
    v4 = v3;
    v5 = swift_allocObject(&unk_1005CA118, 32, 7);
    *(_QWORD *)(v5 + 16) = v1;
    *(_QWORD *)(v5 + 24) = a1;
    v14[4] = sub_100146014;
    v15 = v5;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10004A82C;
    v14[3] = &unk_1005CA130;
    v6 = _Block_copy(v14);
    v7 = v15;
    v8 = v1;
    v9 = a1;
    objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);

  }
  else
  {
    v11 = swift_allocObject(&unk_1005CA0F0, 32, 7);
    *(_QWORD *)(v11 + 16) = v1;
    *(_QWORD *)(v11 + 24) = a1;
    v12 = v1;
    v13 = a1;
    sub_10013457C(1, sub_100145FE0, v11);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_100134398(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  NSString v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v4 = swift_allocObject(&unk_1005CA168, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = a1;
  v6 = a2;
  v7 = objc_msgSend(v5, "effectiveSearchController");
  if (v7)
  {
    v13 = v7;
    if (objc_msgSend(v7, "isActive"))
    {
      v8 = objc_msgSend(v13, "searchBar");
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "setText:", v9);

      v10 = swift_allocObject(&unk_1005CA190, 32, 7);
      *(_QWORD *)(v10 + 16) = sub_100146574;
      *(_QWORD *)(v10 + 24) = v4;
      aBlock[4] = sub_100146020;
      v15 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CA1A8;
      v11 = _Block_copy(aBlock);
      v12 = v15;
      swift_retain();
      objc_msgSend(v13, "dismissViewControllerAnimated:completion:", 1, v11, swift_release(v12).n128_f64[0]);

      _Block_release(v11);
      swift_release(v4);
    }
    else
    {
      DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(v6, 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
      swift_release(v4);

    }
  }
  else
  {
    DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(v6, 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
    swift_release(v4);
  }
}

void sub_10013457C(char a1, void (*a2)(void), uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  id v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v4 = v3;
  v8 = objc_msgSend(v4, "effectiveSearchController");
  if (v8)
  {
    v14 = v8;
    if (objc_msgSend(v8, "isActive"))
    {
      v9 = objc_msgSend(v14, "searchBar");
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "setText:", v10);

      v11 = swift_allocObject(&unk_1005CA1E0, 32, 7);
      *(_QWORD *)(v11 + 16) = a2;
      *(_QWORD *)(v11 + 24) = a3;
      aBlock[4] = sub_100146020;
      v16 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CA1F8;
      v12 = _Block_copy(aBlock);
      v13 = v16;
      sub_10008BA00((uint64_t)a2, a3);
      objc_msgSend(v14, "dismissViewControllerAnimated:completion:", a1 & 1, v12, swift_release(v13).n128_f64[0]);

      _Block_release(v12);
    }
    else
    {
      if (a2)
        a2();

    }
  }
  else if (a2)
  {
    a2();
  }
}

double sub_100134754()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  unsigned int v8;
  double result;
  id v10;
  double v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  unsigned int v17;
  double v18;
  id v19;
  void *v20;
  Class isa;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "configuration", v4);
  v8 = objc_msgSend(v7, "isPickerUI");

  if (v8)
  {
    v10 = objc_msgSend(v1, "delegate");
    if (v10)
    {
      v12 = v10;
      v28[1] = &OBJC_PROTOCOL___UIDocumentBrowserViewControllerPrivateDelegate;
      v13 = (void *)swift_dynamicCastObjCProtocolConditional(v10, 1);
      if (v13)
      {
        v14 = v13;
        if (objc_msgSend(v13, "respondsToSelector:", "documentManagerWasCancelled:"))
        {
          if ((objc_msgSend(v14, "respondsToSelector:", "documentManagerWasCancelled:") & 1) != 0)
            objc_msgSend(v14, "documentManagerWasCancelled:", v1);
        }
      }
      *(_QWORD *)&v11 = swift_unknownObjectRelease(v12).n128_u64[0];
    }
    v15 = objc_msgSend(v1, "delegate", v11);
    if (v15
      && (v16 = v15,
          v17 = objc_msgSend(v15, "respondsToSelector:", "documentBrowser:didPickDocumentsAtURLs:"),
          *(_QWORD *)&v18 = swift_unknownObjectRelease(v16).n128_u64[0],
          v17))
    {
      v19 = objc_msgSend(v1, "delegate", v18);
      if (v19)
      {
        v20 = v19;
        if ((objc_msgSend(v19, "respondsToSelector:", "documentBrowser:didPickDocumentsAtURLs:") & 1) != 0)
        {
          type metadata accessor for URL(0);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v20, "documentBrowser:didPickDocumentsAtURLs:", v1, isa);
          swift_unknownObjectRelease(v20);

        }
        else
        {
          *(_QWORD *)&result = swift_unknownObjectRelease(v20).n128_u64[0];
        }
      }
    }
    else
    {
      v22 = Logger.UI.unsafeMutableAddressor(v15);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v22, v2);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        v27 = swift_slowAlloc(32, -1);
        v30 = v27;
        *(_DWORD *)v26 = 136315138;
        v29 = sub_1000544FC(0xD000000000000019, 0x8000000100511020, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s no delegate method implemented to handle cancel picker", v26, 0xCu);
        swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  return result;
}

unint64_t sub_100134BEC(uint64_t a1)
{
  void *v1;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t ObjectType;
  char v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = (char *)objc_msgSend(v1, "hierarchyController");
  v4 = (uint64_t *)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v15, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (v6)
      goto LABEL_3;
LABEL_14:

    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
  if (v5 < 0)
    v14 = v5;
  else
    v14 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v6)
    goto LABEL_14;
LABEL_3:
  result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v5);
LABEL_8:
    v9 = v8;

    swift_bridgeObjectRelease(v5);
    v10 = objc_msgSend(v9, "node");

    if (v10)
    {
      ObjectType = swift_getObjectType(v10, v11);
      v13 = DOCNode.isEqualTo(node:)(a1, ObjectType);
      swift_unknownObjectRelease(v10);
      return v13 & 1;
    }
LABEL_15:
    v13 = 0;
    return v13 & 1;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v5 + 8 * result + 32);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_100134DA4()
{
  void *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  id v8;
  void *v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = (char *)objc_msgSend(v0, "dataSource");
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v2 != 2)
    return 0;
  v3 = (char *)objc_msgSend(v0, "hierarchyController");
  v4 = (uint64_t *)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v13, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (v6)
      goto LABEL_4;
    goto LABEL_14;
  }
  if (v5 < 0)
    v12 = v5;
  else
    v12 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v6)
  {
LABEL_14:

    swift_bridgeObjectRelease(v5);
    return 0;
  }
LABEL_4:
  result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v5);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v5 + 8 * result + 32);
LABEL_9:
    v9 = v8;

    swift_bridgeObjectRelease(v5);
    v10 = type metadata accessor for DOCConcreteSelectionLocation();
    v11 = swift_dynamicCastClass(v9, v10) != 0;

    return v11;
  }
  __break(1u);
  return result;
}

void sub_100134F44(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v3 = swift_allocObject(&unk_1005C99E8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_1005C9FB0, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  v6[4] = sub_100145EBC;
  v7 = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100175118;
  v6[3] = &unk_1005C9FC8;
  v5 = _Block_copy(v6);
  objc_msgSend(v2, "fetchURLForItem:completionHandler:", a1, v5, swift_release(v7).n128_f64[0]);
  _Block_release(v5);

}

void sub_100135050(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char v42[24];

  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v7);
  v8 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v9 = Array<A>.contains(node:)(a1, v7, v8);
  swift_bridgeObjectRelease(v7);
  if ((v9 & 1) == 0)
  {
    v24 = *(id *)DOCLog.UI.unsafeMutableAddressor(v10);
    v25 = static os_log_type_t.error.getter(v24);
    v26 = sub_10006922C((uint64_t *)&unk_100644560);
    v27 = swift_allocObject(v26, 72, 7);
    *(_OWORD *)(v27 + 16) = xmmword_1004D9670;
    ObjectType = swift_getObjectType(a1);
    v29 = DOCNode.nodeDescription.getter(ObjectType);
    v31 = v30;
    *(_QWORD *)(v27 + 56) = &type metadata for String;
    *(_QWORD *)(v27 + 64) = sub_10006A638();
    *(_QWORD *)(v27 + 32) = v29;
    *(_QWORD *)(v27 + 40) = v31;
    os_log(_:dso:log:type:_:)("Item collection does not contain node %@", 40, 2, &_mh_execute_header, v24, v25, v27);
LABEL_9:

    swift_bridgeObjectRelease(v27);
    return;
  }
  v11 = sub_100195350(a1);
  if (!v11)
  {
    v24 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v32 = static os_log_type_t.error.getter(v24);
    v33 = sub_10006922C((uint64_t *)&unk_100644560);
    v27 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v27 + 16) = xmmword_1004D9670;
    v34 = swift_getObjectType(a1);
    v35 = DOCNode.nodeDescription.getter(v34);
    v37 = v36;
    *(_QWORD *)(v27 + 56) = &type metadata for String;
    *(_QWORD *)(v27 + 64) = sub_10006A638();
    *(_QWORD *)(v27 + 32) = v35;
    *(_QWORD *)(v27 + 40) = v37;
    os_log(_:dso:log:type:_:)("Item collection controller can not get cell for node %@", 55, 2, &_mh_execute_header, v24, v32, v27);
    goto LABEL_9;
  }
  v12 = v11;
  v13 = type metadata accessor for DOCInlineRenameController();
  v14 = swift_allocObject(v13, 160, 7);
  swift_getObjectType(a1);
  swift_unknownObjectRetain(a1);
  v15 = a2;
  v16 = sub_100390918((uint64_t)v15, (uint64_t)v12, a1, v14);

  swift_unknownObjectRelease(a1);
  v17 = &v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v42, 0, 0);
  *(_BYTE *)(v16 + 40) = *(_QWORD *)v17 == 0;
  v18 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = v16;
  swift_retain();
  swift_release(v19);
  if (!*(_QWORD *)&v15[v18])
    v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v20 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
  sub_100244284((uint64_t)v6);
  sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
  if (*(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
  {
    v21 = (void (**)(uint64_t, uint64_t))&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    v22 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    v23 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing
                        + 8];
    *v21 = sub_10012BA18;
    v21[1] = (void (*)(uint64_t, uint64_t))v16;
    sub_100087534(v22, v23);

  }
  else
  {
    v38 = swift_retain_n(v16, 2);
    sub_10038C8C0(v38, v39);

    swift_release_n(v16, 3, v40);
  }
}

double sub_1001353B8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  double result;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD aBlock[5];
  uint64_t v40;
  _QWORD v41[3];
  char v42[8];
  char v43[24];

  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&aBlock[-1] - v16;
  a3 += 16;
  swift_beginAccess(a3, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v20 = (void *)Strong;
    sub_1000271D4(a1, (uint64_t)v10, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      v21 = sub_10000CB4C((uint64_t)v10, &qword_100643470);
      v22 = *(id *)DOCLog.UI.unsafeMutableAddressor(v21);
      v23 = static os_log_type_t.error.getter(v22);
      v24 = sub_10006922C((uint64_t *)&unk_100644560);
      v25 = swift_allocObject(v24, 72, 7);
      *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
      if (a2)
      {
        swift_getErrorValue(a2, v42, v41);
        v26 = Error.localizedDescription.getter(v41[1], v41[2]);
        a2 = v27;
      }
      else
      {
        v26 = 0;
      }
      *(_QWORD *)(v25 + 56) = &type metadata for String;
      *(_QWORD *)(v25 + 64) = sub_10006A638();
      v36 = 4271950;
      if (a2)
        v36 = v26;
      v37 = 0xE300000000000000;
      if (a2)
        v37 = a2;
      *(_QWORD *)(v25 + 32) = v36;
      *(_QWORD *)(v25 + 40) = v37;
      os_log(_:dso:log:type:_:)("Can't rename an item that don't have an URL error: %@", 53, 2, &_mh_execute_header, v22, v23, v25);

      *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
    }
    else
    {
      v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v28(v17, v10, v11);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
      v29 = *(unsigned __int8 *)(v12 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = swift_allocObject(&unk_1005CA000, v30 + v13, v29 | 7);
      *(_QWORD *)(v31 + 16) = v20;
      *(_QWORD *)(v31 + 24) = a4;
      v28((char *)(v31 + v30), v14, v11);
      aBlock[4] = sub_100145F40;
      v40 = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CA018;
      v32 = _Block_copy(aBlock);
      v33 = v40;
      v34 = v20;
      v35 = a4;
      swift_release(v33);
      DOCRunInMainThread(v32);
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  return result;
}

void sub_1001356B8(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  void **v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, void *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t i;
  char *v32;
  void *v33;
  void **v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  void *v61;
  char v62[24];
  unint64_t v63;
  char v64[32];
  char v65[24];

  v6 = sub_10006922C(&qword_100643470);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)objc_msgSend(a1, "effectiveBrowserViewController", v7);
  if (!v10)
    return;
  v11 = v10;
  v12 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v65, 0, 0);
  v13 = *v12;
  if (!v13
    || (v61 = a2,
        v14 = type metadata accessor for DOCItemCollectionViewController(0),
        (v15 = swift_dynamicCastClass(v13, v14)) == 0))
  {

    return;
  }
  v16 = (char *)v15;
  v59 = v13;

  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(char *, void *, uint64_t))(v18 + 16);
  v60 = a3;
  v19(v9, a3, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
  if (!*(_QWORD *)&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    goto LABEL_37;
  v20 = sub_10004FD50();
  __chkstk_darwin(v20);
  *(&v59 - 2) = v61;
  *(&v59 - 1) = v9;
  v21 = sub_100174BD4(sub_10012B7C8, (uint64_t)(&v59 - 4), v20);
  swift_bridgeObjectRelease(v20);
  sub_10000CB4C((uint64_t)v9, &qword_100643470);
  if (v21)
  {
    v23 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    swift_bridgeObjectRetain(v23);
    v24 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v25 = Array<A>.contains(node:)(v21, v23, v24);
    swift_bridgeObjectRelease(v23);
    if ((v25 & 1) != 0)
    {
      sub_100135050(v21, v16);
      swift_unknownObjectRelease(v21);

      return;
    }
    *(_QWORD *)&v22 = swift_unknownObjectRelease(v21).n128_u64[0];
  }
  v26 = (char *)objc_msgSend(a1, "dataSource", v22);
  v27 = (uint64_t *)&v26[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v26[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v64, 0, 0);
  v28 = *v27;
  swift_bridgeObjectRetain(*v27);

  v63 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v28 >> 62)
  {
    if (v28 < 0)
      v44 = v28;
    else
      v44 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v28);
    v29 = _CocoaArrayWrapper.endIndex.getter(v44);
    v30 = v60;
    if (v29)
      goto LABEL_12;
  }
  else
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v28);
    v30 = v60;
    if (v29)
    {
LABEL_12:
      if (v29 >= 1)
      {
        for (i = 0; i != v29; ++i)
        {
          if ((v28 & 0xC000000000000001) != 0)
            v32 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
          else
            v32 = (char *)*(id *)(v28 + 8 * i + 32);
          v33 = v32;
          v34 = (void **)&v32[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess(&v32[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v62, 0, 0);
          v35 = *v34;
          if (v35 && (v36 = swift_dynamicCastClass(v35, v14)) != 0)
          {
            v37 = v36;
            v38 = v35;

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
            v41 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v40 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v41 >= v40 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
            v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v37);
            specialized Array._endMutation()(v42);
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease(v28);
        v43 = (_QWORD *)v63;
        v30 = v60;
        goto LABEL_30;
      }
      __break(1u);
LABEL_37:
      __break(1u);
      return;
    }
  }
  swift_bridgeObjectRelease(v28);
  v43 = _swiftEmptyArrayStorage;
LABEL_30:
  swift_bridgeObjectRelease(v28);
  v63 = 0;
  __chkstk_darwin(v45);
  v46 = v61;
  *(&v59 - 4) = &v63;
  *(&v59 - 3) = v46;
  *(&v59 - 2) = v30;
  v47 = sub_100174D08((uint64_t (*)(id *))sub_100145F70, (uint64_t)(&v59 - 6), (uint64_t)v43);
  swift_bridgeObjectRelease(v43);
  if (v47 && (v49 = v63) != 0)
  {
    v47 = v47;
    v50 = swift_unknownObjectRetain(v49);
    sub_100135050(v50, (char *)v47);
    swift_unknownObjectRelease(v49);

  }
  else
  {
    v51 = *(id *)DOCLog.UI.unsafeMutableAddressor(v48);
    v52 = static os_log_type_t.error.getter(v51);
    v53 = sub_10006922C((uint64_t *)&unk_100644560);
    v54 = swift_allocObject(v53, 72, 7);
    *(_OWORD *)(v54 + 16) = xmmword_1004D9670;
    v55 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v56 = DOCNode.nodeDescription.getter(v55);
    v58 = v57;
    *(_QWORD *)(v54 + 56) = &type metadata for String;
    *(_QWORD *)(v54 + 64) = sub_10006A638();
    *(_QWORD *)(v54 + 32) = v56;
    *(_QWORD *)(v54 + 40) = v58;
    os_log(_:dso:log:type:_:)("Couldn't find an item collection view controller that contains node: %@", 71, 2, &_mh_execute_header, v51, v52, v54);

    swift_bridgeObjectRelease(v54);
  }

  swift_unknownObjectRelease(v63);
}

uint64_t sub_100135BE8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v10, a4, v12);
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  if (*(_QWORD *)(v11 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    v15 = sub_10004FD50();
    __chkstk_darwin(v15);
    *(&v22 - 2) = a3;
    *(&v22 - 1) = (uint64_t)v10;
    v16 = sub_100174BD4(sub_100146530, (uint64_t)(&v22 - 4), v15);
    swift_bridgeObjectRelease(v15);
    sub_10000CB4C((uint64_t)v10, &qword_100643470);
    v17 = *a2;
    *a2 = v16;
    swift_unknownObjectRelease(v17);
    v18 = *a2;
    if (v18)
    {
      v19 = *(_QWORD *)(v11 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
      swift_unknownObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      v20 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v21 = Array<A>.contains(node:)(v18, v19, v20);
      swift_unknownObjectRelease(v18);
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v21 = 0;
    }
    return v21 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100135DEC(void *a1, uint64_t a2)
{
  void *v2;
  char *v5;
  void *v6;
  void **v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v5 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
  if (v5)
  {
    v6 = v5;
    v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v18, 0, 0);
    v8 = *v7;
    if (v8 && (v9 = type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass(v8, v9)))
    {
      v10 = v8;

      if (a2)
      {
        v11 = a2 & 0xFFFFFFFFFFFFFF8;
        if ((unint64_t)a2 >> 62)
        {
          if (a2 < 0)
            v11 = a2;
          swift_bridgeObjectRetain(a2);
          v16 = sub_10006922C((uint64_t *)&unk_1006424B0);
          v17 = _bridgeCocoaArray<A>(_:)(v11, v16);
          swift_bridgeObjectRelease(a2);
          a2 = v17;
        }
        else
        {
          v12 = swift_bridgeObjectRetain(a2);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v12);
        }
      }
      v13 = swift_allocObject(&unk_1005C9F60, 24, 7);
      swift_unknownObjectWeakInit(v13 + 16);
      v14 = (_QWORD *)swift_allocObject(&unk_1005C9F88, 40, 7);
      v14[2] = v13;
      v14[3] = a1;
      v14[4] = a2;
      v15 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      swift_retain();
      a1;
      swift_bridgeObjectRetain(a2);
      DOCNode.fpfs_fetchFPItem(completion:)(sub_100145E80, v14, v15);

      swift_bridgeObjectRelease(a2);
      swift_release(v13);
      swift_release(v14);
    }
    else
    {

    }
  }
}

uint64_t sub_100136024(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char *v11;
  void **v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t i;
  char *v32;
  void *v33;
  void **v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v62;
  uint64_t v63;
  char v66[24];
  uint64_t v67;
  _QWORD v68[3];
  char v69[24];
  char v70[24];

  v6 = (uint64_t)objc_msgSend(v4, "dataSource");
  v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess(v6 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v70, 0, 0);
  v8 = *v7;
  swift_bridgeObjectRetain(*v7);

  v68[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v8 >> 62)
    goto LABEL_50;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v8);
  while (!v9)
  {
    swift_bridgeObjectRelease(v8);
    v6 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v45 = v6;
      else
        v45 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v8 = _CocoaArrayWrapper.endIndex.getter(v45);
      if (!v8)
      {
LABEL_29:
        swift_bridgeObjectRelease_n(v6, 2);
        goto LABEL_34;
      }
    }
    else
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v6);
      if (!v8)
        goto LABEL_29;
    }
    v21 = 4;
    while (1)
    {
      v5 = v21 - 4;
      v22 = (v6 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21 - 4, v6)
          : (char *)*(id *)(v6 + 8 * v21);
      v9 = (unint64_t)v22;
      v23 = v21 - 3;
      if (__OFADD__(v5, 1))
        break;
      v5 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
      if (*(_QWORD *)&v22[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
        goto LABEL_32;

      ++v21;
      if (v23 == v8)
        goto LABEL_29;
    }
    __break(1u);
LABEL_50:
    if (v8 < 0)
      v6 = v8;
    else
      v6 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v6);
  }
  while (1)
  {
    if (__OFSUB__(v9--, 1))
    {
      __break(1u);
LABEL_19:
      swift_bridgeObjectRelease(v8);
      v6 = v68[0];
      goto LABEL_20;
    }
    if ((v8 & 0xC000000000000001) == 0)
      break;
    v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v8);
LABEL_12:
    v6 = (uint64_t)v11;
    v12 = (void **)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v69, 0, 0);
    v13 = *v12;
    if (v13
      && (v14 = type metadata accessor for DOCItemCollectionViewController(0),
          (v15 = swift_dynamicCastClass(v13, v14)) != 0))
    {
      v5 = v15;
      v16 = v13;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = *(_QWORD *)((v68[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = *(_QWORD *)((v68[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= v18 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v5);
      v6 = (uint64_t)v68;
      specialized Array._endMutation()(v20);
      if (!v9)
        goto LABEL_19;
    }
    else
    {

      if (!v9)
        goto LABEL_19;
    }
  }
  if ((v9 & 0x8000000000000000) == 0)
  {
    if (v9 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_31;
    v11 = (char *)*(id *)(v8 + 32 + 8 * v9);
    goto LABEL_12;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  swift_bridgeObjectRelease_n(v6, 2);
  v25 = *(_QWORD *)(v9 + v5);
  swift_retain();

  if (v25)
  {
    sub_10038EF44();
    *(_QWORD *)&v24 = swift_release(v25).n128_u64[0];
  }
LABEL_34:
  v26 = (char *)objc_msgSend(v62, "dataSource", v24);
  v27 = (uint64_t *)&v26[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v26[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v68, 0, 0);
  v28 = *v27;
  swift_bridgeObjectRetain(*v27);

  v67 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v28 >> 62)
  {
    if (v28 < 0)
      v46 = v28;
    else
      v46 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v28);
    result = _CocoaArrayWrapper.endIndex.getter(v46);
    v29 = result;
    if (!result)
      goto LABEL_64;
LABEL_36:
    if (v29 >= 1)
    {
      for (i = 0; i != v29; ++i)
      {
        if ((v28 & 0xC000000000000001) != 0)
          v32 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
        else
          v32 = (char *)*(id *)(v28 + 8 * i + 32);
        v33 = v32;
        v34 = (void **)&v32[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v32[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v66, 0, 0);
        v35 = *v34;
        if (v35
          && (v36 = type metadata accessor for DOCItemCollectionViewController(0),
              (v37 = swift_dynamicCastClass(v35, v36)) != 0))
        {
          v38 = v37;
          v39 = v35;

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
          v42 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v41 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v42 >= v41 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
          v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v38);
          specialized Array._endMutation()(v43);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v28);
      v44 = (_QWORD *)v67;
      goto LABEL_65;
    }
    __break(1u);
LABEL_79:
    __break(1u);
    return result;
  }
  v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(v28);
  if (v29)
    goto LABEL_36;
LABEL_64:
  swift_bridgeObjectRelease(v28);
  v44 = _swiftEmptyArrayStorage;
LABEL_65:
  swift_bridgeObjectRelease(v28);
  sub_10001ADEC();
  v67 = (uint64_t)v44;
  sub_10013092C(v47, (unint64_t *)type metadata accessor for DOCItemCollectionViewController, &qword_1006443C8, &qword_1006443C0, (uint64_t *)sub_1000E0F80);
  v48 = v67;
  if ((unint64_t)v67 >> 62)
  {
    if (v67 < 0)
      v59 = v67;
    else
      v59 = v67 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v67);
    result = _CocoaArrayWrapper.endIndex.getter(v59);
    v63 = result;
    if (!result)
      return swift_bridgeObjectRelease_n(v48, 2);
LABEL_67:
    if (v63 >= 1)
    {
      v50 = 0;
      v51 = v48 & 0xC000000000000001;
      v52 = v48;
      do
      {
        if (v51)
          v53 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v48);
        else
          v53 = (char *)*(id *)(v48 + 8 * v50 + 32);
        v54 = v53;
        ++v50;
        v55 = &v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
        v56 = *(_QWORD *)&v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
        v57 = *(_QWORD *)&v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8];
        v58 = *(_QWORD *)&v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 16];
        *(_QWORD *)v55 = a1;
        *((_QWORD *)v55 + 1) = a2;
        *((_QWORD *)v55 + 2) = a3;
        v55[24] = a4 & 1;
        swift_bridgeObjectRetain(a2);
        swift_bridgeObjectRetain(a3);
        sub_100144F34(v56, v57, v58);
        sub_10003F554();

        v48 = v52;
      }
      while (v63 != v50);
      return swift_bridgeObjectRelease_n(v48, 2);
    }
    goto LABEL_79;
  }
  v49 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(v67);
  v63 = v49;
  if (v49)
    goto LABEL_67;
  return swift_bridgeObjectRelease_n(v48, 2);
}

void sub_100136610(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  SEL *v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  double v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  double v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  Class isa;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char v68[40];
  _QWORD aBlock[5];
  uint64_t v70;
  char v71[24];
  char v72[32];

  v3 = v2;
  v66 = a1;
  v67 = a2;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)objc_msgSend(v2, "hierarchyController", __chkstk_darwin(v4));
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v8[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v72, 0, 0);
  v10 = *v9;
  v11 = (unint64_t)*v9 >> 62;
  v65 = v6;
  if (!v11)
  {
    v12 = *(char **)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    v13 = (SEL *)&off_10061F000;
    if (v12)
      goto LABEL_3;
LABEL_17:

    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v10).n128_u64[0];
    goto LABEL_18;
  }
  if (v10 < 0)
    v31 = v10;
  else
    v31 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v12 = (char *)_CocoaArrayWrapper.endIndex.getter(v31);
  v13 = (SEL *)&off_10061F000;
  if (!v12)
    goto LABEL_17;
LABEL_3:
  v14 = (unint64_t)(v12 - 1);
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
  }
  else if ((v10 & 0xC000000000000001) == 0)
  {
    if ((v14 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v14 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v15 = *(id *)(v10 + 8 * v14 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_41;
  }
  v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v10);
LABEL_8:
  v16 = v15;

  v17 = objc_msgSend(v16, "fileProviderItem", swift_bridgeObjectRelease(v10).n128_f64[0]);
  if (v17)
  {
    v18 = v17;
    v19 = v4;
    v20 = (void *)FPActionImportHere;
    v21 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v21, v68);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v18;
    aBlock[0] = inited;
    specialized Array._endMutation()(inited);
    v23 = aBlock[0];
    v24 = v18;
    LOBYTE(v20) = sub_1003598CC(v20, v23);
    swift_bridgeObjectRelease(v23);

    if ((v20 & 1) != 0)
    {
      v25 = objc_msgSend(v3, "documentManager");
      v26 = swift_allocObject(&unk_1005C9D08, 32, 7);
      v27 = v67;
      *(_QWORD *)(v26 + 16) = v67;
      *(_QWORD *)(v26 + 24) = v3;
      v28 = v27;
      v29 = v3;
      sub_10041C5BC(v66, 2, (uint64_t)sub_100145B64, v26);

      swift_release(v26);
      return;
    }

    v4 = v19;
    v13 = (SEL *)&off_10061F000;
  }
  else
  {

  }
LABEL_18:
  v12 = (char *)objc_msgSend(v3, "hierarchyController", v30);
  v32 = (uint64_t *)&v12[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v12[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v71, 0, 0);
  v10 = *v32;
  if ((unint64_t)*v32 >> 62)
  {
    if (v10 < 0)
      v53 = *v32;
    else
      v53 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v33 = _CocoaArrayWrapper.endIndex.getter(v53);
    if (v33)
    {
LABEL_20:
      v14 = v33 - 1;
      if (!__OFSUB__(v33, 1))
      {
        if ((v10 & 0xC000000000000001) == 0)
        {
          if ((v14 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v14 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v34 = *(id *)(v10 + 8 * v14 + 32);
            goto LABEL_25;
          }
          __break(1u);
          return;
        }
LABEL_42:
        v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v10);
LABEL_25:
        v35 = v34;

        v36 = objc_msgSend(v35, v13[319], swift_bridgeObjectRelease(v10).n128_f64[0]);
        if (v36)
        {
          v37 = v36;
          if ((objc_msgSend(v36, "isFolder") & 1) == 0)
          {
            v64 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
            v38 = swift_allocObject(&unk_1005C99E8, 24, 7);
            v39 = v4;
            v63 = v4;
            v40 = v38;
            swift_unknownObjectWeakInit(v38 + 16);
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v66, v39);
            v41 = *(unsigned __int8 *)(v5 + 80);
            v42 = (v41 + 24) & ~v41;
            v43 = (v65 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
            v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
            v45 = swift_allocObject(&unk_1005C9CB8, v44 + 8, v41 | 7);
            *(_QWORD *)(v45 + 16) = v40;
            (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v45 + v42, v7, v63);
            v46 = v67;
            *(_QWORD *)(v45 + v43) = v67;
            *(_QWORD *)(v45 + v44) = v3;
            aBlock[4] = sub_100145AC8;
            v70 = v45;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_100175118;
            aBlock[3] = &unk_1005C9CD0;
            v47 = _Block_copy(aBlock);
            v48 = v70;
            v49 = v46;
            v50 = v3;
            *(_QWORD *)&v51 = swift_release(v48).n128_u64[0];
            v52 = v64;
            objc_msgSend(v64, "fetchURLForItem:completionHandler:", v37, v47, v51);
            _Block_release(v47);

            return;
          }

        }
        else
        {

        }
        goto LABEL_35;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  else
  {
    v33 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    if (v33)
      goto LABEL_20;
  }

  swift_bridgeObjectRelease(v10);
LABEL_35:
  v54 = sub_10006922C((uint64_t *)&unk_100644550);
  v55 = *(unsigned __int8 *)(v5 + 80);
  v56 = (v55 + 32) & ~v55;
  v57 = swift_allocObject(v54, v56 + *(_QWORD *)(v5 + 72), v55 | 7);
  *(_OWORD *)(v57 + 16) = xmmword_1004D9670;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v57 + v56, v66, v4);
  v58 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v60 = objc_msgSend(v58, "initForExportingURLs:asCopy:", isa, 1, swift_bridgeObjectRelease(v57).n128_f64[0]);

  objc_msgSend(v60, "setDelegate:", v3);
  v61 = v67;
  objc_msgSend(v3, "setPickerPresentingController:", v67);
  objc_msgSend(v61, "presentViewController:animated:completion:", v60, 1, 0);

}

void sub_100136BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  NSURL *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v12;
  char v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    URL._bridgeToObjectiveC()(v3);
    v6 = v5;
    v7 = swift_allocObject(&unk_1005C9D80, 24, 7);
    *(_QWORD *)(v7 + 16) = v4;
    aBlock[4] = sub_100145BC8;
    v12 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100175118;
    aBlock[3] = &unk_1005C9D98;
    v8 = _Block_copy(aBlock);
    v9 = v12;
    v10 = v4;
    objc_msgSend(v10, "revealDocumentAtURL:importIfNeeded:updateLastUsedDate:completion:", v6, 0, 0, v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

  }
}

uint64_t sub_100136CE4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v7, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10000CB4C((uint64_t)v7, &qword_100643470);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v13 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  URL._bridgeToObjectiveC()(v14);
  v16 = v15;
  v17 = swift_allocObject(&unk_1005C9DD0, 24, 7);
  *(_QWORD *)(v17 + 16) = a3;
  aBlock[4] = sub_100145BD0;
  v22 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005C9DE8;
  v18 = _Block_copy(aBlock);
  v19 = v22;
  v20 = a3;
  objc_msgSend(v13, "fetchItemForURL:completionHandler:", v16, v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100136EBC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v26 = v11;
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v25 = v6;
    v14 = a1;
    v15 = (void *)static OS_dispatch_queue.main.getter(v14);
    v16 = swift_allocObject(&unk_1005C9E20, 32, 7);
    *(_QWORD *)(v16 + 16) = a3;
    *(_QWORD *)(v16 + 24) = v14;
    aBlock[4] = sub_100145BD8;
    v28 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005C9E38;
    v17 = _Block_copy(aBlock);
    v18 = v28;
    v19 = v14;
    v20 = a3;
    swift_release(v18);
    static DispatchQoS.unspecified.getter(v21);
    aBlock[0] = _swiftEmptyArrayStorage;
    v22 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = sub_10006922C((uint64_t *)&unk_100647540);
    v24 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v5, v22);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v8, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v26);
  }
}

uint64_t sub_1001370EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  id v58;
  id v59;
  char *v60;
  char *v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  void (**v67)(_QWORD, _QWORD);
  uint64_t v68;
  void *v69;
  _QWORD aBlock[5];
  uint64_t v71;
  char v72[24];

  v62 = a6;
  v63 = a1;
  v68 = a4;
  v69 = a5;
  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v67 = *(void (***)(_QWORD, _QWORD))(v11 - 8);
  __chkstk_darwin(v11);
  v64 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v65 = *(_QWORD *)(v13 - 8);
  v66 = (void (*)(char *, char *, uint64_t))v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - v20;
  a3 += 16;
  swift_beginAccess(a3, v72, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v23 = (void *)result;
    if (a2)
    {
      v24 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v25 = (void *)static OS_dispatch_queue.main.getter(v24);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v21, v68, v16);
      v26 = *(unsigned __int8 *)(v17 + 80);
      v27 = (v26 + 16) & ~v26;
      v28 = (v18 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
      v68 = v11;
      v29 = v23;
      v30 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
      v31 = swift_allocObject(&unk_1005C9EC0, v30 + 8, v26 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v31 + v27, v21, v16);
      *(_QWORD *)(v31 + v28) = v29;
      v32 = v69;
      *(_QWORD *)(v31 + v30) = v69;
      aBlock[4] = sub_100145DD8;
      v71 = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005C9ED8;
      v33 = _Block_copy(aBlock);
      v34 = v71;
      v35 = v29;
      v36 = v32;
      swift_release(v34);
      static DispatchQoS.unspecified.getter(v37);
      aBlock[0] = _swiftEmptyArrayStorage;
      v38 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v39 = sub_10006922C((uint64_t *)&unk_100647540);
      v40 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v41 = v64;
      v42 = v39;
      v43 = v68;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v40, v68, v38);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v41, v33);
      _Block_release(v33);

      ((void (**)(char *, uint64_t))v67)[1](v41, v43);
      return (*(uint64_t (**)(char *, void (*)(char *, char *, uint64_t)))(v65 + 8))(v15, v66);
    }
    else
    {
      sub_1000271D4(v63, (uint64_t)v10, &qword_100643470);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16) == 1)
      {

        return sub_10000CB4C((uint64_t)v10, &qword_100643470);
      }
      else
      {
        v66 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v61 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        v66(v61, v10, v16);
        v44 = objc_msgSend(v23, "documentManager");
        v45 = swift_allocObject(&unk_1005C9E70, 32, 7);
        v67 = (void (**)(_QWORD, _QWORD))v23;
        v46 = v69;
        v47 = v62;
        *(_QWORD *)(v45 + 16) = v69;
        *(_QWORD *)(v45 + 24) = v47;
        v48 = (void *)objc_opt_self(FPItemManager);
        v49 = v46;
        v50 = v47;
        v51 = objc_msgSend(v48, "defaultManager");
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v21, v68, v16);
        v52 = *(unsigned __int8 *)(v17 + 80);
        v53 = (v52 + 48) & ~v52;
        v54 = (v18 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
        v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
        v56 = (char *)swift_allocObject(&unk_1005C9E98, v55 + 8, v52 | 7);
        *((_QWORD *)v56 + 2) = sub_100145BE8;
        *((_QWORD *)v56 + 3) = v45;
        *((_QWORD *)v56 + 4) = v51;
        *((_QWORD *)v56 + 5) = v44;
        v66(&v56[v53], v21, v16);
        v57 = &v56[v54];
        *(_QWORD *)v57 = 0;
        *((_QWORD *)v57 + 1) = 0;
        *(_QWORD *)&v56[v55] = 2;
        swift_retain();
        v58 = v51;
        v59 = v44;
        v60 = v61;
        FPItemManager.doc_fetchItem(for:completionHandler:)(v61, sub_100145CC4, v56);

        swift_release(v45);
        swift_release(v56);

        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v60, v16);
      }
    }
  }
  return result;
}

void sub_1001375F8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;

  v6 = sub_10006922C((uint64_t *)&unk_100644550);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v6, v10 + *(_QWORD *)(v8 + 72), v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004D9670;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11 + v10, a1, v7);
  v12 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "initForExportingURLs:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  objc_msgSend(v14, "setDelegate:", a2);
  objc_msgSend(a2, "setPickerPresentingController:", a3);
  objc_msgSend(a3, "presentViewController:animated:completion:", v14, 1, 0);

}

id sub_10013772C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v29 = a6;
  v30 = a7;
  v28 = a5;
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v27 - v17;
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000CB4C((uint64_t)v11, &qword_100643470);
    return objc_msgSend(a3, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  else
  {
    v27 = a3;
    v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v20(v18, v11, v12);
    v21 = swift_allocObject(&unk_1005C99E8, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    v22 = *(unsigned __int8 *)(v13 + 80);
    v23 = (v22 + 24) & ~v22;
    v24 = swift_allocObject(v28, v23 + v14, v22 | 7);
    *(_QWORD *)(v24 + 16) = v21;
    v20((char *)(v24 + v23), v15, v12);
    aBlock[4] = v29;
    v32 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = v30;
    v25 = _Block_copy(aBlock);
    *(_QWORD *)&v26 = swift_release(v32).n128_u64[0];
    objc_msgSend(v27, "dismissViewControllerAnimated:completion:", 1, v25, v26);
    _Block_release(v25);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.documentPickerWasCancelled(_:)(UIDocumentPickerViewController a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = objc_msgSend(v1, "pickerPresentingController");
  if (v2)
  {
    v3 = v2;
    v4 = objc_opt_self(VNDocumentCameraViewController);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5)
      objc_msgSend(v5, "removeSaveActionBlockerForFiles");

  }
  objc_msgSend(v1, "setPickerPresentingController:", 0);
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.documentPicker(_:didPickDocumentsAt:)(UIDocumentPickerViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  void *v2;
  id v3;
  void *v4;

  v3 = objc_msgSend(v2, "pickerPresentingController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  objc_msgSend(v2, "setPickerPresentingController:", 0);
}

void *sub_100137C00(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  char v18;
  id v19;
  char v20;
  uint64_t v21;
  char v22;
  char *v23;
  void *v24;
  void **v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v40;
  _QWORD v41[3];
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44;

  v4 = v3;
  sub_1000271D4(a3, (uint64_t)v43, &qword_100642730);
  if (!v44)
  {
    sub_10000CB4C((uint64_t)v43, &qword_100642730);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v41, v43, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_8:
    static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("UIEditingInteraction"));
    v12 = v13;
    goto LABEL_9;
  }
  v9 = v41[0];
  v8 = v41[1];
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("UIEditingInteraction"));
  v12 = v11;
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease(v12);
    sub_1000271D4(a3, (uint64_t)v43, &qword_100642730);
    goto LABEL_10;
  }
  if (v9 == v10 && v8 == v11)
  {
    swift_bridgeObjectRelease_n(v8, 2);
    sub_1000271D4(a3, (uint64_t)v43, &qword_100642730);
LABEL_20:
    sub_10000CB4C((uint64_t)v43, &qword_100642730);
    goto LABEL_21;
  }
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v8, v10, v11, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  sub_1000271D4(a3, (uint64_t)v43, &qword_100642730);
  if ((v20 & 1) != 0)
    goto LABEL_20;
LABEL_10:
  sub_1000271D4((uint64_t)v43, (uint64_t)v41, &qword_100642730);
  if (v42)
  {
    v14 = type metadata accessor for DOCItemCollectionViewController(0);
    if ((swift_dynamicCast(&v40, v41, (char *)&type metadata for Any + 8, v14, 6) & 1) != 0)
    {
      v15 = v40;
      if (a1)
      {
        v16 = a1;
        v17 = v15;
        v18 = static NSObject.== infix(_:_:)(v17, v16);
        sub_10000CB4C((uint64_t)v43, &qword_100642730);

        goto LABEL_22;
      }
      sub_10000CB4C((uint64_t)v43, &qword_100642730);

      goto LABEL_18;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v41, &qword_100642730);
  }
  v19 = a1;
  sub_10000CB4C((uint64_t)v43, &qword_100642730);
  if (a1)
  {

LABEL_18:
    v18 = 0;
    goto LABEL_22;
  }
LABEL_21:
  v18 = 1;
LABEL_22:
  sub_1000271D4(a3, (uint64_t)v41, &qword_100642730);
  if (v42)
  {
    v21 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    if ((swift_dynamicCast(&v40, v41, (char *)&type metadata for Any + 8, v21, 6) & 1) != 0)
    {

      goto LABEL_27;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v41, &qword_100642730);
  }
  if ((v18 & 1) == 0)
  {
LABEL_45:
    if (a1)
      v38 = a1;
    return a1;
  }
LABEL_27:
  v22 = static Selector.== infix(_:_:)("delete:", a2);
  v23 = (char *)objc_msgSend(v4, "effectiveBrowserViewController");
  v24 = v23;
  if ((v22 & 1) != 0)
  {
    if (v23)
    {
      v25 = (void **)&v23[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v23[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v41, 0, 0);
      v26 = *v25;
      if (*v25)
      {
        v27 = type metadata accessor for DOCItemCollectionViewController(0);
        v28 = swift_dynamicCastClass(v26, v27);
        if (v28)
        {
          v29 = v28;
          v30 = v26;

          v31 = (uint64_t)sub_100034068(0);
          v32 = v31;
          if ((unint64_t)v31 >> 62)
          {
            if (v31 >= 0)
              v31 &= 0xFFFFFFFFFFFFFF8uLL;
            v33 = _CocoaArrayWrapper.endIndex.getter(v31);
          }
          else
          {
            v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease(v32);
          if (v33 >= 1)
            return (void *)v29;
          v24 = v30;
        }
      }

    }
    goto LABEL_45;
  }
  if (!v23)
    return 0;
  v34 = (void **)&v23[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v23[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v41, 0, 0);
  v35 = *v34;
  if (*v34)
  {
    v36 = type metadata accessor for DOCItemCollectionViewController(0);
    a1 = (void *)swift_dynamicCastClass(v35, v36);
    if (a1)
      v37 = v35;

  }
  else
  {

    return 0;
  }
  return a1;
}

uint64_t sub_100138018(void *a1)
{
  void *v1;
  void *v2;
  char *v4;
  void *v5;
  void **v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  _BYTE v15[24];

  v2 = v1;
  v4 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
  if (v4)
  {
    v5 = v4;
    v6 = (void **)&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v15, 0, 0);
    v7 = *v6;
    if (*v6
      && (v8 = type metadata accessor for DOCItemCollectionViewController(0),
          (v9 = swift_dynamicCastClass(v7, v8)) != 0))
    {
      v10 = v9;
      v11 = v7;

      v12 = a1;
      v13 = static NSObject.== infix(_:_:)(v12, v10);

      v5 = v11;
    }
    else
    {
      v13 = 0;
    }

  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_100138100(uint64_t *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char *v18;
  void *v19;
  void **v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v2, "internalNavigationController", v6);
  v10 = objc_msgSend(v9, "topViewController");

  if (!v10)
    goto LABEL_17;
  v12 = type metadata accessor for DOCColumnViewController(0);
  v13 = swift_dynamicCastClass(v10, v12);
  if (!v13)
  {

LABEL_17:
    v27 = Logger.UI.unsafeMutableAddressor(v11);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v27, v4);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v39[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v37 = sub_1000544FC(0xD00000000000002ELL, 0x8000000100511070, v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s No column view controller available", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_20;
  }
  v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v13 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v39, 0, 0);
  v15 = *v14;
  if ((unint64_t)v15 >> 62)
    goto LABEL_25;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v15);
  for (; v16; v16 = _CocoaArrayWrapper.endIndex.getter(v34))
  {
    v36 = a1;
    a1 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
    while (!__OFSUB__(v16--, 1))
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v15);
      }
      else
      {
        if ((v16 & 0x8000000000000000) != 0)
          goto LABEL_23;
        if (v16 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_24;
        v18 = (char *)*(id *)(v15 + 32 + 8 * v16);
      }
      v19 = v18;
      v20 = (void **)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], &v37, 0, 0);
      v21 = *v20;
      if (*v20)
      {
        v22 = type metadata accessor for DOCItemCollectionViewController(0);
        v23 = swift_dynamicCastClass(v21, v22);
        if (v23)
        {
          v24 = v23;
          v25 = v21;
          swift_bridgeObjectRelease(v15);
          sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
          v26 = static NSObject.== infix(_:_:)(v36, v24);

          return v26 & 1;
        }
      }

      if (!v16)
        goto LABEL_29;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    if (v15 < 0)
      v34 = v15;
    else
      v34 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
  }
LABEL_29:

  swift_bridgeObjectRelease(v15);
LABEL_20:
  v26 = 0;
  return v26 & 1;
}

Swift::Bool __swiftcall DOCFullDocumentManagerViewController.establishFirstResponderIfNeeded()()
{
  void *v0;
  unsigned int v1;

  v1 = objc_msgSend(v0, "needsFirstResponder");
  if (v1)
  {
    v1 = objc_msgSend(v0, "establishFirstResponder");
    if (v1)
    {
      objc_msgSend(v0, "setNeedsFirstResponder:", 0);
      LOBYTE(v1) = 1;
    }
  }
  return v1;
}

void sub_100138538(uint64_t *a1, void *a2)
{
  void *v2;
  char *v5;
  char *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v5 = (char *)objc_msgSend(v2, "displayModeHandler");
  v6 = &v5[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
  *(_QWORD *)v6 = a1;
  v6[8] = 0;

  sub_100138688((uint64_t)a1, a2);
  sub_100138A9C(a1, (id *)a2);
  if (objc_msgSend(v2, "enclosedInUIPDocumentLanding"))
    v7 = a1 == (uint64_t *)2;
  else
    v7 = 0;
  if (v7)
  {
    v8 = DOCUIPBrowserState.init()();
    v9 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
    v10 = objc_msgSend(v2, "configuration");
    v11 = objc_msgSend(v10, "sceneIdentifier");

    v12 = objc_msgSend(v9, "globalTabbedBrowserControllerForIdentifier:", v11);
    if (v12)
    {
      v13 = (id)DOCUIPBrowserState._bridgeToObjectiveC()(v8, 0);
      objc_msgSend(v12, "performBrowserStateChange:", v13);

    }
  }
}

void sub_100138688(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  id v39;
  Class isa;
  NSString v41;
  _QWORD v42[2];
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  _OWORD v51[2];
  __int128 v52;
  void *v53;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
  v11 = objc_msgSend(v3, "configuration");
  v12 = objc_msgSend(v10, "interfaceStateForConfiguration:", v11);

  if (v12)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
    v14 = Logger.StateStore.unsafeMutableAddressor(v13);
    v48 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
    v15 = v13;
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.debug.getter(v16);
    v18 = os_log_type_enabled(v16, v17);
    v49 = v15;
    if (v18)
    {
      v44 = v3;
      v19 = swift_slowAlloc(12, -1);
      v45 = a2;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v52 = v21;
      v46 = a1;
      *(_DWORD *)v20 = 136315138;
      v42[1] = v20 + 4;
      v22 = v15;
      v43 = v6;
      v23 = v22;
      v24 = objc_msgSend(v22, "description");
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v47 = v12;
      v27 = v26;

      v3 = v44;
      *(_QWORD *)&v51[0] = sub_1000544FC(v25, v27, (uint64_t *)&v52);
      a1 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v51, (char *)v51 + 8);

      v28 = v27;
      v12 = v47;
      swift_bridgeObjectRelease(v28);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "updateUserDefaults for userSelecteDisplayMode: %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      v29 = v20;
      a2 = v45;
      swift_slowDealloc(v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v6);
    }
    v30 = objc_msgSend(v3, "configuration");
    sub_1001445A4(a2, (uint64_t)v30);
    v32 = v31;

    v33 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCUserDefaultsDisplayModeKey);
    v36 = v35;
    v53 = &type metadata for Int;
    *(_QWORD *)&v52 = a1;
    sub_100079B28(&v52, v51);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
    v50 = v33;
    sub_100356D3C(v51, v34, v36, isUniquelyReferenced_nonNull_native);
    v38 = v50;
    swift_bridgeObjectRelease(v36);
    v39 = objc_msgSend(v12, "displayModes", swift_bridgeObjectRelease(0x8000000000000000).n128_f64[0]);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v38);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v39, "setValue:forKey:", isa, v41, swift_bridgeObjectRelease(v32).n128_f64[0]);

  }
}

void sub_100138A9C(uint64_t *a1, id *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  _BOOL4 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _BOOL4 v50;
  uint64_t v51;
  char *v52;
  id *v53;
  id *v54;
  uint64_t v55;
  char v56[24];
  char v57[24];

  v3 = v2;
  v53 = a2;
  v5 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v52 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v46 - v11;
  v13 = objc_msgSend(v3, "view");
  if (!v13)
  {
    __break(1u);
    return;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "window");

  if (v15 && (v16 = objc_msgSend(v15, "windowScene"), v15, v16))
  {
    v17 = objc_msgSend(v16, "activationState");

    v18 = v17 != (id)2;
  }
  else
  {
    v18 = 1;
  }
  v50 = v18;
  v19 = (char *)objc_msgSend(v3, "hierarchyController");
  v20 = (uint64_t)&v19[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v19[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v57, 0, 0);
  sub_1000271D4(v20, (uint64_t)v10, (uint64_t *)&unk_1006443D0);
  v21 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v10, 1, v21) == 1)
  {
    v24 = a1;
    v25 = &v19[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v19[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v56, 0, 0);
    v26 = (uint64_t)v25;
    a1 = v24;
    sub_1000271D4(v26, (uint64_t)v12, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1000AC0A0((uint64_t)v10, (uint64_t)v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v21);
  }
  v27 = v23(v12, 1, v21);
  v28 = v51;
  v29 = v52;
  if (v27 == 1)
  {
    sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_1006443D0);

  }
  else
  {
    v31 = v12[*(int *)(v21 + 24)];
    sub_10007C720((uint64_t)v12, type metadata accessor for DOCHierarchyController.FetchingOperationToken);

    if ((v31 & 1) != 0)
      return;
  }
  v32 = Logger.StateStore.unsafeMutableAddressor(v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v32, v5);
  v33 = v53;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc(32, -1);
    v48 = swift_slowAlloc(96, -1);
    v55 = v48;
    *(_DWORD *)v36 = 136315650;
    v54 = (id *)sub_1000544FC(0xD000000000000021, 0x8000000100510C60, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    *(_WORD *)(v36 + 12) = 2080;
    v54 = (id *)a1;
    v49 = v3;
    v37 = String.init<A>(describing:)(&v54, &type metadata for DOCDisplayMode);
    v47 = v5;
    v39 = v38;
    v54 = (id *)sub_1000544FC(v37, v38, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease(v39);
    *(_WORD *)(v36 + 22) = 2080;
    v54 = v53;
    v40 = v33;
    v41 = sub_10006922C((uint64_t *)&unk_10064D870);
    v42 = String.init<A>(describing:)(&v54, v41);
    v44 = v43;
    v54 = (id *)sub_1000544FC(v42, v43, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);

    swift_bridgeObjectRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s to: %s for source: %s", (uint8_t *)v36, 0x20u);
    v45 = v48;
    swift_arrayDestroy(v48, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v52, v47);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v5);
  }
  DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(a1, v50, v53);
}

char *sub_100138F78(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.UI.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v12 = a2;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(32, -1);
    v32 = a1;
    v16 = v15;
    v30 = swift_slowAlloc(96, -1);
    v34 = v30;
    *(_DWORD *)v16 = 136315650;
    v33 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100510C20, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    *(_WORD *)(v16 + 12) = 2080;
    LOBYTE(v33) = v32;
    v17 = String.init<A>(describing:)(&v33, &type metadata for DOCItemGroupingBehavior);
    v31 = v3;
    v19 = v18;
    v33 = sub_1000544FC(v17, v18, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v16 + 22) = 2080;
    v33 = (uint64_t)a2;
    v20 = v12;
    v21 = sub_10006922C((uint64_t *)&unk_10064D870);
    v22 = String.init<A>(describing:)(&v33, v21);
    v24 = v23;
    v33 = sub_1000544FC(v22, v23, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);

    v3 = v31;
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s to: %s for identifier: %s", (uint8_t *)v16, 0x20u);
    v25 = v30;
    swift_arrayDestroy(v30, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    v26 = v16;
    a1 = v32;
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10004F2F0(0, (unint64_t *)&unk_1006443B0, DOCUserInterfaceStateStore_ptr);
  v27 = objc_msgSend(v3, "configuration");
  static DOCUserInterfaceStateStore.saveDefaultGroupingBehavior(_:for:configuration:)(a1, a2, v27);

  return sub_100030F5C(a1);
}

void sub_100139258(char a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  uint64_t v5;
  id v6;
  char v7;
  id v8;

  v3 = objc_msgSend((id)objc_opt_self(DOCFeature), "viewOptionsSizeSetting");
  v4 = objc_msgSend(v3, "isEnabled");

  if (v4)
  {
    v5 = a1 & 1;
    v6 = objc_msgSend(v1, "configuration");
    v7 = sub_1001FD214((uint64_t)v6);

    if ((_DWORD)v5 != (v7 & 1))
    {
      v8 = objc_msgSend(v1, "configuration");
      sub_1001FD7AC(v5, (uint64_t)v8);

      sub_10013A618();
    }
  }
}

void sub_100139334()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t KeyPath;
  void (*v7)(id *, uint64_t);
  id v8;
  id v9;
  void *v10;
  id v11;

  if (byte_100644160 == 1)
  {
    v1 = v0;
    v2 = objc_msgSend(objc_allocWithZone((Class)_s13FocusBackstopCMa()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_10006922C((uint64_t *)&unk_100644190);
    v3 = qword_100640D60;
    v4 = v2;
    if (v3 != -1)
      swift_once(&qword_100640D60, sub_100083BC4);
    v5 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0, qword_100644168);
    KeyPath = swift_getKeyPath(&unk_1004DB278);
    v11 = v2;
    v7 = *(void (**)(id *, uint64_t))((swift_isaMask & *v5) + 0x80);
    v8 = v4;
    v7(&v11, KeyPath);

    v9 = objc_msgSend(v1, "view");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "addSubview:", v8);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10013947C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unsigned int v12;
  _QWORD *v13;
  uint64_t KeyPath;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v1 = v0;
  if (!objc_msgSend(v0, "doc_hasAppeared"))
    return;
  v2 = objc_msgSend(v0, "internalNavigationController");
  v3 = type metadata accessor for DOCFullDocumentManagerNavigationController();
  v4 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0), "viewControllers");

  v5 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v7)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease_n(v6, 2);
    return;
  }
LABEL_19:
  if (v6 < 0)
    v18 = v6;
  else
    v18 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v7)
    goto LABEL_11;
LABEL_4:
  v8 = 4;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6);
    else
      v9 = *(id *)(v6 + 8 * v8);
    v10 = v9;
    v11 = v8 - 3;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    v12 = objc_msgSend(v9, "doc_isPlaceholder");

    if (!v12)
      break;
    ++v8;
    if (v11 == v7)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease_n(v6, 2);
  byte_100644160 = 0;
  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v13 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1, qword_100644168);
  KeyPath = swift_getKeyPath(&unk_1004DB278);
  (*(void (**)(id *__return_ptr))((swift_isaMask & *v13) + 0x78))(&v19);
  swift_release(KeyPath);

  v15 = v19;
  if (v19)
  {
    objc_msgSend(v19, "removeFromSuperview");

  }
  v16 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1, qword_100644168);
  v17 = swift_getKeyPath(&unk_1004DB278);
  v19 = 0;
  (*(void (**)(id *, uint64_t))((swift_isaMask & *v16) + 0x80))(&v19, v17);

}

uint64_t sub_10013970C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t KeyPath;
  uint64_t v4;

  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v1 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0);
  KeyPath = swift_getKeyPath(&unk_1004DB278);
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v1) + 0x78))(&v4);
  swift_release(KeyPath);

  return v4;
}

void sub_1001397BC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;

  v3 = *a1;
  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v4 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v3);
  KeyPath = swift_getKeyPath(&unk_1004DB278);
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v4) + 0x78))(&v6);
  swift_release(KeyPath);

  *a2 = v6;
}

void sub_100139880(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t KeyPath;
  void (*v8)(void **, uint64_t);
  id v9;
  void *v10;

  v2 = *a1;
  v3 = *a2;
  sub_10006922C((uint64_t *)&unk_100644190);
  v4 = qword_100640D60;
  v5 = v2;
  if (v4 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v6 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v3);
  KeyPath = swift_getKeyPath(&unk_1004DB278);
  v10 = v2;
  v8 = *(void (**)(void **, uint64_t))((swift_isaMask & *v6) + 0x80);
  v9 = v5;
  v8(&v10, KeyPath);

}

id sub_100139A18()
{
  return sub_1001405E0(0, _s13FocusBackstopCMa);
}

uint64_t sub_100139A28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t KeyPath;
  double v3;
  uint64_t v5;

  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v1 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0);
  KeyPath = swift_getKeyPath(&unk_1004DB388);
  v3 = __chkstk_darwin(KeyPath);
  (*(void (**)(uint64_t *__return_ptr, double))((swift_isaMask & *v1) + 0x90))(&v5, v3);

  swift_release(KeyPath);
  return v5;
}

void sub_100139B10(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t KeyPath;
  double v6;
  uint64_t v7;

  v3 = *a1;
  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v4 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v3);
  KeyPath = swift_getKeyPath(&unk_1004DB388);
  v6 = __chkstk_darwin(KeyPath);
  (*(void (**)(uint64_t *__return_ptr, double))((swift_isaMask & *v4) + 0x90))(&v7, v6);

  swift_release(KeyPath);
  *a2 = v7;
}

uint64_t sub_100139C08()
{
  void *v0;
  void *v1;
  id v2;
  unsigned int v3;
  _QWORD *v4;
  uint64_t KeyPath;
  double v6;
  uint64_t v8;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "supportHistoryNavigation");

  if (!v3)
    return 0;
  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v4 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1);
  KeyPath = swift_getKeyPath(&unk_1004DB240);
  v6 = __chkstk_darwin(KeyPath);
  (*(void (**)(uint64_t *__return_ptr, double))((swift_isaMask & *v4) + 0x90))(&v8, v6);

  swift_release(KeyPath);
  return v8;
}

uint64_t sub_100139D2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100139C08();
  *a1 = result;
  return result;
}

uint64_t sub_100139D54@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = (char *)objc_msgSend(a1, "dataSource");
  v5 = *(id *)&v4[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  v6 = objc_msgSend(a1, "hierarchyController");
  v7 = type metadata accessor for DOCBrowserHistoryController();
  swift_allocObject(v7, 89, 7);
  sub_10026C998(v5, v6);
  v9 = v8;

  *(_QWORD *)(v9 + 24) = &off_1005C97B0;
  result = swift_unknownObjectWeakAssign(v9 + 16, a1);
  *a2 = v9;
  return result;
}

uint64_t DOCFullDocumentManagerViewController.canPerformHistoryShift(direction:amount:)(char a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  unsigned int v7;
  char v8;
  _QWORD *v9;
  uint64_t KeyPath;
  double v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v3 = v2;
  v6 = objc_msgSend(v3, "traitCollection");
  v7 = objc_msgSend(v6, "supportHistoryNavigation");

  if (v7)
  {
    v8 = a1 & 1;
    sub_10006922C((uint64_t *)&unk_100644190);
    if (qword_100640D60 != -1)
      swift_once(&qword_100640D60, sub_100083BC4);
    v9 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v3);
    KeyPath = swift_getKeyPath(&unk_1004DB240);
    v11 = __chkstk_darwin(KeyPath);
    (*(void (**)(uint64_t *__return_ptr, double))((swift_isaMask & *v9) + 0x90))(&v15, v11);

    swift_release(KeyPath);
    v12 = v15;
    v13 = sub_10043D788(v8, a2);
    swift_release(v12);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

double DOCFullDocumentManagerViewController.performHistoryShift(direction:amount:)(char a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  unsigned int v7;
  double result;
  char v9;
  _QWORD *v10;
  uint64_t KeyPath;
  double v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = objc_msgSend(v3, "traitCollection");
  v7 = objc_msgSend(v6, "supportHistoryNavigation");

  if (v7)
  {
    v9 = a1 & 1;
    sub_10006922C((uint64_t *)&unk_100644190);
    if (qword_100640D60 != -1)
      swift_once(&qword_100640D60, sub_100083BC4);
    v10 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v3);
    KeyPath = swift_getKeyPath(&unk_1004DB240);
    v12 = __chkstk_darwin(KeyPath);
    (*(void (**)(uint64_t *__return_ptr, double))((swift_isaMask & *v10) + 0x90))(&v14, v12);

    swift_release(KeyPath);
    v13 = v14;
    sub_100267FB4(v9, a2);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

uint64_t sub_10013A0BC(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (v4 == (id)1)
  {
    v5 = 1;
  }
  else
  {
    v6 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for DOCBrowserHistoryItem(0) + 20)), "sourceIdentifier");
    v7 = DOCDocumentSourceIdentifierBrowseStartingPoints;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v13 = v12;
    if (v8 == v11 && v10 == v12)
      v5 = 0;
    else
      v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0) ^ 1;

    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v13);
  }
  return v5 & 1;
}

uint64_t sub_10013A1B4(uint64_t a1, char a2, void (*a3)(void), uint64_t a4)
{
  void *v4;
  void *v5;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[5];
  uint64_t v26;

  v5 = v4;
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v10 = *(void **)(a1 + *(int *)(type metadata accessor for DOCBrowserHistoryItem(0) + 20));
  v11 = (void *)objc_opt_self(DOCConcreteLocation);
  v12 = v10;
  v13 = objc_msgSend(v11, "browseStartingPointsLocation");
  v14 = static NSObject.== infix(_:_:)(v12, v13);

  if ((v14 & 1) != 0)
  {
    v15 = swift_allocObject(&unk_1005CA500, 32, 7);
    *(_QWORD *)(v15 + 16) = a3;
    *(_QWORD *)(v15 + 24) = a4;
    v16 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
    swift_retain_n(a4, 2);
    v17 = objc_msgSend(v5, "configuration");
    v18 = objc_msgSend(v17, "sceneIdentifier");

    v19 = objc_msgSend(v16, "globalTabbedBrowserControllerForIdentifier:", v18);
    if (v19
      && (v20 = objc_msgSend(v19, "splitBrowserViewController"),
          v19,
          v20))
    {
      v21 = swift_allocObject(&unk_1005CA528, 32, 7);
      *(_QWORD *)(v21 + 16) = sub_100066584;
      *(_QWORD *)(v21 + 24) = v15;
      v25[4] = sub_10010DF60;
      v26 = v21;
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 1107296256;
      v25[2] = sub_10004A82C;
      v25[3] = &unk_1005CA540;
      v22 = _Block_copy(v25);
      v23 = v26;
      swift_retain();
      objc_msgSend(v20, "showSidebarAnimated:withCompletion:", a2 & 1, v22, swift_release(v23).n128_f64[0]);
      _Block_release(v22);
      swift_release(a4);
      swift_release(v15);

    }
    else
    {
      a3();
      swift_release(a4);
      swift_release(v15);
    }
  }
  return v14 & 1;
}

void sub_10013A410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v9;

  sub_100136024(a1, a2, a3, a4);
  sub_10004F2F0(0, (unint64_t *)&unk_1006443B0, DOCUserInterfaceStateStore_ptr);
  v9 = objc_msgSend(v4, "configuration");
  static DOCUserInterfaceStateStore.saveDefaultSortMode(_:configuration:)(a1, a2, a3, a4, v9);

}

void sub_10013A4B4(char a1)
{
  sub_100139258(a1 & 1);
}

id DOCFullDocumentManagerViewController.effectiveTabSwitcherTab.getter()
{
  void *v0;
  char *v1;
  char *v2;
  char *v3;
  id v4;

  v1 = (char *)objc_msgSend(v0, "hierarchyController");
  sub_1001D3F78();
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "effectiveTabSwitcherTab");

    v1 = v3;
  }
  else
  {
    v4 = *(id *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab];
  }

  return v4;
}

id DOCHierarchyController.effectiveTabSwitcherTab.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  sub_1001D3F78();
  if (!v1)
    return *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  v2 = v1;
  v3 = objc_msgSend(v1, "effectiveTabSwitcherTab");

  return v3;
}

void sub_10013A618()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  char v14;

  v1 = v0;
  v2 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (char *)objc_msgSend(v0, "dataSource");
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  v7 = objc_msgSend(v0, "configuration");
  v8 = sub_1001FD214((uint64_t)v7);

  UIViewController.traitOverrides.getter();
  v13 = v6;
  v14 = v8 & 1;
  v9 = sub_1001463A0();
  dispatch thunk of UIMutableTraits.subscript.setter(&v13, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v9, v2, &protocol witness table for UITraitOverrides);
  UIViewController.traitOverrides.setter(v4);
  if (objc_msgSend(v1, "enclosedInUIPDocumentLanding"))
  {
    v10 = objc_msgSend(v1, "view");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v11, "setBackgroundColor:", v12);

    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_10013A7A0(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  return sub_100032598(a2, a3, a4);
}

id sub_10013A7CC()
{
  uint64_t v0;
  char *v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  __n128 v8;
  objc_super v10;

  v0 = swift_allocObject(&unk_1005C99E8, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCLazyActionManager());
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions] = 0;
  v2 = &v1[OBJC_IVAR____TtC5Files20DOCLazyActionManager_actionsClosure];
  *(_QWORD *)v2 = sub_100145900;
  *((_QWORD *)v2 + 1) = v0;
  v3 = (void *)objc_opt_self(FPItemManager);
  swift_retain_n(v0, 2);
  v4 = objc_msgSend(v3, "defaultManager");
  v5 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
  v6 = &v1[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = v4;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = v5;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCActionManager();
  v7 = objc_msgSendSuper2(&v10, "init");
  swift_release_n(v0, 2, v8);
  return v7;
}

void sub_10013A944()
{
  void *v0;
  uint64_t v1;
  id v2;
  unsigned int v3;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (**v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t i;
  char *v20;
  void *v21;
  void **v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char **v37;
  id v38;
  NSString v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  char v74[24];
  uint64_t v75;
  _QWORD v76[3];

  v1 = (uint64_t)v0;
  objc_msgSend(v0, "updateAvailableDisplayModesWithAnimated:", 1);
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "supportHistoryNavigation");

  v73 = (void *)v1;
  if (!v3)
    goto LABEL_4;
  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    goto LABEL_75;
  while (1)
  {
    v4 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1, qword_100644168);
    KeyPath = swift_getKeyPath(&unk_1004DB240);
    v6 = __chkstk_darwin(KeyPath);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t (*)()))((swift_isaMask & *v4) + 0x90))(v76, v6, sub_1001463E4);

    swift_release(KeyPath);
    v7 = v76[0];
    v8 = *(char **)(v76[0] + 40);
    v9 = swift_allocObject(&unk_1005C9A60, 24, 7);
    swift_weakInit(v9 + 16, v7);
    v10 = (uint64_t (**)(uint64_t))&v8[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter];
    v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter + 8];
    *v10 = sub_1001458CC;
    v10[1] = (uint64_t (*)(uint64_t))v9;
    swift_retain_n(v9, 2);
    swift_release(v11);
    sub_1000542B0(0x676E69796C707061, 0xEF7265746C696620);
    v12 = swift_allocObject(&unk_1005C9A88, 24, 7);
    *(_QWORD *)(v12 + 16) = v8;
    v13 = v8;
    sub_10001A27C(0, (uint64_t)sub_1001458D4, v12);
    swift_release(v7);
    v14 = v9;
    v1 = (uint64_t)v73;
    swift_release_n(v14, 2, v15);
    swift_release(v12);
LABEL_4:
    v16 = (char *)objc_msgSend((id)v1, "dataSource");
    v17 = (uint64_t *)&v16[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
    swift_beginAccess(&v16[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v76, 0, 0);
    v1 = *v17;
    swift_bridgeObjectRetain(*v17);

    v75 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v33 = v1;
      else
        v33 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v18 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (!v18)
      {
LABEL_23:
        swift_bridgeObjectRelease(v1);
        v32 = (uint64_t)_swiftEmptyArrayStorage;
        goto LABEL_24;
      }
    }
    else
    {
      v18 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v1);
      if (!v18)
        goto LABEL_23;
    }
    if (v18 >= 1)
      break;
    __break(1u);
LABEL_75:
    swift_once(&qword_100640D60, sub_100083BC4);
  }
  for (i = 0; i != v18; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
    else
      v20 = (char *)*(id *)(v1 + 8 * i + 32);
    v21 = v20;
    v22 = (void **)&v20[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v20[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v74, 0, 0);
    v23 = *v22;
    if (*v22
      && (v24 = type metadata accessor for DOCItemCollectionViewController(0),
          (v25 = swift_dynamicCastClass(v23, v24)) != 0))
    {
      v26 = v25;
      v27 = v23;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
      v30 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v29 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v30 >= v29 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
      v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v26);
      specialized Array._endMutation()(v31);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v1);
  v32 = v75;
LABEL_24:
  swift_bridgeObjectRelease(v1);
  if ((unint64_t)v32 >> 62)
    goto LABEL_69;
  v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v32);
  if (v34)
  {
LABEL_26:
    v35 = v32 & 0xC000000000000001;
    v36 = 4;
    v37 = &selRef_viewOptionsRoot;
    while (1)
    {
      if (v35)
        v40 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v36 - 4, v32);
      else
        v40 = (char *)*(id *)(v32 + 8 * v36);
      v41 = v40;
      v42 = v36 - 3;
      if (__OFADD__(v36 - 4, 1))
      {
        __break(1u);
LABEL_69:
        if (v32 < 0)
          v72 = v32;
        else
          v72 = v32 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v32);
        v34 = _CocoaArrayWrapper.endIndex.getter(v72);
        if (!v34)
          goto LABEL_62;
        goto LABEL_26;
      }
      if (objc_msgSend(v40, v37[206], "_doc_performLiveResizeSkipped_updateOverlay")
        || (sub_100006DF8(), (v43 & 1) != 0))
      {

        if (v42 == v34)
          goto LABEL_62;
        goto LABEL_28;
      }
      v44 = objc_msgSend(v41, "splitViewController");
      if (v44)
      {
        v45 = v44;
        v46 = objc_opt_self(DOCSplitBrowserViewController);
        v47 = (void *)swift_dynamicCastObjCClass(v45, v46);
        if (v47)
        {
          v48 = objc_msgSend(v47, "fullDocumentManagerViewController");

          if (v48)
            goto LABEL_44;
        }
        else
        {

        }
      }
      v49 = sub_10004F2F0(0, &qword_100648590, &off_1005BCED8);
      v50 = UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)(v49, 0, v49);
      if (v50)
      {
        v48 = (id)v50;
LABEL_44:
        v51 = v48;
        v52 = objc_msgSend(v51, "traitCollection");

        if (v52)
          goto LABEL_51;
        goto LABEL_50;
      }
      v53 = objc_msgSend(v41, "viewIfLoaded");
      if (!v53)
        goto LABEL_49;
      v54 = v53;
      v51 = objc_msgSend(v53, "window");

      if (v51)
        break;
LABEL_50:
      v52 = objc_msgSend(v41, "traitCollection");
LABEL_51:

      if (sub_10007B5C0(1))
      {
        v55 = sub_100031D00();
        v75 = (uint64_t)v55;
        v56 = sub_100057F7C();
        v57 = sub_100010844();
        v58 = *(void **)&v41[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
        if (v58)
        {
          v59 = v58;
          objc_msgSend(v59, "setHidesBackButton:", objc_msgSend(v41, "hidesNavigationBackButton"));

        }
        if (objc_msgSend(v41, "isEditing"))
        {
          sub_1002C9A98();
        }
        else
        {
          v60 = swift_bridgeObjectRetain(*(_QWORD *)&v41[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems]);
          sub_100047DC0(v60, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100047F7C);
          v55 = (_QWORD *)v75;
        }
        sub_1001F7950((unint64_t)v55, v56, v57, 1);
        swift_bridgeObjectRelease(v55);
        swift_bridgeObjectRelease(v56);
        swift_bridgeObjectRelease(v57);
        sub_100033EB8();
        sub_1002CA988();
        v61 = objc_msgSend(v41, "splitViewController");
        v35 = v32 & 0xC000000000000001;
        if (v61)
        {
          v62 = v61;
          v63 = objc_opt_self(DOCSplitBrowserViewController);
          v64 = (void *)swift_dynamicCastObjCClass(v62, v63);
          if (v64)
          {
            v65 = objc_msgSend(v64, "sidebarViewController");
            sub_1000511A0();

            v62 = v65;
          }

        }
        sub_1002CB044();

        v37 = &selRef_viewOptionsRoot;
        if (v42 == v34)
          goto LABEL_62;
      }
      else
      {
        v38 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v39 = String._bridgeToObjectiveC()();
        objc_msgSend(v38, "BOOLForKey:", v39);

        v37 = &selRef_viewOptionsRoot;
        if (v42 == v34)
          goto LABEL_62;
      }
LABEL_28:
      ++v36;
    }
    v48 = objc_msgSend(v51, "rootViewController");

    if (v48)
      goto LABEL_44;
LABEL_49:
    v51 = 0;
    goto LABEL_50;
  }
LABEL_62:
  swift_bridgeObjectRelease_n(v32, 2);
  v66 = objc_msgSend(v73, "traitCollection");
  v67 = objc_msgSend(v66, "horizontalSizeClass");

  if (v67 != (id)2)
  {
    v68 = objc_msgSend(v73, "presentedViewController");
    if (v68)
    {
      v69 = v68;
      v70 = type metadata accessor for DOCGoToViewController(0);
      v71 = (void *)swift_dynamicCastClass(v69, v70);
      if (v71)
        objc_msgSend(v71, "dismissViewControllerAnimated:completion:", 0, 0);

    }
  }
}

void *sub_10013B1B0(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  _QWORD v21[5];
  _QWORD *v22;

  v2 = v1;
  v4 = objc_msgSend(a1, "fileProviderItem");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = swift_allocObject(&unk_1005CA488, 24, 7);
  *(_QWORD *)(v6 + 16) = 0;
  v7 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v8 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v9 + 32) = v5;
  v21[0] = v9;
  specialized Array._endMutation()(v9);
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v10 = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21[0]);
  v12 = (_QWORD *)swift_allocObject(&unk_1005CA4B0, 48, 7);
  v12[2] = v10;
  v12[3] = v6;
  v12[4] = v2;
  v12[5] = a1;
  v21[4] = sub_100146320;
  v22 = v12;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_10004A82C;
  v21[3] = &unk_1005CA4C8;
  v13 = _Block_copy(v21);
  v14 = v22;
  v15 = v10;
  swift_retain();
  v16 = v2;
  v17 = a1;
  objc_msgSend(v7, "adoptPersonaFromItems:andPerformBlock:", isa, v13, swift_release(v14).n128_f64[0]);

  _Block_release(v13);
  swift_beginAccess(v6 + 16, v21, 0, 0);
  v18 = *(void **)(v6 + 16);
  v19 = v18;
  swift_release(v6);
  return v18;
}

void sub_10013B3AC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  id v9;
  id v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  Class v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20[3];

  v8 = a2 + 16;
  v9 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v10 = objc_msgSend(v9, "dataOwnerStateForNode:", a1);

  v11 = v10 == (id)1;
  v12 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v13 + 32) = a4;
  v20[0] = v13;
  specialized Array._endMutation()(v13);
  sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
  v14 = a4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20[0]);
  v16 = Array._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(a3, "actionManager");
  v18 = objc_msgSend(a3, "_activityViewControllerWithItemBookmarks:isForTitleMenuFolderSharing:popoverTracker:isContentManaged:additionalActivities:activityRunner:", isa, 1, 0, v11, v16, v17);

  swift_beginAccess(v8, v20, 1, 0);
  v19 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v18;

}

_QWORD *sub_10013B540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD aBlock[5];
  uint64_t v15;
  _BYTE v16[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v4 = (void *)Strong;
  v5 = sub_10012AD44(DOCSplitBrowserViewController.didCommitPreview(of:), 0);
  v6 = swift_allocObject(&unk_1005C99E8, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = swift_allocObject(&unk_1005C9B28, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = swift_allocObject(&unk_1005C9B50, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  aBlock[4] = sub_100145934;
  v15 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100120C10;
  aBlock[3] = &unk_1005C9B68;
  v9 = _Block_copy(aBlock);
  swift_release(v15);
  objc_msgSend(v5, "setUnresolvedHandler:", v9);
  _Block_release(v9);
  v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v11 + 32) = v5;
  aBlock[0] = v11;
  specialized Array._endMutation()(v11);
  v12 = aBlock[0];

  return (_QWORD *)v12;
}

void sub_10013B6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char **v16;
  uint64_t v17;
  unint64_t All;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  char *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  char **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  char **v56;
  id v57;
  uint64_t v58;
  id v59;
  char **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  char **v67;
  void *v68;
  uint64_t v69;
  char *v70;
  void *v71;
  objc_super v72;
  _QWORD aBlock[5];
  uint64_t v74;
  char v75[24];
  _QWORD v76[4];

  sub_100069BD8(a2, (uint64_t)aBlock);
  v7 = type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast(v76, aBlock, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    return;
  v8 = a3 + 16;
  v9 = (char *)v76[0];
  swift_beginAccess(v8, v76, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8, v10);
  if (!Strong)
  {

    return;
  }
  v12 = (void *)Strong;
  v13 = a4 + 16;
  swift_beginAccess(v13, v75, 0, 0);
  v15 = swift_unknownObjectWeakLoadStrong(v13, v14);
  if (!v15)
  {

    return;
  }
  v16 = (char **)v15;
  v17 = sub_10006922C((uint64_t *)&unk_1006424B0);
  All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v17);
  if (!All)
  {

    return;
  }
  v19 = All;
  v20 = All >> 62;
  if (All >> 62)
    goto LABEL_62;
  v21 = *(_QWORD *)((All & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(All);
  if (!v21)
  {
LABEL_66:

    swift_bridgeObjectRelease_n(v19, 2);
    return;
  }
  while (1)
  {
    if ((v19 & 0xC000000000000001) != 0)
    {
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
    }
    else
    {
      if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_70;
      }
      v22 = *(id *)(v19 + 32);
    }
    v66 = v22;
    swift_bridgeObjectRelease(v19);
    v65 = (unint64_t)a1 >> 62;
    v70 = v9;
    if (!((unint64_t)a1 >> 62))
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      goto LABEL_12;
    }
LABEL_70:
    v62 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v23 = _CocoaArrayWrapper.endIndex.getter(v62);
LABEL_12:
    v63 = v17;
    v64 = v20;
    v67 = v16;
    v68 = v12;
    v69 = v19;
    v20 = 0;
    if (!v23)
      goto LABEL_26;
    v12 = (void *)(a1 & 0xC000000000000001);
    v17 = 4;
    v19 = (uint64_t)&off_10061F000;
    v16 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    v24 = 0;
    if ((a1 & 0xC000000000000001) == 0)
      goto LABEL_17;
LABEL_14:
    v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, a1);
    v9 = (char *)(v24 + 1);
    if (!__OFADD__(v24, 1))
      break;
LABEL_61:
    __break(1u);
LABEL_62:
    if (v19 < 0)
      v61 = v19;
    else
      v61 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    if (!_CocoaArrayWrapper.endIndex.getter(v61))
      goto LABEL_66;
  }
  while ((v20 & 1) != 0)
  {
    swift_unknownObjectRelease(v25);
    v20 = 1;
    if (v9 == (char *)v23)
      goto LABEL_26;
LABEL_22:
    v24 = ++v17 - 4;
    if (v12)
      goto LABEL_14;
LABEL_17:
    v25 = *(_QWORD *)(a1 + 8 * v17);
    swift_unknownObjectRetain(v25);
    v9 = (char *)(v24 + 1);
    if (__OFADD__(v24, 1))
      goto LABEL_61;
  }
  v26 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission", v63);
  v27 = objc_msgSend(v26, "dataOwnerStateForNode:", v25);
  swift_unknownObjectRelease(v25);

  v20 = v27 == (id)1;
  if (v9 != (char *)v23)
    goto LABEL_22;
LABEL_26:
  swift_bridgeObjectRelease(a1);
  v28 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo];
  if (!*(_QWORD *)(v28 + 16))
  {
    v33 = 0;
    v34 = v69;
    v30 = v66;
    if (!v65)
      goto LABEL_39;
    goto LABEL_33;
  }
  v29 = sub_10007EE90(0xD000000000000039, 0x8000000100510EB0, (void (*)(_QWORD *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_10007F030);
  v30 = v66;
  if ((v31 & 1) != 0)
  {
    sub_100069BD8(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)aBlock);
    v32 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    if (swift_dynamicCast(&v71, aBlock, (char *)&type metadata for Any + 8, v32, 6))
      v33 = v71;
    else
      v33 = 0;
  }
  else
  {
    v33 = 0;
  }
  v34 = v69;
  if (v65)
  {
LABEL_33:
    if (a1 < 0)
      v35 = a1;
    else
      v35 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(a1);
    goto LABEL_40;
  }
LABEL_39:
  v36 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_40:
  if (v36 < 2 || v33)
  {
    v43 = *(void **)&v70[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy];
    if (v43)
    {
      if (v33)
        v44 = v33;
      else
        v44 = v30;
      v52 = swift_allocObject(&unk_1005C9BA0, 41, 7);
      *(_QWORD *)(v52 + 16) = v34;
      *(_QWORD *)(v52 + 24) = v30;
      *(_QWORD *)(v52 + 32) = v67;
      *(_BYTE *)(v52 + 40) = v20;
      aBlock[4] = sub_100145970;
      v74 = v52;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100018CC0;
      aBlock[3] = &unk_1005C9BB8;
      v53 = _Block_copy(aBlock);
      v54 = v74;
      v55 = v30;
      v56 = v67;
      swift_unknownObjectRetain(v43);
      v57 = v33;
      swift_release(v54);
      objc_msgSend(v43, "getPopoverTrackerForItem:completionBlock:", v44, v53);

      _Block_release(v53);
      swift_unknownObjectRelease(v43);

    }
    else
    {
      if (v64)
      {
        if (v34 < 0)
          v58 = v34;
        else
          v58 = v34 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v34);
        v51 = _bridgeCocoaArray<A>(_:)(v58, v63);
        swift_bridgeObjectRelease(v34);
      }
      else
      {
        v50 = swift_bridgeObjectRetain(v34);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v50);
        v51 = v34;
      }
      swift_bridgeObjectRetain(v34);
      v59 = v30;
      v60 = v67;
      sub_10035DBE0(v51, v59, v34, v60, 0, v20);

      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease_n(v34, 2);

    }
  }
  else
  {
    v37 = (objc_class *)type metadata accessor for DOCServiceActionPopoverTrackerController();
    v38 = (char *)objc_allocWithZone(v37);
    v39 = swift_unknownObjectWeakInit(&v38[OBJC_IVAR____TtC5Files40DOCServiceActionPopoverTrackerController_fullViewController]);
    swift_unknownObjectWeakAssign(v39, v67);
    *(_QWORD *)&v38[OBJC_IVAR____TtC5Files40DOCServiceActionPopoverTrackerController_action] = v68;
    v72.receiver = v38;
    v72.super_class = v37;
    v40 = v68;
    v41 = objc_msgSendSuper2(&v72, "init");
    if (v64)
    {
      if (v34 < 0)
        v45 = v34;
      else
        v45 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v34);
      v46 = v41;
      v42 = _bridgeCocoaArray<A>(_:)(v45, v63);
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      swift_bridgeObjectRetain(v34);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v41);
      v42 = v34;
    }
    swift_bridgeObjectRetain(v34);
    v47 = v41;
    v48 = v30;
    v49 = v67;
    sub_10035DBE0(v42, v48, v34, v49, (uint64_t)v41, v20);

    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease_n(v34, 2);

  }
}

uint64_t sub_10013BD90(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Class isa;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint64_t v44;
  id v45;
  id v46;
  char v47;
  _OWORD v48[2];
  _QWORD aBlock[3];
  void *v50;
  void (*v51)();
  uint64_t v52;

  v12 = swift_allocObject(&unk_1005C9BF0, 24, 7);
  *(_QWORD *)(v12 + 16) = _swiftEmptyArrayStorage;
  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
  v14 = v13;
  v15 = objc_allocWithZone((Class)NSUserDefaults);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithSuiteName:", v16, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (v17)
  {
    v18 = objc_msgSend(v17, "valueForKey:", DOCUserDefaultsKeyCopyLinkUIEnabled);
    if (v18)
    {
      v19 = v18;
      _bridgeAnyObjectToAny(_:)(v48, v18);
      swift_unknownObjectRelease(v19);
    }
    else
    {
      memset(v48, 0, sizeof(v48));
    }
    sub_10007EBDC((uint64_t)v48, (uint64_t)aBlock);
    if (v50)
    {
      if ((swift_dynamicCast(&v47, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0
        && v47 == 1)
      {
        v45 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v21 = swift_allocObject(v20, 40, 7);
        *(_OWORD *)(v21 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v21 + 32) = a2;
        aBlock[0] = v21;
        specialized Array._endMutation()(v21);
        v22 = aBlock[0];
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v23 = a2;
        isa = Array._bridgeToObjectiveC()().super.isa;
        v25 = objc_msgSend(v45, "eligibleActionsForItems:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

        type metadata accessor for FPAction(0);
        v27 = v26;
        v28 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
        v29 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v25, v27, v28);

        v30 = FPActionFetchPublishingURL;
        v31 = sub_100028BE0((uint64_t)v30, v29);

        swift_bridgeObjectRelease(v29);
        if ((v31 & 1) != 0)
        {
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierCopySharedLink);
          v44 = v33;
          v46 = (id)v32;
          v34 = *(_QWORD **)(v12 + 16);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
          *(_QWORD *)(v12 + 16) = v34;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v34 = sub_100081A50(0, v34[2] + 1, 1, v34);
            *(_QWORD *)(v12 + 16) = v34;
          }
          v37 = v34[2];
          v36 = v34[3];
          if (v37 >= v36 >> 1)
          {
            v34 = sub_100081A50((_QWORD *)(v36 > 1), v37 + 1, 1, v34);
            *(_QWORD *)(v12 + 16) = v34;
          }
          v34[2] = v37 + 1;
          v38 = &v34[2 * v37];
          v38[4] = v46;
          v38[5] = v44;
        }
      }

    }
    else
    {

      sub_10000CB4C((uint64_t)aBlock, &qword_100642730);
    }
  }
  v39 = swift_allocObject(&unk_1005C9C18, 64, 7);
  *(_QWORD *)(v39 + 16) = a3;
  *(_QWORD *)(v39 + 24) = a4;
  *(_QWORD *)(v39 + 32) = a1;
  *(_QWORD *)(v39 + 40) = a5;
  *(_BYTE *)(v39 + 48) = a6 & 1;
  *(_QWORD *)(v39 + 56) = v12;
  v51 = sub_1001459C4;
  v52 = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  v50 = &unk_1005C9C30;
  v40 = _Block_copy(aBlock);
  v41 = v52;
  swift_unknownObjectRetain(a5);
  swift_retain();
  swift_bridgeObjectRetain(a3);
  v42 = a4;
  swift_bridgeObjectRetain(a1);
  swift_release(v41);
  DOCRunInMainThread(v40);
  _Block_release(v40);
  return swift_release(v12);
}

void sub_10013C190(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  id v11;
  Class isa;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v11 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v13 = swift_allocObject(&unk_1005C9C68, 56, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  *(_QWORD *)(v13 + 32) = a4;
  *(_BYTE *)(v13 + 40) = a5;
  *(_QWORD *)(v13 + 48) = a6;
  v17[4] = sub_100145A14;
  v18 = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10004A82C;
  v17[3] = &unk_1005C9C80;
  v14 = _Block_copy(v17);
  v15 = v18;
  swift_unknownObjectRetain(a4);
  swift_retain();
  v16 = a2;
  swift_bridgeObjectRetain(a3);
  swift_release(v15);
  objc_msgSend(v11, "adoptPersonaFromItems:andPerformBlock:", isa, v14);
  _Block_release(v14);

}

void sub_10013C2E4(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  void *v16;
  NSArray v17;
  NSArray v18;
  uint64_t v19;
  _BYTE v20[24];

  v8 = (_QWORD *)(a5 + 16);
  v9 = objc_msgSend(a1, "delegate");
  if (!v9)
    goto LABEL_5;
  v10 = v9;
  v11 = type metadata accessor for DOCServiceDocumentBrowserViewController();
  v12 = swift_dynamicCastClass(v10, v11);
  if (!v12)
  {
    swift_unknownObjectRelease(v10);
LABEL_5:
    sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_beginAccess(v8, v20, 0, 0);
    v19 = *v8;
    swift_bridgeObjectRetain(*v8);
    v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v18.super.isa = (Class)objc_msgSend(a1, "actionManager", swift_bridgeObjectRelease(v19).n128_f64[0]);
    objc_msgSend(a1, "_displayActivityControllerWithItemBookmarks:popoverTracker:isContentManaged:additionalActivities:activityProxy:", isa, a3, a4 & 1, v17.super.isa, v18.super.isa);
    goto LABEL_6;
  }
  v13 = v12;
  swift_beginAccess(v8, v20, 0, 0);
  v14 = *v8;
  swift_bridgeObjectRetain(v14);
  isa = (Class)objc_msgSend(a1, "actionManager");
  v16 = *(void **)(v13 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
  sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
  v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
  v18.super.isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "_presentActivityViewControllerForItemBookmarks:withPopoverTracker:isContentManaged:additionalActivities:activityProxy:", v17.super.isa, a3, a4 & 1, v18.super.isa, isa);
  swift_unknownObjectRelease(v10);
  swift_bridgeObjectRelease(v14);
LABEL_6:

}

uint64_t sub_10013C4DC(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v15 = a2;
    else
      v15 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v16 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v11 = _bridgeCocoaArray<A>(_:)(v15, v16);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
    v11 = a2;
  }
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v12 = a3;
  v13 = a4;
  sub_10035DBE0(v11, v12, a2, v13, a1, a5 & 1);
  swift_bridgeObjectRelease(v11);

  swift_bridgeObjectRelease(a2);
  return swift_unknownObjectRelease(a1);
}

void DOCFullDocumentManagerViewController.preferredFocusEnvironments.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t KeyPath;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34[3];

  v1 = v0;
  v2 = objc_msgSend(v0, "internalNavigationController");
  v3 = objc_msgSend(v2, "topViewController");

  if (v3)
  {
    v4 = type metadata accessor for DOCColumnViewController(0);
    v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
    {
      v6 = v5;
      v7 = (char *)objc_msgSend(v1, "dataSource");
      v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

      if (v8 == 2)
      {
        v9 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v10 = swift_allocObject(v9, 40, 7);
        *(_OWORD *)(v10 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v10 + 32) = v6;
        v34[0] = v10;
        specialized Array._endMutation()(v10);
        v11 = v34[0];
        goto LABEL_8;
      }
    }

  }
  v12 = (char *)objc_msgSend(v1, "dataSource");
  v13 = (unint64_t *)&v12[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v12[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v34, 0, 0);
  v14 = *v13;
  swift_bridgeObjectRetain(v14);

  v15 = sub_10013C9A0(v14);
  v11 = v15;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v30 = v15;
    else
      v30 = v15 & 0xFFFFFFFFFFFFFF8;
    v31 = sub_10006922C((uint64_t *)&unk_100648EE0);
    v32 = _bridgeCocoaArray<A>(_:)(v30, v31);
    swift_bridgeObjectRelease(v11);
    v11 = v32;
  }
  else
  {
    v16 = swift_bridgeObjectRetain(v15);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v16);
    swift_bridgeObjectRelease(v11);
  }
LABEL_8:
  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v17 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1);
  KeyPath = swift_getKeyPath(&unk_1004DB278);
  (*(void (**)(unint64_t *__return_ptr))((swift_isaMask & *v17) + 0x78))(&v33);
  swift_release(KeyPath);

  v19 = v33;
  if (!v19)
  {
    v25 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_13;
    goto LABEL_16;
  }
  v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1004D9B40;
  v22 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1);
  v23 = swift_getKeyPath(&unk_1004DB278);
  (*(void (**)(unint64_t *__return_ptr))((swift_isaMask & *v22) + 0x78))(&v33);
  swift_release(v23);

  if (v33)
  {
    *(_QWORD *)(v21 + 32) = v33;
    v33 = v21;
    specialized Array._endMutation()(v24);
    v25 = v33;
    if (!(v33 >> 62))
    {
LABEL_13:
      v26 = swift_bridgeObjectRetain(v25);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
      v27 = v25;
LABEL_14:
      swift_bridgeObjectRelease(v25);
      v33 = v11;
      sub_1001300FC(v27, (uint64_t *)&unk_100648EE0, (unint64_t *)&unk_1006445F0, &qword_1006445E8, (uint64_t *)sub_1000E102C);
      return;
    }
LABEL_16:
    if (v25 < 0)
      v28 = v25;
    else
      v28 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v29 = sub_10006922C((uint64_t *)&unk_100648EE0);
    v27 = _bridgeCocoaArray<A>(_:)(v28, v29);
    swift_bridgeObjectRelease(v25);
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_10013C9A0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v21 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = (uint64_t)v11;
          v13 = *(id *)(v21 + 32 + 8 * v1);
        }
        v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v9 = sub_1000818A0(v21);
          v21 = v9;
        }
        v15 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v17 = sub_1000818A0(v21);
          v21 = v17;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v6 = (v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_10028F010(v1);
    v21 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

void sub_10013CBB8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for DOCBrowserHistoryItem(0);
  v14 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v15 = (uint64_t)&v14 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7 < 2)
    return;
  v8 = 0;
  v9 = v7 >> 1;
  for (i = v7 - 1; ; --i)
  {
    if (v8 == i)
      goto LABEL_4;
    v11 = *(_QWORD *)(a1 + 16);
    if (v8 >= v11)
      break;
    v12 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v13 = *(_QWORD *)(v14 + 72);
    sub_100144EAC(a1 + v12 + v13 * v8, v15);
    if (i >= v11)
      goto LABEL_14;
    sub_100144EAC(a1 + v12 + v13 * i, (uint64_t)v4);
    if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) == 0)
      a1 = sub_100452E1C(a1);
    if (v8 >= *(_QWORD *)(a1 + 16))
      goto LABEL_15;
    sub_100144EF0((uint64_t)v4, a1 + v12 + v13 * v8);
    if (i >= *(_QWORD *)(a1 + 16))
      goto LABEL_16;
    sub_100144EF0(v15, a1 + v12 + v13 * i);
LABEL_4:
    if (v9 == ++v8)
      return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

void sub_10013CD38(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;

  sub_100143F84(a1);
  v3 = v2;
  v4 = v2[2];
  swift_bridgeObjectRelease(a1);
  if (v4 < 2)
    return;
  v5 = 0;
  v6 = v4 >> 1;
  v7 = v4 - 1;
  v8 = 2 * v4;
  v9 = 5;
  v18 = v4 >> 1;
  while (1)
  {
    if (v5 == v7)
      goto LABEL_4;
    v10 = v3[2];
    if (v5 >= v10)
      break;
    if (v7 >= v10)
      goto LABEL_13;
    v11 = v3[v9 - 1];
    v13 = v3[v8 + 2];
    v12 = (void *)v3[v8 + 3];
    v14 = (id)v3[v9];
    v15 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      v3 = sub_100452E30(v3);
    v16 = &v3[v9];

    *(v16 - 1) = v13;
    *v16 = v15;
    if (v7 >= v3[2])
      goto LABEL_14;
    v17 = &v3[v8];

    v17[2] = v11;
    v17[3] = v14;
    v6 = v18;
LABEL_4:
    ++v5;
    v9 += 2;
    --v7;
    v8 -= 2;
    if (v6 == v5)
      return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

id DOCFullDocumentManagerViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  objc_super v15;
  _QWORD v16[3];
  uint64_t v17;

  v5 = DOCFullDocumentManagerViewController.canPerformKeyCommandAction(_:with:)(a1, a2);
  if (v5 != 2)
    return (id)(v5 & 1);
  sub_1000271D4(a2, (uint64_t)v16, &qword_100642730);
  v6 = v17;
  if (v17)
  {
    v7 = sub_10007E7A0(v16, v17);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_100068588(v16);
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v2;
  v15.super_class = (Class)DOCFullDocumentManagerViewController;
  v13 = objc_msgSendSuper2(&v15, "canPerformAction:withSender:", a1, v12);
  swift_unknownObjectRelease(v12);
  return v13;
}

void DOCFullDocumentManagerViewController.target(forAction:withSender:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  objc_super v19;
  __int128 v20;
  __int128 v21;

  if ((static Selector.== infix(_:_:)("paste:", a1) & 1) != 0)
  {
    v7 = sub_100137C00(0, a1, a2);
    if (v7)
    {
      v8 = v7;
      v9 = type metadata accessor for DOCItemCollectionViewController(0);
      v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
      {
        a3[3] = v9;
        *a3 = v10;
        return;
      }

    }
    a3[3] = (uint64_t)&type metadata for Bool;
    *(_BYTE *)a3 = 0;
  }
  else
  {
    sub_1000271D4(a2, (uint64_t)&v20, &qword_100642730);
    v11 = *((_QWORD *)&v21 + 1);
    if (*((_QWORD *)&v21 + 1))
    {
      v12 = sub_10007E7A0(&v20, *((uint64_t *)&v21 + 1));
      v13 = *(_QWORD *)(v11 - 8);
      v14 = __chkstk_darwin(v12);
      v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v13 + 16))(v16, v14);
      v17 = _bridgeAnythingToObjectiveC<A>(_:)(v16, v11);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
      sub_100068588(&v20);
    }
    else
    {
      v17 = 0;
    }
    v19.receiver = v3;
    v19.super_class = (Class)DOCFullDocumentManagerViewController;
    v18 = objc_msgSendSuper2(&v19, "targetForAction:withSender:", a1, v17);
    swift_unknownObjectRelease(v17);
    if (v18)
    {
      _bridgeAnyObjectToAny(_:)(&v20, v18);
      swift_unknownObjectRelease(v18);
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    sub_10007EBDC((uint64_t)&v20, (uint64_t)a3);
  }
}

void sub_10013D2F8()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;
  id v9;
  NSString v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;

  v1 = v0;
  v2 = objc_msgSend(v0, "internalNavigationController");
  v3 = type metadata accessor for DOCFullDocumentManagerNavigationController();
  v4 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0), "parentViewController");

  if (!v4
    || (sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr),
        v5 = v1,
        v6 = v4,
        v7 = static NSObject.== infix(_:_:)(v6, v5),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
    v8 = objc_msgSend(v1, "internalNavigationController");
    v9 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v8, v3, 0, 0, 0), "navigationBar");

    v10 = objc_msgSend((id)objc_opt_self(DOCAXIdentifier), "fullNavBar");
    if (!v10)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v13 = v12;
      v10 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(v13).n128_u64[0];
    }
    objc_msgSend(v9, "setAccessibilityIdentifier:", v10, v11);

    v14 = objc_msgSend(v1, "internalNavigationController");
    v15 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v14, v3, 0, 0, 0), "view");

    if (v15)
    {
      objc_msgSend(v15, "setAutoresizingMask:", 18);

      v16 = objc_msgSend(v1, "internalNavigationController");
      v17 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v16, v3, 0, 0, 0), "view");

      if (v17)
      {
        v18 = objc_msgSend(v1, "view");
        if (v18)
        {
          v19 = v18;
          objc_msgSend(v18, "bounds");
          v21 = v20;
          v23 = v22;
          v25 = v24;
          v27 = v26;

          objc_msgSend(v17, "setFrame:", v21, v23, v25, v27);
          v28 = objc_msgSend(v1, "internalNavigationController");
          objc_msgSend(v1, "addChildViewController:", swift_dynamicCastClassUnconditional(v28, v3, 0, 0, 0));

          v29 = objc_msgSend(v1, "view");
          if (v29)
          {
            v30 = v29;
            v31 = objc_msgSend(v1, "internalNavigationController");
            v32 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v31, v3, 0, 0, 0), "view");

            if (v32)
            {
              objc_msgSend(v30, "addSubview:", v32);

              v33 = objc_msgSend(v1, "internalNavigationController");
              objc_msgSend((id)swift_dynamicCastClassUnconditional(v33, v3, 0, 0, 0), "didMoveToParentViewController:", v1);

              return;
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          return;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

void sub_10013D710(void *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[4];

  Notification.object.getter(v13, a1);
  if (!v13[3])
  {
    sub_10000CB4C((uint64_t)v13, &qword_100642730);
    return;
  }
  v2 = type metadata accessor for DOCMoveOperation();
  if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
  {
    v3 = v12;
    v4 = (char *)objc_msgSend(a1, "hierarchyController");
    v5 = (uint64_t *)&v4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&v4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v13, 0, 0);
    v6 = *v5;
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v11 = v6;
      else
        v11 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (v7)
      {
LABEL_5:
        v8 = v7 - 1;
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
        }
        else if ((v6 & 0xC000000000000001) == 0)
        {
          if ((v8 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v8 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v9 = *(id *)(v6 + 8 * v8 + 32);
LABEL_10:
            v10 = v9;

            if ((objc_msgSend(a1, "doc_hasAppeared", swift_bridgeObjectRelease(v6).n128_f64[0]) & 1) != 0)
              sub_10040F100(v3, v10, a1);

            return;
          }
          __break(1u);
          return;
        }
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
        goto LABEL_10;
      }
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v6);
      if (v7)
        goto LABEL_5;
    }

    swift_bridgeObjectRelease(v6);
  }
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  void *v2;
  Class isa;
  objc_super v4;

  isa = to.value.super.super.super.isa;
  v4.super_class = (Class)DOCFullDocumentManagerViewController;
  objc_msgSendSuper2(&v4, "viewDidMoveToWindow:shouldAppearOrDisappear:", to.value.super.super.super.isa, to.is_nil);
  if (isa)
    objc_msgSend(v2, "updateAvailableDisplayModesWithAnimated:", 1);
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  void *v10;
  unsigned int v11;
  objc_super v12;

  v12.super_class = (Class)DOCFullDocumentManagerViewController;
  objc_msgSendSuper2(&v12, "viewWillDisappear:", a1);
  sub_100084458();
  v2 = objc_msgSend(v1, "internalNavigationController");
  v3 = objc_msgSend(v2, "topViewController");

  if (v3)
  {
    v4 = objc_msgSend(v3, "navigationItem");

    v5 = objc_msgSend(v4, "searchController");
    if (v5)
    {
      v6 = type metadata accessor for DOCSearchController();
      v7 = (char *)swift_dynamicCastClass(v5, v6);
      if (v7)
      {
        v8 = v7;
        if (objc_msgSend(v7, "isActive"))
        {
          v9 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController], "viewIfLoaded");
          if (v9)
          {
            v10 = v9;
            v11 = objc_msgSend(v9, "isHidden");

            if (v11)
              objc_msgSend(v8, "setActive:", 0);
          }
        }
      }

    }
  }
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  objc_super v1;

  v1.super_class = (Class)DOCFullDocumentManagerViewController;
  objc_msgSendSuper2(&v1, "viewDidDisappear:", a1);
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_super v2;

  v2.super_class = (Class)DOCFullDocumentManagerViewController;
  objc_msgSendSuper2(&v2, "viewWillAppear:", a1);
  sub_10013A618();
  objc_msgSend(v1, "updateAvailableDisplayModesWithAnimated:", 0);
  sub_100084458();
  sub_100084E78();
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_super v2;

  v2.super_class = (Class)DOCFullDocumentManagerViewController;
  objc_msgSendSuper2(&v2, "viewDidAppear:", a1);
  objc_msgSend(v1, "updateCustomActions");
}

id DOCFullDocumentManagerViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  void *v3;
  void *v4;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  void *v12;
  char *v13;
  void *v14;
  void **v15;
  void *v16;
  uint64_t v17;
  id v18;
  double v19;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  objc_super v24;

  v4 = v3;
  v24.super_class = (Class)DOCFullDocumentManagerViewController;
  objc_msgSendSuper2(&v24, "viewWillTransitionToSize:withTransitionCoordinator:", a1);
  v21 = 0;
  v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  v8._object = (void *)0x80000001005109A0;
  v8._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v8);
  *(double *)v23 = a2;
  *(double *)&v23[1] = a3;
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)(v23, &v21, v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11 = v21;
  v12 = (void *)v22;
  v13 = (char *)objc_msgSend(v4, "effectiveBrowserViewController");
  if (v13)
  {
    v14 = v13;
    v15 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], &v21, 0, 0);
    v16 = *v15;
    if (!v16
      || (v17 = type metadata accessor for DOCItemCollectionViewController(0), !swift_dynamicCastClass(v16, v17)))
    {
      swift_bridgeObjectRelease(v12);

      return objc_msgSend(v4, "updateAvailableDisplayModesWithAnimated:", 1, v19);
    }
    v18 = v16;

    sub_1001F6BB0(v11, v12, a1);
  }
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v12).n128_u64[0];
  return objc_msgSend(v4, "updateAvailableDisplayModesWithAnimated:", 1, v19);
}

void sub_10013DE48()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  id v9;
  id v10;
  _BYTE v11[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v11, 0, 0);
    v4 = *v3;
    if (v4)
    {
      v5 = type metadata accessor for DOCItemCollectionViewController(0);
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = (_BYTE *)v6;
        v8 = v4;

        v7[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        v9 = objc_msgSend(v7, "viewIfLoaded");
        v10 = objc_msgSend(v9, "window");

        if (v10)
          sub_1000926C8();
        sub_1001F6BB0(0xD000000000000036, (void *)0x8000000100510D00, 0);
        v2 = v8;
      }
    }

  }
}

void sub_10013E02C(uint64_t a1, unsigned __int8 a2)
{
  void *v2;
  void *v3;
  int v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unsigned __int8 v22;
  double v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  char v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v51;
  _BYTE v53[24];
  _OWORD v54[2];
  _BYTE v55[24];

  v3 = v2;
  v6 = a2;
  v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v7);
  v9 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState;
  v11 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState) = a2;
  v12 = sub_10000860C();
  sub_100462F10(*(unsigned __int8 *)(a1 + v10), v13);

  v14 = (char *)objc_msgSend(v3, "effectiveBrowserViewController");
  if (v14)
  {
    v15 = v14;
    v16 = (void **)&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v53, 0, 0);
    v17 = *v16;
    if (v17)
    {
      v18 = type metadata accessor for DOCItemCollectionViewController(0);
      v19 = swift_dynamicCastClass(v17, v18);
      if (v19)
      {
        v20 = v19;
        v21 = v17;

        v22 = *(_BYTE *)(v20 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState);
        *(_BYTE *)(v20 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState) = v6;
        sub_100178474(v22);
        v15 = v21;
      }
    }

  }
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1)
    && (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1) != 1
     || (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration) & 1) != 0))
  {
    if (v11 != 4 && v11 != 3 && v11 != 2 || (v6 - 2) < 3)
      goto LABEL_42;
  }
  else if (v11 == 2 || v11 == 3 || v11 == 4)
  {
    if ((v6 - 2) < 3 || (v6 & 1) == 0)
      goto LABEL_42;
  }
  else if ((v6 - 2) < 3 || (v6 & 1) == 0 || (v11 & 1) != 0)
  {
    goto LABEL_42;
  }
  v24 = (char *)objc_msgSend(v3, "hierarchyController");
  v25 = (uint64_t *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v55, 0, 0);
  v26 = *v25;
  if (!((unint64_t)*v25 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v26);
    if (v27)
      goto LABEL_25;
LABEL_41:

    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v26).n128_u64[0];
    goto LABEL_42;
  }
  if (v26 < 0)
    v48 = *v25;
  else
    v48 = v26 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v26);
  v27 = _CocoaArrayWrapper.endIndex.getter(v48);
  if (!v27)
    goto LABEL_41;
LABEL_25:
  v28 = v27 - 1;
  if (__OFSUB__(v27, 1))
  {
    __break(1u);
  }
  else if ((v26 & 0xC000000000000001) == 0)
  {
    if ((v28 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v28 < *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v29 = *(id *)(v26 + 8 * v28 + 32);
      goto LABEL_30;
    }
    __break(1u);
    return;
  }
  v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v26);
LABEL_30:
  v30 = v29;

  v31 = objc_msgSend(v3, "sourceObserver", swift_bridgeObjectRelease(v26).n128_f64[0]);
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(v30, "sourceIdentifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v35 = v34;

    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v32, "sourceForIdentifier:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

    if (v37)
    {
      v38 = (char *)objc_msgSend(v3, "dataSource");
      v39 = *(id *)&v38[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

      v40 = swift_allocBox(v7);
      v42 = v41;
      memset(v54, 0, sizeof(v54));
      v43 = v30;
      v44 = v37;
      UUID.init()(v44);
      *(_QWORD *)(v42 + v7[5]) = v43;
      *(_QWORD *)(v42 + v7[6]) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v42 + v7[7]) = v30;
      *(_QWORD *)(v42 + v7[8]) = v44;
      sub_10007EBDC((uint64_t)v54, v42 + v7[9]);
      sub_100144EAC(v42, (uint64_t)v9);
      v45 = sub_1000102E0((uint64_t)v9);
      sub_10007C720((uint64_t)v9, type metadata accessor for DOCBrowserHistoryItem);
      if ((v45 & 1) != 0)
      {
        v46 = swift_allocObject(&unk_1005C9808, 32, 7);
        *(_QWORD *)(v46 + 16) = v40;
        *(_QWORD *)(v46 + 24) = v39;
        v47 = v39;
        swift_retain();
        sub_10001A27C(0, (uint64_t)sub_1001457CC, v46);

        swift_release(v40);
        v40 = v46;
      }
      else
      {

      }
      swift_release(v40);

      goto LABEL_50;
    }
  }

LABEL_42:
  if ((v11 - 5) <= 0xFFFFFFFC && (v11 & 1) != 0 && (v6 - 2) <= 2)
  {
    v51 = (char *)objc_msgSend(v3, "dataSource", v23);
    v43 = *(id *)&v51[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

    sub_10043EFBC();
LABEL_50:

  }
}

void sub_10013E550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10[24];

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  v3 = sub_10013E61C(v2);
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v10, 1, 0);
  v5 = *v4;
  *v4 = v3;
  if (v5 != v3)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v8 = (uint64_t *)(v6 + 64);
      do
      {
        v9 = *v8;
        v8 += 5;
        *(_BYTE *)(v9 + 24) = *(_BYTE *)(v9 + 25);
        --v7;
      }
      while (v7);
    }
    sub_100026A34();
  }
  sub_10013E02C(a1, 2u);
}

uint64_t sub_10013E61C(uint64_t a1)
{
  void *v1;
  char *v3;
  void *v4;
  void **v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];

  v3 = (char *)objc_msgSend(v1, "effectiveBrowserViewController");
  if (v3)
  {
    v4 = v3;
    v5 = (void **)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v16, 0, 0);
    v6 = *v5;
    if (v6)
    {
      v7 = type metadata accessor for DOCItemCollectionViewController(0);
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8)
      {
        v9 = v8;
        v10 = v6;

        v11 = (uint64_t *)(v9 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess(v9 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, &v15, 0, 0);
LABEL_8:
        v13 = *v11;

        goto LABEL_10;
      }
    }

  }
  v12 = (char *)DOCFullDocumentManagerViewController.sidebarViewController.getter();
  if (v12)
  {
    v10 = v12;
    v11 = (uint64_t *)&v12[OBJC_IVAR____TtC5Files24DOCSidebarViewController_lastSearchDisplayMode];
    goto LABEL_8;
  }
  v13 = 0;
LABEL_10:
  if ((sub_1000DFDCC(v13, *(_QWORD *)(*(_QWORD *)(a1+ OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)+ OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes)) & 1) != 0)return v13;
  else
    return 1;
}

void sub_10013E804(char *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v2 = v1;
  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion];
  if (v4)
  {
    v5 = objc_msgSend(v1, "hierarchyController", swift_retain().n128_f64[0]);
    v6 = sub_1000ABE80();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)v6 + 136))(v4, 0, 1);
    swift_release(v4);

    swift_release(v6);
  }
  sub_10013E02C((uint64_t)a1, 3u);
  objc_msgSend(v2, "updateAvailableDisplayModesWithAnimated:", 1);
  if ((objc_msgSend(a1, "showsSearchResultsController") & 1) != 0
    || a1[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus] == 1)
  {
    v7 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
    v8 = objc_msgSend(v2, "configuration");
    v9 = objc_msgSend(v8, "sceneIdentifier");

    v10 = objc_msgSend(v7, "globalTabbedBrowserControllerForIdentifier:", v9);
    objc_msgSend(v10, "willDismissSearchResultsController:", a1);

  }
}

void sub_10013E9EC(_BYTE *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  id *v13;
  id v14;
  id v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  double v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40[24];
  char v41[24];
  _QWORD aBlock[5];
  uint64_t v43;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v38 - 8);
  v8 = __chkstk_darwin(v38);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)objc_msgSend(v1, "effectiveBrowserViewController", v8);
  if (v11)
  {
    v12 = v11;
    v13 = (id *)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v40, 0, 0);
    v14 = *v13;
    v15 = *v13;

    if (v14)
    {
      if ((a1[OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary] & 1) == 0)
        objc_msgSend(v15, "becomeFirstResponder");

    }
  }
  v16 = *(char **)&a1[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
  v17 = (char *)DOCFullDocumentManagerViewController.sidebarViewController.getter();
  if (v17)
  {
    v18 = v17;
    v19 = &v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v41, 0, 0);
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files24DOCSidebarViewController_lastSearchDisplayMode] = *(_QWORD *)v19;

  }
  objc_msgSend(v16, "loadViewIfNeeded");
  v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v21 = *(void **)&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v21)
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v21;
  objc_msgSend(v16, "loadViewIfNeeded");
  v23 = *(void **)&v16[v20];
  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v23, "adjustedContentInset");
  objc_msgSend(v22, "setContentOffset:", 0.0, -v24);

  if (!*(_QWORD *)&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001626AC();
  v25 = objc_msgSend(v2, "view");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "setUserInteractionEnabled:", 0);

    v27 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v28 = (void *)static OS_dispatch_queue.main.getter(v27);
    v29 = swift_allocObject(&unk_1005C9830, 32, 7);
    *(_QWORD *)(v29 + 16) = v2;
    *(_QWORD *)(v29 + 24) = a1;
    aBlock[4] = sub_1001457D4;
    v43 = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005C9848;
    v30 = _Block_copy(aBlock);
    v31 = v43;
    v32 = v2;
    v33 = a1;
    swift_release(v31);
    static DispatchQoS.unspecified.getter(v34);
    aBlock[0] = _swiftEmptyArrayStorage;
    v35 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v36 = sub_10006922C((uint64_t *)&unk_100647540);
    v37 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v4, v35);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v38);
    return;
  }
LABEL_16:
  __break(1u);
}

void sub_10013EDA0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  double v11;
  id v12;
  void *v13;
  _QWORD v14[5];
  uint64_t v15;

  v4 = objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_1005C9880, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject(&unk_1005C98A8, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1001457DC;
  *(_QWORD *)(v6 + 24) = v5;
  v14[4] = sub_10006657C;
  v15 = v6;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10006655C;
  v14[3] = &unk_1005C98C0;
  v7 = _Block_copy(v14);
  v8 = v15;
  v9 = a1;
  v10 = a2;
  swift_retain();
  objc_msgSend((id)v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 116, 1786, 44, 1);
  *(_QWORD *)&v11 = swift_release(v6).n128_u64[0];
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = objc_msgSend(v9, "view", v11);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "setUserInteractionEnabled:", 1);
      swift_release(v5);

      return;
    }
  }
  __break(1u);
}

void sub_10013EF78(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  void *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v4 = objc_msgSend(v1, "configuration");
  v5 = objc_msgSend(v4, "sceneIdentifier");

  v6 = objc_msgSend(v3, "globalTabbedBrowserControllerForIdentifier:", v5);
  if (v6)
  {
    objc_msgSend(v6, "willPresentSearchResultsController:", a1);

  }
  v7 = (char *)objc_msgSend(v1, "effectiveBrowserViewController");
  if (v7)
  {
    v8 = v7;
    v9 = (void **)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v16, 0, 0);
    v10 = *v9;
    if (*v9
      && (v11 = type metadata accessor for DOCItemCollectionViewController(0),
          (v12 = swift_dynamicCastClass(v10, v11)) != 0))
    {
      v13 = v12;
      v14 = v10;

      v15 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
      if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
      {
        *(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
        sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
        *(_BYTE *)(v13 + v15) = 0;
      }
    }
    else
    {
      v14 = v8;
    }

  }
}

void sub_10013F190(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v4 = objc_msgSend(v1, "configuration");
  v5 = objc_msgSend(v4, "sceneIdentifier");

  v6 = objc_msgSend(v3, "globalTabbedBrowserControllerForIdentifier:", v5);
  if (v6)
  {
    objc_msgSend(v6, "willDismissSearchResultsController:", a1);

  }
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
  if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
  {
    *(_BYTE *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
    sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
    *(_BYTE *)(v7 + v8) = 0;
  }
}

char *sub_10013F328(void *a1)
{
  void *v1;
  char *v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *result;
  uint64_t i;
  char *v10;
  void *v11;
  void **v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void **p_cache;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id *v34;
  id v35;
  unsigned int v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  char v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char v51[24];
  uint64_t v52;
  char v53[24];

  v2 = (char *)objc_msgSend(v1, "dataSource");
  v3 = (unint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v53, 0, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(v4);

  v5 = sub_10013C9A0(v4);
  v6 = v5;
  v52 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    result = (char *)_CocoaArrayWrapper.endIndex.getter(v23);
    v7 = (uint64_t)result;
    if (result)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v6);
    v22 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (char *)swift_bridgeObjectRetain(v5);
  if (!v7)
    goto LABEL_20;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
LABEL_48:
    __break(1u);
    return result;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    else
      v10 = (char *)*(id *)(v6 + 8 * i + 32);
    v11 = v10;
    v12 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v51, 0, 0);
    v13 = *v12;
    if (*v12
      && (v14 = type metadata accessor for DOCItemCollectionViewController(0),
          (v15 = swift_dynamicCastClass(v13, v14)) != 0))
    {
      v16 = v15;
      v17 = v13;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v20 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v20 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
      v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v16);
      specialized Array._endMutation()(v21);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v6);
  v22 = v52;
LABEL_21:
  swift_bridgeObjectRelease(v6);
  if ((unint64_t)v22 >> 62)
    goto LABEL_41;
  v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  v25 = a1;
  swift_bridgeObjectRetain(v22);
  for (; v24; v24 = _CocoaArrayWrapper.endIndex.getter(v47))
  {
    v26 = v22 & 0xC000000000000001;
    v27 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    v28 = 4;
    p_cache = _TtC5Files33SpotlightCollectorManagerProvider.cache;
    v49 = v22;
    while (1)
    {
      result = v26
             ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v22)
             : (char *)*(id *)(v22 + 8 * v28);
      v31 = result;
      v32 = v28 - 3;
      if (__OFADD__(v28 - 4, 1))
        break;
      v33 = *(_QWORD *)&result[*v27];
      if (!v33)
        goto LABEL_48;
      v34 = (id *)((char *)p_cache[129] + v33);
      if ((((_BYTE)v34[2] & 1) != 0
         || (v35 = *v34,
             v36 = objc_msgSend(v35, "doc_displaysSearchResults"),
             v35,
             !v36))
        && (v37 = *(void **)&v31[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem]) != 0
        && (v38 = objc_msgSend(v37, "searchController")) != 0)
      {
        v30 = v38;
        v39 = type metadata accessor for DOCSearchController();
        v40 = swift_dynamicCastClass(v30, v39);
        if (v40)
        {
          v41 = v40;
          v42 = v27;
          v43 = a1;
          v44 = static NSObject.== infix(_:_:)(v41, v43);

          if ((v44 & 1) != 0)
          {

            swift_bridgeObjectRelease_n(v49, 2);
            v45 = v31;
            v46 = sub_10021FCA4((uint64_t)v45);

            return (char *)v46;
          }
          v30 = v31;
          v27 = v42;
          v22 = v49;
          p_cache = (void **)(_TtC5Files33SpotlightCollectorManagerProvider + 16);
        }
        else
        {

          p_cache = (void **)(_TtC5Files33SpotlightCollectorManagerProvider + 16);
        }
      }
      else
      {
        v30 = v31;
      }

      ++v28;
      if (v32 == v24)
        goto LABEL_45;
    }
    __break(1u);
LABEL_41:
    if (v22 < 0)
      v47 = v22;
    else
      v47 = v22 & 0xFFFFFFFFFFFFFF8;
    v48 = a1;
    swift_bridgeObjectRetain(v22);
  }
LABEL_45:

  swift_bridgeObjectRelease_n(v22, 2);
  return (char *)_swiftEmptyArrayStorage;
}

objc_class *sub_10013F708(void *a1)
{
  void *v1;
  char *v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *result;
  uint64_t i;
  char *v10;
  void *v11;
  void **v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void **p_cache;
  objc_class *v30;
  objc_class *v31;
  uint64_t v32;
  uint64_t v33;
  id *v34;
  id v35;
  unsigned int v36;
  void *v37;
  objc_class *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  char v44;
  char *v45;
  objc_class *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char v51[24];
  uint64_t v52;
  char v53[24];

  v2 = (char *)objc_msgSend(v1, "dataSource");
  v3 = (unint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v53, 0, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(v4);

  v5 = sub_10013C9A0(v4);
  v6 = v5;
  v52 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    result = (objc_class *)_CocoaArrayWrapper.endIndex.getter(v23);
    v7 = (uint64_t)result;
    if (result)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v6);
    v22 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (objc_class *)swift_bridgeObjectRetain(v5);
  if (!v7)
    goto LABEL_20;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
LABEL_48:
    __break(1u);
    return result;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    else
      v10 = (char *)*(id *)(v6 + 8 * i + 32);
    v11 = v10;
    v12 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v51, 0, 0);
    v13 = *v12;
    if (*v12
      && (v14 = type metadata accessor for DOCItemCollectionViewController(0),
          (v15 = swift_dynamicCastClass(v13, v14)) != 0))
    {
      v16 = v15;
      v17 = v13;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v20 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v20 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
      v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v16);
      specialized Array._endMutation()(v21);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v6);
  v22 = v52;
LABEL_21:
  swift_bridgeObjectRelease(v6);
  if ((unint64_t)v22 >> 62)
    goto LABEL_41;
  v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  v25 = a1;
  swift_bridgeObjectRetain(v22);
  for (; v24; v24 = _CocoaArrayWrapper.endIndex.getter(v47))
  {
    v26 = v22 & 0xC000000000000001;
    v27 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    v28 = 4;
    p_cache = _TtC5Files33SpotlightCollectorManagerProvider.cache;
    v49 = v22;
    while (1)
    {
      result = v26
             ? (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v22)
             : (objc_class *)*(id *)(v22 + 8 * v28);
      v31 = result;
      v32 = v28 - 3;
      if (__OFADD__(v28 - 4, 1))
        break;
      v33 = *(_QWORD *)((char *)result + *v27);
      if (!v33)
        goto LABEL_48;
      v34 = (id *)((char *)p_cache[129] + v33);
      if ((((_BYTE)v34[2] & 1) != 0
         || (v35 = *v34,
             v36 = objc_msgSend(v35, "doc_displaysSearchResults"),
             v35,
             !v36))
        && (v37 = *(void **)((char *)v31
                           + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem)) != 0
        && (v38 = (objc_class *)objc_msgSend(v37, "searchController")) != 0)
      {
        v30 = v38;
        v39 = type metadata accessor for DOCSearchController();
        v40 = swift_dynamicCastClass(v30, v39);
        if (v40)
        {
          v41 = v40;
          v42 = v27;
          v43 = a1;
          v44 = static NSObject.== infix(_:_:)(v41, v43);

          if ((v44 & 1) != 0)
          {

            swift_bridgeObjectRelease_n(v49, 2);
            v45 = v31;
            v46 = sub_1002C93EC((char *)v43);

            return v46;
          }
          v30 = v31;
          v27 = v42;
          v22 = v49;
          p_cache = (void **)(_TtC5Files33SpotlightCollectorManagerProvider + 16);
        }
        else
        {

          p_cache = (void **)(_TtC5Files33SpotlightCollectorManagerProvider + 16);
        }
      }
      else
      {
        v30 = v31;
      }

      ++v28;
      if (v32 == v24)
        goto LABEL_45;
    }
    __break(1u);
LABEL_41:
    if (v22 < 0)
      v47 = v22;
    else
      v47 = v22 & 0xFFFFFFFFFFFFFF8;
    v48 = a1;
    swift_bridgeObjectRetain(v22);
  }
LABEL_45:

  swift_bridgeObjectRelease_n(v22, 2);
  return 0;
}

id sub_10013FAF4()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  void *v6;
  id v7;

  if (!objc_msgSend(v0, "isActive"))
    return 0;
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
  v2 = objc_msgSend(v1, "viewIfLoaded");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, "isHidden");

  if ((v4 & 1) != 0)
    return 0;
  v5 = objc_msgSend(v1, "viewIfLoaded");
  if (!v5)
    return 0;
  v6 = v5;
  v7 = objc_msgSend(v5, "isHidden");

  return v7;
}

id sub_10013FBB0(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD v74[2];
  __int128 v75;
  __int128 v76;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v66 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v66 - v15;
  if (a1)
  {
    v17 = a1;
    v18 = objc_msgSend(v17, "displayModes");
    *(_QWORD *)&v74[0] = a2;
    *((_QWORD *)&v74[0] + 1) = a3;
    swift_bridgeObjectRetain_n(a3, 2);
    v19 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v74, &type metadata for String);
    v20 = objc_msgSend(v18, "__swift_objectForKeyedSubscript:", v19);
    swift_unknownObjectRelease(v19);

    if (v20)
    {
      _bridgeAnyObjectToAny(_:)(v74, v20);
      swift_unknownObjectRelease(v20);
    }
    else
    {
      memset(v74, 0, sizeof(v74));
    }
    sub_10007EBDC((uint64_t)v74, (uint64_t)&v75);
    v70 = a2;
    if (*((_QWORD *)&v76 + 1))
    {
      v28 = sub_10006922C((uint64_t *)&unk_1006444E0);
      if ((swift_dynamicCast(&v73, &v75, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
      {
        v29 = v73;
        swift_bridgeObjectRelease(a3);
        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCUserDefaultsDisplayModeKey);
        v32 = v31;
        if (*(_QWORD *)(v29 + 16)
          && (v33 = sub_10007EE90(v30, v31, (void (*)(_QWORD *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_10007F030), (v34 & 1) != 0))
        {
          sub_100069BD8(*(_QWORD *)(v29 + 56) + 32 * v33, (uint64_t)&v75);
        }
        else
        {
          v75 = 0u;
          v76 = 0u;
        }
        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease(v29);
        if (*((_QWORD *)&v76 + 1))
        {
          v46 = sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
          v45 = swift_dynamicCast(v74, &v75, (char *)&type metadata for Any + 8, v46, 6);
          if ((v45 & 1) != 0)
          {
            v47 = *(void **)&v74[0];
            v27 = objc_msgSend(*(id *)&v74[0], "integerValue");

            if ((unint64_t)v27 < 3)
            {
              v43 = 0;
              goto LABEL_26;
            }
          }
        }
        else
        {
          v45 = sub_10000CB4C((uint64_t)&v75, &qword_100642730);
        }
LABEL_25:
        v27 = 0;
        v43 = 1;
LABEL_26:
        v48 = Logger.StateStore.unsafeMutableAddressor(v45);
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v48, v6);
        v49 = v17;
        swift_bridgeObjectRetain_n(a3, 2);
        v50 = v49;
        v51 = Logger.logObject.getter(v50);
        v52 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v51, v52))
        {
          v53 = swift_slowAlloc(42, -1);
          v68 = swift_slowAlloc(128, -1);
          *(_QWORD *)&v74[0] = v68;
          *(_DWORD *)v53 = 136315906;
          v69 = v27;
          *(_QWORD *)&v75 = sub_1000544FC(0xD000000000000016, 0x8000000100510E40, (uint64_t *)v74);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 8);
          v71 = v13;
          v72 = v6;
          *(_WORD *)(v53 + 12) = 2080;
          v54 = v69;
          if (v43)
            v54 = 0;
          *(_QWORD *)&v75 = v54;
          BYTE8(v75) = v43;
          v55 = sub_10006922C(&qword_1006444D8);
          v56 = String.init<A>(describing:)(&v75, v55);
          v67 = v7;
          v58 = v57;
          *(_QWORD *)&v75 = sub_1000544FC(v56, v57, (uint64_t *)v74);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 8);
          swift_bridgeObjectRelease(v58);
          *(_WORD *)(v53 + 22) = 2080;
          swift_bridgeObjectRetain(a3);
          *(_QWORD *)&v75 = sub_1000544FC(v70, a3, (uint64_t *)v74);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 8);
          swift_bridgeObjectRelease_n(a3, 3);
          *(_WORD *)(v53 + 32) = 2080;
          v59 = v50;
          v60 = objc_msgSend(v59, "description");
          v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
          v63 = v62;

          *(_QWORD *)&v75 = sub_1000544FC(v61, v63, (uint64_t *)v74);
          v27 = v69;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 8);

          swift_bridgeObjectRelease(v63);
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s fetched value: %s for identifier: %s from state store: %s", (uint8_t *)v53, 0x2Au);
          v64 = v68;
          swift_arrayDestroy(v68, 4, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v64, -1, -1);
          swift_slowDealloc(v53, -1, -1);

          (*(void (**)(char *, uint64_t))(v67 + 8))(v71, v72);
        }
        else
        {

          swift_bridgeObjectRelease_n(a3, 2);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        }
        return v27;
      }
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      swift_bridgeObjectRelease(a3);
      v35 = sub_10000CB4C((uint64_t)&v75, &qword_100642730);
    }
    v36 = Logger.StateStore.unsafeMutableAddressor(v35);
    v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v36, v6);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v71 = v13;
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v72 = v6;
      v42 = v41;
      *(_QWORD *)&v75 = v41;
      *(_DWORD *)v40 = 136315138;
      *(_QWORD *)&v74[0] = sub_1000544FC(0xD000000000000016, 0x8000000100510E40, (uint64_t *)&v75);
      v13 = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v74, (char *)v74 + 8);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s unable to fetch display mode state", v40, 0xCu);
      v43 = 1;
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      v44 = v42;
      v6 = v72;
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v40, -1, -1);

      v45 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v16, v6);
      v27 = 0;
      goto LABEL_26;
    }

    v45 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_25;
  }
  v21 = Logger.StateStore.unsafeMutableAddressor(v14);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v21, v6);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v75 = v26;
    *(_DWORD *)v25 = 136315138;
    *(_QWORD *)&v74[0] = sub_1000544FC(0xD000000000000016, 0x8000000100510E40, (uint64_t *)&v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v74, (char *)v74 + 8);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s state store was nil", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return 0;
}

uint64_t DOCConcreteLocation.effectiveTabSwitcherTab.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  char v17;
  uint64_t v19;

  v1 = v0;
  v2 = sub_10006922C(&qword_1006441B0);
  inited = swift_initStackObject(v2, &v19);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  v4 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
  *(_QWORD *)(inited + 32) = DOCDocumentSourceIdentifierRecentDocuments;
  *(_QWORD *)(inited + 40) = 0;
  v5 = (void *)DOCDocumentSourceIdentifierSharedItems;
  *(_QWORD *)(inited + 48) = DOCDocumentSourceIdentifierSharedItems;
  *(_QWORD *)(inited + 56) = 1;
  v6 = v4;
  v7 = v5;
  v8 = sub_1003F1BBC(inited);
  v9 = objc_msgSend(v1, "sourceIdentifier");
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16) || (v11 = sub_100079B38((uint64_t)v9), (v12 & 1) == 0))
  {

    v14 = objc_msgSend(v1, "originalSourceIdentifier");
    if (v14)
    {
      if (*(_QWORD *)(v8 + 16))
      {
        v15 = v14;
        v16 = sub_100079B38((uint64_t)v15);
        if ((v17 & 1) != 0)
        {
          v13 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v16);

          swift_bridgeObjectRelease(v8);
          return v13;
        }

      }
      else
      {

      }
    }
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v11);
  swift_bridgeObjectRelease(v8);

  return v13;
}

id sub_1001405D4(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCWorkaround);
}

id sub_1001405E0(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100140610(uint64_t a1)
{
  return swift_slowAlloc(a1, -1);
}

uint64_t sub_100140618(uint64_t a1)
{
  return swift_slowDealloc(a1, -1, -1);
}

unint64_t sub_100140624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for URL(0);
  v6 = sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10004F5A8(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for URL, &qword_1006418E0, (uint64_t)&protocol conformance descriptor for URL);
}

unint64_t sub_1001406BC(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::Int v12;
  _QWORD v14[9];

  v3 = v2;
  v6 = a2 & 1;
  Hasher.init(_seed:)(v14, *(_QWORD *)(v3 + 40));
  if ((a2 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v10 = v9;
    v11 = a1;
    String.hash(into:)(v14, v8, v10);

    swift_bridgeObjectRelease(v10);
  }
  else
  {
    Hasher._combine(_:)(0);
    v7 = a1;
    NSObject.hash(into:)(v14);

  }
  v12 = Hasher._finalize()();
  return sub_100141130(a1, v6, v12);
}

unint64_t sub_100140788(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_100311B88((uint64_t)v5);
  v3 = Hasher._finalize()();
  return sub_1001412A4(a1, v3);
}

unint64_t sub_1001407E0(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  Swift::UInt64 v6;
  Swift::Int v7;
  _QWORD v9[9];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  Hasher.init(_seed:)(v9, *(_QWORD *)(v1 + 40));
  v3 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = v3;
  v16 = *(_OWORD *)(a1 + 96);
  v4 = *(_OWORD *)(a1 + 16);
  v10 = *(_OWORD *)a1;
  v11 = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a1 + 32);
  v13 = v5;
  sub_100390ED8((uint64_t)v9);
  sub_100312808(*(double *)(a1 + 112), *(double *)(a1 + 120));
  UIEdgeInsets.hash(into:)(v9, *(double *)(a1 + 128), *(double *)(a1 + 136), *(double *)(a1 + 144), *(double *)(a1 + 152));
  if ((*(_QWORD *)(a1 + 160) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *(_QWORD *)(a1 + 160);
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  v7 = Hasher._finalize()();
  return sub_1001415CC(a1, v7);
}

unint64_t sub_10014088C(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_100295164((uint64_t)v5);
  v3 = Hasher._finalize()();
  return sub_1001419F0(a1, v3);
}

void sub_1001408E4(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_100140934()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  uint64_t v4;

  String.hash(into:)(&v4, 1701667182, v0);
  swift_bridgeObjectRelease(v0);
  v2 = Hasher._finalize()();
  return sub_100141D74(v1, v2);
}

uint64_t sub_1001409B0(uint64_t a1, uint64_t a2)
{
  return sub_10007EE90(a1, a2, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1001469EC, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100141F4C);
}

unint64_t sub_1001409C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  Swift::UInt v7;
  Swift::Int v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, *(_QWORD *)(v3 + 40));
  if (a3)
  {
    if (a3 != 1)
      __asm { BR              X9 }
    v7 = 5;
  }
  else
  {
    v7 = 4;
  }
  Hasher._combine(_:)(v7);
  String.hash(into:)(v10, a1, a2);
  v8 = Hasher._finalize()();
  return sub_1001420B4(a1, a2, a3, v8);
}

unint64_t sub_100140AAC(Swift::UInt64 a1, Swift::UInt64 a2, char a3)
{
  uint64_t v3;
  Swift::Int v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, *(_QWORD *)(v3 + 40));
  if (a3)
  {
    if (a3 == 1)
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(a1);
      Hasher._combine(_:)(a2);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(a1);
  }
  v7 = Hasher._finalize()();
  return sub_10014224C(a1, a2, a3, v7);
}

unint64_t sub_100140B68(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v2 + 40));
  if (a2)
  {
    if (a2 == 1)
    {
      v5 = 2;
    }
    else
    {
      if (a2 != 2)
      {
        Hasher._combine(_:)(1uLL);
        String.hash(into:)(v8, a1, a2);
        goto LABEL_9;
      }
      v5 = 3;
    }
  }
  else
  {
    v5 = 0;
  }
  Hasher._combine(_:)(v5);
LABEL_9:
  v6 = Hasher._finalize()();
  return sub_100142314(a1, a2, v6);
}

unint64_t sub_100140C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100142B44(a1, v4, (void (*)(_QWORD))type metadata accessor for DOCBrowserContainerController);
}

unint64_t sub_100140C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000667FC(a1, v4, (unint64_t *)&unk_1006428C0, FPItemID_ptr);
}

unint64_t sub_100140C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000667FC(a1, v4, (unint64_t *)&qword_100644600, UIColor_ptr);
}

unint64_t sub_100140CE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  _QWORD v14[9];

  Hasher.init(_seed:)(v14, *(_QWORD *)(v4 + 40));
  sub_100200624(a1, a2, a3, a4);
  v10 = v9;
  String.hash(into:)(v14, v11, v9);
  swift_bridgeObjectRelease(v10);
  v12 = Hasher._finalize()();
  return sub_100142408(a1, a2, a3, a4, v12);
}

unint64_t sub_100140D84(Swift::UInt a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_100142694(a1, v3);
}

unint64_t sub_100140DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000667FC(a1, v4, (unint64_t *)&unk_100644310, UIButton_ptr);
}

unint64_t sub_100140E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000667FC(a1, v4, (unint64_t *)&qword_1006419B0, FPItem_ptr);
}

unint64_t sub_100140E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000667FC(a1, v4, &qword_100644410, FPActionOperationLocator_ptr);
}

unint64_t sub_100140ECC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x637241656C707061;
  else
    v5 = 7367034;
  if ((a1 & 1) != 0)
    v6 = 0xEC00000065766968;
  else
    v6 = 0xE300000000000000;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_100142730(v4, v7);
}

unint64_t sub_100140F60(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x69726F7661666E75;
    else
      v3 = 0x656C67676F74;
    if (a1 == 1)
      v4 = 0xEA00000000006574;
    else
      v4 = 0xE600000000000000;
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x657469726F766166;
  }
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = Hasher._finalize()();
  return sub_100142870(a1, v5);
}

unint64_t sub_100141014(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x64726177726F66;
  else
    v5 = 1801675106;
  if ((a1 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_100142A10(v4, v7);
}

unint64_t sub_1001410A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100142B44(a1, v4, (void (*)(_QWORD))type metadata accessor for DOCGoToRecentLocation);
}

unint64_t sub_1001410E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000667FC(a1, v4, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
}

unint64_t sub_100141130(void *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  id v21;
  id v22;
  char v23;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = v3;
    v10 = ~v5;
    do
    {
      v11 = *(_QWORD *)(v7 + 48) + 16 * v6;
      v12 = *(void **)v11;
      if ((*(_BYTE *)(v11 + 8) & 1) != 0)
      {
        if ((a2 & 1) != 0)
        {
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v15 = v14;
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v13 == v16 && v15 == v17)
          {
            swift_bridgeObjectRelease_n(v15, 2);
            return v6;
          }
          v19 = v17;
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
          swift_bridgeObjectRelease(v15);
          swift_bridgeObjectRelease(v19);
          if ((v20 & 1) != 0)
            return v6;
        }
      }
      else if ((a2 & 1) == 0)
      {
        sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
        v21 = v12;
        v22 = a1;
        v23 = static NSObject.== infix(_:_:)(v21, v22);

        if ((v23 & 1) != 0)
          return v6;
      }
      v6 = (v6 + 1) & v10;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1001412A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v49 = ~v3;
    v6 = *(double *)a1;
    do
    {
      v7 = *(_QWORD *)(v51 + 48) + 40 * v4;
      if (*(double *)v7 != v6)
        goto LABEL_4;
      v8 = *(void **)(v7 + 8);
      v9 = *(void **)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      v11 = *(void **)(v7 + 32);
      v54 = *(id *)(a1 + 8);
      v12 = v54;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      if (v13 == v16 && v15 == v17)
      {
        v24 = v8;
        v25 = v9;
        v26 = v11;
        sub_10007C3B8(&v54);
        swift_bridgeObjectRelease_n(v15, 2);
        sub_10007C390(&v54);

      }
      else
      {
        v19 = v17;
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
        v21 = v8;
        v22 = v9;
        v23 = v11;
        sub_10007C3B8(&v54);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v19);
        sub_10007C390(&v54);

        if ((v20 & 1) == 0)
          goto LABEL_3;
      }
      v53 = *(id *)(a1 + 16);
      v27 = v53;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v30 = v29;
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      if (v28 == v31 && v30 == v32)
      {
        v37 = v9;
        sub_10007C3B8(&v53);
        swift_bridgeObjectRelease_n(v30, 2);
        sub_10007C390(&v53);

      }
      else
      {
        v34 = v32;
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v31, v32, 0);
        v36 = v9;
        sub_10007C3B8(&v53);
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v34);
        sub_10007C390(&v53);

        if ((v35 & 1) == 0)
          goto LABEL_3;
      }
      if (v10 != *(_QWORD *)(a1 + 24))
      {
LABEL_3:

        goto LABEL_4;
      }
      v52 = *(id *)(a1 + 32);
      v38 = v52;
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v41 = v40;
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v44 = v42;
      if (v39 == v43 && v41 == v42)
      {
        v48 = v11;
        sub_10007C3B8(&v52);
        swift_bridgeObjectRelease_n(v41, 2);
        sub_10007C390(&v52);

        return v4;
      }
      v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
      v46 = v11;
      sub_10007C3B8(&v52);
      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease(v44);
      sub_10007C390(&v52);

      if ((v45 & 1) != 0)
        return v4;
LABEL_4:
      v4 = (v4 + 1) & v49;
    }
    while (((*(_QWORD *)(v50 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1001415CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  id v35;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  char v41;
  int v43;
  int v44;
  __int128 v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  float64x2_t v53;
  float64x2_t v54;
  float64x2_t v55;
  float64x2_t v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  double v68;
  id v69;
  id v70[2];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v48 = ~v3;
    v46 = *(void **)(a1 + 16);
    v47 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)&v45 = *(_QWORD *)(a1 + 32);
    *((_QWORD *)&v45 + 1) = *(_QWORD *)(a1 + 24);
    v43 = *(unsigned __int8 *)(a1 + 41);
    v44 = *(unsigned __int8 *)(a1 + 40);
    v41 = *(_BYTE *)(a1 + 42);
    v39 = *(float64x2_t *)(a1 + 80);
    v40 = *(float64x2_t *)(a1 + 96);
    v37 = *(float64x2_t *)(a1 + 48);
    v38 = *(float64x2_t *)(a1 + 64);
    v49 = *(id *)a1;
    v70[0] = *(id *)a1;
    do
    {
      v5 = *(_QWORD *)(v51 + 48) + 168 * v4;
      v6 = *(float64x2_t *)(v5 + 48);
      v7 = *(float64x2_t *)(v5 + 64);
      v8 = *(float64x2_t *)(v5 + 96);
      v63 = *(float64x2_t *)(v5 + 80);
      v64 = v8;
      v61 = v6;
      v62 = v7;
      v10 = *(_OWORD *)(v5 + 16);
      v9 = *(_OWORD *)(v5 + 32);
      v58 = *(_OWORD *)v5;
      v59 = v10;
      v60 = v9;
      v12 = *(_OWORD *)(v5 + 128);
      v11 = *(_OWORD *)(v5 + 144);
      v13 = *(_OWORD *)(v5 + 112);
      v68 = *(double *)(v5 + 160);
      v66 = v12;
      v67 = v11;
      v65 = v13;
      v14 = v58;
      v15 = v59;
      v16 = v60;
      v17 = BYTE8(v60);
      v57 = BYTE9(v60);
      v52 = BYTE10(v60);
      v55 = v63;
      v56 = v8;
      v53 = v61;
      v54 = v62;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v20 = v19;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v23 = v21;
      if (v18 == v22 && v20 == v21)
      {
        sub_1001456B8((uint64_t)&v58);
        v24 = (id)v14;
        sub_10007C3B8(v70);
        swift_bridgeObjectRelease_n(v20, 2);
        sub_10007C390(v70);

      }
      else
      {
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);
        sub_1001456B8((uint64_t)&v58);
        v26 = (id)v14;
        sub_10007C3B8(v70);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v23);
        sub_10007C390(v70);

        if ((v25 & 1) == 0)
          goto LABEL_3;
      }
      if (*((_QWORD *)&v14 + 1) != v47)
      {
LABEL_3:
        sub_1001456E8((void **)&v58);
        goto LABEL_4;
      }
      v69 = v46;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v29 = v28;
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v32 = v30;
      if (v27 == v31 && v29 == v30)
      {
        v33 = (id)v15;
        sub_10007C3B8(&v69);
        swift_bridgeObjectRelease_n(v29, 2);
        sub_10007C390(&v69);

        sub_1001456E8((void **)&v58);
      }
      else
      {
        v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
        v35 = (id)v15;
        sub_10007C3B8(&v69);
        swift_bridgeObjectRelease(v29);
        swift_bridgeObjectRelease(v32);
        sub_10007C390(&v69);

        sub_1001456E8((void **)&v58);
        if ((v34 & 1) == 0)
          goto LABEL_4;
      }
      if (__PAIR128__(*((unint64_t *)&v15 + 1), v16) == v45
        && ((v17 ^ v44) & 1) == 0
        && ((v57 ^ v43) & 1) == 0
        && (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v53, v37), (int32x4_t)vceqq_f64(v54, v38)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v55, v39), (int32x4_t)vceqq_f64(v56, v40)))), 7uLL))) & 1) != 0&& ((v41 & 1) == 0) != v52&& *(double *)&v65 == *(double *)(a1 + 112)&& *((double *)&v65 + 1) == *(double *)(a1 + 120)&& *(double *)&v66 == *(double *)(a1 + 128)&& *((double *)&v66 + 1) == *(double *)(a1 + 136)&& *(double *)&v67 == *(double *)(a1 + 144)&& *((double *)&v67 + 1) == *(double *)(a1 + 152)&& v68 == *(double *)(a1 + 160))
      {
        return v4;
      }
LABEL_4:
      v4 = (v4 + 1) & v48;
    }
    while (((*(_QWORD *)(v50 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1001419F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int128 *v6;
  id v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char v46;
  id v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  BOOL v54;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[8];
  id v68;
  id v69;
  id v70;
  _OWORD v71[9];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v56 = ~v3;
    v6 = (__int128 *)(a1 + 32);
    v7 = *(id *)a1;
    v70 = *(id *)a1;
    do
    {
      v8 = (__int128 *)(*(_QWORD *)(v2 + 48) + 160 * v4);
      v9 = v8[1];
      v57 = *v8;
      v58 = v9;
      v10 = v8[5];
      v12 = v8[2];
      v11 = v8[3];
      v61 = v8[4];
      v62 = v10;
      v59 = v12;
      v60 = v11;
      v13 = v8[9];
      v15 = v8[6];
      v14 = v8[7];
      v65 = v8[8];
      v66 = v13;
      v63 = v15;
      v64 = v14;
      v16 = (void *)v57;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
      v19 = v18;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v22 = v20;
      if (v17 == v21 && v19 == v20)
      {
        sub_100145718((uint64_t)&v57);
        v23 = v16;
        sub_10007C3B8(&v70);
        swift_bridgeObjectRelease_n(v19, 2);
        sub_10007C390(&v70);

      }
      else
      {
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v20, 0);
        sub_100145718((uint64_t)&v57);
        v25 = v16;
        sub_10007C3B8(&v70);
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v22);
        sub_10007C390(&v70);

        if ((v24 & 1) == 0)
          goto LABEL_3;
      }
      v26 = (void *)*((_QWORD *)&v57 + 1);
      v69 = *(id *)(a1 + 8);
      v27 = v69;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(*((_QWORD *)&v57 + 1));
      v30 = v29;
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v33 = v31;
      if (v28 == v32 && v30 == v31)
      {
        v34 = v26;
        sub_10007C3B8(&v69);
        swift_bridgeObjectRelease_n(v30, 2);
        sub_10007C390(&v69);

      }
      else
      {
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);
        v36 = v26;
        sub_10007C3B8(&v69);
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v33);
        sub_10007C390(&v69);

        if ((v35 & 1) == 0)
          goto LABEL_3;
      }
      v37 = (void *)v58;
      v68 = *(id *)(a1 + 16);
      v38 = v68;
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v41 = v40;
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v44 = v42;
      if (v39 == v43 && v41 == v42)
      {
        v45 = v37;
        sub_10007C3B8(&v68);
        swift_bridgeObjectRelease_n(v41, 2);
        sub_10007C390(&v68);

      }
      else
      {
        v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
        v47 = v37;
        sub_10007C3B8(&v68);
        swift_bridgeObjectRelease(v41);
        swift_bridgeObjectRelease(v44);
        sub_10007C390(&v68);

        if ((v46 & 1) == 0)
          goto LABEL_3;
      }
      if (BYTE8(v58) != *(unsigned __int8 *)(a1 + 24))
      {
LABEL_3:
        sub_100145770((uint64_t)&v57);
        goto LABEL_4;
      }
      v71[4] = v63;
      v71[5] = v64;
      v71[6] = v65;
      v71[7] = v66;
      v71[0] = v59;
      v71[1] = v60;
      v71[2] = v61;
      v71[3] = v62;
      v48 = *v6;
      v49 = v6[1];
      v50 = v6[3];
      v67[2] = v6[2];
      v67[3] = v50;
      v67[0] = v48;
      v67[1] = v49;
      v51 = v6[4];
      v52 = v6[5];
      v53 = v6[7];
      v67[6] = v6[6];
      v67[7] = v53;
      v67[4] = v51;
      v67[5] = v52;
      v54 = sub_10007C194((uint64_t)v71, (uint64_t)v67);
      sub_100145770((uint64_t)&v57);
      if (v54)
        return v4;
LABEL_4:
      v4 = (v4 + 1) & v56;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_100141D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_100141F4C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    while (2)
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      switch(v12)
      {
        case 0:
          if (a2)
            goto LABEL_4;
          break;
        case 1:
          if (a2 != 1)
            goto LABEL_4;
          break;
        case 2:
          if (a2 != 2)
            goto LABEL_4;
          break;
        case 3:
          if (a2 != 3)
            goto LABEL_4;
          break;
        case 4:
          if (a2 != 4)
            goto LABEL_4;
          break;
        case 5:
          if (a2 != 5)
            goto LABEL_4;
          break;
        case 6:
          if (a2 != 6)
            goto LABEL_4;
          break;
        case 7:
          if (a2 != 7)
            goto LABEL_4;
          break;
        case 8:
          if (a2 != 8)
            goto LABEL_4;
          break;
        case 9:
          if (a2 != 9)
            goto LABEL_4;
          break;
        case 10:
          if (a2 != 10)
            goto LABEL_4;
          break;
        default:
          if (a2 < 0xB
            || (*v11 == a1 ? (v13 = v12 == a2) : (v13 = 0),
                !v13 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) == 0))
          {
LABEL_4:
            v6 = (v6 + 1) & v9;
            if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
              continue;
          }
          break;
      }
      break;
    }
  }
  return v6;
}

unint64_t sub_1001420B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    do
    {
      v13 = (uint64_t *)(v12 + 24 * v7);
      v14 = *v13;
      v15 = v13[1];
      v16 = *((unsigned __int8 *)v13 + 16);
      if (v16)
      {
        if (v16 != 1)
          __asm { BR              X8 }
        if (a3 != 1)
          goto LABEL_4;
      }
      else if (a3)
      {
        goto LABEL_4;
      }
      v17 = v14 == a1 && v15 == a2;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
        return v7;
LABEL_4:
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_10014224C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = -1 << *(_BYTE *)(v4 + 32);
  result = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v8 = ~v6;
    v10 = a3 == 2 && (a2 | a1) == 0;
    do
    {
      v11 = *(_QWORD *)(v4 + 48) + 24 * result;
      v12 = *(_QWORD *)v11;
      if (*(_BYTE *)(v11 + 16))
      {
        if (*(_BYTE *)(v11 + 16) == 1)
        {
          if (a3 == 1)
          {
            v13 = *(_QWORD *)(v11 + 8);
            if (v12 == a1 && v13 == a2)
              return result;
          }
        }
        else if (v10)
        {
          return result;
        }
      }
      else if (!a3 && v12 == a1)
      {
        return result;
      }
      result = (result + 1) & v8;
    }
    while (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_100142314(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (v12 == 1)
        {
          if (a2 == 1)
            return v6;
        }
        else if (v12 == 2)
        {
          if (a2 == 2)
            return v6;
        }
        else if (a2 >= 3)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_100142408(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;

  v6 = a5 & ~(-1 << *(_BYTE *)(v5 + 32));
  v43 = v5 + 64;
  if (((*(_QWORD *)(v5 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v38 = -1 << *(_BYTE *)(v5 + 32);
    v8 = *(_QWORD *)(v5 + 48) + 32 * v6;
    v9 = *(id *)v8;
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = *(_BYTE *)(v8 + 24);
    sub_1000E4F7C(*(id *)v8, v10, v11, v12);
    v39 = v9;
    sub_100200624((uint64_t)v9, v10, v11, v12);
    v16 = v15;
    v18 = v17;
    sub_100200624(a1, a2, a3, a4);
    if (v16 == v19 && v18 == v20)
    {
      swift_bridgeObjectRelease_n(v18, 2);
      v25 = v39;
LABEL_9:
      sub_1000E4FD0(v25, v10, v11, v12);
      return v6;
    }
    v22 = a3;
    v23 = v20;
    v40 = a1;
    v41 = v22;
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v19, v20, 0);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v23);
    sub_1000E4FD0(v39, v10, v11, v12);
    if ((v24 & 1) == 0)
    {
      v6 = (v6 + 1) & ~v38;
      if (((*(_QWORD *)(v43 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      {
        while (1)
        {
          v26 = *(_QWORD *)(v5 + 48) + 32 * v6;
          v27 = *(id *)v26;
          v10 = *(_QWORD *)(v26 + 8);
          v11 = *(_QWORD *)(v26 + 16);
          v12 = *(_BYTE *)(v26 + 24);
          sub_1000E4F7C(*(id *)v26, v10, v11, v12);
          sub_100200624((uint64_t)v27, v10, v11, v12);
          v29 = v28;
          v31 = v30;
          sub_100200624(v40, a2, v41, a4);
          if (v29 == v32 && v31 == v33)
            break;
          v35 = v33;
          v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v32, v33, 0);
          swift_bridgeObjectRelease(v31);
          swift_bridgeObjectRelease(v35);
          sub_1000E4FD0(v27, v10, v11, v12);
          if ((v36 & 1) == 0)
          {
            v6 = (v6 + 1) & ~v38;
            if (((*(_QWORD *)(v43 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
              continue;
          }
          return v6;
        }
        swift_bridgeObjectRelease_n(v31, 2);
        v25 = v27;
        goto LABEL_9;
      }
    }
  }
  return v6;
}

unint64_t sub_100142694(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100142730(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x637241656C707061;
    else
      v6 = 7367034;
    if ((a1 & 1) != 0)
      v7 = 0xEC00000065766968;
    else
      v7 = 0xE300000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x637241656C707061 : 7367034;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xEC00000065766968 : 0xE300000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_100142870(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0x69726F7661666E75;
          v8 = 0xEA00000000006574;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v8 = 0xE600000000000000;
          v7 = 0x656C67676F74;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE800000000000000;
            v10 = 0x657469726F766166;
            if (v7 != 0x657469726F766166)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v8 = 0xE800000000000000;
        v7 = 0x657469726F766166;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x69726F7661666E75;
      else
        v10 = 0x656C67676F74;
      if (v9 == 1)
        v11 = 0xEA00000000006574;
      else
        v11 = 0xE600000000000000;
      if (v7 != v10)
        goto LABEL_19;
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n(v8, 2);
        return v4;
      }
LABEL_19:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v10, v11, 0);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_100142A10(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x64726177726F66;
    else
      v6 = 1801675106;
    if ((a1 & 1) != 0)
      v7 = 0xE700000000000000;
    else
      v7 = 0xE400000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x64726177726F66 : 1801675106;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE700000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_100142B44(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    a3(0);
    v8 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v9 = static NSObject.== infix(_:_:)(v8, a1);

    if ((v9 & 1) == 0)
    {
      v10 = ~v5;
      for (i = (i + 1) & v10; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v10)
      {
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v12 = static NSObject.== infix(_:_:)(v11, a1);

        if ((v12 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_100142C4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008958C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for DOCBrowserContainerController, (unint64_t *)&unk_100644368, &qword_100644360, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E0F80);
}

uint64_t sub_100142C70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_100644408, &qword_100644400, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_100644400);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100142E8C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008958C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for DOCSearchSuggestion, &qword_100644308, &qword_100644300, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E0F80);
}

uint64_t sub_100142EB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_100644588, &qword_100644580, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_100644580);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001430CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_100062698(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_10006922C(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          swift_unknownObjectRetain(*v24);
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_10006922C(a4);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001432DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_100644328, &qword_100644CE0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_100644CE0);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001434F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_100644380, &qword_100644378, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_100644378);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100143714(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_100644440, (uint64_t *)&unk_100644430, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C((uint64_t *)&unk_100644430);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_100647CB0, UIApplicationShortcutItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100143930(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_1006445C8, &qword_1006445B8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_1006445B8);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100143B4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_1006445E0, &qword_1006445D8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_1006445D8);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100143D68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_100644398, &qword_100644388, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_100644388);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, &qword_100644390, DOCRemoteBarButton_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_100143F84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  if ((unint64_t)a1 >> 62)
    goto LABEL_52;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_62;
      }
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v3 = 0;
      v4 = 0;
      v5 = _swiftEmptyArrayStorage;
      v6 = &_swiftEmptyArrayStorage[4];
      while (1)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        if (!v3)
        {
          v8 = v5[3];
          if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_50;
          v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
          if (v9 <= 1)
            v10 = 1;
          else
            v10 = v9;
          v11 = sub_10006922C(&qword_100644970);
          v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
          v13 = j__malloc_size(v12);
          v14 = v13 - 32;
          if (v13 < 32)
            v14 = v13 - 17;
          v15 = v14 >> 4;
          v12[2] = v10;
          v12[3] = 2 * (v14 >> 4);
          v16 = (unint64_t)(v12 + 4);
          v17 = v5[3] >> 1;
          if (v5[2])
          {
            if (v12 != v5 || v16 >= (unint64_t)&v5[2 * v17 + 4])
              memmove(v12 + 4, v5 + 4, 16 * v17);
            v5[2] = 0;
          }
          v6 = (_QWORD *)(v16 + 16 * v17);
          v3 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release(v5);
          v5 = v12;
        }
        v19 = __OFSUB__(v3--, 1);
        if (v19)
          break;
        *v6 = v4;
        v6[1] = v7;
        v6 += 2;
        if (v2 == ++v4)
          goto LABEL_47;
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      if (a1 < 0)
        v38 = a1;
      else
        v38 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v2 = _CocoaArrayWrapper.endIndex.getter(v38);
      if (!v2)
        goto LABEL_56;
    }
    v3 = 0;
    v20 = 0;
    v5 = _swiftEmptyArrayStorage;
    v21 = &_swiftEmptyArrayStorage[4];
    do
    {
      v22 = *(void **)(a1 + 8 * v20 + 32);
      if (v3)
      {
        v23 = v22;
        v19 = __OFSUB__(v3--, 1);
        if (v19)
          goto LABEL_49;
      }
      else
      {
        v24 = v5[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_51;
        v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1)
          v26 = 1;
        else
          v26 = v25;
        v27 = sub_10006922C(&qword_100644970);
        v28 = (_QWORD *)swift_allocObject(v27, 16 * v26 + 32, 7);
        v29 = j__malloc_size(v28);
        v30 = v29 - 32;
        if (v29 < 32)
          v30 = v29 - 17;
        v31 = v30 >> 4;
        v28[2] = v26;
        v28[3] = 2 * (v30 >> 4);
        v32 = v28 + 4;
        v33 = v5[3] >> 1;
        v21 = &v28[2 * v33 + 4];
        v34 = (v31 & 0x7FFFFFFFFFFFFFFFLL) - v33;
        if (v5[2])
        {
          if (v28 != v5 || v32 >= &v5[2 * v33 + 4])
            memmove(v32, v5 + 4, 16 * v33);
          v36 = v22;
          v5[2] = 0;
        }
        else
        {
          v37 = v22;
        }
        swift_release(v5);
        v5 = v28;
        v19 = __OFSUB__(v34, 1);
        v3 = v34 - 1;
        if (v19)
          goto LABEL_49;
      }
      *v21 = v20;
      v21[1] = v22;
      v21 += 2;
      ++v20;
    }
    while (v2 != v20);
LABEL_47:
    swift_bridgeObjectRelease(a1);
  }
  else
  {
LABEL_56:
    swift_bridgeObjectRelease(a1);
    v3 = 0;
    v5 = _swiftEmptyArrayStorage;
  }
  v39 = v5[3];
  if (v39 >= 2)
  {
    v40 = v39 >> 1;
    v19 = __OFSUB__(v40, v3);
    v41 = v40 - v3;
    if (v19)
LABEL_62:
      __break(1u);
    else
      v5[2] = v41;
  }
}

void sub_100144250()
{
  sub_10013A944();
}

void sub_100144270()
{
  sub_10013A618();
}

unint64_t sub_100144290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 40 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
      {
        v14 = (_QWORD *)(v9 + 40 * i);
        v15 = v14[1];
        if (*v14 == a1 && v15 == a2)
          break;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_100144398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  swift_bridgeObjectRetain(a2);
  String.hash(into:)(v7, a1, a2);
  swift_bridgeObjectRelease(a2);
  v5 = Hasher._finalize()();
  return sub_100144290(a1, a2, v5);
}

unint64_t sub_10014440C()
{
  void *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  unint64_t result;
  char *v6;
  id v7;
  void *v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13[24];

  v1 = (char *)objc_msgSend(v0, "hierarchyController");
  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v13, 0, 0);
  v3 = *v2;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v12 = v3;
    else
      v12 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = (char *)_CocoaArrayWrapper.endIndex.getter(v12);
    if (!v4)
    {
LABEL_9:

      swift_bridgeObjectRelease(v3);
      v7 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "trashedItemsLocation");
      v8 = v7;
      if (v4)
      {
        if (v7)
        {
          sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
          v9 = v4;
          v10 = static NSObject.== infix(_:_:)(v9, v8);

          v11 = v10 ^ 1;
          return v11 & 1;
        }

      }
      else
      {
        if (!v7)
        {
          v11 = 0;
          return v11 & 1;
        }

      }
      v11 = 1;
      return v11 & 1;
    }
  }
  else
  {
    v4 = *(char **)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (!v4)
      goto LABEL_9;
  }
  result = (unint64_t)(v4 - 1);
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_24:
    v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = (char *)*(id *)(v3 + 8 * result + 32);
LABEL_8:
    v4 = v6;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001445A4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  id v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static DOCTabSwitcherStyle.preferredStyle(for:traitCollection:splitState:)(a2, 0, 2, 0);
  if (!a1)
    goto LABEL_9;
  v9 = v8;
  v10 = DOCDocumentSourceIdentifierRecentDocuments;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  if (v11 == v14 && v13 == v15)
  {
    v22 = a1;
    swift_bridgeObjectRelease_n(v13, 2);
    if (!v9)
    {
LABEL_8:

LABEL_9:
      v20 = off_100644178;
      v42 = qword_100644170;
      v21 = swift_bridgeObjectRetain(off_100644178);
      goto LABEL_12;
    }
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    v19 = a1;
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0 || !v9)
      goto LABEL_8;
  }
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v20 = v23;

LABEL_12:
  v24 = Logger.StateStore.unsafeMutableAddressor(v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
  v25 = a1;
  swift_bridgeObjectRetain_n(v20, 2);
  v26 = v25;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(32, -1);
    v30 = swift_slowAlloc(96, -1);
    v41 = v5;
    v31 = v30;
    v44 = v30;
    *(_DWORD *)v29 = 136315650;
    v43 = sub_1000544FC(0xD00000000000002ELL, 0x8000000100510E60, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    *(_WORD *)(v29 + 12) = 2080;
    v43 = (uint64_t)a1;
    v32 = v26;
    v33 = sub_10006922C((uint64_t *)&unk_10064D870);
    v40 = v4;
    v34 = String.init<A>(describing:)(&v43, v33);
    v36 = v35;
    v43 = sub_1000544FC(v34, v35, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);

    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v29 + 22) = 2080;
    swift_bridgeObjectRetain(v20);
    v37 = v42;
    v43 = sub_1000544FC(v42, (unint64_t)v20, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    swift_bridgeObjectRelease_n(v20, 3);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s in identifier: %s out identifier: %s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy(v31, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v40);
  }
  else
  {

    swift_bridgeObjectRelease_n(v20, 2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v42;
  }
  return v37;
}

void sub_100144920(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  Class isa;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _OWORD v57[2];
  __int128 v58;
  void *v59;

  v54 = a1;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)objc_opt_self(DOCUserInterfaceStateStore);
  v10 = objc_msgSend(v9, "sharedStore");
  v55 = a3;
  v11 = objc_msgSend(v10, "interfaceStateForConfiguration:", a3);

  if (v11)
  {
    v51 = v9;
    v12 = sub_1001445A4(a2, v55);
    v13 = a2;
    v15 = v14;
    v16 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCUserDefaultsDisplayModeKey);
    v53 = v11;
    v19 = v18;
    v59 = &type metadata for Int;
    *(_QWORD *)&v58 = v54;
    sub_100079B28(&v58, v57);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
    v56 = v16;
    sub_100356D3C(v57, v17, v19, isUniquelyReferenced_nonNull_native);
    v21 = v56;
    v22 = v19;
    v23 = v53;
    swift_bridgeObjectRelease(v22);
    v24 = objc_msgSend(v23, "displayModes", swift_bridgeObjectRelease(0x8000000000000000).n128_f64[0]);
    v49 = (char *)&type metadata for Any + 8;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    v48 = v12;
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setValue:forKey:", isa, v26);

    v28 = Logger.StateStore.unsafeMutableAddressor(v27);
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v52 = v5;
    v29(v8, v28, v5);
    v50 = v13;
    v30 = v13;
    v31 = swift_bridgeObjectRetain(v15);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(42, -1);
      v47 = v6;
      v35 = v34;
      v46 = swift_slowAlloc(128, -1);
      *(_QWORD *)&v58 = v46;
      *(_DWORD *)v35 = 136315906;
      *(_QWORD *)&v57[0] = sub_1000544FC(0xD00000000000002CLL, 0x80000001005110C0, (uint64_t *)&v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v57, (char *)v57 + 8);
      *(_WORD *)(v35 + 12) = 2080;
      *(_QWORD *)&v57[0] = v54;
      v36 = String.init<A>(describing:)(v57, &type metadata for DOCDisplayMode);
      v38 = v37;
      *(_QWORD *)&v57[0] = sub_1000544FC(v36, v37, (uint64_t *)&v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v57, (char *)v57 + 8);
      swift_bridgeObjectRelease(v38);
      *(_WORD *)(v35 + 22) = 2080;
      swift_bridgeObjectRetain(v15);
      *(_QWORD *)&v57[0] = sub_1000544FC(v48, v15, (uint64_t *)&v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v57, (char *)v57 + 8);
      swift_bridgeObjectRelease_n(v15, 3);
      *(_WORD *)(v35 + 32) = 2080;
      *(_QWORD *)&v57[0] = v50;
      v39 = v30;
      v40 = sub_10006922C((uint64_t *)&unk_10064D870);
      v41 = String.init<A>(describing:)(v57, v40);
      v43 = v42;
      *(_QWORD *)&v57[0] = sub_1000544FC(v41, v42, (uint64_t *)&v58);
      v23 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v57, (char *)v57 + 8);

      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s saving new value: \"%s\" to defaults: %s for identifier: %s", (uint8_t *)v35, 0x2Au);
      v44 = v46;
      swift_arrayDestroy(v46, 4, v49);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v52);
    }
    else
    {

      swift_bridgeObjectRelease_n(v15, 2);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v52);
    }
    v45 = objc_msgSend(v51, "sharedStore");
    objc_msgSend(v45, "updateInterfaceState:forConfiguration:", v23, v55);

  }
}

uint64_t sub_100144DC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100144E00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001339D0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100144E10()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_100144E34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100139C08();
  *a1 = result;
  return result;
}

uint64_t sub_100144E5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100139D54(*(void **)(v1 + 16), a1);
}

uint64_t _s13FocusBackstopCMa()
{
  return objc_opt_self(_TtCE5FilesCSo36DOCFullDocumentManagerViewControllerP33_6DB6B51135FB5D224397F02A0ADB066D13FocusBackstop);
}

uint64_t type metadata accessor for DOCWorkaround()
{
  return objc_opt_self(_TtC5Files13DOCWorkaround);
}

uint64_t sub_100144EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100144EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100144F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

void sub_100144F64()
{
  void *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char v13[24];

  v1 = (char *)objc_msgSend(v0, "dataSource");
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v2 == 2)
  {
    v3 = objc_msgSend(v0, "internalNavigationController");
    v12 = objc_msgSend(v3, "topViewController");

    if (v12)
    {
      v4 = type metadata accessor for DOCColumnViewController(0);
      v5 = swift_dynamicCastClass(v12, v4);
      if (!v5)
      {

        return;
      }
      v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
      swift_beginAccess(v5 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v13, 0, 0);
      v7 = *v6;
      if ((unint64_t)v7 >> 62)
      {
        if (v7 < 0)
          v11 = v7;
        else
          v11 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v7);
        v8 = (char *)_CocoaArrayWrapper.endIndex.getter(v11);
        if (!v8)
          goto LABEL_12;
      }
      else
      {
        v8 = *(char **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v7);
        if (!v8)
        {
LABEL_12:
          swift_bridgeObjectRelease(v7);
          sub_10037CBF8(v8, 1, 0, 0);

          return;
        }
      }
      v9 = v8 - 1;
      if (__OFSUB__(v8, 1))
      {
        __break(1u);
      }
      else if ((v7 & 0xC000000000000001) == 0)
      {
        if (((unint64_t)v9 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v10 = (char *)*(id *)(v7 + 8 * (_QWORD)v9 + 32);
LABEL_11:
          v8 = v10;
          goto LABEL_12;
        }
        __break(1u);
        return;
      }
      v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      goto LABEL_11;
    }
  }
}

char *sub_100145114()
{
  void *v0;
  char *result;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  _BYTE v11[24];

  result = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (result)
  {
    v2 = result;
    v3 = (void **)&result[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&result[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v11, 0, 0);
    v4 = *v3;
    if (v4
      && (v5 = type metadata accessor for DOCItemCollectionViewController(0),
          (v6 = swift_dynamicCastClass(v4, v5)) != 0))
    {
      v7 = v6;
      v8 = v4;

      v9 = (char *)objc_retain(*(id *)(v7
                                     + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

      v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
      swift_bridgeObjectRetain(v10);

      if (*(_QWORD *)(v10 + 16))
      {
        swift_bridgeObjectRetain(v10);
        __asm { BR              X8 }
      }
      swift_bridgeObjectRelease(v10);
    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t sub_1001453FC()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD *v10;
  _BYTE v12[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v12, 0, 0);
    v4 = *v3;
    if (v4
      && (v5 = type metadata accessor for DOCItemCollectionViewController(0),
          (v6 = swift_dynamicCastClass(v4, v5)) != 0))
    {
      v7 = v6;
      v8 = v4;

      v9 = *(id *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
      v10 = sub_100053FC4();

      if (v10[2])
      {
        swift_bridgeObjectRetain(v10);
        __asm { BR              X8 }
      }
      swift_bridgeObjectRelease(v10);
    }
    else
    {

    }
  }
  return 8;
}

uint64_t sub_1001456B8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 16);
  v3 = *(id *)a1;
  v4 = v2;
  return a1;
}

void **sub_1001456E8(void **a1)
{
  void *v2;

  v2 = *a1;

  return a1;
}

uint64_t sub_100145718(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 104);
  v7 = *(id *)a1;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  return a1;
}

uint64_t sub_100145770(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);

  return a1;
}

uint64_t sub_1001457CC(uint64_t a1)
{
  uint64_t v1;

  return sub_10043EB68(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1001457D4()
{
  uint64_t v0;

  sub_10013EDA0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001457DC()
{
  uint64_t v0;

  sub_10013E02C(*(_QWORD *)(v0 + 24), 4u);
}

uint64_t sub_100145804()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100145818(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id result;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(void **)(v2 + 24);
  result = objc_msgSend(a1, "isCancelled");
  if ((_DWORD)result)
  {
    (*(void (**)(void))(*(_QWORD *)v3 + 160))();
    return objc_msgSend(v4, "setUpdateLocationsAfterPopTransition:", 0);
  }
  return result;
}

uint64_t sub_100145874()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1001458A8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001458CC(uint64_t a1)
{
  uint64_t v1;

  return sub_100267D18(a1, v1);
}

void sub_1001458D4(uint64_t a1)
{
  uint64_t v1;

  sub_100440EF8(a1, *(char **)(v1 + 16));
}

uint64_t sub_1001458DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_100145900()
{
  uint64_t v0;

  return sub_10013B540(v0);
}

uint64_t sub_100145908()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100145934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10013B6B8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10014593C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100145970(uint64_t a1)
{
  uint64_t v1;

  return sub_10013C4DC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_100145980()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1001459C4()
{
  uint64_t v0;

  sub_10013C190(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1001459D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100145A14()
{
  uint64_t v0;

  sub_10013C2E4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100145A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_100145AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001370EC(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + v7), *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100145B38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100145B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10013772C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1005C9D30, (uint64_t)sub_100145B98, (uint64_t)&unk_1005C9D48);
}

uint64_t sub_100145B98()
{
  return sub_100146104((uint64_t (*)(_QWORD, uint64_t))sub_100136BE8);
}

uint64_t sub_100145BA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100145BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100136CE4(a1, a2, *(void **)(v2 + 16));
}

void sub_100145BD0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100136EBC(a1, a2, *(void **)(v2 + 16));
}

id sub_100145BD8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "beginRenameOf:", *(_QWORD *)(v0 + 24));
}

id sub_100145BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10013772C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1005C9F10, (uint64_t)sub_100145B98, (uint64_t)&unk_1005C9F28);
}

uint64_t sub_100145C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_100145CC4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100419B8C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(_QWORD *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100145D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_100145DD8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1001375F8(v0 + v2, *(void **)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100145E28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100145E4C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100145E80(void *a1)
{
  uint64_t *v1;

  sub_100188FF0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100145E90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_100145EBC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1001353B8(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100145EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100145F40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_1001356B8(*(void **)(v0 + 16), *(void **)(v0 + 24), (void *)(v0 + ((v1 + 32) & ~v1)));
}

uint64_t sub_100145F70(uint64_t *a1)
{
  uint64_t v1;

  return sub_100135BE8(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32)) & 1;
}

uint64_t sub_100145F90()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100145FB4(char a1)
{
  uint64_t v1;

  return sub_10037CFE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100145FBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100145FE0()
{
  uint64_t v0;

  DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(*(void **)(v0 + 24), 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
}

void sub_100146014()
{
  uint64_t v0;

  sub_100134398(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100146028()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100146054()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

void sub_10014607C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100132FE4(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100146084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001460F8()
{
  return sub_100146104((uint64_t (*)(_QWORD, uint64_t))sub_10013330C);
}

uint64_t sub_100146104(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

id sub_100146144(id result, void *a2)
{
  id v2;
  id v3;

  if (result)
  {
    v3 = result;
    v2 = a2;
    return v3;
  }
  return result;
}

void sub_100146170(void *a1, void *a2)
{
  if (a1)
  {

  }
}

uint64_t sub_10014619C()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

double sub_1001461D0(uint64_t a1)
{
  void **v1;

  return sub_1001320AC(a1, v1[2], v1[3], v1[4]);
}

void sub_1001461E0(uint64_t a1)
{
  uint64_t v1;

  sub_100132204(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

double sub_1001461EC(uint64_t a1)
{
  uint64_t v1;

  return sub_100482720(a1, *(void (**)(_QWORD, __n128))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001461F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100146228()
{
  uint64_t v0;

  return sub_1003FDE7C(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100146238()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10014626C()
{
  uint64_t v0;

  sub_100132598(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100146278()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001462A4()
{
  uint64_t v0;

  sub_1001326BC(*(void **)(v0 + 16));
}

uint64_t sub_1001462B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001462E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100146320()
{
  uint64_t v0;

  sub_10013B3AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10014632C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100146370()
{
  uint64_t v0;

  sub_100133D88(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_100146384()
{
  uint64_t v0;

  return sub_100133E78(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_100146394()
{
  uint64_t v0;

  sub_1001340A4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1001463A0()
{
  unint64_t result;

  result = qword_100645FF0;
  if (!qword_100645FF0)
  {
    result = swift_getWitnessTable(&unk_1004E5EE0, &type metadata for DOCBrowserLayoutConfiguration.Trait);
    atomic_store(result, (unint64_t *)&qword_100645FF0);
  }
  return result;
}

uint64_t sub_100146530(uint64_t *a1)
{
  return sub_10012B7C8(a1) & 1;
}

uint64_t sub_100146578(uint64_t a1, unint64_t a2)
{
  objc_class *v4;
  objc_class *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  objc_class *v9;
  unint64_t v10;
  objc_class *v11;
  objc_class *v12;
  uint64_t v13;
  unint64_t v14;
  NSBundle v15;
  uint64_t v16;
  unint64_t v17;
  objc_class *v18;
  objc_class *v19;
  objc_class *v20;
  objc_class *v21;
  objc_class *v22;
  objc_class *v23;
  uint64_t countAndFlagsBits;
  objc_class *v25;
  unint64_t v27;

  switch(a2)
  {
    case 0uLL:
      v4 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v4)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1001469C0);
      }
      v5 = v4;
      v6 = 0xD000000000000034;
      v27 = 0x8000000100511380;
      v7 = 0x75636F4420464450;
      v8 = 1953391981;
      goto LABEL_17;
    case 1uLL:
      v9 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v9)
        goto LABEL_31;
      v5 = v9;
      v6 = 0xD00000000000002CLL;
      v27 = 0x8000000100511350;
      v7 = 0x736567616D49;
      v10 = 0xE600000000000000;
      goto LABEL_27;
    case 2uLL:
      v11 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v11)
        goto LABEL_32;
      v5 = v11;
      v27 = 0x8000000100511310;
      v7 = 0x636973754DLL;
      v10 = 0xE500000000000000;
      goto LABEL_10;
    case 3uLL:
      v12 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v12)
        goto LABEL_33;
      v5 = v12;
      v27 = 0x80000001005112D0;
      v7 = 0x736569766F4DLL;
      v10 = 0xE600000000000000;
LABEL_10:
      v13 = 0x617A696C61636F4CLL;
      v14 = 0xEB00000000656C62;
      v15.super.isa = v5;
      v16 = 0;
      v17 = 0xE000000000000000;
      v6 = 0xD000000000000031;
      goto LABEL_28;
    case 4uLL:
      v18 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v18)
        goto LABEL_34;
      v5 = v18;
      v6 = 0xD000000000000045;
      v10 = 0xE900000000000073;
      v27 = 0x8000000100511280;
      v7 = 0x746E656D75636F44;
      goto LABEL_27;
    case 5uLL:
      v19 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v19)
        goto LABEL_35;
      v5 = v19;
      v6 = 0xD000000000000032;
      v27 = 0x8000000100511240;
      v7 = 0x6873646165727053;
      v10 = 0xEC00000073746565;
      goto LABEL_27;
    case 6uLL:
      v20 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v20)
        goto LABEL_36;
      v5 = v20;
      v6 = 0xD00000000000003CLL;
      v27 = 0x8000000100511200;
      v7 = 0x61746E6573657250;
      v8 = 1852795252;
LABEL_17:
      v10 = v8 | 0xED00007300000000;
      goto LABEL_27;
    case 7uLL:
      v21 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v21)
        goto LABEL_37;
      v5 = v21;
      v6 = 0xD000000000000037;
      v27 = 0x80000001005111C0;
      v7 = 0x65706F6C65766544;
      v10 = 0xE900000000000072;
      goto LABEL_27;
    case 8uLL:
      v25 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v25)
        goto LABEL_40;
      v5 = v25;
      v6 = 0xD000000000000034;
      v27 = 0x8000000100511180;
      v7 = 0x7365766968637241;
      v10 = 0xE800000000000000;
      goto LABEL_27;
    case 9uLL:
      v22 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v22)
        goto LABEL_38;
      v5 = v22;
      v6 = 0xD00000000000002DLL;
      v27 = 0x8000000100511150;
      v7 = 0x737265646C6F46;
      v10 = 0xE700000000000000;
      goto LABEL_27;
    case 0xAuLL:
      v23 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v23)
        goto LABEL_39;
      v5 = v23;
      v6 = 0xD00000000000004FLL;
      v27 = 0x8000000100511100;
      v7 = 0x726568744FLL;
      v10 = 0xE500000000000000;
LABEL_27:
      v13 = 0x617A696C61636F4CLL;
      v14 = 0xEB00000000656C62;
      v15.super.isa = v5;
      v16 = 0;
      v17 = 0xE000000000000000;
LABEL_28:
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, *(Swift::String_optional *)&v13, v15, *(Swift::String *)&v16, *(Swift::String *)&v6)._countAndFlagsBits;

LABEL_29:
      sub_1000D1378(a1, a2);
      return countAndFlagsBits;
    default:
      countAndFlagsBits = a1;
      goto LABEL_29;
  }
}

void sub_1001469EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::UInt v5;

  switch(a3)
  {
    case 0:
      v5 = 0;
      goto LABEL_14;
    case 1:
      v5 = 1;
      goto LABEL_14;
    case 2:
      v5 = 2;
      goto LABEL_14;
    case 3:
      v5 = 3;
      goto LABEL_14;
    case 4:
      v5 = 4;
      goto LABEL_14;
    case 5:
      v5 = 5;
      goto LABEL_14;
    case 6:
      v5 = 6;
      goto LABEL_14;
    case 7:
      v5 = 7;
      goto LABEL_14;
    case 8:
      v5 = 8;
      goto LABEL_14;
    case 9:
      v5 = 9;
      goto LABEL_14;
    case 10:
      v5 = 11;
LABEL_14:
      Hasher._combine(_:)(v5);
      break;
    default:
      Hasher._combine(_:)(0xAuLL);
      String.hash(into:)(a1, a2, a3);
      break;
  }
}

Swift::Int sub_100146AB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  sub_1001469EC((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_100146AFC(uint64_t a1)
{
  uint64_t *v1;

  sub_1001469EC(a1, *v1, v1[1]);
}

Swift::Int sub_100146B04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  sub_1001469EC((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100146B48(uint64_t *a1, uint64_t a2)
{
  return sub_10014748C(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

void *sub_100146B5C()
{
  void *result;

  result = (void *)sub_1003F0ED8((uint64_t)_swiftEmptyArrayStorage);
  off_100644610 = result;
  return result;
}

_QWORD *sub_100146B80(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v4;
  _QWORD *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  Swift::Int v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  _QWORD *v51;
  Swift::UInt v52;
  Swift::Int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v64;
  int64_t v65;
  unint64_t v66;
  __int128 v67;
  _QWORD v68[9];

  v7 = a2;
  v9 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain(a2);
  if (!v9)
    return v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  v10 = sub_100149644(a3, a1, a3);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(a1);
  v11 = sub_1000D020C((uint64_t)v10);
  swift_bridgeObjectRelease(v10);
  Hasher.init(_seed:)(v68, *(_QWORD *)(v11 + 40));
  Hasher._combine(_:)(0xBuLL);
  v12 = v68;
  v13 = Hasher._finalize()();
  v14 = *(_BYTE *)(v11 + 32);
  v15 = v14 & 0x3F;
  v16 = -1;
  v17 = v13 & ~(-1 << v14);
  if (((*(_QWORD *)(v11 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v12 = (_QWORD *)v11;
    do
    {
      if (*(_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v17 + 8) == 10)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
        v68[0] = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          goto LABEL_140;
        goto LABEL_9;
      }
      v17 = (v17 + 1) & ~(-1 << v14);
    }
    while (((*(_QWORD *)(v11 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
    v17 = v11;
  }
  else
  {
    v17 = v11;
  }
  while (2)
  {
    v22 = v17 + 56;
    v23 = 1 << v15;
    if (v23 < 64)
      v24 = ~(v16 << v23);
    else
      v24 = v16;
    v16 = v24 & *(_QWORD *)(v17 + 56);
    v65 = (unint64_t)(v23 + 63) >> 6;
    swift_bridgeObjectRetain(v17);
    v26 = 0;
    v66 = v17;
LABEL_14:
    v27 = (unint64_t)(v7 + 5);
    while (1)
    {
      if (v16)
      {
        v28 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v29 = v28 | (v26 << 6);
        goto LABEL_31;
      }
      v30 = v26 + 1;
      if (__OFADD__(v26, 1))
      {
        __break(1u);
        goto LABEL_73;
      }
      if ((uint64_t)v30 >= v65)
        goto LABEL_69;
      v31 = *(_QWORD *)(v22 + 8 * v30);
      ++v26;
      if (!v31)
      {
        v26 = v30 + 1;
        if ((uint64_t)(v30 + 1) >= v65)
          goto LABEL_69;
        v31 = *(_QWORD *)(v22 + 8 * v26);
        if (!v31)
        {
          v26 = v30 + 2;
          if ((uint64_t)(v30 + 2) >= v65)
            goto LABEL_69;
          v31 = *(_QWORD *)(v22 + 8 * v26);
          if (!v31)
            break;
        }
      }
LABEL_30:
      v16 = (v31 - 1) & v31;
      v29 = __clz(__rbit64(v31)) + (v26 << 6);
LABEL_31:
      v33 = *(_QWORD *)(v17 + 48);
      v34 = *(_OWORD *)(v33 + 16 * v29);
      v35 = v7[2];
      v12 = *(_QWORD **)(v33 + 16 * v29 + 8);
      v67 = v34;
      if (!v35)
      {
LABEL_64:
        sub_1000D1378(v34, (unint64_t)v12);
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
          v7 = sub_100153328(0, v7[2] + 1, 1, v7);
        v42 = v7[2];
        v41 = v7[3];
        v12 = (_QWORD *)(v42 + 1);
        v43 = v67;
        if (v42 >= v41 >> 1)
        {
          v44 = sub_100153328((_QWORD *)(v41 > 1), v42 + 1, 1, v7);
          v43 = v67;
          v7 = v44;
        }
        v17 = v66;
        v7[2] = v12;
        *(_OWORD *)&v7[2 * v42 + 4] = v43;
        goto LABEL_14;
      }
      v36 = v34;
      v4 = v7 + 5;
LABEL_35:
      v37 = *v4;
      switch(*v4)
      {
        case 0uLL:
          if (v12)
            goto LABEL_34;
          goto LABEL_62;
        case 1uLL:
          if (v12 == (_QWORD *)1)
            goto LABEL_62;
          goto LABEL_34;
        case 2uLL:
          if (v12 == (_QWORD *)2)
            goto LABEL_62;
          goto LABEL_34;
        case 3uLL:
          if (v12 == (_QWORD *)3)
            goto LABEL_62;
          goto LABEL_34;
        case 4uLL:
          if (v12 == (_QWORD *)4)
            goto LABEL_62;
          goto LABEL_34;
        case 5uLL:
          if (v12 == (_QWORD *)5)
            goto LABEL_62;
          goto LABEL_34;
        case 6uLL:
          if (v12 == (_QWORD *)6)
            goto LABEL_62;
          goto LABEL_34;
        case 7uLL:
          if (v12 == (_QWORD *)7)
            goto LABEL_62;
          goto LABEL_34;
        case 8uLL:
          if (v12 == (_QWORD *)8)
            goto LABEL_62;
          goto LABEL_34;
        case 9uLL:
          if (v12 == (_QWORD *)9)
            goto LABEL_62;
          goto LABEL_34;
        case 0xAuLL:
          if (v12 != (_QWORD *)10)
            goto LABEL_34;
LABEL_62:
          sub_1000D1378(v36, v37);
          v17 = v66;
          continue;
        default:
          if ((unint64_t)v12 < 0xB)
            goto LABEL_34;
          v38 = *(v4 - 1);
          if (v38 == v36 && v37 == (_QWORD)v12)
          {
            v17 = v66;
          }
          else
          {
            v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v37, v36, v12, 0);
            *(_QWORD *)&v34 = v67;
            if ((v40 & 1) == 0)
            {
LABEL_34:
              v4 += 2;
              if (!--v35)
                goto LABEL_64;
              goto LABEL_35;
            }
            v17 = v66;
          }
          break;
      }
    }
    v32 = v30 + 3;
    if (v32 < v65)
    {
      v31 = *(_QWORD *)(v22 + 8 * v32);
      if (!v31)
      {
        while (1)
        {
          v26 = v32 + 1;
          if (__OFADD__(v32, 1))
            break;
          if (v26 >= v65)
            goto LABEL_69;
          v31 = *(_QWORD *)(v22 + 8 * v26);
          ++v32;
          if (v31)
            goto LABEL_30;
        }
        __break(1u);
LABEL_140:
        sub_1000CD0E8();
        v12 = (_QWORD *)v68[0];
LABEL_9:
        v19 = (uint64_t *)(v12[6] + 16 * v17);
        v20 = *v19;
        v21 = v19[1];
        v12 = v68;
        sub_10044555C(v17);
        v17 = v68[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_1000D13D0(v20, v21);
        v15 = *(_BYTE *)(v17 + 32) & 0x3F;
        continue;
      }
      v26 = v32;
      goto LABEL_30;
    }
    break;
  }
LABEL_69:
  swift_release(v17);
  v26 = (int64_t)(v7 + 4);
  v65 = v7[2];
  if (!v65)
  {
    swift_bridgeObjectRelease(v7);
    v45 = _swiftEmptyArrayStorage;
    v46 = _swiftEmptyArrayStorage;
    goto LABEL_137;
  }
  v4 = 0;
  v45 = _swiftEmptyArrayStorage;
  v64 = _swiftEmptyArrayStorage;
LABEL_75:
  v49 = *(_OWORD *)(v26 + 16 * (_QWORD)v4);
  v50 = *(_QWORD *)(v26 + 16 * (_QWORD)v4 + 8);
  v67 = v49;
  if (!*(_QWORD *)(v17 + 16))
  {
    sub_1000D1378(v49, v50);
    goto LABEL_129;
  }
  Hasher.init(_seed:)(v68, *(_QWORD *)(v17 + 40));
  switch(v50)
  {
    case 0uLL:
      v51 = v45;
      v52 = 0;
      goto LABEL_90;
    case 1uLL:
      v51 = v45;
      v52 = 1;
      goto LABEL_90;
    case 2uLL:
      v51 = v45;
      v52 = 2;
      goto LABEL_90;
    case 3uLL:
      v51 = v45;
      v52 = 3;
      goto LABEL_90;
    case 4uLL:
      v51 = v45;
      v52 = 4;
      goto LABEL_90;
    case 5uLL:
      v51 = v45;
      v52 = 5;
      goto LABEL_90;
    case 6uLL:
      v51 = v45;
      v52 = 6;
      goto LABEL_90;
    case 7uLL:
      v51 = v45;
      v52 = 7;
      goto LABEL_90;
    case 8uLL:
      v51 = v45;
      v52 = 8;
      goto LABEL_90;
    case 9uLL:
      v51 = v45;
      v52 = 9;
      goto LABEL_90;
    case 0xAuLL:
      v51 = v45;
      v52 = 11;
LABEL_90:
      Hasher._combine(_:)(v52);
      swift_bridgeObjectRetain(v17);
      break;
    default:
      v51 = v45;
      Hasher._combine(_:)(0xAuLL);
      swift_bridgeObjectRetain(v17);
      sub_1000D1378(v67, v50);
      String.hash(into:)(v68, v67, v50);
      break;
  }
  v53 = Hasher._finalize()();
  v54 = -1 << *(_BYTE *)(v17 + 32);
  v55 = v53 & ~v54;
  if (((*(_QWORD *)(v22 + ((v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
  {
    swift_bridgeObjectRelease(v17);
LABEL_128:
    v45 = v51;
LABEL_129:
    if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) != 0)
      v25 = v45;
    else
      v25 = sub_100153328(0, v45[2] + 1, 1, v45);
    v27 = v25[2];
    v30 = v25[3];
    v12 = (_QWORD *)(v27 + 1);
    v48 = v67;
    if (v27 < v30 >> 1)
    {
      v45 = v25;
      goto LABEL_74;
    }
LABEL_73:
    v47 = sub_100153328((_QWORD *)(v30 > 1), (int64_t)v12, 1, v25);
    v48 = v67;
    v25 = v47;
    v45 = v47;
    goto LABEL_74;
  }
  v56 = ~v54;
  v57 = *(_QWORD *)(v17 + 48);
  while (2)
  {
    v58 = (_QWORD *)(v57 + 16 * v55);
    v59 = v58[1];
    switch(v59)
    {
      case 0:
        if (v50)
          goto LABEL_94;
        goto LABEL_122;
      case 1:
        if (v50 == 1)
          goto LABEL_122;
        goto LABEL_94;
      case 2:
        if (v50 == 2)
          goto LABEL_122;
        goto LABEL_94;
      case 3:
        if (v50 == 3)
          goto LABEL_122;
        goto LABEL_94;
      case 4:
        if (v50 == 4)
          goto LABEL_122;
        goto LABEL_94;
      case 5:
        if (v50 == 5)
          goto LABEL_122;
        goto LABEL_94;
      case 6:
        if (v50 == 6)
          goto LABEL_122;
        goto LABEL_94;
      case 7:
        if (v50 == 7)
          goto LABEL_122;
        goto LABEL_94;
      case 8:
        if (v50 == 8)
          goto LABEL_122;
        goto LABEL_94;
      case 9:
        if (v50 == 9)
          goto LABEL_122;
        goto LABEL_94;
      case 10:
        if (v50 != 10)
          goto LABEL_94;
        goto LABEL_122;
      default:
        if (v50 < 0xB
          || (*v58 == (_QWORD)v67 ? (v60 = v59 == v50) : (v60 = 0),
              !v60 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v58, v59, v67, v50, 0) & 1) == 0))
        {
LABEL_94:
          v55 = (v55 + 1) & v56;
          if (((*(_QWORD *)(v22 + ((v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
          {
            v17 = v66;
            swift_bridgeObjectRelease(v66);
            v26 = (int64_t)(v7 + 4);
            goto LABEL_128;
          }
          continue;
        }
LABEL_122:
        v17 = v66;
        swift_bridgeObjectRelease(v66);
        if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) != 0)
        {
          v26 = (int64_t)(v7 + 4);
          v45 = v51;
          v25 = v64;
        }
        else
        {
          v25 = sub_100153328(0, v64[2] + 1, 1, v64);
          v26 = (int64_t)(v7 + 4);
          v45 = v51;
        }
        v27 = v25[2];
        v61 = v25[3];
        v12 = (_QWORD *)(v27 + 1);
        v48 = v67;
        if (v27 >= v61 >> 1)
        {
          v62 = sub_100153328((_QWORD *)(v61 > 1), v27 + 1, 1, v25);
          v48 = v67;
          v25 = v62;
          v64 = v62;
        }
        else
        {
          v64 = v25;
        }
LABEL_74:
        v4 = (unint64_t *)((char *)v4 + 1);
        v25[2] = v12;
        *(_OWORD *)&v25[2 * v27 + 4] = v48;
        if (v4 != (unint64_t *)v65)
          goto LABEL_75;
        swift_bridgeObjectRelease(v7);
        v46 = v64;
LABEL_137:
        swift_bridgeObjectRelease(v17);
        v68[0] = v46;
        sub_10012FC60((uint64_t)v45);
        return (_QWORD *)v68[0];
    }
  }
}

uint64_t sub_10014748C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  switch(a2)
  {
    case 0:
      if (a4)
        goto LABEL_28;
      result = 1;
      break;
    case 1:
      if (a4 != 1)
        goto LABEL_28;
      result = 1;
      break;
    case 2:
      if (a4 != 2)
        goto LABEL_28;
      result = 1;
      break;
    case 3:
      if (a4 != 3)
        goto LABEL_28;
      result = 1;
      break;
    case 4:
      if (a4 != 4)
        goto LABEL_28;
      result = 1;
      break;
    case 5:
      if (a4 != 5)
        goto LABEL_28;
      result = 1;
      break;
    case 6:
      if (a4 != 6)
        goto LABEL_28;
      result = 1;
      break;
    case 7:
      if (a4 != 7)
        goto LABEL_28;
      result = 1;
      break;
    case 8:
      if (a4 != 8)
        goto LABEL_28;
      result = 1;
      break;
    case 9:
      if (a4 != 9)
        goto LABEL_28;
      result = 1;
      break;
    case 10:
      if (a4 != 10)
        goto LABEL_28;
      result = 1;
      break;
    default:
      if (a4 < 0xB)
      {
LABEL_28:
        result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        result = 1;
      }
      else
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
      }
      break;
  }
  return result;
}

uint64_t sub_100147588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t (*v305)(char *, uint64_t, uint64_t);
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  unint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  _QWORD *v380;
  _QWORD *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  unint64_t v385;
  uint64_t v386;
  unint64_t v387;
  unint64_t v388;
  uint64_t v389;
  unint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t *v394;
  uint64_t v395;
  unint64_t v396;
  void *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v401;
  char v402;
  unint64_t v403;
  uint64_t v404;
  _BOOL8 v405;
  uint64_t v406;
  char v407;
  uint64_t v408;
  char v409;
  _QWORD *v410;
  uint64_t *v411;
  uint64_t v412;
  BOOL v413;
  uint64_t v414;
  uint64_t result;
  _QWORD v416[2];
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  uint64_t v425;
  char *v426;
  char *v427;
  char *v428;
  char *v429;
  char *v430;
  char *v431;
  char *v432;
  char *v433;
  unint64_t v434;
  char *v435;
  __int128 v436;
  unint64_t v437;
  __int128 v438;
  _QWORD *v439;
  _BYTE v440[24];
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  char v450[64];
  char v451[72];

  v416[1] = a1;
  v1 = type metadata accessor for UTType(0);
  v425 = *(_QWORD *)(v1 - 8);
  v2 = v425;
  v3 = __chkstk_darwin(v1);
  v426 = (char *)v416 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v428 = (char *)v416 - v6;
  v7 = __chkstk_darwin(v5);
  v427 = (char *)v416 - v8;
  v9 = __chkstk_darwin(v7);
  v430 = (char *)v416 - v10;
  v11 = __chkstk_darwin(v9);
  v429 = (char *)v416 - v12;
  v13 = __chkstk_darwin(v11);
  v433 = (char *)v416 - v14;
  v15 = __chkstk_darwin(v13);
  v432 = (char *)v416 - v16;
  v17 = __chkstk_darwin(v15);
  v431 = (char *)v416 - v18;
  v19 = __chkstk_darwin(v17);
  *(_QWORD *)&v436 = (char *)v416 - v20;
  v21 = __chkstk_darwin(v19);
  v435 = (char *)v416 - v22;
  v23 = __chkstk_darwin(v21);
  v437 = (unint64_t)v416 - v24;
  __chkstk_darwin(v23);
  v26 = (char *)v416 - v25;
  v27 = sub_10006922C(&qword_100644618);
  v28 = swift_allocObject(v27, 104, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1004DB480;
  v29 = sub_10006922C(&qword_100644620);
  inited = swift_initStackObject(v29, v451);
  v438 = xmmword_1004D9670;
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  v31 = static UTType.pdf.getter();
  v32 = UTType.identifier.getter(v31);
  v34 = v33;
  v35 = *(void (**)(char *, uint64_t))(v2 + 8);
  v35(v26, v1);
  *(_QWORD *)(inited + 48) = v32;
  *(_QWORD *)(inited + 56) = v34;
  *(_QWORD *)(v28 + 32) = sub_1003F0FFC(inited);
  v36 = swift_initStackObject(v29, v450);
  v417 = xmmword_1004DB490;
  *(_OWORD *)(v36 + 16) = v438;
  *(_OWORD *)(v36 + 32) = xmmword_1004DB490;
  v37 = static UTType.image.getter();
  v38 = UTType.identifier.getter(v37);
  v40 = v39;
  v35(v26, v1);
  *(_QWORD *)(v36 + 48) = v38;
  *(_QWORD *)(v36 + 56) = v40;
  *(_QWORD *)(v28 + 40) = sub_1003F0FFC(v36);
  v41 = swift_initStackObject(v29, &v449);
  v418 = xmmword_1004DB4A0;
  *(_OWORD *)(v41 + 16) = v438;
  *(_OWORD *)(v41 + 32) = xmmword_1004DB4A0;
  v42 = static UTType.audio.getter();
  v43 = UTType.identifier.getter(v42);
  v45 = v44;
  v35(v26, v1);
  *(_QWORD *)(v41 + 48) = v43;
  *(_QWORD *)(v41 + 56) = v45;
  *(_QWORD *)(v28 + 48) = sub_1003F0FFC(v41);
  v46 = swift_initStackObject(v29, &v448);
  v419 = xmmword_1004DB4B0;
  *(_OWORD *)(v46 + 16) = v438;
  *(_OWORD *)(v46 + 32) = xmmword_1004DB4B0;
  v47 = static UTType.video.getter();
  v48 = UTType.identifier.getter(v47);
  v50 = v49;
  v35(v26, v1);
  *(_QWORD *)(v46 + 48) = v48;
  *(_QWORD *)(v46 + 56) = v50;
  *(_QWORD *)(v28 + 56) = sub_1003F0FFC(v46);
  v51 = swift_initStackObject(v29, &v447);
  v420 = xmmword_1004DB4C0;
  *(_OWORD *)(v51 + 16) = v438;
  *(_OWORD *)(v51 + 32) = xmmword_1004DB4C0;
  v52 = static UTType.sourceCode.getter();
  v53 = UTType.identifier.getter(v52);
  v55 = v54;
  v35(v26, v1);
  *(_QWORD *)(v51 + 48) = v53;
  *(_QWORD *)(v51 + 56) = v55;
  *(_QWORD *)(v28 + 64) = sub_1003F0FFC(v51);
  v56 = swift_initStackObject(v29, &v446);
  v421 = xmmword_1004DB4D0;
  *(_OWORD *)(v56 + 16) = v438;
  *(_OWORD *)(v56 + 32) = xmmword_1004DB4D0;
  v57 = static UTType.plainText.getter();
  v58 = UTType.identifier.getter(v57);
  v60 = v59;
  v35(v26, v1);
  *(_QWORD *)(v56 + 48) = v58;
  *(_QWORD *)(v56 + 56) = v60;
  *(_QWORD *)(v28 + 72) = sub_1003F0FFC(v56);
  v61 = swift_initStackObject(v29, &v445);
  v424 = xmmword_1004DB4E0;
  *(_OWORD *)(v61 + 16) = v438;
  *(_OWORD *)(v61 + 32) = xmmword_1004DB4E0;
  v62 = static UTType.spreadsheet.getter();
  v63 = UTType.identifier.getter(v62);
  v65 = v64;
  v35(v26, v1);
  *(_QWORD *)(v61 + 48) = v63;
  *(_QWORD *)(v61 + 56) = v65;
  *(_QWORD *)(v28 + 80) = sub_1003F0FFC(v61);
  v66 = swift_initStackObject(v29, &v444);
  v423 = xmmword_1004DB4F0;
  *(_OWORD *)(v66 + 16) = v438;
  *(_OWORD *)(v66 + 32) = xmmword_1004DB4F0;
  v67 = static UTType.presentation.getter();
  v68 = UTType.identifier.getter(v67);
  v70 = v69;
  v35(v26, v1);
  *(_QWORD *)(v66 + 48) = v68;
  *(_QWORD *)(v66 + 56) = v70;
  *(_QWORD *)(v28 + 88) = sub_1003F0FFC(v66);
  v71 = swift_initStackObject(v29, &v443);
  v422 = xmmword_1004DB500;
  *(_OWORD *)(v71 + 16) = v438;
  *(_OWORD *)(v71 + 32) = xmmword_1004DB500;
  v72 = static UTType.folder.getter();
  v73 = UTType.identifier.getter(v72);
  v75 = v74;
  v35(v26, v1);
  *(_QWORD *)(v71 + 48) = v73;
  *(_QWORD *)(v71 + 56) = v75;
  v76 = sub_1003F0FFC(v71);
  v416[0] = v28;
  *(_QWORD *)(v28 + 96) = v76;
  v77 = sub_10006922C(&qword_100644628);
  v78 = swift_initStackObject(v77, &v442);
  *(_OWORD *)(v78 + 16) = xmmword_1004DB510;
  *(_QWORD *)(v78 + 32) = 0;
  *(_QWORD *)(v78 + 40) = 0;
  v79 = sub_10006922C(&qword_100643CC0);
  v434 = v79;
  v80 = swift_allocObject(v79, 48, 7);
  *(_OWORD *)(v80 + 16) = v438;
  v81 = static UTType.pdf.getter();
  v82 = UTType.identifier.getter(v81);
  v84 = v83;
  v35(v26, v1);
  *(_QWORD *)(v80 + 32) = v82;
  *(_QWORD *)(v80 + 40) = v84;
  *(_QWORD *)(v78 + 48) = v80;
  *(_OWORD *)(v78 + 56) = v417;
  v85 = swift_allocObject(v79, 208, 7);
  *(_OWORD *)(v85 + 16) = xmmword_1004DB520;
  v86 = static UTType.image.getter();
  v87 = UTType.identifier.getter(v86);
  v89 = v88;
  v90 = ((uint64_t (*)(char *, uint64_t))v35)(v26, v1);
  *(_QWORD *)(v85 + 32) = v87;
  *(_QWORD *)(v85 + 40) = v89;
  v91 = v437;
  v92 = static UTType.heic.getter(v90);
  v93 = UTType.identifier.getter(v92);
  v95 = v94;
  v96 = ((uint64_t (*)(unint64_t, uint64_t))v35)(v91, v1);
  *(_QWORD *)(v85 + 48) = v93;
  *(_QWORD *)(v85 + 56) = v95;
  v97 = v435;
  v98 = static UTType.jpeg.getter(v96);
  v99 = UTType.identifier.getter(v98);
  v101 = v100;
  v102 = ((uint64_t (*)(char *, uint64_t))v35)(v97, v1);
  *(_QWORD *)(v85 + 64) = v99;
  *(_QWORD *)(v85 + 72) = v101;
  v103 = v436;
  v104 = static UTType.tiff.getter(v102);
  v105 = UTType.identifier.getter(v104);
  v107 = v106;
  v108 = ((uint64_t (*)(uint64_t, uint64_t))v35)(v103, v1);
  *(_QWORD *)(v85 + 80) = v105;
  *(_QWORD *)(v85 + 88) = v107;
  v109 = v431;
  v110 = static UTType.gif.getter(v108);
  v111 = UTType.identifier.getter(v110);
  v113 = v112;
  v114 = ((uint64_t (*)(char *, uint64_t))v35)(v109, v1);
  *(_QWORD *)(v85 + 96) = v111;
  *(_QWORD *)(v85 + 104) = v113;
  v115 = v432;
  v116 = static UTType.png.getter(v114);
  v117 = UTType.identifier.getter(v116);
  v119 = v118;
  v120 = ((uint64_t (*)(char *, uint64_t))v35)(v115, v1);
  *(_QWORD *)(v85 + 112) = v117;
  *(_QWORD *)(v85 + 120) = v119;
  v121 = v433;
  v122 = static UTType.icns.getter(v120);
  v123 = UTType.identifier.getter(v122);
  v125 = v124;
  v126 = ((uint64_t (*)(char *, uint64_t))v35)(v121, v1);
  *(_QWORD *)(v85 + 128) = v123;
  *(_QWORD *)(v85 + 136) = v125;
  v127 = v429;
  v128 = static UTType.bmp.getter(v126);
  v129 = UTType.identifier.getter(v128);
  v131 = v130;
  v132 = ((uint64_t (*)(char *, uint64_t))v35)(v127, v1);
  *(_QWORD *)(v85 + 144) = v129;
  *(_QWORD *)(v85 + 152) = v131;
  v133 = v430;
  v134 = static UTType.ico.getter(v132);
  v135 = UTType.identifier.getter(v134);
  v137 = v136;
  v138 = ((uint64_t (*)(char *, uint64_t))v35)(v133, v1);
  *(_QWORD *)(v85 + 160) = v135;
  *(_QWORD *)(v85 + 168) = v137;
  v139 = v427;
  v140 = static UTType.rawImage.getter(v138);
  v141 = UTType.identifier.getter(v140);
  v143 = v142;
  v144 = ((uint64_t (*)(char *, uint64_t))v35)(v139, v1);
  *(_QWORD *)(v85 + 176) = v141;
  *(_QWORD *)(v85 + 184) = v143;
  v145 = v428;
  v146 = static UTType.svg.getter(v144);
  v147 = UTType.identifier.getter(v146);
  v149 = v148;
  v35(v145, v1);
  *(_QWORD *)(v85 + 192) = v147;
  *(_QWORD *)(v85 + 200) = v149;
  *(_QWORD *)(v78 + 72) = v85;
  *(_OWORD *)(v78 + 80) = v418;
  v150 = v434;
  v151 = swift_allocObject(v434, 112, 7);
  *(_OWORD *)(v151 + 16) = xmmword_1004DB530;
  v152 = static UTType.audio.getter();
  v153 = UTType.identifier.getter(v152);
  v155 = v154;
  v156 = ((uint64_t (*)(char *, uint64_t))v35)(v26, v1);
  *(_QWORD *)(v151 + 32) = v153;
  *(_QWORD *)(v151 + 40) = v155;
  v157 = v437;
  v158 = static UTType.mp3.getter(v156);
  v159 = UTType.identifier.getter(v158);
  v161 = v160;
  v162 = ((uint64_t (*)(unint64_t, uint64_t))v35)(v157, v1);
  *(_QWORD *)(v151 + 48) = v159;
  *(_QWORD *)(v151 + 56) = v161;
  v163 = v435;
  v164 = static UTType.mpeg4Audio.getter(v162);
  v165 = UTType.identifier.getter(v164);
  v167 = v166;
  v168 = ((uint64_t (*)(char *, uint64_t))v35)(v163, v1);
  *(_QWORD *)(v151 + 64) = v165;
  *(_QWORD *)(v151 + 72) = v167;
  v169 = v436;
  v170 = static UTType.wav.getter(v168);
  v171 = UTType.identifier.getter(v170);
  v173 = v172;
  v174 = ((uint64_t (*)(uint64_t, uint64_t))v35)(v169, v1);
  *(_QWORD *)(v151 + 80) = v171;
  *(_QWORD *)(v151 + 88) = v173;
  v175 = v431;
  v176 = static UTType.midi.getter(v174);
  v177 = UTType.identifier.getter(v176);
  v179 = v178;
  v35(v175, v1);
  *(_QWORD *)(v151 + 96) = v177;
  *(_QWORD *)(v151 + 104) = v179;
  *(_QWORD *)(v78 + 96) = v151;
  *(_OWORD *)(v78 + 104) = v419;
  v180 = swift_allocObject(v150, 144, 7);
  *(_OWORD *)(v180 + 16) = xmmword_1004DB540;
  v181 = static UTType.video.getter();
  v182 = UTType.identifier.getter(v181);
  v184 = v183;
  v185 = ((uint64_t (*)(char *, uint64_t))v35)(v26, v1);
  *(_QWORD *)(v180 + 32) = v182;
  *(_QWORD *)(v180 + 40) = v184;
  v186 = v437;
  v187 = static UTType.mpeg2Video.getter(v185);
  v188 = UTType.identifier.getter(v187);
  v190 = v189;
  v191 = ((uint64_t (*)(unint64_t, uint64_t))v35)(v186, v1);
  *(_QWORD *)(v180 + 48) = v188;
  *(_QWORD *)(v180 + 56) = v190;
  v192 = v435;
  v193 = static UTType.movie.getter(v191);
  v194 = UTType.identifier.getter(v193);
  v196 = v195;
  v197 = ((uint64_t (*)(char *, uint64_t))v35)(v192, v1);
  *(_QWORD *)(v180 + 64) = v194;
  *(_QWORD *)(v180 + 72) = v196;
  v198 = v436;
  v199 = static UTType.quickTimeMovie.getter(v197);
  v200 = UTType.identifier.getter(v199);
  v202 = v201;
  v203 = ((uint64_t (*)(uint64_t, uint64_t))v35)(v198, v1);
  *(_QWORD *)(v180 + 80) = v200;
  *(_QWORD *)(v180 + 88) = v202;
  v204 = v431;
  v205 = static UTType.mpeg.getter(v203);
  v206 = UTType.identifier.getter(v205);
  v208 = v207;
  v209 = v204;
  v210 = ((uint64_t (*)(char *, uint64_t))v35)(v204, v1);
  *(_QWORD *)(v180 + 96) = v206;
  *(_QWORD *)(v180 + 104) = v208;
  v211 = v432;
  v212 = static UTType.mpeg4Movie.getter(v210);
  v213 = UTType.identifier.getter(v212);
  v215 = v214;
  v216 = ((uint64_t (*)(char *, uint64_t))v35)(v211, v1);
  *(_QWORD *)(v180 + 112) = v213;
  *(_QWORD *)(v180 + 120) = v215;
  v217 = v433;
  v218 = static UTType.avi.getter(v216);
  v219 = UTType.identifier.getter(v218);
  v221 = v220;
  v35(v217, v1);
  *(_QWORD *)(v180 + 128) = v219;
  *(_QWORD *)(v180 + 136) = v221;
  *(_QWORD *)(v78 + 120) = v180;
  *(_OWORD *)(v78 + 128) = v420;
  v222 = swift_allocObject(v434, 320, 7);
  *(_OWORD *)(v222 + 16) = xmmword_1004DB550;
  v223 = static UTType.sourceCode.getter();
  v224 = UTType.identifier.getter(v223);
  v226 = v225;
  v227 = ((uint64_t (*)(char *, uint64_t))v35)(v26, v1);
  *(_QWORD *)(v222 + 32) = v224;
  *(_QWORD *)(v222 + 40) = v226;
  v228 = v437;
  v229 = static UTType.json.getter(v227);
  v230 = UTType.identifier.getter(v229);
  v232 = v231;
  v233 = ((uint64_t (*)(unint64_t, uint64_t))v35)(v228, v1);
  *(_QWORD *)(v222 + 48) = v230;
  *(_QWORD *)(v222 + 56) = v232;
  v234 = v435;
  v235 = static UTType.swiftSource.getter(v233);
  v236 = UTType.identifier.getter(v235);
  v238 = v237;
  v239 = ((uint64_t (*)(char *, uint64_t))v35)(v234, v1);
  *(_QWORD *)(v222 + 64) = v236;
  *(_QWORD *)(v222 + 72) = v238;
  v240 = v436;
  v241 = static UTType.objectiveCSource.getter(v239);
  v242 = UTType.identifier.getter(v241);
  v244 = v243;
  v245 = ((uint64_t (*)(uint64_t, uint64_t))v35)(v240, v1);
  *(_QWORD *)(v222 + 80) = v242;
  *(_QWORD *)(v222 + 88) = v244;
  v246 = static UTType.objectiveCPlusPlusSource.getter(v245);
  v247 = UTType.identifier.getter(v246);
  v249 = v248;
  v250 = ((uint64_t (*)(char *, uint64_t))v35)(v209, v1);
  *(_QWORD *)(v222 + 96) = v247;
  *(_QWORD *)(v222 + 104) = v249;
  v251 = v432;
  v252 = static UTType.cSource.getter(v250);
  v253 = UTType.identifier.getter(v252);
  v255 = v254;
  v256 = ((uint64_t (*)(char *, uint64_t))v35)(v251, v1);
  *(_QWORD *)(v222 + 112) = v253;
  *(_QWORD *)(v222 + 120) = v255;
  v257 = v433;
  v258 = static UTType.cHeader.getter(v256);
  v259 = UTType.identifier.getter(v258);
  v261 = v260;
  v262 = ((uint64_t (*)(char *, uint64_t))v35)(v257, v1);
  *(_QWORD *)(v222 + 128) = v259;
  *(_QWORD *)(v222 + 136) = v261;
  v263 = v429;
  v264 = static UTType.cPlusPlusSource.getter(v262);
  v265 = UTType.identifier.getter(v264);
  v267 = v266;
  v268 = ((uint64_t (*)(char *, uint64_t))v35)(v263, v1);
  *(_QWORD *)(v222 + 144) = v265;
  *(_QWORD *)(v222 + 152) = v267;
  v269 = v430;
  v270 = static UTType.cPlusPlusHeader.getter(v268);
  v271 = UTType.identifier.getter(v270);
  v273 = v272;
  v274 = ((uint64_t (*)(char *, uint64_t))v35)(v269, v1);
  *(_QWORD *)(v222 + 160) = v271;
  *(_QWORD *)(v222 + 168) = v273;
  v275 = v427;
  v276 = static UTType.propertyList.getter(v274);
  v277 = UTType.identifier.getter(v276);
  v279 = v278;
  v280 = ((uint64_t (*)(char *, uint64_t))v35)(v275, v1);
  *(_QWORD *)(v222 + 176) = v277;
  *(_QWORD *)(v222 + 184) = v279;
  v281 = v428;
  v282 = static UTType.xmlPropertyList.getter(v280);
  v283 = UTType.identifier.getter(v282);
  v285 = v284;
  v286 = ((uint64_t (*)(char *, uint64_t))v35)(v281, v1);
  *(_QWORD *)(v222 + 192) = v283;
  *(_QWORD *)(v222 + 200) = v285;
  v287 = v426;
  v288 = static UTType.binaryPropertyList.getter(v286);
  v289 = UTType.identifier.getter(v288);
  v291 = v290;
  v35(v287, v1);
  *(_QWORD *)(v222 + 208) = v289;
  *(_QWORD *)(v222 + 216) = v291;
  *(_QWORD *)(v222 + 224) = 0xD000000000000022;
  *(_QWORD *)(v222 + 232) = 0x80000001005113C0;
  *(_QWORD *)(v222 + 240) = 0xD000000000000015;
  *(_QWORD *)(v222 + 248) = 0x80000001005113F0;
  *(_QWORD *)(v222 + 256) = 0xD000000000000017;
  *(_QWORD *)(v222 + 264) = 0x8000000100511410;
  v428 = (char *)0xD000000000000016;
  *(_QWORD *)(v222 + 272) = 0xD000000000000016;
  *(_QWORD *)(v222 + 280) = 0x8000000100511430;
  *(_QWORD *)(v222 + 288) = 0xD00000000000001CLL;
  *(_QWORD *)(v222 + 296) = 0x8000000100511450;
  *(_QWORD *)(v222 + 304) = 0xD000000000000017;
  *(_QWORD *)(v222 + 312) = 0x8000000100511470;
  *(_QWORD *)(v78 + 144) = v222;
  *(_OWORD *)(v78 + 152) = v421;
  v292 = swift_allocObject(v434, 240, 7);
  *(_OWORD *)(v292 + 16) = xmmword_1004DB560;
  v293 = static UTType.plainText.getter();
  v294 = UTType.identifier.getter(v293);
  v296 = v295;
  v297 = ((uint64_t (*)(char *, uint64_t))v35)(v26, v1);
  *(_QWORD *)(v292 + 32) = v294;
  *(_QWORD *)(v292 + 40) = v296;
  v298 = v437;
  v299 = static UTType.rtf.getter(v297);
  v300 = UTType.identifier.getter(v299);
  v302 = v301;
  v303 = ((uint64_t (*)(unint64_t, uint64_t))v35)(v298, v1);
  *(_QWORD *)(v292 + 48) = v300;
  *(_QWORD *)(v292 + 56) = v302;
  v304 = UTType.docMSOfficeWordProcessing.unsafeMutableAddressor(v303);
  v305 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v425 + 16);
  v306 = v435;
  v307 = v305(v435, v304, v1);
  v308 = UTType.identifier.getter(v307);
  v310 = v309;
  v311 = ((uint64_t (*)(char *, uint64_t))v35)(v306, v1);
  *(_QWORD *)(v292 + 64) = v308;
  *(_QWORD *)(v292 + 72) = v310;
  v312 = UTType.docMSOfficeWordProcessingTemplate.unsafeMutableAddressor(v311);
  v313 = v436;
  v314 = v305((char *)v436, v312, v1);
  v315 = UTType.identifier.getter(v314);
  v317 = v316;
  v318 = ((uint64_t (*)(uint64_t, uint64_t))v35)(v313, v1);
  *(_QWORD *)(v292 + 80) = v315;
  *(_QWORD *)(v292 + 88) = v317;
  v319 = UTType.docMSOfficeXMLWordProcessing.unsafeMutableAddressor(v318);
  v320 = v431;
  v321 = v305(v431, v319, v1);
  v322 = UTType.identifier.getter(v321);
  v324 = v323;
  v325 = ((uint64_t (*)(char *, uint64_t))v35)(v320, v1);
  *(_QWORD *)(v292 + 96) = v322;
  *(_QWORD *)(v292 + 104) = v324;
  v326 = UTType.docOfficeOpenXMLWordProcessing.unsafeMutableAddressor(v325);
  v327 = v432;
  v328 = v305(v432, v326, v1);
  v329 = UTType.identifier.getter(v328);
  v331 = v330;
  v332 = ((uint64_t (*)(char *, uint64_t))v35)(v327, v1);
  *(_QWORD *)(v292 + 112) = v329;
  *(_QWORD *)(v292 + 120) = v331;
  v333 = UTType.docOfficeOpenXMLMacroEnabledWordProcessing.unsafeMutableAddressor(v332);
  v334 = v433;
  v335 = v305(v433, v333, v1);
  v336 = UTType.identifier.getter(v335);
  v338 = v337;
  v339 = ((uint64_t (*)(char *, uint64_t))v35)(v334, v1);
  *(_QWORD *)(v292 + 128) = v336;
  *(_QWORD *)(v292 + 136) = v338;
  v340 = UTType.docOfficeOpenXMLWordProcessingTemplate.unsafeMutableAddressor(v339);
  v341 = v429;
  v342 = v305(v429, v340, v1);
  v343 = UTType.identifier.getter(v342);
  v345 = v344;
  v346 = ((uint64_t (*)(char *, uint64_t))v35)(v341, v1);
  *(_QWORD *)(v292 + 144) = v343;
  *(_QWORD *)(v292 + 152) = v345;
  v347 = UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate.unsafeMutableAddressor(v346);
  v348 = v430;
  v349 = v305(v430, v347, v1);
  v350 = UTType.identifier.getter(v349);
  v352 = v351;
  v35(v348, v1);
  *(_QWORD *)(v292 + 160) = v350;
  *(_QWORD *)(v292 + 168) = v352;
  *(_QWORD *)(v292 + 176) = 0xD00000000000001FLL;
  *(_QWORD *)(v292 + 184) = 0x8000000100511490;
  *(_QWORD *)(v292 + 192) = 0xD00000000000001BLL;
  *(_QWORD *)(v292 + 200) = 0x80000001005114B0;
  *(_QWORD *)(v292 + 208) = 0xD00000000000001ELL;
  *(_QWORD *)(v292 + 216) = 0x80000001005114D0;
  *(_QWORD *)(v292 + 224) = 0xD000000000000020;
  *(_QWORD *)(v292 + 232) = 0x80000001005114F0;
  *(_QWORD *)(v78 + 168) = v292;
  *(_OWORD *)(v78 + 176) = v424;
  v353 = v434;
  v354 = swift_allocObject(v434, 48, 7);
  *(_OWORD *)(v354 + 16) = v438;
  v355 = static UTType.spreadsheet.getter();
  v356 = UTType.identifier.getter(v355);
  v358 = v357;
  v35(v26, v1);
  *(_QWORD *)(v354 + 32) = v356;
  *(_QWORD *)(v354 + 40) = v358;
  *(_QWORD *)(v78 + 192) = v354;
  *(_OWORD *)(v78 + 200) = v423;
  v359 = swift_allocObject(v353, 48, 7);
  *(_OWORD *)(v359 + 16) = v438;
  v360 = static UTType.presentation.getter();
  v361 = UTType.identifier.getter(v360);
  v363 = v362;
  v35(v26, v1);
  *(_QWORD *)(v359 + 32) = v361;
  *(_QWORD *)(v359 + 40) = v363;
  *(_QWORD *)(v78 + 216) = v359;
  *(_OWORD *)(v78 + 224) = v422;
  v364 = swift_allocObject(v353, 48, 7);
  *(_OWORD *)(v364 + 16) = v438;
  v365 = static UTType.folder.getter();
  v366 = UTType.identifier.getter(v365);
  v368 = v367;
  v35(v26, v1);
  *(_QWORD *)(v364 + 32) = v366;
  *(_QWORD *)(v364 + 40) = v368;
  *(_QWORD *)(v78 + 240) = v364;
  *(_OWORD *)(v78 + 248) = xmmword_1004DB570;
  v369 = swift_allocObject(v353, 160, 7);
  *(_OWORD *)(v369 + 16) = xmmword_1004DB580;
  v370 = static UTType.zip.getter();
  v371 = UTType.identifier.getter(v370);
  v373 = v372;
  v374 = ((uint64_t (*)(char *, uint64_t))v35)(v26, v1);
  *(_QWORD *)(v369 + 32) = v371;
  *(_QWORD *)(v369 + 40) = v373;
  v375 = v437;
  v376 = static UTType.gzip.getter(v374);
  v377 = UTType.identifier.getter(v376);
  v379 = v378;
  v35((char *)v375, v1);
  *(_QWORD *)(v369 + 48) = v377;
  *(_QWORD *)(v369 + 56) = v379;
  *(_QWORD *)(v369 + 64) = 0xD000000000000012;
  *(_QWORD *)(v369 + 72) = 0x8000000100511520;
  *(_QWORD *)(v369 + 80) = 0xD000000000000017;
  *(_QWORD *)(v369 + 88) = 0x8000000100511540;
  *(_QWORD *)(v369 + 96) = 0xD000000000000012;
  *(_QWORD *)(v369 + 104) = 0x8000000100511560;
  *(_QWORD *)(v369 + 112) = 0xD000000000000017;
  *(_QWORD *)(v369 + 120) = 0x8000000100511580;
  *(_QWORD *)(v369 + 128) = 0xD00000000000001BLL;
  *(_QWORD *)(v369 + 136) = 0x80000001005115A0;
  *(_QWORD *)(v369 + 144) = v428;
  *(_QWORD *)(v369 + 152) = 0x80000001005115C0;
  *(_QWORD *)(v78 + 264) = v369;
  v380 = (_QWORD *)sub_1003F1120(v78);
  if (qword_100640D78 != -1)
    goto LABEL_44;
LABEL_2:
  v381 = &off_100644610;
  swift_beginAccess(&off_100644610, &v441, 0, 0);
  if (*((_QWORD *)off_100644610 + 2))
    return v416[0];
  v382 = v380[8];
  v431 = (char *)(v380 + 8);
  v383 = 1 << *((_BYTE *)v380 + 32);
  v384 = -1;
  if (v383 < 64)
    v384 = ~(-1 << v383);
  v385 = v384 & v382;
  v432 = (char *)((unint64_t)(v383 + 63) >> 6);
  swift_bridgeObjectRetain(v380);
  v386 = 0;
  v430 = (char *)v380;
  do
  {
LABEL_7:
    if (v385)
    {
      v387 = __clz(__rbit64(v385));
      v385 &= v385 - 1;
      v388 = v387 | (v386 << 6);
    }
    else
    {
      v389 = v386 + 1;
      if (__OFADD__(v386, 1))
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      if (v389 >= (uint64_t)v432)
        goto LABEL_38;
      v390 = *(_QWORD *)&v431[8 * v389];
      ++v386;
      if (!v390)
      {
        v386 = v389 + 1;
        if (v389 + 1 >= (uint64_t)v432)
          goto LABEL_38;
        v390 = *(_QWORD *)&v431[8 * v386];
        if (!v390)
        {
          v386 = v389 + 2;
          if (v389 + 2 >= (uint64_t)v432)
            goto LABEL_38;
          v390 = *(_QWORD *)&v431[8 * v386];
          if (!v390)
          {
            v391 = v389 + 3;
            if (v391 >= (uint64_t)v432)
            {
LABEL_38:
              swift_release(v380);
              return v416[0];
            }
            v390 = *(_QWORD *)&v431[8 * v391];
            if (!v390)
            {
              while (1)
              {
                v386 = v391 + 1;
                if (__OFADD__(v391, 1))
                  break;
                if (v386 >= (uint64_t)v432)
                  goto LABEL_38;
                v390 = *(_QWORD *)&v431[8 * v386];
                ++v391;
                if (v390)
                  goto LABEL_22;
              }
LABEL_43:
              __break(1u);
LABEL_44:
              swift_once(&qword_100640D78, sub_100146B5C);
              goto LABEL_2;
            }
            v386 = v391;
          }
        }
      }
LABEL_22:
      v385 = (v390 - 1) & v390;
      v388 = __clz(__rbit64(v390)) + (v386 << 6);
    }
    v392 = *(char **)(v380[7] + 8 * v388);
    v393 = *((_QWORD *)v392 + 2);
  }
  while (!v393);
  v434 = v385;
  v435 = (char *)v386;
  v436 = *(_OWORD *)(v380[6] + 16 * v388);
  v437 = *((_QWORD *)&v436 + 1);
  *(_QWORD *)&v438 = v436;
  sub_1000D1378(v436, *((unint64_t *)&v436 + 1));
  swift_bridgeObjectRetain(v392);
  v433 = v392;
  v394 = (uint64_t *)(v392 + 40);
  while (1)
  {
    v399 = *(v394 - 1);
    v398 = *v394;
    swift_beginAccess(v381, v440, 33, 0);
    sub_1000D1378(v438, v437);
    swift_bridgeObjectRetain(v398);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v381);
    v439 = (_QWORD *)*v381;
    v380 = v439;
    v401 = v381;
    *v381 = 0x8000000000000000;
    v403 = sub_10007EF08(v399, v398);
    v404 = v380[2];
    v405 = (v402 & 1) == 0;
    v406 = v404 + v405;
    if (__OFADD__(v404, v405))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v407 = v402;
    if (v380[3] < v406)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v410 = v439;
      if ((v402 & 1) != 0)
        goto LABEL_25;
    }
    else
    {
      v380 = &v439;
      sub_1002E626C();
      v410 = v439;
      if ((v407 & 1) != 0)
      {
LABEL_25:
        v395 = v410[7] + 16 * v403;
        sub_1000D13D0(*(_QWORD *)v395, *(_QWORD *)(v395 + 8));
        v396 = v437;
        *(_QWORD *)v395 = v438;
        *(_QWORD *)(v395 + 8) = v396;
        goto LABEL_26;
      }
    }
LABEL_34:
    v410[(v403 >> 6) + 8] |= 1 << v403;
    v411 = (uint64_t *)(v410[6] + 16 * v403);
    *v411 = v399;
    v411[1] = v398;
    *(_OWORD *)(v410[7] + 16 * v403) = v436;
    v412 = v410[2];
    v413 = __OFADD__(v412, 1);
    v414 = v412 + 1;
    if (v413)
      goto LABEL_41;
    v410[2] = v414;
    swift_bridgeObjectRetain(v398);
LABEL_26:
    v394 += 2;
    v397 = off_100644610;
    off_100644610 = v410;
    swift_bridgeObjectRelease(v398);
    swift_bridgeObjectRelease(v397);
    swift_endAccess(v440);
    --v393;
    v381 = v401;
    if (!v393)
    {
      swift_bridgeObjectRelease(v433);
      sub_1000D13D0(v438, v437);
      v380 = v430;
      v385 = v434;
      v386 = (uint64_t)v435;
      goto LABEL_7;
    }
  }
  sub_1002DC12C(v406, isUniquelyReferenced_nonNull_native);
  v380 = v439;
  v408 = sub_10007EF08(v399, v398);
  if ((v407 & 1) == (v409 & 1))
  {
    v403 = v408;
    v410 = v439;
    if ((v407 & 1) != 0)
      goto LABEL_25;
    goto LABEL_34;
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100148AA4(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  unint64_t v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  char *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, unint64_t, uint64_t);
  void *v133;
  void *v134;
  _OWORD v135[2];

  v127 = a3;
  v133 = a1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v129 = v4;
  v130 = v5;
  v6 = __chkstk_darwin(v4);
  v126 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v123 - v8;
  v10 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UTType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v125 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v131 = (char *)&v123 - v18;
  v19 = __chkstk_darwin(v17);
  __chkstk_darwin(v19);
  v22 = (char *)&v123 - v21;
  v23 = *(_QWORD *)(a2 + 16);
  if (v23)
  {
    v123 = v20;
    v124 = v9;
    v132 = (void (*)(char *, unint64_t, uint64_t))(a2 + 32);
    v128 = a2;
    result = swift_bridgeObjectRetain(a2);
    v25 = 0;
    while (1)
    {
      v26 = *((_QWORD *)v132 + v25);
      v27 = v26 + 64;
      v28 = *(_QWORD *)(v26 + 64);
      v29 = *(_BYTE *)(v26 + 32);
      v30 = v29 & 0x3F;
      v31 = 1 << v29;
      if (v28)
      {
        v32 = 0;
        v33 = *(_QWORD *)(v26 + 64);
      }
      else
      {
        if (v30 < 7)
          goto LABEL_73;
        v33 = *(_QWORD *)(v26 + 72);
        if (!v33)
        {
          v34 = 0;
          v35 = 2;
          if ((unint64_t)(v31 + 63) >> 6 > 2)
            v35 = (unint64_t)(v31 + 63) >> 6;
          v36 = v35 - 2;
          while (v36 != v34)
          {
            v33 = *(_QWORD *)(v26 + 80 + 8 * v34++);
            if (v33)
            {
              v32 = v34 + 1;
              goto LABEL_14;
            }
          }
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        v32 = 1;
      }
LABEL_14:
      v37 = __clz(__rbit64(v33));
      v38 = v37 + (v32 << 6);
      if (v38 == v31)
        goto LABEL_73;
      if (v38 < 0)
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      if (v38 >= v31)
        goto LABEL_66;
      if (((*(_QWORD *)(v27 + (((unint64_t)v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
        goto LABEL_67;
      v39 = (uint64_t *)(*(_QWORD *)(v26 + 56) + 16 * v38);
      v40 = *v39;
      v41 = v39[1];
      if (v28)
      {
        v42 = 0;
      }
      else
      {
        if (v30 < 7)
          goto LABEL_74;
        v28 = *(_QWORD *)(v26 + 72);
        if (!v28)
        {
          v43 = 0;
          v44 = 2;
          if ((unint64_t)(v31 + 63) >> 6 > 2)
            v44 = (unint64_t)(v31 + 63) >> 6;
          v45 = v44 - 2;
          while (v45 != v43)
          {
            v28 = *(_QWORD *)(v26 + 80 + 8 * v43++);
            if (v28)
            {
              v42 = v43 + 1;
              goto LABEL_29;
            }
          }
LABEL_74:
          __break(1u);
          return result;
        }
        v42 = 1;
      }
LABEL_29:
      v46 = __clz(__rbit64(v28));
      v47 = v46 + (v42 << 6);
      if (v47 == v31)
        goto LABEL_74;
      if (v47 < 0)
        goto LABEL_68;
      if (v47 >= v31)
        goto LABEL_69;
      if (((*(_QWORD *)(v27 + (((unint64_t)v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
        goto LABEL_70;
      v48 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * v47);
      v49 = *v48;
      v50 = v48[1];
      swift_bridgeObjectRetain(v39[1]);
      sub_1000D1378(v49, v50);
      UTType.init(_:)(v40, v41);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        swift_bridgeObjectRelease(v128);
        sub_1000D13D0(v49, v50);
        sub_1001495BC((uint64_t)v12);
        return 0;
      }
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v12, v13);
      if ((UTType.conforms(to:)(v22) & 1) != 0)
      {
        swift_bridgeObjectRelease(v128);
        if (qword_100640D78 != -1)
          swift_once(&qword_100640D78, sub_100146B5C);
        v59 = v133;
        v60 = UTType.identifier.getter();
        v62 = v61;
        swift_beginAccess(&off_100644610, v135, 33, 0);
        sub_1000D1378(v49, v50);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_100644610);
        v134 = off_100644610;
        off_100644610 = (_UNKNOWN *)0x8000000000000000;
        sub_100355D2C(v49, v50, v60, v62, isUniquelyReferenced_nonNull_native);
        v64 = off_100644610;
        off_100644610 = v134;
        swift_bridgeObjectRelease(v62);
        swift_bridgeObjectRelease(v64);
        v65 = swift_endAccess(v135);
        v66 = Logger.UI.unsafeMutableAddressor(v65);
        v67 = v129;
        (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v124, v66, v129);
        v68 = v123;
        (*(void (**)(uint64_t, void *, uint64_t))(v14 + 16))(v123, v59, v13);
        sub_1000D1378(v49, v50);
        v69 = sub_1000D1378(v49, v50);
        v70 = Logger.logObject.getter(v69);
        v71 = static os_log_type_t.debug.getter();
        v72 = v71;
        if (os_log_type_enabled(v70, v71))
        {
          v73 = swift_slowAlloc(22, -1);
          v133 = (void *)swift_slowAlloc(64, -1);
          v134 = v133;
          *(_DWORD *)v73 = 136315394;
          LODWORD(v132) = v72;
          v74 = UTType.identifier.getter();
          v76 = v75;
          *(_QWORD *)&v135[0] = sub_1000544FC(v74, v75, (uint64_t *)&v134);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v135, (char *)v135 + 8);
          swift_bridgeObjectRelease(v76);
          v77 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
          v77(v68, v13);
          *(_WORD *)(v73 + 12) = 2080;
          *(_QWORD *)&v135[0] = v49;
          *((_QWORD *)&v135[0] + 1) = v50;
          sub_1000D1378(v49, v50);
          v78 = String.init<A>(describing:)(v135, &type metadata for DOCItemFileTypeGroupCategory);
          v80 = v79;
          *(_QWORD *)&v135[0] = sub_1000544FC(v78, v79, (uint64_t *)&v134);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v135, (char *)v135 + 8);
          swift_bridgeObjectRelease(v80);
          sub_1000D13D0(v49, v50);
          sub_1000D13D0(v49, v50);
          _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v132, "Dynamically mapped %s to DOCItemFileTypeGroupCategory %s", (uint8_t *)v73, 0x16u);
          v81 = v133;
          swift_arrayDestroy(v133, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v81, -1, -1);
          swift_slowDealloc(v73, -1, -1);

          (*(void (**)(char *, uint64_t))(v130 + 8))(v124, v129);
          v77((uint64_t)v22, v13);
        }
        else
        {

          sub_1000D13D0(v49, v50);
          sub_1000D13D0(v49, v50);
          v83 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
          v83(v68, v13);
          (*(void (**)(char *, uint64_t))(v130 + 8))(v124, v67);
          v83((uint64_t)v22, v13);
        }
        return v49;
      }
      ++v25;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
      result = sub_1000D13D0(v49, v50);
      if (v25 == v23)
      {
        swift_bridgeObjectRelease(v128);
        break;
      }
    }
  }
  v51 = v127;
  v52 = *(_QWORD *)(v127 + 16);
  if (!v52)
    goto LABEL_59;
  v53 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v54 = v131;
  v132 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
  v132(v131, v127 + v53, v13);
  v55 = sub_1001495FC();
  swift_bridgeObjectRetain(v51);
  v128 = v55;
  v56 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v133, v13, v55);
  v57 = *(void (**)(char *, uint64_t))(v14 + 8);
  v57(v54, v13);
  if ((v56 & 1) == 0)
  {
    if (v52 != 1)
    {
      v84 = *(_QWORD *)(v14 + 72);
      v85 = v51 + v84 + v53;
      v86 = 1;
      v87 = v131;
      while (1)
      {
        v132(v87, v85, v13);
        v88 = v86 + 1;
        if (__OFADD__(v86, 1))
          break;
        v89 = dispatch thunk of static Equatable.== infix(_:_:)(v87, v133, v13, v128);
        v57(v87, v13);
        if ((v89 & 1) != 0)
        {
          v58 = v127;
          goto LABEL_55;
        }
        ++v86;
        v85 += v84;
        if (v88 == v52)
        {
          v82 = v127;
          goto LABEL_53;
        }
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    v82 = v51;
LABEL_53:
    swift_bridgeObjectRelease(v82);
LABEL_59:
    if (qword_100640D78 == -1)
    {
LABEL_60:
      v99 = v133;
      v100 = UTType.identifier.getter();
      v102 = v101;
      swift_beginAccess(&off_100644610, v135, 33, 0);
      v103 = swift_isUniquelyReferenced_nonNull_native(off_100644610);
      v134 = off_100644610;
      off_100644610 = (_UNKNOWN *)0x8000000000000000;
      sub_100355D2C(0, 10, v100, v102, v103);
      v104 = off_100644610;
      off_100644610 = v134;
      swift_bridgeObjectRelease(v102);
      swift_bridgeObjectRelease(v104);
      v105 = swift_endAccess(v135);
      v106 = Logger.UI.unsafeMutableAddressor(v105);
      v108 = v129;
      v107 = v130;
      v109 = v126;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v126, v106, v129);
      v110 = v125;
      v111 = (*(uint64_t (**)(char *, void *, uint64_t))(v14 + 16))(v125, v99, v13);
      v112 = Logger.logObject.getter(v111);
      v113 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v112, v113))
      {
        v114 = v110;
        v115 = swift_slowAlloc(22, -1);
        v116 = (void *)swift_slowAlloc(64, -1);
        v134 = v116;
        *(_DWORD *)v115 = 136315394;
        v117 = UTType.identifier.getter();
        v119 = v118;
        *(_QWORD *)&v135[0] = sub_1000544FC(v117, v118, (uint64_t *)&v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v135, (char *)v135 + 8);
        swift_bridgeObjectRelease(v119);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v114, v13);
        *(_WORD *)(v115 + 12) = 2080;
        v135[0] = xmmword_1004DB590;
        v120 = String.init<A>(describing:)(v135, &type metadata for DOCItemFileTypeGroupCategory);
        v122 = v121;
        *(_QWORD *)&v135[0] = sub_1000544FC(v120, v121, (uint64_t *)&v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v135, (char *)v135 + 8);
        swift_bridgeObjectRelease(v122);
        _os_log_impl((void *)&_mh_execute_header, v112, v113, "Could not map %s to a DOCItemFileTypeGroupCategory. Caching result category: %s", (uint8_t *)v115, 0x16u);
        swift_arrayDestroy(v116, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v116, -1, -1);
        swift_slowDealloc(v115, -1, -1);

        (*(void (**)(char *, uint64_t))(v130 + 8))(v126, v129);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v110, v13);

        (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v108);
      }
      return 0;
    }
LABEL_72:
    swift_once(&qword_100640D78, sub_100146B5C);
    goto LABEL_60;
  }
  v58 = v51;
LABEL_55:
  v90 = swift_bridgeObjectRelease(v58);
  v91 = UTType.localizedDescription.getter(v90);
  if (!v92)
    goto LABEL_59;
  v49 = v91;
  v93 = v92;
  if (qword_100640D78 != -1)
    swift_once(&qword_100640D78, sub_100146B5C);
  v94 = UTType.identifier.getter();
  v96 = v95;
  swift_beginAccess(&off_100644610, v135, 33, 0);
  swift_bridgeObjectRetain(v93);
  v97 = swift_isUniquelyReferenced_nonNull_native(off_100644610);
  v134 = off_100644610;
  off_100644610 = (_UNKNOWN *)0x8000000000000000;
  sub_100355D2C(v49, v93, v94, v96, v97);
  v98 = off_100644610;
  off_100644610 = v134;
  swift_bridgeObjectRelease(v96);
  swift_bridgeObjectRelease(v98);
  swift_endAccess(v135);
  return v49;
}

uint64_t sub_1001495BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100643EC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001495FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100641980;
  if (!qword_100641980)
  {
    v1 = type metadata accessor for UTType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UTType, v1);
    atomic_store(result, (unint64_t *)&qword_100641980);
  }
  return result;
}

_QWORD *sub_100149644(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _BYTE v45[24];
  _QWORD *v46;

  v40 = a2;
  v41 = a3;
  v5 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v5);
  v44 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v43 = v9;
    v38 = v3;
    v46 = _swiftEmptyArrayStorage;
    isUniquelyReferenced_nonNull_native = sub_100154F40(0, v11, 0);
    v14 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v42 = v8;
    v15 = *(_QWORD *)(v8 + 72);
    do
    {
      v16 = UTType.identifier.getter(isUniquelyReferenced_nonNull_native);
      v18 = v17;
      if (qword_100640D78 != -1)
        swift_once(&qword_100640D78, sub_100146B5C);
      swift_beginAccess(&off_100644610, v45, 32, 0);
      v19 = off_100644610;
      if (*((_QWORD *)off_100644610 + 2))
      {
        swift_bridgeObjectRetain(v18);
        v20 = sub_10007EF08(v16, v18);
        if ((v21 & 1) != 0)
        {
          v22 = (uint64_t *)(v19[7] + 16 * v20);
          v23 = *v22;
          v24 = v22[1];
          swift_endAccess(v45);
          sub_1000D1378(v23, v24);
          swift_bridgeObjectRelease(v18);
          goto LABEL_13;
        }
        swift_bridgeObjectRelease(v18);
      }
      swift_endAccess(v45);
      v25._countAndFlagsBits = 778991972;
      v25._object = (void *)0xE400000000000000;
      if (!String.hasPrefix(_:)(v25))
      {
        swift_bridgeObjectRetain(v18);
        v26 = (uint64_t)v44;
        UTType.init(_:)(v16, v18);
        v28 = v42;
        v27 = v43;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v26, 1, v43) != 1)
        {
          v32 = v15;
          v33 = v39;
          (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v39, v26, v27);
          v34 = sub_100148AA4(v33, v40, v41);
          v24 = v35;
          v36 = v33;
          v15 = v32;
          (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
          swift_bridgeObjectRelease(v18);
          if (v24 == 11)
            v23 = 0;
          else
            v23 = v34;
          if (v24 == 11)
            v24 = 10;
          goto LABEL_14;
        }
        sub_1001495BC(v26);
      }
      v23 = 0;
      v24 = 10;
LABEL_13:
      swift_bridgeObjectRelease(v18);
LABEL_14:
      v12 = v46;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v46);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = sub_100154F40(0, v12[2] + 1, 1);
        v12 = v46;
      }
      v30 = v12[2];
      v29 = v12[3];
      if (v30 >= v29 >> 1)
      {
        isUniquelyReferenced_nonNull_native = sub_100154F40(v29 > 1, v30 + 1, 1);
        v12 = v46;
      }
      v12[2] = v30 + 1;
      v31 = &v12[2 * v30];
      v31[4] = v23;
      v31[5] = v24;
      v14 += v15;
      --v11;
    }
    while (v11);
  }
  return v12;
}

unint64_t destroy for DOCItemFileTypeGroupCategory(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s5Files28DOCItemFileTypeGroupCategoryOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for DOCItemFileTypeGroupCategory(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for DOCItemFileTypeGroupCategory(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemFileTypeGroupCategory(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF4 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483637);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 10;
  if (v4 >= 0xC)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCItemFileTypeGroupCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 10;
  }
  return result;
}

uint64_t sub_100149B68(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_100149B80(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemFileTypeGroupCategory()
{
  return &type metadata for DOCItemFileTypeGroupCategory;
}

unint64_t sub_100149BB4()
{
  unint64_t result;

  result = qword_100644630;
  if (!qword_100644630)
  {
    result = swift_getWitnessTable(&unk_1004DB400, &type metadata for DOCItemFileTypeGroupCategory);
    atomic_store(result, (unint64_t *)&qword_100644630);
  }
  return result;
}

id sub_100149C54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUIImageMenuItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100149C98(id result)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  double v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  id v21;
  NSString v22;
  id v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  NSString v65;
  id v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  Swift::String v73;
  Swift::String_optional v74;
  Swift::String v75;
  Swift::String v76;
  id v77;
  NSString v78;
  id v79;
  id v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  void *v89;
  Swift::String v90;
  Swift::String_optional v91;
  Swift::String v92;
  Swift::String v93;
  char *v94;
  NSString v95;
  id v96;
  uint64_t v97;
  void *v98;
  Swift::String v99;
  Swift::String_optional v100;
  Swift::String v101;
  Swift::String v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char v109[40];
  __int128 v110;
  __int128 v111;
  unint64_t v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String v115;
  Swift::String v116;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    goto LABEL_56;
  }
  v3 = v1;
  v4 = (char)result;
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v6 = *(_QWORD *)(*v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v6);
  }
  else
  {
    v6 = v5[1];
    swift_unknownObjectRetain(v6);
    if (!v6)
      goto LABEL_14;
  }
  ObjectType = swift_getObjectType(v6);
  v8 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  *(_QWORD *)&v9 = swift_unknownObjectRelease(v6).n128_u64[0];
  if (v8)
  {
    if ((objc_msgSend(v8, "isTrashed", v9) & 1) != 0)
    {

    }
    else
    {
      v10 = (void *)FPActionImportHere;
      v11 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v11, v109);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v8;
      *(_QWORD *)&v110 = inited;
      specialized Array._endMutation()(inited);
      v13 = v110;
      v14 = v8;
      LOBYTE(v10) = sub_1003598CC(v10, v13);
      swift_bridgeObjectRelease(v13);

      if ((v10 & 1) != 0)
      {
        v112 = (unint64_t)_swiftEmptyArrayStorage;
        result = (id)_DocumentManagerBundle(v15);
        if (!result)
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        v16 = result;
        type metadata accessor for DOCUIImageMenuItem();
        v17._countAndFlagsBits = 0xD000000000000019;
        v113._object = (void *)0x80000001005119B0;
        v17._object = (void *)0x8000000100511990;
        v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v18.value._object = (void *)0xEB00000000656C62;
        v19._countAndFlagsBits = 0x646C6F462077654ELL;
        v19._object = (void *)0xEA00000000007265;
        v113._countAndFlagsBits = 0xD000000000000024;
        v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v113);

        v110 = 0u;
        v111 = 0u;
        v21 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v20._countAndFlagsBits, v20._object, 0, 0, 0, 0, "startFolderCreation:", &v110, _swiftEmptyArrayStorage, 0, 0, 0, 0);
        v22 = String._bridgeToObjectiveC()();
        v23 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

        objc_msgSend(v21, "setImage:", v23);
        v24 = v21;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v25 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v26 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v26 >> 1)
        {
          v107 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v25 + 1, 1);
          v25 = v107;
        }
        v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
        specialized Array._endMutation()(v27);

        v28 = 1;
        if ((v4 & 1) == 0)
          goto LABEL_29;
        goto LABEL_15;
      }
    }
  }
LABEL_14:
  v28 = 0;
  v112 = (unint64_t)_swiftEmptyArrayStorage;
  if ((v4 & 1) == 0)
    goto LABEL_29;
LABEL_15:
  if ((v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
  {
    v29 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v30 = *(_QWORD *)(*v29 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v30);
    }
    else
    {
      v30 = v29[1];
      swift_unknownObjectRetain(v30);
      if (!v30)
        goto LABEL_29;
    }
    v31 = swift_getObjectType(v30);
    v32 = (void *)DOCNode.fpfs_syncFetchFPItem()(v31);
    swift_unknownObjectRelease(v30);
    if (v32)
    {
      v33 = sub_10035F61C(v32, 1);
      if (v33 < 1)
      {
        v46 = v32;
      }
      else
      {
        v34 = v33;
        v35._countAndFlagsBits = 0xD00000000000001BLL;
        v36._object = (void *)0x8000000100511920;
        v35._object = (void *)0x8000000100511950;
        v36._countAndFlagsBits = 0xD000000000000024;
        v37 = DOCLocalizedDictionaryString(_:comment:)(v36, v35);
        v38 = sub_10006922C((uint64_t *)&unk_100644560);
        v39 = swift_allocObject(v38, 72, 7);
        *(_OWORD *)(v39 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v39 + 56) = &type metadata for Int;
        *(_QWORD *)(v39 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v39 + 32) = v34;
        v40 = static String.localizedStringWithFormat(_:_:)(v37._countAndFlagsBits, v37._object, v39);
        v42 = v41;
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v37._object);
        type metadata accessor for DOCUIImageMenuItem();
        v110 = 0u;
        v111 = 0u;
        v43 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v40, v42, 0, 0, 0, 0, "paste:", &v110, _swiftEmptyArrayStorage, 0, 0, 0, 0);
        v44 = String._bridgeToObjectiveC()();
        v45 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v44);

        objc_msgSend(v43, "setImage:", v45);
        v46 = v43;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v47 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v48 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v47 >= v48 >> 1)
        {
          v108 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v47 + 1, 1);
          v47 = v108;
        }
        v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v46);
        specialized Array._endMutation()(v49);

      }
    }
  }
LABEL_29:
  v50 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v50 + 16) & 1) != 0)
  {
    v51 = *(_QWORD *)(*(_QWORD *)v50 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v51);
  }
  else
  {
    v51 = *(_QWORD *)(v50 + 8);
    swift_unknownObjectRetain(v51);
    if (!v51)
      goto LABEL_39;
  }
  v52 = swift_getObjectType(v51);
  v53 = (void *)DOCNode.fpfs_syncFetchFPItem()(v52);
  swift_unknownObjectRelease(v51);
  if (v53)
  {
    v54 = sub_10035F99C(v53, v3, 0);
    if (v54 < 1)
    {
      v67 = v53;
    }
    else
    {
      v55 = v54;
      v56._countAndFlagsBits = 0xD000000000000028;
      v57._countAndFlagsBits = 0xD000000000000033;
      v56._object = (void *)0x80000001005118B0;
      v57._object = (void *)0x80000001005118E0;
      v58 = DOCLocalizedDictionaryString(_:comment:)(v56, v57);
      v59 = sub_10006922C((uint64_t *)&unk_100644560);
      v60 = swift_allocObject(v59, 72, 7);
      *(_OWORD *)(v60 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v60 + 56) = &type metadata for Int;
      *(_QWORD *)(v60 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v60 + 32) = v55;
      v61 = static String.localizedStringWithFormat(_:_:)(v58._countAndFlagsBits, v58._object, v60);
      v63 = v62;
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease(v58._object);
      type metadata accessor for DOCUIImageMenuItem();
      v110 = 0u;
      v111 = 0u;
      v64 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v61, v63, 0, 0, 0, 0, "pasteboardMoveToCollectionView:", &v110, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      v65 = String._bridgeToObjectiveC()();
      v66 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v65);

      objc_msgSend(v64, "setImage:", v66);
      v67 = v64;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
      v69 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v68 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v69 >= v68 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
      v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v67);
      specialized Array._endMutation()(v70);

    }
  }
LABEL_39:
  if (!v28)
    goto LABEL_46;
  if (!objc_msgSend((id)objc_opt_self(VNDocumentCameraViewController), "isSupported"))
    goto LABEL_46;
  v71 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isFilesApp");
  if (!(_DWORD)v71)
    goto LABEL_46;
  result = (id)_DocumentManagerBundle(v71);
  if (result)
  {
    v72 = result;
    type metadata accessor for DOCUIImageMenuItem();
    v73._countAndFlagsBits = 0xD000000000000023;
    v114._countAndFlagsBits = 0xD000000000000047;
    v114._object = (void *)0x8000000100511840;
    v73._object = (void *)0x8000000100511810;
    v74.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v74.value._object = (void *)0xEB00000000656C62;
    v75._countAndFlagsBits = 0x636F44206E616353;
    v75._object = (void *)0xEE0073746E656D75;
    v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, v74, (NSBundle)v72, v75, v114);

    v110 = 0u;
    v111 = 0u;
    v77 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v76._countAndFlagsBits, v76._object, 0, 0, 0, 0, "scanDocument:", &v110, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v78 = String._bridgeToObjectiveC()();
    v79 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v78);

    objc_msgSend(v77, "setImage:", v79);
    v80 = v77;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v80);
    v82 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v81 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v82 >= v81 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1);
    v83 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v82, v80);
    specialized Array._endMutation()(v83);

LABEL_46:
    if ((*(_BYTE *)(v50 + 16) & 1) != 0)
    {
      v84 = *(_QWORD *)(*(_QWORD *)v50 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v84);
    }
    else
    {
      v84 = *(_QWORD *)(v50 + 8);
      swift_unknownObjectRetain(v84);
      if (!v84)
      {
        v88 = _swiftEmptyArrayStorage;
        goto LABEL_54;
      }
    }
    v85 = swift_getObjectType(v84);
    v86 = (void *)DOCNode.fpfs_syncFetchFPItem()(v85);
    swift_unknownObjectRelease(v84);
    v88 = _swiftEmptyArrayStorage;
    if (!v86)
    {
LABEL_54:
      v106 = sub_10006922C((uint64_t *)&unk_100644890);
      result = (id)swift_allocObject(v106, 48, 7);
      *((_OWORD *)result + 1) = xmmword_1004D4CE0;
      *((_QWORD *)result + 4) = v112;
      *((_QWORD *)result + 5) = v88;
      return result;
    }
    result = (id)_DocumentManagerBundle(v87);
    if (result)
    {
      v89 = result;
      type metadata accessor for DOCUIImageMenuItem();
      v115._countAndFlagsBits = 0xD000000000000050;
      v115._object = (void *)0x800000010050FC10;
      v90._countAndFlagsBits = 0x6F666E4920746547;
      v90._object = (void *)0xE800000000000000;
      v91.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v91.value._object = (void *)0xEB00000000656C62;
      v92._countAndFlagsBits = 0;
      v92._object = (void *)0xE000000000000000;
      v93 = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, v91, (NSBundle)v89, v92, v115);

      v110 = 0u;
      v111 = 0u;
      v94 = (char *)(id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v93._countAndFlagsBits, v93._object, 0, 0, 0, 0, "displayInfoForCurrentItem:", &v110, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      v95 = String._bridgeToObjectiveC()();
      v96 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v95);

      objc_msgSend(v94, "setImage:", v96);
      result = (id)_DocumentManagerBundle(v97);
      if (result)
      {
        v98 = result;
        v99._countAndFlagsBits = 0xD000000000000020;
        v116._countAndFlagsBits = 0xD000000000000064;
        v116._object = (void *)0x80000001005117A0;
        v99._object = (void *)0x8000000100511770;
        v100.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v100.value._object = (void *)0xEB00000000656C62;
        v101._countAndFlagsBits = 0x6F666E4920746547;
        v101._object = (void *)0xE800000000000000;
        v102 = NSLocalizedString(_:tableName:bundle:value:comment:)(v99, v100, (NSBundle)v98, v101, v116);

        v103 = *(_QWORD *)&v94[OBJC_IVAR____TtC5Files18DOCUIImageMenuItem_longTitle + 8];
        *(Swift::String *)&v94[OBJC_IVAR____TtC5Files18DOCUIImageMenuItem_longTitle] = v102;
        swift_bridgeObjectRelease(v103);
        v104 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v105 = swift_allocObject(v104, 40, 7);
        *(_OWORD *)(v105 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v105 + 32) = v94;
        *(_QWORD *)&v110 = v105;
        specialized Array._endMutation()(v105);
        v88 = (_QWORD *)v110;

        goto LABEL_54;
      }
      goto LABEL_57;
    }
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_59:
  __break(1u);
  return result;
}

void sub_10014A8E4(uint64_t a1, char *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  double v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  NSString v21;
  id v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  NSString v35;
  id v36;
  uint64_t v37;
  char *v38;
  NSString *v39;
  __n128 v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  id v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  id v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  void *v70;
  Swift::String v71;
  Swift::String_optional v72;
  Swift::String v73;
  Swift::String v74;
  NSString v75;
  id v76;
  uint64_t v77;
  char *v78;
  __n128 v79;
  id v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  void *v89;
  Swift::String v90;
  Swift::String_optional v91;
  Swift::String v92;
  Swift::String v93;
  NSString v94;
  id v95;
  uint64_t v96;
  __n128 v97;
  id v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  unsigned int v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  void *v112;
  Swift::String v113;
  Swift::String_optional v114;
  Swift::String v115;
  Swift::String v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSString v122;
  id v123;
  __n128 v124;
  id v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  id v129;
  unsigned int v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  void *v138;
  Swift::String v139;
  Swift::String_optional v140;
  Swift::String v141;
  Swift::String v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSString v148;
  id v149;
  __n128 v150;
  id v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  UIMenuElementSize v155;
  uint64_t v156;
  uint64_t v157;
  UIMenuElementSize preferredElementSize;
  Swift::String v159;
  UIMenu v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  UIMenuElementSize v164;
  uint64_t v165;
  uint64_t v166;
  UIMenuElementSize v167;
  Swift::String v168;
  UIMenu v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  UIMenuElementSize v173;
  uint64_t v174;
  uint64_t v175;
  UIMenuElementSize v176;
  Swift::String v177;
  UIMenu v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  objc_class *v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  objc_class *v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  objc_class *v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  UIMenuElementSize v196;
  Swift::String v197;
  uint64_t v198;
  uint64_t v199;
  Swift::OpaquePointer v200;
  char v201[40];
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  UIImage_optional v206;
  UIImage_optional v207;
  UIImage_optional v208;
  UIImage_optional v209;
  Swift::String v210;
  Swift::String v211;
  Swift::String v212;
  Swift::String swift__stringc;
  Swift::String swift__stringd;

  v2 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    goto LABEL_113;
  }
  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v5 = *(_QWORD *)(*v4 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v5);
  }
  else
  {
    v5 = v4[1];
    swift_unknownObjectRetain(v5);
    if (!v5)
    {
LABEL_13:
      v30 = 0;
      v205 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_14;
    }
  }
  ObjectType = swift_getObjectType(v5);
  v7 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  *(_QWORD *)&v8 = swift_unknownObjectRelease(v5).n128_u64[0];
  if (!v7)
    goto LABEL_13;
  if ((objc_msgSend(v7, "isTrashed", v8) & 1) != 0)
  {

    goto LABEL_13;
  }
  v9 = (void *)FPActionImportHere;
  v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v10, v201);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = v7;
  v205 = inited;
  specialized Array._endMutation()(inited);
  v12 = v205;
  v13 = v7;
  LOBYTE(v9) = sub_1003598CC(v9, v12);
  swift_bridgeObjectRelease(v12);

  if ((v9 & 1) == 0)
    goto LABEL_13;
  v205 = (uint64_t)_swiftEmptyArrayStorage;
  v15 = (id)_DocumentManagerBundle(v14);
  if (!v15)
  {
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  v16 = v15;
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v17._countAndFlagsBits = 0xD000000000000019;
  v210._countAndFlagsBits = 0xD000000000000024;
  v210._object = (void *)0x80000001005119B0;
  v17._object = (void *)0x8000000100511990;
  v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v18.value._object = (void *)0xEB00000000656C62;
  v19._countAndFlagsBits = 0x646C6F462077654ELL;
  v19._object = (void *)0xEA00000000007265;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v210);

  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v21);

  v23 = swift_allocObject(&unk_1005CAA48, 24, 7);
  *(_QWORD *)(v23 + 16) = a2;
  v24 = a2;
  v26 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v20._countAndFlagsBits, v20._object, 0, 0, v22, 0, 0, 0, v25, 0, 0, 0, sub_100152014, v23);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
  v28 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v27 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v28 >= v27 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
  v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
  specialized Array._endMutation()(v29);

  v30 = 1;
LABEL_14:
  if ((a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && (a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
  {
    v31 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v32 = *(_QWORD *)(*v31 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v32);
    }
    else
    {
      v32 = v31[1];
      swift_unknownObjectRetain(v32);
      if (!v32)
        goto LABEL_28;
    }
    v33 = swift_getObjectType(v32);
    v34 = (void *)DOCNode.fpfs_syncFetchFPItem()(v33);
    swift_unknownObjectRelease(v32);
    if (v34)
    {
      if (sub_10035F61C(v34, 1) < 1)
      {
        v41 = v34;
      }
      else
      {
        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v35 = String._bridgeToObjectiveC()();
        v36 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v35);

        v37 = swift_allocObject(&unk_1005CAA20, 24, 7);
        *(_QWORD *)(v37 + 16) = a2;
        v38 = a2;
        v39 = UIActionPaste;
        v41 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x29657473615028, 0xE700000000000000, 0, 0, v36, 0, UIActionPaste, 0, v40, 0, 0, 0, sub_100152000, v37);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
        v43 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v42 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v43 >= v42 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
        v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
        specialized Array._endMutation()(v44);

      }
    }
  }
LABEL_28:
  v45 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v46 = *(_QWORD *)(*(_QWORD *)v45 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v46);
  }
  else
  {
    v46 = *(_QWORD *)(v45 + 8);
    swift_unknownObjectRetain(v46);
    if (!v46)
      goto LABEL_38;
  }
  v47 = swift_getObjectType(v46);
  v48 = (void *)DOCNode.fpfs_syncFetchFPItem()(v47);
  swift_unknownObjectRelease(v46);
  if (v48)
  {
    v49 = sub_10035F99C(v48, a2, 1);
    if (v49 < 1)
    {
      v64 = v48;
    }
    else
    {
      v50 = v49;
      v51._countAndFlagsBits = 0xD000000000000028;
      v52._countAndFlagsBits = 0xD000000000000033;
      v51._object = (void *)0x80000001005118B0;
      v52._object = (void *)0x80000001005118E0;
      v53 = DOCLocalizedDictionaryString(_:comment:)(v51, v52);
      v54 = sub_10006922C((uint64_t *)&unk_100644560);
      v55 = swift_allocObject(v54, 72, 7);
      *(_OWORD *)(v55 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v55 + 56) = &type metadata for Int;
      *(_QWORD *)(v55 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v55 + 32) = v50;
      v56 = static String.localizedStringWithFormat(_:_:)(v53._countAndFlagsBits, v53._object, v55);
      v58 = v57;
      swift_bridgeObjectRelease(v55);
      swift_bridgeObjectRelease(v53._object);
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v59 = String._bridgeToObjectiveC()();
      v60 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v59);

      v61 = swift_allocObject(&unk_1005CA9F8, 24, 7);
      *(_QWORD *)(v61 + 16) = a2;
      v62 = a2;
      v64 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v56, v58, 0, 0, v60, 0, 0, 0, v63, 0, 0, 0, sub_100151FEC, v61);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
      v66 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v65 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v66 >= v65 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
      v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
      specialized Array._endMutation()(v67);

    }
  }
LABEL_38:
  if (v30)
  {
    if (objc_msgSend((id)objc_opt_self(VNDocumentCameraViewController), "isSupported"))
    {
      v68 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isFilesApp");
      if ((_DWORD)v68)
      {
        v69 = (id)_DocumentManagerBundle(v68);
        if (!v69)
        {
LABEL_117:
          __break(1u);
          return;
        }
        v70 = v69;
        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v71._countAndFlagsBits = 0xD000000000000023;
        v211._countAndFlagsBits = 0xD000000000000047;
        v211._object = (void *)0x8000000100511840;
        v71._object = (void *)0x8000000100511810;
        v72.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v72.value._object = (void *)0xEB00000000656C62;
        v73._countAndFlagsBits = 0x636F44206E616353;
        v73._object = (void *)0xEE0073746E656D75;
        v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v72, (NSBundle)v70, v73, v211);

        v75 = String._bridgeToObjectiveC()();
        v76 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v75);

        v77 = swift_allocObject(&unk_1005CA9D0, 24, 7);
        *(_QWORD *)(v77 + 16) = a2;
        v78 = a2;
        v80 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v74._countAndFlagsBits, v74._object, 0, 0, v76, 0, 0, 0, v79, 0, 0, 0, sub_100151FD8, v77);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v80);
        v82 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v81 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v82 >= v81 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1);
        v83 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v82, v80);
        specialized Array._endMutation()(v83);

      }
    }
  }
  v204 = (uint64_t)_swiftEmptyArrayStorage;
  if ((*(_BYTE *)(v45 + 16) & 1) != 0)
  {
    v84 = *(_QWORD *)(*(_QWORD *)v45 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v84);
  }
  else
  {
    v84 = *(_QWORD *)(v45 + 8);
    swift_unknownObjectRetain(v84);
    if (!v84)
      goto LABEL_53;
  }
  v85 = swift_getObjectType(v84);
  v86 = (void *)DOCNode.fpfs_syncFetchFPItem()(v85);
  swift_unknownObjectRelease(v84);
  if (v86)
  {
    v88 = (id)_DocumentManagerBundle(v87);
    if (v88)
    {
      v89 = v88;
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v212._countAndFlagsBits = 0xD000000000000050;
      v212._object = (void *)0x800000010050FC10;
      v90._countAndFlagsBits = 0x6F666E4920746547;
      v90._object = (void *)0xE800000000000000;
      v91.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v91.value._object = (void *)0xEB00000000656C62;
      v92._countAndFlagsBits = 0;
      v92._object = (void *)0xE000000000000000;
      v93 = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, v91, (NSBundle)v89, v92, v212);

      v94 = String._bridgeToObjectiveC()();
      v95 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v94);

      v96 = swift_allocObject(&unk_1005CA7F0, 24, 7);
      swift_unknownObjectWeakInit(v96 + 16);
      v98 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v93._countAndFlagsBits, v93._object, 0, 0, v95, 0, 0, 0, v97, 0, 0, 0, sub_100151FD0, v96);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v98);
      v100 = *(_QWORD *)((v204 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v99 = *(_QWORD *)((v204 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v100 >= v99 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v99 > 1, v100 + 1, 1);
      v101 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v100, v98);
      specialized Array._endMutation()(v101);

      goto LABEL_53;
    }
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
LABEL_53:
  v203 = (uint64_t)_swiftEmptyArrayStorage;
  v102 = (void *)objc_opt_self(DOCUndoManager);
  v103 = objc_msgSend(v102, "shared");
  v104 = objc_msgSend(v103, "canUndo");

  if (!v104)
    goto LABEL_58;
  v105 = objc_msgSend(v102, "shared");
  v106 = objc_msgSend(v105, "undoActionName");

  v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
  v109 = v108;

  v111 = (id)_DocumentManagerBundle(v110);
  if (!v111)
  {
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  v112 = v111;
  v113._countAndFlagsBits = 0x4025206F646E55;
  swift__stringc._object = (void *)0x8000000100511BE0;
  v113._object = (void *)0xE700000000000000;
  v114.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v114.value._object = (void *)0xEB00000000656C62;
  v115._countAndFlagsBits = 0;
  v115._object = (void *)0xE000000000000000;
  swift__stringc._countAndFlagsBits = 0xD00000000000005ELL;
  v116 = NSLocalizedString(_:tableName:bundle:value:comment:)(v113, v114, (NSBundle)v112, v115, swift__stringc);

  v117 = sub_10006922C((uint64_t *)&unk_100644560);
  v118 = swift_allocObject(v117, 72, 7);
  *(_OWORD *)(v118 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v118 + 56) = &type metadata for String;
  *(_QWORD *)(v118 + 64) = sub_10006A638();
  *(_QWORD *)(v118 + 32) = v107;
  *(_QWORD *)(v118 + 40) = v109;
  v119 = static String.localizedStringWithFormat(_:_:)(v116._countAndFlagsBits, v116._object, v118);
  v121 = v120;
  swift_bridgeObjectRelease(v118);
  swift_bridgeObjectRelease(v116._object);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v122 = String._bridgeToObjectiveC()();
  v123 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v122);

  v125 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v119, v121, 0, 0, v123, 0, 0, 0, v124, 0, 0, 0, sub_10014BEBC, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v125);
  v127 = *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v126 = *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v127 >= v126 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v126 > 1, v127 + 1, 1);
  v128 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v127, v125);
  specialized Array._endMutation()(v128);

LABEL_58:
  v129 = objc_msgSend(v102, "shared");
  v130 = objc_msgSend(v129, "canRedo");

  if (!v130)
    goto LABEL_63;
  v131 = objc_msgSend(v102, "shared");
  v132 = objc_msgSend(v131, "redoActionName");

  v133 = static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
  v135 = v134;

  v137 = (id)_DocumentManagerBundle(v136);
  if (!v137)
    goto LABEL_115;
  v138 = v137;
  swift__stringd._object = (void *)0x8000000100511B60;
  v139._countAndFlagsBits = 0x4025206F646552;
  v139._object = (void *)0xE700000000000000;
  v140.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v140.value._object = (void *)0xEB00000000656C62;
  v141._countAndFlagsBits = 0;
  v141._object = (void *)0xE000000000000000;
  swift__stringd._countAndFlagsBits = 0xD00000000000005ELL;
  v142 = NSLocalizedString(_:tableName:bundle:value:comment:)(v139, v140, (NSBundle)v138, v141, swift__stringd);

  v143 = sub_10006922C((uint64_t *)&unk_100644560);
  v144 = swift_allocObject(v143, 72, 7);
  *(_OWORD *)(v144 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v144 + 56) = &type metadata for String;
  *(_QWORD *)(v144 + 64) = sub_10006A638();
  *(_QWORD *)(v144 + 32) = v133;
  *(_QWORD *)(v144 + 40) = v135;
  v145 = static String.localizedStringWithFormat(_:_:)(v142._countAndFlagsBits, v142._object, v144);
  v147 = v146;
  swift_bridgeObjectRelease(v144);
  swift_bridgeObjectRelease(v142._object);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v148 = String._bridgeToObjectiveC()();
  v149 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v148);

  v151 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v145, v147, 0, 0, v149, 0, 0, 0, v150, 0, 0, 0, sub_10014BEC8, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v151);
  v153 = *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v152 = *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v153 >= v152 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v152 > 1, v153 + 1, 1);
  v154 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v153, v151);
  specialized Array._endMutation()(v154);

LABEL_63:
  v155 = v205;
  if ((unint64_t)v205 >> 62)
  {
    if (v205 < 0)
      v161 = v205;
    else
      v161 = v205 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v205, 2);
    v162 = _CocoaArrayWrapper.endIndex.getter(v161);
    swift_bridgeObjectRelease(v155);
    if (v162)
    {
      v163 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v155);
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v161, v163);
      swift_bridgeObjectRelease(v155);
      goto LABEL_66;
    }
  }
  else
  {
    v156 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v205);
    if (v156)
    {
      v157 = swift_bridgeObjectRetain(v155);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v157);
      sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      preferredElementSize = v155;
LABEL_66:
      sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
      v159._countAndFlagsBits = 0;
      v159._object = (void *)0xE000000000000000;
      v206.value.super.isa = 0;
      v206.is_nil = 0;
      v160.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v159, (Swift::String_optional)0, v206, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v200).super.super.isa;
      swift_bridgeObjectRelease(v155);
      goto LABEL_73;
    }
  }
  swift_bridgeObjectRelease(v155);
  v160.super.super.isa = 0;
LABEL_73:
  v164 = v204;
  if ((unint64_t)v204 >> 62)
  {
    if (v204 < 0)
      v170 = v204;
    else
      v170 = v204 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v204, 2);
    v171 = _CocoaArrayWrapper.endIndex.getter(v170);
    swift_bridgeObjectRelease(v164);
    if (v171)
    {
      v172 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v164);
      v167 = _bridgeCocoaArray<A>(_:)(v170, v172);
      swift_bridgeObjectRelease(v164);
      goto LABEL_76;
    }
  }
  else
  {
    v165 = *(_QWORD *)((v204 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v204);
    if (v165)
    {
      v166 = swift_bridgeObjectRetain(v164);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v166);
      sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      v167 = v164;
LABEL_76:
      sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
      v168._countAndFlagsBits = 0;
      v168._object = (void *)0xE000000000000000;
      v207.value.super.isa = 0;
      v207.is_nil = 0;
      v169.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v168, (Swift::String_optional)0, v207, (UIMenuIdentifier_optional)1, 2uLL, v167, v200).super.super.isa;
      swift_bridgeObjectRelease(v164);
      goto LABEL_83;
    }
  }
  swift_bridgeObjectRelease(v164);
  v169.super.super.isa = 0;
LABEL_83:
  v173 = v203;
  if ((unint64_t)v203 >> 62)
  {
    if (v203 < 0)
      v179 = v203;
    else
      v179 = v203 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v203, 2);
    v180 = _CocoaArrayWrapper.endIndex.getter(v179);
    swift_bridgeObjectRelease(v173);
    if (v180)
    {
      v181 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v173);
      v176 = _bridgeCocoaArray<A>(_:)(v179, v181);
      swift_bridgeObjectRelease(v173);
LABEL_86:
      sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
      v177._countAndFlagsBits = 0;
      v177._object = (void *)0xE000000000000000;
      v208.value.super.isa = 0;
      v208.is_nil = 0;
      v178.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v177, (Swift::String_optional)0, v208, (UIMenuIdentifier_optional)1, 2uLL, v176, v200).super.super.isa;
      swift_bridgeObjectRelease(v173);
      v202 = (uint64_t)_swiftEmptyArrayStorage;
      if (!v160.super.super.isa)
        goto LABEL_97;
LABEL_94:
      v182 = v160.super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v182);
      v184 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v183 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v184 >= v183 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v183 > 1, v184 + 1, 1);
      v185 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v184, v182);
      specialized Array._endMutation()(v185);
      goto LABEL_97;
    }
  }
  else
  {
    v174 = *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v203);
    if (v174)
    {
      v175 = swift_bridgeObjectRetain(v173);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v175);
      sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      v176 = v173;
      goto LABEL_86;
    }
  }
  swift_bridgeObjectRelease(v173);
  v178.super.super.isa = 0;
  v202 = (uint64_t)_swiftEmptyArrayStorage;
  if (v160.super.super.isa)
    goto LABEL_94;
LABEL_97:
  if (v169.super.super.isa)
  {
    v186 = v169.super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v186);
    v188 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v187 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v188 >= v187 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v187 > 1, v188 + 1, 1);
    v189 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v188, v186);
    specialized Array._endMutation()(v189);
  }
  if (v178.super.super.isa)
  {
    v190 = v178.super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v190);
    v192 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v191 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v192 >= v191 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v191 > 1, v192 + 1, 1);
    v193 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v192, v190);
    specialized Array._endMutation()(v193);
  }
  v194 = v202;

  swift_bridgeObjectRelease(v203);
  swift_bridgeObjectRelease(v204);
  swift_bridgeObjectRelease(v205);
  if ((unint64_t)v194 >> 62)
  {
    if (v194 < 0)
      v198 = v194;
    else
      v198 = v194 & 0xFFFFFFFFFFFFFF8;
    v199 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v194);
    v196 = _bridgeCocoaArray<A>(_:)(v198, v199);
    swift_bridgeObjectRelease(v194);
  }
  else
  {
    v195 = swift_bridgeObjectRetain(v194);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v195);
    sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    v196 = v194;
  }
  swift_bridgeObjectRelease(v194);
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v197._countAndFlagsBits = 0;
  v197._object = (void *)0xE000000000000000;
  v209.value.super.isa = 0;
  v209.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v197, (Swift::String_optional)0, v209, 0, 0xFFFFFFFFFFFFFFFFLL, v196, v200);
}

void sub_10014BE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "displayInfoForCurrentItem:", a1);

  }
}

void sub_10014BEBC(uint64_t a1)
{
  sub_10014BED4(a1, (SEL *)&selRef_undo);
}

void sub_10014BEC8(uint64_t a1)
{
  sub_10014BED4(a1, (SEL *)&selRef_redo);
}

void sub_10014BED4(uint64_t a1, SEL *a2)
{
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(DOCUndoManager), "shared");
  objc_msgSend(v3, *a2);

}

void sub_10014BF28()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v1)
  {
    v2 = v0;
    v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v3 + 16) & 1) != 0)
    {
      v4 = *(_QWORD *)(*(_QWORD *)v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v4);
    }
    else
    {
      v4 = *(_QWORD *)(v3 + 8);
      swift_unknownObjectRetain(v4);
      if (!v4)
      {
        v6 = 0;
        goto LABEL_6;
      }
    }
    ObjectType = swift_getObjectType(v4);
    v6 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
    swift_unknownObjectRelease(v4);
LABEL_6:
    type metadata accessor for DOCPasteboardHandler();
    v7 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    v8 = swift_allocObject(&unk_1005CA930, 32, 7);
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = v6;
    v9 = v6;
    sub_100343E9C(v6, v7, v2, (uint64_t)sub_100151F44, v8);

    swift_release(v8);
    return;
  }
  __break(1u);
}

void sub_10014C040(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Class isa;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  _QWORD aBlock[5];
  uint64_t v46;

  if (a1)
  {
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v33 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v33 = a1;
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v33))
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          v10 = *(_QWORD *)(v8 + 16);
          if (!v10)
          {
            __break(1u);
LABEL_26:
            aBlock[0] = v10;
            _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, aBlock, &type metadata for DOCDisplayMode, &type metadata for Int);
            __break(1u);
            return;
          }
          v11 = *(id *)(a1 + 32);
        }
        v12 = v11;
        swift_bridgeObjectRelease(a1);
        v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v14 = swift_allocObject(v13, 40, 7);
        *(_OWORD *)(v14 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v14 + 32) = v12;
        aBlock[0] = v14;
        specialized Array._endMutation()(v14);
        v15 = aBlock[0];
        v16 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v17 = v12;
        isa = Array._bridgeToObjectiveC()().super.isa;
        aBlock[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
        v46 = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10016C02C;
        aBlock[3] = &unk_1005CA948;
        v19 = _Block_copy(aBlock);
        objc_msgSend(a3, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, 0, v19, swift_release(v46).n128_f64[0]);
        _Block_release(v19);
        swift_bridgeObjectRelease(v15);

        if (a2)
        {
LABEL_15:

          return;
        }
        v20 = *(void **)&a3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
        swift_bridgeObjectRetain(a1);
        v21 = v20;
        v22 = DOCAnalyticsActionEvent.FileProvider.init(items:)(a1);
        v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v24 = objc_msgSend(v23, "bundleIdentifier");

        if (v24)
        {
          v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
          v27 = v26;

          if (a4)
          {
LABEL_10:
            v28 = DOCNode.sourceIdentifier.getter(v16);
            v29 = DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(v28);
            goto LABEL_13;
          }
        }
        else
        {
          v25 = 0;
          v27 = 0;
          if (a4)
            goto LABEL_10;
        }
        v29 = 0;
LABEL_13:
        v30 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess(v30, v44, 0, 0);
        v10 = *(_QWORD *)v30;
        if (*(_QWORD *)v30 < 3uLL)
        {
          v31 = DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(aBlock, 1, v21, v22, v25, v27, v29, (v10 + 1));
          v32 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v31);
          DOCAnalyticsManager.sendActionEvent(_:)(aBlock);

          sub_1000B3334((uint64_t)aBlock);
          goto LABEL_15;
        }
        goto LABEL_26;
      }
    }
    else
    {
      v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v9)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease(a1);
  }
  if (a2)
  {
    v34 = swift_errorRetain(a2);
    v35 = *(id *)DOCLog.UI.unsafeMutableAddressor(v34);
    v36 = static os_log_type_t.error.getter(v35);
    v37 = sub_10006922C((uint64_t *)&unk_100644560);
    v38 = swift_allocObject(v37, 112, 7);
    *(_OWORD *)(v38 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v38 + 56) = &type metadata for String;
    *(_QWORD *)(v38 + 64) = sub_10006A638();
    *(_QWORD *)(v38 + 32) = 0xD000000000000023;
    *(_QWORD *)(v38 + 40) = 0x8000000100511AE0;
    v39 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v38 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v38 + 104) = sub_100151F4C();
    *(_QWORD *)(v38 + 72) = v39;
    os_log(_:dso:log:type:_:)("%@: Reveal Operation failed: %@", 31, 2, &_mh_execute_header, v35, v36, v38);

    swift_bridgeObjectRelease(v38);
    swift_errorRelease(a2);
  }
  else
  {
    v40 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = sub_10006922C((uint64_t *)&unk_100644560);
    v43 = swift_allocObject(v42, 72, 7);
    *(_OWORD *)(v43 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v43 + 56) = &type metadata for String;
    *(_QWORD *)(v43 + 64) = sub_10006A638();
    *(_QWORD *)(v43 + 32) = 0xD000000000000023;
    *(_QWORD *)(v43 + 40) = 0x8000000100511AE0;
    os_log(_:dso:log:type:_:)("%@: Reveal Operation failed: unknown error", 42, 2, &_mh_execute_header, v40, v41, v43);

    swift_bridgeObjectRelease(v43);
  }
}

void sub_10014C518()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v1)
  {
    __break(1u);
    return;
  }
  v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v2 + 16) & 1) != 0)
  {
    v3 = *(void **)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v3);
  }
  else
  {
    v3 = *(void **)(v2 + 8);
    swift_unknownObjectRetain(v3);
    if (!v3)
      return;
  }
  v4 = objc_msgSend(v3, "fpfs_fpItem");
  swift_unknownObjectRelease(v3);
  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
    v6 = objc_msgSend(v5, "dataOwnerStateForNode:", v4);

    if (v6 == (id)1)
      v7 = 2;
    else
      v7 = v6 == (id)2;
    v8 = swift_allocObject(&unk_1005CA908, 32, 7);
    *(_QWORD *)(v8 + 16) = v4;
    *(_QWORD *)(v8 + 24) = v0;
    v9 = v4;
    sub_100345EA8(v7, v0, (uint64_t)sub_100151F3C, v8);

    swift_release(v8);
  }
}

uint64_t sub_10014C664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v39;
  id v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  _QWORD v48[5];

  v45 = a2;
  v5 = type metadata accessor for DOCOperationItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (void **)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v43 - v10);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v42 = a1;
    else
      v42 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v13 = _swiftEmptyArrayStorage;
  if (v12)
  {
    v46 = v5;
    v48[0] = _swiftEmptyArrayStorage;
    sub_100155054(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
    {
      __break(1u);
      goto LABEL_26;
    }
    v44 = a3;
    v13 = (_QWORD *)v48[0];
    if ((a1 & 0xC000000000000001) != 0)
    {
      v15 = 0;
      v16 = v46;
      do
      {
        *v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
        swift_storeEnumTagMultiPayload(v11, v16, 1);
        v48[0] = v13;
        v18 = v13[2];
        v17 = v13[3];
        if (v18 >= v17 >> 1)
        {
          sub_100155054(v17 > 1, v18 + 1, 1);
          v16 = v46;
          v13 = (_QWORD *)v48[0];
        }
        ++v15;
        v13[2] = v18 + 1;
        sub_1000E2AB4((uint64_t)v11, (uint64_t)v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18);
      }
      while (v12 != v15);
    }
    else
    {
      v19 = (void **)(a1 + 32);
      v20 = v46;
      do
      {
        v21 = a1;
        v22 = *v19;
        *v8 = *v19;
        swift_storeEnumTagMultiPayload(v8, v20, 1);
        v48[0] = v13;
        v23 = v13[2];
        v24 = v13[3];
        v25 = v22;
        if (v23 >= v24 >> 1)
        {
          sub_100155054(v24 > 1, v23 + 1, 1);
          v13 = (_QWORD *)v48[0];
        }
        v13[2] = v23 + 1;
        sub_1000E2AB4((uint64_t)v8, (uint64_t)v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v23);
        ++v19;
        --v12;
        a1 = v21;
        v20 = v46;
      }
      while (v12);
    }
    a3 = v44;
  }
  v26 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  sub_100477E1C(0, (uint64_t)v13, v45, 0, 0, 1, a3, 0, 0);

  swift_bridgeObjectRelease(v13);
  v27 = *(void **)(a3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  swift_bridgeObjectRetain(a1);
  v28 = v27;
  v29 = DOCAnalyticsActionEvent.FileProvider.init(items:)(a1);
  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v31 = objc_msgSend(v30, "bundleIdentifier");

  if (v31)
  {
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v36 = DOCNode.sourceIdentifier.getter(v35);
  v37 = DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(v36);
  v38 = (uint64_t *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v47, 0, 0);
  v14 = *v38;
  if ((unint64_t)*v38 < 3)
  {
    v39 = DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(v48, 1, v28, v29, v32, v34, v37, (v14 + 1));
    v40 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v39);
    DOCAnalyticsManager.sendActionEvent(_:)(v48);

    return sub_1000B3334((uint64_t)v48);
  }
LABEL_26:
  v48[0] = v14;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, v48, &type metadata for DOCDisplayMode, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_10014CA6C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, __n128))
{
  id v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v8);
    v10 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v9 = a1;
  }
  a4(v9, v10);

  return sub_10000CB4C((uint64_t)v12, &qword_100642730);
}

void sub_10014CAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t ObjectType;
  uint64_t v6;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0
    && ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
     || !*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v1)
    {
      __break(1u);
      return;
    }
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    {
      v3 = *(_QWORD *)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v3);
    }
    else
    {
      v3 = *(_QWORD *)(v2 + 8);
      swift_unknownObjectRetain(v3);
      if (!v3)
        return;
    }
    v4 = _swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      v6 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v4 = (_QWORD *)_bridgeCocoaArray<A>(_:)(_swiftEmptyArrayStorage, v6);
    }
    ObjectType = swift_getObjectType(v3);
    sub_1001B488C(v3, (uint64_t)v4, v0, ObjectType);
    swift_unknownObjectRelease(v3);
    swift_bridgeObjectRelease(v4);
  }
}

void sub_10014CC10(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[5];
  uint64_t v11;
  _BYTE v12[32];

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    return;
  }
  v4 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v4 + 16) & 1) != 0)
  {
    v5 = *(void **)(*(_QWORD *)v4 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v5);
  }
  else
  {
    v5 = *(void **)(v4 + 8);
    swift_unknownObjectRetain(v5);
    if (!v5)
      return;
  }
  sub_1000271D4(a1, (uint64_t)v12, &qword_100642730);
  v6 = swift_allocObject(&unk_1005CA868, 64, 7);
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  sub_100070EDC((uint64_t)v12, v6 + 32, &qword_100642730);
  v10[4] = sub_100151DDC;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100175118;
  v10[3] = &unk_1005CA880;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v1;
  swift_unknownObjectRetain(v5);
  objc_msgSend(v5, "fetchURL:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  swift_unknownObjectRelease(v5);
}

void sub_10014CD5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;
  _BYTE v29[32];

  v26 = a4;
  v9 = sub_10006922C(&qword_100643470);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v12, &qword_100643470);
  sub_1000271D4(a5, (uint64_t)v29, &qword_100642730);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1005CA8B8, v18 + 32, v13 | 7);
  sub_100070EDC((uint64_t)v12, v19 + v14, &qword_100643470);
  *(_QWORD *)(v19 + v15) = a2;
  *(_QWORD *)(v19 + v16) = a3;
  v20 = v19 + v18;
  v21 = v26;
  *(_QWORD *)(v19 + v17) = v26;
  sub_100070EDC((uint64_t)v29, v20, &qword_100642730);
  aBlock[4] = sub_100151ED4;
  v28 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CA8D0;
  v22 = _Block_copy(aBlock);
  v23 = v28;
  swift_errorRetain(a2);
  v24 = a3;
  swift_unknownObjectRetain(v21);
  swift_release(v23);
  DOCRunInMainThread(v22);
  _Block_release(v22);
}

double sub_10014CF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t ObjectType;
  uint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  double result;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  _QWORD v41[3];
  _QWORD v42[3];
  char v43[8];

  v39[1] = a5;
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v39 - v17;
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v19 = sub_10000CB4C((uint64_t)v11, &qword_100643470);
    v20 = *(id *)DOCLog.UI.unsafeMutableAddressor(v19);
    v21 = static os_log_type_t.error.getter(v20);
    v22 = sub_10006922C((uint64_t *)&unk_100644560);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
    if (a2)
    {
      swift_getErrorValue(a2, v43, v42);
      a2 = Error.localizedDescription.getter(v42[1], v42[2]);
      v25 = v24;
    }
    else
    {
      v25 = 0;
    }
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = sub_10006A638();
    v37 = 4271950;
    if (v25)
      v37 = a2;
    v38 = 0xE300000000000000;
    if (v25)
      v38 = v25;
    *(_QWORD *)(v23 + 32) = v37;
    *(_QWORD *)(v23 + 40) = v38;
    os_log(_:dso:log:type:_:)("Couldn't fetch url to update urlToItemCache: %@", 47, 2, &_mh_execute_header, v20, v21, v23);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    v26 = (_QWORD *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache);
    swift_beginAccess(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache, v41, 33, 0);
    swift_unknownObjectRetain(a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v26);
    v40 = *v26;
    *v26 = 0x8000000000000000;
    ObjectType = swift_getObjectType(a4);
    sub_10014ECD0(a4, (uint64_t)v15, isUniquelyReferenced_nonNull_native, &v40, ObjectType);
    v29 = *v26;
    *v26 = v40;
    v30 = swift_bridgeObjectRelease(v29);
    v31 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    v31(v15, v12, v30);
    swift_endAccess(v41);
    sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
    v32 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v33 = swift_allocObject(v32, 40, 7);
    *(_OWORD *)(v33 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v33 + 32) = a4;
    v41[0] = v33;
    specialized Array._endMutation()(v33);
    v34 = v41[0];
    swift_unknownObjectRetain(a4);
    v35 = DOCItemCollectionViewController.actionContext(from:)();
    sub_10011D2AC(v34, 0, v35);
    swift_bridgeObjectRelease(v34);

    ((void (*)(char *, uint64_t))v31)(v18, v12);
  }
  return result;
}

void sub_10014D2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DOCItemCollectionViewController.triggerScan()();
  if (v5)
  {
    v6 = Logger.UI.unsafeMutableAddressor(v4);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    swift_errorRetain(v5);
    v7 = swift_errorRetain(v5);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v10 = 138412290;
      swift_errorRetain(v5);
      v11 = _swift_stdlib_bridgeErrorToNSError(v5);
      v16 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
      v12 = v15;
      *v15 = v11;
      swift_errorRelease(v5);
      swift_errorRelease(v5);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Did not trigger scan. Error: %@", v10, 0xCu);
      v13 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v12, 1, v13);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      swift_errorRelease(v5);
    }
    else
    {
      swift_errorRelease(v5);
      swift_errorRelease(v5);
      swift_errorRelease(v5);

    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

_QWORD *sub_10014D4B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[11]);
  v1 = v0[12];
  v0[12] = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native(v1))
        break;
      v2 = *(_QWORD *)(v1 + 96);
      swift_retain(v2);
      swift_release(v1);
      v1 = v2;
    }
    while (v2);
  }
  swift_release(v1);
  return v0;
}

uint64_t sub_10014D548()
{
  _QWORD *v0;

  v0 = sub_10014D4B8();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t sub_10014D564(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v8 = _bridgeCocoaArray<A>(_:)(v6, v7);
    swift_bridgeObjectRelease(v3);
    v3 = v8;
  }
  else
  {
    v4 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
  }
  swift_beginAccess(a2 + 16, v9, 33, 0);
  sub_1000683EC(v3);
  return swift_endAccess(v9);
}

NSString sub_10014D614(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  NSString v22;

  v2 = objc_msgSend(a1, "identifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v4 = v3;

  v5 = objc_msgSend(a1, "identifier");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierMoveToNamedFolder);
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v8);
    goto LABEL_8;
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) != 0)
  {
    v8 = v4;
LABEL_8:
    swift_bridgeObjectRelease(v8);
    v14 = objc_msgSend(a1, "identifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v16 = v15;

    v17 = objc_msgSend(a1, "localizedTitle");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    swift_bridgeObjectRetain(v16);
    v21._countAndFlagsBits = v18;
    v21._object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v20);
    v4 = v16;
  }
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  return v22;
}

void sub_10014D7B0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  void (**v18)(_QWORD, _QWORD, _QWORD);
  Class isa;
  __int128 v20;
  __int128 v21;
  char v22[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7, v8);
  if (!Strong)
    return;
  v10 = (char *)Strong;
  v20 = 0u;
  v21 = 0u;
  v11 = (char *)DOCItemCollectionViewController.actionContext(from:)();
  sub_10000CB4C((uint64_t)&v20, &qword_100642730);
  v12 = objc_msgSend(a1, "presentationSourceItem", v20, v21);
  v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem];
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = v12;
  swift_unknownObjectRelease(v13);
  v14 = (char *)*(id *)&v10[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
  if (objc_msgSend(a3, "requiresResolvedItems"))
  {
    v15 = a3;
    v16 = v11;
    sub_10035E100(a4, v15, v16);

    v14 = (char *)v15;
LABEL_6:

    v14 = v16;
    goto LABEL_7;
  }
  v17 = objc_msgSend(a3, "unresolvedHandler");
  if (v17)
  {
    v18 = (void (**)(_QWORD, _QWORD, _QWORD))v17;
    v16 = v11;
    _Block_copy(v18);
    sub_10006922C((uint64_t *)&unk_1006424B0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    ((void (**)(_QWORD, Class, char *))v18)[2](v18, isa, v16);

    _Block_release(v18);
    _Block_release(v18);
    goto LABEL_6;
  }
LABEL_7:

  if (objc_msgSend(a3, "performActionExitsEditMode"))
    objc_msgSend(v10, "setEditing:animated:", 0, 1);

}

uint64_t sub_10014D980(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(_QWORD, __n128), uint64_t a6)
{
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;

  v12 = a1[2];
  swift_bridgeObjectRetain(v12);
  v13 = swift_bridgeObjectRetain(a2);
  v14 = sub_10014FD8C(v13, v12);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v12);
  v15 = a1[4];
  a1[4] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a1[3];
  if (v16)
  {
    v17 = a1[4];
    if (v17 < 0 || (v17 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n(a1[3], 2);
      swift_bridgeObjectRetain_n(v17, 2);
      v18 = (uint64_t)sub_10028F030(v17);
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v18 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(a1[3], 2);
      swift_bridgeObjectRetain_n(v17, 2);
    }
    v26 = v18;
    sub_100151030(&v26, v16);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v16, 2);
    v19 = a1[4];
    a1[4] = v26;
    swift_bridgeObjectRelease(v19);
  }
  v20 = a1[4];
  v21 = a3;
  swift_bridgeObjectRetain(a4);
  sub_10008BA00((uint64_t)a5, a6);
  v22 = swift_bridgeObjectRetain(v20);
  v23 = sub_10014FA5C(v22, (uint64_t)v21, a4, a5, a6);
  sub_100087534((uint64_t)a5, a6);
  swift_bridgeObjectRelease(v20);

  swift_bridgeObjectRelease(a4);
  v24 = a1[5];
  a1[5] = v23;
  return swift_bridgeObjectRelease(v24);
}

void sub_10014DB2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  objc_class *v8;
  Swift::String v9;
  objc_class *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  UIMenuOptions v14;
  uint64_t v15;
  unint64_t v16;
  UIImage_optional v17;
  UIMenuIdentifier_optional v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  objc_class *v23;
  UIMenuElementSize preferredElementSizea;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer children;
  UIImage_optional v27;

  children._rawValue = _swiftEmptyArrayStorage;
  v2 = swift_bridgeObjectRetain(*(_QWORD *)(a1 + 40));
  sub_10013030C(v2);
  v3 = *(_QWORD **)(a1 + 96);
  if (!v3)
    goto LABEL_7;
  v4 = (void *)v3[9];
  if (!v4)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = v3[11];
  if (!v5)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = v3[8];
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  swift_retain();
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v8 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

  preferredElementSizea = swift_bridgeObjectRetain(v3[5]);
  v9._countAndFlagsBits = v6;
  v9._object = v4;
  v27.value.super.isa = v8;
  v27.is_nil = 0;
  v10 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v27, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSizea, (Swift::OpaquePointer)_swiftEmptyArrayStorage).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)(((unint64_t)children._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)(((unint64_t)children._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
  specialized Array._endMutation()(v13);
  swift_release(v3);

LABEL_7:
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v14 = *(_QWORD *)(a1 + 56);
    preferredElementSize = (UIMenuElementSize)children._rawValue;
    v15 = 0;
    v16 = 0xE000000000000000;
    v17.value.super.isa = 0;
    v17.is_nil = 0;
    v18.value = (UIMenuIdentifier)1;
LABEL_12:
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(*(Swift::String *)&v15, (Swift::String_optional)0, v17, v18, v14, preferredElementSize, children);
    return;
  }
  v19 = *(_QWORD *)(a1 + 72);
  if (!v19)
    goto LABEL_15;
  v20 = *(_QWORD *)(a1 + 88);
  if (v20)
  {
    v21 = *(_QWORD *)(a1 + 64);
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v23 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

    preferredElementSize = (UIMenuElementSize)children._rawValue;
    v15 = v21;
    v16 = v19;
    v17.value.super.isa = v23;
    v17.is_nil = 0;
    v18.value = 0;
    v14 = -1;
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
}

Swift::Void __swiftcall DOCItemCollectionViewController.documentCameraViewControllerDidCancel(_:)(VNDocumentCameraViewController a1)
{
  -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
}

Swift::Void __swiftcall DOCItemCollectionViewController.documentCameraViewController(_:didFinishWith:)(VNDocumentCameraViewController _, VNDocumentCameraScan didFinishWith)
{
  objc_class *v2;
  VNDocumentCameraViewController *v5;
  objc_class *v6;
  objc_class *v7;

  v5 = (VNDocumentCameraViewController *)swift_allocObject(&unk_1005CA7A0, 32, 7);
  v5[2].super.super.super.isa = v2;
  v5[3].super.super.super.isa = _.super.super.super.isa;
  v6 = v2;
  v7 = _.super.super.super.isa;
  sub_100469270(didFinishWith.super.isa, (uint64_t)sub_10014E0D4, (uint64_t)v5);
  swift_release(v5);
}

Swift::Void __swiftcall VNDocumentCameraViewController.doc_configurePreferredPresentationStyle()()
{
  id v0;
  id v1;
  UIModalPresentationStyle v2;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  if (v1 == (id)6)
    v2 = UIModalPresentationFormSheet;
  else
    v2 = UIModalPresentationOverFullScreen;
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(v2);
}

id sub_10014DFB4()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD v8[5];
  uint64_t v9;

  v1 = swift_allocObject(&unk_1005CA980, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v8[4] = sub_100151FC8;
  v9 = v1;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1001B1644;
  v8[3] = &unk_1005CA998;
  v3 = _Block_copy(v8);
  v4 = v9;
  v5 = v0;
  swift_retain();
  v6 = objc_msgSend(v2, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v3, swift_release(v4).n128_f64[0]);
  swift_release(v1);
  _Block_release(v3);
  return v6;
}

uint64_t sub_10014E0A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014E0D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002BDA08(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10014E0DC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100467134(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_10014E154(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_10014E154(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t *v24;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t *v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  void *v31;
  Swift::Int v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  Swift::Int v106;
  id v107;
  Swift::Int v108;
  Swift::Int v109;
  Swift::Int v110;
  Swift::Int v111;
  void **v112;
  uint64_t v113;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_10014E8C4(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v106 = v4;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v113 = (uint64_t)_swiftEmptyArrayStorage;
    v112 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v12 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v12 - 2;
          if (v12 < 2)
            goto LABEL_127;
          if (!v94)
            goto LABEL_139;
          v96 = *(_QWORD *)&v9[16 * v95 + 32];
          v97 = *(_QWORD *)&v9[16 * v12 + 24];
          sub_10014E9B4((id *)(v94 + 8 * v96), (id *)(v94 + 8 * *(_QWORD *)&v9[16 * v12 + 16]), v94 + 8 * v97, v112);
          if (v1)
            break;
          if (v97 < v96)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_10046564C((uint64_t)v9);
          if (v95 >= *((_QWORD *)v9 + 2))
            goto LABEL_129;
          v98 = &v9[16 * v95 + 32];
          *(_QWORD *)v98 = v96;
          *((_QWORD *)v98 + 1) = v97;
          v99 = *((_QWORD *)v9 + 2);
          if (v12 > v99)
            goto LABEL_130;
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v99 - v12));
          *((_QWORD *)v9 + 2) = v99 - 1;
          v12 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_109:
      v100 = swift_bridgeObjectRelease(v9);
      *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v100);
      swift_bridgeObjectRelease(v113);
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v112 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v113 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 - 8;
  v103 = *a1 + 16;
  v9 = (char *)_swiftEmptyArrayStorage;
  v109 = v3;
  while (1)
  {
    v13 = v10++;
    v110 = v13;
    if (v10 < v3)
    {
      v14 = *(void **)(v11 + 8 * v13);
      v15 = *(id *)(v11 + 8 * v10);
      v16 = v14;
      v107 = objc_msgSend(v15, "menuSortOrder");
      v17 = objc_msgSend(v16, "menuSortOrder");

      v3 = v109;
      v10 = v13 + 2;
      if (v13 + 2 < v109)
      {
        v104 = v9;
        v18 = (id *)(v103 + 8 * v13);
        while (1)
        {
          v19 = *(v18 - 1);
          v20 = *v18;
          v21 = v19;
          v22 = objc_msgSend(v20, "menuSortOrder");
          v23 = objc_msgSend(v21, "menuSortOrder");

          if (v107 < v17 == v22 >= v23)
            break;
          ++v10;
          ++v18;
          v3 = v109;
          if (v109 == v10)
          {
            v10 = v109;
            v9 = v104;
            goto LABEL_22;
          }
        }
        v9 = v104;
        v3 = v109;
LABEL_22:
        v13 = v110;
      }
      if (v107 < v17)
      {
        if (v10 < v13)
          goto LABEL_133;
        if (v13 < v10)
        {
          v24 = (uint64_t *)(v102 + 8 * v10);
          v25 = v10;
          v26 = v13;
          v27 = (uint64_t *)(v11 + 8 * v13);
          do
          {
            if (v26 != --v25)
            {
              if (!v11)
                goto LABEL_138;
              v28 = *v27;
              *v27 = *v24;
              *v24 = v28;
            }
            ++v26;
            --v24;
            ++v27;
          }
          while (v26 < v25);
        }
      }
    }
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v13))
        goto LABEL_131;
      if (v10 - v13 < v106)
        break;
    }
LABEL_48:
    if (v10 < v13)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_100464E4C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v41 = *((_QWORD *)v9 + 2);
    v40 = *((_QWORD *)v9 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v9 = sub_100464E4C((char *)(v40 > 1), v41 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12;
    v42 = v9 + 32;
    v43 = &v9[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v10;
    if (v41)
    {
      v111 = v10;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_115;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_116;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_118;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_121;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_125;
            v72 = v47 < v82;
            goto LABEL_86;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v9 + 4);
            v74 = *((_QWORD *)v9 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_80;
          }
          v46 = *((_QWORD *)v9 + 4);
          v45 = *((_QWORD *)v9 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_117;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_120;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_123;
        if (__OFADD__(v66, v71))
          goto LABEL_124;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_86:
          if (v72)
            v44 = v56;
          goto LABEL_88;
        }
LABEL_80:
        if ((v67 & 1) != 0)
          goto LABEL_119;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_122;
        if (v78 < v66)
          goto LABEL_14;
LABEL_88:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v84 = v11;
        if (!v11)
          goto LABEL_137;
        v85 = v9;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_10014E9B4((id *)(v84 + 8 * *(_QWORD *)v86), (id *)(v84 + 8 * *(_QWORD *)v90), v84 + 8 * v91, v112);
        if (v1)
        {
          v9 = v85;
          goto LABEL_109;
        }
        if (v91 < v87)
          goto LABEL_112;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_113;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_114;
        v9 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v11 = v92;
        v10 = v111;
        if (v93 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v3 = v109;
    if (v10 >= v109)
      goto LABEL_98;
  }
  if (__OFADD__(v13, v106))
    goto LABEL_134;
  if (v13 + v106 >= v3)
    v29 = v3;
  else
    v29 = v13 + v106;
  if (v29 >= v13)
  {
    if (v10 != v29)
    {
      v105 = v9;
      v30 = v102 + 8 * v10;
      v108 = v29;
      do
      {
        v31 = *(void **)(v11 + 8 * v10);
        v32 = v13;
        v33 = v30;
        do
        {
          v34 = *(void **)v33;
          v35 = v31;
          v36 = v34;
          v37 = objc_msgSend(v35, "menuSortOrder");
          v38 = objc_msgSend(v36, "menuSortOrder");

          if (v37 >= v38)
            break;
          if (!v11)
            goto LABEL_136;
          v39 = *(void **)v33;
          v31 = *(void **)(v33 + 8);
          *(_QWORD *)v33 = v31;
          *(_QWORD *)(v33 + 8) = v39;
          v33 -= 8;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 8;
        v13 = v110;
      }
      while (v10 != v108);
      v10 = v108;
      v9 = v105;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_10014E8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v17 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, "menuSortOrder");
      v13 = objc_msgSend(v11, "menuSortOrder");

      if (v12 >= v13)
      {
LABEL_4:
        ++v4;
        v6 = v17 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v14 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_10014E9B4(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t result;
  id *v32;
  id *v35;
  char *v36;
  void **v37;
  id *v38;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v38 = __src;
  v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v22 = &a4[v11];
      v36 = (char *)v22;
      v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v23 = (id *)(a3 - 8);
        v24 = v4;
        v32 = v5;
        do
        {
          v35 = v4;
          v25 = v23 + 1;
          v26 = *--v24;
          v27 = *(v22 - 1);
          v28 = v26;
          v29 = objc_msgSend(v27, "menuSortOrder");
          v30 = objc_msgSend(v28, "menuSortOrder");

          if (v29 >= v30)
          {
            v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22)
              *v23 = *(v22 - 1);
            v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35)
              *v23 = *v24;
            v38 = v24;
          }
          if (v24 <= v32)
            break;
          --v23;
          v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = &a4[v8];
    v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = a4;
      do
      {
        v14 = v5;
        v15 = *v13;
        v16 = *v4;
        v17 = v15;
        v18 = objc_msgSend(v16, "menuSortOrder");
        v19 = objc_msgSend(v17, "menuSortOrder");

        if (v18 >= v19)
        {
          v21 = v14;
          if (v14 != v13)
            *v14 = *v13;
          v37 = ++v13;
          v20 = v4;
        }
        else
        {
          v20 = v4 + 1;
          v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4)
            *v14 = *v4;
        }
        v5 = v21 + 1;
        if (v13 >= v12)
          break;
        v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      v38 = v5;
    }
LABEL_43:
    sub_100464FEC(&v38, &v37, &v36);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_10014ECD0(uint64_t a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _QWORD v25[2];

  v25[1] = a5;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*a4;
  v15 = sub_100140624(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = (_QWORD *)*a4;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      swift_unknownObjectRelease(*(_QWORD *)(v22 + 8 * v15));
      *(_QWORD *)(v22 + 8 * v15) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1002E80E0();
    goto LABEL_7;
  }
  sub_1002DF398(v18, a3 & 1);
  v23 = sub_100140624(a2);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v9);
    __break(1u);
    return;
  }
  v15 = v23;
  v21 = (_QWORD *)*a4;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_10014EE38(v15, (uint64_t)v12, a1, v21);
}

uint64_t sub_10014EE38(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_10014EED0(uint64_t a1, uint64_t a2)
{
  return sub_10014F050(a1, a2) & 1;
}

uint64_t sub_10014EEE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v6)
  {
    v7 = 4;
    while (1)
    {
      v8 = v7 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1);
      v10 = v7 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_16;
LABEL_9:
      if (!objc_msgSend(v9, "canPerform:", a2))
      {
        swift_bridgeObjectRelease(a1);
        swift_unknownObjectRelease(v9);
        return 0;
      }
      v11 = objc_msgSend(a3, "canHostAppPerformAction:targetNode:", 1, v9);
      swift_unknownObjectRelease(v9);
      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease(a1);
        return 0;
      }
      ++v7;
      if (v10 == v6)
        goto LABEL_21;
    }
    v9 = *(void **)(a1 + 8 * v7);
    swift_unknownObjectRetain(v9);
    v10 = v7 - 3;
    if (!__OFADD__(v8, 1))
      goto LABEL_9;
LABEL_16:
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return 1;
}

uint64_t sub_10014F050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = 4;
    while (1)
    {
      v6 = v5 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
      v8 = v5 - 3;
      if (__OFADD__(v6, 1))
        goto LABEL_15;
LABEL_9:
      v9 = (uint64_t)objc_msgSend(v7, "canPerform:", a2);
      swift_unknownObjectRelease(v7);
      ++v5;
      if ((_DWORD)v9)
        v10 = v8 == v4;
      else
        v10 = 1;
      if (v10)
        goto LABEL_21;
    }
    v7 = *(void **)(a1 + 8 * v5);
    swift_unknownObjectRetain(v7);
    v8 = v5 - 3;
    if (!__OFADD__(v6, 1))
      goto LABEL_9;
LABEL_15:
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  }
  v9 = 1;
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return v9;
}

_QWORD *sub_10014F168(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  unsigned int v49;
  id v50;
  uint64_t v51;
  uint64_t inited;
  uint64_t v53;
  char v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  Class isa;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t i;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _BYTE v78[80];
  uint64_t v79;
  _BYTE v80[48];
  unint64_t v81;

  v3 = v2;
  v5 = a1;
  v81 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_88;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (i = v6; i; i = _CocoaArrayWrapper.endIndex.getter(v67))
  {
    v68 = v3;
    v7 = 0;
    v75 = v5 & 0xC000000000000001;
    v69 = v5 + 32;
    v8 = (void *)FPActionReparent;
    v9 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v9 = a2;
    v74 = v9;
    v73 = FPActionCopy;
    v72 = (void *)FPActionImportHere;
    v76 = (unint64_t)a2 >> 62;
    v77 = a2 & 0xC000000000000001;
    v70 = v5;
    v3 = i;
    while (!v75)
    {
      v11 = *(_QWORD *)(v69 + 8 * v7);
      swift_unknownObjectRetain(v11);
      v12 = __OFADD__(v7++, 1);
      if (v12)
        goto LABEL_85;
LABEL_14:
      if (v76)
      {
        swift_bridgeObjectRetain(a2);
        v13 = _CocoaArrayWrapper.endIndex.getter(v74);
        swift_bridgeObjectRelease(a2);
        if (!v13)
        {
LABEL_6:
          v10 = v11;
          goto LABEL_7;
        }
      }
      else if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_6;
      }
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
      v16 = v15;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v19 = v17;
      if (v14 == v18 && v16 == v17)
      {
        swift_bridgeObjectRelease_n(v16, 2);
LABEL_22:
        if (v76)
        {
          swift_bridgeObjectRetain(a2);
          v23 = _CocoaArrayWrapper.endIndex.getter(v74);
          swift_bridgeObjectRelease(a2);
          if (v23 >= 1001)
            goto LABEL_72;
          swift_bridgeObjectRetain(a2);
          v24 = v8;
          v21 = _CocoaArrayWrapper.endIndex.getter(v74);
          if (v21)
          {
LABEL_28:
            v3 = 4;
            while (1)
            {
              v5 = v3 - 4;
              if (v77)
              {
                v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a2);
                v26 = v3 - 3;
                if (__OFADD__(v5, 1))
                  goto LABEL_84;
              }
              else
              {
                v25 = *(void **)(a2 + 8 * v3);
                swift_unknownObjectRetain(v25);
                v26 = v3 - 3;
                if (__OFADD__(v5, 1))
                {
LABEL_84:
                  __break(1u);
                  goto LABEL_85;
                }
              }
              v27 = objc_msgSend(v25, "canPerform:", v8, v68);
              swift_unknownObjectRelease(v25);
              if (!v27)
              {

                swift_bridgeObjectRelease(a2);
                goto LABEL_71;
              }
              ++v3;
              if (v26 == v21)
              {

                swift_bridgeObjectRelease(a2);
                goto LABEL_56;
              }
            }
          }
        }
        else
        {
          v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v21 > 0x3E8)
            goto LABEL_72;
          swift_bridgeObjectRetain(a2);
          v22 = v8;
          if (v21)
            goto LABEL_28;
        }
        goto LABEL_74;
      }
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) != 0)
        goto LABEL_22;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v30 = v29;
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v33 = v31;
      if (v28 == v32 && v30 == v31)
      {
        swift_bridgeObjectRelease_n(v30, 2);
LABEL_41:
        v35 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
        if (v76)
        {
          swift_bridgeObjectRetain(a2);
          v38 = v8;
          v39 = v35;
          v5 = _CocoaArrayWrapper.endIndex.getter(v74);
          if (v5)
          {
LABEL_46:
            v3 = 4;
            while (1)
            {
              v40 = v3 - 4;
              if (v77)
              {
                v41 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a2);
                v42 = v3 - 3;
                if (__OFADD__(v40, 1))
                  goto LABEL_86;
              }
              else
              {
                v41 = *(void **)(a2 + 8 * v3);
                swift_unknownObjectRetain(v41);
                v42 = v3 - 3;
                if (__OFADD__(v40, 1))
                  goto LABEL_86;
              }
              if (!objc_msgSend(v41, "canPerform:", v8, v68))
              {

                swift_bridgeObjectRelease(a2);
                swift_unknownObjectRelease(v41);
                goto LABEL_70;
              }
              v43 = objc_msgSend(v35, "canHostAppPerformAction:targetNode:", 1, v41);
              swift_unknownObjectRelease(v41);
              if ((v43 & 1) == 0)
                break;
              ++v3;
              if (v42 == v5)
                goto LABEL_55;
            }

            swift_bridgeObjectRelease(a2);
LABEL_70:

LABEL_71:
            v5 = v70;
            v3 = i;
LABEL_72:
            v10 = v11;
            goto LABEL_7;
          }
        }
        else
        {
          v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(a2);
          v36 = v8;
          v37 = v35;
          if (v5)
            goto LABEL_46;
        }
LABEL_55:

        swift_bridgeObjectRelease(a2);
LABEL_56:
        v5 = v70;
        v3 = i;
        goto LABEL_75;
      }
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v33);
      if ((v34 & 1) != 0)
        goto LABEL_41;
      if (v76)
      {
        swift_bridgeObjectRetain(a2);
        v50 = v8;
        v44 = _CocoaArrayWrapper.endIndex.getter(v74);
        if (v44)
        {
LABEL_59:
          v3 = 4;
          while (1)
          {
            v46 = v3 - 4;
            if (v77)
            {
              v47 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a2);
              v48 = v3 - 3;
              if (__OFADD__(v46, 1))
                goto LABEL_87;
            }
            else
            {
              v47 = *(void **)(a2 + 8 * v3);
              swift_unknownObjectRetain(v47);
              v48 = v3 - 3;
              if (__OFADD__(v46, 1))
                goto LABEL_87;
            }
            v49 = objc_msgSend(v47, "canPerform:", v8, v68);
            swift_unknownObjectRelease(v47);
            if (!v49)
              break;
            ++v3;
            if (v48 == v44)
            {

              swift_bridgeObjectRelease(a2);
              v3 = i;
              goto LABEL_75;
            }
          }

          swift_bridgeObjectRelease(a2);
          v3 = i;
          goto LABEL_72;
        }
      }
      else
      {
        v44 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a2);
        v45 = v8;
        if (v44)
          goto LABEL_59;
      }
LABEL_74:

      swift_bridgeObjectRelease(a2);
LABEL_75:
      v51 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v51, v80);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v11;
      v79 = inited;
      specialized Array._endMutation()(inited);
      v53 = v79;
      swift_unknownObjectRetain(v11);
      v54 = sub_1003598CC(v72, v53);
      swift_bridgeObjectRelease(v53);
      if ((v54 & 1) != 0)
      {
        v56 = sub_100121B54(v11, v55);
        v57 = sub_10006922C(&qword_100641A70);
        v58 = swift_initStackObject(v57, v78);
        *(_OWORD *)(v58 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v58 + 32) = 0x7365646F4E636F64;
        *(_QWORD *)(v58 + 40) = 0xE800000000000000;
        *(_QWORD *)(v58 + 72) = sub_10006922C((uint64_t *)&unk_100643CB0);
        *(_QWORD *)(v58 + 48) = a2;
        swift_bridgeObjectRetain(a2);
        v59 = sub_10008B1F0(v58);
        v60 = objc_msgSend(v56, "filteringPredicate");
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v59);
        LOBYTE(v59) = objc_msgSend(v60, "evaluateWithObject:", isa);

        v62 = swift_unknownObjectRelease(v11);
        if ((v59 & 1) != 0)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
          v64 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v63 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v64 >= v63 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
          v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v56);
          specialized Array._endMutation()(v65);
          v5 = v70;
          v3 = i;
        }
        else
        {

          v5 = v70;
        }
        goto LABEL_8;
      }
      v10 = v11;
LABEL_7:
      swift_unknownObjectRelease(v10);
LABEL_8:
      if (v7 == v3)
      {
        swift_bridgeObjectRelease(v5);
        return (_QWORD *)v81;
      }
    }
    v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    v12 = __OFADD__(v7++, 1);
    if (!v12)
      goto LABEL_14;
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    if (v5 < 0)
      v67 = v5;
    else
      v67 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
  }
  swift_bridgeObjectRelease(v5);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10014F900(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;

  v2 = objc_msgSend(a1, "identifier");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierCopy);
  if (v6 == v3 && v7 == v5)
    goto LABEL_12;
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v3, v5, 0);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease(v5);
    goto LABEL_14;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierMove);
  if (v11 == v3 && v12 == v5)
  {
LABEL_12:
    swift_bridgeObjectRelease(v5);
    goto LABEL_13;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v3, v5, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) == 0)
    goto LABEL_15;
LABEL_14:
  v16 = objc_msgSend(a1, "localizedCompactTitle");
  if (!v16)
LABEL_15:
    v16 = objc_msgSend(a1, "localizedTitle");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);

  return v17;
}

_QWORD *sub_10014FA5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, __n128), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD, __n128);
  _QWORD *v30;
  id v31;
  __n128 v32;
  void *v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;

  v6 = a1;
  if (a1 >> 62)
    goto LABEL_20;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v7)
  {
    v42 = v6 & 0xC000000000000001;
    v41 = (id)objc_opt_self(DOCActivity);
    v40 = v6;
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v8 = 4;
    v39 = v7;
    while (1)
    {
      v16 = v42 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6) : *(id *)(v6 + 8 * v8);
      v17 = v16;
      if (__OFADD__(v8 - 4, 1))
        break;
      v18 = objc_msgSend(v16, "identifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v20 = v19;

      v21 = String._bridgeToObjectiveC()();
      v22 = objc_msgSend(v41, "isDestructiveActionIdentifier:", v21);
      swift_bridgeObjectRelease(v20);

      v23 = 2;
      if (!v22)
        v23 = 0;
      v45 = v23;
      v44 = sub_10014F900(v17);
      v25 = v24;
      v26 = objc_msgSend(v17, "image");
      v27 = sub_10014D614(v17);
      v28 = swift_allocObject(&unk_1005CA7F0, 24, 7);
      swift_unknownObjectWeakInit(v28 + 16);
      v29 = a4;
      v30 = (_QWORD *)swift_allocObject(&unk_1005CA818, 40, 7);
      v30[2] = v28;
      v30[3] = v17;
      v30[4] = a3;
      v31 = v17;
      swift_bridgeObjectRetain(a3);
      v37 = v30;
      a4 = v29;
      v33 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v44, v25, 0, 0, v26, 0, v27, 0, v32, 0, v45, 0, sub_100151D94, v37);
      if (!v29)
      {

        v10 = (uint64_t)v33;
        v11 = v39;
        v6 = v40;
        v12 = v8 - 3;
LABEL_5:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v10);
        specialized Array._endMutation()(v15);
        goto LABEL_8;
      }
      v34 = swift_retain();
      v10 = v29(v33, v34);

      sub_100087534((uint64_t)v29, a5);
      v11 = v39;
      v6 = v40;
      v12 = v8 - 3;
      if (v10)
        goto LABEL_5;
LABEL_8:
      ++v8;
      if (v12 == v11)
        goto LABEL_24;
    }
    __break(1u);
LABEL_20:
    if (v6 < 0)
      v35 = v6;
    else
      v35 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v35);
  }
LABEL_24:
  swift_bridgeObjectRelease(v6);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10014FD8C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char **v8;
  id v9;
  void *v10;
  unint64_t v11;
  _BOOL8 v12;
  char **v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v21 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v8 = &selRef_viewOptionsRoot;
      v22 = v4;
      while (v6)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
LABEL_9:
        v10 = v9;
        v11 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        v12 = sub_1004779B4((Swift::UInt)objc_msgSend(v9, v8[251]), a2);
        if (v12)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v13 = v8;
          v14 = v7;
          v15 = v6;
          v16 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
          v17 = v16;
          v6 = v15;
          v7 = v14;
          v8 = v13;
          v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v10);
          specialized ContiguousArray._endMutation()(v18);
          v3 = v21;
          v4 = v22;
        }
        else
        {

        }
        ++v5;
        if (v11 == v4)
          return _swiftEmptyArrayStorage;
      }
      if (v5 < *(_QWORD *)(v7 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v3 < 0)
        v20 = v3;
      else
        v20 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v9 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10014FF08(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17 = _s21_DOCSectionDescriptorCMa();
  v18 = swift_allocObject(v17, 104, 7);
  *(_QWORD *)(v18 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v18 + 40) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v18 + 48) = 1;
  *(_QWORD *)(v18 + 56) = 2;
  *(_OWORD *)(v18 + 64) = 0u;
  *(_OWORD *)(v18 + 80) = 0u;
  *(_QWORD *)(v18 + 96) = 0;
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = 0;
  swift_retain();
  swift_bridgeObjectRelease(&_swiftEmptySetSingleton);
  *(_BYTE *)(v18 + 48) = a3;
  v19 = *(_QWORD *)(v18 + 72);
  *(_QWORD *)(v18 + 64) = a4;
  *(_QWORD *)(v18 + 72) = a5;
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(v18 + 88);
  *(_QWORD *)(v18 + 80) = a6;
  *(_QWORD *)(v18 + 88) = a7;
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(v18 + 56) = a8;
  v21 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v18 + 24) = a2;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v18 + 96) = a9;
  swift_release(v18);
  swift_release(v22);
  return v18;
}

uint64_t sub_100150000(void **__src, id *a2, void **a3, void **__dst, _QWORD *a5)
{
  void **v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  BOOL v26;
  id *v27;
  id *v28;
  void **v29;
  uint64_t v30;
  _QWORD *v31;
  void **v32;
  void **v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id *v42;
  uint64_t result;
  id *v44;
  void **v45;
  id *v46;
  void **v47;
  void **v48;
  id *v49;
  void **v50;
  void **v51;
  void **v52;
  void **v53;
  void **v54;
  id *v55;
  id *v56;
  void **v57;
  void **v58;
  id *v59;

  v6 = __dst;
  v7 = a3;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = (char *)a3 - (char *)a2;
  v13 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v13 = (char *)a3 - (char *)a2;
  v14 = v13 >> 3;
  v59 = __src;
  v58 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != a2 || &a2[v14] <= __dst)
      {
        v28 = a2;
        memmove(__dst, a2, 8 * v14);
        a2 = v28;
      }
      v29 = &v6[v14];
      v57 = v29;
      v59 = a2;
      if (v8 < a2 && v12 >= 8)
      {
        v30 = a5[2];
        v31 = a5 + 4;
        v50 = v8;
        v52 = v6;
        do
        {
          v32 = v7 - 1;
          v33 = v29 - 1;
          if (v30)
          {
            v45 = v29 - 1;
            v46 = v7 - 1;
            v54 = v7;
            v56 = a2;
            v34 = *(a2 - 1);
            v44 = a2 - 1;
            v35 = *(v29 - 1);
            a5 = v34;
            v36 = 0;
            v48 = v29;
            while (1)
            {
              v37 = (id)v31[v36];
              v38 = objc_msgSend(v35, "menuSortOrder");
              if (v37 == v38)
                break;
              if (v30 == ++v36)
              {
                v36 = 0;
                break;
              }
            }
            v39 = 0;
            while (1)
            {
              v40 = (id)v31[v39];
              if (v40 == objc_msgSend(a5, "menuSortOrder"))
                break;
              v41 = v39 + 1;
              if (__OFADD__(v39, 1))
              {
                __break(1u);
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
              ++v39;
              if (v41 == v30)
              {

                v8 = v50;
                v6 = v52;
                v7 = v54;
                a2 = v56;
                v32 = v46;
                v29 = v48;
                v33 = v45;
                goto LABEL_60;
              }
            }

            v26 = v37 == v38;
            v8 = v50;
            v6 = v52;
            v7 = v54;
            a2 = v56;
            v32 = v46;
            v29 = v48;
            v33 = v45;
            if (!v26 || v36 >= v39)
              goto LABEL_60;
            v42 = v44;
            if (v54 != v56 || v46 >= v56)
              *v46 = *v44;
            v59 = v44;
          }
          else
          {
LABEL_60:
            v57 = v33;
            if (v7 < v29 || v32 >= v29 || v7 != v29)
              *v32 = *v33;
            v42 = a2;
            v29 = v33;
          }
          if (v42 <= v8)
            break;
          a2 = v42;
          v7 = v32;
        }
        while (v29 > v6);
      }
      goto LABEL_67;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst)
    {
      v15 = a2;
      memmove(__dst, __src, 8 * v11);
      a2 = v15;
    }
    v47 = &v6[v11];
    v57 = v47;
    if (a2 < v7 && v9 >= 8)
    {
      v16 = a5[2];
      v17 = a5 + 4;
      v53 = v7;
      do
      {
        if (!v16)
          goto LABEL_30;
        v49 = v8;
        v51 = v6;
        v55 = a2;
        v18 = *v6;
        v19 = *a2;
        a5 = v18;
        v20 = 0;
        while (1)
        {
          v21 = (id)v17[v20];
          v22 = objc_msgSend(v19, "menuSortOrder");
          if (v21 == v22)
            break;
          if (v16 == ++v20)
          {
            v20 = 0;
            break;
          }
        }
        v23 = 0;
        while (1)
        {
          v24 = (id)v17[v23];
          if (v24 == objc_msgSend(a5, "menuSortOrder"))
            break;
          v25 = v23 + 1;
          if (__OFADD__(v23, 1))
            goto LABEL_69;
          ++v23;
          if (v25 == v16)
          {

            v8 = v49;
            v6 = v51;
            v7 = v53;
            a2 = v55;
            goto LABEL_30;
          }
        }

        v26 = v21 == v22;
        v8 = v49;
        v6 = v51;
        v7 = v53;
        a2 = v55;
        if (v26 && v20 < v23)
        {
          v27 = v55 + 1;
          if (v49 < v55 || v49 >= v27 || v49 != v55)
            *v49 = *v55;
        }
        else
        {
LABEL_30:
          if (v8 != v6)
            *v8 = *v6;
          v58 = ++v6;
          v27 = a2;
        }
        ++v8;
        if (v6 >= v47)
          break;
        a2 = v27;
      }
      while (v27 < v7);
      v59 = v8;
    }
LABEL_67:
    sub_100464FEC(&v59, &v58, &v57);
    return 1;
  }
LABEL_70:
  swift_bridgeObjectRelease(a5);
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100150420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a3 != a2)
  {
    v5 = a3;
    v6 = *a4;
    v7 = *(_QWORD *)(a5 + 16);
    v8 = a5 + 32;
    v21 = *a4;
    do
    {
      if (v7)
      {
        v9 = *(void **)(v6 + 8 * v5);
        v10 = v5;
        v24 = v5;
        do
        {
          v22 = v10 - 1;
          v23 = v10;
          v11 = *(void **)(v6 + 8 * (v10 - 1));
          v12 = v9;
          v13 = v11;
          v14 = 0;
          while (1)
          {
            v15 = *(id *)(v8 + 8 * v14);
            v16 = objc_msgSend(v12, "menuSortOrder");
            if (v15 == v16)
              break;
            if (v7 == ++v14)
            {
              v14 = 0;
              break;
            }
          }
          v17 = 0;
          while (1)
          {
            v18 = *(id *)(v8 + 8 * v17);
            if (v18 == objc_msgSend(v13, "menuSortOrder"))
              break;
            if (v7 == ++v17)
            {

              v5 = v24;
              v6 = v21;
              goto LABEL_4;
            }
          }

          v5 = v24;
          v6 = v21;
          if (v15 != v16 || v14 >= v17)
            break;
          if (!v21)
          {
            __break(1u);
            return;
          }
          v9 = *(void **)(v21 + 8 * v23);
          *(_QWORD *)(v21 + 8 * v23) = *(_QWORD *)(v21 + 8 * v22);
          *(_QWORD *)(v21 + 8 * v22) = v9;
          v10 = v22;
        }
        while (v22 != a1);
      }
LABEL_4:
      ++v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_100150598(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char *v12;
  Swift::Int v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  Swift::Int v28;
  Swift::Int v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  Swift::Int v40;
  Swift::Int v41;
  uint64_t *v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  void *v46;
  Swift::Int v47;
  Swift::Int v48;
  void *v49;
  id v50;
  id v51;
  unint64_t v52;
  id v53;
  id v54;
  unint64_t v55;
  id v56;
  BOOL v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  void **v108;
  id *v109;
  unint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void **v120;
  id *v121;
  void **v122;
  void **v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  Swift::Int v129;
  Swift::Int v130;
  Swift::Int v131;
  Swift::Int v132;
  _BOOL4 v133;
  Swift::Int v134;
  void **__dst;
  Swift::Int v136;
  Swift::Int v137;
  Swift::Int v138;
  Swift::Int v139;
  int v140[2];
  void **v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;

  v3 = a2;
  v5 = a1[1];
  swift_bridgeObjectRetain_n(a2, 3);
  v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (!v5)
        return swift_bridgeObjectRelease_n(v3, 3);
      swift_bridgeObjectRetain(v3);
      sub_100150420(0, v5, 1, a1, v3);
      return swift_bridgeObjectRelease_n(v3, 4);
    }
    goto LABEL_176;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_184;
  v128 = a1;
  v129 = v6;
  v146 = (_QWORD *)v3;
  v132 = v5;
  v143 = v2;
  if (v5 < 2)
  {
    v12 = (char *)_swiftEmptyArrayStorage;
    v147 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      v60 = _swiftEmptyArrayStorage[2];
LABEL_140:
      if (v60 < 2)
      {
LABEL_151:
        v126 = swift_bridgeObjectRelease(v12);
        *(_QWORD *)((v147 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()(v126);
        swift_bridgeObjectRelease_n(v3, 3);
        return swift_bridgeObjectRelease(v147);
      }
      v114 = *v128;
      v145 = *v128;
      while (1)
      {
        v115 = v60 - 2;
        if (v60 < 2)
          goto LABEL_170;
        if (!v114)
          goto LABEL_183;
        v116 = v12;
        v117 = v12 + 32;
        v118 = *(_QWORD *)&v12[16 * v115 + 32];
        v119 = *(_QWORD *)&v12[16 * v60 + 24];
        v120 = (void **)(v114 + 8 * v118);
        v121 = (id *)(v114 + 8 * *(_QWORD *)&v117[16 * v60 - 16]);
        v122 = (void **)(v114 + 8 * v119);
        swift_bridgeObjectRetain(v146);
        v123 = v122;
        v3 = (uint64_t)v146;
        sub_100150000(v120, v121, v123, __dst, v146);
        if (v143)
        {
          v112 = v116;
          goto LABEL_137;
        }
        swift_bridgeObjectRelease(v146);
        if (v119 < v118)
          goto LABEL_172;
        if ((swift_isUniquelyReferenced_nonNull_native(v116) & 1) == 0)
          v116 = sub_10046564C((uint64_t)v116);
        if (v115 >= *((_QWORD *)v116 + 2))
          goto LABEL_173;
        v124 = &v116[16 * v115 + 32];
        *(_QWORD *)v124 = v118;
        *((_QWORD *)v124 + 1) = v119;
        v125 = *((_QWORD *)v116 + 2);
        if (v60 > v125)
          goto LABEL_174;
        v12 = v116;
        memmove(&v116[16 * v60 + 16], &v116[16 * v60 + 32], 16 * (v125 - v60));
        *((_QWORD *)v116 + 2) = v125 - 1;
        v60 = v125 - 1;
        v114 = v145;
        if (v125 <= 2)
          goto LABEL_151;
      }
    }
  }
  else
  {
    v8 = v7 >> 1;
    v9 = sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v147 = v10;
  }
  v13 = 0;
  v14 = *a1;
  v144 = v3 + 32;
  v127 = *a1 - 8;
  v12 = (char *)_swiftEmptyArrayStorage;
  v15 = v132;
  v142 = *a1;
  while (2)
  {
    v16 = v13;
    v17 = v13 + 1;
    *(_QWORD *)v140 = v12;
    v131 = v13;
    if (v13 + 1 >= v15)
      goto LABEL_59;
    v18 = *(_QWORD *)(v3 + 16);
    if (!v18)
    {
      v28 = v13 + 2;
      if (v13 + 2 < v132)
        goto LABEL_27;
      goto LABEL_48;
    }
    v136 = v13 + 1;
    v19 = *(void **)(v14 + 8 * v13);
    v20 = *(id *)(v14 + 8 * v17);
    v21 = v19;
    v22 = 0;
    while (1)
    {
      v23 = *(id *)(v144 + 8 * v22);
      v24 = objc_msgSend(v20, "menuSortOrder");
      if (v23 == v24)
        break;
      if (v18 == ++v22)
      {
        v22 = 0;
        break;
      }
    }
    v25 = 0;
    while (1)
    {
      v26 = *(id *)(v144 + 8 * v25);
      if (v26 == objc_msgSend(v21, "menuSortOrder"))
        break;
      v27 = v25 + 1;
      if (__OFADD__(v25, 1))
        goto LABEL_158;
      ++v25;
      if (v27 == v18)
      {

        if (v23 == v24)
        {
          v16 = v131;
          v28 = v131 + 2;
          v12 = *(char **)v140;
          v14 = v142;
          v17 = v136;
          if (v131 + 2 >= v132)
            goto LABEL_48;
LABEL_27:
          v133 = 0;
          goto LABEL_34;
        }
LABEL_47:
        v12 = *(char **)v140;
        v14 = v142;
        v17 = v136;
        v16 = v131;
        v28 = v131 + 2;
        if (v131 + 2 < v132)
          goto LABEL_27;
LABEL_48:
        v17 = v28;
        goto LABEL_59;
      }
    }

    if (v23 != v24)
      goto LABEL_47;
    v133 = v22 < v25;
    v16 = v131;
    v28 = v131 + 2;
    v29 = v131 + 2;
    v12 = *(char **)v140;
    v14 = v142;
    v17 = v136;
    if (v131 + 2 >= v132)
      goto LABEL_50;
    do
    {
LABEL_34:
      v29 = v28;
      if (!v18)
        goto LABEL_32;
      v137 = v28;
      v30 = *(void **)(v14 + 8 * v17);
      v31 = *(id *)(v14 + 8 * v28);
      v32 = v30;
      v33 = 0;
      while (1)
      {
        v34 = *(id *)(v144 + 8 * v33);
        v35 = objc_msgSend(v31, "menuSortOrder");
        if (v34 == v35)
          break;
        if (v18 == ++v33)
        {
          v33 = 0;
          break;
        }
      }
      v36 = 0;
      while (1)
      {
        v37 = *(id *)(v144 + 8 * v36);
        if (v37 == objc_msgSend(v32, "menuSortOrder"))
          break;
        v38 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          swift_bridgeObjectRelease_n(v146, 3);
          __break(1u);
LABEL_181:
          swift_bridgeObjectRelease_n(v3, 3);
          __break(1u);
LABEL_182:
          swift_bridgeObjectRelease_n(v3, 3);
          __break(1u);
LABEL_183:
          swift_bridgeObjectRelease_n(v146, 3);
          __break(1u);
LABEL_184:
          swift_bridgeObjectRelease_n(v3, 4);
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
          __break(1u);
          return result;
        }
        ++v36;
        if (v38 == v18)
        {

          goto LABEL_31;
        }
      }

      if (v34 != v35)
      {
LABEL_31:
        v12 = *(char **)v140;
        v14 = v142;
        v16 = v131;
        v29 = v137;
LABEL_32:
        if (v133)
          goto LABEL_51;
        goto LABEL_33;
      }
      v12 = *(char **)v140;
      v14 = v142;
      v16 = v131;
      v29 = v137;
      if (((v133 ^ (v33 >= v36)) & 1) == 0)
        goto LABEL_50;
LABEL_33:
      v28 = v29 + 1;
      v17 = v29;
    }
    while (v29 + 1 < v132);
    ++v29;
LABEL_50:
    v17 = v29;
    if (v133)
    {
LABEL_51:
      if (v29 < v16)
        goto LABEL_179;
      if (v16 < v29)
      {
        v39 = (uint64_t *)(v127 + 8 * v29);
        v40 = v29;
        v41 = v16;
        v42 = (uint64_t *)(v14 + 8 * v16);
        do
        {
          if (v41 != --v40)
          {
            if (!v14)
              goto LABEL_182;
            v43 = *v42;
            *v42 = *v39;
            *v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
      v17 = v29;
    }
LABEL_59:
    if (v17 < v132)
    {
      if (__OFSUB__(v17, v16))
        goto LABEL_175;
      if (v17 - v16 < v129)
      {
        v44 = v16 + v129;
        if (__OFADD__(v16, v129))
          goto LABEL_177;
        if (v44 >= v132)
          v44 = v132;
        if (v44 < v16)
          goto LABEL_178;
        if (v17 != v44)
        {
          v45 = *(_QWORD *)(v3 + 16);
          v130 = v44;
          do
          {
            if (v45)
            {
              v46 = *(void **)(v14 + 8 * v17);
              v47 = v17;
              v138 = v17;
              while (1)
              {
                v134 = v47;
                v48 = v47 - 1;
                v49 = *(void **)(v14 + 8 * (v47 - 1));
                v50 = v46;
                v51 = v49;
                v52 = 0;
                while (1)
                {
                  v53 = *(id *)(v3 + 8 * v52 + 32);
                  v54 = objc_msgSend(v50, "menuSortOrder");
                  if (v53 == v54)
                    break;
                  if (v45 == ++v52)
                  {
                    v52 = 0;
                    break;
                  }
                }
                v55 = 0;
                while (1)
                {
                  v56 = *(id *)(v3 + 8 * v55 + 32);
                  if (v56 == objc_msgSend(v51, "menuSortOrder"))
                    break;
                  ++v55;
                  v3 = (uint64_t)v146;
                  if (v45 == v55)
                  {

                    goto LABEL_68;
                  }
                }

                v3 = (uint64_t)v146;
                if (v53 != v54)
                  break;
                v57 = v52 >= v55;
                v12 = *(char **)v140;
                v14 = v142;
                v17 = v138;
                if (v57)
                  goto LABEL_69;
                if (!v142)
                  goto LABEL_181;
                v46 = *(void **)(v142 + 8 * v134);
                *(_QWORD *)(v142 + 8 * v134) = *(_QWORD *)(v142 + 8 * v48);
                *(_QWORD *)(v142 + 8 * v48) = v46;
                v47 = v48;
                if (v48 == v131)
                  goto LABEL_69;
              }
LABEL_68:
              v12 = *(char **)v140;
              v14 = v142;
              v17 = v138;
            }
LABEL_69:
            ++v17;
          }
          while (v17 != v130);
          v17 = v130;
          v16 = v131;
        }
      }
    }
    if (v17 < v16)
      goto LABEL_171;
    v139 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_100464E4C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v59 = *((_QWORD *)v12 + 2);
    v58 = *((_QWORD *)v12 + 3);
    v60 = v59 + 1;
    v14 = v142;
    if (v59 >= v58 >> 1)
    {
      v111 = sub_100464E4C((char *)(v58 > 1), v59 + 1, 1, v12);
      v14 = v142;
      v12 = v111;
    }
    *((_QWORD *)v12 + 2) = v60;
    v61 = v12 + 32;
    v62 = &v12[16 * v59 + 32];
    *(_QWORD *)v62 = v16;
    *((_QWORD *)v62 + 1) = v17;
    if (!v59)
    {
      v60 = 1;
LABEL_134:
      v15 = v132;
      v13 = v139;
      if (v139 >= v132)
        goto LABEL_140;
      continue;
    }
    break;
  }
  while (2)
  {
    v63 = v60 - 1;
    if (v60 >= 4)
    {
      v68 = &v61[16 * v60];
      v69 = *((_QWORD *)v68 - 8);
      v70 = *((_QWORD *)v68 - 7);
      v74 = __OFSUB__(v70, v69);
      v71 = v70 - v69;
      if (v74)
        goto LABEL_159;
      v73 = *((_QWORD *)v68 - 6);
      v72 = *((_QWORD *)v68 - 5);
      v74 = __OFSUB__(v72, v73);
      v66 = v72 - v73;
      v67 = v74;
      if (v74)
        goto LABEL_160;
      v75 = v60 - 2;
      v76 = &v61[16 * v60 - 32];
      v78 = *(_QWORD *)v76;
      v77 = *((_QWORD *)v76 + 1);
      v74 = __OFSUB__(v77, v78);
      v79 = v77 - v78;
      if (v74)
        goto LABEL_162;
      v74 = __OFADD__(v66, v79);
      v80 = v66 + v79;
      if (v74)
        goto LABEL_165;
      if (v80 >= v71)
      {
        v98 = &v61[16 * v63];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        v74 = __OFSUB__(v99, v100);
        v101 = v99 - v100;
        if (v74)
          goto LABEL_169;
        v91 = v66 < v101;
      }
      else
      {
LABEL_105:
        if ((v67 & 1) != 0)
          goto LABEL_161;
        v75 = v60 - 2;
        v81 = &v61[16 * v60 - 32];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v84 = __OFSUB__(v82, v83);
        v85 = v82 - v83;
        v86 = v84;
        if (v84)
          goto LABEL_164;
        v87 = &v61[16 * v63];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v74 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v74)
          goto LABEL_167;
        if (__OFADD__(v85, v90))
          goto LABEL_168;
        if (v85 + v90 < v66)
          goto LABEL_117;
        v91 = v66 < v90;
      }
      if (v91)
        v63 = v75;
    }
    else
    {
      if (v60 == 3)
      {
        v65 = *((_QWORD *)v12 + 4);
        v64 = *((_QWORD *)v12 + 5);
        v74 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        v67 = v74;
        goto LABEL_105;
      }
      v92 = *((_QWORD *)v12 + 4);
      v93 = *((_QWORD *)v12 + 5);
      v74 = __OFSUB__(v93, v92);
      v85 = v93 - v92;
      v86 = v74;
LABEL_117:
      if ((v86 & 1) != 0)
        goto LABEL_163;
      v94 = &v61[16 * v63];
      v96 = *(_QWORD *)v94;
      v95 = *((_QWORD *)v94 + 1);
      v74 = __OFSUB__(v95, v96);
      v97 = v95 - v96;
      if (v74)
        goto LABEL_166;
      if (v97 < v85)
        goto LABEL_134;
    }
    v102 = v63 - 1;
    if (v63 - 1 >= v60)
      goto LABEL_154;
    if (!v14)
      goto LABEL_180;
    v103 = &v61[16 * v102];
    v104 = *(_QWORD *)v103;
    v105 = v63;
    v106 = &v61[16 * v63];
    v107 = *((_QWORD *)v106 + 1);
    v108 = (void **)(v14 + 8 * *(_QWORD *)v103);
    v109 = (id *)(v14 + 8 * *(_QWORD *)v106);
    v141 = (void **)(v14 + 8 * v107);
    v3 = (uint64_t)v146;
    swift_bridgeObjectRetain(v146);
    sub_100150000(v108, v109, v141, __dst, v146);
    if (!v143)
    {
      swift_bridgeObjectRelease(v146);
      if (v107 < v104)
        goto LABEL_155;
      if (v105 > *((_QWORD *)v12 + 2))
        goto LABEL_156;
      *(_QWORD *)v103 = v104;
      v61 = v12 + 32;
      *(_QWORD *)&v12[16 * v102 + 40] = v107;
      v110 = *((_QWORD *)v12 + 2);
      if (v105 >= v110)
        goto LABEL_157;
      v60 = v110 - 1;
      memmove(v106, v106 + 16, 16 * (v110 - 1 - v105));
      *((_QWORD *)v12 + 2) = v110 - 1;
      v3 = (uint64_t)v146;
      v14 = v142;
      if (v110 <= 2)
        goto LABEL_134;
      continue;
    }
    break;
  }
  v112 = v12;
LABEL_137:
  swift_bridgeObjectRelease(v112);
  v113 = swift_bridgeObjectRelease(v3);
  *(_QWORD *)((v147 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v113);
  swift_bridgeObjectRelease_n(v3, 3);
  return swift_bridgeObjectRelease(v147);
}

uint64_t sub_100151030(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n(a2, 2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_100467134(v4);
    *a1 = v4;
  }
  v6 = *(_QWORD *)(v4 + 16);
  v9[0] = v4 + 32;
  v9[1] = v6;
  swift_bridgeObjectRetain(a2);
  sub_100150598(v9, a2);
  v7 = swift_bridgeObjectRelease(a2);
  specialized ContiguousArray._endMutation()(v7);
  return swift_bridgeObjectRelease_n(a2, 2);
}

UIMenu sub_1001510D8(uint64_t a1, void *a2, unint64_t a3, uint64_t (*a4)(_QWORD, __n128), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(_QWORD, __n128);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  UIMenuElementSize preferredElementSize;
  Swift::String v39;
  UIMenu result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::OpaquePointer v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  UIImage_optional v50;

  v7 = v6;
  v13 = sub_10034F94C(a1, 1, a2, *(_QWORD *)(v6 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), 0, 0);
  v14 = sub_100360954(a1, v7, 1);
  v49 = v13;
  sub_10012FB10((uint64_t)v14);
  if (a3)
  {
    swift_bridgeObjectRetain(a1);
    v15 = sub_10014F168(a3, a1);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v15 = _swiftEmptyArrayStorage;
  }
  v49 = v13;
  sub_10012FB10((uint64_t)v15);
  if (v13 < 0 || (v49 & 0x4000000000000000) != 0)
  {
    v41 = swift_bridgeObjectRetain(v49);
    v16 = (uint64_t)sub_10028F030(v41);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v16 = v49 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v49);
  }
  v49 = v16;
  sub_10014E0DC(&v49);
  swift_bridgeObjectRelease(v13);
  v17 = v49;
  v47 = a1;
  v48 = (void *)v7;
  v45 = (unint64_t)a6 >> 62;
  if ((unint64_t)a6 >> 62)
  {
    if (a6 < 0)
      v26 = a6;
    else
      v26 = a6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a6);
    v18 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (!v18)
      goto LABEL_21;
  }
  else
  {
    v18 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a6);
    if (!v18)
      goto LABEL_21;
  }
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_44;
  }
  v19 = 0;
  v46 = a6 & 0xC000000000000001;
  v20 = a6;
  do
  {
    if (v46)
    {
      v21 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, a6);
    }
    else
    {
      v21 = *(_QWORD **)(a6 + 8 * v19 + 32);
      swift_retain();
    }
    sub_10014D980(v21, v17, v48, v47, a4, a5);
    v22 = a4;
    v23 = a5;
    v24 = v21[12];
    if (v24)
    {
      swift_retain();
      sub_10014D980(v25, v17, v48, v47, v22, v23);
      swift_release(v24);
    }
    ++v19;
    swift_release(v21);
    a5 = v23;
    a4 = v22;
    a6 = v20;
  }
  while (v18 != v19);
LABEL_21:
  swift_release(v17);
  swift_bridgeObjectRelease(a6);
  if (v45)
  {
    if (a6 < 0)
      v28 = a6;
    else
      v28 = a6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a6);
    v27 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(a6);
  }
  else
  {
    v27 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v29 = (uint64_t)_swiftEmptyArrayStorage;
  if (!v27)
    goto LABEL_35;
  v49 = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v27);
  if (v27 < 0)
  {
LABEL_44:
    __break(1u);
    result.super.super.isa = (Class)swift_release(v49);
    __break(1u);
    return result;
  }
  v30 = 0;
  do
  {
    if ((a6 & 0xC000000000000001) != 0)
    {
      v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a6);
    }
    else
    {
      v31 = *(_QWORD *)(a6 + 8 * v30 + 32);
      swift_retain();
    }
    ++v30;
    sub_10014DB2C(v31);
    v33 = v32;
    v34 = swift_release(v31);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
    v35 = *(_QWORD *)(v49 + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
    v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
    specialized ContiguousArray._endMutation()(v36);
  }
  while (v27 != v30);
  v29 = v49;
LABEL_35:
  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v42 = v29;
    else
      v42 = v29 & 0xFFFFFFFFFFFFFF8;
    v43 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v29);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v42, v43);
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    v37 = swift_bridgeObjectRetain(v29);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v37);
    sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    preferredElementSize = v29;
  }
  swift_bridgeObjectRelease(v29);
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v50.value.super.isa = 0;
  v50.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v50, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v44);
}

Class sub_100151504(uint64_t a1, void *a2)
{
  uint64_t v2;
  Class result;
  Class v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  uint64_t v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t All;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t inited;
  Swift::Int v39;
  Swift::Int v40;
  Swift::Int v41;
  Swift::Int v42;
  Swift::Int v43;
  Swift::Int v44;
  Swift::Int v45;
  Swift::Int v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  Class isa;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  objc_super v60;
  uint64_t v61[3];
  char v62[104];
  Swift::String v63;

  result = (Class)(id)_DocumentManagerBundle(a1);
  if (result)
  {
    v6 = result;
    v59 = a2;
    v63._object = (void *)0x8000000100511A00;
    v7._countAndFlagsBits = 0x6341206B63697551;
    v7._object = (void *)0xED0000736E6F6974;
    v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v8.value._object = (void *)0xEB00000000656C62;
    v9._countAndFlagsBits = 0x6341206B63697551;
    v9._object = (void *)0xED0000736E6F6974;
    v63._countAndFlagsBits = 0xD000000000000027;
    v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v63);
    object = v10._object;

    v12 = swift_allocObject(&unk_1005CA7C8, 24, 7);
    *(_QWORD *)(v12 + 16) = _swiftEmptyArrayStorage;
    v13 = objc_msgSend((id)objc_opt_self(DOCFeature), "suggestedMoveToFolderInContextMenu");
    v14 = objc_msgSend(v13, "isEnabled");

    if (v14)
    {
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0)
          v53 = a1;
        else
          v53 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v54 = _CocoaArrayWrapper.endIndex.getter(v53);
        swift_bridgeObjectRelease(a1);
        if (v54 != 1)
          goto LABEL_7;
        goto LABEL_5;
      }
      if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      {
LABEL_5:
        v15 = sub_10006922C((uint64_t *)&unk_1006424B0);
        All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v15);
        if (All)
        {
          v17 = All;
          v18 = (objc_class *)type metadata accessor for DOCPickerContext();
          v19 = (char *)objc_allocWithZone(v18);
          *(_QWORD *)&v19[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
          *(_QWORD *)&v19[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
          *(_QWORD *)&v19[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = v17;
          v60.receiver = v19;
          v60.super_class = v18;
          v56 = objc_msgSendSuper2(&v60, "init");
          v20 = *(void **)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v56);
          v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
          v57 = v22;
          v58 = v21;
          v23 = *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
          v24 = (void *)objc_opt_self(DOCManagedPermission);
          swift_retain_n(v12, 2);
          v25 = v20;
          v26 = v56;
          v55 = objc_msgSend(v24, "defaultPermission");
          v27 = objc_msgSend((id)objc_opt_self(DOCFavoritesManager), "sharedManager");
          v28 = objc_msgSend(v27, "favoritedLocations");

          v29 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
          v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

          v31 = v25;
          v32 = v26;
          swift_bridgeObjectRetain(v30);
          v33 = v55;
          v34 = v23;
          swift_bridgeObjectRetain(v57);
          sub_100277180(v31, v58, v57, v34, v33, 1, v56, v30, 0, v12);
          v35 = v30;
          object = v10._object;
          swift_bridgeObjectRelease_n(v35, 2);

          swift_bridgeObjectRelease_n(v57, 2);
          swift_release_n(v12, 2, v36);
        }
      }
    }
LABEL_7:
    v37 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v37, v62);
    *(_OWORD *)(inited + 16) = xmmword_1004DB5A0;
    v39 = sub_1003FD034((uint64_t)&off_1005BF5B0);
    *(_QWORD *)(inited + 32) = sub_10014FF08(v39, (uint64_t)&off_1005BF5E8, 1, 0, 0, 0, 0, 1, 0);
    v40 = sub_1003FD034((uint64_t)&off_1005BF620);
    *(_QWORD *)(inited + 40) = sub_10014FF08(v40, 0, 1, 0, 0, 0, 0, 2, 0);
    v41 = sub_1003FD034((uint64_t)&off_1005BF650);
    *(_QWORD *)(inited + 48) = sub_10014FF08(v41, 0, 1, 0, 0, 0, 0, 2, 0);
    v42 = sub_1003FD034((uint64_t)&off_1005BF680);
    *(_QWORD *)(inited + 56) = sub_10014FF08(v42, 0, 1, 0, 0, 0, 0, 2, 0);
    v43 = sub_1003FD034((uint64_t)&off_1005BF6D0);
    *(_QWORD *)(inited + 64) = sub_10014FF08(v43, 0, 1, 0, 0, 0, 0, 2, 0);
    v44 = sub_1003FD034((uint64_t)&off_1005BF718);
    *(_QWORD *)(inited + 72) = sub_10014FF08(v44, 0, 1, 0, 0, 0, 0, 2, 0);
    v45 = sub_1003FD034((uint64_t)&off_1005BF740);
    v46 = sub_1003FD034((uint64_t)&off_1005BF770);
    v47 = sub_10014FF08(v46, 0, 0, v10._countAndFlagsBits, (uint64_t)object, 0x7061687372616567, 0xE900000000000065, 2, 0);
    *(_QWORD *)(inited + 80) = sub_10014FF08(v45, 0, 1, 0, 0, 0, 0, 2, v47);
    v48 = sub_1003FD034((uint64_t)&off_1005BF7D0);
    v49 = sub_10014FF08(v48, 0, 1, 0, 0, 0, 0, 2, 0);
    *(_QWORD *)(inited + 88) = v49;
    v61[0] = inited;
    specialized Array._endMutation()(v49);
    v50 = v61[0];
    swift_beginAccess(v12 + 16, v61, 0, 0);
    v51 = *(_QWORD *)(v12 + 16);
    swift_bridgeObjectRetain(v51);
    isa = sub_1001510D8(a1, v59, v51, 0, 0, v50).super.super.isa;
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v51);
    swift_release(v12);
    return isa;
  }
  __break(1u);
  return result;
}

Class sub_100151B44(uint64_t a1, uint64_t (*a2)(_QWORD, __n128), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  Swift::Int v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  _BYTE v17[56];
  uint64_t v18;

  v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v7 + 32) = a1;
  v18 = v7;
  specialized Array._endMutation()(v7);
  v8 = v18;
  inited = swift_initStackObject(v6, v17);
  *(_OWORD *)(inited + 16) = xmmword_1004D9720;
  v10 = sub_1003FD034((uint64_t)&off_1005BF7F8);
  swift_unknownObjectRetain(a1);
  *(_QWORD *)(inited + 32) = sub_10014FF08(v10, 0, 1, 0, 0, 0, 0, 2, 0);
  v11 = sub_1003FD034((uint64_t)&off_1005BF828);
  *(_QWORD *)(inited + 40) = sub_10014FF08(v11, 0, 1, 0, 0, 0, 0, 2, 0);
  v12 = sub_1003FD034((uint64_t)&off_1005BF860);
  v13 = sub_10014FF08(v12, 0, 1, 0, 0, 0, 0, 2, 0);
  *(_QWORD *)(inited + 48) = v13;
  v18 = inited;
  specialized Array._endMutation()(v13);
  v14 = v18;
  isa = sub_1001510D8(v8, 0, 0, a2, a3, v18).super.super.isa;
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v8);
  return isa;
}

uint64_t type metadata accessor for DOCUIImageMenuItem()
{
  return objc_opt_self(_TtC5Files18DOCUIImageMenuItem);
}

uint64_t _s21_DOCSectionDescriptorCMa()
{
  return objc_opt_self(_TtCC5Files31DOCItemCollectionViewControllerP33_D2F2A9EDC1E1AB532685E75DD81FABFB21_DOCSectionDescriptor);
}

uint64_t sub_100151D18()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100151D3C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100151D60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100151D94(void *a1)
{
  uint64_t v1;

  sub_10014D7B0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100151DA0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 56))
    sub_100068588((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100151DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10014CD5C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32);
}

uint64_t sub_100151DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v3;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_errorRelease(*(_QWORD *)(v0 + v4));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  if (*(_QWORD *)(v0 + v7 + 24))
    sub_100068588((_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 32, v2 | 7);
}

double sub_100151ED4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10014CF00(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v0 + ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100151F3C(uint64_t a1)
{
  uint64_t v1;

  return sub_10014C664(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100151F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10014C040(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_100151F4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006448B0;
  if (!qword_1006448B0)
  {
    v1 = sub_10004F2F0(255, (unint64_t *)&qword_100644570, NSError_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1006448B0);
  }
  return result;
}

uint64_t sub_100151FA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100151FC8(uint64_t a1)
{
  uint64_t v1;

  sub_10014A8E4(a1, *(char **)(v1 + 16));
}

void sub_100151FD0(uint64_t a1)
{
  uint64_t v1;

  sub_10014BE5C(a1, v1);
}

id sub_100151FD8(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "scanDocument:", a1);
}

id sub_100151FEC(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "pasteboardMoveToCollectionView:", a1);
}

id sub_100152000(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "paste:", a1);
}

id sub_100152014(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "startFolderCreation:", a1);
}

uint64_t sub_100152104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCTabIdentifierRecents);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v2 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n(v4, 2);
    return 0;
  }
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
    return 0;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCTabIdentifierShared);
  v12 = v11;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    return 1;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
  if ((v17 & 1) != 0)
    return 1;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCTabIdentifierBrowse);
  v20 = v19;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v23 = v21;
  if (v18 == v22 && v20 == v21)
    v24 = 1;
  else
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v23);
  if ((v24 & 1) != 0)
    return 2;
  else
    return 0;
}

id DOCPickerContext.__allocating_init(with:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DOCPickerContext.init(with:)(a1);
}

uint64_t DOCPickerContext.urlsToSave.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave));
}

uint64_t DOCPickerContext.utisToSave.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t DOCPickerContext.utisToSave.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*DOCPickerContext.utisToSave.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t DOCPickerContext.itemsToMove.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove));
}

BOOL DOCPickerContext.canRename.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  return v1 && *(_QWORD *)(v1 + 16) == 1;
}

BOOL DOCPickerContext.canSetTags.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave) != 0;
}

uint64_t DOCPickerContext.numberOfItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  if (v1)
    return *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove);
  if (!v2)
    return 0;
  if (!((unint64_t)v2 >> 62))
  {
    v1 = v2 & 0xFFFFFFFFFFFFF8;
    return *(_QWORD *)(v1 + 16);
  }
  if (v2 >= 0)
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
  else
    v4 = v2;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v2);
  return v5;
}

void DOCPickerContext.firstDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  if (v8 && *(_QWORD *)(v8 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v9 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      URL.path.getter(v9);
      v11 = v10;
      v12 = String._bridgeToObjectiveC()();
      v13 = objc_msgSend(v9, "displayNameAtPath:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

      if (v13)
      {
        v14 = objc_msgSend(v13, "stringByDeletingPathExtension");

        static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return;
      }
      goto LABEL_22;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  sub_100157D6C((uint64_t)v3);
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove);
  if (v15)
  {
    if ((unint64_t)v15 >> 62)
    {
      if (v15 >= 0)
        v20 = v15 & 0xFFFFFFFFFFFFFF8;
      else
        v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove);
      swift_bridgeObjectRetain(v15);
      if (_CocoaArrayWrapper.endIndex.getter(v20))
      {
LABEL_10:
        if ((v15 & 0xC000000000000001) != 0)
        {
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
        }
        else
        {
          if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_22:
            __break(1u);
            return;
          }
          v17 = *(id *)(v15 + 32);
        }
        v18 = v17;
        v19 = objc_msgSend(v17, "displayName", swift_bridgeObjectRelease(v15).n128_f64[0]);
        static String._unconditionallyBridgeFromObjectiveC(_:)(v19);

        return;
      }
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v15);
      if (v16)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease(v15);
  }
}

uint64_t DOCPickerContext.__allocating_init(with:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DOCPickerContext.init(with:)(a1);
}

uint64_t DOCPickerContext.init(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  _QWORD *v23;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(a1);
    v11 = _swiftEmptyArrayStorage;
LABEL_17:
    v18 = objc_allocWithZone((Class)type metadata accessor for DOCPickerContext());
    v19 = DOCPickerContext.init(with:)((uint64_t)v11);
    ObjectType = swift_getObjectType(v2, v20);
    swift_deallocPartialClassInstance(v2, ObjectType, 32, 7);
    return (uint64_t)v19;
  }
  if (a1 < 0)
    v17 = a1;
  else
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
  v8 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v8)
    goto LABEL_16;
LABEL_3:
  v23 = _swiftEmptyArrayStorage;
  result = sub_100154E04(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v22 = v1;
    v10 = 0;
    v11 = v23;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
      else
        v12 = *(id *)(a1 + 8 * v10 + 32);
      v13 = v12;
      v14 = objc_msgSend(v12, "url", v22);
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v23 = v11;
      v16 = v11[2];
      v15 = v11[3];
      if (v16 >= v15 >> 1)
      {
        sub_100154E04(v15 > 1, v16 + 1, 1);
        v11 = v23;
      }
      ++v10;
      v11[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16, v7, v4);
    }
    while (v8 != v10);
    swift_bridgeObjectRelease(a1);
    v2 = v22;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

id DOCPickerContext.init(with:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  NSURL *v14;
  void *v15;
  void *v16;
  unsigned int v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  objc_class *v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  _QWORD *v47;
  char *v48;
  objc_super v49;
  id v50[3];

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v48 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v1[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = a1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = 0;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v39 = v9;
    v40 = a1;
    v11 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v43 = *(_QWORD *)(v4 + 72);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain_n(a1, 2);
    v41 = v1;
    v12 = v1;
    v42 = 0;
    v47 = _swiftEmptyArrayStorage;
    v44 = v4;
    v45 = v8;
    while (1)
    {
      v46(v8, v11, v3);
      v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v13(v8, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
      {
        a1 = v40;
        v1 = v41;
        v9 = v39;
        goto LABEL_20;
      }
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v48, v8, v3);
      URL._bridgeToObjectiveC()(v14);
      v16 = v15;
      v17 = objc_msgSend(v15, "startAccessingSecurityScopedResource");
      v50[0] = 0;
      v18 = objc_msgSend(v16, "br_typeIdentifierWithError:", v50);
      v19 = v50[0];
      if (!v18)
        break;
      v20 = v18;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v23 = v22;
      v24 = v19;

      if (v17)
        goto LABEL_8;
LABEL_9:

      v4 = v44;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v3);
      if (v23)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v47);
        v8 = v45;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v47 = sub_100081A50(0, v47[2] + 1, 1, v47);
        v27 = v47[2];
        v26 = v47[3];
        if (v27 >= v26 >> 1)
          v47 = sub_100081A50((_QWORD *)(v26 > 1), v27 + 1, 1, v47);
        v28 = v47;
        v47[2] = v27 + 1;
        v29 = &v28[2 * v27];
        v29[4] = v21;
        v29[5] = v23;
      }
      else
      {
        v8 = v45;
      }
      v11 += v43;
      if (!--v10)
      {
        a1 = v40;
        v1 = v41;
        v9 = v39;
        v13(v8, 1, 1, v3);
        goto LABEL_20;
      }
    }
    v30 = v50[0];
    v31 = _convertNSErrorToError(_:)(v19);

    swift_willThrow(v32);
    swift_errorRelease(v31);
    v21 = 0;
    v23 = 0;
    v42 = 0;
    if (!v17)
      goto LABEL_9;
LABEL_8:
    objc_msgSend(v16, "stopAccessingSecurityScopedResource");
    goto LABEL_9;
  }
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  swift_bridgeObjectRetain_n(a1, 2);
  v34 = v1;
  v47 = _swiftEmptyArrayStorage;
  v33(v8, 1, 1, v3);
LABEL_20:
  swift_bridgeObjectRelease_n(a1, 2);
  swift_beginAccess(v9, v50, 1, 0);
  v35 = *(_QWORD *)v9;
  *(_QWORD *)v9 = v47;

  swift_bridgeObjectRelease(v35);
  v36 = (objc_class *)type metadata accessor for DOCPickerContext();
  v49.receiver = v1;
  v49.super_class = v36;
  return objc_msgSendSuper2(&v49, "init");
}

{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCPickerContext();
  return objc_msgSendSuper2(&v3, "init");
}

id DOCPickerContext.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCPickerContext();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001530BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100153668(a1, a2, a3, a4, &qword_100644C08, (uint64_t *)&unk_100644C10);
}

_QWORD *sub_1001530D0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100153BF4(a1, a2, a3, a4, &qword_100644BF8, &qword_100644C00);
}

_QWORD *sub_1001530E4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10001B558(a1, a2, a3, a4, &qword_100644C30);
}

_QWORD *sub_1001530F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644930);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100157FC4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001531FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644CE8);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001580B8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100153308(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, (uint64_t *)&unk_10064B460, (uint64_t (*)(_QWORD))&type metadata accessor for UTType);
}

_QWORD *sub_10015331C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100153560(a1, a2, a3, a4, (uint64_t *)&unk_100644A00);
}

_QWORD *sub_100153328(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644B48);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001581A8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100153434(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644B00);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100158298(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100153554(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100153560(a1, a2, a3, a4, &qword_100644B80);
}

_QWORD *sub_100153560(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10006922C(a5);
      v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v12[2] = v9;
      v12[3] = 2 * v13 - 64;
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= (_QWORD *)((char *)a4 + v9 + 32))
          memmove(v14, a4 + 4, v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10015838C(0, v9, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100153654(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100153668(a1, a2, a3, a4, &qword_100644BE8, &qword_100644BF0);
}

uint64_t sub_100153668(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10006922C(a5);
  v14 = *(_QWORD *)(sub_10006922C(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10006922C(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100159150(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_100153874(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644BE0);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10015838C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10015396C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1001539A4(a1, a2, a3, a4, &qword_100644B70, (uint64_t)&_s13DOCFPDragInfoVN, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *, uint64_t))sub_100158A60);
}

_QWORD *sub_100153988(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1001539A4(a1, a2, a3, a4, &qword_100644B60, (uint64_t)&unk_100644B68, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *, uint64_t))sub_100081F74);
}

_QWORD *sub_1001539A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t a6, void (*a7)(_QWORD, int64_t, _QWORD *, _QWORD *, uint64_t))
{
  char v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v10 = (char)result;
  if ((a3 & 1) == 0)
  {
    v12 = a2;
    goto LABEL_8;
  }
  v11 = a4[3];
  v12 = v11 >> 1;
  if ((uint64_t)(v11 >> 1) >= a2)
    goto LABEL_8;
  if (v12 + 0x4000000000000000 >= 0)
  {
    v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v12 = a2;
LABEL_8:
    v13 = a4[2];
    if (v12 <= v13)
      v14 = a4[2];
    else
      v14 = v12;
    if (v14)
    {
      v15 = sub_10006922C(a5);
      v16 = (_QWORD *)swift_allocObject(v15, 16 * v14 + 32, 7);
      v17 = j__malloc_size(v16);
      v18 = v17 - 32;
      if (v17 < 32)
        v18 = v17 - 17;
      v16[2] = v13;
      v16[3] = 2 * (v18 >> 4);
      v19 = v16 + 4;
      if ((v10 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v16 = _swiftEmptyArrayStorage;
      v19 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v16 != a4 || v19 >= &a4[2 * v13 + 4])
          memmove(v19, a4 + 4, 16 * v13);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a7(0, v13, v19, a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100153AC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100153668(a1, a2, a3, a4, &qword_100644AB8, (uint64_t *)&unk_100644AC0);
}

uint64_t sub_100153AD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, (uint64_t *)&unk_100644550, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

_QWORD *sub_100153AE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644A78);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100157ED4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100153BF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10006922C(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 4);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v11 + 4])
          memmove(v17, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100081F74(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100153D0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100644BD0, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

_QWORD *sub_100153D20(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644A30);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100158564(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100153E2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100646C60, type metadata accessor for DOCOperationItem);
}

_QWORD *sub_100153E40(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100153BF4(a1, a2, a3, a4, &qword_100644B90, &qword_100644B98);
}

_QWORD *sub_100153E54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C((uint64_t *)&unk_100644BA0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100157DCC(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100153F60(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644970);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100158958(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10015406C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644CD0);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100158470(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10015418C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100154C78(a1, a2, a3, a4, &qword_100644CD8, &qword_100644CE0);
}

_QWORD *sub_1001541A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1001539A4(a1, a2, a3, a4, &qword_100644BB0, (uint64_t)&type metadata for DOCImageContainerFittingView.ViewPair, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *, uint64_t))sub_100158A60);
}

uint64_t sub_1001541BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100644998, type metadata accessor for DOCMultiNodeObserver.Subscriber);
}

_QWORD *sub_1001541D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_10064FE20);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100158B4C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001542DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644990);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100158C50(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001543E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100154410(a1, a2, a3, a4, (uint64_t *)&unk_100644AD0, &qword_1006495A0);
}

_QWORD *sub_1001543FC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100154410(a1, a2, a3, a4, (uint64_t *)&unk_100644980, (uint64_t *)&unk_100644420);
}

_QWORD *sub_100154410(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10006922C(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v11 + 4])
          memmove(v16, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100158760(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10015453C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100644B78, type metadata accessor for DOCFileEntity);
}

_QWORD *sub_100154550(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644C48);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100158D40(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100154674(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1001539A4(a1, a2, a3, a4, &qword_100644C88, (uint64_t)&unk_100644C90, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *, uint64_t))sub_100081F74);
}

_QWORD *sub_100154690(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644A88);
      v11 = (_QWORD *)swift_allocObject(v10, 232 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 232);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[29 * v8 + 4])
          memmove(v13, a4 + 4, 232 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100158E4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001547B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644A18);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100158F54(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001548C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100644A28, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

_QWORD *sub_1001548D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644A10);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100158868(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001549E0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100153BF4(a1, a2, a3, a4, &qword_1006449D8, (uint64_t *)&unk_100644920);
}

_QWORD *sub_1001549F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644910);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10015905C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100154B1C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100154410(a1, a2, a3, a4, (uint64_t *)&unk_1006449A0, (uint64_t *)&unk_100644350);
}

_QWORD *sub_100154B30(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C((uint64_t *)&unk_1006449C0);
      v11 = (_QWORD *)swift_allocObject(v10, 80 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 80);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[10 * v8 + 4])
          memmove(v13, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100158654(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100154C50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100153668(a1, a2, a3, a4, &qword_100644BB8, (uint64_t *)&unk_100644BC0);
}

_QWORD *sub_100154C64(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100154C78(a1, a2, a3, a4, &qword_100644C68, &qword_100644C70);
}

_QWORD *sub_100154C78(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10006922C(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 25;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 3);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v11 + 4])
          memmove(v17, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100159268(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100154D90(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100153560(a1, a2, a3, a4, &qword_100644C60);
}

uint64_t sub_100154D9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100644C40, (uint64_t (*)(_QWORD))&type metadata accessor for ViewEntityIdentifier);
}

uint64_t sub_100154DB0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100155420(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100154DCC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001555D0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100154DE8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100155754(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154E04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100644550, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
  *v3 = result;
  return result;
}

uint64_t sub_100154E30(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, &qword_100644A80, type metadata accessor for DOCFileOperation);
  *v3 = result;
  return result;
}

uint64_t sub_100154E5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001558C0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100154E78(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100155A48(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154E94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100156C18(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1006449A0, (uint64_t *)&unk_100644350);
  *v3 = result;
  return result;
}

uint64_t sub_100154EC0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100155BDC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154EDC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100155D28(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100154EF8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10064B460, (uint64_t (*)(_QWORD))&type metadata accessor for UTType);
  *v3 = result;
  return result;
}

uint64_t sub_100154F24(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100155ED0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154F40(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001564A0(a1, a2, a3, *v3, &qword_100644B48);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154F6C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10015604C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154F88(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001561D8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154FA4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001564A0(a1, a2, a3, *v3, &qword_100644B08);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100154FD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, &qword_100644BD0, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
  *v3 = result;
  return result;
}

uint64_t sub_100154FFC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10064FDF0, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
  *v3 = result;
  return result;
}

uint64_t sub_100155028(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100009C94(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100644B50, (uint64_t *)&unk_100655C20);
  *v3 = result;
  return result;
}

uint64_t sub_100155054(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, &qword_100646C60, type metadata accessor for DOCOperationItem);
  *v3 = result;
  return result;
}

uint64_t sub_100155080(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10015708C(a1, a2, a3, (_QWORD *)*v3, &qword_10064FE20, type metadata accessor for DOCDocumentSourceIdentifier);
  *v3 = result;
  return result;
}

uint64_t sub_1001550AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, &qword_100644B78, type metadata accessor for DOCFileEntity);
  *v3 = result;
  return result;
}

uint64_t sub_1001550D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100156C18(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100644980, (uint64_t *)&unk_100644420);
  *v3 = result;
  return result;
}

uint64_t sub_100155104(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100156DBC(a1, a2, a3, *v3, &qword_1006449E0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100155130(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100156938(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10015514C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10015708C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100644CF0, type metadata accessor for FPProviderDomainID);
  *v3 = result;
  return result;
}

uint64_t sub_100155178(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10064A0B0, (uint64_t (*)(_QWORD))&type metadata accessor for UICellAccessory);
  *v3 = result;
  return result;
}

uint64_t sub_1001551A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100156AA0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001551C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100009C94(a1, a2, a3, (_QWORD *)*v3, &qword_100644938, (uint64_t *)&unk_100644940);
  *v3 = result;
  return result;
}

uint64_t sub_1001551EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100156C18(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100644CC0, &qword_1006490A0);
  *v3 = result;
  return result;
}

uint64_t sub_100155218(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100156DBC(a1, a2, a3, *v3, &qword_1006449E8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100155244(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157510(a1, a2, a3, (_QWORD *)*v3, &qword_100644A50, &qword_100644A58);
  *v3 = result;
  return result;
}

uint64_t sub_100155270(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100156F24(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10015528C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157510(a1, a2, a3, (_QWORD *)*v3, &qword_100644CA8, &qword_100644CB0);
  *v3 = result;
  return result;
}

uint64_t sub_1001552B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10015708C(a1, a2, a3, (_QWORD *)*v3, &qword_100644B88, type metadata accessor for NSFileProviderItemIdentifier);
  *v3 = result;
  return result;
}

uint64_t sub_1001552E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157218(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100155300(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100009C94(a1, a2, a3, (_QWORD *)*v3, &qword_100644C78, &qword_100644C80);
  *v3 = result;
  return result;
}

uint64_t sub_10015532C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100644A60, (uint64_t (*)(_QWORD))&type metadata accessor for UUID);
  *v3 = result;
  return result;
}

uint64_t sub_100155358(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001573B4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100155374(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157510(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1006449F0, &qword_100643470);
  *v3 = result;
  return result;
}

uint64_t sub_1001553A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, &qword_100655BA0, type metadata accessor for DOCBrowserHistoryItem);
  *v3 = result;
  return result;
}

uint64_t sub_1001553CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001576F0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001553E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157890(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100155404(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100157A30(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100155420(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_100644950);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10006922C(&qword_100648C80);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001555A8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100157510(a1, a2, a3, a4, &qword_100644C08, (uint64_t *)&unk_100644C10);
}

uint64_t sub_1001555BC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100157B8C(a1, a2, a3, a4, &qword_100644BD0, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_1001555D0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644A98);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = v11 + 4;
  v15 = a4 + 4;
  v16 = 2 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v11 + 4, a4 + 4, v16 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    sub_10006922C(&qword_100644AA0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100155754(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644930);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001558C0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644A70);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10006922C((uint64_t *)&unk_100644920);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100155A48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_1006449D0);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100155BC8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100156C18(a1, a2, a3, a4, (uint64_t *)&unk_1006449A0, (uint64_t *)&unk_100644350);
}

uint64_t sub_100155BDC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644AE0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100155D28(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644C98);
    v11 = (_QWORD *)swift_allocObject(v10, 72 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 72);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 72 * v8)
      memmove(v11 + 4, a4 + 4, 72 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 72 * v8 || v13 >= v14 + 72 * v8)
  {
    sub_10006922C(&qword_100644CA0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100155ED0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644AE8);
    v11 = (char *)swift_allocObject(v10, 72 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 72);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[72 * v8])
      memmove(v13, v14, 72 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[72 * v8] || v13 >= &v14[72 * v8])
  {
    memcpy(v13, v14, 72 * v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10015604C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_100644B30);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001561C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100157510(a1, a2, a3, a4, &qword_10064B480, &qword_100644B40);
}

uint64_t sub_1001561D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_100644B20);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100156344(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_10064B470);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    memcpy(v14, v15, 32 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001564A0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10006922C(a5);
    v12 = (char *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[16 * v9])
      memmove(v15, v16, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[16 * v9] || v15 >= &v16[16 * v9])
  {
    swift_arrayInitWithCopy(v15);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10015660C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644B10);
    v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 24 * v8)
      memmove(v11 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 24 * v8 || v13 >= v14 + 24 * v8)
  {
    sub_10006922C(&qword_100644B18);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001567B0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_100644BA0);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10006922C(&qword_10064AB10);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100156938(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644B70);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100156AA0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644CD0);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 48 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100156C18(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10006922C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v11)
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v11 || v16 >= v17 + 40 * v11)
  {
    sub_10006922C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100156DBC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10006922C(a5);
    v12 = (char *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  v17 = 16 * v9;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[v17])
      memmove(v15, v16, v17);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    swift_arrayInitWithCopy(v15);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100156F24(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644CB8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10015708C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10006922C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v11)
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v11 || v17 >= v18 + 8 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100157218(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644AF0);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    sub_10006922C(&qword_100644AF8);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001573A0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100157B8C(a1, a2, a3, a4, &qword_100644A28, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

uint64_t sub_1001573B4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_100647C70);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100157510(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10006922C(a5);
  v14 = *(_QWORD *)(sub_10006922C(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10006922C(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001576F0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_1006449B0);
    v11 = (_QWORD *)swift_allocObject(v10, 80 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 80);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 80 * v8)
      memmove(v11 + 4, a4 + 4, 80 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 80 * v8 || v13 >= v14 + 80 * v8)
  {
    sub_10006922C((uint64_t *)&unk_100655BC0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100157890(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_1006449C0);
    v11 = (_QWORD *)swift_allocObject(v10, 80 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 80);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 80 * v8)
      memmove(v11 + 4, a4 + 4, 80 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 80 * v8 || v13 >= v14 + 80 * v8)
  {
    sub_10006922C(&qword_100655F30);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100157A30(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644968);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    memcpy(v14, v15, 32 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100157B8C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10006922C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100157D6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100643470);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DOCPickerContext()
{
  return objc_opt_self(_TtC5Files16DOCPickerContext);
}

uint64_t sub_100157DCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_10006922C(&qword_10064AB10);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100157ED4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100157FC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1001580B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1001581A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158298(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_10015838C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158470(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100158564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158654(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 80 * a1 + 32;
  v7 = a3 + 80 * v4;
  if (v6 >= v7 || v6 + 80 * v4 <= a3)
  {
    sub_10006922C(&qword_100655F30);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100158760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v7 = a4 + 40 * a1 + 32;
  v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    sub_10006922C(a5);
    swift_arrayInitWithCopy(a3);
    return v8;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100158868(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158958(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_10006922C(&qword_100644978);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158A60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158B4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158C50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100158D40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_10006922C(&qword_100644C50);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100158E4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 232 * a1 + 32;
  v7 = a3 + 232 * v4;
  if (v6 >= v7 || v6 + 232 * v4 <= a3)
  {
    sub_10006922C(&qword_100644A90);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100158F54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 32 * a1 + 32;
    v7 = a3 + 32 * v4;
    if (v6 >= v7 || v6 + 32 * v4 <= a3)
    {
      sub_10006922C(&qword_100644A20);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10015905C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 56 * a1 + 32;
  v6 = a3 + 56 * v4;
  if (v5 >= v6 || v5 + 56 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100159150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(sub_10006922C(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100159268(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 8 * a1 + 32;
    v8 = a3 + 8 * v5;
    if (v7 >= v8 || v7 + 8 * v5 <= a3)
    {
      sub_10006922C(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

void sub_10015936C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_1001593C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for DOCDebugInfoManager();
  v1 = swift_allocObject(v0, 40, 7);
  result = sub_10015ABDC();
  qword_100672690 = v1;
  return result;
}

uint64_t sub_1001593F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v0 = sub_10006922C(&qword_100645060);
  v1 = swift_allocObject(v0, 192, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1004D9B50;
  v2 = type metadata accessor for ViewHierarchyProvider();
  v3 = swift_allocObject(v2, 16, 7);
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = &off_1005CAAD8;
  *(_QWORD *)(v1 + 32) = v3;
  v4 = type metadata accessor for ViewControllerHierarchyProvider();
  v5 = swift_allocObject(v4, 16, 7);
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = &off_1005CAAF0;
  *(_QWORD *)(v1 + 72) = v5;
  v6 = type metadata accessor for SpotlightDumpProvider();
  v7 = swift_allocObject(v6, 16, 7);
  *(_QWORD *)(v1 + 136) = v6;
  *(_QWORD *)(v1 + 144) = &off_1005CAAC0;
  *(_QWORD *)(v1 + 112) = v7;
  v8 = type metadata accessor for SpotlightCollectorManagerProvider();
  result = swift_allocObject(v8, 16, 7);
  *(_QWORD *)(v1 + 176) = v8;
  *(_QWORD *)(v1 + 184) = &off_1005CAAA8;
  *(_QWORD *)(v1 + 152) = result;
  qword_100672698 = v1;
  return result;
}

void sub_1001594D0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;
  char *v28;
  NSString *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  void (*v97)(_QWORD);
  uint64_t v98;
  dispatch_group_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  void **aBlock;
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  void *v117;
  void *v118;
  uint64_t v119;
  __int128 v120;

  v6 = v5;
  v95 = a5;
  v97 = a4;
  v107 = a2;
  v94 = a1;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v109 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v105 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for DispatchQoS(0);
  v108 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v96 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DOCDebugInfoManager.OutputKind(0);
  v91 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v93 = (uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v88 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  v111 = v16;
  v112 = v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = v18;
  __chkstk_darwin(v20);
  v110 = (char *)&v88 - v21;
  v22 = type metadata accessor for DispatchPredicate(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (uint64_t *)((char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v25 = static OS_dispatch_queue.main.getter(v90);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  v26 = _dispatchPreconditionTest(_:)(v25);
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) != 0)
  {
    if ((*(_BYTE *)(v6 + 16) & 1) != 0)
    {
      if (v97)
        v97(0);
    }
    else
    {
      *(_BYTE *)(v6 + 16) = 1;
      v101 = swift_allocObject(&unk_1005CABB8, 24, 7);
      *(_QWORD *)(v101 + 16) = _swiftEmptyArrayStorage;
      sub_10015B77C(a3, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload(v15, v11) == 1)
      {
        v27 = v111;
        v28 = v110;
        (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v110, v15, v111);
      }
      else
      {
        sub_10015B7C0((uint64_t)v15);
        v29 = NSTemporaryDirectory();
        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v32 = v31;

        v28 = v110;
        URL.init(fileURLWithPath:isDirectory:)(v30, v32, 1);
        swift_bridgeObjectRelease(v32);
        v27 = v111;
      }
      v33 = v19;
      v34 = v94;
      v35 = *(_QWORD *)(v94 + 16);
      v102 = v8;
      v104 = v19;
      v103 = v6;
      if (v35)
      {
        v89 = a3;
        v99 = *(dispatch_group_t *)(v6 + 24);
        v98 = *(_QWORD *)(v6 + 32);
        v36 = v94 + 32;
        v100 += 7;
        swift_bridgeObjectRetain(v94);
        v37 = v96;
        v38 = v112;
        do
        {
          dispatch_group_enter(v99);
          sub_100092328(v36, (uint64_t)&v120);
          v39 = v104;
          (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v104, v28, v27);
          v40 = *(unsigned __int8 *)(v38 + 80);
          v41 = (v40 + 56) & ~v40;
          v42 = (v100 + v41) & 0xFFFFFFFFFFFFFFF8;
          v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
          v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
          v45 = swift_allocObject(&unk_1005CABE0, v44 + 8, v40 | 7);
          sub_1000E85C4(&v120, v45 + 16);
          (*(void (**)(uint64_t, char *, uint64_t))(v112 + 32))(v45 + v41, v39, v111);
          v46 = v107;
          *(_QWORD *)(v45 + v42) = v107;
          *(_QWORD *)(v45 + v43) = v103;
          v47 = v102;
          *(_QWORD *)(v45 + v44) = v101;
          v118 = sub_10015B8B4;
          v119 = v45;
          aBlock = _NSConcreteStackBlock;
          v115 = 1107296256;
          v116 = sub_10004A82C;
          v117 = &unk_1005CABF8;
          v48 = _Block_copy(&aBlock);
          v49 = v46;
          swift_retain();
          swift_retain();
          static DispatchQoS.unspecified.getter(v50);
          v113 = _swiftEmptyArrayStorage;
          v51 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v52 = sub_10006922C((uint64_t *)&unk_100647540);
          v53 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
          v54 = v105;
          v55 = v51;
          v28 = v110;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v113, v52, v53, v47, v55);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v37, v54, v48);
          v56 = v48;
          v27 = v111;
          _Block_release(v56);
          v57 = v47;
          v38 = v112;
          (*(void (**)(char *, uint64_t))(v109 + 8))(v54, v57);
          (*(void (**)(char *, uint64_t))(v108 + 8))(v37, v106);
          swift_release(v119);
          v36 += 40;
          --v35;
        }
        while (v35);
        swift_bridgeObjectRelease(v94);
        v6 = v103;
        a3 = v89;
        v33 = v104;
        v58 = v100;
      }
      else
      {
        v58 = v100 + 7;
        v38 = v112;
      }
      v111 = *(_QWORD *)(v6 + 24);
      v59 = v6;
      v100 = static OS_dispatch_queue.main.getter(v34);
      v60 = a3;
      v61 = v93;
      sub_10015B77C(v60, v93);
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v33, v28, v27);
      v62 = *(unsigned __int8 *)(v91 + 80);
      v63 = v38;
      v64 = (v62 + 24) & ~v62;
      v65 = (v92 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
      v66 = *(unsigned __int8 *)(v63 + 80);
      v67 = v27;
      v68 = (v66 + v65 + 8) & ~v66;
      v69 = (v58 + v68) & 0xFFFFFFFFFFFFFFF8;
      v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
      v71 = swift_allocObject(&unk_1005CAC30, v70 + 16, v62 | v66 | 7);
      *(_QWORD *)(v71 + 16) = v59;
      sub_10015BA44(v61, v71 + v64);
      v72 = v101;
      *(_QWORD *)(v71 + v65) = v101;
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v71 + v68, v104, v67);
      v73 = v107;
      *(_QWORD *)(v71 + v69) = v107;
      v74 = (_QWORD *)(v71 + v70);
      v75 = (uint64_t)v97;
      v76 = v95;
      *v74 = v97;
      v74[1] = v76;
      v118 = sub_10015BA88;
      v119 = v71;
      aBlock = _NSConcreteStackBlock;
      v115 = 1107296256;
      v116 = sub_10004A82C;
      v117 = &unk_1005CAC48;
      v77 = _Block_copy(&aBlock);
      v78 = v73;
      swift_retain();
      swift_retain();
      v79 = sub_10008BA00(v75, v76);
      v80 = v96;
      static DispatchQoS.unspecified.getter(v79);
      *(_QWORD *)&v120 = _swiftEmptyArrayStorage;
      v81 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v82 = sub_10006922C((uint64_t *)&unk_100647540);
      v83 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v84 = v105;
      v85 = v102;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v120, v82, v83, v102, v81);
      v86 = (void *)v100;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v80, v84, v100, v77);
      _Block_release(v77);

      (*(void (**)(char *, uint64_t))(v109 + 8))(v84, v85);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v80, v106);
      (*(void (**)(char *, uint64_t))(v112 + 8))(v110, v67);
      v87 = v119;
      swift_release(v72);
      swift_release(v87);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100159D60(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  Swift::String v12;
  void *object;
  uint64_t v14;
  Swift::String v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v34;
  __n128 v35;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44[2];

  v41 = a4;
  v42 = a5;
  v43 = a3;
  v39 = a2;
  v40 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v40 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v40);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - v9;
  v11 = a1[3];
  sub_10007E7A0(a1, v11);
  v12._countAndFlagsBits = _typeName(_:qualified:)(v11, 0);
  object = v12._object;
  *(_QWORD *)&v44[0] = 0xD000000000000030;
  *((_QWORD *)&v44[0] + 1) = 0x8000000100511FC0;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14 = *((_QWORD *)&v44[0] + 1);
  swift_bridgeObjectRetain(*((_QWORD *)&v44[0] + 1));
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16 = v44[0];
  v18 = a1[3];
  v17 = a1[4];
  sub_10007E7A0(a1, v18);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
  v21 = v20;
  v44[0] = v16;
  swift_bridgeObjectRetain(*((_QWORD *)&v16 + 1));
  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(*((_QWORD *)&v16 + 1));
  swift_bridgeObjectRelease(v21);
  v23 = *((_QWORD *)&v44[0] + 1);
  v38 = v10;
  URL.appendingPathComponent(_:)(*(_QWORD *)&v44[0], *((_QWORD *)&v44[0] + 1));
  swift_bridgeObjectRelease(v23);
  v25 = a1[3];
  v24 = a1[4];
  v39 = sub_10007E7A0(a1, v25);
  sub_100092328((uint64_t)a1, (uint64_t)v44);
  v26 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v10;
  v28 = v40;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v26, v27, v40);
  v29 = *(unsigned __int8 *)(v6 + 80);
  v30 = (v29 + 64) & ~v29;
  v31 = (v7 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject(&unk_1005CACD0, v31 + 8, v29 | 7);
  *(_QWORD *)(v32 + 16) = v41;
  sub_1000E85C4(v44, v32 + 24);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v32 + v30, v26, v28);
  *(_QWORD *)(v32 + v31) = v42;
  v33 = *(void (**)(uint64_t, double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v24 + 16);
  swift_retain();
  v34 = swift_retain();
  v33(v43, sub_10015BBF4, v32, v25, v24, v34);
  v35 = swift_release(v32);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v38, v28, v35);
}

double sub_100159FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD aBlock[5];
  uint64_t v42;
  __int128 v43[3];

  v32 = a1;
  v33 = a6;
  v36 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v34 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(a3 + 32);
  sub_100092328(a4, (uint64_t)v43);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  v18 = *(unsigned __int8 *)(v15 + 80);
  v19 = (v18 + 72) & ~v18;
  v20 = (v16 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_1005CACF8, v21 + 8, v18 | 7);
  *(_QWORD *)(v22 + 16) = v32;
  *(_QWORD *)(v22 + 24) = a2;
  sub_1000E85C4(v43, v22 + 32);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v22 + v19, v17, v14);
  *(_QWORD *)(v22 + v20) = v33;
  *(_QWORD *)(v22 + v21) = a3;
  aBlock[4] = sub_10015BD04;
  v42 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CAD10;
  v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a2);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter(v24);
  v40 = _swiftEmptyArrayStorage;
  v25 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_10006922C((uint64_t *)&unk_100647540);
  v27 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v28 = v34;
  v29 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v26, v27, v36, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v28, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v38);
  *(_QWORD *)&result = swift_release(v42).n128_u64[0];
  return result;
}

void sub_10015A2A4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];

  v35 = a5;
  v36 = a6;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.Encoding(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v37[0] = a1;
    v37[1] = a2;
    static String.Encoding.utf8.getter(v18);
    v21 = sub_10008B9BC();
    StringProtocol.write(to:atomically:encoding:)(a4, 1, v20, &type metadata for String, v21);
    v30 = (unint64_t *)(v35 + 16);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a4, v10);
    swift_beginAccess(v30, v37, 33, 0);
    v31 = *v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
    *v30 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v31 = sub_100153AD4(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      *v30 = v31;
    }
    v34 = *(_QWORD *)(v31 + 16);
    v33 = *(_QWORD *)(v31 + 24);
    if (v34 >= v33 >> 1)
    {
      v31 = sub_100153AD4(v33 > 1, v34 + 1, 1, v31);
      *v30 = v31;
    }
    *(_QWORD *)(v31 + 16) = v34 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v31+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v34, v14, v10);
    swift_endAccess(v37);
    dispatch_group_leave(*(dispatch_group_t *)(v36 + 24));
  }
  else
  {
    v22 = *(id *)DOCLog.UI.unsafeMutableAddressor(v17);
    v23 = static os_log_type_t.default.getter(v22);
    v24 = sub_10006922C((uint64_t *)&unk_100644560);
    v25 = swift_allocObject(v24, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
    v26 = a3[3];
    sub_10007E7A0(a3, v26);
    v27 = _typeName(_:qualified:)(v26, 0);
    v29 = v28;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = sub_10006A638();
    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v29;
    os_log(_:dso:log:type:_:)("Debug Output: provider '%@' did not generate output data.", 57, 2, &_mh_execute_header, v22, v23, v25);

    swift_bridgeObjectRelease(v25);
  }
}

void sub_10015A620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t EnumCaseMultiPayload;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  Swift::String v26;
  void *object;
  unint64_t v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  id v33;
  NSString v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  Class isa;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  _BYTE v53[24];
  void **aBlock;
  unint64_t v55;
  void (*v56)(uint64_t, void *);
  void *v57;
  id (*v58)();
  uint64_t v59;

  v13 = type metadata accessor for DOCDebugInfoManager.OutputKind(0);
  __chkstk_darwin(v13);
  v15 = (void **)&v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_BYTE *)(a1 + 16) = 0;
  sub_10015B77C(a2, (uint64_t)v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v17 = *(id *)DOCLog.UI.unsafeMutableAddressor(EnumCaseMultiPayload);
    v18 = static os_log_type_t.default.getter(v17);
    v19 = sub_10006922C((uint64_t *)&unk_100644560);
    v20 = swift_allocObject(v19, 72, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
    v21 = URL.path.getter(v20);
    v23 = v22;
    *(_QWORD *)(v20 + 56) = &type metadata for String;
    *(_QWORD *)(v20 + 64) = sub_10006A638();
    *(_QWORD *)(v20 + 32) = v21;
    *(_QWORD *)(v20 + 40) = v23;
    os_log(_:dso:log:type:_:)("Debug Output: saved to folder: %@", 33, 2, &_mh_execute_header, v17, v18, v20);

    v24 = objc_msgSend(a5, "presentingViewController", swift_bridgeObjectRelease(v20).n128_f64[0]);
    if (!v24)
      v24 = a5;
    aBlock = 0;
    v55 = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease(v55);
    aBlock = (void **)0xD000000000000021;
    v55 = 0x8000000100511F30;
    v26._countAndFlagsBits = URL.path.getter(v25);
    object = v26._object;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(object);
    v28 = v55;
    v29 = String._bridgeToObjectiveC()();
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v31 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v29, v30, 1);

    v32 = swift_allocObject(&unk_1005CAC80, 24, 7);
    *(_QWORD *)(v32 + 16) = v31;
    v33 = v31;
    v34 = String._bridgeToObjectiveC()();
    v58 = sub_10015BB44;
    v59 = v32;
    aBlock = _NSConcreteStackBlock;
    v55 = 1107296256;
    v56 = sub_1000602CC;
    v57 = &unk_1005CAC98;
    v35 = _Block_copy(&aBlock);
    swift_release(v59);
    v36 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v34, 0, v35);
    _Block_release(v35);

    objc_msgSend(v33, "addAction:", v36);
    objc_msgSend(v33, "setPreferredAction:", v36);
    objc_msgSend(v24, "presentViewController:animated:completion:", v33, 1, 0);

    sub_10015B7C0((uint64_t)v15);
    if (!a6)
      return;
LABEL_9:
    a6(1);
    return;
  }
  v52 = a7;
  v38 = *v15;
  v37 = v15[1];
  v39 = *(id *)DOCLog.UI.unsafeMutableAddressor(EnumCaseMultiPayload);
  v40 = static os_log_type_t.default.getter(v39);
  v41 = sub_10006922C((uint64_t *)&unk_100644560);
  v42 = swift_allocObject(v41, 72, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1004D9670;
  swift_beginAccess(a3 + 16, &aBlock, 0, 0);
  v43 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v42 + 56) = sub_10006922C(&qword_100645068);
  *(_QWORD *)(v42 + 64) = sub_100062698(&qword_100645070, &qword_100645068, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v42 + 32) = v43;
  swift_bridgeObjectRetain(v43);
  os_log(_:dso:log:type:_:)("Debug Output: about to present share sheet for URLs: %@", 55, 2, &_mh_execute_header, v39, v40, v42);

  swift_bridgeObjectRelease(v42);
  swift_beginAccess(a3 + 16, v53, 0, 0);
  v44 = *(_QWORD *)(a3 + 16);
  v45 = swift_bridgeObjectRetain(v44);
  v46 = sub_10043B7EC(v45);
  swift_bridgeObjectRelease(v44);
  v47 = objc_allocWithZone((Class)UIActivityViewController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v49 = objc_msgSend(v47, "initWithActivityItems:applicationActivities:", isa, 0, swift_bridgeObjectRelease(v46).n128_f64[0]);

  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPageSheet);
  v50 = objc_msgSend(v49, "popoverPresentationController");
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v50, "setSourceView:", v37);

  }
  objc_msgSend(v38, "presentViewController:animated:completion:", v49, 1, 0);

  if (a6)
    goto LABEL_9;
}

uint64_t DOCDebugInfoManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DOCDebugInfoManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for DOCDebugInfoManager()
{
  return objc_opt_self(_TtC5Files19DOCDebugInfoManager);
}

ValueMetadata *type metadata accessor for DOCDebugInfoManager.Context()
{
  return &type metadata for DOCDebugInfoManager.Context;
}

uint64_t sub_10015ABDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;

  v1 = v0;
  v16 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = dispatch_group_create();
  v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v11);
  v17 = _swiftEmptyArrayStorage;
  v12 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_10006922C((uint64_t *)&unk_100641280);
  v14 = sub_100062698((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v13, v14, v5, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v16);
  *(_QWORD *)(v1 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002CLL, 0x800000010050BDA0, v10, v7, v4, 0);
  return v1;
}

uint64_t type metadata accessor for ViewControllerHierarchyProvider()
{
  return objc_opt_self(_TtC5Files31ViewControllerHierarchyProvider);
}

uint64_t sub_10015ADE0()
{
  return 7633012;
}

uint64_t type metadata accessor for ViewHierarchyProvider()
{
  return objc_opt_self(_TtC5Files21ViewHierarchyProvider);
}

uint64_t sub_10015AE18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v3 = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v3);
  }
  if (a1 < 0)
    v27 = a1;
  else
    v27 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v27);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(v3);
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v6 = 0;
    v7 = a2 + 16;
    v28 = v3 & 0xC000000000000001;
    v8 = v3;
    do
    {
      if (v28)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      else
        v9 = *(id *)(v3 + 8 * v6 + 32);
      v10 = v9;
      ++v6;
      v11 = objc_msgSend(v9, "description", v28);
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      swift_beginAccess(v7, &v29, 33, 0);
      v15._countAndFlagsBits = v12;
      v15._object = v14;
      String.append(_:)(v15);
      swift_endAccess(&v29);
      swift_bridgeObjectRelease(v14);
      v16 = objc_msgSend(v10, "attributeSet");
      v17 = objc_msgSend(v16, "attributeDictionary");

      v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v19 = Dictionary.description.getter(v18, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v21 = v20;
      swift_bridgeObjectRelease(v18);
      v29 = 10;
      v30 = 0xE100000000000000;
      v22._countAndFlagsBits = v19;
      v22._object = v21;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(v21);
      v23 = v29;
      v24 = (void *)v30;
      swift_beginAccess(v7, &v29, 33, 0);
      v25._countAndFlagsBits = v23;
      v25._object = v24;
      String.append(_:)(v25);
      swift_bridgeObjectRelease(v24);
      v26._countAndFlagsBits = 2570;
      v26._object = (void *)0xE200000000000000;
      String.append(_:)(v26);
      swift_endAccess(&v29);

      v3 = v8;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease(v8);
  }
  return result;
}

double sub_10015B08C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  double result;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10004F2F0(0, &qword_100645058, CSSearchableItem_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain();
  v4(v6, v7);
  swift_release(v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_10015B0F8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  swift_beginAccess(a4 + 16, v9, 0, 0);
  v7 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(a4 + 24);
  swift_bridgeObjectRetain(v6);
  a2(v7, v6);
  return swift_bridgeObjectRelease(v6);
}

uint64_t type metadata accessor for SpotlightDumpProvider()
{
  return objc_opt_self(_TtC5Files21SpotlightDumpProvider);
}

void sub_10015B180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10015B220(a2, a3);
}

uint64_t type metadata accessor for SpotlightCollectorManagerProvider()
{
  return objc_opt_self(_TtC5Files33SpotlightCollectorManagerProvider);
}

uint64_t sub_10015B1AC(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend((id)objc_opt_self(FPSpotlightCollector), "_recursiveDescription");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  a2(v4, v6);
  return swift_bridgeObjectRelease(v6);
}

void sub_10015B220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(uint64_t);
  _QWORD *v16;

  v4 = swift_allocObject(&unk_1005CAB18, 32, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0xE000000000000000;
  sub_10004F2F0(0, (unint64_t *)&qword_100645050, CSSearchQuery_ptr);
  v5 = (void *)static CSSearchQuery.withString(_:fetchedAttributes:)(0xD00000000000001BLL, 0x8000000100511EA0, &off_1005BF888);
  v15 = sub_10015B6DC;
  v16 = (_QWORD *)v4;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10015B08C;
  v14 = &unk_1005CAB30;
  v6 = _Block_copy(&v11);
  v7 = v16;
  swift_retain();
  objc_msgSend(v5, "setFoundItemsHandler:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  v8 = (_QWORD *)swift_allocObject(&unk_1005CAB68, 40, 7);
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v4;
  v15 = sub_10015B710;
  v16 = v8;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10015936C;
  v14 = &unk_1005CAB80;
  v9 = _Block_copy(&v11);
  v10 = v16;
  swift_retain();
  swift_retain();
  objc_msgSend(v5, "setCompletionHandler:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  objc_msgSend(v5, "start");
  swift_release(v4);

}

void sub_10015B3E4(void *a1, void (*a2)(_QWORD, unint64_t))
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;

  v3 = objc_msgSend(a1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "recursiveDescription");

  if (!v5)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend((id)objc_opt_self(DOCUISession), "anyWindowPreferingKeyWindow");
  if (!v10)
    goto LABEL_8;
  v11 = v10;
  v12 = objc_msgSend(v10, "rootViewController");

  if (!v12)
    goto LABEL_8;
  v13._object = (void *)0x8000000100511E80;
  v13._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v13);
  v14 = objc_msgSend(v12, "view");
  if (!v14)
    goto LABEL_11;
  v15 = v14;
  v16 = objc_msgSend(v14, "recursiveDescription");

  if (v16)
  {
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v20._countAndFlagsBits = v17;
    v20._object = v19;
    String.append(_:)(v20);

    swift_bridgeObjectRelease(v19);
LABEL_8:
    a2(0, 0xE000000000000000);
    swift_bridgeObjectRelease(0xE000000000000000);
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_10015B588(void *a1, void (*a2)(uint64_t, uint64_t))
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  uint64_t v17;
  uint64_t v18;

  v3 = objc_msgSend(a1, "_printHierarchy");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v17 = v4;
  v18 = v6;
  v7 = objc_msgSend((id)objc_opt_self(DOCUISession), "anyWindowPreferingKeyWindow");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "rootViewController");

    if (v9)
    {
      v10._object = (void *)0x8000000100511E80;
      v10._countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v10);
      v11 = objc_msgSend(v9, "_printHierarchy");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      v15._countAndFlagsBits = v12;
      v15._object = v14;
      String.append(_:)(v15);

      swift_bridgeObjectRelease(v14);
      v4 = v17;
      v6 = v18;
    }
  }
  a2(v4, v6);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_10015B6B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015B6DC(uint64_t a1)
{
  uint64_t v1;

  return sub_10015AE18(a1, v1);
}

uint64_t sub_10015B6E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10015B710(uint64_t a1)
{
  uint64_t v1;

  return sub_10015B0F8(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t type metadata accessor for DOCDebugInfoManager.OutputKind(uint64_t a1)
{
  uint64_t result;

  result = qword_1006450E8;
  if (!qword_1006450E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCDebugInfoManager.OutputKind);
  return result;
}

uint64_t sub_10015B758()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015B77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCDebugInfoManager.OutputKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015B7C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCDebugInfoManager.OutputKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10015B7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100068588((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_10015B8B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100159D60((_QWORD *)(v0 + 16), (_QWORD *)(v0 + v2), *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10015B910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id *v11;
  __n128 v12;
  unint64_t v14;

  v1 = type metadata accessor for DOCDebugInfoManager.OutputKind(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v11 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v11, v1) == 1)
  {
    (*(void (**)(id *, uint64_t))(v7 + 8))(v11, v6);
  }
  else
  {

  }
  v12 = swift_release(*(_QWORD *)(v0 + v5));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v6, v12);

  if (*(_QWORD *)(v0 + v14))
    swift_release(*(_QWORD *)(v0 + v14 + 8));
  return swift_deallocObject(v0, v14 + 16, v3 | v8 | 7);
}

uint64_t sub_10015BA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCDebugInfoManager.OutputKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10015BA88()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for DOCDebugInfoManager.OutputKind(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10015A620(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), v0 + v5, *(void **)(v0 + v6), *(void (**)(uint64_t))(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10015BB20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10015BB44()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

uint64_t sub_10015BB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  sub_100068588((_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

double sub_10015BBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_100159FDC(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10015BC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100068588((_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_10015BD04()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10015A2A4(v0[2], v0[3], v0 + 4, (uint64_t)v0 + v2, *(uint64_t *)((char *)v0 + v3), *(uint64_t *)((char *)v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_10015BD58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100646B10;
  if (!qword_100646B10)
  {
    v1 = sub_10004F2F0(255, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100646B10);
  }
  return result;
}

char *sub_10015BDB0(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      v13 = a2[1];
      *(_QWORD *)a1 = v12;
      *((_QWORD *)a1 + 1) = v13;
      v14 = v12;
      v15 = v13;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_10015BE70(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for URL(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

_QWORD *sub_10015BEC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *(void **)a2;
    v11 = *(void **)(a2 + 8);
    *a1 = v10;
    a1[1] = v11;
    v12 = v10;
    v13 = v11;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **sub_10015BF5C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  if (a1 != a2)
  {
    sub_10015B7C0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = a2[1];
      a1[1] = v11;
      v12 = v10;
      v13 = v11;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_10015C008(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10015C094(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10015B7C0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCProgressProvidingOperationIconType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for DOCProgressProvidingOperationIconType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_10015C14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10015C15C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1004DB780;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

NSString sub_10015C1E8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1006726A8 = (uint64_t)result;
  return result;
}

id sub_10015C21C(uint64_t a1, void *a2)
{
  char *v2;
  id v5;
  Class isa;
  id v7;
  objc_super v9;

  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceURLs] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCMoveOperation_destinationFolderItem] = a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager] = 0;
  type metadata accessor for URL(0);
  v5 = a2;
  swift_bridgeObjectRetain(a1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCMoveOperation();
  v7 = objc_msgSendSuper2(&v9, "initWithURLs:destinationFolder:", isa, v5);

  return v7;
}

char *sub_10015C348(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  id v13;
  id v14;
  Class isa;
  char *v16;
  void *v17;
  char *v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  objc_super v23;

  v4 = v3;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceURLs] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems] = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    v21 = v4;
    swift_bridgeObjectRetain(a1);
    v22 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v8 = _bridgeCocoaArray<A>(_:)(v20, v22);
  }
  else
  {
    swift_bridgeObjectRetain_n(a1, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v3);
    v8 = a1;
  }
  v9 = sub_100123758(v8);
  swift_bridgeObjectRelease(v8);
  if (v9)
  {
    ObjectType = swift_getObjectType(v9, v10);
    v12 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem] = v12;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCMoveOperation_destinationFolderItem] = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager] = a3;
  v13 = a2;
  v14 = a3;

  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for DOCMoveOperation();
  v16 = (char *)objc_msgSendSuper2(&v23, "initWithItems:destinationFolder:", isa, v13);

  v17 = *(void **)&v16[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager];
  if (v17)
    objc_msgSend(v17, "registerUndoOperationForSender:", v16);
  else
    v18 = v16;

  return v16;
}

uint64_t sub_10015C5C0(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[3];
  _QWORD *v36;
  void (*v37)();
  uint64_t v38;
  objc_super v39;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000685A8(a1, (uint64_t)aBlock);
  v12 = v36;
  if (!v36)
  {
    v18 = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v13 = sub_10007E7A0(aBlock, (uint64_t)v36);
  v14 = *(v12 - 1);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v14 + 16))(v17, v15);
  v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v12);
  (*(void (**)(char *, _QWORD *))(v14 + 8))(v17, v12);
  sub_100068588(aBlock);
  if (a2)
LABEL_3:
    a2 = (void *)_convertErrorToNSError(_:)(a2);
LABEL_4:
  v19 = (objc_class *)type metadata accessor for DOCMoveOperation();
  v39.receiver = v3;
  v39.super_class = v19;
  objc_msgSendSuper2(&v39, "finishWithResult:error:", v18, a2);
  swift_unknownObjectRelease(v18);

  v20 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = swift_allocObject(&unk_1005CAD48, 24, 7);
  *(_QWORD *)(v22 + 16) = v3;
  v37 = sub_10015D0E0;
  v38 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  v36 = &unk_1005CAD60;
  v23 = _Block_copy(aBlock);
  v24 = v38;
  v25 = v3;
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_10008BAAC();
  v28 = sub_10006922C((uint64_t *)&unk_100647540);
  v29 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v6, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v33);
}

void sub_10015C880(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = v2;
  if (qword_100640D98 != -1)
  {
    swift_once(&qword_100640D98, sub_10015C1E8);
    v2 = v3;
  }
  objc_msgSend(v2, "postNotificationName:object:", qword_1006726A8, a1);

}

void sub_10015C9FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems);
  if (!((unint64_t)v2 >> 62))
  {
    if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      return;
LABEL_3:
    v3 = (id)_DocumentManagerBundle(a1);
    if (v3)
    {
      v4 = v3;
      v5._countAndFlagsBits = 0x1000000000000026;
      v27._countAndFlagsBits = 0xD000000000000039;
      v27._object = (void *)0x80000001005121A0;
      v5._object = (void *)0x8000000100512150;
      v6._object = (void *)0x8000000100512180;
      v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v7.value._object = (void *)0xEB00000000656C62;
      v6._countAndFlagsBits = 0x1000000000000010;
      v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v7, (NSBundle)v4, v6, v27);
      object = v8._object;

      v10._countAndFlagsBits = 0xD00000000000003FLL;
      v11._object = (void *)0x80000001005121E0;
      v10._object = (void *)0x8000000100512210;
      v11._countAndFlagsBits = 0xD000000000000027;
      v12 = DOCLocalizedDictionaryString(_:comment:)(v11, v10);
      if ((unint64_t)v2 >> 62)
      {
        if (v2 < 0)
          v15 = v2;
        else
          v15 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v2);
        v14 = _CocoaArrayWrapper.endIndex.getter(v15);
        swift_bridgeObjectRelease(v2);
        swift_bridgeObjectRetain(v2);
        v13 = _CocoaArrayWrapper.endIndex.getter(v15);
      }
      else
      {
        v13 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v2);
        v14 = v13;
      }
      if (!v13)
        goto LABEL_26;
      if ((v2 & 0xC000000000000001) != 0)
      {
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
        goto LABEL_14;
      }
      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v16 = *(id *)(v2 + 32);
LABEL_14:
        v17 = v16;
        v18 = objc_msgSend(v16, "displayName", swift_bridgeObjectRelease(v2).n128_f64[0]);

        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        if (v14 == 1)
        {
          swift_bridgeObjectRelease(v12._object);
          v22 = sub_10006922C((uint64_t *)&unk_100644560);
          v23 = swift_allocObject(v22, 72, 7);
          *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v23 + 56) = &type metadata for String;
          *(_QWORD *)(v23 + 64) = sub_10006A638();
          *(_QWORD *)(v23 + 32) = v19;
          *(_QWORD *)(v23 + 40) = v21;
          static String.localizedStringWithFormat(_:_:)(v8._countAndFlagsBits, v8._object, v23);
        }
        else
        {
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v8._object);
          v24 = sub_10006922C((uint64_t *)&unk_100644560);
          v23 = swift_allocObject(v24, 72, 7);
          *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v23 + 56) = &type metadata for Int;
          *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
          *(_QWORD *)(v23 + 32) = v14;
          static String.localizedStringWithFormat(_:_:)(v12._countAndFlagsBits, v12._object, v23);
          object = v12._object;
        }
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v23);
        return;
      }
      __break(1u);
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRelease(v2);
    __break(1u);
    return;
  }
  if (v2 < 0)
    v25 = v2;
  else
    v25 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v2);
  if (v26 >= 1)
    goto LABEL_3;
}

char *sub_10015CDD4()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager];
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v0, "transferResults");
  if (!v3)
    goto LABEL_7;
  v4 = v3;
  v5 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, v5, &protocol witness table for AnyHashable);

  if (!*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRelease(v6);
LABEL_7:

    return 0;
  }
  v7 = sub_10028F904(v6);
  swift_bridgeObjectRelease(v6);
  v8 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem];
  if (v8)
  {
    v9 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
    return sub_10015C348((uint64_t)v7, v8, v2);
  }

  swift_release(v7);
  return 0;
}

void sub_10015CFCC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCMoveOperation", 22, a5, a6, 0);
  __break(1u);
}

id sub_10015D004()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCMoveOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCMoveOperation()
{
  return objc_opt_self(_TtC5Files16DOCMoveOperation);
}

uint64_t sub_10015D0BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10015D0E0()
{
  uint64_t v0;

  sub_10015C880(*(_QWORD *)(v0 + 16));
}

NSString sub_10015D0E8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1006451D0 = (uint64_t)result;
  return result;
}

id sub_10015D11C()
{
  qword_1006451D8 = NSProgressFileDisplayNameKey;
  return NSProgressFileDisplayNameKey;
}

id NSProgress.localizedFinderStylePrimaryDescription.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(v0, "localizedDescription");
  if (result)
  {
    v2 = result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

objc_class *NSProgress.localizedFinderStyleSecondaryDescription.getter()
{
  void *v0;
  double v1;
  objc_class *result;
  objc_class *v3;
  objc_class *v4;
  objc_class *v5;

  objc_msgSend(v0, "fractionCompleted");
  if (v1 <= 0.0)
  {
    v3 = (objc_class *)objc_msgSend(v0, "fileOperationKind");
    v4 = sub_10046E0DC((uint64_t)v3);
    goto LABEL_5;
  }
  result = (objc_class *)objc_msgSend(v0, "localizedAdditionalDescription");
  if (result)
  {
    v3 = result;
    v4 = (objc_class *)static String._unconditionallyBridgeFromObjectiveC(_:)(result);
LABEL_5:
    v5 = v4;

    return v5;
  }
  __break(1u);
  return result;
}

uint64_t NSProgress.publishedFileURL.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(char *, _QWORD, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSString *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v1, "fileURL");
  if (v10)
  {
    v11 = v10;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);

    v12 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v12(v9, v6, v3);
    v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
    v13(v9, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
    {
      v12(a1, v9, v3);
      return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v13)(a1, 0, 1, v3);
    }
  }
  else
  {
    v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
    v13(v9, 1, 1, v3);
  }
  v15 = objc_msgSend(v1, "userInfo");
  type metadata accessor for ProgressUserInfoKey(0);
  v17 = v16;
  v18 = sub_10015E020();
  v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, v17, (char *)&type metadata for Any + 8, v18);

  if (*(_QWORD *)(v19 + 16))
  {
    v20 = NSProgressFileURLKey;
    v21 = sub_100079D38(v20);
    if ((v22 & 1) != 0)
    {
      sub_100069BD8(*(_QWORD *)(v19 + 56) + 32 * v21, (uint64_t)&v25);
    }
    else
    {
      v25 = 0u;
      v26 = 0u;
    }

  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  swift_bridgeObjectRelease(v19);
  if (*((_QWORD *)&v26 + 1))
  {
    v23 = swift_dynamicCast(a1, &v25, (char *)&type metadata for Any + 8, v3, 6) ^ 1;
    v24 = a1;
  }
  else
  {
    sub_10000CB4C((uint64_t)&v25, &qword_100642730);
    v24 = a1;
    v23 = 1;
  }
  v13(v24, v23, 1, v3);
  return sub_10000CB4C((uint64_t)v9, &qword_100643470);
}

Swift::Void __swiftcall NSProgress.publishWithStandardProperties()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  NSString *v33;
  id v34;
  void *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v1 = v0;
  v2 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UTType(0);
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  __chkstk_darwin(v5);
  v54 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - v8;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v55 = (char *)&v54 - v18;
  v19 = objc_msgSend(v1, "kind", v17);
  if (!v19)
    goto LABEL_18;
  v20 = v19;
  v58 = v4;
  v21 = v1;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v24 = v23;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSProgressKindFile);
  v27 = v25;
  if (v22 == v26 && v24 == v25)
  {
    v28 = NSProgressKindFile;

    swift_bridgeObjectRelease_n(v24, 2);
    v29 = v13;
    v30 = v9;
    v31 = (uint64_t)v58;
  }
  else
  {
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
    v33 = NSProgressKindFile;

    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v27);
    v1 = v21;
    v29 = v13;
    v30 = v9;
    v31 = (uint64_t)v58;
    if ((v32 & 1) == 0)
      goto LABEL_18;
  }
  v34 = objc_msgSend(v1, "fileURL");
  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v12, 1, 1, v59);
    goto LABEL_11;
  }
  v35 = v34;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);

  v36 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v37 = v59;
  v36(v12, v15, v59);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v12, 0, 1, v37);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v12, 1, v37) == 1)
  {
LABEL_11:
    sub_10000CB4C((uint64_t)v12, &qword_100643470);
    goto LABEL_18;
  }
  v38 = v55;
  v39 = ((uint64_t (*)(char *, char *, uint64_t))v36)(v55, v12, v37);
  v40 = URL.pathExtension.getter(v39);
  v42 = v41;
  v43 = v54;
  static UTType.data.getter();
  UTType.init(filenameExtension:conformingTo:)(v40, v42, v43);
  v45 = v56;
  v44 = v57;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v31, 1, v57) == 1)
  {
    static UTType.data.getter();
    v46 = sub_10000CB4C(v31, &qword_100643EC0);
  }
  else
  {
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 32))(v30, v31, v44);
  }
  UTType.identifier.getter(v46);
  v48 = v47;
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  if (qword_100640DA8 != -1)
    swift_once(&qword_100640DA8, sub_10015D0E8);
  objc_msgSend(v1, "setUserInfoObject:forKey:", v49, qword_1006451D0);

  v50 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v30, v44);
  URL.lastPathComponent.getter(v50);
  v52 = v51;
  v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v52);
  if (qword_100640DB0 != -1)
    swift_once(&qword_100640DB0, sub_10015D11C);
  objc_msgSend(v1, "setUserInfoObject:forKey:", v53, qword_1006451D8);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v37);
LABEL_18:
  objc_msgSend(v1, "publish");
}

uint64_t NSProgress.fileDisplayName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v1 = objc_msgSend(v0, "userInfo");
  type metadata accessor for ProgressUserInfoKey(0);
  v3 = v2;
  v4 = sub_10015E020();
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, v3, (char *)&type metadata for Any + 8, v4);

  if (qword_100640DB0 == -1)
  {
    if (*(_QWORD *)(v5 + 16))
      goto LABEL_3;
LABEL_11:
    v11 = 0u;
    v12 = 0u;
    goto LABEL_12;
  }
  swift_once(&qword_100640DB0, sub_10015D11C);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_11;
LABEL_3:
  v6 = (id)qword_1006451D8;
  v7 = sub_100079D38(v6);
  if ((v8 & 1) == 0)
  {
    v11 = 0u;
    v12 = 0u;

LABEL_12:
    swift_bridgeObjectRelease(v5);
    goto LABEL_13;
  }
  sub_100069BD8(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v11);

  swift_bridgeObjectRelease(v5);
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_13:
    sub_10000CB4C((uint64_t)&v11, &qword_100642730);
    return 0;
  }
  if (swift_dynamicCast(&v10, &v11, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    return v10;
  else
    return 0;
}

double sub_10015DA4C(uint64_t a1, void **a2)
{
  uint64_t v2;
  void *v3;
  NSString v4;
  double result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  if (v2)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v4 = 0;
  }
  if (qword_100640DB0 != -1)
    swift_once(&qword_100640DB0, sub_10015D11C);
  objc_msgSend(v3, "setUserInfoObject:forKey:", v4, qword_1006451D8);
  *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t NSProgress.iconUTType.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  __int128 v48;
  __int128 v49;

  v46 = a1;
  v2 = type metadata accessor for UTType(0);
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  __chkstk_darwin(v2);
  v43 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C(&qword_100643EC0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v43 - v15;
  v17 = objc_msgSend(v1, "userInfo");
  type metadata accessor for ProgressUserInfoKey(0);
  v19 = v18;
  v20 = sub_10015E020();
  v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, v19, (char *)&type metadata for Any + 8, v20);

  if (qword_100640DA8 == -1)
  {
    if (*(_QWORD *)(v21 + 16))
      goto LABEL_3;
LABEL_11:
    v48 = 0u;
    v49 = 0u;
    goto LABEL_12;
  }
  swift_once(&qword_100640DA8, sub_10015D0E8);
  if (!*(_QWORD *)(v21 + 16))
    goto LABEL_11;
LABEL_3:
  v22 = (id)qword_1006451D0;
  v23 = sub_100079D38(v22);
  if ((v24 & 1) == 0)
  {
    v48 = 0u;
    v49 = 0u;

LABEL_12:
    swift_bridgeObjectRelease(v21);
    goto LABEL_13;
  }
  sub_100069BD8(*(_QWORD *)(v21 + 56) + 32 * v23, (uint64_t)&v48);

  swift_bridgeObjectRelease(v21);
  if (!*((_QWORD *)&v49 + 1))
  {
LABEL_13:
    v27 = &qword_100642730;
    v28 = (char *)&v48;
    goto LABEL_14;
  }
  if ((swift_dynamicCast(v47, &v48, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_15;
  UTType.init(_:)(v47[0], v47[1]);
  v26 = v44;
  v25 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v16, 1, v45) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v46, v16, v25);
  v27 = &qword_100643EC0;
  v28 = v16;
LABEL_14:
  sub_10000CB4C((uint64_t)v28, v27);
LABEL_15:
  NSProgress.publishedFileURL.getter(v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v30 = sub_10000CB4C((uint64_t)v6, &qword_100643470);
    return static UTType.item.getter(v30);
  }
  else
  {
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v32 = URL.pathExtension.getter(v31);
    v34 = v33;
    v35 = v43;
    static UTType.data.getter();
    UTType.init(filenameExtension:conformingTo:)(v32, v34, v35);
    v37 = v44;
    v36 = v45;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v14, 1, v45) == 1)
    {
      sub_10000CB4C((uint64_t)v14, &qword_100643EC0);
      LOBYTE(v48) = 0;
      v38 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      URL.path.getter(v38);
      v40 = v39;
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v40);
      LODWORD(v40) = objc_msgSend(v38, "fileExistsAtPath:isDirectory:", v41, &v48);

      if ((_DWORD)v40)
        static UTType.folder.getter();
      else
        static UTType.item.getter(v42);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v46, v14, v36);
    }
  }
}

uint64_t sub_10015DF2C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v15;

  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  v10 = *a2;
  UTType.identifier.getter(v9);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  if (qword_100640DA8 != -1)
    swift_once(&qword_100640DA8, sub_10015D0E8);
  objc_msgSend(v10, "setUserInfoObject:forKey:", v13, qword_1006451D0);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_10015E020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100641890;
  if (!qword_100641890)
  {
    type metadata accessor for ProgressUserInfoKey(255);
    result = swift_getWitnessTable(&unk_1004D698C, v1);
    atomic_store(result, (unint64_t *)&qword_100641890);
  }
  return result;
}

uint64_t sub_10015E068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NSProgress.fileDisplayName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10015E094@<X0>(uint64_t a1@<X8>)
{
  return NSProgress.iconUTType.getter(a1);
}

unint64_t sub_10015E0B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100646CD0;
  if (!qword_100646CD0)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100646CD0);
  }
  return result;
}

void sub_10015E0F4(uint64_t a1, char a2, void *a3, uint64_t a4, void *a5)
{
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  char v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;

  v9 = (unint64_t)a4 >> 62;
  if (!((unint64_t)a4 >> 62))
  {
    if (!*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
LABEL_3:
    if (!a5)
    {
LABEL_9:
      sub_1001D4F4C(a3, a5, a2 & 1, 0, 1, 0, 0);
      return;
    }
    v30 = a5;
    v10 = objc_msgSend(v30, "sourceIdentifier");
    v11 = objc_msgSend(a3, "sourceIdentifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v17 = v15;
    if (v12 == v16 && v14 == v15)
    {

      swift_bridgeObjectRelease_n(v14, 2);
LABEL_8:

      goto LABEL_9;
    }
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v16, v15, 0);

    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) != 0)
      goto LABEL_8;
    swift_bridgeObjectRetain_n(a4, 2);
    v19 = v30;
    v20 = sub_10008979C((uint64_t)v19, a4);
    swift_bridgeObjectRelease(a4);
    if ((v20 & 1) != 0)
    {

    }
    else
    {
      if (v9)
      {
        if (a4 < 0)
          v22 = a4;
        else
          v22 = a4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a4);
        v23 = v19;
        v24 = _CocoaArrayWrapper.endIndex.getter(v22);
        swift_bridgeObjectRelease(a4);
        if (v24 < 0)
          goto LABEL_39;
      }
      else
      {
        v21 = v19;
      }
      sub_100459504(0, 0, (uint64_t)v19);

    }
    if ((unint64_t)a4 >> 62)
    {
      if (a4 < 0)
        v29 = a4;
      else
        v29 = a4 & 0xFFFFFFFFFFFFFF8;
      if (_CocoaArrayWrapper.endIndex.getter(v29))
        goto LABEL_22;
    }
    else if (*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_22:
      if ((a4 & 0xC000000000000001) != 0)
      {
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
        goto LABEL_25;
      }
      if (*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v25 = *(id *)(a4 + 32);
LABEL_25:
        v26 = v25;
LABEL_36:
        v31 = v26;
        sub_1001D4288(a4, v26, 0, 1, 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);

        swift_bridgeObjectRelease(a4);
        return;
      }
      __break(1u);
LABEL_39:
      __break(1u);
      return;
    }
    v26 = 0;
    goto LABEL_36;
  }
  if (a4 < 0)
    v27 = a4;
  else
    v27 = a4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a4);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(a4);
  if (v28)
    goto LABEL_3;
}

id sub_10015E3D0(void *a1, id a2, uint64_t a3, id a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;

  if (a4)
  {
    v8 = objc_msgSend(a4, "effectiveTabSwitcherTab");
    v9 = objc_msgSend(a4, "effectiveTabSwitcherTab");
  }
  else
  {
    v8 = objc_msgSend(a2, "effectiveTabSwitcherTab");
    v9 = objc_msgSend(a2, "effectiveTabSwitcherTab");
  }
  v10 = v9;
  if (v8 != v9
    || !objc_msgSend(a2, "canBeRestored")
    || !objc_msgSend(a1, "allowsDisplaying:", a2))
  {
    return 0;
  }
  if (a4)
  {
    v29 = a4;
    v11 = objc_msgSend(v29, "sourceIdentifier");
    v12 = objc_msgSend(a2, "sourceIdentifier");
    v28 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v18 = v16;
    if (v13 == v17 && v15 == v16)
    {

      swift_bridgeObjectRelease_n(v15, 2);
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);

      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) == 0)
      {
        v26 = v29;
        v27 = a2;
        swift_bridgeObjectRetain(a3);
        return v10;
      }
    }
  }
  v21 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v22 = swift_allocObject(v21, 40, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v22 + 32) = a2;
  specialized Array._endMutation()(v22);
  v23 = a2;
  v24 = a4;
  v25 = v23;
  return v10;
}

void sub_10015E5F4(char *a1)
{
  sub_10039DA6C(*a1);
}

void sub_10015E600()
{
  char *v0;

  sub_1000E2C68(*v0);
}

void sub_10015E608(uint64_t a1)
{
  char *v1;

  sub_1000E2DF4(a1, *v1);
}

void sub_10015E610(uint64_t a1)
{
  char *v1;

  sub_1000E319C(a1, *v1);
}

unint64_t sub_10015E618@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10015FA40(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10015E644()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10015E67C + 4 * byte_1004DB7C0[*v0]))();
}

void sub_10015E67C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000010050BA40;
}

void sub_10015E69C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461636F6CLL;
  a1[1] = 0xE900000000000073;
}

void sub_10015E6BC(char *a1@<X8>)
{
  strcpy(a1, "anchorLocation");
  a1[15] = -18;
}

uint64_t sub_10015E6E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10015E71C + 4 * byte_1004DB7C4[*v0]))(0xD000000000000014, 0x800000010050BA20);
}

unint64_t sub_10015E71C()
{
  return 0xD000000000000011;
}

uint64_t sub_10015E738()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_10015E754()
{
  return 0x6F4C726F68636E61;
}

unint64_t sub_10015E778@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10015FA40(a1);
  *a2 = result;
  return result;
}

void sub_10015E79C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10015E7A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10015F834();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015E7D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10015F834();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10015E7F8(_QWORD *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;

  v26 = a3;
  v8 = sub_10006922C(&qword_1006452B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_10007E7A0(a1, v12);
  v14 = sub_10015F834();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s12BrowsedStateV10CodingKeysON, &_s12BrowsedStateV10CodingKeysON, v14, v12, v13);
  if (a4)
    v15 = objc_msgSend(a4, "effectiveTabSwitcherTab", v26);
  else
    v15 = objc_msgSend(a2, "effectiveTabSwitcherTab", v26);
  LOBYTE(v28) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v15, &v28, v8);
  if (v4)
    goto LABEL_6;
  v16 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
  v17 = swift_allocObject(v16, 24, 7);
  *(_QWORD *)(v17 + 16) = a2;
  v28 = (_QWORD *)v17;
  v27 = 1;
  v18 = sub_10015FFA4(&qword_1006452C0, (uint64_t)&unk_1004DB8E8);
  v19 = a2;
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v27, v8, v16, v18);
  swift_release(v17);
  v20 = v18;
  v21 = sub_10015EA7C(v26);
  v28 = v21;
  v27 = 2;
  v22 = sub_10006922C(&qword_1006452C8);
  v23 = sub_10015FFE4(&qword_1006452D0, &qword_1006452C0, (uint64_t)&unk_1004DB8E8, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v27, v8, v22, v23);
  swift_bridgeObjectRelease(v21);
  if (!a4)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v24 = swift_allocObject(v16, 24, 7);
    *(_QWORD *)(v24 + 16) = a4;
    v28 = (_QWORD *)v24;
    v27 = 3;
    v25 = a4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v27, v8, v16, v20);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release(v24);
  }
}

_QWORD *sub_10015EA7C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = 0;
        do
        {
          v5 = v4 + 1;
          v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
          v7 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
          v8 = swift_allocObject(v7, 24, 7);
          *(_QWORD *)(v8 + 16) = v6;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
          v9 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
          v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
          specialized ContiguousArray._endMutation()(v10);
          v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        v11 = (void **)(a1 + 32);
        v12 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
        do
        {
          v13 = *v11++;
          v14 = swift_allocObject(v12, 24, 7);
          *(_QWORD *)(v14 + 16) = v13;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v15 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
          v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v14);
          specialized ContiguousArray._endMutation()(v16);
          --v2;
        }
        while (v2);
      }
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

uint64_t sub_10015EBFC(void *a1, uint64_t a2, void *a3)
{
  id v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  void *object;
  Swift::String v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  Swift::String v36;

  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (a3)
    v6 = objc_msgSend(a3, "effectiveTabSwitcherTab");
  else
    v6 = objc_msgSend(a1, "effectiveTabSwitcherTab");
  if (v6 == (id)2)
  {
    v11 = 0xE600000000000000;
    v10 = 0x6573776F7242;
  }
  else
  {
    v7 = 0xE500000000000000;
    v8 = 0x3F3F3F3F3FLL;
    if (!v6)
    {
      v8 = 0x73746E65636552;
      v7 = 0xE700000000000000;
    }
    v9 = v6 == (id)1;
    if (v6 == (id)1)
      v10 = 0x646572616853;
    else
      v10 = v8;
    if (v9)
      v11 = 0xE600000000000000;
    else
      v11 = v7;
  }
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 0x697461636F6C0A2CLL;
  v13._object = (void *)0xED0000203A736E6FLL;
  String.append(_:)(v13);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v27 = a2;
    else
      v27 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v27);
    if (!v14)
      goto LABEL_32;
  }
  else
  {
    v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (!v14)
      goto LABEL_32;
  }
  result = sub_100081774(0, v14 & ~(v14 >> 63), 0);
  if (v14 < 0)
  {
    __break(1u);
    return result;
  }
  v16 = 0;
  do
  {
    if ((a2 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a2);
    else
      v17 = *(id *)(a2 + 8 * v16 + 32);
    v18 = v17;
    v19 = objc_msgSend(v17, "displayName");
    if (v19)
    {
      v20 = v19;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v23 = v22;

    }
    else
    {

      v23 = 0x8000000100512400;
      v21 = 0xD000000000000014;
    }
    v25 = _swiftEmptyArrayStorage[2];
    v24 = _swiftEmptyArrayStorage[3];
    if (v25 >= v24 >> 1)
      sub_100081774(v24 > 1, v25 + 1, 1);
    ++v16;
    _swiftEmptyArrayStorage[2] = v25 + 1;
    v26 = &_swiftEmptyArrayStorage[2 * v25];
    v26[4] = v21;
    v26[5] = v23;
  }
  while (v14 != v16);
LABEL_32:
  swift_bridgeObjectRelease(a2);
  v28 = 7104878;
  v29._countAndFlagsBits = Array.description.getter(_swiftEmptyArrayStorage, &type metadata for String);
  object = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(object);
  v31._countAndFlagsBits = 0x726F68636E610A2CLL;
  v31._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v31);
  if (a3 && (v32 = objc_msgSend(a3, "displayName")) != 0)
  {
    v33 = v32;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

  }
  else
  {
    v35 = (void *)0xE300000000000000;
  }
  v36._countAndFlagsBits = v28;
  v36._object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v35);
  return 0x203A626174;
}

void sub_10015EF48(_QWORD *a1)
{
  uint64_t v1;

  sub_10015E7F8(a1, *(void **)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16));
}

uint64_t sub_10015EF64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_10015FA88(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10015EF90()
{
  uint64_t v0;

  return sub_10015EBFC(*(void **)v0, *(_QWORD *)(v0 + 8), *(void **)(v0 + 16));
}

Swift::Int sub_10015EF9C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 1635017060, 0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_10015EFE4(uint64_t a1)
{
  return String.hash(into:)(a1, 1635017060, 0xE400000000000000);
}

Swift::Int sub_10015EFF4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 1635017060, 0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_10015F038@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005BF938, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_10015F088(_QWORD *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_10015F09C()
{
  return 1635017060;
}

uint64_t sub_10015F0AC@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005BF970, v3);
  result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_10015F100(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10015F7AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015F128(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10015F7AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10015F150(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  void *v21;
  uint64_t v22;
  id v24[2];

  v2 = v1;
  v4 = sub_10006922C(&qword_1006452F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_10007E7A0(a1, v8);
  v10 = sub_10015F7AC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys, &type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys, v10, v8, v9);
  v11 = (void *)objc_opt_self(NSKeyedArchiver);
  v12 = *(_QWORD *)(v2 + 16);
  v24[0] = 0;
  v13 = objc_msgSend(v11, "archivedDataWithRootObject:requiringSecureCoding:error:", v12, 0, v24);
  v14 = v24[0];
  if (v13)
  {
    v15 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

    v24[0] = v15;
    v24[1] = v17;
    v18 = sub_1001600A0();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v24, v19, v4, &type metadata for Data, v18);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_1000D4C00((uint64_t)v15, (unint64_t)v17);
  }
  else
  {
    v21 = v14;
    _convertNSErrorToError(_:)(v14);

    swift_willThrow(v22);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_10015F300(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v3 = v1;
  v5 = sub_10006922C(&qword_100645290);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10007E7A0(a1, v9);
  v11 = sub_10015F7AC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys, &type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys, v11, v9, v10);
  if (!v2)
  {
    v12 = sub_10015F7F0();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &type metadata for Data, v13, v5, &type metadata for Data, v12);
    v15 = v25[0];
    v14 = v25[1];
    sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
    v16 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    v17 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v16, v15, v14, v16);
    v21 = v17;
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1000D4C00(v15, v14);
      *(_QWORD *)(v3 + 16) = v21;
      goto LABEL_4;
    }
    v22 = type metadata accessor for DecodingError(0, v18);
    swift_allocError(v22, &protocol witness table for DecodingError, 0, 0);
    v23 = sub_100160060(&qword_1006452A8, &qword_100645290);
    v24 = static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)(v23, v8, 0, 0xE000000000000000, v5, v23);
    swift_willThrow(v24);
    sub_1000D4C00(v15, v14);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v19 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
  swift_deallocPartialClassInstance(v3, v19, 24, 7);
LABEL_4:
  sub_100068588(a1);
  return v3;
}

uint64_t type metadata accessor for DOCConcreteLocationSwiftEncodable()
{
  return objc_opt_self(_TtC5FilesP33_40A0754B8A8E0A33356792BB5D7E525533DOCConcreteLocationSwiftEncodable);
}

void _s12BrowsedStateVwxx(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *_s12BrowsedStateVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  swift_bridgeObjectRetain(v4);
  v7 = v5;
  return a1;
}

uint64_t _s12BrowsedStateVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 16);
  v10 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v11 = v10;

  return a1;
}

uint64_t _s12BrowsedStateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t _s12BrowsedStateVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12BrowsedStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s12BrowsedStateVMa()
{
  return &_s12BrowsedStateVN;
}

uint64_t sub_10015F730(_QWORD *a1)
{
  return sub_10015F150(a1);
}

uint64_t sub_10015F750@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
  swift_allocObject(v5, 24, 7);
  result = sub_10015F300(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_10015F7AC()
{
  unint64_t result;

  result = qword_100645298;
  if (!qword_100645298)
  {
    result = swift_getWitnessTable(&unk_1004DBB4C, &type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100645298);
  }
  return result;
}

unint64_t sub_10015F7F0()
{
  unint64_t result;

  result = qword_1006452A0;
  if (!qword_1006452A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1006452A0);
  }
  return result;
}

unint64_t sub_10015F834()
{
  unint64_t result;

  result = qword_1006452B8;
  if (!qword_1006452B8)
  {
    result = swift_getWitnessTable(&unk_1004DBAFC, &_s12BrowsedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006452B8);
  }
  return result;
}

unint64_t sub_10015F878(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t result;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v8)
      goto LABEL_3;
LABEL_13:
    v14 = swift_bridgeObjectRelease(a1);
    v15 = Logger.UI.unsafeMutableAddressor(v14);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Unable to determine BrowsedState since locations is empty", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  if (a1 < 0)
    v13 = a1;
  else
    v13 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v8 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v8)
    goto LABEL_13;
LABEL_3:
  result = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, a1);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(a1 + 8 * result + 32);
LABEL_8:
    v11 = v10;
    swift_bridgeObjectRelease(a1);
    v12 = a2;
    swift_bridgeObjectRetain(a1);
    return (unint64_t)v11;
  }
  __break(1u);
  return result;
}

unint64_t sub_10015FA40(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005BF8B8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_10015FA88(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void (**v4)(char *, _QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void (**v17)(char *, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  __n128 v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (**v41)(char *, _QWORD);
  void (**v42)(char *, _QWORD);
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v3 = (_QWORD *)sub_10006922C(&qword_1006452D8);
  v4 = (void (**)(char *, _QWORD))*(v3 - 1);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10007E7A0(a1, v7);
  v9 = sub_10015F834();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s12BrowsedStateV10CodingKeysON, &_s12BrowsedStateV10CodingKeysON, v9, v7, v8);
  if (v1)
  {
    sub_100068588(a1);
    return (uint64_t)v4;
  }
  v10 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
  LOBYTE(v47) = 1;
  v11 = sub_10015FFA4(&qword_1006452E0, (uint64_t)&unk_1004DB8C0);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v48, v10, &v47, v3, v10, v11);
  v45 = v11;
  v46 = v10;
  v13 = v48;
  v14 = *(id *)(v48 + 16);
  swift_release(v13);
  v15 = sub_10006922C(&qword_1006452C8);
  LOBYTE(v47) = 2;
  v16 = sub_10015FFE4(&qword_1006452E8, &qword_1006452E0, (uint64_t)&unk_1004DB8C0, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v17 = (void (**)(char *, _QWORD))v14;
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v48, v15, &v47, v3, v15, v16);
  v41 = v4;
  v42 = v17;
  v43 = v3;
  v44 = 0;
  v18 = v48;
  if (!((unint64_t)v48 >> 62))
  {
    v19 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease(v18);
    v25 = _swiftEmptyArrayStorage;
LABEL_19:
    LOBYTE(v48) = 3;
    swift_bridgeObjectRetain(v25);
    v27 = v43;
    v28 = KeyedDecodingContainer.contains(_:)(&v48, v43);
    v30 = v44;
    v4 = v42;
    if ((v28 & 1) != 0)
    {
      LOBYTE(v47) = 3;
      KeyedDecodingContainer.decode<A>(_:forKey:)(&v48, v46, &v47, v27, v46, v45);
      if (v30)
      {
        ((void (**)(char *, _QWORD *))v41)[1](v6, v27);

        swift_bridgeObjectRelease(v25);
        v31 = 0;
        goto LABEL_34;
      }
      v32 = v48;
      v3 = *(id *)(v48 + 16);
      v29 = swift_release(v32);
    }
    else
    {
      v3 = 0;
    }
    LOBYTE(v48) = 0;
    v33 = (id)KeyedDecodingContainer.decode(_:forKey:)(&v48, v27, v29);
    if (v30)
    {
      ((void (**)(char *, _QWORD *))v41)[1](v6, v27);

      swift_bridgeObjectRelease(v25);
LABEL_33:
      v31 = 1;
LABEL_34:
      sub_100068588(a1);
      swift_bridgeObjectRelease(v25);

      if (v31)
      return (uint64_t)v4;
    }
    if (v3)
    {
      v34 = v3;
      if (v33 != objc_msgSend(v3, "effectiveTabSwitcherTab"))
        goto LABEL_32;
    }
    else
    {
      if (v33 != objc_msgSend(v4, "effectiveTabSwitcherTab"))
      {
LABEL_32:

        v36 = swift_bridgeObjectRelease(v25);
        LOBYTE(v48) = 0;
        v37 = type metadata accessor for DecodingError(0, v36);
        swift_allocError(v37, &protocol witness table for DecodingError, 0, 0);
        v38 = sub_100160060(&qword_1006452F0, &qword_1006452D8);
        v39 = static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)(&v48, v6, 0xD000000000000015, 0x80000001005123E0, v27, v38);
        swift_willThrow(v39);
        ((void (**)(char *, _QWORD *))v41)[1](v6, v27);
        goto LABEL_33;
      }
      v34 = 0;
    }
    ((void (**)(char *, _QWORD *))v41)[1](v6, v27);
    v35 = v34;
    sub_100068588(a1);

    swift_bridgeObjectRelease(v25);
    return (uint64_t)v4;
  }
  if (v48 < 0)
    v26 = v48;
  else
    v26 = v48 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v48);
  v19 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v18);
  if (!v19)
    goto LABEL_18;
LABEL_7:
  v47 = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v19);
  if ((v19 & 0x8000000000000000) == 0)
  {
    v20 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
      }
      else
      {
        v21 = *(_QWORD *)(v18 + 8 * v20 + 32);
        swift_retain();
      }
      ++v20;
      v3 = *(id *)(v21 + 16);
      swift_release(v21);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      v23 = v47[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
      v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v3);
      specialized ContiguousArray._endMutation()(v24);
    }
    while (v19 != v20);
    v25 = v47;
    swift_bridgeObjectRelease(v18);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_10015FFA4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10015FFE4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_10007E830(&qword_1006452C8);
    sub_10015FFA4(a2, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100160060(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10007E830(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for KeyedDecodingContainer<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001600A0()
{
  unint64_t result;

  result = qword_100645300;
  if (!qword_100645300)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_100645300);
  }
  return result;
}

uint64_t _s12BrowsedStateV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12BrowsedStateV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001601C0 + 4 * byte_1004DB7CD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001601F4 + 4 * byte_1004DB7C8[v4]))();
}

uint64_t sub_1001601F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001601FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100160204);
  return result;
}

uint64_t sub_100160210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100160218);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10016021C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100160224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12BrowsedStateV10CodingKeysOMa()
{
  return &_s12BrowsedStateV10CodingKeysON;
}

uint64_t storeEnumTagSinglePayload for DOCConcreteLocationSwiftEncodable.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100160280 + 4 * byte_1004DB7D2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001602A0 + 4 * byte_1004DB7D7[v4]))();
}

_BYTE *sub_100160280(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001602A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001602A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001602B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001602B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001602C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DOCConcreteLocationSwiftEncodable.CodingKeys()
{
  return &type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys;
}

unint64_t sub_1001602E0()
{
  unint64_t result;

  result = qword_100645308;
  if (!qword_100645308)
  {
    result = swift_getWitnessTable(&unk_1004DB9E4, &type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100645308);
  }
  return result;
}

unint64_t sub_100160328()
{
  unint64_t result;

  result = qword_100645310;
  if (!qword_100645310)
  {
    result = swift_getWitnessTable(&unk_1004DBAD4, &_s12BrowsedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100645310);
  }
  return result;
}

unint64_t sub_100160370()
{
  unint64_t result;

  result = qword_100645318;
  if (!qword_100645318)
  {
    result = swift_getWitnessTable(&unk_1004DBA0C, &_s12BrowsedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100645318);
  }
  return result;
}

unint64_t sub_1001603B8()
{
  unint64_t result;

  result = qword_100645320;
  if (!qword_100645320)
  {
    result = swift_getWitnessTable(&unk_1004DBA34, &_s12BrowsedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100645320);
  }
  return result;
}

unint64_t sub_100160400()
{
  unint64_t result;

  result = qword_100645328;
  if (!qword_100645328)
  {
    result = swift_getWitnessTable(&unk_1004DB91C, &type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100645328);
  }
  return result;
}

unint64_t sub_100160448()
{
  unint64_t result;

  result = qword_100645330;
  if (!qword_100645330)
  {
    result = swift_getWitnessTable(&unk_1004DB944, &type metadata for DOCConcreteLocationSwiftEncodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100645330);
  }
  return result;
}

uint64_t type metadata accessor for DOCTransitionableProxy()
{
  return objc_opt_self(_TtC5Files22DOCTransitionableProxy);
}

void sub_1001604AC(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE v18[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    swift_beginAccess(a3 + 16, v18, 1, 0);
    v11 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = a1;
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    v12 = Logger.UI.unsafeMutableAddressor(v8);
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v12, v6);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "_transitionController is nil. Bailing early.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  dispatch_group_leave(a2);
}

double sub_1001605F8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  _BYTE v20[24];
  _OWORD v21[2];
  uint64_t v22;

  v4 = (uint64_t *)(a1 + 16);
  v5 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v6 = static os_log_type_t.debug.getter(v5);
  v7 = sub_10006922C((uint64_t *)&unk_100644560);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004D9670;
  swift_beginAccess(v4, v20, 0, 0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9
    || (v19 = *(_QWORD *)(a1 + 16),
        swift_unknownObjectRetain(v9),
        v10 = sub_10006922C((uint64_t *)&unk_1006453F0),
        v11 = sub_10006922C((uint64_t *)&unk_10064D520),
        (swift_dynamicCast(v21, &v19, v10, v11, 6) & 1) == 0))
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
  }
  v12 = sub_10006922C((uint64_t *)&unk_1006453E0);
  v13 = String.init<A>(describing:)(v21, v12);
  v15 = v14;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = sub_10006A638();
  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v15;
  os_log(_:dso:log:type:_:)("looping through the VCs to to get transition controller: finished, returning %@", 79, 2, &_mh_execute_header, v5, v6, v8);

  swift_bridgeObjectRelease(v8);
  swift_beginAccess(v4, v21, 0, 0);
  v16 = *v4;
  v17 = swift_unknownObjectRetain(v16);
  a2(v17);
  *(_QWORD *)&result = swift_unknownObjectRelease(v16).n128_u64[0];
  return result;
}

uint64_t sub_100160850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE v17[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    swift_beginAccess(a2 + 16, v17, 1, 0);
    v9 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 16) = a1;
    swift_unknownObjectRetain(a1);
    return swift_unknownObjectRelease(v9);
  }
  else
  {
    v11 = Logger.UI.unsafeMutableAddressor(v6);
    v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v11, v4);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "_transitionController is nil. Bailing early.", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

void sub_100160994(uint64_t a1, dispatch_group_t group, uint64_t a3)
{
  uint64_t v6;
  _BYTE v7[24];

  if (a1)
  {
    swift_beginAccess(a3 + 16, v7, 1, 0);
    v6 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = a1;
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRelease(v6);
    dispatch_group_leave(group);
  }
  else
  {
    dispatch_group_leave(group);
  }
}

uint64_t sub_100160A18(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(a3 + 16, v8, 0, 0);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = swift_unknownObjectRetain(v5);
  a1(v6);
  return swift_unknownObjectRelease(v5);
}

uint64_t sub_100160A84(uint64_t a1, int a2, void *a3, void *aBlock, void (*a5)(id, uint64_t, void *))
{
  void *v8;
  id v9;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  swift_retain(a1);
  a5(v9, a1, v8);
  _Block_release(v8);
  _Block_release(v8);

  return swift_release(a1);
}

void sub_100160AF8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  if (a1)
  {
    v8 = a4 + 16;
    swift_beginAccess(a3 + 16, v14, 1, 0);
    v9 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = a1;
    v10 = a1;

    swift_beginAccess(v8, &v13, 1, 0);
    v11 = *(void **)(a4 + 16);
    *(_QWORD *)(a4 + 16) = a2;
    v12 = a2;

  }
}

void sub_100160C00(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  _BYTE v6[24];

  if (a1)
  {
    swift_beginAccess(a2 + 16, v6, 1, 0);
    v4 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = a1;
    v5 = a1;

  }
}

void sub_100160C64(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  Class isa;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[5];
  uint64_t v18;

  v7 = *(_QWORD *)(v4 + 16);
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v15 = v7;
  else
    v15 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v8)
    goto LABEL_14;
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
  }
  else
  {
    v9 = 0;
    v10 = a2 & 1;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      }
      else
      {
        v11 = *(void **)(v7 + 8 * v9 + 32);
        swift_unknownObjectRetain(v11);
      }
      ++v9;
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      aBlock[4] = a3;
      v18 = a4;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10016C02C;
      aBlock[3] = &unk_1005CB050;
      v13 = _Block_copy(aBlock);
      v14 = v18;
      swift_retain();
      objc_msgSend(v11, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, v10, v13, swift_release(v14).n128_f64[0]);
      _Block_release(v13);
      swift_unknownObjectRelease(v11);

    }
    while (v8 != v9);
    swift_bridgeObjectRelease(v7);
  }
}

uint64_t sub_100160EE4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100160F08(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  dispatch_group_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSURL *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  __int128 aBlock;
  __int128 v67;
  void *v68;
  _QWORD *v69;
  char v70[32];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v57 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = swift_allocObject(&unk_1005CB2B8, 24, 7);
  *(_QWORD *)(v59 + 16) = a3;
  v11 = *(_QWORD *)(a2 + 16);
  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a3);
    if (v12 >= 1)
      goto LABEL_3;
LABEL_26:
    a3[2](a3, 0);
    swift_release(v59);
    return;
  }
  if (v11 < 0)
    v50 = *(_QWORD *)(a2 + 16);
  else
    v50 = v11 & 0xFFFFFFFFFFFFFF8;
  _Block_copy(a3);
  swift_bridgeObjectRetain(v11);
  v51 = _CocoaArrayWrapper.endIndex.getter(v50);
  swift_bridgeObjectRelease(v11);
  if (v51 < 1)
    goto LABEL_26;
LABEL_3:
  v54 = v9;
  v55 = v8;
  v56 = v6;
  v13 = swift_allocObject(&unk_1005CB268, 24, 7);
  *(_QWORD *)(v13 + 16) = 0;
  v64 = (_QWORD *)(v13 + 16);
  v14 = dispatch_group_create();
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v37 = v11;
    else
      v37 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v15 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v15)
      goto LABEL_5;
LABEL_20:
    swift_bridgeObjectRelease(v11);
LABEL_21:
    v38 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v39 = (void *)static OS_dispatch_queue.main.getter(v38);
    v40 = (_QWORD *)swift_allocObject(&unk_1005CB330, 40, 7);
    v40[2] = v13;
    v40[3] = sub_100162138;
    v41 = v59;
    v40[4] = v59;
    v68 = sub_1001621A4;
    v69 = v40;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v67 = sub_10004A82C;
    *((_QWORD *)&v67 + 1) = &unk_1005CB348;
    v42 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v43 = v57;
    static DispatchQoS.unspecified.getter(v44);
    v65 = _swiftEmptyArrayStorage;
    v45 = sub_10008BAAC();
    v46 = sub_10006922C((uint64_t *)&unk_100647540);
    v47 = sub_1000791AC();
    v48 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v65, v46, v47, v5, v45);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v43, v48, v39, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v5);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v54);
    v49 = v69;
    swift_release(v41);
    swift_release(v13);
    swift_release(v49);
    return;
  }
  v15 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v11);
  if (!v15)
    goto LABEL_20;
LABEL_5:
  if (v15 >= 1)
  {
    v53 = v5;
    v61 = v11 & 0xC000000000000001;
    swift_beginAccess(v64, v70, 0, 0);
    v16 = 0;
    v60 = xmmword_1004D9670;
    v62 = v15;
    v63 = v11;
    do
    {
      if (v61)
      {
        v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v11);
        v29 = (void *)v28;
      }
      else
      {
        v29 = *(void **)(v11 + 8 * v16 + 32);
        v28 = swift_unknownObjectRetain(v29);
      }
      v30 = *(id *)DOCLog.UI.unsafeMutableAddressor(v28);
      v31 = static os_log_type_t.debug.getter(v30);
      v32 = sub_10006922C((uint64_t *)&unk_100644560);
      v33 = swift_allocObject(v32, 72, 7);
      *(_OWORD *)(v33 + 16) = v60;
      v34 = (_QWORD *)*v64;
      if (!*v64
        || (v65 = (_QWORD *)*v64,
            swift_unknownObjectRetain(v34),
            v35 = sub_10006922C((uint64_t *)&unk_1006453F0),
            v36 = sub_10006922C((uint64_t *)&unk_10064D520),
            (swift_dynamicCast(&aBlock, &v65, v35, v36, 6) & 1) == 0))
      {
        v68 = 0;
        aBlock = 0u;
        v67 = 0u;
      }
      ++v16;
      v17 = sub_10006922C((uint64_t *)&unk_1006453E0);
      v18 = String.init<A>(describing:)(&aBlock, v17);
      v20 = v19;
      *(_QWORD *)(v33 + 56) = &type metadata for String;
      *(_QWORD *)(v33 + 64) = sub_10006A638();
      *(_QWORD *)(v33 + 32) = v18;
      *(_QWORD *)(v33 + 40) = v20;
      os_log(_:dso:log:type:_:)("looping through the VCs to to get transition controller: trying %@", 66, 2, &_mh_execute_header, v30, v31, v33);

      swift_bridgeObjectRelease(v33);
      dispatch_group_enter(v14);
      URL._bridgeToObjectiveC()(v21);
      v23 = v22;
      v24 = swift_allocObject(&unk_1005CB2E0, 32, 7);
      *(_QWORD *)(v24 + 16) = v14;
      *(_QWORD *)(v24 + 24) = v13;
      v68 = sub_100162170;
      v69 = (_QWORD *)v24;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v67 = sub_100018CC0;
      *((_QWORD *)&v67 + 1) = &unk_1005CB2F8;
      v25 = _Block_copy(&aBlock);
      v26 = v69;
      swift_retain();
      v27 = v14;
      objc_msgSend(v29, "getTransitionControllerForURL:completionBlock:", v23, v25, swift_release(v26).n128_f64[0]);
      _Block_release(v25);
      swift_unknownObjectRelease(v29);

      v11 = v63;
    }
    while (v62 != v16);
    swift_bridgeObjectRelease(v63);
    v5 = v53;
    goto LABEL_21;
  }
  __break(1u);
}

void sub_1001614D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD aBlock[5];
  uint64_t v20;

  v3 = a3;
  v4 = *(_QWORD *)(a2 + 16);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v13 = *(_QWORD *)(a2 + 16);
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + 16));
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v4);
    if (v14 > 0)
    {
      v6 = swift_allocObject(&unk_1005CB268, 24, 7);
      *(_QWORD *)(v6 + 16) = 0;
      v11 = (_QWORD *)(v6 + 16);
      swift_bridgeObjectRetain(v4);
      v15 = _CocoaArrayWrapper.endIndex.getter(v13);
      if (!v15)
      {
        swift_bridgeObjectRelease(v4);
LABEL_10:
        v12 = swift_beginAccess(v11, aBlock, 0, 0);
        (*(void (**)(uint64_t, _QWORD, __n128))(v3 + 16))(v3, *v11, v12);
        swift_release(v6);
        return;
      }
      v5 = v15;
      if (v15 >= 1)
      {
        v16 = (_QWORD *)(v6 + 16);
        v17 = v3;
LABEL_4:
        v7 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
          }
          else
          {
            v8 = *(void **)(v4 + 8 * v7 + 32);
            swift_unknownObjectRetain(v8);
          }
          ++v7;
          aBlock[4] = sub_100162130;
          v20 = v6;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100018CC0;
          aBlock[3] = &unk_1005CB280;
          v9 = _Block_copy(aBlock);
          v10 = v20;
          swift_retain();
          objc_msgSend(v8, "getTransitionControllerForItem:completionBlock:", a1, v9, swift_release(v10).n128_f64[0]);
          _Block_release(v9);
          swift_unknownObjectRelease(v8);
        }
        while (v5 != v7);
        swift_bridgeObjectRelease(v4);
        v11 = v16;
        v3 = v17;
        goto LABEL_10;
      }
      __break(1u);
    }
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      v17 = a3;
      v6 = swift_allocObject(&unk_1005CB268, 24, 7);
      *(_QWORD *)(v6 + 16) = 0;
      v16 = (_QWORD *)(v6 + 16);
      swift_bridgeObjectRetain(v4);
      goto LABEL_4;
    }
  }
  (*(void (**)(uint64_t, _QWORD))(v3 + 16))(v3, 0);
}

void sub_100161718(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  NSObject *v24;
  double v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  void **aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD *v56;

  v49 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v48 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_1005CB178, 24, 7);
  *(_QWORD *)(v12 + 16) = a3;
  v13 = *(_QWORD *)(a2 + 16);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a3);
    if (v14 >= 1)
      goto LABEL_3;
LABEL_21:
    a3[2](a3, 0);
    swift_release(v12);
    return;
  }
  if (v13 < 0)
    v39 = *(_QWORD *)(a2 + 16);
  else
    v39 = v13 & 0xFFFFFFFFFFFFFF8;
  _Block_copy(a3);
  swift_bridgeObjectRetain(v13);
  v40 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease(v13);
  if (v40 < 1)
    goto LABEL_21;
LABEL_3:
  v42 = v12;
  v43 = v10;
  v44 = v9;
  v45 = v8;
  v46 = v6;
  v15 = swift_allocObject(&unk_1005CB1A0, 24, 7);
  *(_QWORD *)(v15 + 16) = 0;
  v16 = dispatch_group_create();
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v18 = v13;
    else
      v18 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v17 = _CocoaArrayWrapper.endIndex.getter(v18);
  }
  else
  {
    v17 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
  }
  v47 = v5;
  if (!v17)
    goto LABEL_16;
  if (v17 >= 1)
  {
    v19 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v13);
      }
      else
      {
        v20 = *(void **)(v13 + 8 * v19 + 32);
        swift_unknownObjectRetain(v20);
      }
      ++v19;
      dispatch_group_enter(v16);
      v21 = swift_allocObject(&unk_1005CB1C8, 32, 7);
      *(_QWORD *)(v21 + 16) = v16;
      *(_QWORD *)(v21 + 24) = v15;
      v55 = sub_1001620F0;
      v56 = (_QWORD *)v21;
      aBlock = _NSConcreteStackBlock;
      v52 = 1107296256;
      v53 = sub_100018CC0;
      v54 = &unk_1005CB1E0;
      v22 = _Block_copy(&aBlock);
      v23 = v56;
      swift_retain();
      v24 = v16;
      *(_QWORD *)&v25 = swift_release(v23).n128_u64[0];
      objc_msgSend(v20, "getPopoverTrackerForItem:completionBlock:", v49, v22, v25);
      _Block_release(v22);
      swift_unknownObjectRelease(v20);
    }
    while (v17 != v19);
LABEL_16:
    swift_bridgeObjectRelease(v13);
    v26 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v27 = (void *)static OS_dispatch_queue.main.getter(v26);
    v28 = (_QWORD *)swift_allocObject(&unk_1005CB218, 40, 7);
    v29 = v42;
    v28[2] = sub_1001620C0;
    v28[3] = v29;
    v28[4] = v15;
    v55 = sub_100162124;
    v56 = v28;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_10004A82C;
    v54 = &unk_1005CB230;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v31 = v48;
    static DispatchQoS.unspecified.getter(v32);
    v50 = _swiftEmptyArrayStorage;
    v33 = sub_10008BAAC();
    v34 = sub_10006922C((uint64_t *)&unk_100647540);
    v35 = sub_1000791AC();
    v36 = v45;
    v37 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v34, v35, v47, v33);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v31, v36, v27, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v44);
    v38 = v56;
    swift_release(v29);
    swift_release(v15);
    swift_release(v38);
    return;
  }
  __break(1u);
}

void sub_100161B5C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26[24];
  _QWORD aBlock[5];
  uint64_t v28;

  v6 = *(_QWORD *)(a3 + 16);
  if (!((unint64_t)v6 >> 62))
  {
    if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_3;
LABEL_22:
    (*(void (**)(uint64_t, _QWORD, _QWORD))(a4 + 16))(a4, 0, 0);
    return;
  }
  if (v6 < 0)
    v22 = *(_QWORD *)(a3 + 16);
  else
    v22 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(a3 + 16));
  v23 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v6);
  if (v23 < 1)
    goto LABEL_22;
LABEL_3:
  v7 = swift_allocObject(&unk_1005CB0D8, 24, 7);
  *(_QWORD *)(v7 + 16) = 0;
  v8 = v7 + 16;
  v9 = swift_allocObject(&unk_1005CB100, 24, 7);
  *(_QWORD *)(v9 + 16) = 0;
  v10 = v9 + 16;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v19 = v6;
    else
      v19 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (v11)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease(v6);
LABEL_17:
    swift_beginAccess(v8, aBlock, 0, 0);
    v20 = *(_QWORD *)(v7 + 16);
    v21 = swift_beginAccess(v10, v26, 0, 0);
    (*(void (**)(uint64_t, uint64_t, _QWORD, __n128))(a4 + 16))(a4, v20, *(_QWORD *)(v9 + 16), v21);
    swift_release(v7);
    swift_release(v9);
    return;
  }
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v6);
  if (!v11)
    goto LABEL_16;
LABEL_5:
  if (v11 >= 1)
  {
    v24 = a4;
    v12 = a2;
    v13 = 0;
    v14 = v12 & 1;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v6);
      }
      else
      {
        v15 = *(void **)(v6 + 8 * v13 + 32);
        swift_unknownObjectRetain(v15);
      }
      ++v13;
      v16 = swift_allocObject(&unk_1005CB128, 32, 7);
      *(_QWORD *)(v16 + 16) = v7;
      *(_QWORD *)(v16 + 24) = v9;
      aBlock[4] = sub_1001620B8;
      v28 = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100083540;
      aBlock[3] = &unk_1005CB140;
      v17 = _Block_copy(aBlock);
      v18 = v28;
      swift_retain();
      swift_retain();
      objc_msgSend(v15, "getViewFor:waitForNewThumbnail::", a1, v14, v17, swift_release(v18).n128_f64[0]);
      _Block_release(v17);
      swift_unknownObjectRelease(v15);
    }
    while (v11 != v13);
    swift_bridgeObjectRelease(v6);
    v8 = v7 + 16;
    a4 = v24;
    v10 = v9 + 16;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_100161E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD aBlock[5];
  uint64_t v20;

  v3 = a3;
  v4 = *(_QWORD *)(a2 + 16);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v13 = *(_QWORD *)(a2 + 16);
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + 16));
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v4);
    if (v14 > 0)
    {
      v6 = swift_allocObject(&unk_1005CB088, 24, 7);
      *(_QWORD *)(v6 + 16) = 0;
      v11 = (_QWORD *)(v6 + 16);
      swift_bridgeObjectRetain(v4);
      v15 = _CocoaArrayWrapper.endIndex.getter(v13);
      if (!v15)
      {
        swift_bridgeObjectRelease(v4);
LABEL_10:
        v12 = swift_beginAccess(v11, aBlock, 0, 0);
        (*(void (**)(uint64_t, _QWORD, __n128))(v3 + 16))(v3, *v11, v12);
        swift_release(v6);
        return;
      }
      v5 = v15;
      if (v15 >= 1)
      {
        v16 = (_QWORD *)(v6 + 16);
        v17 = v3;
LABEL_4:
        v7 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
          }
          else
          {
            v8 = *(void **)(v4 + 8 * v7 + 32);
            swift_unknownObjectRetain(v8);
          }
          ++v7;
          aBlock[4] = sub_100162060;
          v20 = v6;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10015936C;
          aBlock[3] = &unk_1005CB0A0;
          v9 = _Block_copy(aBlock);
          v10 = v20;
          swift_retain();
          objc_msgSend(v8, "getCellFor::", a1, v9, swift_release(v10).n128_f64[0]);
          _Block_release(v9);
          swift_unknownObjectRelease(v8);
        }
        while (v5 != v7);
        swift_bridgeObjectRelease(v4);
        v11 = v16;
        v3 = v17;
        goto LABEL_10;
      }
      __break(1u);
    }
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      v17 = a3;
      v6 = swift_allocObject(&unk_1005CB088, 24, 7);
      *(_QWORD *)(v6 + 16) = 0;
      v16 = (_QWORD *)(v6 + 16);
      swift_bridgeObjectRetain(v4);
      goto LABEL_4;
    }
  }
  (*(void (**)(uint64_t, _QWORD))(v3 + 16))(v3, 0);
}

void sub_100162060(void *a1)
{
  uint64_t v1;

  sub_100160C00(a1, v1);
}

uint64_t sub_100162068()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016208C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001620B8(void *a1, void *a2)
{
  uint64_t v2;

  sub_100160AF8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1001620C0(uint64_t a1)
{
  uint64_t v1;

  return sub_100387E98(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001620C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001620F0(uint64_t a1)
{
  uint64_t v1;

  sub_100160994(a1, *(dispatch_group_t *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001620F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100162124()
{
  uint64_t v0;

  return sub_100160A18(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100162130(uint64_t a1)
{
  uint64_t v1;

  return sub_100160850(a1, v1);
}

uint64_t sub_100162138(uint64_t a1)
{
  uint64_t v1;

  return sub_10037D150(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100162144()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100162170(uint64_t a1)
{
  uint64_t v1;

  sub_1001604AC(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100162178()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001621A4()
{
  uint64_t v0;

  return sub_1001605F8(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

void sub_1001621DC(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  objc_class *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  objc_super v50;
  char v51[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v9 = &v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering];
  v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = 0;
  v10 = v7[1];
  *(_OWORD *)v7 = xmmword_1004DBBE0;
  v11 = v1;
  swift_bridgeObjectRelease(v10);
  v12 = &v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v47 = a1;
  v13 = a1;
  LOBYTE(v7) = objc_msgSend(v13, "isGathering");
  swift_beginAccess(v9, v51, 1, 0);
  *v9 = (_BYTE)v7;

  v14 = (objc_class *)type metadata accessor for DOCNodeCollection();
  v50.receiver = v11;
  v50.super_class = v14;
  v15 = objc_msgSendSuper2(&v50, "init");
  v16 = Logger.Enumeration.unsafeMutableAddressor(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v16, v3);
  v17 = v13;
  v18 = v15;
  v19 = v17;
  v20 = v18;
  v21 = v19;
  v22 = v20;
  v23 = (char *)v21;
  v24 = (char *)v22;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v25, (os_log_type_t)v26))
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_5;
  }
  v42 = v26;
  v44 = v6;
  v45 = v4;
  v46 = v3;
  v27 = swift_slowAlloc(52, -1);
  v28 = (_QWORD *)swift_slowAlloc(16, -1);
  v43 = swift_slowAlloc(96, -1);
  v49 = v43;
  *(_DWORD *)v27 = 136447234;
  v29 = (uint64_t *)&v24[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
  v30 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
  if (v30)
  {
    v31 = *v29;
    swift_bridgeObjectRetain(v29[1]);
    v48 = sub_1000544FC(v31, v30, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);

    swift_bridgeObjectRelease(v30);
    *(_WORD *)(v27 + 12) = 2082;
    v48 = sub_1000544FC(0xD00000000000001BLL, 0x80000001005126A0, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    *(_WORD *)(v27 + 22) = 2112;
    v48 = (uint64_t)v24;
    v32 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    *v28 = v24;

    *(_WORD *)(v27 + 32) = 2080;
    v33 = objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode], "displayName");
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    v48 = sub_1000544FC(v34, v36, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);

    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v27 + 42) = 2112;
    v48 = (uint64_t)v23;
    v37 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    v28[1] = v47;

    _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v42, "%{public}s %{public}s Init DOCNodeCollection (%@ with FINode: %s and FileSystemCollection %@", (uint8_t *)v27, 0x34u);
    v38 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v28, 2, v38);
    swift_slowDealloc(v28, -1, -1);
    v39 = v43;
    swift_arrayDestroy(v43, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
LABEL_5:
    v40 = &v23[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate];
    *((_QWORD *)v40 + 1) = &off_1005CB370;
    swift_unknownObjectWeakAssign(v40, v24);

    return;
  }

  __break(1u);
}

void sub_1001626AC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t aBlock[5];
  _QWORD *v33;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.Enumeration.unsafeMutableAddressor(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v30 = (_QWORD *)v1;
    v10 = swift_slowAlloc(32, -1);
    v28 = (_QWORD *)swift_slowAlloc(8, -1);
    v29 = swift_slowAlloc(64, -1);
    aBlock[0] = v29;
    *(_DWORD *)v10 = 136446722;
    v11 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8);
    if (!v11)
      goto LABEL_13;
    v12 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix);
    swift_bridgeObjectRetain(*(_QWORD *)((char *)v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8));
    v31 = sub_1000544FC(v12, v11, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 2082;
    v31 = sub_1000544FC(0x6573624F706F7473, 0xEF2928676E697672, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    *(_WORD *)(v10 + 22) = 2112;
    v31 = (uint64_t)v7;
    v13 = v7;
    v14 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    v15 = v28;
    *v28 = v13;

    v7 = v13;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v10, 0x20u);
    v16 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v15, 1, v16);
    swift_slowDealloc(v15, -1, -1);
    v17 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, _QWORD *))(v2 + 8))(v5, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  v18 = *(void **)((char *)v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*((_BYTE *)v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    v27 = v18;
    objc_msgSend(v27, "doc_stopObserving");

    goto LABEL_11;
  }
  v30 = v7;
  v19 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
  v20 = qword_100640FF8;
  v21 = v18;
  if (v20 != -1)
    swift_once(&qword_100640FF8, sub_10009CB2C);
  v22 = qword_100672C28;
  v23 = *(NSObject **)(qword_100672C28 + 24);
  v24 = swift_allocObject(&unk_1005CB588, 32, 7);
  *(_QWORD *)(v24 + 16) = v21;
  *(_QWORD *)(v24 + 24) = v22;
  v7 = (_QWORD *)swift_allocObject(&unk_1005CB5B0, 32, 7);
  v7[2] = sub_100165100;
  v7[3] = v24;
  aBlock[4] = (uint64_t)sub_10010DB64;
  v33 = v7;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10006655C;
  aBlock[3] = (uint64_t)&unk_1005CB5C8;
  v25 = _Block_copy(aBlock);
  v26 = v33;
  swift_retain();
  sub_1000B0EFC(v18, v19, 1);
  swift_retain();
  swift_retain();
  swift_release(v26);
  dispatch_sync(v23, v25);
  _Block_release(v25);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation(v7, "", 103, 47, 28, 1);
  swift_release(v22);
  swift_release(v24);
  swift_release(v7);
  if ((v23 & 1) == 0)
  {
    sub_10032ED10();
    sub_100008A60(v18, v19, 1);
LABEL_11:
    sub_100162FAC();
    return;
  }
  __break(1u);
LABEL_13:

  __break(1u);
}

void sub_100162B10()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.Enumeration.unsafeMutableAddressor(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v24 = v1;
    v10 = swift_slowAlloc(32, -1);
    v22 = (_QWORD *)swift_slowAlloc(8, -1);
    v23 = swift_slowAlloc(64, -1);
    v26 = v23;
    *(_DWORD *)v10 = 136446722;
    v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v11)
    {

      __break(1u);
      return;
    }
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v25 = sub_1000544FC(v12, v11, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 2082;
    v25 = sub_1000544FC(0xD000000000000014, 0x8000000100512830, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    *(_WORD *)(v10 + 22) = 2112;
    v25 = (uint64_t)v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    v14 = v22;
    *v22 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v10, 0x20u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v15);
    swift_slowDealloc(v14, -1, -1);
    v16 = v23;
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  v17 = *(void **)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if ((v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
  {
    v18 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
    v19 = v17;
    sub_10032D5C8();
    sub_100008A60(v17, v18, 1);
  }
  else
  {
    v20 = v17;
    objc_msgSend(v20, "doc_restartObservation");

  }
}

unint64_t sub_100162E10()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  unint64_t v4;
  char *v5;
  unsigned __int8 v7;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    v3 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
    sub_1000B0EFC(v1, v2, 1);
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_1003369B4((_QWORD *(*)(uint64_t *__return_ptr))sub_10006A608, &v7);
    os_unfair_lock_unlock(v3 + 4);
    v4 = v7;
    swift_release(v3);
    sub_100008A60(v1, v2, 1);
  }
  else
  {
    v5 = v1;
    v4 = (unint64_t)objc_msgSend(v5, "doc_isObserving");

  }
  return v4;
}

uint64_t DOCNodeCollection.isGathering.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering, v3, 0, 0);
  return *v1;
}

uint64_t DOCNodeCollection.isGathering.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

void sub_100162FAC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.Enumeration.unsafeMutableAddressor(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (!os_log_type_enabled(v8, v9))
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    goto LABEL_5;
  }
  v21 = v1;
  v10 = swift_slowAlloc(32, -1);
  v19 = (_QWORD *)swift_slowAlloc(8, -1);
  v20 = swift_slowAlloc(64, -1);
  v23 = v20;
  *(_DWORD *)v10 = 136446722;
  v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
  if (v11)
  {
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v22 = sub_1000544FC(v12, v11, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 2082;
    v22 = sub_1000544FC(0xD00000000000001CLL, 0x80000001005127F0, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    *(_WORD *)(v10 + 22) = 2112;
    v22 = (uint64_t)v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    v14 = v19;
    *v19 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v10, 0x20u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v15);
    swift_slowDealloc(v14, -1, -1);
    v16 = v20;
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v21);
LABEL_5:
    v17 = *(void **)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation];
    *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = 0;

    return;
  }

  __break(1u);
}

void DOCNodeCollection.reorderItems(with:)(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  id v8;
  id v9;
  Class isa;

  v4 = a2;
  v5 = *(void **)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    if (a2)
    {
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(a3);
    }
    else
    {
      v4 = _swiftEmptyArrayStorage;
      a3 = &_swiftEmptySetSingleton;
    }
    v9 = v5;
    sub_10032F49C((uint64_t)v4, (uint64_t)a3);
    swift_bridgeObjectRelease(v4);
    sub_100008A60(v5, v6, 1);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v8 = v5;
    if (v4)
      swift_bridgeObjectRetain(v4);
    else
      v4 = _swiftEmptyArrayStorage;
    sub_10004F2F0(0, &qword_100645410, NSSortDescriptor_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "reorderItemsWithSortDescriptors:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  }
}

void DOCNodeCollection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCNodeCollection", 23, "init()", 6, 0);
  __break(1u);
}

id DOCNodeCollection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNodeCollection();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void DOCNodeCollection.collection(_:didEncounterError:)(uint64_t a1, uint64_t a2)
{
  sub_10016400C(a2);
}

void DOCNodeCollection.collection(_:didUpdateObservedItem:)(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  char **v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  char *v37;
  uint64_t Strong;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  id v51;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Logger.Enumeration.unsafeMutableAddressor(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
  v11 = v2;
  v12 = a2;
  v13 = (char *)v11;
  v14 = v12;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    HIDWORD(v52) = v16;
    v53 = v15;
    v55 = v6;
    v56 = v5;
    v57 = a1;
    v17 = swift_slowAlloc(42, -1);
    v18 = (char **)swift_slowAlloc(8, -1);
    v54 = swift_slowAlloc(96, -1);
    v59 = v54;
    *(_DWORD *)v17 = 136446978;
    v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v19)
    {

      __break(1u);
      return;
    }
    v20 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v58 = sub_1000544FC(v20, v19, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v17 + 12) = 2082;
    v58 = sub_1000544FC(0xD000000000000024, 0x8000000100512600, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    *(_WORD *)(v17 + 22) = 2112;
    v58 = (uint64_t)v13;
    v21 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    *v18 = v13;

    *(_WORD *)(v17 + 32) = 2080;
    v22 = objc_msgSend(v14, "displayName");
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    v58 = sub_1000544FC(v23, v25, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);

    swift_bridgeObjectRelease(v25);
    v26 = v53;
    _os_log_impl((void *)&_mh_execute_header, v53, BYTE4(v52), "%{public}s %{public}s DOCNodeCollection (%@) observedItem: %s", (uint8_t *)v17, 0x2Au);
    v27 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v18, 1, v27);
    swift_slowDealloc(v18, -1, -1);
    v28 = v54;
    swift_arrayDestroy(v54, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v56);
    a1 = v57;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v29 = &v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  v30 = v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16];
  if ((v30 & 1) != 0)
  {
    v31._countAndFlagsBits = 0xD000000000000054;
    v32._object = (void *)0x80000001005125E0;
    v31._object = (void *)0x8000000100512580;
    v32._countAndFlagsBits = 0xD000000000000010;
    DOCAssertUnexpectedError(errorTitle:message:)(v32, v31);
  }
  else
  {
    v33 = *(void **)v29;
    v34 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v29 = a1;
    *((_QWORD *)v29 + 1) = v14;
    v29[16] = 0;
    v35 = v14;
    v36 = a1;
    swift_unknownObjectRetain(v34);
    sub_100008A60(v33, v34, v30);
    v37 = &v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate]);
    if (Strong)
    {
      v39 = Strong;
      v40 = *((_QWORD *)v37 + 1);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(char *, id, uint64_t, uint64_t))(v40 + 24))(v13, v35, ObjectType, v40);
      swift_unknownObjectRelease(v39);
    }
    if (v34)
    {
      v42 = objc_msgSend((id)swift_unknownObjectRetain(v34), "displayName");
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v45 = v44;

      v46 = objc_msgSend(v35, "displayName");
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v49 = v48;

      if (v43 == v47 && v45 == v49)
      {
        swift_unknownObjectRelease_n(v34, 2);
        swift_bridgeObjectRelease_n(v45, 2);
      }
      else
      {
        v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v49, 0);
        swift_bridgeObjectRelease(v45);
        swift_bridgeObjectRelease(v49);
        if ((v50 & 1) == 0)
        {
          v51 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
          if (qword_100640DB8 != -1)
            swift_once(&qword_100640DB8, sub_100163BD4);
          objc_msgSend(v51, "postNotificationName:object:", qword_1006726B8, v35);

        }
        swift_unknownObjectRelease_n(v34, 2);
      }
    }
  }
}

void DOCNodeCollection.collectionDidFinishGathering(_:)()
{
  sub_1000188A4(0xD000000000000020, 0x80000001005128D0);
}

void DOCNodeCollection.collection(_:didUpdate:replaceItemsByFormerID:deleteItemsWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10016438C(a2, a3, a4);
}

NSString sub_100163BD4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1006726B8 = (uint64_t)result;
  return result;
}

uint64_t sub_100163C08(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_100163C3C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a4();
  v8 = v7;
  v9 = sub_1000544FC(v6, v7, a3);
  v10 = *a1 + 8;
  v11 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
  swift_bridgeObjectRelease(v8);
  *a1 = v10;
}

uint64_t sub_100163CAC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C((uint64_t *)&unk_1006454D0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_100163DF8(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_100163E08(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

uint64_t sub_100163EB8(void *a1, void *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  id v20;
  uint64_t v21;

  if ((DOCNode.nodeType.getter(a6) & 1) != 0)
  {
    v18 = objc_allocWithZone((Class)type metadata accessor for DOCFileSystemCollection(0));
    v19 = sub_1003369F0((uint64_t)a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32), v18, a6);
    v20 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
    sub_1001621DC(v19);
    v17 = v21;
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v12 = objc_opt_self(FPItem);
    v13 = objc_msgSend(v11, "collectionForFolderItem:", swift_dynamicCastObjCClassUnconditional(a1, v12, 0, 0, 0));

    v14 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
    swift_unknownObjectRetain(a1);
    v15 = v13;
    sub_10004644C(v15, a1);
    v17 = v16;

  }
  swift_unknownObjectRelease(a1);

  return v17;
}

void sub_10016400C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char **v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  char **v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  char v34[8];
  uint64_t v35;
  uint64_t v36;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.Enumeration.unsafeMutableAddressor(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = v1;
  swift_errorRetain(a1);
  v10 = (char *)v9;
  v11 = swift_errorRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v31 = v4;
    v32 = v3;
    v14 = swift_slowAlloc(42, -1);
    v29 = (char **)swift_slowAlloc(8, -1);
    v30 = swift_slowAlloc(96, -1);
    v36 = v30;
    *(_DWORD *)v14 = 136446978;
    v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v15)
    {
      swift_errorRelease(a1);

      __break(1u);
      return;
    }
    v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v35 = sub_1000544FC(v16, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v14 + 12) = 2082;
    v35 = sub_1000544FC(0xD000000000000020, 0x8000000100512930, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    *(_WORD *)(v14 + 22) = 2112;
    v35 = (uint64_t)v10;
    v17 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    v18 = v29;
    *v29 = v10;

    *(_WORD *)(v14 + 32) = 2080;
    swift_getErrorValue(a1, v34, v33);
    v19 = Error.localizedDescription.getter(v33[1], v33[2]);
    v21 = v20;
    v35 = sub_1000544FC(v19, v20, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    swift_bridgeObjectRelease(v21);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s %{public}s DOCNodeCollection (%@) Error: %s", (uint8_t *)v14, 0x2Au);
    v22 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v18, 1, v22);
    swift_slowDealloc(v18, -1, -1);
    v23 = v30;
    swift_arrayDestroy(v30, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v24 = &v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate]);
  if (Strong)
  {
    v26 = Strong;
    v27 = *((_QWORD *)v24 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 16))(v10, a1, ObjectType, v27);
    swift_unknownObjectRelease(v26);
  }
}

void sub_10016438C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.Enumeration.unsafeMutableAddressor(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  v13 = v3;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  v16 = os_log_type_enabled(v14, v15);
  v49 = a2;
  if (v16)
  {
    v46 = v7;
    v47 = a1;
    v48 = a3;
    v17 = swift_slowAlloc(32, -1);
    v44 = (_QWORD *)swift_slowAlloc(8, -1);
    v45 = swift_slowAlloc(64, -1);
    v51 = v45;
    *(_DWORD *)v17 = 136446722;
    v18 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v18)
    {

      __break(1u);
      return;
    }
    v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v50 = sub_1000544FC(v19, v18, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v17 + 12) = 2082;
    v50 = sub_1000544FC(0xD00000000000003FLL, 0x8000000100512890, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    *(_WORD *)(v17 + 22) = 2112;
    v50 = (uint64_t)v13;
    v20 = v13;
    v21 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    v22 = v44;
    *v44 = v20;

    v13 = v20;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v17, 0x20u);
    v23 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v22, 1, v23);
    swift_slowDealloc(v22, -1, -1);
    v24 = v45;
    swift_arrayDestroy(v45, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v46);
    a1 = v47;
    a3 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v25 = &v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate]);
  if (Strong)
  {
    v27 = Strong;
    v28 = *((_QWORD *)v25 + 1);
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v39 = a1;
      else
        v39 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v40 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v41 = _bridgeCocoaArray<A>(_:)(v39, v40);
      v30 = swift_bridgeObjectRelease(a1);
      a1 = v41;
    }
    else
    {
      v29 = swift_bridgeObjectRetain(a1);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v29);
    }
    sub_100432F34(v49, v30);
    v32 = v31;
    if ((unint64_t)a3 >> 62)
    {
      if (a3 < 0)
        v42 = a3;
      else
        v42 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v43 = _bridgeCocoaArray<A>(_:)(v42, (char *)&type metadata for Swift.AnyObject + 8);
      swift_bridgeObjectRelease(a3);
      a3 = v43;
    }
    else
    {
      v33 = a3 & 0xFFFFFFFFFFFFFF8;
      v34 = swift_bridgeObjectRetain(a3);
      v35 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v34);
      if (!swift_dynamicCastMetatype(v35, (char *)&type metadata for Swift.AnyObject + 8))
      {
        v37 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v37)
        {
          v38 = (_QWORD *)(v33 + 32);
          while (*v38)
          {
            ++v38;
            if (!--v37)
              goto LABEL_10;
          }
          a3 = v33 | 1;
        }
      }
    }
LABEL_10:
    ObjectType = swift_getObjectType(v27);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 48))(v13, a1, v32, a3, ObjectType, v28);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(a3);
    swift_unknownObjectRelease(v27);
  }
}

void destroy for DOCNodeCollection.CollectionType(uint64_t a1)
{
  sub_100008A60(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Files17DOCNodeCollectionC14CollectionTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000B0EFC(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DOCNodeCollection.CollectionType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000B0EFC(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_100008A60(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for DOCNodeCollection.CollectionType(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DOCNodeCollection.CollectionType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_100008A60(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCNodeCollection.CollectionType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCNodeCollection.CollectionType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_100164950(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100164958(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeCollection.CollectionType()
{
  return &type metadata for DOCNodeCollection.CollectionType;
}

uint64_t sub_100164974(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char **v18;
  uint64_t v19;
  os_log_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  char **v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.Enumeration.unsafeMutableAddressor(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
  v9 = v1;
  swift_errorRetain(a1);
  v10 = (char *)v9;
  v11 = swift_errorRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    HIDWORD(v30) = v13;
    v33 = v12;
    v34 = v4;
    v35 = v3;
    v14 = swift_slowAlloc(42, -1);
    v31 = (char **)swift_slowAlloc(16, -1);
    v32 = swift_slowAlloc(64, -1);
    v37 = v32;
    *(_DWORD *)v14 = 136446978;
    v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v15)
    {
      swift_errorRelease(a1);

      result = swift_errorRelease(a1);
      __break(1u);
      return result;
    }
    v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v36 = sub_1000544FC(v16, v15, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);

    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v14 + 12) = 2082;
    v36 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100512730, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    *(_WORD *)(v14 + 22) = 2112;
    v36 = (uint64_t)v10;
    v17 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    v18 = v31;
    *v31 = v10;

    *(_WORD *)(v14 + 32) = 2112;
    swift_errorRetain(a1);
    v19 = _swift_stdlib_bridgeErrorToNSError(a1);
    v36 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    v18[1] = (char *)v19;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    v20 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, BYTE4(v30), "%{public}s %{public}s DOCNodeCollection (%@) Error: %@", (uint8_t *)v14, 0x2Au);
    v21 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v18, 2, v21);
    swift_slowDealloc(v18, -1, -1);
    v22 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v35);
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  v24 = &v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  result = swift_unknownObjectWeakLoadStrong(&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate], v23);
  if (result)
  {
    v27 = result;
    v28 = *((_QWORD *)v24 + 1);
    ObjectType = swift_getObjectType(result, v26);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 16))(v10, a1, ObjectType, v28);
    return swift_unknownObjectRelease(v27);
  }
  return result;
}

void sub_100164D0C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  char **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.Enumeration.unsafeMutableAddressor(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v25 = v1;
    v10 = swift_slowAlloc(32, -1);
    v23 = (char **)swift_slowAlloc(8, -1);
    v24 = swift_slowAlloc(64, -1);
    v27 = v24;
    *(_DWORD *)v10 = 136446722;
    v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v11)
    {

      __break(1u);
      return;
    }
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v26 = sub_1000544FC(v12, v11, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 2082;
    v26 = sub_1000544FC(0xD000000000000029, 0x80000001005127C0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    *(_WORD *)(v10 + 22) = 2112;
    v26 = (uint64_t)v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    v14 = v23;
    *v23 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v10, 0x20u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v15);
    swift_slowDealloc(v14, -1, -1);
    v16 = v24;
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v17 = &v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate]);
  if (Strong)
  {
    v19 = Strong;
    v20 = *((_QWORD *)v17 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 40))(v7, ObjectType, v20);
    swift_unknownObjectRelease(v19);
  }
}

unint64_t sub_100164FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006454C0;
  if (!qword_1006454C0)
  {
    v1 = sub_10004F2F0(255, (unint64_t *)&unk_1006428C0, FPItemID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1006454C0);
  }
  return result;
}

id sub_10016504C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isGathering");
  *a2 = (_BYTE)result;
  return result;
}

id sub_10016507C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setIsGathering:", *a1);
}

uint64_t sub_100165090()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001650BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001650EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100165100()
{
  uint64_t v0;

  return sub_10032DBEC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100165108()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100165118@<X0>(_QWORD *a1@<X8>)
{
  return sub_100003990(a1);
}

uint64_t DOCSidebarViewController.collectionView(_:shouldSpringLoadItemAt:with:)(uint64_t a1, uint64_t a2)
{
  return sub_10016C8D8(a2);
}

uint64_t sub_100165148(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  _QWORD *v8;
  char v9;
  uint64_t v11;

  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v7 = a1;
    static UTType.item.getter(v7);
    v8 = sub_1003F8940(v1, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = sub_1000DFC34((uint64_t)v7, (uint64_t)v8);

    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

double DOCSidebarViewController.collectionView(_:targetIndexPathForMoveFromItemAt:toProposedIndexPath:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  unsigned __int8 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  Swift::String v30;
  void *object;
  Swift::String v32;
  Swift::String v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  double result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v50 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v49 = (char *)&v49 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v49 - v19;
  v21 = objc_msgSend(a1, "_hasActiveDrop", v18);
  v51 = v4;
  if ((v21 & 1) != 0)
  {
    sub_100165A18(a3, a4);
    v22 = (void *)0xE400000000000000;
    v23 = 1886351972;
  }
  else
  {
    sub_1001656F0(a2, a4);
    v22 = (void *)0xE700000000000000;
    v23 = 0x726564726F6572;
  }
  v24 = a2;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v25(v20, v24, v13);
  v25(v16, a3, v13);
  v52 = 0;
  v53 = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  v26._countAndFlagsBits = 0x6F46746567726174;
  v26._object = (void *)0xEF5B2065766F4D72;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v23;
  v27._object = v22;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v22);
  v28._countAndFlagsBits = 0x203A6D6F7266205DLL;
  v28._object = (void *)0xE800000000000000;
  String.append(_:)(v28);
  v29 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v29);
  object = v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(object);
  v32._countAndFlagsBits = 0x203A6F74202CLL;
  v32._object = (void *)0xE600000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v29);
  v34 = v33._object;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v34);
  v35._countAndFlagsBits = 0x75746572202D2D20;
  v35._object = (void *)0xEE0020676E696E72;
  String.append(_:)(v35);
  v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v29);
  v37 = v36._object;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v37);
  v39 = v52;
  v38 = (void *)v53;
  if (qword_100640D00 != -1)
    swift_once(&qword_100640D00, sub_1000E9918);
  v40 = qword_1006431B0;
  swift_retain();
  sub_1000E9960(0xD000000000000015, 0x8000000100512B40, v39, v38);
  swift_bridgeObjectRelease(v38);
  v41 = swift_release(v40);
  v42 = *(void (**)(char *, uint64_t, __n128))(v14 + 8);
  v42(v16, v13, v41);
  ((void (*)(char *, uint64_t))v42)(v20, v13);
  v44 = *(_QWORD *)(v51 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (v44)
  {
    v45 = *(_QWORD *)(v44 + 32);
    v46 = (uint64_t)v49;
    v25(v49, a4, v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v46, 0, 1, v13);
    v47 = v50;
    sub_10016CC70(v46, v50);
    v48 = v45 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedTargetIndexPath;
    swift_beginAccess(v45 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedTargetIndexPath, &v52, 33, 0);
    swift_retain();
    sub_1000B33AC(v47, v48);
    swift_endAccess(&v52);
    *(_QWORD *)&result = swift_release(v45).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001656F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  __n128 v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = IndexPath.row.getter(v8);
  if (v9)
  {
    v9 = IndexPath.row.getter(v9);
    v10 = v9;
  }
  else
  {
    v10 = 1;
  }
  v11 = IndexPath.section.getter(v9);
  IndexPath.init(row:section:)(v10, v11);
  v12 = sub_1003E1420(a1, 0);
  if (!v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_10:
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
    v22 = a2;
    return v21(v22, a1, v4, v20);
  }
  v13 = v12;
  v14 = sub_1003E1420((uint64_t)v7, 0);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v20 = swift_unknownObjectRelease(v13);
    goto LABEL_10;
  }
  v16 = v14;
  v24 = v15;
  v25 = a2;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v17 = *(_QWORD *)(v13 + 24);
  v18 = *(id *)(v16 + 24);
  v19 = static NSObject.== infix(_:_:)(v17, v18);

  if ((v19 & 1) != 0)
    __asm { BR              X10 }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_unknownObjectRelease(v13);
  v20 = swift_unknownObjectRelease(v16);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
  v22 = v25;
  return v21(v22, a1, v4, v20);
}

uint64_t sub_100165A18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, double);
  uint64_t v17;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  v10.n128_f64[0] = __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (v13 && (v14 = *(_QWORD *)(v13 + 24)) != 0)
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
    v15(v12, v14 + OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath, v5, v10.n128_f64[0]);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v12, 1, 1, v5, v10);
    v15 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  }
  ((void (*)(char *, uint64_t, uint64_t))v15)(v8, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
    return sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v12, v5);
  }
}

void sub_100165CEC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  char *v28;
  char v29;
  uint64_t v30;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, double);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v55 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v54 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v13 = __chkstk_darwin(v11);
  v14 = (char *)&v38 - v12;
  v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (v15 && (v16 = *(char **)(v15 + 24)) != 0)
  {
    v40 = *(void (**)(char *, char *, uint64_t, double))(v9 + 16);
    v40((char *)&v38 - v12, &v16[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v8, v13);
    v53 = v16;
    v17 = IndexPath.row.getter(v53);
    v51 = v8;
    v52 = v3;
    v48 = v9;
    v49 = v14;
    v42 = v6;
    v43 = a1;
    v41 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v17 < 1)
    {
      v39 = NSNotFound.getter();
    }
    else
    {
      v18 = IndexPath.row.getter(v17);
      if (__OFSUB__(v18, 1))
      {
        __break(1u);
        JUMPOUT(0x100166D2CLL);
      }
      v39 = v18 - 1;
    }
    v50 = objc_msgSend(a2, "session");
    v20 = (id *)DOCLog.UI.unsafeMutableAddressor(v50);
    v21 = *v20;
    v47 = static os_log_type_t.debug.getter(v21);
    v22 = sub_10006922C((uint64_t *)&unk_100644560);
    v23 = swift_allocObject(v22, 112, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    v24 = sub_10006A638();
    *(_QWORD *)(v23 + 64) = v24;
    v45 = 0x8000000100512EF0;
    v46 = 0xD000000000000015;
    *(_QWORD *)(v23 + 32) = 0xD000000000000015;
    *(_QWORD *)(v23 + 40) = 0x8000000100512EF0;
    v25 = objc_opt_self(NSObject);
    v26 = swift_dynamicCastObjCClassUnconditional(a2, v25, 0, 0, 0);
    *(_QWORD *)(v23 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    *(_QWORD *)(v23 + 104) = sub_100083450((unint64_t *)&unk_100642720, (unint64_t *)&qword_100642430, NSObject_ptr);
    *(_QWORD *)(v23 + 72) = v26;
    v44 = a2;
    swift_unknownObjectRetain(a2);
    os_log(_:dso:log:type:_:)("%@: %@", 6, 2, &_mh_execute_header, v21, v47, v23);

    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v23).n128_u64[0];
    v28 = v53;
    v29 = objc_msgSend(v53, "intent", v27) == (id)1;
    v30 = (uint64_t)v49;
    if (sub_1003E1420((uint64_t)v49, v29))
      __asm { BR              X10 }
    v32 = *v20;
    v33 = static os_log_type_t.debug.getter(v32);
    v34 = v28;
    v35 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v35 + 56) = &type metadata for String;
    *(_QWORD *)(v35 + 64) = v24;
    v36 = v45;
    *(_QWORD *)(v35 + 32) = v46;
    *(_QWORD *)(v35 + 40) = v36;
    os_log(_:dso:log:type:_:)("%@: unable to determine sidebar section", 39, 2, &_mh_execute_header, v32, v33, v35);

    swift_unknownObjectRelease(v50);
    v37 = swift_bridgeObjectRelease(v35);
    (*(void (**)(uint64_t, uint64_t, __n128))(v48 + 8))(v30, v51, v37);
  }
  else
  {
    if (qword_100640D00 != -1)
      swift_once(&qword_100640D00, sub_1000E9918);
    v19 = qword_1006431B0;
    swift_retain();
    sub_1000E9F78(0xD000000000000020, (void *)0x8000000100512EC0);
    swift_release(v19);
  }
}

void DOCSidebarViewController.collectionView(_:canHandle:)(uint64_t a1, void *a2)
{
  sub_10016D5B8(a2);
}

void DOCSidebarViewController.collectionView(_:dropSessionDidEnter:)(uint64_t a1, uint64_t a2)
{
  sub_10016D724(a2);
}

void sub_100166E7C()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  NSString v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext];
  if (v1)
  {
    v2 = objc_msgSend(v0, "view", swift_retain().n128_f64[0]);
    if (!v2)
    {
      __break(1u);
      goto LABEL_14;
    }
    v3 = v2;
    v4 = objc_msgSend(v2, "window");

    if (v4)
    {

      v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v6 = String._bridgeToObjectiveC()();
      v7 = objc_msgSend(v5, "BOOLForKey:", v6);

      if (v7)
      {
        v8 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView;
        v9 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView];
        if (!v9)
        {
          v10 = objc_msgSend(objc_allocWithZone((Class)_s22DebugDropIndicatorViewCMa()), "init");
          v11 = *(void **)&v0[v8];
          *(_QWORD *)&v0[v8] = v10;

          v9 = *(void **)&v0[v8];
          if (!v9)
            goto LABEL_15;
        }
        v12 = v9;
        v13 = objc_msgSend(v0, "view");
        if (v13)
        {
          v14 = v13;
          v15 = *(void **)(v1 + 16);
          swift_unknownObjectRetain(v15);
          sub_1000E8E94(v14, v15, v1);
          swift_release(v1);

          swift_unknownObjectRelease(v15);
          return;
        }
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        return;
      }
    }
    swift_release(v1);
  }
  v16 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView];
  if (v16)
  {
    v17 = v16;
    sub_1000E92D4();

  }
}

id DOCSidebarViewController.collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:)(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_10016D850(a2, a3);
}

uint64_t sub_1001670EC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  int v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  void *object;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  Swift::String v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[9];
  int v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v3 = v2;
  v6 = type metadata accessor for DOCDragPasteboardType(0);
  v45[4] = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v45[8] = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UTType(0);
  v45[6] = *(_QWORD *)(v8 - 8);
  v45[7] = v8;
  __chkstk_darwin(v8);
  v45[5] = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v50 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v45 - v17;
  v19 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  ObjectType = swift_getObjectType(a1);
  v52 = v19;
  v53 = a1;
  v47 = ObjectType;
  v21 = sub_1003F90BC(a1);
  v55 = swift_allocBox(v13);
  v56 = v22;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v48(v22, a2, v13);
  v23 = sub_1003E1C70(a2);
  if (v23 && (v21 & 1) != 0)
  {
    v24 = IndexPath.section.getter(v23);
    sub_10016A494(v24, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v56, v18, v13);
    }
  }
  v46 = v21;
  v49 = v14;
  v54 = v3;
  v57 = 0;
  v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v25._object = (void *)0x8000000100512C60;
  v25._countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v25);
  v26 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v26);
  object = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(object);
  v30 = v57;
  v29 = (void *)v58;
  if (qword_100640D00 != -1)
    swift_once(&qword_100640D00, sub_1000E9918);
  v31 = qword_1006431B0;
  swift_retain();
  sub_1000E9960(0x6567726154646E64, 0xEB00000000322E74, v30, v29);
  swift_bridgeObjectRelease(v29);
  swift_release(v31);
  v57 = 0;
  v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v32._object = (void *)0x8000000100512CA0;
  v32._countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v32);
  v33 = v56;
  v51 = v13;
  v34._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v26);
  v35 = v34._object;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v35);
  v36 = v57;
  v37 = (void *)v58;
  v38 = qword_1006431B0;
  swift_retain();
  sub_1000E9960(0x6567726154646E64, 0xEB00000000332E74, v36, v37);
  swift_bridgeObjectRelease(v37);
  swift_release(v38);
  if (sub_1003E1420(v33, 1))
    __asm { BR              X10 }
  v40 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
  v41 = static os_log_type_t.debug.getter(v40);
  v42 = sub_10006922C((uint64_t *)&unk_100644560);
  v43 = swift_allocObject(v42, 72, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v43 + 56) = &type metadata for String;
  *(_QWORD *)(v43 + 64) = sub_10006A638();
  *(_QWORD *)(v43 + 32) = 0xD00000000000003CLL;
  *(_QWORD *)(v43 + 40) = 0x8000000100512D10;
  os_log(_:dso:log:type:_:)("%@: unable to determine sidebar section", 39, 2, &_mh_execute_header, v40, v41, v43);
  swift_release(v55);

  swift_bridgeObjectRelease(v43);
  return 0;
}

uint64_t DOCSidebarViewController._collectionView(_:dataOwnerFor:withDestinationIndexPath:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v14;

  v5 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = 0;
  if (v10(a3, 1, v8) == 1 || a2 == 0)
    return v11;
  sub_1000271D4(a3, (uint64_t)v7, (uint64_t *)&unk_100642710);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v7, 1, v8);
  if ((_DWORD)result != 1)
  {
    v11 = sub_10016DC64((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100169260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v9 && *(_BYTE *)(v9 + 17) == 2)
  {
    swift_beginAccess(a1 + 88, v14, 0, 0);
    v10 = *(_QWORD **)(a1 + 88);
    swift_bridgeObjectRetain(v10);
  }
  else
  {
    swift_beginAccess(a1 + 88, v14, 0, 0);
    v11 = *(_QWORD *)(a1 + 88);
    swift_unknownObjectRetain(a1);
    v12 = swift_bridgeObjectRetain(v11);
    v10 = sub_10023B9F8(v12);
    swift_bridgeObjectRelease(v11);
    swift_unknownObjectRelease(a1);
  }
  if (*(_BYTE *)(a1 + 72) == 1)
    __asm { BR              X10 }
  swift_bridgeObjectRelease(v10);
  return 0;
}

uint64_t sub_100169500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v3 && *(_BYTE *)(v3 + 17) == 2)
  {
    swift_beginAccess(a1 + 88, v9, 0, 0);
    v4 = *(_QWORD **)(a1 + 88);
    swift_bridgeObjectRetain(v4);
    v5 = v4[2];
    if (!v5)
      goto LABEL_8;
LABEL_6:
    if (v5 <= v4[2])
      __asm { BR              X9 }
    __break(1u);
    JUMPOUT(0x1001697D4);
  }
  swift_beginAccess(a1 + 88, v9, 0, 0);
  v6 = *(_QWORD *)(a1 + 88);
  swift_unknownObjectRetain(a1);
  v7 = swift_bridgeObjectRetain(v6);
  v4 = sub_10023B9F8(v7);
  swift_bridgeObjectRelease(v6);
  swift_unknownObjectRelease(a1);
  v5 = v4[2];
  if (v5)
    goto LABEL_6;
LABEL_8:
  swift_bridgeObjectRelease(v4);
  return 0;
}

void sub_1001697EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = (_QWORD *)(a1 + 16);
  swift_beginAccess(a1 + 16, v6, 1, 0);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *v2 = v5;
    if (!v5)
      sub_100233A38(0x655274696D6D6F63, 0xED0000726564726FLL, 0);
  }
}

void sub_100169874(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void **v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  Class isa;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  double v38;
  id v39;
  double Current;
  uint64_t v41;
  uint64_t v42;
  Class v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[5];
  uint64_t v50;

  v45 = a4;
  v46 = a5;
  v44 = a3;
  v7 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_1006456C8);
  swift_allocObject(v10, 25, 7);
  v11 = sub_10016BCA4(0);
  v12 = sub_10048D698();
  v13 = v12;
  v14 = _swiftEmptyArrayStorage;
  aBlock[0] = _swiftEmptyArrayStorage;
  v15 = v12[2];
  if (v15)
  {
    swift_bridgeObjectRetain(v12);
    v16 = v13 + 9;
    while (1)
    {
      v18 = (void *)*((_QWORD *)v16 - 3);
      if (*v16 == 3)
        break;
      if (!*v16)
      {
        v17 = sub_1000E4F7C(*((id *)v16 - 3), *((_QWORD *)v16 - 2), *((_QWORD *)v16 - 1), 0);
        goto LABEL_4;
      }
LABEL_7:
      v16 += 48;
      if (!--v15)
      {
        swift_bridgeObjectRelease(v13);
        v14 = (_QWORD *)aBlock[0];
        goto LABEL_12;
      }
    }
    v17 = v18;
    v18 = v17;
LABEL_4:
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v20 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);
    goto LABEL_7;
  }
LABEL_12:
  swift_bridgeObjectRelease(v13);
  sub_10023380C(0xD000000000000029, 0x8000000100512F10);
  v22 = *(_QWORD *)(a1 + 16);
  v23 = _swiftEmptyArrayStorage;
  if (v22)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v22);
    v24 = (void **)(a1 + 40);
    do
    {
      v25 = *v24;
      v24 += 2;
      v26 = v25;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v27 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
      v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v26);
      specialized ContiguousArray._endMutation()(v28);
      --v22;
    }
    while (v22);
    v23 = (_QWORD *)aBlock[0];
  }
  v29 = v44;
  sub_10048D840((uint64_t)v23, v44);
  sub_10023380C(0xD00000000000001CLL, 0x8000000100512F40);
  swift_getObjectType(v45);
  v30 = swift_allocObject(&unk_1005CB760, 24, 7);
  *(_QWORD *)(v30 + 16) = a2;
  v31 = a2;
  sub_100169D14(a1, v29, (uint64_t)v14, (void (*)(__n128))sub_10016E300, v30);
  swift_release(v30);
  swift_bridgeObjectRelease(v14);
  v32 = objc_msgSend((id)objc_opt_self(DOCFavoritesManager), "sharedManager");
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  v34 = swift_allocObject(&unk_1005CB788, 32, 7);
  *(_QWORD *)(v34 + 16) = v11;
  *(_QWORD *)(v34 + 24) = v31;
  aBlock[4] = sub_10016E340;
  v50 = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10016C02C;
  aBlock[3] = &unk_1005CB7A0;
  v35 = _Block_copy(aBlock);
  v36 = v50;
  v37 = v31;
  swift_retain();
  *(_QWORD *)&v38 = swift_release(v36).n128_u64[0];
  objc_msgSend(v32, "insertFavorites:atIndex:completion:", isa, v46, v35, v38);
  _Block_release(v35);

  v39 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  Current = CFAbsoluteTimeGetCurrent();
  OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_10016E348, v11, &type metadata for Bool);
  v42 = v47;
  v41 = v48;
  while ((aBlock[0] & 1) == 0 && CFAbsoluteTimeGetCurrent() - Current <= 0.25)
  {
    Date.init(timeIntervalSinceNow:)(0.05);
    v43 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v41);
    objc_msgSend(v39, "runUntilDate:", v43);

    OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_10016E494, v11, &type metadata for Bool);
  }
  swift_release(v11);

}

void sub_100169D14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__n128), uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  __int128 v20;
  id v21;
  id v22;
  __n128 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  __n128 v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(__n128);
  __int128 v46;
  __int128 aBlock;
  uint64_t (*v48)(uint64_t, uint64_t);
  void *v49;
  uint64_t (*v50)();
  uint64_t v51;
  void *v52;

  v6 = v5;
  v45 = a4;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100640DC0 != -1)
    swift_once(&qword_100640DC0, sub_10016C0C4);
  v43 = v11;
  v44 = a5;
  if ((byte_100645540 & 1) != 0)
    goto LABEL_4;
  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v31 = objc_msgSend(v30, "bundleIdentifier");

  if (!v31)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
    v37 = v41;
    goto LABEL_20;
  }
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
  v37 = v36;
  if (!v34)
  {
LABEL_20:
    v40 = swift_bridgeObjectRelease(v37);
LABEL_21:
    v45(v40);
    return;
  }
  if (v32 == v35 && v34 == v36)
  {
    swift_bridgeObjectRelease_n(v34, 2);
    v11 = v43;
  }
  else
  {
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v35, v36, 0);
    swift_bridgeObjectRelease(v34);
    v40 = swift_bridgeObjectRelease(v37);
    v11 = v43;
    if ((v39 & 1) == 0)
      goto LABEL_21;
  }
LABEL_4:
  v52 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  swift_bridgeObjectRetain(a3);
  v15 = swift_bridgeObjectRetain(a1);
  sub_10016C150(v15, a3);
  v17 = v16;
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a3);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = (__int128 *)(v17 + 32);
    do
    {
      v20 = *v19++;
      v46 = v20;
      aBlock = v20;
      v21 = (id)v20;
      v22 = *((id *)&v46 + 1);
      sub_10016BEB0((uint64_t *)&aBlock, (uint64_t *)&v52, v6, (uint64_t)v14);

      --v18;
    }
    while (v18);
  }
  v23 = swift_bridgeObjectRelease(v17);
  v24 = v52;
  if (v52)
  {
    v25 = swift_allocObject(&unk_1005CB850, 32, 7);
    v26 = v44;
    *(_QWORD *)(v25 + 16) = v45;
    *(_QWORD *)(v25 + 24) = v26;
    v50 = sub_100066584;
    v51 = v25;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v48 = sub_10016C02C;
    v49 = &unk_1005CB868;
    v27 = _Block_copy(&aBlock);
    v28 = v51;
    swift_unknownObjectRetain(v24);
    swift_retain();
    objc_msgSend(v24, "addCompletion:", v27, swift_release(v28).n128_f64[0]);
    _Block_release(v27);
    v29 = swift_unknownObjectRelease(v24);
  }
  else
  {
    v45(v23);
  }
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v43, v29);
  swift_unknownObjectRelease(v52);
}

void sub_10016A050(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v3 = *(NSObject **)(a2 + 16);
  v4 = (_QWORD *)swift_allocObject(&unk_1005CB7D8, 40, 7);
  v4[2] = sub_10016A1B0;
  v4[3] = 0;
  v4[4] = a2;
  v5 = swift_allocObject(&unk_1005CB800, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_10016E3B4;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_10006657C;
  v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10006655C;
  v8[3] = &unk_1005CB818;
  v6 = _Block_copy(v8);
  v7 = v9;
  swift_retain();
  swift_retain();
  swift_release(v7);
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v5, "", 116, 823, 27, 1);
  swift_release(v4);
  swift_release(v5);
  if ((v3 & 1) != 0)
    __break(1u);
  else
    sub_100233A38(0xD000000000000029, 0x8000000100512F10, 0);
}

_BYTE *sub_10016A1B0(_BYTE *result)
{
  *result = 1;
  return result;
}

double sub_10016A1BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v5 = a3;
  v6 = swift_bridgeObjectRetain(a1);
  v7 = (uint64_t)sub_1003F9CC0(v6, (uint64_t)v5);
  swift_bridgeObjectRelease(a1);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v16 = v7;
    else
      v16 = v7 & 0xFFFFFFFFFFFFFF8;
    if (_CocoaArrayWrapper.endIndex.getter(v16) >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v8, "eligibleActionsForDroppingItems:underItem:", isa, v5);

    type metadata accessor for FPAction(0);
    v12 = v11;
    v13 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
    v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, v12, v13);

    sub_1003FACEC(v7, (uint64_t)v5, v14, a2, 0, 0);
    swift_bridgeObjectRelease(v7);
    v7 = v14;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

_QWORD *sub_10016A338(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int v8;
  id v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE v14[24];

  if (a1 == 2)
  {
    swift_beginAccess(v1 + 88, v14, 0, 0);
    v2 = *(_QWORD **)(v1 + 88);
    swift_bridgeObjectRetain(v2);
  }
  else
  {
    swift_beginAccess(v1 + 88, v14, 0, 0);
    v3 = *(_QWORD *)(v1 + 88);
    swift_retain();
    v4 = swift_bridgeObjectRetain(v3);
    v2 = sub_10023B9F8(v4);
    swift_bridgeObjectRelease(v3);
    swift_release(v1);
  }
  v5 = v2[2];
  if (v5)
  {
    v6 = (id *)(v2 + 4);
    swift_bridgeObjectRetain(v2);
    do
    {
      v8 = *((unsigned __int8 *)v6 + 24);
      if (v8 == 3 || v8 == 0)
      {
        v10 = *v6;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
        specialized Array._endMutation()(v7);
      }
      v6 += 4;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v2);
  }
  swift_bridgeObjectRelease(v2);
  return _swiftEmptyArrayStorage;
}

void sub_10016A494(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  void *v30;
  _BYTE v31[24];
  _BYTE v32[24];
  uint64_t v33;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v13, v31, 0, 0);
  sub_1000271D4(v13, (uint64_t)v32, &qword_100642730);
  if (v33)
  {
    v14 = sub_10006922C((uint64_t *)&unk_1006455F0);
    v15 = swift_dynamicCast(&v30, v32, (char *)&type metadata for Any + 8, v14, 6);
    if ((v15 & 1) != 0)
    {
      v16 = v30;
      goto LABEL_8;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v32, &qword_100642730);
  }
  if (qword_1006411E8 != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v15 = (uint64_t)(id)qword_100657778;
  v16 = (void *)v15;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v15);

  v17 = IndexPath.init(row:section:)(0, a1);
  v18 = IndexPath.section.getter(v17);
  v19 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v9);
  v20 = v19;
  if ((v18 & 0x8000000000000000) != 0 || v18 >= *(_QWORD *)(v19 + 16))
  {
    v29 = swift_bridgeObjectRelease(v19);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v29);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    v21 = v19 + 16 * v18;
    v22 = *(_QWORD *)(v21 + 32);
    v23 = *(_QWORD *)(v21 + 40);
    swift_unknownObjectRetain(v22);
    v24 = swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v24);
    v25 = sub_10016A728(v22, v23, 1);
    if (v25)
    {
      v27 = v25;
      sub_10016A8E0(v25, v26, a2);
      v28 = swift_unknownObjectRelease(v22);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v28);
      swift_unknownObjectRelease(v27);
      return;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_unknownObjectRelease(v22);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
}

uint64_t sub_10016A728(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  _QWORD v25[2];
  _QWORD v26[2];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[0] = a1;
  v26[1] = a2;
  v10 = sub_10006922C((uint64_t *)&unk_1006455E0);
  result = NSDiffableDataSourceSnapshot.indexOfSection(_:)(v26, v10);
  v12 = 0;
  if ((v13 & 1) != 0)
    return v12;
  if (!__OFSUB__(result, 1))
  {
    v14 = IndexPath.init(row:section:)(0, result - 1);
    v15 = IndexPath.section.getter(v14);
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = IndexPath.section.getter(v15);
      v18 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v10);
      v19 = v18;
      if ((v17 & 0x8000000000000000) == 0 && v17 < *(_QWORD *)(v18 + 16))
      {
        v20 = v18 + 16 * v17;
        v12 = *(_QWORD *)(v20 + 32);
        v21 = *(_QWORD *)(v20 + 40);
        swift_unknownObjectRetain(v12);
        v22 = swift_bridgeObjectRelease(v19);
        if ((a3 & 1) != 0
          && (v25[0] = v12, v25[1] = v21, NSDiffableDataSourceSnapshot.numberOfItems(inSection:)(v25, v10) <= 0))
        {
          v23 = sub_10016A728(v12, v21, 1);
          v24 = swift_unknownObjectRelease(v12);
          (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v24);
          return v23;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v22);
        }
        return v12;
      }
      v16 = swift_bridgeObjectRelease(v18);
    }
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10016A8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v19 = a2;
  v6 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v7 = NSDiffableDataSourceSnapshot.indexOfSection(_:)(&v18, v6);
  if ((v8 & 1) != 0)
  {
    v15 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  else
  {
    v9 = v7;
    v10 = *(unsigned __int8 *)(a1 + 73);
    v18 = a1;
    v19 = a2;
    NSDiffableDataSourceSnapshot.indexOfSection(_:)(&v18, v6);
    if ((v11 & 1) != 0)
    {
      v14 = 0;
    }
    else
    {
      v12 = NSDiffableDataSourceSnapshot.numberOfItems(inSection:)(&v18, v6);
      if (v12 > 0)
        v13 = *(unsigned __int8 *)(a1 + 73);
      else
        v13 = 0;
      v14 = v12 - v13;
    }
    result = v14 + v10;
    if (__OFADD__(v14, v10))
    {
      __break(1u);
    }
    else
    {
      IndexPath.init(row:section:)(result, v9);
      v17 = type metadata accessor for IndexPath(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 0, 1, v17);
    }
  }
  return result;
}

uint64_t sub_10016A9E4(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  BOOL v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  char **v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  id v40;
  Class isa;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char v59;
  void *v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char v71[24];

  v70 = a4;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_projectBox(a2);
  v15 = swift_beginAccess(v14, v71, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v14, v10, v15);
  v16 = (void *)sub_1003E1E24((uint64_t)v13, 0);
  v18 = v17;
  v20 = v19;
  v21 = v13;
  v23 = v22;
  v24 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v21, v10);
  if (v23)
    v25 = v23 == 3;
  else
    v25 = 1;
  if (!v25)
  {
    if (v23 == 255)
    {
      v28 = *(id *)DOCLog.UI.unsafeMutableAddressor(v24);
      v29 = static os_log_type_t.debug.getter(v28);
      v30 = sub_10006922C((uint64_t *)&unk_100644560);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v31 + 56) = &type metadata for String;
      *(_QWORD *)(v31 + 64) = sub_10006A638();
      *(_QWORD *)(v31 + 32) = 0xD00000000000001ELL;
      *(_QWORD *)(v31 + 40) = 0x8000000100512D90;
      os_log(_:dso:log:type:_:)("%@: unable to determine sidebar item, no drop to perform", 56, 2, &_mh_execute_header, v28, v29, v31);

      swift_bridgeObjectRelease(v31);
      return 0;
    }
    v49 = v16;
    v50 = v18;
    v51 = v20;
LABEL_23:
    sub_1000B1664(v49, v50, v51, v23);
    return 0;
  }
  v26 = v16;
  v27 = v16;
  if ((a3 & 1) != 0)
  {
    sub_1000B1664(v16, v18, v20, v23);

    return 0;
  }
  v32 = v26;
  v33 = v27;
  v69 = v20;
  v34 = (char **)sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v35 = v70;
  swift_getObjectType(v70);
  v36 = sub_1003F7F94((uint64_t)v35, v34);
  if ((v36 & 1) == 0)
  {
    sub_1003FD1BC(v35);
    v53 = v52;
    if ((unint64_t)v52 >> 62)
    {
      if (v52 >= 0)
        v52 &= 0xFFFFFFFFFFFFFF8uLL;
      v54 = _CocoaArrayWrapper.endIndex.getter(v52);
    }
    else
    {
      v54 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v53);
    if (v54 >= 1)
      goto LABEL_22;
    sub_1003FD1D0(v70);
    v56 = v55;
    if ((unint64_t)v55 >> 62)
    {
      if (v55 >= 0)
        v55 &= 0xFFFFFFFFFFFFFF8uLL;
      v57 = _CocoaArrayWrapper.endIndex.getter(v55);
    }
    else
    {
      v57 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v56);
    if (v57 >= 1)
    {
LABEL_22:

      v49 = v33;
      v50 = v18;
      v51 = v69;
      goto LABEL_23;
    }
    v60 = sub_1003F4328();
    v61 = v23;
    v62 = sub_10028F4DC((uint64_t)v60);
    swift_bridgeObjectRelease(v60);
    v59 = sub_1003F4740();

    sub_1000B1664(v33, v18, v69, v61);
    swift_release(v62);
    goto LABEL_27;
  }
  static UTType.item.getter(v36);
  v37 = (uint64_t)sub_1003F8940(v35, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v38 = v23;
  if ((unint64_t)v37 >> 62)
  {
    if (v37 < 0)
      v63 = v37;
    else
      v63 = v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v37);
    v64 = _CocoaArrayWrapper.endIndex.getter(v63);
    swift_bridgeObjectRelease(v37);
    v39 = v18;
    if (v64)
      goto LABEL_13;
  }
  else
  {
    v39 = v18;
    if (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_13:
      v40 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      isa = Array._bridgeToObjectiveC()().super.isa;
      v42 = objc_msgSend(v40, "eligibleActionsForDroppingItems:underItem:", isa, v32, swift_bridgeObjectRelease(v37).n128_f64[0]);

      type metadata accessor for FPAction(0);
      v44 = v43;
      v45 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
      v46 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v42, v44, v45);

      v47 = FPActionReparent;
      LOBYTE(v42) = sub_100028BE0((uint64_t)v47, v46);

      if ((v42 & 1) != 0)
      {

        swift_bridgeObjectRelease(v46);
        sub_1000B1664(v33, v39, v69, v38);
        return 3;
      }
      v58 = FPActionCopy;
      v59 = sub_100028BE0((uint64_t)v58, v46);
      sub_1000B1664(v33, v39, v69, v38);

      swift_bridgeObjectRelease(v46);
LABEL_27:
      if ((v59 & 1) != 0)
        return 2;
      else
        return 0;
    }
  }
  swift_bridgeObjectRelease(v37);
  v65 = sub_1003F4328();
  v66 = sub_10028F4DC((uint64_t)v65);
  swift_bridgeObjectRelease(v65);
  v67 = sub_1003F4740();

  sub_1000B1664(v33, v39, v69, v38);
  swift_release(v66);
  if ((v67 & 1) != 0)
    return 3;
  else
    return 0;
}

uint64_t sub_10016AF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  dispatch_semaphore_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  double v21;
  id v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v1 = type metadata accessor for DispatchTimeInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for DispatchTime(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v34 - v11;
  v13 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (!v13)
    return 0;
  if ((objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain), "isReadOnly", v10) & 1) != 0)return 1;
  v15 = swift_allocObject(&unk_1005CB6C0, 24, 7);
  *(_QWORD *)(v15 + 16) = 0;
  v35 = (uint64_t *)(v15 + 16);
  v39 = v13;
  v16 = dispatch_semaphore_create(0);
  v36 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v17 = swift_allocObject(&unk_1005CB6E8, 32, 7);
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_10016E200;
  v41 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005CB700;
  v18 = _Block_copy(aBlock);
  v37 = v6;
  v38 = v15;
  v19 = v41;
  swift_retain();
  v20 = v16;
  *(_QWORD *)&v21 = swift_release(v19).n128_u64[0];
  v22 = v36;
  objc_msgSend(v36, "doc_fetchRootItemForProviderDomain:completionHandler:", v39, v18, v21);
  _Block_release(v18);

  static DispatchTime.now()(v23);
  *v4 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchTimeInterval.seconds(_:), v1);
  + infix(_:_:)(v8, v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  v24 = *(void (**)(char *, uint64_t))(v37 + 8);
  v24(v8, v5);
  v25 = OS_dispatch_semaphore.wait(timeout:)(v12) & 1;
  v24(v12, v5);
  v26 = static DispatchTimeoutResult.== infix(_:_:)(v25, 0);
  if ((v26 & 1) != 0
    && (v27 = v35, *(_QWORD *)&v28 = swift_beginAccess(v35, aBlock, 0, 0).n128_u64[0], (v26 = *v27) != 0))
  {
    v14 = objc_msgSend((id)v26, "isWritable", v28);

    swift_release(v38);
  }
  else
  {
    v29 = *(id *)DOCLog.UI.unsafeMutableAddressor(v26);
    v30 = static os_log_type_t.error.getter(v29);
    v31 = sub_10006922C((uint64_t *)&unk_100644560);
    v32 = swift_allocObject(v31, 72, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v32 + 56) = &type metadata for String;
    *(_QWORD *)(v32 + 64) = sub_10006A638();
    strcpy((char *)(v32 + 32), "isRootWritable");
    *(_BYTE *)(v32 + 47) = -18;
    os_log(_:dso:log:type:_:)("%@: Failed to fetch root item", 29, 2, &_mh_execute_header, v29, v30, v32);
    swift_release(v38);

    swift_bridgeObjectRelease(v32);
    v14 = 0;
  }

  return (uint64_t)v14;
}

char *sub_10016B320(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  void *object;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  Class isa;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  char *v43;
  int v44;
  void *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  id v54;
  char *result;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  objc_class *v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  Swift::String v73;
  Swift::String v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  __n128 v79;
  id v80;
  void (*v81)(char *, uint64_t, uint64_t);
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  objc_super v88;
  objc_super v89;
  uint64_t v90;
  unint64_t v91;

  v4 = v3;
  v82 = a1;
  v83 = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v87 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v85 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v84 = (char *)&v80 - v16;
  __chkstk_darwin(v17);
  v86 = (char *)&v80 - v18;
  v90 = 0;
  v91 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v19._object = (void *)0x8000000100512DD0;
  v19._countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v19);
  v20 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v21 = v13;
  v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v20);
  object = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(object);
  v24 = v90;
  v25 = (void *)v91;
  if (qword_100640D00 != -1)
    swift_once(&qword_100640D00, sub_1000E9918);
  v26 = qword_1006431B0;
  swift_retain();
  sub_1000E9960(0x6567726154646E64, 0xEB00000000342E74, v24, v25);
  swift_bridgeObjectRelease(v25);
  swift_release(v26);
  v28 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext];
  if (!v28)
  {
    v49 = Logger.UI.unsafeMutableAddressor(v27);
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v49, v6);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Unexpected error.  No drag and drop context available", v53, 2u);
      swift_slowDealloc(v53, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  v29 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v89.receiver = v4;
  v89.super_class = v29;
  *(_QWORD *)&v30 = swift_retain().n128_u64[0];
  v31 = objc_msgSendSuper2(&v89, "collectionView", v30);
  if (!v31)
  {
    swift_release(v28);
    return 0;
  }
  v32 = v31;
  if (!IndexPath.row.getter(v31))
  {
    swift_release(v28);

    return 0;
  }
  v34 = v86;
  v33 = v87;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v35(v86, a2, v21);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v37 = objc_msgSend(v32, "cellForItemAtIndexPath:", isa);

  v80 = v32;
  v81 = v35;
  if (!v37)
    goto LABEL_34;
  objc_msgSend(v82, "locationInView:", v37, v80);
  v39 = v38;
  objc_msgSend(v37, "frame");
  v41 = v40 * 0.25;
  v42 = v40 - v40 * 0.25;
  v43 = *(char **)(v28 + 24);
  if (!v43)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v12, 1, 1, v21);
    v45 = 0;
    v46 = v84;
LABEL_17:
    v47 = v45;
    IndexPath.init(row:section:)(-1, -1);
    result = (char *)sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
    v48 = v83;
    if (!v43)
      goto LABEL_27;
    goto LABEL_18;
  }
  v35(v12, (uint64_t)&v43[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v12, 0, 1, v21);
  v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v21);
  v45 = v43;
  v46 = v84;
  if (v44 == 1)
    goto LABEL_17;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v84, v12, v21);
  v47 = v43;
  v48 = v83;
LABEL_18:
  result = (char *)objc_msgSend(v47, "intent");
  if (result == (char *)1 && v42 < v39)
  {
    v56 = IndexPath.row.getter(1);
    result = (char *)IndexPath.row.getter(v56);
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      if ((char *)v56 == result - 1)
      {
        v57 = v46;
        v58 = v87;
        (*(void (**)(char *, uint64_t))(v87 + 8))(v34, v21);

        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v34, v57, v21);
        v59 = 1;
        v48 = 3;
LABEL_36:
        v65 = v85;
        goto LABEL_37;
      }
      v60 = IndexPath.row.getter(result);
      result = (char *)IndexPath.row.getter(v60);
      if (!__OFADD__(result, 1))
      {
        v61 = v60 == (_QWORD)(result + 1);
        v33 = v87;
        if (!v61)
          goto LABEL_27;
        (*(void (**)(char *, uint64_t))(v87 + 8))(v34, v21);

        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v34, v46, v21);
LABEL_34:
        v59 = 1;
        v48 = 3;
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_27:
  if (v41 <= v39 && v39 <= v42)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v21);

    v59 = 2;
LABEL_35:
    v58 = v33;
    goto LABEL_36;
  }
  if (v42 >= v39)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v21);

    goto LABEL_34;
  }
  result = (char *)IndexPath.row.getter(result);
  v62 = result + 1;
  if (!__OFADD__(result, 1))
  {
    v63 = IndexPath.section.getter(result);
    v64 = v85;
    IndexPath.init(row:section:)(v62, v63);

    v65 = v64;
    v58 = v87;
    v66 = *(void (**)(char *, uint64_t))(v87 + 8);
    v66(v84, v21);
    v66(v34, v21);
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v34, v65, v21);
    v59 = 1;
    v48 = 3;
LABEL_37:
    v67 = v34;
    v68 = v34;
    v69 = (void (*)(char *, char *, uint64_t))v81;
    v81(v65, (uint64_t)v67, v21);
    v70 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
    v71 = (char *)objc_allocWithZone(v70);
    v69(&v71[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v65, v21);
    v88.receiver = v71;
    v88.super_class = v70;
    v54 = objc_msgSendSuper2(&v88, "initWithDropOperation:intent:", v48, v59);
    v72 = *(void (**)(char *, uint64_t))(v58 + 8);
    v72(v65, v21);
    v90 = 0;
    v91 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v73._object = (void *)0x8000000100512E10;
    v73._countAndFlagsBits = 0xD000000000000033;
    String.append(_:)(v73);
    v74._countAndFlagsBits = sub_10016BACC();
    v75 = v74._object;
    String.append(_:)(v74);
    swift_bridgeObjectRelease(v75);
    v76 = v90;
    v77 = (void *)v91;
    v78 = qword_1006431B0;
    swift_retain();
    sub_1000E9960(0x6567726154646E64, 0xEB00000000352E74, v76, v77);
    swift_bridgeObjectRelease(v77);
    swift_release(v28);

    v79 = swift_release(v78);
    ((void (*)(char *, uint64_t, __n128))v72)(v68, v21, v79);
    return (char *)v54;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10016BACC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  Swift::String v15;

  v1 = v0;
  _StringGuts.grow(_:)(21);
  v2 = type metadata accessor for IndexPath(0);
  v3 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v4 = dispatch thunk of CustomStringConvertible.description.getter(v2, v3);
  swift_bridgeObjectRelease(0xE000000000000000);
  v5._countAndFlagsBits = 0x28746E65746E6920;
  v5._object = (void *)0xE800000000000000;
  String.append(_:)(v5);
  v6 = objc_msgSend(v1, "intent");
  v7 = 1061109567;
  if (v6 == (id)2)
    v7 = 1330925129;
  if (v6 == (id)1)
    v8 = 710164778;
  else
    v8 = v7;
  v9 = 0xE400000000000000;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(0xE400000000000000);
  v10 = 0xE600000000000000;
  v11._countAndFlagsBits = 0x28706F202C29;
  v11._object = (void *)0xE600000000000000;
  String.append(_:)(v11);
  v12 = objc_msgSend(v1, "operation");
  v13 = 0x6C65636E6143;
  switch((unint64_t)v12)
  {
    case 0uLL:
      break;
    case 1uLL:
      v10 = 0xE90000000000006ELL;
      v13 = 0x6564646962726F46;
      break;
    case 2uLL:
      v10 = 0xE400000000000000;
      v13 = 2037411651;
      break;
    case 3uLL:
      v10 = 0xE400000000000000;
      v13 = 1702260557;
      break;
    default:
      v10 = 0x800000010050EB30;
      v13 = 0xD000000000000014;
      break;
  }
  v14 = v10;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease(v10);
  v15._countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return v4;
}

uint64_t sub_10016BCA4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v18[4];
  int v19;
  _QWORD *v20;

  v2 = v1;
  v19 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v13);
  v20 = _swiftEmptyArrayStorage;
  v14 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = sub_10006922C((uint64_t *)&unk_100641280);
  v16 = sub_10016E444();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v15, v16, v7, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  *(_QWORD *)(v2 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0, 0xE000000000000000, v12, v9, v6, 0);
  *(_BYTE *)(v2 + 24) = v19;
  return v2;
}

uint64_t sub_10016BE60()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_10016BEB0(uint64_t *a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t *v24;

  v24 = a2;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v23 - v12;
  v14 = *a1;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15((char *)&v23 - v12, a4, v7);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v13, v7);
  v17 = objc_msgSend(a3, "dropItem:toItemAtIndexPath:", v14, isa);

  v18 = *v24;
  *v24 = (uint64_t)v17;
  swift_unknownObjectRelease(v18);
  v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v11, a4, v7);
  result = IndexPath.row.getter(v19);
  v21 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v22 = IndexPath.section.getter();
    IndexPath.init(row:section:)(v21, v22);
    v23(v11, v7);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(a4, v13, v7);
  }
  return result;
}

uint64_t sub_10016C02C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

Swift::Int sub_10016C068(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;
  _BYTE v8[24];

  swift_beginAccess(a3 + 16, v8, 1, 0);
  v5 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a1;
  v6 = a1;

  return OS_dispatch_semaphore.signal()();
}

void sub_10016C0C4()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  byte_100645540 = v2;
}

void sub_10016C150(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  id v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v28;
  __int128 v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = 0;
    v5 = a1 + 32;
    v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v37 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v6 = a2;
    v33 = v6;
    v35 = *(_QWORD *)(a1 + 16);
    v36 = _swiftEmptyArrayStorage;
    v40 = a2 & 0xC000000000000001;
    v38 = (unint64_t)a2 >> 62;
    v34 = a1 + 32;
    do
    {
      if (v4 <= v2)
        v7 = v2;
      else
        v7 = v4;
      v39 = v7;
      while (1)
      {
        if (v4 == v39)
          goto LABEL_45;
        v8 = *(_OWORD *)(v5 + 16 * v4);
        v41 = v8;
        v9 = *(void **)(v5 + 16 * v4 + 8);
        if (v38)
        {
          v25 = *((id *)&v8 + 1);
          v26 = (id)v41;
          swift_bridgeObjectRetain(a2);
          v10 = _CocoaArrayWrapper.endIndex.getter(v33);
          ++v4;
          if (!v10)
            goto LABEL_41;
        }
        else
        {
          v10 = *(_QWORD *)(v37 + 16);
          v11 = *((id *)&v8 + 1);
          v12 = (id)v41;
          swift_bridgeObjectRetain(a2);
          ++v4;
          if (!v10)
            goto LABEL_41;
        }
        v13 = v40 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2) : *(id *)(a2 + 32);
        v14 = v13;
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v15 = static NSObject.== infix(_:_:)(v14, v9);

        if ((v15 & 1) == 0)
          break;

        swift_bridgeObjectRelease(a2);
LABEL_29:

        if (v4 == v2)
          return;
      }
      if (v10 != 1)
      {
        if (v40)
        {
          v16 = 1;
          while (1)
          {
            v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a2);
            v18 = v16 + 1;
            if (__OFADD__(v16, 1))
              break;
            v19 = v17;
            v20 = static NSObject.== infix(_:_:)(v17, v9);
            swift_unknownObjectRelease(v19);
            if ((v20 & 1) != 0)
              goto LABEL_28;
            ++v16;
            if (v18 == v10)
              goto LABEL_34;
          }
          __break(1u);
        }
        else
        {
          v21 = 5;
          while (1)
          {
            v22 = v21 - 3;
            if (__OFADD__(v21 - 4, 1))
              break;
            v23 = *(id *)(a2 + 8 * v21);
            v24 = static NSObject.== infix(_:_:)(v23, v9);

            if ((v24 & 1) != 0)
            {
LABEL_28:

              swift_bridgeObjectRelease(a2);
              v5 = v34;
              v2 = v35;
              goto LABEL_29;
            }
            ++v21;
            if (v22 == v10)
            {
LABEL_34:

              swift_bridgeObjectRelease(a2);
              v5 = v34;
              v2 = v35;
              goto LABEL_35;
            }
          }
        }
        __break(1u);
LABEL_45:
        __break(1u);
        return;
      }
LABEL_41:

      swift_bridgeObjectRelease(a2);
LABEL_35:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
      v28 = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100155130(0, v36[2] + 1, 1);
        v28 = v36;
      }
      v29 = v41;
      v30 = v28;
      v32 = v28[2];
      v31 = v28[3];
      if (v32 >= v31 >> 1)
      {
        sub_100155130(v31 > 1, v32 + 1, 1);
        v29 = v41;
        v30 = v36;
      }
      v30[2] = v32 + 1;
      v36 = v30;
      *(_OWORD *)&v30[2 * v32 + 4] = v29;
    }
    while (v4 != v2);
  }
}

uint64_t sub_10016C458(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
    goto LABEL_25;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v31))
  {
    v33 = v3;
    v7 = *(void **)(a2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    v36 = v5 & 0xC000000000000001;
    v35 = v5;
    v8 = 4;
    v34 = v7;
    while (1)
    {
      a2 = v8 - 4;
      v10 = v36 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v5) : *(id *)(v5 + 8 * v8);
      v11 = v10;
      v3 = v8 - 3;
      if (__OFADD__(a2, 1))
        break;
      v12 = objc_msgSend(v10, "providerDomainID");
      v13 = v12;
      if (v7)
      {
        v14 = objc_msgSend(v7, "identifier");
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v17 = v16;
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v20 = v19;
        if (v15 == v18 && v17 == v19)
          v22 = 1;
        else
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);

        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v20);
      }
      else
      {

        v22 = 0;
      }
      v23 = objc_msgSend(v11, "effectiveParentItemIdentifier", v33);
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSFileProviderRootContainerItemIdentifier);
      v29 = v27;
      if (v24 == v28 && v26 == v27)
      {

        swift_bridgeObjectRelease_n(v26, 2);
        if ((v22 & 1) == 0)
        {
LABEL_22:
          v30 = 0;
          v5 = v35;
          goto LABEL_30;
        }
      }
      else
      {
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v28, v27, 0);

        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v29);
        if ((v9 & v22 & 1) == 0)
          goto LABEL_22;
      }
      ++v8;
      v7 = v34;
      v5 = v35;
      if (v3 == v6)
      {
        v30 = 1;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_25:
    if (v5 < 0)
      v31 = v5;
    else
      v31 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
  }
  v30 = 1;
LABEL_30:
  swift_bridgeObjectRelease(v5);
  return v30;
}

uint64_t sub_10016C6D4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    v24 = v3 & 0xC000000000000001;
    v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    v6 = 4;
    v22 = v5;
    v23 = v3;
    while (1)
    {
      v7 = v24 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, "providerDomainID");
      if (!v5)
      {
        swift_bridgeObjectRelease(v3);

        return 0;
      }
      a2 = v4;
      v11 = objc_msgSend(v5, "identifier");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      if (v12 == v15 && v14 == v16)
      {

        swift_bridgeObjectRelease_n(v14, 2);
      }
      else
      {
        v18 = v16;
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);

        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v18);
        if ((v19 & 1) == 0)
        {
          swift_bridgeObjectRelease(v23);
          return 0;
        }
      }
      ++v6;
      v4 = a2;
      v5 = v22;
      v3 = v23;
      if (v9 == a2)
      {
        swift_bridgeObjectRelease(v23);
        return 1;
      }
    }
    __break(1u);
LABEL_21:
    if (v3 < 0)
      v21 = v3;
    else
      v21 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
  swift_bridgeObjectRelease(v3);
  return 1;
}

uint64_t sub_10016C8D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v47;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v3 && *(_BYTE *)(v3 + 17))
    goto LABEL_40;
  v4 = sub_1003E1420(a1, 0);
  if (v4)
  {
    v5 = v4;
    if (sub_1003E1C70(a1))
    {
      v6 = *(_BYTE *)(v5 + 48);
      swift_unknownObjectRelease(v5);
      v7 = v6 ^ 1;
      return v7 & 1;
    }
    swift_unknownObjectRelease(v5);
  }
  v8 = sub_1003E1E24(a1, 1);
  if (v11 == -1)
  {
LABEL_40:
    v7 = 0;
    return v7 & 1;
  }
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (v16)
  {
    v17 = *(_QWORD *)(v16 + 16);
    if (v11 == 3)
    {
      swift_unknownObjectRetain(v17);
      sub_1000B1650((id)v12, v13, v14, 3);
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      if (v11)
      {
        swift_unknownObjectRetain(v17);
        v19 = 0;
        goto LABEL_16;
      }
      swift_unknownObjectRetain(v17);
      sub_1000B1650((id)v12, v13, v14, 0);
    }
    v19 = (void *)v12;
LABEL_16:
    swift_getObjectType(v17);
    v20 = sub_100165148(v19);
    swift_unknownObjectRelease(v17);

    v18 = v20 ^ 1;
    goto LABEL_17;
  }
  v18 = 1;
LABEL_17:
  switch(v15)
  {
    case 1:
      v21 = (id)v12;
      v22 = objc_msgSend(v21, "identifier");
      v23 = DOCDocumentSourceIdentifierTrashedItems;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v26 = v25;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      if (v24 == v27 && v26 == v28)
      {

        v41 = v26;
        goto LABEL_35;
      }
      v30 = v28;
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v27, v28, 0);

      swift_bridgeObjectRelease(v26);
      *(_QWORD *)&v32 = swift_bridgeObjectRelease(v30).n128_u64[0];
      if ((v31 & 1) != 0)
      {
LABEL_36:
        sub_1000B1664((void *)v12, v13, v14, 1);
        v42 = v12;
        v43 = v13;
        v44 = v14;
        v45 = 1;
        goto LABEL_39;
      }
      v33 = objc_msgSend(v21, "identifier", v32);
      v34 = DOCDocumentSourceIdentifierSharedItems;
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v37 = v36;
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v40 = v38;
      if (v35 == v39 && v37 == v38)
      {

        v41 = v37;
LABEL_35:
        swift_bridgeObjectRelease_n(v41, 2);
        goto LABEL_36;
      }
      v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);

      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v40);
      sub_1000B1664((void *)v12, v13, v14, 1);
      sub_1000B1664((void *)v12, v13, v14, 1);
      v7 = 0;
      if ((v47 & 1) == 0)
LABEL_33:
        v7 = v18;
      return v7 & 1;
    case 2:
      v42 = v12;
      v43 = v13;
      v44 = v14;
      v45 = 2;
      goto LABEL_39;
    case 4:
      v42 = v12;
      v43 = v13;
      v44 = v14;
      v45 = 4;
      goto LABEL_39;
    case 5:
      if (v14 | v13 | v12)
      {
        if (v12 != 1 || v14 | v13)
        {
LABEL_32:
          sub_1000B1664((void *)v12, v13, v14, v15);
          goto LABEL_33;
        }
        v42 = 1;
      }
      else
      {
        v42 = 0;
      }
      v43 = 0;
      v44 = 0;
      v45 = 5;
LABEL_39:
      sub_1000B1664((void *)v42, v43, v44, v45);
      goto LABEL_40;
    default:
      goto LABEL_32;
  }
}

uint64_t sub_10016CC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10016CCB8(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  CGFloat v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  objc_super v55;
  CGRect v56;
  CGRect v57;

  v47 = a3;
  v48 = a4;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v45 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v45 - v15, a2, v6, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  sub_1000271D4((uint64_t)v16, (uint64_t)v12, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
LABEL_16:
    sub_10000CB4C((uint64_t)v16, (uint64_t *)&unk_100642710);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
  v17 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v55.receiver = a1;
  v55.super_class = v17;
  v18 = objc_msgSendSuper2(&v55, "collectionView");
  if (!v18)
    goto LABEL_24;
  v19 = v18;
  v20 = type metadata accessor for DOCSidebarCollectionView();
  v21 = (void *)swift_dynamicCastClassUnconditional(v19, v20, 0, 0, 0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(v21, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v23)
    goto LABEL_16;
  v24 = type metadata accessor for DOCSidebarItemCell(0);
  v25 = swift_dynamicCastClass(v23, v24);
  if (!v25)
  {

    goto LABEL_16;
  }
  v26 = (void *)v25;
  sub_10000CB4C((uint64_t)v16, (uint64_t *)&unk_100642710);
  objc_msgSend(v26, "bounds");
  v27 = CGRectGetWidth(v56) * 0.5;
  objc_msgSend(v26, "bounds");
  objc_msgSend(v47, "convertPoint:fromCoordinateSpace:", v26, v27, CGRectGetHeight(v57) * 0.5);
  v29 = v28;
  v31 = v30;
  v32 = objc_msgSend(v48, "items");
  v33 = sub_10006922C(&qword_100645660);
  v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v44 = v34;
    else
      v44 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v35 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v34);
    if (v35)
      goto LABEL_8;
LABEL_21:

LABEL_22:
    swift_bridgeObjectRelease(v34);
    return;
  }
  v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v35)
    goto LABEL_21;
LABEL_8:
  v46 = v23;
  if (v35 >= 1)
  {
    v36 = 0;
    do
    {
      if ((v34 & 0xC000000000000001) != 0)
      {
        v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v34);
      }
      else
      {
        v37 = *(void **)(v34 + 8 * v36 + 32);
        swift_unknownObjectRetain(v37);
      }
      ++v36;
      _UIScaleTransformForAspectFitOfSizeInTargetSize(&v51, objc_msgSend(v37, "previewSize"));
      v49 = v52;
      v50 = v51;
      v38 = v53;
      v39 = v54;
      v40 = objc_allocWithZone((Class)UIDragPreviewTarget);
      v51 = v50;
      v52 = v49;
      v53 = v38;
      v54 = v39;
      v41 = objc_msgSend(v40, "initWithContainer:center:transform:", v47, &v51, v29, v31);
      v42 = objc_msgSend(v37, "dragItem");
      v43 = objc_msgSend(v48, "dropItem:toTarget:", v42, v41);
      swift_unknownObjectRelease(v37);

      swift_unknownObjectRelease(v43);
    }
    while (v35 != v36);

    goto LABEL_22;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_10016D100(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  __n128 v18;
  void *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = type metadata accessor for DOCDragPasteboardType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  swift_getObjectType(a1);
  v6 = sub_1003F8DE0(a1);
  if ((v6 & 1) != 0)
  {
    v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(v6);
    v8 = static os_log_type_t.debug.getter(v7);
    v9 = sub_10006922C((uint64_t *)&unk_100644560);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_10006A638();
    *(_QWORD *)(v10 + 32) = 0xD000000000000018;
    *(_QWORD *)(v10 + 40) = 0x8000000100512E70;
    os_log(_:dso:log:type:_:)("%@: accepting drop session containing favorites", 47, 2, &_mh_execute_header, v7, v8, v10, v40);
LABEL_18:

    swift_bridgeObjectRelease(v10);
    return;
  }
  v11 = objc_msgSend(a1, "items");
  v12 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease(v13);
    v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(v30);
    v31 = static os_log_type_t.debug.getter(v7);
    v32 = sub_10006922C((uint64_t *)&unk_100644560);
    v10 = swift_allocObject(v32, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_10006A638();
    *(_QWORD *)(v10 + 32) = 0xD000000000000018;
    *(_QWORD *)(v10 + 40) = 0x8000000100512E70;
    os_log(_:dso:log:type:_:)("%@: all dragging items have representations we can accept", 57, 2, &_mh_execute_header, v7, v31, v10, v40);
    goto LABEL_18;
  }
LABEL_22:
  if (v13 < 0)
    v39 = v13;
  else
    v39 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v14 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease(v13);
  if (!v14)
    goto LABEL_17;
LABEL_5:
  v44 = v3;
  v45 = v12;
  v15 = 0;
  v16 = v13 & 0xC000000000000001;
  v40 = v13 + 32;
  v41 = v13 & 0xFFFFFFFFFFFFFF8;
  v47 = v13;
  v42 = v13 & 0xC000000000000001;
  v43 = v14;
  while (1)
  {
    if (v16)
    {
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
    }
    else
    {
      if (v15 >= *(_QWORD *)(v41 + 16))
      {
        __break(1u);
        return;
      }
      v17 = *(id *)(v40 + 8 * v15);
    }
    v19 = v17;
    v20 = __OFADD__(v15, 1);
    v12 = v15 + 1;
    if (v20)
    {
      __break(1u);
      goto LABEL_22;
    }
    v21 = DOCAcceptableDragPasteboardTypes.unsafeMutableAddressor(v18);
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(*(_QWORD *)v21 + 16);
    if (!v23)
      break;
    v46 = v12;
    v24 = v22 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    swift_bridgeObjectRetain_n(v22, 2);
    v25 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1000E2A34(v24, (uint64_t)v5);
      v26 = objc_msgSend(v19, "itemProvider");
      DOCDragPasteboardType.typeIdentifier.getter(v26);
      v28 = v27;
      v29 = String._bridgeToObjectiveC()();
      LODWORD(v28) = objc_msgSend(v26, "hasRepresentationConformingToTypeIdentifier:fileOptions:", v29, 0, swift_bridgeObjectRelease(v28).n128_f64[0]);

      sub_1000E2A78((uint64_t)v5);
      if ((_DWORD)v28)
        break;
      v24 += v25;
      if (!--v23)
      {
        swift_bridgeObjectRelease(v47);
        swift_bridgeObjectRelease(v22);
        goto LABEL_19;
      }
    }

    swift_bridgeObjectRelease_n(v22, 2);
    v3 = v44;
    v15 = v46;
    v13 = v47;
    v16 = v42;
    if (v46 == v43)
      goto LABEL_17;
  }
  v22 = v13;
LABEL_19:
  swift_bridgeObjectRelease(v22);
  v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(v33);
  v35 = static os_log_type_t.debug.getter(v34);
  v36 = sub_10006922C((uint64_t *)&unk_100644560);
  v37 = swift_allocObject(v36, 112, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v37 + 56) = &type metadata for String;
  *(_QWORD *)(v37 + 64) = sub_10006A638();
  *(_QWORD *)(v37 + 32) = 0xD000000000000018;
  *(_QWORD *)(v37 + 40) = 0x8000000100512E70;
  *(_QWORD *)(v37 + 96) = v45;
  *(_QWORD *)(v37 + 104) = sub_100083450(&qword_100642950, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  *(_QWORD *)(v37 + 72) = v19;
  v38 = v19;
  os_log(_:dso:log:type:_:)("%@: dragging item %@ does not have any representations we can accept", 68, 2, &_mh_execute_header, v34, v35, v37);

  swift_bridgeObjectRelease(v37);
}

void sub_10016D5B8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = objc_msgSend(a1, "items");
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v11 = v4;
    else
      v11 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    sub_10016D100(a1);
  }
  else
  {
    v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(v6);
    v8 = static os_log_type_t.debug.getter(v7);
    v9 = sub_10006922C((uint64_t *)&unk_100644560);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_10006A638();
    *(_QWORD *)(v10 + 32) = 0xD00000000000001CLL;
    *(_QWORD *)(v10 + 40) = 0x800000010050E2E0;
    os_log(_:dso:log:type:_:)("%@: session contains no items", 29, 2, &_mh_execute_header, v7, v8, v10);

    swift_bridgeObjectRelease(v10);
  }
}

void sub_10016D724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_100640D00 != -1)
    swift_once(&qword_100640D00, sub_1000E9918);
  v3 = qword_1006431B0;
  swift_retain();
  sub_1000E9F78(0xD00000000000001DLL, (void *)0x8000000100512E50);
  swift_release(v3);
  v4 = type metadata accessor for DOCSidebarDropContext();
  v5 = (_QWORD *)swift_allocObject(v4, 40, 7);
  v5[3] = 0;
  v6 = type metadata accessor for DOCSidebarDropContext.DebugInfo(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v8 = v7 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedTargetIndexPath;
  v9 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)(v7 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedProposal) = 0;
  v5[4] = v7;
  v5[2] = a1;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext) = v5;
  swift_unknownObjectRetain(a1);
  swift_release(v10);
  sub_100166E7C();
}

id sub_10016D850(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a2, (uint64_t)v8, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v13 = sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
LABEL_8:
    v22 = *(id *)DOCLog.UI.unsafeMutableAddressor(v13);
    v23 = static os_log_type_t.debug.getter(v22);
    v24 = sub_10006922C((uint64_t *)&unk_100644560);
    v25 = swift_allocObject(v24, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = sub_10006A638();
    *(_QWORD *)(v25 + 32) = 0xD000000000000040;
    *(_QWORD *)(v25 + 40) = 0x800000010050E0A0;
    os_log(_:dso:log:type:_:)("%@: no destination index path on the drop proposal, no drop to perform", 70, 2, &_mh_execute_header, v22, v23, v25);

    swift_bridgeObjectRelease(v25);
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 0);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (!v14)
  {
    v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_8;
  }
  swift_retain();
  v15 = (void *)sub_1001670EC(a1, (uint64_t)v12);
  v16 = *(void **)(v14 + 24);
  *(_QWORD *)(v14 + 24) = v15;
  v17 = v15;

  sub_10025FD38();
  sub_100166E7C();
  if (!v15)
    v17 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = *(_QWORD *)(v14 + 32);
  swift_retain();
  swift_release(v14);
  v19 = *(void **)(v18 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedProposal);
  *(_QWORD *)(v18 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedProposal) = v17;
  v20 = v17;
  swift_release(v18);

  return v20;
}

void _s5Files24DOCSidebarViewControllerC010collectionC0_18dropSessionDidExitySo012UICollectionC0C_So06UIDropG0_ptF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (qword_100640D00 != -1)
    swift_once(&qword_100640D00, sub_1000E9918);
  v2 = qword_1006431B0;
  swift_retain();
  sub_1000E9F78(0xD00000000000001BLL, (void *)0x8000000100512BF0);
  swift_release(v2);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext) = 0;
  swift_release(v3);
  sub_100166E7C();
}

void _s5Files24DOCSidebarViewControllerC010collectionC0_17dropSessionDidEndySo012UICollectionC0C_So06UIDropG0_ptF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (qword_100640D00 != -1)
    swift_once(&qword_100640D00, sub_1000E9918);
  v2 = qword_1006431B0;
  swift_retain();
  sub_1000E9F78(0xD000000000000026, (void *)0x8000000100512B80);
  swift_release(v2);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext) = 0;
  swift_release(v3);
  sub_100166E7C();
}

uint64_t sub_10016DC64(uint64_t a1)
{
  id v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v3 = objc_msgSend(v2, "hasOpenInRestrictions");

  if (!v3)
    return 1;
  v4 = sub_1003E1E24(a1, 1);
  if (v7 != -1)
  {
    v8 = (void *)v4;
    v9 = v5;
    v10 = v6;
    v11 = v7;
    if (sub_1003E1420(a1, 0))
      __asm { BR              X10 }
    sub_1000B1664(v8, v9, v10, v11);
  }
  return 0;
}

uint64_t sub_10016E14C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCAtomicValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCAtomicValue);
}

uint64_t sub_10016E1D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_10016E200(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10016C068(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10016E208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_10016E2A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100169874(a1, *(void **)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

id sub_10016E300()
{
  return sub_100233A38(0xD00000000000001CLL, 0x8000000100512F40, 0);
}

void sub_10016E340(uint64_t a1)
{
  uint64_t v1;

  sub_10016A050(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10016E348@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 24, v4, 0, 0);
  *a1 = *(_BYTE *)(v1 + 24);
  return result;
}

uint64_t sub_10016E390()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10016E3B4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  _BYTE v4[24];

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32) + 24;
  swift_beginAccess(v2, v4, 33, 0);
  v1(v2);
  return swift_endAccess(v4);
}

uint64_t sub_10016E410()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016E420()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10016E444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100643650;
  if (!qword_100643650)
  {
    v1 = sub_10007E830((uint64_t *)&unk_100641280);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100643650);
  }
  return result;
}

uint64_t sub_10016E494@<X0>(_BYTE *a1@<X8>)
{
  return sub_10016E348(a1);
}

void sub_10016E5B0(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  _BYTE v8[24];

  v2 = OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled;
  v1[OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled] = a1;
  v3 = objc_msgSend(v1, "navigationBar");
  v4 = type metadata accessor for DOCNavigationBar();
  v5 = swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
  LODWORD(v2) = v1[v2];
  v6 = (_BYTE *)(v5 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess(v5 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled, v8, 1, 0);
  v7 = 0;
  *v6 = v2;
  if ((_DWORD)v2 == 1)
    v7 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  sub_1000B1284(v7);

}

void sub_10016E7B4()
{
  uint64_t v0;

}

id sub_10016E7C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFullDocumentManagerNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_10016E810()
{
  unint64_t result;

  result = qword_100645858;
  if (!qword_100645858)
  {
    result = swift_getWitnessTable(&unk_1004DBE38, &type metadata for MoveFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100645858);
  }
  return result;
}

unint64_t sub_10016E858()
{
  unint64_t result;

  result = qword_100645860;
  if (!qword_100645860)
  {
    result = swift_getWitnessTable(&unk_1004DBE60, &type metadata for MoveFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100645860);
  }
  return result;
}

uint64_t sub_10016E89C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100564B18, 1) + 8);
}

uint64_t sub_10016E8C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100564AF0, 1);
}

_QWORD *sub_10016E8D0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = type metadata accessor for DOCFileEntity(0);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = *(id *)(v6 + *(int *)(v4 + 28));
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
      specialized ContiguousArray._endMutation()(v10);
      v6 += v7;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10016E9AC@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_10016E9CC()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10016E9EC()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10016EA1C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10016EA3C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10006922C(&qword_1006458D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_1006458D8);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10016F75C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for MoveFilesIntent, v6);
  v7._object = (void *)0x80000001005132D0;
  v7._countAndFlagsBits = 0xD000000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004DBEF0);
  v9 = sub_10006922C(&qword_1006458E0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_1004DBF18);
  v12 = sub_10006922C(&qword_1006458E8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for MoveFilesIntent, v6);
  return IntentParameterSummary.init(_:table:_:)(v2, 0x6E65746E49707041, 0xEA00000000007374, sub_10016EC04, 0, &type metadata for MoveFilesIntent, v6);
}

uint64_t sub_10016EC04()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_1004DBF40);
  v1 = sub_10016F75C();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v4 + 32) = v2;
  v8 = v4;
  specialized Array._endMutation()(v4);
  v5 = swift_retain();
  v6 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v8, &type metadata for MoveFilesIntent, v1, v5);
  swift_bridgeObjectRelease(v8);
  swift_release(v2);
  return v6;
}

uint64_t sub_10016ECC8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_1006726C0);
  v1 = sub_10007E788(v0, (uint64_t)qword_1006726C0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

uint64_t sub_10016ED20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v10);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for IntentDialog(0);
  sub_10007E874(v13, qword_100645840);
  sub_10007E788(v13, (uint64_t)qword_100645840);
  v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x8000000100513270);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, 0, 0, 256);
  return IntentDialog.init(_:)(v12);
}

uint64_t sub_10016EEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_10006922C(&qword_100643360);
  v4[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DOCFileEntity(0);
  v4[11] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[12] = swift_task_alloc(v7);
  v4[13] = swift_task_alloc(v7);
  v4[14] = swift_task_alloc(v7);
  v8 = type metadata accessor for Logger(0);
  v4[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[16] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[17] = swift_task_alloc(v10);
  v4[18] = swift_task_alloc(v10);
  return swift_task_switch(sub_10016EFB8, 0, 0);
}

uint64_t sub_10016EFB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = *(_QWORD *)(v1 + 144);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = Logger.AppIntents.unsafeMutableAddressor(a1);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7 = v6(v2, v5, v3);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MoveFilesIntent] Performing MoveFilesIntent", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }
  v11 = *(_QWORD *)(v1 + 144);
  v12 = *(_QWORD *)(v1 + 120);
  v13 = *(_QWORD *)(v1 + 128);

  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  IntentParameter.wrappedValue.getter((_QWORD *)(v1 + 16));
  v15 = *(_QWORD *)(v1 + 16);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = swift_bridgeObjectRelease(v15);
  if (v16)
  {
    v18 = *(_QWORD **)(v1 + 112);
    v19 = *(_QWORD *)(v1 + 88);
    IntentParameter.wrappedValue.getter((_QWORD *)(v1 + 24));
    v20 = *(_QWORD *)(v1 + 24);
    v21 = sub_10016E8D0(v20);
    *(_QWORD *)(v1 + 152) = v21;
    swift_bridgeObjectRelease(v20);
    v22 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    *(_QWORD *)(v1 + 160) = v22;
    IntentParameter.wrappedValue.getter(v18);
    v23 = *(void **)((char *)v18 + *(int *)(v19 + 28));
    *(_QWORD *)(v1 + 168) = v23;
    v24 = v23;
    sub_1000EACF8((uint64_t)v18);
    IntentParameter.wrappedValue.getter((_QWORD *)(v1 + 200));
    v25 = *(_BYTE *)(v1 + 200);
    v26 = swift_task_alloc(48);
    *(_QWORD *)(v1 + 176) = v26;
    *(_QWORD *)(v26 + 16) = v22;
    *(_QWORD *)(v26 + 24) = v21;
    *(_QWORD *)(v26 + 32) = v24;
    *(_BYTE *)(v26 + 40) = (v25 & 1) == 0;
    v27 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v1 + 184) = v27;
    *v27 = v1;
    v27[1] = sub_10016F378;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v27, 0, 0, 0xD000000000000024, 0x80000001005132A0, sub_100170048, v26, &type metadata for ()[8]);
  }
  else
  {
    v29 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, __n128))v6)(*(_QWORD *)(v1 + 136), v5, *(_QWORD *)(v1 + 120), v17);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[MoveFilesIntent] Asked for values", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    v33 = *(_QWORD *)(v1 + 136);
    v34 = *(_QWORD *)(v1 + 120);
    v35 = *(_QWORD *)(v1 + 80);

    v36 = ((uint64_t (*)(uint64_t, uint64_t))v14)(v33, v34);
    v37 = IntentParameter.projectedValue.getter(v36);
    v38 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
    v39 = type metadata accessor for AppIntentError(0);
    v40 = sub_10005A360(&qword_1006458C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v39, v40, 0, 0);
    IntentParameter.needsValueError(_:)(v35);
    swift_release(v37);
    v41 = sub_10017009C(v35);
    swift_willThrow(v41);
    v42 = *(_QWORD *)(v1 + 136);
    v44 = *(_QWORD *)(v1 + 104);
    v43 = *(_QWORD *)(v1 + 112);
    v45 = *(_QWORD *)(v1 + 96);
    v46 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(*(_QWORD *)(v1 + 144));
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10016F378()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10016F510;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 176));
    v4 = sub_10016F3E4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10016F3E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD **)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD **)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 80);

  swift_bridgeObjectRelease(v3);
  IntentParameter.wrappedValue.getter(v5);
  IntentParameter.wrappedValue.getter(v6);
  v8 = sub_1003795D0((uint64_t)v6);
  *(_QWORD *)(v0 + 40) = v8;
  v9 = sub_10005A360((unint64_t *)&qword_100643928, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DB0C8);
  v10 = sub_100170058();
  static IntentResult.result<A, B>(value:opensIntent:)(v5, v0 + 40, v7, &type metadata for RevealFileIntent, v9, v10);
  swift_release(v8);
  sub_1000EACF8((uint64_t)v5);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v12);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016F510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(void **)(v0 + 160);

  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016F5A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100170154();
  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_10016F5E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100640DC8 != -1)
    swift_once(&qword_100640DC8, sub_10016ECC8);
  v2 = type metadata accessor for IntentAuthenticationPolicy(0);
  v3 = sub_10007E788(v2, (uint64_t)qword_1006726C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10016F654(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1006458BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA854;
  return sub_10016EEE0(a1, v4, v5, v6);
}

uint64_t sub_10016F6C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_10016F974();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_10016F6E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10016F75C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10016F714()
{
  unint64_t result;

  result = qword_100645870;
  if (!qword_100645870)
  {
    result = swift_getWitnessTable(&unk_1004DBEAC, &type metadata for MoveFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100645870);
  }
  return result;
}

unint64_t sub_10016F75C()
{
  unint64_t result;

  result = qword_100645878;
  if (!qword_100645878)
  {
    result = swift_getWitnessTable(&unk_1004DBDA8, &type metadata for MoveFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100645878);
  }
  return result;
}

uint64_t destroy for MoveFilesIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[2]);
}

uint64_t *_s5Files15MoveFilesIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for MoveFilesIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for MoveFilesIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for MoveFilesIntent()
{
  return &type metadata for MoveFilesIntent;
}

uint64_t sub_10016F8F0()
{
  return sub_100062698(&qword_100645880, &qword_100645888, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10016F91C()
{
  return sub_100062698(&qword_100645890, &qword_100645898, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10016F948()
{
  return sub_100062698(&qword_1006458A0, &qword_100645898, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10016F974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(char *);
  unsigned int v69;
  char *v70;
  uint64_t v71;
  _QWORD v72[3];

  v0 = sub_10006922C(&qword_1006458A8);
  __chkstk_darwin(v0);
  v67 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v61 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v66 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v63 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v62 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v65 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v10);
  v60 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for InputConnectionBehavior(0);
  v12 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v70 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - v18;
  v20 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v20);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006922C(&qword_100643368);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v23(v22, 1, 1, v7);
  v72[0] = 0;
  if (qword_100640DD0 != -1)
    swift_once(&qword_100640DD0, sub_10016ED20);
  v24 = type metadata accessor for IntentDialog(0);
  v25 = sub_10007E788(v24, (uint64_t)qword_100645840);
  v26 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v19, v25, v24);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v27(v19, 0, 1, v24);
  v27(v16, 1, 1, v24);
  v69 = enum case for InputConnectionBehavior.default(_:);
  v68 = *(void (**)(char *))(v12 + 104);
  v28 = v70;
  v68(v70);
  v29 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  v59 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v22, v72, v19, v16, v28, v29);
  v55 = sub_10006922C((uint64_t *)&unk_1006438D0);
  v58 = v23;
  v23(v22, 1, 1, v7);
  v30 = type metadata accessor for DOCFileEntity(0);
  v31 = v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v60, 1, 1, v30);
  v57 = v27;
  v27(v19, 1, 1, v24);
  v27(v16, 1, 1, v24);
  v32 = sub_10006922C((uint64_t *)&unk_10064B460);
  v33 = *(_QWORD *)(type metadata accessor for UTType(0) - 8);
  v34 = *(_QWORD *)(v33 + 72);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v56 = v7;
  v36 = swift_allocObject(v32, ((v35 + 32) & ~v35) + v34, v35 | 7);
  *(_OWORD *)(v36 + 16) = xmmword_1004D9670;
  static UTType.folder.getter(v36);
  v37 = type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject(v37, 64, 7);
  v72[0] = sub_10029FBBC(v36, 1);
  v72[1] = 0;
  ((void (*)(char *, _QWORD, uint64_t))v68)(v28, v69, v71);
  v38 = sub_100111434();
  v60 = (char *)IntentParameter<>.init<A>(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v22, v31, v19, v16, v28, v72, &type metadata for LocationOptionsProvider, v38, v29);
  v55 = sub_10006922C(&qword_1006458B0);
  v39 = v62;
  v40 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100513120);
  v41 = v63;
  static Locale.current.getter(v40);
  v42 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 104);
  v44 = v66;
  v45 = v64;
  v43(v66, enum case for LocalizedStringResource.BundleDescription.main(_:), v64);
  LOWORD(v52) = 2;
  v46 = v65;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("MOVE_FILES_INTENT_OVERWRITE_PARAM_TITLE", 39, 2, v39, 0x6E65746E49707041, 0xEA00000000007374, v41, v44, "Title of the overwriteConflicts parameter of the Move Items to Folder intent", 76, v52);
  v47 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x80000001005131C0);
  static Locale.current.getter(v47);
  v43(v44, v42, v45);
  LOWORD(v53) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("MOVE_FILES_INTENT_OVERWRITE_PARAM_DESCRIPTION", 45, 2, v39, 0x6E65746E49707041, 0xEA00000000007374, v41, v44, "Description of the overwriteConflicts parameter of the Move Items to Folder intent", 82, v53);
  v58(v22, 0, 1, v56);
  LOBYTE(v72[0]) = 0;
  v48 = type metadata accessor for Bool.IntentDisplayName(0);
  v49 = v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v67, 1, 1, v48);
  v57(v19, 1, 1, v24);
  v50 = v70;
  ((void (*)(char *, _QWORD, uint64_t))v68)(v70, v69, v71);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v46, v22, v72, v49, v19, v50);
  return v59;
}

double sub_100170048(uint64_t a1)
{
  uint64_t v1;

  return sub_10047FBE0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_BYTE *)(v1 + 40));
}

unint64_t sub_100170058()
{
  unint64_t result;

  result = qword_1006458C0;
  if (!qword_1006458C0)
  {
    result = swift_getWitnessTable(&unk_1004E4860, &type metadata for RevealFileIntent);
    atomic_store(result, (unint64_t *)&qword_1006458C0);
  }
  return result;
}

uint64_t sub_10017009C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100643360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001700DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100170104@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10017012C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100170154()
{
  unint64_t result;

  result = qword_1006458F0;
  if (!qword_1006458F0)
  {
    result = swift_getWitnessTable(&unk_1004DBE7C, &type metadata for MoveFilesIntent);
    atomic_store(result, (unint64_t *)&qword_1006458F0);
  }
  return result;
}

uint64_t DOCAppearStateTracker.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for DOCTestingPolicies()
{
  return objc_opt_self(_TtC5Files18DOCTestingPolicies);
}

uint64_t DOCOffsetAdjustmentBehaviors.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return v0;
}

uint64_t DOCOffsetAdjustmentBehaviors.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for DOCOffsetAdjustmentBehaviors()
{
  return objc_opt_self(_TtC5Files28DOCOffsetAdjustmentBehaviors);
}

void sub_100170220(void *a1)
{
  uint64_t v1;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  if (a1)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode);
    swift_unknownObjectRetain(v3);
    if (objc_msgSend(a1, "isFolder"))
    {
      swift_unknownObjectRelease(v3);
    }
    else
    {
      if (v3)
      {
        v6 = objc_msgSend(v3, "description");
        v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v4 = v7;

      }
      else
      {
        v4 = 0xE300000000000000;
        v5 = 7104878;
      }
      v8 = objc_msgSend(a1, "description");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v13 = *(id *)DOCLog.UI.unsafeMutableAddressor(v12);
      v14 = static os_log_type_t.fault.getter();
      v15 = sub_10006922C((uint64_t *)&unk_100644560);
      v16 = swift_allocObject(v15, 112, 7);
      *(_OWORD *)(v16 + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(v16 + 56) = &type metadata for String;
      v17 = sub_10006A638();
      *(_QWORD *)(v16 + 32) = v9;
      *(_QWORD *)(v16 + 40) = v11;
      *(_QWORD *)(v16 + 96) = &type metadata for String;
      *(_QWORD *)(v16 + 104) = v17;
      *(_QWORD *)(v16 + 64) = v17;
      *(_QWORD *)(v16 + 72) = v5;
      *(_QWORD *)(v16 + 80) = v4;
      os_log(_:dso:log:type:_:)("Attempt to update DOCStatusFooterView's folderNode to illegal DOCNode = %@.  Existing DOCNode = %@", 98, 2, &_mh_execute_header, v13, v14, v16);
      swift_unknownObjectRelease(v3);

      swift_bridgeObjectRelease(v16);
      __break(1u);
    }
  }
}

id sub_1001703B0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  id result;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode;
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode);
  swift_unknownObjectRetain(v11);
  v5 = sub_10006922C(&qword_100652EB0);
  v6 = Optional.isEqualTo(node:)(a1, v5);
  *(_QWORD *)&v7 = swift_unknownObjectRelease(v11).n128_u64[0];
  if ((v6 & 1) == 0)
    return (id)sub_100015074();
  result = *(id *)(v2 + v4);
  if (!result)
  {
    if (!a1)
      return result;
    objc_msgSend(a1, "isWritable", v7);
    return (id)sub_100015074();
  }
  v9 = objc_msgSend(result, "isWritable", v7);
  if (!a1)
    return (id)sub_100015074();
  v10 = v9;
  result = objc_msgSend(a1, "isWritable");
  if ((_DWORD)result != v10)
    return (id)sub_100015074();
  return result;
}

void sub_10017047C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_nodeCollection);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration + 48);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration + 56);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration + 64);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration + 72);

  swift_bridgeObjectRelease(v3);
  swift_unknownObjectRelease(v5);

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_gestureDelegate);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode));

}

id sub_100170568()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  objc_super v10;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  if (v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates] == 1)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView];
    if (v3)
    {
      v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates] = 0;
      v4 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel;
      v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel];
      v6 = v3;
      swift_retain();
      sub_1000E769C();
      swift_release(v5);
      v7 = *(_QWORD *)&v3[v4];
      *(_QWORD *)(v7 + 24) = 0;
      swift_unknownObjectWeakAssign(v7 + 16, 0);
      v8 = &v6[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate];
      *((_QWORD *)v8 + 1) = 0;
      swift_unknownObjectWeakAssign(v8, 0);

    }
  }
  v10.receiver = v1;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "dealloc");
}

void sub_100170754(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates) & 1) == 0)
    {
      v4 = *(char **)(Strong + OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView);
      if (v4)
      {
        *(_BYTE *)(Strong + OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates) = 1;
        v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel];
        *(_QWORD *)(v5 + 24) = &off_1005E9A78;
        swift_unknownObjectWeakAssign(v5 + 16, v4);
        v6 = v4;
        swift_retain();
        sub_100020270(v7, v8);
        swift_release(v5);
        v9 = &v6[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate];
        *((_QWORD *)v9 + 1) = &off_1005CB9E8;
        swift_unknownObjectWeakAssign(v9, v3);

        v3 = v6;
      }
    }

  }
}

void sub_10017088C()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v6, "didMoveToWindow");
  v1 = objc_msgSend(v0, "window");

  if (v1)
  {
    sub_10002E0E0();
    sub_1000AFB50();
    v3 = v2;
    v4 = sub_1000159B4();
    objc_msgSend(v4, "setHidden:", v3 == 0);

    v5 = sub_1000159B4();
    objc_msgSend(v5, "setAttributedText:", v3);

  }
}

void sub_100170B60()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  sub_10002E0E0();
  sub_1000AFB50();
  v1 = v0;
  v2 = sub_1000159B4();
  objc_msgSend(v2, "setHidden:", v1 == 0);

  v3 = sub_1000159B4();
  objc_msgSend(v3, "setAttributedText:", v1);

}

id sub_100170BD8(void *a1)
{
  id v2;
  double v3;

  v2 = objc_msgSend(a1, "enclosingDocumentLandingMode");
  v3 = 1.0;
  if (v2 == (id)1)
    v3 = 0.0;
  return objc_msgSend(a1, "setAlpha:", v3);
}

uint64_t sub_100170C1C(void *a1, void *a2)
{
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  if (!a1)
    return 1;
  if ((objc_msgSend(a1, "isFolder") & 1) != 0)
    return 1;
  if (a2)
  {
    v5 = objc_msgSend(a2, "description");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

  }
  else
  {
    v8 = 0xE300000000000000;
    v6 = 7104878;
  }
  v9 = objc_msgSend(a1, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v14 = *(id *)DOCLog.UI.unsafeMutableAddressor(v13);
  v15 = static os_log_type_t.fault.getter();
  v16 = sub_10006922C((uint64_t *)&unk_100644560);
  v17 = swift_allocObject(v16, 112, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  v18 = sub_10006A638();
  *(_QWORD *)(v17 + 32) = v10;
  *(_QWORD *)(v17 + 40) = v12;
  *(_QWORD *)(v17 + 96) = &type metadata for String;
  *(_QWORD *)(v17 + 104) = v18;
  *(_QWORD *)(v17 + 64) = v18;
  *(_QWORD *)(v17 + 72) = v6;
  *(_QWORD *)(v17 + 80) = v8;
  os_log(_:dso:log:type:_:)("Attempt to update DOCStatusFooterView's folderNode to illegal DOCNode = %@.  Existing DOCNode = %@", 98, 2, &_mh_execute_header, v14, v15, v17);

  swift_bridgeObjectRelease(v17);
  return 0;
}

void sub_100170D78()
{
  id v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[5];
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
  v1 = swift_allocObject(&unk_1005CBA08, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16);
  v3[4] = sub_100171040;
  v4 = v1;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10004A82C;
  v3[3] = &unk_1005CBA20;
  v2 = _Block_copy(v3);
  objc_msgSend(v0, "performAfterLaunch:", v2, swift_release(v4).n128_f64[0]);
  _Block_release(v2);

}

void sub_100170E54(void *a1)
{
  char *v1;
  double v2;
  double v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  objc_msgSend(a1, "locationInView:", v1);
  v4 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_emptyTargetedPreview;
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCStatusFooterView_emptyTargetedPreview];
  if (v5)
  {
    objc_msgSend(v5, "setFrame:", v2, v3, 0.0, 0.0);
    if (!*(_QWORD *)&v1[v4])
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v2, v3, 0.0, 0.0);
    v7 = *(void **)&v1[v4];
    *(_QWORD *)&v1[v4] = v6;

    v8 = *(void **)&v1[v4];
    if (!v8)
      goto LABEL_8;
    v9 = (void *)objc_opt_self(UIColor);
    v10 = v8;
    v11 = objc_msgSend(v9, "clearColor");
    objc_msgSend(v10, "setBackgroundColor:", v11);

    if (!*(_QWORD *)&v1[v4])
      goto LABEL_8;
  }
  objc_msgSend(v1, "addSubview:");
  v12 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  v14 = *(void **)&v1[v4];
  if (v14)
  {
    v15 = objc_allocWithZone((Class)UITargetedPreview);
    v16 = v14;
    objc_msgSend(v15, "initWithView:parameters:", v16, v12);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10017101C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100171040()
{
  uint64_t v0;

  sub_100170754(v0);
}

uint64_t sub_100171048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t updated;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v2 = sub_10006922C(&qword_100645E08);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v24 - v6;
  v8 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v26 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      return swift_release(a1);
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v26)
        return swift_release(a1);
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v26)
          return swift_release(a1);
        v22 = *(_QWORD *)(v25 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v26)
            return swift_release(a1);
          v22 = *(_QWORD *)(v25 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v11 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    v16 = *(_QWORD *)(a1 + 48);
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v15, v17);
    v18 = *(_QWORD *)(a1 + 56);
    updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo(0);
    sub_10007C6DC(v18 + *(_QWORD *)(*(_QWORD *)(updated - 8) + 72) * v15, (uint64_t)&v7[*(int *)(v2 + 48)], type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    v20 = sub_100172A64((uint64_t)v7, (uint64_t)v5);
    (*(void (**)(uint64_t))&v5[*(int *)(v2 + 48) + *(int *)(updated + 20)])(v20);
    result = sub_10000CB4C((uint64_t)v5, &qword_100645E08);
  }
  v23 = v21 + 4;
  if (v23 >= v26)
    return swift_release(a1);
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v26)
      return swift_release(a1);
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001712C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  _BYTE v31[24];

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v0 + 4, v31, 1, 0);
  v8 = v0[4];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v27 = v0 + 4;
    v10 = (void *)objc_opt_self(NSProgress);
    v11 = v8 + 32;
    v26 = v8;
    swift_bridgeObjectRetain_n(v8, 2);
    do
    {
      sub_100069BD8(v11, (uint64_t)v29);
      v12 = v30;
      v13 = sub_10007E7A0(v29, v30);
      v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v12);
      objc_msgSend(v10, "removeSubscriber:", v14);
      swift_unknownObjectRelease(v14);
      sub_100068588(v29);
      v11 += 32;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n(v26, 2);
    v8 = *v27;
  }
  v0[4] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v8);
  swift_beginAccess(v0 + 2, v29, 1, 0);
  v15 = v0[2];
  v0[2] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v15);
  v16 = sub_10029601C();
  v17 = v16[2];
  v27 = v16;
  if (v17)
  {
    v18 = (char *)v16 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v19 = *(_QWORD *)(v2 + 72);
    v20 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    while (1)
    {
      v20(v7, v18, v1);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v21(v7, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      sub_100171554((uint64_t)v4);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v18 += v19;
      if (!--v17)
        goto LABEL_11;
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_11:
    v21(v7, 1, 1, v1);
  }
  swift_bridgeObjectRelease(v27);
  swift_beginAccess(v0 + 3, v28, 0, 0);
  v22 = v0[3];
  v23 = swift_bridgeObjectRetain(v22);
  sub_100171048(v23);
  return swift_bridgeObjectRelease(v22);
}

uint64_t sub_100171554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  NSURL *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD *v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint8_t *v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _BYTE v47[24];
  _OWORD v48[2];
  uint64_t aBlock[5];
  uint64_t v50;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - v8;
  if (qword_100640DA0 != -1)
    swift_once(&qword_100640DA0, sub_100083308);
  v10 = qword_1006726B0;
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12 = v11(v9, a1, v4);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v10, v13))
  {
    v43 = v11;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v44 = a1;
    v16 = v15;
    aBlock[0] = v15;
    v45 = v2;
    *(_DWORD *)v14 = 136315138;
    v42 = v14 + 4;
    v17 = sub_1000D4B74();
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v4, v17);
    v20 = v19;
    *(_QWORD *)&v48[0] = sub_1000544FC(v18, v19, aBlock);
    v2 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, (char *)v48 + 8);
    v21 = v20;
    v11 = v43;
    swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    _os_log_impl((void *)&_mh_execute_header, v10, v13, "[Testability] subscribing to url: %s", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v22 = v16;
    a1 = v44;
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  v23 = (void *)objc_opt_self(NSProgress);
  URL._bridgeToObjectiveC()(v24);
  v26 = v25;
  v27 = swift_allocObject(&unk_1005CBAD8, 24, 7);
  swift_weakInit(v27 + 16, v2);
  v28 = v46;
  v11(v46, a1, v4);
  v29 = *(unsigned __int8 *)(v5 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = (v6 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject(&unk_1005CBB00, v31 + 8, v29 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v32 + v30, v28, v4);
  *(_QWORD *)(v32 + v31) = v27;
  v33 = swift_allocObject(&unk_1005CBB28, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_100172B64;
  *(_QWORD *)(v33 + 24) = v32;
  aBlock[4] = (uint64_t)sub_100172BD8;
  v50 = v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100400598;
  aBlock[3] = (uint64_t)&unk_1005CBB40;
  v34 = _Block_copy(aBlock);
  swift_release(v50);
  v35 = objc_msgSend(v23, "addSubscriberForFileURL:withPublishingHandler:", v26, v34);
  _Block_release(v34);

  _bridgeAnyObjectToAny(_:)(aBlock, v35);
  swift_unknownObjectRelease(v35);
  sub_100069BD8((uint64_t)aBlock, (uint64_t)v48);
  v36 = (_QWORD *)(v2 + 32);
  swift_beginAccess(v2 + 32, v47, 33, 0);
  v37 = *(_QWORD **)(v2 + 32);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
  *(_QWORD *)(v2 + 32) = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v37 = sub_1001530F0(0, v37[2] + 1, 1, v37);
    *v36 = v37;
  }
  v40 = v37[2];
  v39 = v37[3];
  if (v40 >= v39 >> 1)
  {
    v37 = sub_1001530F0((_QWORD *)(v39 > 1), v40 + 1, 1, v37);
    *v36 = v37;
  }
  v37[2] = v40 + 1;
  sub_100079B28(v48, &v37[4 * v40 + 4]);
  swift_endAccess(v47);
  return sub_100068588(aBlock);
}

uint64_t (*sub_100171968(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v34 - v11;
  v13 = a3 + 16;
  if (qword_100640DA0 != -1)
    swift_once(&qword_100640DA0, sub_100083308);
  v14 = qword_1006726B0;
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15 = v38(v12, a2, v6);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v14, v16))
  {
    v37 = v10;
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v35 = a1;
    v19 = v18;
    v42[0] = v18;
    v36 = a2;
    *(_DWORD *)v17 = 136315138;
    v34 = v17 + 4;
    v20 = sub_1000D4B74();
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v6, v20);
    v23 = v22;
    v40 = sub_1000544FC(v21, v22, v42);
    a2 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    v24 = v23;
    v10 = v37;
    swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl((void *)&_mh_execute_header, v14, v16, "[Testability] subscriber notified of published progress for %s", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v25 = v19;
    a1 = v35;
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  swift_beginAccess(v13, v42, 0, 0);
  Strong = swift_weakLoadStrong(v13);
  if (Strong)
  {
    v27 = Strong;
    sub_100171D6C(a1, a2);
    swift_release(v27);
  }
  v28 = swift_allocObject(&unk_1005CBAD8, 24, 7);
  swift_beginAccess(v13, &v40, 0, 0);
  v29 = swift_weakLoadStrong(v13);
  swift_weakInit(v28 + 16, v29);
  swift_release(v29);
  v38(v10, a2, v6);
  v30 = *(unsigned __int8 *)(v7 + 80);
  v31 = (v30 + 24) & ~v30;
  v32 = swift_allocObject(&unk_1005CBB78, v31 + v39, v30 | 7);
  *(_QWORD *)(v32 + 16) = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v32 + v31, v10, v6);
  return sub_100172C54;
}

uint64_t sub_100171C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = __chkstk_darwin(result);
    swift_beginAccess(v4 + 16, v8, 33, 0);
    result = sub_100172720((uint64_t (*)(unint64_t))sub_100172C84);
    v5 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16);
    if (v5 < result)
    {
      __break(1u);
    }
    else
    {
      sub_10045C0A8(result, v5);
      swift_endAccess(v8);
      swift_beginAccess(v3 + 24, v8, 0, 0);
      v6 = *(_QWORD *)(v3 + 24);
      v7 = swift_bridgeObjectRetain(v6);
      sub_100171048(v7);
      swift_release(v3);
      return swift_bridgeObjectRelease(v6);
    }
  }
  return result;
}

uint64_t sub_100171D6C(id a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  _BYTE v25[24];

  v4 = v2;
  v7 = type metadata accessor for DOCFileOperation(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v23[-v12];
  v24 = a2;
  v14 = (unint64_t *)(v4 + 16);
  swift_beginAccess(v4 + 16, v25, 33, 0);
  v15 = sub_100172720((uint64_t (*)(unint64_t))sub_1001724DC);
  v16 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
  if (v16 < v15)
  {
    __break(1u);
LABEL_9:
    v3 = sub_100081B70(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v14 = v3;
    goto LABEL_4;
  }
  sub_10045C0A8(v15, v16);
  swift_endAccess(v25);
  if (!a1)
    goto LABEL_7;
  a1 = a1;
  sub_100295B1C(a1, (uint64_t)v13);
  sub_10007C6DC((uint64_t)v13, (uint64_t)v11, type metadata accessor for DOCFileOperation);
  swift_beginAccess(v4 + 16, v25, 33, 0);
  v3 = *v14;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
  *v14 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_9;
LABEL_4:
  v19 = *(_QWORD *)(v3 + 16);
  v18 = *(_QWORD *)(v3 + 24);
  if (v19 >= v18 >> 1)
  {
    v3 = sub_100081B70(v18 > 1, v19 + 1, 1, v3);
    *v14 = v3;
  }
  *(_QWORD *)(v3 + 16) = v19 + 1;
  sub_1000E828C((uint64_t)v11, v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v19);
  swift_endAccess(v25);

  sub_100172A28((uint64_t)v13);
LABEL_7:
  swift_beginAccess(v4 + 24, v25, 0, 0);
  v20 = *(_QWORD *)(v4 + 24);
  v21 = swift_bridgeObjectRetain(v20);
  sub_100171048(v21);
  return swift_bridgeObjectRelease(v20);
}

uint64_t sub_100171F64()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v17;

  v0 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSProgress.publishedFileURL.getter(v2);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10000CB4C((uint64_t)v2, &qword_100643470);
    URL.path.getter(v5);
    v7 = v6;
LABEL_9:
    swift_bridgeObjectRelease(v7);
    v15 = 0;
    return v15 & 1;
  }
  v8 = ((uint64_t (*)(void))URL.path.getter)();
  v10 = v9;
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  v12 = URL.path.getter(v11);
  v7 = v13;
  if (!v10)
    goto LABEL_9;
  if (v8 == v12 && v10 == v13)
  {
    swift_bridgeObjectRelease_n(v10, 2);
    v15 = 1;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v13, 0);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v7);
  }
  return v15 & 1;
}

uint64_t sub_1001720D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = (void *)result;
    if (qword_100640DE0 != -1)
      swift_once(&qword_100640DE0, sub_10008C490);
    sub_1001712C0();
    objc_msgSend(v6, "setEnabled:", 1);
    if (qword_100640F38 != -1)
      swift_once(&qword_100640F38, sub_100295E48);
    objc_msgSend(a3, "postNotificationName:object:", qword_100672AF8, 0);
    return swift_release(v6);
  }
  return result;
}

uint64_t DOCPreviewRouter.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 17, 7);
}

uint64_t *sub_1001721C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain(v11);
  return a1;
}

uint64_t sub_100172258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t sub_1001722CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100172328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_100172390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10017240C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100172484()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001724A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001724D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001720D0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001724DC()
{
  return sub_100171F64() & 1;
}

void sub_1001724F8(uint64_t (*a1)(__int128 *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;

  v3 = v2;
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(v4);
    v7 = 0;
    for (i = 4; ; i += 2)
    {
      v25 = *(_OWORD *)&v4[i];
      v9 = v25;
      swift_unknownObjectRetain(v25);
      v10 = a1(&v25);
      if (v3)
      {
        swift_bridgeObjectRelease(v4);
        swift_unknownObjectRelease(v9);
        return;
      }
      v11 = v10;
      swift_unknownObjectRelease(v9);
      if ((v11 & 1) != 0)
        break;
      if (-v5 == --v7)
      {
        swift_bridgeObjectRelease(v4);
        return;
      }
    }
    swift_bridgeObjectRelease(v4);
    v12 = -v7;
    v13 = 1 - v7;
    if (!__OFADD__(-v7, 1))
    {
      v14 = v4[2];
      if (v13 == v14)
        return;
      v15 = i * 8 + 16;
      while (v13 < v14)
      {
        v25 = *(_OWORD *)((char *)v4 + v15);
        v18 = v25;
        swift_unknownObjectRetain(v25);
        v19 = a1(&v25);
        swift_unknownObjectRelease(v18);
        if ((v19 & 1) == 0)
        {
          if (v13 != v12)
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_28;
            v20 = v4[2];
            if (v12 >= v20)
              goto LABEL_29;
            if (v13 >= v20)
              goto LABEL_30;
            v23 = *(_OWORD *)&v4[2 * v12 + 4];
            v24 = *(_OWORD *)((char *)v4 + v15);
            swift_unknownObjectRetain(v4[2 * v12 + 4]);
            swift_unknownObjectRetain(v24);
            if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
              v4 = sub_100452E08(v4);
            v21 = &v4[2 * v12];
            v22 = v21[4];
            *((_OWORD *)v21 + 2) = v24;
            swift_unknownObjectRelease(v22);
            if (v13 >= v4[2])
              goto LABEL_31;
            v16 = *(_QWORD *)((char *)v4 + v15);
            *(_OWORD *)((char *)v4 + v15) = v23;
            swift_unknownObjectRelease(v16);
            *v26 = v4;
          }
          if (__OFADD__(v12++, 1))
            goto LABEL_27;
        }
        ++v13;
        v14 = v4[2];
        v15 += 16;
        if (v13 == v14)
          return;
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_100172720(uint64_t (*a1)(unint64_t))
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v1;
  v5 = type metadata accessor for DOCFileOperation(0);
  v6 = __chkstk_darwin(v5);
  v36 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v35 = (uint64_t)&v30 - v9;
  __chkstk_darwin(v8);
  v37 = (uint64_t)&v30 - v11;
  v12 = *v1;
  v13 = *(_QWORD *)(*v1 + 16);
  if (!v13)
    return 0;
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain(*v1);
  v16 = 0;
  v33 = v14;
  while (1)
  {
    v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease(v12);
      return v16;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease(v12);
      return *(_QWORD *)(v12 + 16);
    }
  }
  result = swift_bridgeObjectRelease(v12);
  if (!__OFADD__(v16, 1))
  {
    v19 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v19)
      return v16;
    v20 = v15 + v14;
    v21 = v16 + 1;
    v31 = v1;
    v34 = v15;
    while (v21 < v19)
    {
      v22 = v3;
      v38 = v20;
      v23 = v37;
      sub_10007C6DC(v12 + v20, v37, type metadata accessor for DOCFileOperation);
      v24 = a1(v23);
      result = sub_100172A28(v23);
      if ((v24 & 1) != 0)
      {
        v3 = v22;
        v25 = v34;
      }
      else
      {
        v3 = v22;
        v25 = v34;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v26 = *v3;
          v27 = *(_QWORD *)(*v3 + 16);
          if (v16 >= v27)
            goto LABEL_33;
          v32 = v16 * v34;
          result = sub_10007C6DC(v26 + v33 + v16 * v34, v35, type metadata accessor for DOCFileOperation);
          if (v21 >= v27)
            goto LABEL_34;
          sub_10007C6DC(v26 + v38, v36, type metadata accessor for DOCFileOperation);
          result = swift_isUniquelyReferenced_nonNull_native(v26);
          v3 = v31;
          *v31 = v26;
          if ((result & 1) == 0)
          {
            result = sub_100452E44(v26);
            v26 = result;
            *v3 = result;
          }
          if (v16 >= *(_QWORD *)(v26 + 16))
            goto LABEL_35;
          result = sub_100172AAC(v36, v26 + v33 + v32);
          if (v21 >= *(_QWORD *)(*v3 + 16))
            goto LABEL_36;
          result = sub_100172AAC(v35, *v3 + v38);
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_31;
      }
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_30;
      v12 = *v3;
      v19 = *(_QWORD *)(*v3 + 16);
      ++v21;
      v20 = v38 + v25;
      if (v29 == v19)
        return v16;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100172A28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCFileOperation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100172A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100645E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100172AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCFileOperation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100172AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t (*sub_100172B64(void *a1))()
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100171968(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100172BB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100172BD8(uint64_t a1)
{
  uint64_t v1;

  return sub_100400570(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100172BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100172C54()
{
  uint64_t v0;

  type metadata accessor for URL(0);
  return sub_100171C70(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100172C84()
{
  return sub_1001724DC() & 1;
}

uint64_t sub_100172CA8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  sub_100173938((uint64_t)v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100172D04()
{
  return type metadata accessor for DOCSidebarCellAccessoryItem(0);
}

uint64_t type metadata accessor for DOCSidebarCellAccessoryItem(uint64_t a1)
{
  uint64_t result;

  result = qword_100645E40;
  if (!qword_100645E40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCSidebarCellAccessoryItem);
  return result;
}

void sub_100172D48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1004DC100;
  v4[1] = &unk_1004DC118;
  sub_10008BB84(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for () + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_100172DE4(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 208);
}

void sub_100172E24()
{
  uint64_t v0;

}

uint64_t sub_100172E34()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100173938(v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider + 8));

  return v0;
}

uint64_t sub_100172E94()
{
  uint64_t v0;

  sub_100172E34();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for DOCSidebarCellCustomAccessoryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCSidebarCellCustomAccessoryItem);
}

uint64_t sub_100172EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)@<X0>(uint64_t@<X8>);
  uint64_t v23;
  uint64_t v24;

  v2 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICellAccessory(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v8);
  v15 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  swift_bridgeObjectRetain(a1);
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v4, 0);
  static UICellAccessory.disclosureIndicator(displayed:options:)(v11, v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = type metadata accessor for DOCSidebarCellAccessoryItem(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  *(_BYTE *)(v17 + 32) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v17 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v12);
  *(_QWORD *)(v17 + 16) = 0x6E6F7276656863;
  *(_QWORD *)(v17 + 24) = 0xE700000000000000;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = a1;
  *(_BYTE *)(v17 + 32) = 1;
  v18 = *(unsigned __int8 *)(v13 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_1005CBCB0, v19 + v14, v18 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20 + v19, (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v21 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v17
                                                   + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *v21 = sub_1001733A4;
  v21[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v20;
  return v17;
}

uint64_t sub_100173130()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)@<X0>(uint64_t@<X8>);
  uint64_t v22;
  uint64_t v23;

  v0 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UICellAccessory.DeleteOptions(0);
  v3 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v6);
  v14 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
  UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v2, 0, 0);
  static UICellAccessory.delete(displayed:options:actionHandler:)(v9, v5, 0, 0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = type metadata accessor for DOCSidebarCellAccessoryItem(0);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_BYTE *)(v16 + 32) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v10);
  *(_QWORD *)(v16 + 16) = 0x6574656C6564;
  *(_QWORD *)(v16 + 24) = 0xE600000000000000;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_1005BF3A0;
  *(_BYTE *)(v16 + 32) = 0;
  v17 = *(unsigned __int8 *)(v11 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_1005CBC60, v18 + v12, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, v13, v10);
  v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v16
                                                   + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *v20 = sub_1001733A4;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v19;
  return v16;
}

uint64_t sub_1001733A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)@<X0>(uint64_t@<X8>);
  uint64_t v22;
  uint64_t v23;

  v0 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UICellAccessory.ReorderOptions(0);
  v3 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v6);
  v14 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
  UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v2, 0, 2);
  static UICellAccessory.reorder(displayed:options:)(v9, v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = type metadata accessor for DOCSidebarCellAccessoryItem(0);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_BYTE *)(v16 + 32) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v10);
  *(_QWORD *)(v16 + 16) = 0x726564726F6572;
  *(_QWORD *)(v16 + 24) = 0xE700000000000000;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_1005BF3D0;
  *(_BYTE *)(v16 + 32) = 1;
  v17 = *(unsigned __int8 *)(v11 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_1005CBC88, v18 + v12, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, v13, v10);
  v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v16
                                                   + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *v20 = sub_1001733A4;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v19;
  return v16;
}

uint64_t sub_10017361C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)@<X0>(uint64_t@<X8>);
  uint64_t v28;
  uint64_t v29;

  v0 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100645FB0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0, v4);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICellAccessory(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  v18 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v11 + 104))(v13, enum case for UICellAccessory.DisplayedState.always(_:), v10, v17);
  v19 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
  v20 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v2, 1, 1, v20);
  UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v6, 2, v2, 0);
  static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v13, v9, 0, 0);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = type metadata accessor for DOCSidebarCellAccessoryItem(0);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_BYTE *)(v22 + 32) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v22 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v14);
  *(_QWORD *)(v22 + 16) = 0xD000000000000011;
  *(_QWORD *)(v22 + 24) = 0x8000000100513870;
  *(_QWORD *)(v22 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_1005BF9D8;
  *(_BYTE *)(v22 + 32) = 1;
  v23 = *(unsigned __int8 *)(v15 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_1005CBCD8, v24 + v16, v23 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v25 + v24, v18, v14);
  v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v22
                                                   + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *v26 = sub_1001733A4;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v25;
  return v22;
}

uint64_t sub_1001738F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UICellAccessory(0);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t sub_100173938(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100645FB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10017397C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15;
  id v17;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a3)
         : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v17 = v8;
      v11 = a1(&v17);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v13 & 1;
      }
      v12 = v11;

      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        v13 = 1;
        return v13 & 1;
      }
      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  v13 = 0;
  return v13 & 1;
}

BOOL sub_100173AAC(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  return sub_100173AD4(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for Date, (uint64_t *)&unk_100643900);
}

BOOL sub_100173AD4(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  int v19;
  BOOL v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char v24;
  char v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  _BOOL8 v34;
  uint64_t (*v35)(char *);
  uint64_t v36;

  v7 = v5;
  v34 = a2;
  v35 = a1;
  v36 = a4(0);
  v9 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v11 = (char *)&v28 - v10;
  v12 = sub_10006922C(a5);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    v16 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v31 = *(_QWORD *)(v9 + 72);
    v32 = v11;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v29 = a3;
    swift_bridgeObjectRetain(a3);
    while (1)
    {
      v17 = v36;
      v33(v14, v16, v36);
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v18(v14, 0, 1, v17);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v17);
      v20 = v19 != 1;
      if (v19 == 1)
      {
        a3 = v29;
        goto LABEL_13;
      }
      v30 = 1;
      v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v22 = v9;
      v23 = v32;
      v21(v32, v14, v17);
      v20 = v34;
      v24 = v35(v23);
      if (v7)
      {
        (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v17);
        swift_bridgeObjectRelease(v29);
        return v20;
      }
      v25 = v24;
      v26 = v18;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v17);
      if ((v25 & 1) != 0)
        break;
      v16 += v31;
      --v15;
      v7 = 0;
      v9 = v22;
      if (!v15)
      {
        a3 = v29;
        goto LABEL_9;
      }
    }
    a3 = v29;
    v20 = v30;
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain(a3);
LABEL_9:
    v26(v14, 1, 1, v36);
    v20 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease(a3);
  return v20;
}

id sub_100173CF8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id result;
  void *v14;
  id v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  uint64_t v34;
  void *v35;
  double v36;
  double v37;
  void *v38;
  CGFloat v39;
  CGFloat v40;
  __n128 v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  id v52;
  uint64_t v53;
  char *v54;
  CGAffineTransform v55;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  result = objc_msgSend(v2, "loadViewIfNeeded");
  v14 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v14)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v15 = v14;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v15, "cellForItemAtIndexPath:", isa);

  if (!v17)
    return v11;
  v18 = type metadata accessor for DOCItemCollectionCell();
  v19 = swift_dynamicCastClass(v17, v18);
  if (!v19)
  {

    return v11;
  }
  v20 = (void *)v19;
  v54 = v10;
  v21 = *(id *)(v19 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
  v22 = objc_msgSend(v21, "_continuousCornerRadius");
  if (v23 > 0.0)
  {
    objc_msgSend(v21, "bounds");
    objc_msgSend(v20, "convertRect:fromCoordinateSpace:", v21);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;
    objc_msgSend(v21, "_continuousCornerRadius");
    v33 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v25, v27, v29, v31, v32);
    objc_msgSend(v11, "setVisiblePath:", v33);

LABEL_17:
    v42 = objc_msgSend(v11, "visiblePath");

    if (!v42)
    {
      objc_msgSend(v21, "bounds");
      objc_msgSend(v20, "convertRect:fromCoordinateSpace:", v21);
      v44 = v43;
      v46 = v45;
      v48 = v47;
      v50 = v49;
      objc_msgSend(v21, "_continuousCornerRadius");
      v52 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v44, v46, v48, v50, v51);
      objc_msgSend(v11, "setVisiblePath:", v52);

    }
    return v11;
  }
  if (IndexPath.count.getter(v22) != 2)
    goto LABEL_12;
  result = *(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result)
    goto LABEL_22;
  if ((objc_msgSend(result, "isGathering") & 1) == 0
    && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_100195148(a1) & 1) != 0)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_14:
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    goto LABEL_14;
  v34 = (uint64_t)v54;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v54, v6, v7);
  result = (id)sub_10017A754(v34, 0);
  if (result)
  {
    v35 = result;
    objc_msgSend(v21, "bounds");
    v38 = sub_1001BD5E0(v35, v36, v37);
    objc_msgSend(v21, "bounds");
    objc_msgSend(v20, "convertPoint:fromCoordinateSpace:", v21);
    CGAffineTransformMakeTranslation(&v55, v39, v40);
    objc_msgSend(v38, "applyTransform:", &v55);
    objc_msgSend(v11, "setVisiblePath:", v38);

    v41 = swift_unknownObjectRelease(v35);
    (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v34, v7, v41);
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *sub_1001741D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  void *result;
  char v9;

  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_100452E6C(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    sub_1000E85C4((__int128 *)&v5[5 * a1 + 4], a2);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = memmove(&v5[5 * a1 + 4], &v5[5 * a1 + 9], 40 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  v9 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001742C8(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_100452EA8(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[4 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001743BC(uint64_t a1, uint64_t a2)
{
  return sub_100045810(a1, a2, (unint64_t *)&qword_1006419B0, FPItem_ptr);
}

uint64_t sub_1001743D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  v9 = sub_10005A360(&qword_1006418E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v10 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v9) & 1) == 0)
  {
    ++v10;
    v7 += v8;
    if (v2 == v10)
      return 0;
  }
  return v10;
}

void sub_10017449C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v5 = *(id *)(a2 + 32);
      }
      v6 = v5;
      type metadata accessor for DOCBrowserContainerController();
      v7 = static NSObject.== infix(_:_:)(v6, a1);

      if ((v7 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v12 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v12 == v4)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v12 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v9 = *(id *)(a2 + 32 + 8 * v12);
          }
          v10 = v9;
          v11 = static NSObject.== infix(_:_:)(v9, a1);

          if ((v11 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v13 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(a2);
        if (v4)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_100174624(uint64_t a1, uint64_t a2)
{
  return sub_100045810(a1, a2, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
}

uint64_t sub_100174638(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  v9 = v7 == a1 && v8 == a2;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0) & 1) != 0)
    return 0;
  v11 = 0;
  v12 = a3 + 7;
  v13 = 1;
  while (1)
  {
    if (v3 == v13)
      return 0;
    ++v11;
    v14 = *(v12 - 1);
    v15 = *v12;
    if (v14 == a1 && v15 == a2)
      break;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0);
    result = v13++;
    v12 += 2;
    if ((v17 & 1) != 0)
      return result;
  }
  return v11;
}

uint64_t sub_10017471C(uint64_t a1, uint64_t a2)
{
  return sub_100045810(a1, a2, (unint64_t *)&unk_100646CB0, FPTag_ptr);
}

uint64_t sub_100174730(uint64_t a1, uint64_t a2)
{
  return sub_100045810(a1, a2, (unint64_t *)&unk_100641970, FINode_ptr);
}

void sub_100174744(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  char *v31;
  int v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  char v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t (*v62)(char *, char *, uint64_t);
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;

  v51 = a4;
  v57 = a3;
  v63 = a2;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = (char *)&v48 - v10;
  __chkstk_darwin(v11);
  v55 = (char *)&v48 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - v14;
  v16 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v16);
  v61 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  v21 = *(_QWORD *)(a1 + 16);
  v50 = a1;
  if (v21)
  {
    v49 = v8;
    v22 = (char *)(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
    v58 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    v56 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
    v60 = *(_QWORD *)(v6 + 72);
    v64 = v6;
    v23 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain(a1);
    v59 = v20;
    v54 = v15;
    v48 = v23;
    while (1)
    {
      v23(v20, v22, v5);
      v26 = v64;
      v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
      v27(v20, 0, 1, v5);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      if (v28(v20, 1, v5) == 1)
        goto LABEL_25;
      v62 = *(uint64_t (**)(char *, char *, uint64_t))(v26 + 32);
      v29 = v62(v15, v20, v5);
      if (IndexPath.count.getter(v29) != 2)
      {
LABEL_3:
        v24 = (uint64_t)v61;
        v27(v61, 1, 1, v5);
LABEL_4:
        sub_10000CB4C(v24, (uint64_t *)&unk_100642710);
        v25 = *(void (**)(uint64_t, uint64_t, __n128))(v64 + 8);
        goto LABEL_5;
      }
      v30 = *(void **)&v63[v58];
      if (!v30)
      {
        __break(1u);
        return;
      }
      if ((objc_msgSend(v30, "isGathering") & 1) == 0 && (v63[v56] & 1) != 0)
        break;
LABEL_20:
      v24 = (uint64_t)v61;
      v23(v61, v15, v5);
      v27((char *)v24, 0, 1, v5);
      if (v28((char *)v24, 1, v5) == 1)
        goto LABEL_4;
      v37 = (uint64_t)v55;
      v38 = (void (*)(uint64_t, char *, uint64_t, __n128))v62;
      v62(v55, (char *)v24, v5);
      v39 = sub_10017A754(v37, 0);
      v65 = v39;
      v40 = sub_10006922C(&qword_100652EB0);
      v41 = Optional.isEqualTo(node:)(v57, v40);
      v42 = swift_unknownObjectRelease(v39);
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v64 + 8);
      v43 = v37;
      v15 = v54;
      v25(v43, v5, v42);
      if ((v41 & 1) != 0)
      {
        v44 = swift_bridgeObjectRelease(v50);
        v45 = v51;
        v38((uint64_t)v51, v15, v5, v44);
        v46 = v45;
        v47 = 0;
        goto LABEL_26;
      }
LABEL_5:
      ((void (*)(char *, uint64_t))v25)(v15, v5);
      v20 = v59;
      v22 += v60;
      if (!--v21)
        goto LABEL_24;
    }
    if ((objc_msgSend(v30, "isGathering") & 1) != 0)
    {
      v31 = v52;
      v23(v52, v15, v5);
    }
    else
    {
      v32 = v63[v56];
      v31 = v52;
      v33 = v23(v52, v15, v5);
      if (v32 == 1)
      {
        LODWORD(v53) = IndexPath.item.getter(v33) == 0;
        goto LABEL_16;
      }
    }
    LODWORD(v53) = 0;
LABEL_16:
    v34 = *(void (**)(char *, uint64_t))(v64 + 8);
    v34(v31, v5);
    v35 = v49;
    v36 = v48(v49, v15, v5);
    if ((_DWORD)v53)
    {
      v53 = IndexPath.section.getter(v36);
      v34(v35, v5);
      if (!v53)
        goto LABEL_3;
    }
    else
    {
      v34(v35, v5);
    }
    goto LABEL_20;
  }
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain(a1);
LABEL_24:
  v27(v20, 1, 1, v5);
LABEL_25:
  swift_bridgeObjectRelease(v50);
  v46 = v51;
  v47 = 1;
LABEL_26:
  v27(v46, v47, 1, v5);

  swift_unknownObjectRelease(v57);
}

uint64_t sub_100174BD4(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_17;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  while (v7)
  {
    v8 = 4;
    while (1)
    {
      v9 = v8 - 4;
      if ((a3 & 0xC000000000000001) == 0)
        break;
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3);
      v11 = __OFADD__(v9, 1);
      v12 = v8 - 3;
      if (v11)
        goto LABEL_16;
LABEL_9:
      v16 = v10;
      v13 = a1(&v16);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);
        swift_unknownObjectRelease(v10);
        return v10;
      }
      if ((v13 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }
      swift_unknownObjectRelease(v10);
      ++v8;
      if (v12 == v7)
        goto LABEL_12;
    }
    v10 = *(_QWORD *)(a3 + 8 * v8);
    swift_unknownObjectRetain(v10);
    v11 = __OFADD__(v9, 1);
    v12 = v8 - 3;
    if (!v11)
      goto LABEL_9;
LABEL_16:
    __break(1u);
LABEL_17:
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
LABEL_12:
  swift_bridgeObjectRelease(a3);
  return 0;
}

void *sub_100174D08(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  id v9;
  void *v10;
  char v11;
  uint64_t v13;
  id v14;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_19;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  while (v7)
  {
    while (__OFSUB__(v7--, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      if (a3 < 0)
        v13 = a3;
      else
        v13 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v7 = _CocoaArrayWrapper.endIndex.getter(v13);
      if (!v7)
        goto LABEL_12;
    }
    if ((a3 & 0xC000000000000001) != 0)
    {
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a3);
      goto LABEL_9;
    }
    if ((v7 & 0x8000000000000000) != 0)
      goto LABEL_17;
    if (v7 >= *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_18;
    v9 = *(id *)(a3 + 32 + 8 * v7);
LABEL_9:
    v10 = v9;
    v14 = v9;
    v11 = a1(&v14);
    if (v4)
    {
      swift_bridgeObjectRelease(a3);

      return v10;
    }
    if ((v11 & 1) != 0)
    {
      swift_bridgeObjectRelease(a3);
      return v10;
    }

  }
LABEL_12:
  swift_bridgeObjectRelease(a3);
  return 0;
}

uint64_t *NSNotificationName.DOCItemCollectionViewDidLayoutSubviews.unsafeMutableAddressor()
{
  if (qword_100640E08 != -1)
    swift_once(&qword_100640E08, sub_100086B74);
  return &static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews;
}

uint64_t sub_100174E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10000CB4C(a1, &qword_1006438A0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10, v8);
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1005CC6B0, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_100646A40, v17);
}

uint64_t sub_100174FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10000CB4C(a1, &qword_1006438A0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1005CDE98, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  v17 = sub_10006922C((uint64_t *)&unk_100646C80);
  if (v14 | v12)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v12;
    v20[3] = v14;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v8, v18, v17, &unk_100646C78, v16);
}

uint64_t sub_100175118(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, void *);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  swift_retain(v9);
  v13 = a3;
  v10(v8, a3);
  swift_release(v9);

  return sub_10000CB4C((uint64_t)v8, &qword_100643470);
}

uint64_t sub_100175218(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = 0;
  if (v7)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a3);
      }
      else
      {
        v9 = *(_QWORD *)(a3 + 8 * v8 + 32);
        swift_retain(v9);
      }
      v14 = v9;
      v10 = a1(&v14);
      swift_release(v9);
      if (v4 || (v10 & 1) != 0)
        break;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_14:
        if (a3 < 0)
          v12 = a3;
        else
          v12 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v12);
        swift_bridgeObjectRelease(a3);
        v8 = 0;
        if (!v7)
          return v8;
      }
      else
      {
        ++v8;
        if (v11 == v7)
          return 0;
      }
    }
  }
  return v8;
}

NSString sub_100175334()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1006726F8 = (uint64_t)result;
  return result;
}

id static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews.getter()
{
  if (qword_100640E08 != -1)
    swift_once(&qword_100640E08, sub_100086B74);
  return (id)static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews;
}

NSString sub_1001753A8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100672720 = (uint64_t)result;
  return result;
}

NSString sub_1001753DC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100672730 = (uint64_t)result;
  return result;
}

uint64_t sub_100175410()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::String v14;
  void *v15;

  _StringGuts.grow(_:)(65);
  v1._object = (void *)0x80000001005151E0;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  v2._countAndFlagsBits = sub_100175584();
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0xD000000000000014;
  v4._object = (void *)0x8000000100515200;
  String.append(_:)(v4);
  v5 = type metadata accessor for ScrollPositionInfo(0);
  if (*(_BYTE *)(v0 + *(int *)(v5 + 20)))
    v6 = 1702195828;
  else
    v6 = 0x65736C6166;
  if (*(_BYTE *)(v0 + *(int *)(v5 + 20)))
    v7 = 0xE400000000000000;
  else
    v7 = 0xE500000000000000;
  v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease(v7);
  v9._countAndFlagsBits = 0xD000000000000016;
  v9._object = (void *)0x8000000100515220;
  String.append(_:)(v9);
  v10 = *(_QWORD *)(v0 + *(int *)(v5 + 24));
  v11 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v12 = sub_1000AEF1C();
  v13 = swift_bridgeObjectRetain(v10);
  v14._countAndFlagsBits = Dictionary.description.getter(v13, &type metadata for DOCCollectionSection, v11, v12);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v15);
  return 0;
}

uint64_t sub_100175584()
{
  uint64_t *v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  uint64_t v14;
  _QWORD v15[2];

  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  v1._countAndFlagsBits = 0x203A65646F6E28;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  v14 = *v0;
  v2 = sub_10006922C((uint64_t *)&unk_1006424B0);
  _print_unlocked<A, B>(_:_:)(&v14, v15, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v3._countAndFlagsBits = 0x507865646E69203BLL;
  v3._object = (void *)0xED0000203A687461;
  String.append(_:)(v3);
  v4 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._object = (void *)0x8000000100515240;
  v9._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v9);
  v10._countAndFlagsBits = Double.description.getter(*(double *)((char *)v0 + *(int *)(v4 + 24)));
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return v15[0];
}

uint64_t sub_1001756FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  _QWORD v13[2];
  _QWORD v14[2];

  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v8._countAndFlagsBits = 0x5468637261657328;
  v8._object = (void *)0xED0000203A6D7265;
  String.append(_:)(v8);
  swift_bridgeObjectRetain(a2);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(a2);
  v10._countAndFlagsBits = 0x3A65706F6373203BLL;
  v10._object = (void *)0xE800000000000000;
  String.append(_:)(v10);
  v13[0] = a3;
  v13[1] = a4;
  v11 = sub_10006922C(&qword_100644C00);
  _print_unlocked<A, B>(_:_:)(v13, v14, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v14[0];
}

uint64_t sub_1001757F0()
{
  uint64_t v0;

  return sub_1001756FC(*(_QWORD *)v0, *(void **)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_10017581C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDragMonitor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100175858()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks, v13, 1, 0);
  v2 = *v1;
  v3 = *v1 + 56;
  v4 = 1 << *(_BYTE *)(*v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(*v1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n(*v1, 2);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v7)
      goto LABEL_25;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v7)
        goto LABEL_25;
      v10 = *(_QWORD *)(v3 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v7)
          goto LABEL_25;
        v10 = *(_QWORD *)(v3 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v7)
            goto LABEL_25;
          v10 = *(_QWORD *)(v3 + 8 * v8);
          if (!v10)
          {
            v8 = v9 + 4;
            if (v9 + 4 >= v7)
              goto LABEL_25;
            v10 = *(_QWORD *)(v3 + 8 * v8);
            if (!v10)
              break;
          }
        }
      }
    }
LABEL_24:
    v6 = (v10 - 1) & v10;
LABEL_5:
    Task.cancel()();
  }
  v11 = v9 + 5;
  if (v11 >= v7)
  {
LABEL_25:
    swift_release(v2);
    swift_bridgeObjectRelease(v2);
    v12 = *v1;
    *v1 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v12);
    return;
  }
  v10 = *(_QWORD *)(v3 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v7)
      goto LABEL_25;
    v10 = *(_QWORD *)(v3 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
}

void sub_100175A34()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  int v4;
  char *v5;
  void *v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD aBlock[5];
  uint64_t v19;
  char v20[24];

  v1 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "sceneIdentifier");
  v3 = objc_msgSend(v1, "globalTabbedBrowserControllerForIdentifier:", v2);

  if (v3)
  {
    v17 = objc_msgSend(v3, "effectiveFullBrowser");

    if (v17)
    {
      v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus);
      v5 = (char *)objc_msgSend(v17, "effectiveBrowserViewController");
      if (v5)
      {
        v6 = v5;
        v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v20, 0, 0);
        v8 = *v7;
        if (*v7
          && (v9 = type metadata accessor for DOCItemCollectionViewController(0),
              (v10 = swift_dynamicCastClass(v8, v9)) != 0))
        {
          v11 = v10;
          v12 = v8;

          v13 = swift_allocObject(&unk_1005CC6D8, 25, 7);
          *(_QWORD *)(v13 + 16) = v11;
          *(_BYTE *)(v13 + 24) = v4 == 1;
          aBlock[4] = sub_1001CEFDC;
          v19 = v13;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10004A82C;
          aBlock[3] = &unk_1005CC6F0;
          v14 = _Block_copy(aBlock);
          v15 = v19;
          v16 = v12;
          swift_release(v15);
          DOCRunInMainThread(v14);
          _Block_release(v14);

        }
        else
        {

        }
      }
      else
      {

      }
    }
  }
}

void sub_100175C20(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  char *v30;
  void *v31;
  id v32;
  Class isa;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  int v39;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  id v49;
  Class v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char v68[24];

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v67 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (char *)&v60 - v7;
  __chkstk_darwin(v8);
  v61 = (char *)&v60 - v9;
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v64 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v60 - v16;
  v18 = sub_10006922C((uint64_t *)&unk_100649140);
  __chkstk_darwin(v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v1;
  v21 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath];
  v60 = 0;
  swift_beginAccess(v21, v68, 0, 0);
  v22 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_1000271D4(v21, (uint64_t)v20, (uint64_t *)&unk_100642710);
  v66 = a1;
  sub_1000271D4(a1, v22, (uint64_t *)&unk_100642710);
  v23 = v4;
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v24((uint64_t)v20, 1, v3) == 1)
  {
    if (v24(v22, 1, v3) == 1)
    {
      sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_100642710);
      return;
    }
    goto LABEL_6;
  }
  sub_1000271D4((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_100642710);
  if (v24(v22, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v3);
LABEL_6:
    v63 = v21;
    sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_100649140);
    goto LABEL_8;
  }
  v63 = v21;
  v25 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v61, v22, v3);
  v26 = sub_10005A360((unint64_t *)&qword_100649150, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v27 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v25, v3, v26);
  v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v25, v3);
  v28(v17, v3);
  sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_100642710);
  if ((v27 & 1) != 0)
    return;
LABEL_8:
  sub_1000271D4(v66, (uint64_t)v14, (uint64_t *)&unk_100642710);
  if (v24((uint64_t)v14, 1, v3) == 1)
  {
    sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100642710);
    goto LABEL_26;
  }
  v29 = v62;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v62, v14, v3);
  v30 = v65;
  objc_msgSend(v65, "loadViewIfNeeded");
  v31 = *(void **)&v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v31)
  {
    __break(1u);
LABEL_45:
    __break(1u);
    return;
  }
  v32 = v31;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(v32, "cellForItemAtIndexPath:", isa);

  if (!v34)
    goto LABEL_25;
  v35 = type metadata accessor for DOCItemCollectionCell();
  v36 = (_QWORD *)swift_dynamicCastClass(v34, v35);
  if (!v36)
  {

LABEL_25:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v3);
    goto LABEL_26;
  }
  v37 = (*(uint64_t (**)(void))((swift_isaMask & *v36) + 0x1F8))();
  if (v37)
  {
    v38 = (char *)v37;
    v39 = *(unsigned __int8 *)(v37 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping);
    *(_BYTE *)(v37 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping) = 0;
    if (v39 == 2 || (v39 & 1) != 0)
    {
      v41 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      v42 = *(_QWORD *)(v37 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
      if ((v42 & 0x800) == 0)
      {
        v42 |= 0x800uLL;
        *(_QWORD *)(v37 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v42;
      }
      if (!*(_QWORD *)(v37 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
        && !sub_10007BAFC())
      {
        *(_QWORD *)&v38[v41] = 0;
        v43 = objc_autoreleasePoolPush();
        v44 = v42;
        v45 = v60;
        sub_10006D2D4(v44, (uint64_t)v38);
        v60 = v45;
        objc_autoreleasePoolPop(v43);
      }
    }

    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v3);

LABEL_26:
  v46 = v64;
  sub_1000271D4(v63, v64, (uint64_t *)&unk_100642710);
  if (v24(v46, 1, v3) == 1)
  {
    sub_10000CB4C(v46, (uint64_t *)&unk_100642710);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v67, v46, v3);
  v47 = v65;
  objc_msgSend(v65, "loadViewIfNeeded");
  v48 = *(void **)&v47[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v48)
    goto LABEL_45;
  v49 = v48;
  v50 = IndexPath._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(v49, "cellForItemAtIndexPath:", v50);

  if (v51)
  {
    v52 = type metadata accessor for DOCItemCollectionCell();
    v53 = (_QWORD *)swift_dynamicCastClass(v51, v52);
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))((swift_isaMask & *v53) + 0x1F8))();
      if (!v54)
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v67, v3);

        return;
      }
      v55 = (char *)v54;
      v56 = *(_BYTE *)(v54 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping);
      *(_BYTE *)(v54 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping) = 1;
      if ((v56 & 1) == 0)
      {
        v57 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
        v58 = *(_QWORD *)(v54 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
        if ((v58 & 0x800) == 0)
        {
          v58 |= 0x800uLL;
          *(_QWORD *)(v54 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v58;
        }
        if (!*(_QWORD *)(v54 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
          && !sub_10007BAFC())
        {
          *(_QWORD *)&v55[v57] = 0;
          v59 = objc_autoreleasePoolPush();
          sub_10006D2D4(v58, (uint64_t)v55);
          objc_autoreleasePoolPop(v59);
        }
      }

    }
    else
    {

    }
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v67, v3);
}

uint64_t DOCItemCollectionViewController.isUserInteractionEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled, v3, 0, 0);
  return *v1;
}

void (*DOCItemCollectionViewController.isUserInteractionEnabled.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1001F6B5C((uint64_t)v3);
  return sub_100176304;
}

void sub_100176304(_QWORD *a1, char a2)
{
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  id v6;

  v3 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0)
  {
    v4 = (_BYTE *)(v3[4] + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled);
    swift_beginAccess(v4, v3, 0, 0);
    if ((*v4 & 1) == 0)
    {
      v5 = v3[4];
      v6 = objc_msgSend((id)objc_opt_self(DOCKeyboardFocusManager), "sharedManager");
      objc_msgSend(v6, "unregisterKeyboardFocusable:", v5);

    }
  }
  free(v3);
}

BOOL sub_1001763B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;

  v2 = *a1;
  v3 = *a2;
  if (v2 != 2)
  {
    v4 = (v2 & 1) == 0;
    return v3 != 2 && ((v4 ^ v3) & 1) != 0;
  }
  return v3 == 2;
}

id sub_1001763F4(_BYTE *a1)
{
  int v2;
  id result;
  int v4;

  v2 = a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload];
  result = (id)sub_100097068(2);
  if (v2 != 2)
  {
    v4 = a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed];
    a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = v2 & 1;
    if (((((v2 & 1) == 0) ^ v4) & 1) == 0)
      return objc_msgSend(a1, "docSetNeedsUpdateContentUnavailableConfiguration");
  }
  return result;
}

id sub_100176468()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  id v30;
  char *v31;
  NSObject *v32;
  __n128 v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  double v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  os_log_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  os_log_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] == 1)
  {
    v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
    v8 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    v9 = type metadata accessor for DOCExternalDeviceSource();
    v10 = swift_dynamicCastClass(v8, v9);
    v11 = v8;
    v12 = v11;
    if (v10)
    {
      v13 = objc_msgSend(v11, "identifier");
      v14 = sub_100176904((uint64_t)v13);

      if (v14)
      {
        v65 = v12;
        v15 = objc_msgSend(*(id *)&v1[v7], "displayName");
        v64 = v7;
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v19 = v18;

        v20 = objc_msgSend(v14, "displayName");
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v23 = v22;

        if (v17 == v21 && v19 == v23)
        {

          swift_bridgeObjectRelease_n(v19, 2);
          v12 = v65;
        }
        else
        {
          v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v23, 0);
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(v23);
          if ((v25 & 1) != 0)
          {

            v12 = v65;
          }
          else
          {
            v27 = Logger.UI.unsafeMutableAddressor(v26);
            (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v27, v2);
            v28 = v14;
            v29 = v1;
            v30 = v28;
            v31 = v29;
            v32 = Logger.logObject.getter(v31);
            v34 = static os_log_type_t.info.getter(v33);
            v35 = v34;
            if (os_log_type_enabled(v32, v34))
            {
              v36 = swift_slowAlloc(22, -1);
              v62 = v35;
              v37 = v36;
              v63 = swift_slowAlloc(64, -1);
              v67 = v63;
              *(_DWORD *)v37 = 136315394;
              v59 = v37 + 4;
              v61 = v32;
              v38 = objc_msgSend(v30, "displayName");
              v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
              v60 = v31;
              v41 = v40;

              v66 = sub_1000544FC(v39, v41, &v67);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);

              *(_QWORD *)&v42 = swift_bridgeObjectRelease(v41).n128_u64[0];
              *(_WORD *)(v37 + 12) = 2080;
              v59 = v37 + 14;
              v43 = objc_msgSend(*(id *)&v1[v64], "displayName", v42);
              v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
              v46 = v45;

              v66 = sub_1000544FC(v44, v46, &v67);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
              v47 = v60;

              swift_bridgeObjectRelease(v46);
              v48 = v61;
              _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v62, "Observed source displayName changed. Using the updated source for Content Unavailable. New Source displayName: %s Old Source displayName: %s)", (uint8_t *)v37, 0x16u);
              v49 = v63;
              swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v49, -1, -1);
              swift_slowDealloc(v37, -1, -1);

            }
            else
            {

            }
            (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
            v12 = v30;
          }
        }
      }
    }
    DOCItemCollectionViewController.getCurrentLocation()();
    v6 = v50;
    v51 = (void *)objc_opt_self(DOCContentUnavailableConfiguration);
    v52 = v12;
    v53 = objc_msgSend(v51, "emptyProminentConfiguration");
    v54 = v53;
    if (v6)
    {
      v55 = v6;
      if ((sub_100428030() & 1) != 0)
      {
        v56 = v52;
        v6 = sub_100428660(v56);

      }
      else
      {
        v6 = sub_10042830C();

      }
    }
    else
    {

      v55 = 0;
    }

  }
  return v6;
}

id sub_100176904(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager);
  if (v3)
  {
    v4 = *(void **)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver];
    static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v6 = v5;
    v7 = v3;
    v8 = v4;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v10 = objc_msgSend(v8, "sourceForIdentifier:", v9);

  }
  else
  {
    v11 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v12 = static os_log_type_t.info.getter();
    v13 = sub_10006922C((uint64_t *)&unk_100644560);
    v14 = swift_allocObject(v13, 72, 7);
    *(_OWORD *)(v14 + 16) = xmmword_1004D9670;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v17 = v16;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = sub_10006A638();
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v14 + 40) = v17;
    os_log(_:dso:log:type:_:)("_getSource unable to return source for %@ because documentManager is nil", 72, 2, &_mh_execute_header, v11, v12, v14);

    swift_bridgeObjectRelease(v14);
    return 0;
  }
  return v10;
}

id sub_100176A60()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  char *v32;
  NSObject *v33;
  __n128 v34;
  os_log_type_t v35;
  int v36;
  _BOOL4 v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  double v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  os_log_t v51;
  uint64_t v52;
  id v53;
  _QWORD v55[2];
  int v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] == 1)
  {
    v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
    v8 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    v9 = type metadata accessor for DOCExternalDeviceSource();
    v10 = swift_dynamicCastClass(v8, v9);
    v11 = v8;
    v12 = v11;
    if (v10)
    {
      v13 = objc_msgSend(v11, "identifier");
      v14 = sub_100176904((uint64_t)v13);

      if (v14)
      {
        v60 = v2;
        v61 = v12;
        v15 = v7;
        v16 = objc_msgSend(*(id *)&v1[v7], "displayName");
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v19 = v18;

        v20 = objc_msgSend(v14, "displayName");
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v23 = v22;

        if (v17 == v21 && v19 == v23)
        {

          swift_bridgeObjectRelease_n(v19, 2);
          v12 = v61;
        }
        else
        {
          v59 = v15;
          v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v23, 0);
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(v23);
          if ((v25 & 1) != 0)
          {

            v12 = v61;
          }
          else
          {
            v27 = Logger.UI.unsafeMutableAddressor(v26);
            v28 = v60;
            (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v27, v60);
            v29 = v14;
            v30 = v1;
            v31 = v29;
            v32 = v30;
            v33 = Logger.logObject.getter(v32);
            v35 = static os_log_type_t.info.getter(v34);
            v36 = v35;
            v37 = os_log_type_enabled(v33, v35);
            v38 = v61;
            if (v37)
            {
              v39 = swift_slowAlloc(22, -1);
              v58 = swift_slowAlloc(64, -1);
              v63 = v58;
              *(_DWORD *)v39 = 136315394;
              v55[1] = v39 + 4;
              v57 = v33;
              v40 = objc_msgSend(v31, "displayName");
              v56 = v36;
              v41 = v40;
              v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
              v43 = v32;
              v45 = v44;

              v62 = sub_1000544FC(v42, v45, &v63);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);

              *(_QWORD *)&v46 = swift_bridgeObjectRelease(v45).n128_u64[0];
              *(_WORD *)(v39 + 12) = 2080;
              v47 = objc_msgSend(*(id *)&v1[v59], "displayName", v46);
              v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
              v50 = v49;

              v62 = sub_1000544FC(v48, v50, &v63);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);

              swift_bridgeObjectRelease(v50);
              v51 = v57;
              _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v56, "Observed source displayName changed. Using the updated source for Content Unavailable. New Source displayName: %s Old Source displayName: %s)", (uint8_t *)v39, 0x16u);
              v52 = v58;
              swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v52, -1, -1);
              swift_slowDealloc(v39, -1, -1);

              (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v60);
            }
            else
            {

              (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v28);
            }
            v12 = v31;
          }
        }
      }
    }
    v53 = objc_msgSend((id)objc_opt_self(DOCContentUnavailableConfiguration), "emptyProminentConfiguration");
    v6 = sub_100429248();

  }
  return v6;
}

id DOCItemCollectionViewController.source.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
}

uint64_t sub_100176EC0(uint64_t a1, void *a2, void *a3, void *a4)
{
  _BYTE *v4;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  void *v63;
  id v64;
  unsigned __int8 v65;
  char *v66;
  char *v67;
  void *v68;
  char *v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  NSArray v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t ObjectType;
  id v89;
  id v90;
  char *v91;
  char *v92;
  void *v93;
  char *v94;
  id v95;
  uint64_t v96;
  char *v97;
  id v98;
  void *v99;
  void *v100;
  char *v101;
  id v102;
  char *v103;
  char *v104;
  void *v105;
  id v106;
  char *v107;
  id v108;
  id v109;
  char *v110;
  void *v111;
  id v112;
  id *v113;
  id v114;
  uint64_t v115;
  id v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  char *v122;
  _QWORD *v123;
  void (*v124)(char *, _UNKNOWN **);
  char *v125;
  _QWORD *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  id v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t result;
  id v139;
  void *v141;
  _QWORD aBlock[5];
  uint64_t v145;
  id v146;
  void *v147;

  v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview] = 0;
  v6 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf] = 0;
  v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isActiveDragSource] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView] = 0;
  v7 = (uint64_t *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher];
  v8 = type metadata accessor for FamilyFetcher();
  v9 = swift_allocObject(v8, 16, 7);
  v7[3] = v8;
  v7[4] = (uint64_t)&_s14descr1005DD249OMn.Parent + 3;
  *v7 = v9;
  v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDropSession] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = 0;
  v10 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  *v10 = 0;
  v10[1] = 0;
  v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier;
  v12 = v4;
  *(_QWORD *)&v4[v11] = sub_10008B324((uint64_t)_swiftEmptyArrayStorage);
  v13 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13);
  v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortOptionsAccessibilityModelView;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] = 2;
  v15 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath];
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_dropTargetHighlightedCell] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload] = 2;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache] = &_swiftEmptyDictionarySingleton;
  v18 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18);
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus] = 0;
  v19 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier];
  *v19 = 0xD000000000000020;
  v19[1] = 0x800000010050BDD0;
  v20 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
  *v20 = 0xD000000000000020;
  v20[1] = 0x800000010050BE00;
  v21 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier];
  *v21 = 0xD000000000000029;
  v21[1] = 0x800000010050BE30;
  v22 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionCreateCellIdentifier];
  *v22 = 0xD000000000000022;
  v22[1] = 0x800000010050BE60;
  v23 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionFooterIdentifier];
  *v23 = 0xD00000000000002BLL;
  v23[1] = 0x800000010050BE90;
  v24 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyFooterIdentifier];
  *v24 = 0xD000000000000030;
  v24[1] = 0x800000010050BEC0;
  v25 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionHeaderIdentifier];
  *v25 = 0xD00000000000002BLL;
  v25[1] = 0x800000010050BF00;
  v26 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGroupedSectionHeaderIdentifier];
  *v26 = 0xD00000000000002CLL;
  v26[1] = 0x800000010050BF30;
  v27 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyHeaderIdentifier];
  *v27 = 0xD000000000000030;
  v27[1] = 0x800000010050BF60;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState] = 4;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isUIPStackedSearchActive] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode] = 0;
  v28 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  *v28 = 0;
  v28[1] = 0;
  v29 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility];
  *v29 = 0;
  v29[1] = 0;
  v30 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool;
  v31 = type metadata accessor for DOCItemCollectionCellContentPool();
  v32 = (_QWORD *)swift_allocObject(v31, 40, 7);
  v32[2] = 0;
  v32[3] = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v32[4] = sub_10008AD3C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v12[v30] = v32;
  v33 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool;
  v34 = type metadata accessor for DOCThumbnailLoadingPool();
  swift_allocObject(v34, 40, 7);
  *(_QWORD *)&v12[v33] = sub_100019050();
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = 1;
  v35 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  *v35 = 2;
  v35[1] = 0;
  v35[2] = 0;
  v35[3] = 0;
  v36 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive;
  v139 = (id)objc_opt_self(DOCPostLaunchBuffer);
  v37 = objc_msgSend(v139, "shared");
  LOBYTE(v33) = objc_msgSend(v37, "locked");

  v12[v36] = v33;
  v17(&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath], 1, 1, v16);
  v38 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v39 = sub_10008AC14((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)v38 = _swiftEmptyArrayStorage;
  *((_QWORD *)v38 + 1) = _swiftEmptyArrayStorage;
  *((_QWORD *)v38 + 2) = v39;
  *((_WORD *)v38 + 12) = 8;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior] = 7;
  v40 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher;
  if (qword_1006410A8 != -1)
    swift_once(&qword_1006410A8, sub_1000AA544);
  *(_QWORD *)&v12[v40] = sub_100392098();
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringObservation] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation] = 0;
  *(_DWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens] = _swiftEmptyArrayStorage;
  v17(&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode], 1, 1, v16);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_firstItemInsertionRequestsFocus] = 0;
  v41 = &unk_100672000;
  v42 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController;
  *(_QWORD *)&v12[v42] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCTypeToFocusController(0)), "init");
  v43 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___listLayoutConfiguration];
  v44 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 1, 1, v44);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout] = 0;
  v45 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics];
  *v45 = 0;
  *(_OWORD *)(v45 + 8) = xmmword_1004D4CF0;
  *(_OWORD *)(v45 + 24) = xmmword_1004D4D00;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___promptView] = 1;
  swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_presentedCollaborationViewController]);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits] = 0;
  v46 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
  *(_OWORD *)v46 = 0u;
  *((_OWORD *)v46 + 1) = 0u;
  *((_QWORD *)v46 + 4) = 0;
  swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsAlert]);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSpringLoading] = 0;
  v47 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  *((_QWORD *)v47 + 1) = 0;
  *((_QWORD *)v47 + 2) = 0;
  *(_QWORD *)v47 = 0;
  v47[24] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails] = 1;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled] = 2;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastPreviewedFPItem] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForBrowserLayoutChanges] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForUIPChanges] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForInsetChanges] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] = 0;
  v48 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext];
  *(_OWORD *)v48 = 0u;
  *((_OWORD *)v48 + 1) = 0u;
  *((_QWORD *)v48 + 4) = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_updateSnapshot] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_computeStackMetrics] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 0;
  v49 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
  *(_OWORD *)v49 = 0u;
  *((_OWORD *)v49 + 1) = 0u;
  *((_QWORD *)v49 + 4) = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController] = 0;
  v50 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName];
  *v50 = 0;
  v50[1] = 0;
  v51 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize];
  *(_QWORD *)v51 = 0;
  *((_QWORD *)v51 + 1) = 0;
  v51[16] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  v52 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(_QWORD *)v52 = 0;
  v52[8] = 0;
  v53 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  v54 = type metadata accessor for ScrollPositionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 1, 1, v54);
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 0;
  v55 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastCollectionViewSafeInsets];
  *(_OWORD *)v55 = 0u;
  *((_OWORD *)v55 + 1) = 0u;
  v55[32] = 1;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 0;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 0;
  v56 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage;
  v57 = _s10BBIStorageCMa();
  swift_allocObject(v57, 208, 7);
  sub_1002CF03C();
  *(_QWORD *)&v12[v56] = v58;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_repositionRenamingCellTimer] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewPool] = a2;
  v59 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  *v59 = *(_OWORD *)a1;
  v60 = *(_OWORD *)(a1 + 64);
  v62 = *(_OWORD *)(a1 + 16);
  v61 = *(_OWORD *)(a1 + 32);
  v59[3] = *(_OWORD *)(a1 + 48);
  v59[4] = v60;
  v59[1] = v62;
  v59[2] = v61;
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = *(_BYTE *)(a1 + 16) == 3;
  v63 = *(void **)(qword_100672D18 + 40);
  v64 = a2;
  sub_100028DA4(a1);
  v65 = objc_msgSend(v63, "forceDisplayFilenameExtensions");
  v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isShowingAllFilenameExtensions] = v65;
  v66 = *(char **)(a1 + 72);
  v141 = v64;
  if (v66)
  {
    sub_100070EDC(a1 + 24, (uint64_t)&v146, &qword_100655B90);
    v67 = *(char **)a1;
    if ((*(_BYTE *)(*(_QWORD *)a1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties) & 1) == 0)
    {
      v94 = v66;
      sub_10007C3B8(&v146);
      v95 = 0;
      goto LABEL_17;
    }
    sub_100070EDC((uint64_t)&v146, (uint64_t)&v147, &qword_100655B90);
    v68 = v147;
    if (v147)
    {
      v69 = v66;
      sub_10007C3B8(&v146);
      v70 = objc_msgSend(v68, "representedTag");
      if (v70)
      {
        v71 = v70;
        v72 = sub_10006922C(&qword_100643CC0);
        v73 = swift_allocObject(v72, 48, 7);
        *(_OWORD *)(v73 + 16) = xmmword_1004D9670;
        v74 = objc_msgSend(v71, "displayName");
        v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
        v77 = v76;

        *(_QWORD *)(v73 + 32) = v75;
        *(_QWORD *)(v73 + 40) = v77;

        v78 = *(id *)(a1 + 8);
        v79.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v73);
LABEL_16:
        v95 = objc_msgSend(objc_allocWithZone((Class)DOCEnumerationProperties), "initWithConfiguration:tags:", v78, v79.super.isa);

LABEL_17:
        v102 = objc_msgSend(v67, "identifier");
        v103 = &v66[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        v104 = *(char **)&v66[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        if ((v66[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
        {
          v105 = *(void **)&v104[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
          v106 = v105;
        }
        else
        {
          v107 = v104;
          v106 = objc_msgSend(v107, "itemFilteringPredicate");

          v105 = v106;
        }
        v108 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
        v109 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0((uint64_t)v102, v95, v108, a1, v105);

        v110 = *(char **)v103;
        if ((v103[16] & 1) != 0)
        {
          v111 = *(void **)&v110[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
          *(_QWORD *)&v110[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v109;
          v112 = v109;

          sub_10007C390(&v146);
          v113 = (id *)&v67[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
          v41 = (_QWORD *)&unk_100672000;
          if (v67[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] != 1)
          {
LABEL_22:
            v114 = 0;
LABEL_25:
            v100 = a3;
            v99 = a4;
            *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enumerationProperties] = v95;
            *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enumerationIdentifier] = v114;
            *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] = v66;

            goto LABEL_26;
          }
        }
        else
        {
          v115 = *((_QWORD *)v103 + 1);
          v116 = v109;
          sub_1000B0EFC(v110, v115, 0);
          swift_unknownObjectRelease(v115);
          objc_msgSend(v110, "setItemFilteringPredicate:", v116);

          sub_10007C390(&v146);
          v113 = (id *)&v67[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
          v41 = &unk_100672000;
          if ((v67[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) == 0)
            goto LABEL_22;
        }
        v114 = *v113;
        v117 = *v113;
        goto LABEL_25;
      }
    }
    else
    {
      v101 = v66;
    }
    v78 = *(id *)(a1 + 8);
    v79.super.isa = 0;
    goto LABEL_16;
  }
  v80 = *(void **)(a1 + 64);
  if (!v80)
  {
    *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] = 0;

    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ELL, 0x8000000100515290, "Files/DOCItemCollectionViewController.swift", 43, 2, 508, 0);
    __break(1u);
    return result;
  }
  v81 = *(void **)a1;
  swift_unknownObjectRetain(*(_QWORD *)(a1 + 64));
  v82 = objc_msgSend(v81, "identifier");
  v83 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v84 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0((uint64_t)v82, 0, v83, a1, 0);

  v85 = type metadata accessor for DOCNodeCollection();
  v86 = *(void **)(a1 + 8);
  ObjectType = swift_getObjectType(v80, v87);
  swift_unknownObjectRetain(v80);
  v89 = v86;
  v90 = v81;
  LOBYTE(aBlock[0]) = 1;
  v91 = (char *)sub_100163EB8(v80, v86, v81, 0x100000000uLL, v85, ObjectType);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] = v91;
  v92 = *(char **)&v91[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if ((v91[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
  {
    v93 = *(void **)&v92[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
    *(_QWORD *)&v92[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v84;
    swift_unknownObjectRelease(v80);

  }
  else
  {
    v96 = *(_QWORD *)&v91[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
    v97 = v91;
    v98 = v84;
    sub_1000B0EFC(v92, v96, 0);
    swift_unknownObjectRelease(v96);
    objc_msgSend(v92, "setItemFilteringPredicate:", v98);

    swift_unknownObjectRelease(v80);
  }
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enumerationIdentifier] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enumerationProperties] = 0;

  v100 = a3;
  v99 = a4;
LABEL_26:
  v118 = *(void **)(a1 + 8);
  v119 = v99;
  v120 = v118;
  v121 = v100;
  v122 = (char *)sub_10004F040(v120, v100, v99);
  v123 = *(_QWORD **)&v122[v41[280]];
  v124 = *(void (**)(char *, _UNKNOWN **))((swift_isaMask & *v123) + 0x80);
  v125 = v122;
  v126 = v123;
  v124(v122, &protocol witness table for DOCItemCollectionViewController);

  if ((sub_10004A370() & 1) != 0)
  {
    v127 = objc_msgSend(v139, "shared");
    v128 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v128 + 16);
    v129 = swift_allocObject(&unk_1005CC5E8, 32, 7);
    *(_QWORD *)(v129 + 16) = v128;
    *(_QWORD *)(v129 + 24) = v120;
    aBlock[4] = sub_100094F70;
    v145 = v129;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CC600;
    v130 = _Block_copy(aBlock);
    v131 = v145;
    v132 = v120;
    swift_release(v131);
    objc_msgSend(v127, "performAfterLaunch:", v130);
    _Block_release(v130);

  }
  sub_10004EA44();
  v133 = *(_QWORD **)&v125[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
  v134 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v135 = swift_allocObject(v134, 48, 7);
  *(_OWORD *)(v135 + 16) = xmmword_1004DA350;
  v136 = sub_100046180(v135);
  *(_QWORD *)(v135 + 32) = v136;
  v137 = sub_100049188((uint64_t)v136);
  *(_QWORD *)(v135 + 40) = v137;
  aBlock[0] = v135;
  specialized Array._endMutation()(v137);
  (*(void (**)(_QWORD))((swift_isaMask & *v133) + 0xB8))(aBlock[0]);

  sub_100029224(a1);
  return (uint64_t)v125;
}

id DOCItemCollectionViewController.description.getter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  char *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  uint64_t v31;
  void *v32;
  Swift::String v33;
  double v34;
  unint64_t v35;
  id v36;
  void *v37;
  double v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  void *v45;
  Swift::String v46;
  objc_super v47;
  unint64_t v48;
  unint64_t v49;

  v1 = v0;
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v2 = sub_10006922C((uint64_t *)&unk_100644560);
    v3 = swift_allocObject(v2, 72, 7);
    *(_OWORD *)(v3 + 16) = xmmword_1004D9670;
    result = objc_msgSend(v1, "view");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v5 = result;
    *(_QWORD *)(v3 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    *(_QWORD *)(v3 + 64) = sub_100083450(&qword_100645FE8, (unint64_t *)&qword_100645B80, UIView_ptr);
    *(_QWORD *)(v3 + 32) = v5;
    v6 = String.init(format:_:)(28709, 0xE200000000000000, v3);
    v8 = v7;
  }
  else
  {
    v8 = (void *)0xE600000000000000;
    v6 = 0x296C6C756E28;
  }
  v47.receiver = v1;
  v47.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  v9 = objc_msgSendSuper2(&v47, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v48 = v10;
  v49 = v12;
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v6;
  v14._object = v8;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v8);
  v15._countAndFlagsBits = 32;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  v16 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  v17 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v23 = v48;
  v22 = v49;
  v24 = (void *)*((_QWORD *)v16 + 3);
  if (v24)
  {
    v48 = 32;
    v49 = 0xE100000000000000;
    v25 = v24;
    v26 = objc_msgSend(v25, "shortDescription");
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;

    v30._countAndFlagsBits = v27;
    v30._object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v29);
    v31 = v48;
    v32 = (void *)v49;
    v48 = v23;
    v49 = v22;
    swift_bridgeObjectRetain(v22);
    v33._countAndFlagsBits = v31;
    v33._object = v32;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)&v34 = swift_bridgeObjectRelease(v32).n128_u64[0];
    v23 = v48;
    v35 = v49;
    v36 = objc_msgSend(v25, "representedTag", v34);
    if (v36)
    {
      v37 = v36;
      v48 = 0;
      v49 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      *(_QWORD *)&v38 = swift_bridgeObjectRelease(v49).n128_u64[0];
      v48 = 0xD000000000000012;
      v49 = 0x80000001005138D0;
      v39 = objc_msgSend(v37, "displayName", v38);
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v42 = v41;

      v43._countAndFlagsBits = v40;
      v43._object = v42;
      String.append(_:)(v43);
      swift_bridgeObjectRelease(v42);
      v44 = v48;
      v45 = (void *)v49;
      v48 = v23;
      v49 = v35;
      swift_bridgeObjectRetain(v35);
      v46._countAndFlagsBits = v44;
      v46._object = v45;
      String.append(_:)(v46);
      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v45);

      return (id)v48;
    }
    else
    {

    }
  }
  return (id)v23;
}

void sub_100178474(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  void *v5;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState);
  switch(v3)
  {
    case 2:
      if (a1 == 2)
        return;
      break;
    case 3:
      if (a1 == 3)
        return;
      break;
    case 4:
      if (a1 == 4)
        return;
      break;
    default:
      if (a1 - 2 >= 3 && ((a1 ^ ((v3 & 1) == 0)) & 1) != 0)
        return;
      break;
  }
  sub_10000E7DC();
  if (v4)
  {
    v5 = v4;
    if (*((_BYTE *)v4 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1))
    {
      v10 = v4;
      _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
      v5 = v10;
    }
    v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isUIPStackedSearchActive;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isUIPStackedSearchActive) != 1)
      goto LABEL_26;
    v7 = *(unsigned __int8 *)(v1 + v2);
    if ((v7 - 2) >= 3)
    {
      if (qword_100640E48 != -1)
      {
        v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isUIPStackedSearchActive;
        v12 = v5;
        swift_once(&qword_100640E48, sub_1001B13DC);
        v6 = v9;
        v5 = v12;
      }
      if ((byte_100672758 & 1) == 0)
      {
        v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
        if (v8)
        {
          v11 = v5;
          objc_msgSend(v8, "setHidesSearchBarWhenScrolling:", 0);
          v5 = v11;
        }
        goto LABEL_26;
      }
      v7 = *(unsigned __int8 *)(v1 + v2);
    }
    if (v7 == 4)
      *(_BYTE *)(v1 + v6) = 0;
LABEL_26:

  }
}

void sub_1001785DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isUIPStackedSearchActive) = 1;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0
      || (v3 = *(id *)v2,
          v4 = objc_msgSend(v3, "doc_displaysSearchResults"),
          v3,
          (v4 & 1) == 0))
    {
      v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
      if (v5)
      {
        v6 = objc_msgSend(v5, "searchController");
        if (v6)
        {
          v8 = v6;
          v7 = type metadata accessor for DOCSearchController();
          if (swift_dynamicCastClass(v8, v7))
            sub_10045EFEC();

        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1001786CC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  BOOL v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  CGRect v19;

  if (objc_msgSend(v0, "enclosedInUIPDocumentLanding"))
  {
    v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext];
    if (v1)
    {
      v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
      if (v2)
      {
        swift_retain();
        v18 = v2;
        v3 = objc_msgSend(v18, "searchController");
        if (v3)
        {
          v4 = v3;
          if ((objc_msgSend(v3, "isActive") & 1) != 0)
          {
            v5 = 1;
          }
          else
          {
            v6 = objc_msgSend(v4, "searchBar");
            objc_msgSend(v6, "frame");
            v8 = v7;
            v10 = v9;
            v12 = v11;
            v14 = v13;

            v19.origin.x = v8;
            v19.origin.y = v10;
            v19.size.width = v12;
            v19.size.height = v14;
            v5 = CGRectGetHeight(v19) > 0.0;
          }
          if (objc_msgSend(v18, "searchBarPlacement") != (id)2
            || !objc_msgSend(v18, "hidesSearchBarWhenScrolling")
            || v5)
          {
            swift_release(v1);

            return;
          }
          objc_msgSend(v18, "setSearchController:", 0);
          v15 = swift_allocObject(&unk_1005CDE20, 32, 7);
          *(_QWORD *)(v15 + 16) = v18;
          *(_QWORD *)(v15 + 24) = v4;
          v17 = *(_QWORD *)(v1 + 16);
          v16 = *(_QWORD *)(v1 + 24);
          *(_QWORD *)(v1 + 16) = sub_1001D0A30;
          *(_QWORD *)(v1 + 24) = v15;
          sub_100087534(v17, v16);
        }
        else
        {

        }
        swift_release(v1);
      }
    }
  }
}

id DOCItemCollectionViewController.traitCollection.getter()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  id v9;
  uint64_t v10;
  _QWORD v11[5];
  objc_super v12;
  objc_super v13;
  _QWORD v14[3];
  objc_super v15;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v15.receiver = v0;
  v15.super_class = v2;
  v3 = objc_msgSendSuper2(&v15, "traitCollection");
  v4 = sub_1001463A0();
  UITraitCollection.subscript.getter(v14, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v4);

  v5 = v14[0];
  v6 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v7 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v14, 0, 0).n128_u64[0];
  if (v5 == *(_QWORD *)v6)
  {
    v12.receiver = v1;
    v12.super_class = v2;
    return objc_msgSendSuper2(&v12, "traitCollection", v7);
  }
  else
  {
    v13.receiver = v1;
    v13.super_class = v2;
    v9 = objc_msgSendSuper2(&v13, "traitCollection", v7);
    __chkstk_darwin(v9);
    v11[2] = v1;
    v10 = UITraitCollection.modifyingTraits(_:)(sub_1001B176C, v11);

    return (id)v10;
  }
}

uint64_t sub_100178A10(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v4 = a1[3];
  v5 = a1[4];
  sub_10007E7A0(a1, v4);
  sub_1003B8768(v4, v5);
  LOBYTE(v4) = v6 & 1;
  v7 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v7, v12, 0, 0);
  v8 = *v7;
  v9 = a1[3];
  v10 = a1[4];
  sub_10007E7C8((uint64_t)a1, v9);
  return sub_1003B8708(v8, v4, v9, v10);
}

uint64_t DOCItemCollectionViewController.displayMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v3, 0, 0);
  return *(_QWORD *)v1;
}

void DOCItemCollectionViewController.displayMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v9, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = (uint64_t *)(v5 + 64);
      do
      {
        v8 = *v7;
        v7 += 5;
        *(_BYTE *)(v8 + 24) = *(_BYTE *)(v8 + 25);
        --v6;
      }
      while (v6);
    }
    sub_100026A34();
  }
}

void (*DOCItemCollectionViewController.displayMode.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_100178C7C;
}

void sub_100178C7C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(v5 + v4);
  *(_QWORD *)(v5 + v4) = v3;
  if ((a2 & 1) != 0)
  {
    if (v6 != v3)
    {
      v7 = *(_QWORD *)(v2[4] + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        v9 = (uint64_t *)(v7 + 64);
        do
        {
          v10 = *v9;
          v9 += 5;
          *(_BYTE *)(v10 + 24) = *(_BYTE *)(v10 + 25);
          --v8;
        }
        while (v8);
      }
LABEL_11:
      sub_100026A34();
    }
  }
  else if (v6 != v3)
  {
    v11 = *(_QWORD *)(v2[4] + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (uint64_t *)(v11 + 64);
      do
      {
        v14 = *v13;
        v13 += 5;
        *(_BYTE *)(v14 + 24) = *(_BYTE *)(v14 + 25);
        --v12;
      }
      while (v12);
    }
    goto LABEL_11;
  }
  free(v2);
}

unint64_t sub_100178D2C(void *a1, char a2)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  id v12;
  unint64_t v13;
  unint64_t v14;

  if ((a2 & 1) != 0)
  {
    v13 = 0;
    v14 = 0xE000000000000000;
    v2 = a1;
    _StringGuts.grow(_:)(19);
    v9._object = (void *)0x8000000100516EE0;
    v9._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v9);
    v12 = v2;
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    _print_unlocked<A, B>(_:_:)(&v12, &v13, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  }
  else
  {
    v2 = a1;
    _StringGuts.grow(_:)(24);
    v13 = 0xD000000000000015;
    v14 = 0x8000000100516F00;
    v3 = objc_msgSend(v2, "description", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    v7._countAndFlagsBits = v4;
    v7._object = v6;
    String.append(_:)(v7);
    swift_bridgeObjectRelease(v6);
    v8._countAndFlagsBits = 41;
    v8._object = (void *)0xE100000000000000;
    String.append(_:)(v8);
  }

  return v13;
}

Swift::Int sub_100178E68(void *a1, char a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, 0);
  if ((a2 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v7 = v6;
    v8 = a1;
    String.hash(into:)(v10, v5, v7);

    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
    v4 = a1;
    NSObject.hash(into:)(v10);

  }
  return Hasher._finalize()();
}

Swift::Int sub_100178F14()
{
  uint64_t v0;

  return sub_100178E68(*(void **)v0, *(_BYTE *)(v0 + 8));
}

void sub_100178F20(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v3 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;
    v7 = v3;
    String.hash(into:)(a1, v4, v6);

    swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
    v8 = v3;
    NSObject.hash(into:)(a1);

  }
}

Swift::Int sub_100178FD0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD v10[9];

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v10, a1);
  if ((v3 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;
    v7 = v2;
    String.hash(into:)(v10, v4, v6);

    swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
    v8 = v2;
    NSObject.hash(into:)(v10);

  }
  return Hasher._finalize()();
}

unint64_t sub_100179078()
{
  uint64_t v0;

  return sub_100178D2C(*(void **)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_100179084(uint64_t a1, uint64_t a2)
{
  return sub_1001B9788(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

BOOL sub_1001790A0(uint64_t a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _BOOL8 v10;
  BOOL v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  _BOOL4 v28;
  id v29;
  uint64_t v30;
  _BYTE v31[48];
  uint64_t v32;
  _QWORD v33[7];
  _QWORD v34[8];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return 0;
  v8 = a2 & 0x100;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  v10 = v9 != 0;
  if (v9)
    v11 = v8 == 0;
  else
    v11 = 0;
  if (v11)
  {
    v12 = sub_10001F69C();
    sub_100184394(v12, 0.0, 0.0, 1, 0, 1, (uint64_t)v33);
    v13 = sub_100070EDC((uint64_t)v33, (uint64_t)v34, (uint64_t *)&unk_100646CD8);
    v14 = v34[0];
    v10 = v34[0] != 0;
    v15 = Logger.UI.unsafeMutableAddressor(v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    sub_1001D13DC(v33);
    v16 = sub_1001D13DC(v33);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v28 = v14 != 0;
      v19 = swift_slowAlloc(28, -1);
      v20 = swift_slowAlloc(64, -1);
      v29 = v12;
      v21 = v20;
      v32 = v20;
      *(_DWORD *)v19 = 136315650;
      v30 = sub_1000544FC(0xD00000000000003DLL, 0x8000000100516CB0, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
      *(_WORD *)(v19 + 12) = 1024;
      LODWORD(v30) = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, (char *)&v30 + 4);
      *(_WORD *)(v19 + 18) = 2080;
      sub_100070EDC((uint64_t)v33, (uint64_t)&v30, (uint64_t *)&unk_100646CD8);
      sub_1001D13DC(v33);
      v22 = sub_10006922C((uint64_t *)&unk_100646CD8);
      v23 = String.init<A>(describing:)(&v30, v22);
      v25 = v24;
      v30 = sub_1000544FC(v23, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
      swift_bridgeObjectRelease(v25);
      sub_1001D1404(v33);
      sub_1001D1404(v33);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s shouldInvalidate: %{BOOL}d neededLayoutInfo: %s", (uint8_t *)v19, 0x1Cu);
      swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      sub_1001D1404(v33);
    }
    else
    {
      sub_1001D1404(v33);
      sub_1001D1404(v33);
      sub_1001D1404(v33);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v10;
}

uint64_t (*sub_1001793C8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext, a1, 33, 0);
  return j__swift_endAccess;
}

void *DOCItemCollectionViewController.nodeCollection.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  v2 = v1;
  return v1;
}

void DOCItemCollectionViewController.observedNode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
      v3 = *(_QWORD *)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v3 = *(_QWORD *)(v2 + 8);
    swift_unknownObjectRetain(v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100179490()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  Class isa;
  id v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  double v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  Class v28;
  _BYTE v29[24];
  char v30[24];

  v1 = sub_10006922C((uint64_t *)&unk_100642710);
  v2 = __chkstk_darwin(v1);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v29[-v5];
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v29[-v12];
  v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v15 = *(char **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v15)
  {
    v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v16, v29, 0, 0);
    sub_1000271D4(v16, (uint64_t)v6, (uint64_t *)&unk_100642710);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v13, v6, v7);
      v17 = v15;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v19 = objc_msgSend(v17, "cellForItemAtIndexPath:", isa);

      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
      goto LABEL_4;
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
  v22 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v23 = swift_beginAccess(&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v30, 0, 0).n128_u64[0];
  result = 0;
  if (*(_QWORD *)v22 != 2)
    return result;
  if ((objc_msgSend(v0, "isEditing", v23) & 1) == 0)
  {
    v24 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode];
    if (v24)
    {
      v25 = (void *)swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode]);
      sub_10017A9F4(v25, (uint64_t)v4);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
      {
        swift_unknownObjectRelease(v24);
        sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100642710);
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v4, v7);
        v26 = *(void **)&v0[v14];
        if (v26)
        {
          v27 = v26;
          v28 = IndexPath._bridgeToObjectiveC()().super.isa;
          v19 = objc_msgSend(v27, "cellForItemAtIndexPath:", v28);

          swift_unknownObjectRelease(v24);
          (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
LABEL_4:
          if (v19)
          {
            v20 = type metadata accessor for DOCItemCollectionCell();
            result = swift_dynamicCastClass(v19, v20);
            if (result)
              return result;

          }
          return 0;
        }
        (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
        swift_unknownObjectRelease(v24);
      }
    }
  }
  return 0;
}

uint64_t DOCItemCollectionViewController.preferredFocusEnvironments.getter()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v9;
  objc_super v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v1)
  {
    v2 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v3 = swift_allocObject(v2, 40, 7);
    *(_OWORD *)(v3 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v3 + 32) = v1;
    v9 = v3;
    specialized Array._endMutation()(v3);
    v4 = v9;
  }
  else
  {
    v10.receiver = v0;
    v10.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
    v5 = objc_msgSendSuper2(&v10, "preferredFocusEnvironments");
    v6 = sub_10006922C((uint64_t *)&unk_100648EE0);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  }
  v7 = v1;
  return v4;
}

void *sub_100179980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void (*v45)(char *, uint64_t);
  Class isa;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  os_log_type_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  void *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v86 = type metadata accessor for IndexPath(0);
  v1 = *(_QWORD *)(v86 - 8);
  v2 = __chkstk_darwin(v86);
  v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v79 - v5;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v79 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v79 - v15;
  v17 = sub_100179490();
  if (v17)
  {
    v18 = (void *)v17;
    v19 = Logger.UI.unsafeMutableAddressor(v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v16, v19, v7);
    v20 = v18;
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v83 = v18;
      v84 = (char *)v7;
      v85 = v8;
      v23 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(64, -1);
      v88 = v24;
      *(_DWORD *)v23 = 136315394;
      v87 = sub_1000544FC(0xD000000000000012, 0x8000000100516810, &v88);
      v25 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);
      *(_WORD *)(v23 + 12) = 2080;
      v26 = (*(uint64_t (**)(__n128))((swift_isaMask & *v20) + 0x1F8))(v25);
      if (v26)
      {
        v27 = (void *)v26;
        sub_100076450();
        v29 = v28;
        v31 = v30;
        swift_bridgeObjectRetain(v30);

      }
      else
      {
        v29 = 7104878;
        v31 = 0xE300000000000000;
      }
      v87 = sub_1000544FC(v29, v31, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);

      swift_bridgeObjectRelease(v31);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s 1 cellForFocusedItem title: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      (*(void (**)(char *, char *))(v85 + 8))(v16, v84);
      return v83;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    }
    return v18;
  }
  v32 = v4;
  v84 = v11;
  v81 = v14;
  v82 = v6;
  v33 = v86;
  v34 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  v35 = v7;
  if (!v34)
    goto LABEL_17;
  v85 = v8;
  v36 = v34;
  v37 = v82;
  v38 = IndexPath.init(item:section:)(0, 0);
  v39 = IndexPath.section.getter(v38);
  v40 = objc_msgSend(v36, "numberOfSections");
  v41 = v33;
  v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v1 + 16))(v32, v37, v33);
  if (v39 >= (uint64_t)v40)
  {

    v45 = *(void (**)(char *, uint64_t))(v1 + 8);
    v45(v32, v33);
LABEL_16:
    v8 = v85;
    v17 = ((uint64_t (*)(char *, uint64_t))v45)(v37, v33);
LABEL_17:
    v51 = Logger.UI.unsafeMutableAddressor(v17);
    v52 = v84;
    v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v84, v51, v35);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(12, -1);
      v57 = v8;
      v58 = swift_slowAlloc(32, -1);
      v88 = v58;
      *(_DWORD *)v56 = 136315138;
      v87 = sub_1000544FC(0xD000000000000012, 0x8000000100516810, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s 3 nil", v56, 0xCu);
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v56, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v35);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v52, v35);
    }
    return 0;
  }
  v43 = IndexPath.item.getter(v42);
  v44 = objc_msgSend(v36, "numberOfItemsInSection:", IndexPath.section.getter(v43));
  v45 = *(void (**)(char *, uint64_t))(v1 + 8);
  v45(v32, v33);
  if (v43 >= (uint64_t)v44)
  {

    goto LABEL_16;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v47 = objc_msgSend(v36, "cellForItemAtIndexPath:", isa);

  if (v47)
  {
    v49 = type metadata accessor for DOCItemCollectionCell();
    v48 = swift_dynamicCastClass(v47, v49);
    v50 = (void *)v48;
    if (!v48)

  }
  else
  {
    v50 = 0;
  }
  v60 = v85;
  v61 = v81;
  v62 = Logger.UI.unsafeMutableAddressor(v48);
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v62, v35);
  v63 = v50;
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v64, v65))
  {
    v84 = (char *)v35;
    v66 = swift_slowAlloc(22, -1);
    v67 = swift_slowAlloc(64, -1);
    v88 = v67;
    *(_DWORD *)v66 = 136315394;
    v87 = sub_1000544FC(0xD000000000000012, 0x8000000100516810, &v88);
    v79 = &v88;
    v68 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);
    *(_WORD *)(v66 + 12) = 2080;
    v83 = v50;
    v80 = v67;
    v69 = v65;
    if (v50 && (v70 = (*(uint64_t (**)(__n128))((swift_isaMask & *v63) + 0x1F8))(v68)) != 0)
    {
      v71 = (void *)v70;
      sub_100076450();
      v73 = v72;
      v75 = v74;
      swift_bridgeObjectRetain(v74);

      v76 = v73;
      v77 = v82;
    }
    else
    {
      v75 = 0xE300000000000000;
      v77 = v82;
      v76 = 7104878;
    }
    v87 = sub_1000544FC(v76, v75, &v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, v79);

    swift_bridgeObjectRelease(v75);
    _os_log_impl((void *)&_mh_execute_header, v64, v69, "%s 2 cell title: %s", (uint8_t *)v66, 0x16u);
    v78 = v80;
    swift_arrayDestroy(v80, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v78, -1, -1);
    swift_slowDealloc(v66, -1, -1);

    (*(void (**)(char *, char *))(v85 + 8))(v81, v84);
    v45(v77, v41);
    return v83;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v35);
    v45(v82, v41);
    return v50;
  }
}

uint64_t DOCItemCollectionViewController.items.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController
                                            + 8));
}

void (*DOCItemCollectionViewController.items.modify(_QWORD *a1))(unint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  *a1 = v3;
  a1[1] = v1;
  swift_bridgeObjectRetain(v3);
  return sub_10017A19C;
}

void sub_10017A19C(unint64_t *a1, char a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain(*a1);
    DOCItemCollectionViewController.items.setter(v3);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    DOCItemCollectionViewController.items.setter(*a1);
  }
}

id DOCItemCollectionViewController.collectionShouldShowAllFilenameExtensions.getter()
{
  if (qword_1006410A8 != -1)
    swift_once(&qword_1006410A8, sub_1000AA544);
  return objc_msgSend(*(id *)(qword_100672D18 + 40), "forceDisplayFilenameExtensions");
}

id DOCItemCollectionViewController.collectionShouldShowAllFilenameExtensions.setter(char a1)
{
  if (qword_1006410A8 != -1)
    swift_once(&qword_1006410A8, sub_1000AA544);
  objc_msgSend(*(id *)(qword_100672D18 + 40), "setForceDisplayFilenameExtensions:", a1 & 1);
  return sub_100095BFC();
}

id (*DOCItemCollectionViewController.collectionShouldShowAllFilenameExtensions.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;

  *a1 = v1;
  v2 = a1 + 1;
  if (qword_1006410A8 != -1)
    swift_once(&qword_1006410A8, sub_1000AA544);
  *v2 = objc_msgSend(*(id *)(qword_100672D18 + 40), "forceDisplayFilenameExtensions");
  return sub_10017A300;
}

id sub_10017A300(uint64_t a1)
{
  objc_msgSend(*(id *)(qword_100672D18 + 40), "setForceDisplayFilenameExtensions:", *(unsigned __int8 *)(a1 + 8));
  return sub_100095BFC();
}

uint64_t sub_10017A33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  _QWORD v9[3];

  v1 = v0;
  v9[0] = *(_QWORD *)(v0
                    + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher);
  v2 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  swift_retain();
  v3 = sub_10006922C(&qword_100646CE8);
  v4 = sub_100062698((unint64_t *)&qword_100646CF0, &qword_100646CE8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v5 = Publisher<>.sink(receiveValue:)(sub_1001D14D0, v2, v3, v4);
  swift_release(v2);
  swift_release(v9[0]);
  v6 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_subscriptions;
  v7 = swift_beginAccess(v6, v9, 33, 0);
  AnyCancellable.store(in:)(v6, v7);
  swift_endAccess(v9);
  return swift_release(v5);
}

void sub_10017A438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100095BFC();

  }
}

_QWORD *sub_10017A488()
{
  uint64_t v0;
  uint64_t inited;
  char v2;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v10[40];

  v0 = sub_10006922C(&qword_100646C68);
  inited = swift_initStackObject(v0, v10);
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  sub_10003DDDC();
  if ((v2 & 1) != 0)
    v3 = sub_10009BBE8();
  else
    v3 = 0;
  *(_QWORD *)(inited + 32) = v3;
  specialized Array._endMutation()(v3);
  v4 = *(void **)(inited + 32);
  if (v4)
  {
    v5 = v4;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
    specialized Array._endMutation()(v8);
  }
  swift_bridgeObjectRelease(inited);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10017A578()
{
  char *v0;
  _QWORD *result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  objc_msgSend(v0, "loadViewIfNeeded");
  result = *(_QWORD **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  result = objc_msgSend(result, "preparedCells");
  if (result)
  {
    v2 = result;
    v3 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v15 = v4;
      else
        v15 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v15);
      v5 = (uint64_t)result;
      if (result)
        goto LABEL_5;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (_QWORD *)swift_bridgeObjectRetain(v4);
      if (v5)
      {
LABEL_5:
        if (v5 >= 1)
        {
          for (i = 0; i != v5; ++i)
          {
            if ((v4 & 0xC000000000000001) != 0)
              v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
            else
              v7 = *(id *)(v4 + 8 * i + 32);
            v8 = v7;
            v9 = type metadata accessor for DOCItemCollectionCell();
            v10 = swift_dynamicCastClass(v8, v9);
            if (v10)
            {
              v11 = v10;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
              v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
              v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v13 >= v12 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
              v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
              specialized Array._endMutation()(v14);
            }
            else
            {

            }
          }
          goto LABEL_21;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
LABEL_21:
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v4);
    return _swiftEmptyArrayStorage;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10017A754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  _BYTE v37[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  if ((sub_100195148(a1) & 1) != 0)
    return v10;
  if (a2)
  {
    v11 = a2;
  }
  else
  {
    v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    swift_bridgeObjectRetain(v11);
  }
  v12 = swift_bridgeObjectRetain(a2);
  v13 = IndexPath.section.getter(v12);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (v13 >= v14)
  {
    swift_bridgeObjectRelease(v11);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  v16 = (uint64_t)v9;
  v17 = IndexPath.item.getter(v15);
  v18 = IndexPath.section.getter(v17);
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v18 >= *(_QWORD *)(v11 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v3 = v11 + 32;
  v19 = *(_QWORD *)(v11 + 32 + 40 * v18 + 32);
  swift_beginAccess(v19 + 16, v37, 0, 0);
  v16 = *(_QWORD *)(v19 + 16);
  if (!((unint64_t)v16 >> 62))
  {
    v20 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_24:
  v35 = v7;
  if (v16 < 0)
    v30 = v16;
  else
    v30 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v31 = v30;
  v7 = v35;
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  v33 = v16;
  v20 = v32;
  swift_bridgeObjectRelease(v33);
LABEL_10:
  v21 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v17 >= v20)
  {
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  v22 = a1;
  v23 = IndexPath.section.getter(v21);
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v23 >= *(_QWORD *)(v11 + 16))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v24 = (_QWORD *)(v3 + 40 * v23);
  v25 = v24[1];
  v26 = v24[3];
  v27 = v24[4];
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v26);
  swift_retain(v27);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v26);
  v28 = swift_bridgeObjectRelease(v25);
  v22 = IndexPath.item.getter(v28);
  swift_beginAccess(v27 + 16, v36, 0, 0);
  a1 = *(_QWORD *)(v27 + 16);
  swift_bridgeObjectRetain(a1);
  result = swift_release(v27);
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_30:
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, a1);
    goto LABEL_17;
  }
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v22 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(a1 + 8 * v22 + 32);
    swift_unknownObjectRetain(v10);
LABEL_17:
    swift_bridgeObjectRelease(a1);
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10017A9F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v48 - v10;
  v12 = sub_10006922C((uint64_t *)&unk_100642710);
  v13 = __chkstk_darwin(v12);
  v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource);
  if (v17)
  {
    ObjectType = swift_getObjectType(a1, v14);
    swift_retain();
    if (DOCNode.isCreateDocumentSentinel()())
    {
      v19 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19);
      return swift_release(v17);
    }
    else
    {
      sub_100429954(a1, (uint64_t)v16);
      v32 = type metadata accessor for IndexPath(0);
      v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v16, 1, v32);
      if ((_DWORD)v33 == 1)
      {
        v34 = Logger.UI.unsafeMutableAddressor(v33);
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v34, v5);
        v35 = swift_unknownObjectRetain_n(a1, 2);
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.error.getter(v36);
        v38 = v37;
        if (os_log_type_enabled(v36, v37))
        {
          LODWORD(v51) = v38;
          v39 = a2;
          v40 = (uint8_t *)swift_slowAlloc(12, -1);
          v50 = swift_slowAlloc(32, -1);
          v54 = v50;
          v52 = v5;
          v41 = v40;
          v49 = v40;
          *(_DWORD *)v40 = 136315138;
          a2 = v39;
          v48[1] = v41 + 4;
          v42 = DOCNode.nodeDescription.getter(ObjectType);
          v44 = v43;
          v53 = sub_1000544FC(v42, v43, &v54);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
          swift_unknownObjectRelease_n(a1, 2);
          swift_bridgeObjectRelease(v44);
          v45 = v49;
          _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v51, "Unable to find index path for node '%s' in diffable data source", v49, 0xCu);
          v46 = v50;
          swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v46, -1, -1);
          swift_slowDealloc(v45, -1, -1);

          swift_release(v17);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v52);
        }
        else
        {

          swift_release(v17);
          swift_unknownObjectRelease_n(a1, 2);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        }
      }
      else
      {
        swift_release(v17);
      }
      return sub_100070EDC((uint64_t)v16, a2, (uint64_t *)&unk_100642710);
    }
  }
  else
  {
    v21 = Logger.UI.unsafeMutableAddressor(v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v21, v5);
    v22 = swift_unknownObjectRetain_n(a1, 2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      v51 = a2;
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v54 = v26;
      v52 = v5;
      *(_DWORD *)v25 = 136315138;
      v28 = swift_getObjectType(a1, v27);
      v29 = DOCNode.nodeDescription.getter(v28);
      v31 = v30;
      v53 = sub_1000544FC(v29, v30, &v54);
      a2 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v31);
      _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v24, "Diffable data source is nil when trying to find index path for node '%s'", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v52);
    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    v47 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a2, 1, 1, v47);
  }
}

uint64_t sub_10017AEC0(uint64_t *a1, uint64_t a2, unsigned int (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  char v34;
  char v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  void *v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  char *v69;

  v68 = a3;
  v64 = sub_10006922C((uint64_t *)&unk_10064EB70);
  __chkstk_darwin(v64);
  v67 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100643470);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v66 = (char *)&v60 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v60 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v60 - v16;
  v18 = __chkstk_darwin(v15);
  v65 = (char *)&v60 - v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v60 - v20;
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v63 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v69 = (char *)&v60 - v26;
  v27 = *a1;
  v28 = objc_opt_self(FINode);
  v29 = swift_dynamicCastObjCClass(v27, v28);
  if (v29)
  {
    v30 = (void *)v29;
    v62 = v9;
    swift_unknownObjectRetain(v27);
    v31 = objc_msgSend(v30, "fpItem");
    if (v31
      && (v32 = v31,
          v33 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr),
          v34 = DOCNode.isEqualTo(node:)(a2, v33),
          v32,
          (v34 & 1) != 0))
    {
      swift_unknownObjectRelease(v27);
      v35 = 1;
    }
    else
    {
      sub_1000271D4((uint64_t)v68, (uint64_t)v21, &qword_100643470);
      v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
      if (v36((uint64_t)v21, 1, v22) != 1)
      {
        v61 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
        v61(v69, v21, v22);
        v41 = objc_msgSend(v30, "fileURL");
        if (v41)
        {
          v42 = v41;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v41);

          v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
          v43(v14, 0, 1, v22);
        }
        else
        {
          v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
          v43(v14, 1, 1, v22);
        }
        sub_100070EDC((uint64_t)v14, (uint64_t)v17, &qword_100643470);
        v68 = v36;
        if (v36((uint64_t)v17, 1, v22) == 1)
        {
          sub_10000CB4C((uint64_t)v17, &qword_100643470);
          v44 = 1;
          v45 = (uint64_t)v65;
        }
        else
        {
          v45 = (uint64_t)v65;
          ((void (*)(void))URL.standardizedFileURL.getter)();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v22);
          v44 = 0;
        }
        v46 = v69;
        v47 = v64;
        v48 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v43)(v45, v44, 1, v22);
        v49 = (uint64_t)v66;
        URL.standardizedFileURL.getter(v48);
        v43((char *)v49, 0, 1, v22);
        v50 = v67;
        v51 = v67 + *(int *)(v47 + 48);
        sub_1000271D4(v45, v67, &qword_100643470);
        sub_1000271D4(v49, v51, &qword_100643470);
        v52 = v68;
        if (v68(v50, 1, v22) == 1)
        {
          swift_unknownObjectRelease(v27);
          sub_10000CB4C(v49, &qword_100643470);
          sub_10000CB4C(v45, &qword_100643470);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v46, v22);
          if (v52(v51, 1, v22) == 1)
          {
            sub_10000CB4C(v50, &qword_100643470);
            v35 = 1;
            return v35 & 1;
          }
        }
        else
        {
          v53 = (uint64_t)v62;
          sub_1000271D4(v50, (uint64_t)v62, &qword_100643470);
          if (v52(v51, 1, v22) != 1)
          {
            v55 = v63;
            v61(v63, (char *)v51, v22);
            v56 = sub_10005A360(&qword_1006418E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v35 = dispatch thunk of static Equatable.== infix(_:_:)(v53, v55, v22, v56);
            swift_unknownObjectRelease(v27);
            v57 = v45;
            v58 = v49;
            v59 = *(void (**)(char *, uint64_t))(v23 + 8);
            v59(v55, v22);
            sub_10000CB4C(v58, &qword_100643470);
            sub_10000CB4C(v57, &qword_100643470);
            v59(v69, v22);
            v59((char *)v53, v22);
            sub_10000CB4C(v67, &qword_100643470);
            return v35 & 1;
          }
          swift_unknownObjectRelease(v27);
          sub_10000CB4C(v49, &qword_100643470);
          sub_10000CB4C(v45, &qword_100643470);
          v54 = *(void (**)(char *, uint64_t))(v23 + 8);
          v54(v69, v22);
          v54((char *)v53, v22);
        }
        sub_10000CB4C(v50, (uint64_t *)&unk_10064EB70);
        v35 = 0;
        return v35 & 1;
      }
      swift_unknownObjectRelease(v27);
      sub_10000CB4C((uint64_t)v21, &qword_100643470);
      v35 = 0;
    }
    return v35 & 1;
  }
  v38 = objc_opt_self(FPItem);
  if (swift_dynamicCastObjCClass(v27, v38))
  {
    v39 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    swift_unknownObjectRetain(v27);
    v40 = DOCNode.isEqualTo(node:)(a2, v39);
    swift_unknownObjectRelease(v27);
    return v40 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x8000000100515C00, "Files/DOCItemCollectionViewController.swift", 43, 2, 1023, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10017B538(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.UI.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  swift_unknownObjectRetain_n(a1, 2);
  v14 = swift_unknownObjectRetain_n(a2, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    v31 = v16;
    v32 = v9;
    v33 = v8;
    v34 = a4;
    v35 = a3;
    v17 = swift_slowAlloc(32, -1);
    v30 = swift_slowAlloc(96, -1);
    v37 = v30;
    *(_DWORD *)v17 = 136315650;
    v36 = sub_1000544FC(0xD000000000000027, 0x8000000100510090, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    *(_WORD *)(v17 + 12) = 2080;
    v18 = objc_msgSend(a2, "displayName");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v36 = sub_1000544FC(v19, v21, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v17 + 22) = 2080;
    if (a1)
    {
      ObjectType = swift_getObjectType(a1, v22);
      v24 = DOCNode.nodeDescription.getter(ObjectType);
      v26 = v25;
    }
    else
    {
      v26 = 0xE300000000000000;
      v24 = 4271950;
    }
    v27 = v33;
    v36 = sub_1000544FC(v24, v26, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v31, "%s - matching node for %s is %s", (uint8_t *)v17, 0x20u);
    v28 = v30;
    swift_arrayDestroy(v30, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v27);
    a3 = v35;
  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
    swift_unknownObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return a3(a1);
}

void sub_10017B834(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView) = a1;
  v8 = a1;
  if (a1)
  {
    if (v4)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
      v5 = v4;
      v6 = v8;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
        goto LABEL_7;
    }
  }
  else if (!v4)
  {
    v5 = 0;
    goto LABEL_8;
  }
  sub_1000968DC();
  v6 = sub_10001F69C();
  sub_10005897C(v6, 0, 0, 1, 1);

  v5 = v8;
LABEL_7:
  v8 = v6;
LABEL_8:

}

uint64_t sub_10017B91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4[7] = a4;
  v5 = type metadata accessor for Logger(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v4[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100646A48);
  v4[11] = v7;
  v4[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100646A50);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100646A58);
  v4[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[15] = v10;
  v4[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C(&qword_100646A60);
  v4[17] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[18] = v12;
  v4[19] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  v4[20] = v13;
  v4[21] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v4[22] = v14;
  v4[23] = v15;
  return swift_task_switch(sub_10017BA58, v14, v15);
}

uint64_t sub_10017BA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, void *, uint64_t);

  v1 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 192) = Strong;
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  if (Strong)
  {
    v5 = *(_QWORD *)(v0 + 112);
    v23 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = sub_100098C54();
    *(_QWORD *)(v0 + 40) = v8;
    v9 = type metadata accessor for DOCTipsFamilyTip();
    v10 = sub_10005A360(&qword_100643AD8, (uint64_t (*)(uint64_t))type metadata accessor for DOCTipsFamilyTip, (uint64_t)&unk_1004E63EC);
    Tip.shouldDisplayUpdates.getter(v9, v10);
    v11 = swift_release(v8);
    AsyncMapSequence.base.getter(v5, v11);
    v12 = sub_100062698(&qword_100646A68, &qword_100646A48, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
    dispatch thunk of AsyncSequence.makeAsyncIterator()(v7, v12);
    v13 = AsyncMapSequence.transform.getter(v5);
    v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v5);
    v16 = AsyncMapSequence.Iterator.init(_:transform:)(v6, v13, v15, v7, &type metadata for Bool, v12);
    *(_QWORD *)(v0 + 200) = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable;
    v17 = static MainActor.shared.getter(v16);
    *(_QWORD *)(v0 + 208) = v17;
    v24 = (uint64_t (*)(uint64_t, void *, uint64_t))((char *)&dword_100646A70 + dword_100646A70);
    v18 = (_QWORD *)swift_task_alloc(unk_100646A74);
    *(_QWORD *)(v0 + 216) = v18;
    *v18 = v0;
    v18[1] = sub_10017BC84;
    return v24(v17, &protocol witness table for MainActor, v0 + 48);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 96);
    v21 = *(_QWORD *)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 80);
    swift_release(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10017BC84(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 208);
  v3 = *(_QWORD *)(*v1 + 216);
  *(_BYTE *)(*v1 + 228) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  return swift_task_switch(sub_10017BCE4, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_10017BCE4(uint64_t a1)
{
  uint64_t v1;
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(uint64_t, void *, uint64_t);

  v2 = *(unsigned __int8 *)(v1 + 228);
  if (v2 == 2)
  {
    v3 = *(void **)(v1 + 192);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 144) + 8))(*(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 136));

    v4 = *(_QWORD *)(v1 + 152);
    v5 = *(_QWORD *)(v1 + 128);
    v7 = *(_QWORD *)(v1 + 96);
    v6 = *(_QWORD *)(v1 + 104);
    v8 = *(_QWORD *)(v1 + 80);
    swift_release(*(_QWORD *)(v1 + 168));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v1 + 72);
    v10 = *(_QWORD *)(v1 + 80);
    v12 = v2 & 1;
    v13 = *(_QWORD *)(v1 + 64);
    v14 = Logger.DocumentManager.unsafeMutableAddressor(a1);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v14, v13);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v18 = 67109120;
      *(_DWORD *)(v1 + 224) = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 224, v1 + 228);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Files Family Tip, shouldDisplay changed to %{BOOL}d", v18, 8u);
      swift_slowDealloc(v18, -1, -1);
    }
    v19 = *(_BYTE **)(v1 + 192);
    v20 = *(_QWORD *)(v1 + 200);
    v22 = *(_QWORD *)(v1 + 72);
    v21 = *(_QWORD *)(v1 + 80);
    v23 = *(_QWORD *)(v1 + 64);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v19[v20] = v12;
    sub_100005254();
    v24 = static MainActor.shared.getter(objc_msgSend(v19, "docSetNeedsUpdateContentUnavailableConfiguration"));
    *(_QWORD *)(v1 + 208) = v24;
    v26 = (uint64_t (*)(uint64_t, void *, uint64_t))((char *)&dword_100646A70 + dword_100646A70);
    v25 = (_QWORD *)swift_task_alloc(unk_100646A74);
    *(_QWORD *)(v1 + 216) = v25;
    *v25 = v1;
    v25[1] = sub_10017BC84;
    return v26(v24, &protocol witness table for MainActor, v1 + 48);
  }
}

uint64_t sub_10017BEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v6 = sub_10006922C(&qword_100646A60);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[10] = v7;
  v3[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100646A78);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Tips.Status(0);
  v3[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[14] = v10;
  v3[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    ObjectType = swift_getObjectType(a1);
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
    v14 = v13;
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v3[16] = v12;
  v3[17] = v14;
  return swift_task_switch(sub_10017BFEC, v12, v14);
}

uint64_t sub_10017BFEC()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[18] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 2, v0[9]);
  sub_10006922C(&qword_100646A50);
  sub_100062698(&qword_100646A80, &qword_100646A50, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v1 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[19] = v1;
  *v1 = v0;
  v1[1] = sub_10017C094;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[12], v0[6], v0[7]);
}

uint64_t sub_10017C094()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 152));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 128);
    v4 = *(_QWORD *)(v2 + 136);
    v5 = sub_10017C258;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 144))(v2 + 16, 0);
    v3 = *(_QWORD *)(v2 + 128);
    v4 = *(_QWORD *)(v2 + 136);
    v5 = sub_10017C104;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10017C104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000CB4C(v3, &qword_100646A78);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 120), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    v11 = (int *)AsyncMapSequence.Iterator.transform.getter(v9);
    *(_QWORD *)(v0 + 160) = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc(v11[1]);
    *(_QWORD *)(v0 + 168) = v13;
    *v13 = v0;
    v13[1] = sub_10017C2BC;
    return ((uint64_t (*)(uint64_t, _QWORD))v14)(v0 + 176, *(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_10017C258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t))(v0 + 144))(v0 + 16, 1);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017C2BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 160);
  v4 = *(_QWORD *)(*v0 + 112);
  v3 = *(_QWORD *)(*v0 + 120);
  v5 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 177) = *(_BYTE *)(v1 + 176);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_10017C340, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_10017C340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 177);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_10017C398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v5 + 279) = a5;
  *(_QWORD *)(v5 + 160) = a4;
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v5 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v5 + 192) = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 200) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 208) = v10;
  *(_QWORD *)(v5 + 216) = v11;
  return swift_task_switch(sub_10017C440, v10, v11);
}

uint64_t sub_10017C440()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t (*v7)(void);

  v1 = v0[20] + 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v0[28] = Strong;
  if (Strong)
  {
    v7 = (uint64_t (*)(void))((char *)&dword_10064E558 + dword_10064E558);
    v3 = (_QWORD *)swift_task_alloc(unk_10064E55C);
    v0[29] = v3;
    *v3 = v0;
    v3[1] = sub_10017C4E4;
    v4 = v7;
  }
  else
  {
    swift_release(v0[25]);
    v5 = v0[23];
    swift_task_dealloc(v0[24]);
    swift_task_dealloc(v5);
    v4 = (uint64_t (*)(void))v0[1];
  }
  return v4();
}

uint64_t sub_10017C4E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10017C53C, *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
}

uint64_t sub_10017C53C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  __n128 v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  BOOL *v56;
  id v57;

  v4 = *(void **)(v1 + 240);
  if (!v4)
  {
    v15 = *(void **)(v1 + 224);
    v7 = *(_QWORD *)(v1 + 200);
LABEL_40:
    swift_release(v7);

    v46 = *(_QWORD *)(v1 + 184);
    swift_task_dealloc(*(_QWORD *)(v1 + 192));
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v57 = *(id *)(v1 + 240);
  v5 = objc_msgSend(v4, "members");
  v6 = sub_10004F2F0(0, &qword_100643AA0, FAFamilyMember_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v5 = (id)v7;
    else
      v5 = (id)(v7 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v5);
    swift_bridgeObjectRelease(v7);
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_20;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
    else
      v10 = *(id *)(v7 + 8 * i + 32);
    v11 = v10;
    if (objc_msgSend(v10, "memberType") || (v12 = objc_msgSend(v11, "isMe"), (v12 & 1) != 0))
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v13 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
      specialized ContiguousArray._endMutation()(v14);
    }
  }
LABEL_20:
  swift_bridgeObjectRelease(v7);
  v7 = (uint64_t)_swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 248) = _swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(v1 + 192);
  v17 = *(_QWORD *)(v1 + 168);
  v18 = *(_QWORD *)(v1 + 176);
  v8 = Logger.DocumentManager.unsafeMutableAddressor(v19);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v3(v16, v8, v17);
  v20 = swift_retain_n(_swiftEmptyArrayStorage, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v24 = 134217984;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
      || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    {
      v54 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v25 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_release(_swiftEmptyArrayStorage);
    }
    else
    {
      v25 = _swiftEmptyArrayStorage[2];
    }
    swift_release(_swiftEmptyArrayStorage);
    *(_QWORD *)(v1 + 152) = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 152, v1 + 160);
    swift_release(_swiftEmptyArrayStorage);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Files Family Tip, adultsInFamily count %ld", v24, 0xCu);
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    swift_release_n(_swiftEmptyArrayStorage, 2, v23);
  }
  v56 = (BOOL *)(v1 + 276);

  v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 176) + 8);
  v55(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 168));
  v26 = objc_msgSend(v57, "me");
  if (v26)
  {
    v2 = v26;
    v0 = v1 + 80;
    v5 = objc_msgSend(v26, "memberType");
    if (qword_100641100 == -1)
    {
LABEL_28:
      v27 = v5 == 0;
      v28 = sub_10006922C(&qword_100646A10);
      v29 = sub_10007E788(v28, (uint64_t)qword_100652748);
      *v56 = v27;
      v30 = swift_beginAccess(v29, v0, 33, 0);
      Tips.Parameter.wrappedValue.setter(v56, v28, v30);
      swift_endAccess(v0);

      goto LABEL_29;
    }
LABEL_45:
    swift_once(&qword_100641100, sub_1000B0FC0);
    goto LABEL_28;
  }
LABEL_29:
  v31 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))v3)(*(_QWORD *)(v1 + 184), v8, *(_QWORD *)(v1 + 168));
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v34 = 67109120;
    if (qword_100641100 != -1)
      swift_once(&qword_100641100, sub_1000B0FC0);
    v35 = sub_10006922C(&qword_100646A10);
    v36 = sub_10007E788(v35, (uint64_t)qword_100652748);
    v37 = swift_beginAccess(v36, v1 + 128, 32, 0);
    Tips.Parameter.wrappedValue.getter((_QWORD *)(v1 + 278), v35, v37);
    v38 = *(unsigned __int8 *)(v1 + 278);
    swift_endAccess(v1 + 128);
    *(_DWORD *)(v1 + 272) = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 272, v56);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Files Family Tip, user isAdult %{BOOL}d", v34, 8u);
    swift_slowDealloc(v34, -1, -1);
  }
  v39 = *(_QWORD *)(v1 + 184);
  v40 = *(_QWORD *)(v1 + 168);

  v55(v39, v40);
  if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    if (*(uint64_t *)(v7 + 16) >= 1)
      goto LABEL_36;
LABEL_39:
    v15 = *(void **)(v1 + 224);
    v45 = *(_QWORD *)(v1 + 200);

    swift_release(v45);
    goto LABEL_40;
  }
  v52 = swift_bridgeObjectRetain(v7);
  v53 = _CocoaArrayWrapper.endIndex.getter(v52);
  swift_release(v7);
  if (v53 < 1)
    goto LABEL_39;
LABEL_36:
  if (qword_1006410F8 != -1)
    swift_once(&qword_1006410F8, sub_1000B1080);
  v41 = *(_BYTE *)(v1 + 279);
  v42 = sub_10006922C(&qword_100646A10);
  v43 = sub_10007E788(v42, (uint64_t)qword_100652730);
  *(_BYTE *)(v1 + 277) = 1;
  v44 = swift_beginAccess(v43, v1 + 104, 33, 0);
  Tips.Parameter.wrappedValue.setter(v1 + 277, v42, v44);
  swift_endAccess(v1 + 104);
  if ((v41 & 1) != 0)
    goto LABEL_39;
  v48 = *(_QWORD *)(v1 + 224);
  sub_100092328(v48 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher, v1 + 16);
  sub_10007E7A0((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v49 = *(_QWORD *)(v48 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  *(_QWORD *)(v1 + 256) = v49;
  v50 = dword_10064E4CC;
  swift_bridgeObjectRetain(v49);
  v51 = (_QWORD *)swift_task_alloc(v50);
  *(_QWORD *)(v1 + 264) = v51;
  *v51 = v1;
  v51[1] = sub_10017CB90;
  return sub_100316A00(v49, v7);
}

uint64_t sub_10017CB90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 256);
  v3 = *(_QWORD *)(*v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*v0 + 264));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10017CBF8, *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 216));
}

uint64_t sub_10017CBF8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 200));

  sub_100068588((_QWORD *)(v0 + 16));
  v3 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_10017CC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v10;
  unint64_t v11;
  _BYTE v12[128];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits);
  if (!v2)
    return 0;
  swift_retain();
  sub_10006B424((uint64_t)v12);
  swift_release(v2);
  sub_10003BDA0((uint64_t)v12);
  v3 = v12[16];
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8);
  if (v5)
  {
    v6 = v4[2];
    v7 = *v4;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    sub_100144F34(v7, v5, v6);
    v8 = 0x5040302010000uLL >> (8 * v7);
  }
  else
  {
    LOBYTE(v8) = 6;
  }
  v10 = sub_100075C04(v8, v3);
  v11 = v10[2];
  swift_bridgeObjectRelease(v10);
  return v11 > 1;
}

void DOCItemCollectionViewController.splitViewController.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned int v4;
  id v5;
  void *v6;
  id v7;
  objc_super v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0
      || (v3 = *(id *)v2,
          v4 = objc_msgSend(v3, "doc_displaysSearchResults"),
          v3,
          !v4)
      || (v5 = objc_msgSend(v0, "presentingViewController")) == 0
      || (v6 = v5,
          v7 = objc_msgSend(v5, "splitViewController"),
          v6,
          !v7))
    {
      v8.receiver = v0;
      v8.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
      objc_msgSendSuper2(&v8, "splitViewController");
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10017CEE0(_QWORD *a1, id a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  void *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 aBlock;
  __int128 v84;
  uint64_t (*v85)();
  uint64_t v86;
  __int128 v87;
  _OWORD v88[2];

  v3 = a1;
  v4 = *a1;
  v5 = a1[1];
  v6 = (__int128 *)(a1 + 2);
  v7 = a1[2];
  v8 = a1[3];
  v81 = a1[4];
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2;
  if (!a2)
  {
    v14 = v5;
    v75 = v8;
    v76 = v7;
    v78 = v4;
    v68 = v12;
    v15 = (uint64_t)sub_100033CA4();
    v16 = *(_OWORD *)v3;
    v87 = *v6;
    v88[0] = v16;
    v72 = 0;
    v71 = v3;
    v70 = v9;
    v69 = v10;
    v77 = v14;
    if ((unint64_t)v15 >> 62)
      goto LABEL_19;
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1001D0760((uint64_t)v88);
    sub_1001D0760((uint64_t)&v87);
    swift_retain();
    swift_bridgeObjectRetain(v15);
    for (; v17; v17 = _CocoaArrayWrapper.endIndex.getter(v37))
    {
      v19 = *((_QWORD *)&v88[0] + 1);
      v18 = *(_QWORD *)&v88[0];
      v20 = v15 & 0xC000000000000001;
      v21 = 4;
      v73 = v15 & 0xC000000000000001;
      v74 = v17;
      while (1)
      {
        v31 = v20
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21 - 4, v15)
            : (char *)*(id *)(v15 + 8 * v21);
        v13 = v31;
        v32 = v21 - 3;
        if (__OFADD__(v21 - 4, 1))
          break;
        v33 = &v31[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
        v35 = *(_QWORD *)&v31[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
        v34 = *(_QWORD *)&v31[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                            + 8];
        if (v34)
        {
          v36 = v35 == v18 && v34 == v19;
          if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v33, v34, v18, v19, 0) & 1) != 0)
          {
            swift_bridgeObjectRelease(v15);
            sub_1001D0A08((uint64_t)v88);
            sub_1001D0A08((uint64_t)&v87);
            swift_bridgeObjectRelease(v15);
            swift_release(v81);
            goto LABEL_26;
          }
        }
        else
        {
          v80 = *((_QWORD *)v33 + 4);
          v22 = v31;
          v23 = v18;
          v24 = v15;
          v25 = *((_QWORD *)v33 + 2);
          v26 = *((_QWORD *)v33 + 3);
          v27 = v81;
          sub_1001D0760((uint64_t)v88);
          sub_1001D0760((uint64_t)&v87);
          swift_retain();
          v28 = v25;
          v29 = v26;
          v15 = v24;
          v18 = v23;
          v13 = v22;
          v17 = v74;
          sub_1001D09CC(v35, 0, v28, v29, v80);
          v30 = v27;
          v20 = v73;
          sub_1001D09CC(v78, v77, v76, v75, v30);
        }

        ++v21;
        if (v32 == v17)
          goto LABEL_23;
      }
      __break(1u);
LABEL_19:
      if (v15 < 0)
        v37 = v15;
      else
        v37 = v15 & 0xFFFFFFFFFFFFFF8;
      sub_1001D0760((uint64_t)v88);
      sub_1001D0760((uint64_t)&v87);
      swift_retain();
      swift_bridgeObjectRetain(v15);
    }
LABEL_23:
    swift_bridgeObjectRelease(v15);
    sub_1001D0A08((uint64_t)v88);
    sub_1001D0A08((uint64_t)&v87);
    swift_bridgeObjectRelease(v15);
    v38 = swift_release(v81);
    v39 = Logger.UI.unsafeMutableAddressor(v38);
    v40 = v69;
    v41 = v68;
    v42 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v39, v70);
    sub_1001D0760((uint64_t)v88);
    sub_1001D0760((uint64_t)&v87);
    swift_retain();
    sub_1001D0760((uint64_t)v88);
    sub_1001D0760((uint64_t)&v87);
    swift_retain();
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc(22, -1);
      v47 = swift_slowAlloc(64, -1);
      v82 = v47;
      *(_DWORD *)v46 = 136315394;
      *(_QWORD *)&aBlock = sub_1000544FC(0xD000000000000018, 0x80000001005167F0, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8);
      *(_WORD *)(v46 + 12) = 2080;
      v3 = v71;
      v48 = *((_OWORD *)v71 + 1);
      aBlock = *(_OWORD *)v71;
      v84 = v48;
      v85 = (uint64_t (*)())v71[4];
      sub_1001D0760((uint64_t)v88);
      sub_1001D0760((uint64_t)&v87);
      v49 = v81;
      swift_retain();
      v50 = String.init<A>(describing:)(&aBlock, &type metadata for DOCCollectionSection);
      v52 = v51;
      *(_QWORD *)&aBlock = sub_1000544FC(v50, v51, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8);
      swift_bridgeObjectRelease(v52);
      sub_1001D0A08((uint64_t)v88);
      sub_1001D0A08((uint64_t)&v87);
      swift_release(v49);
      sub_1001D0A08((uint64_t)v88);
      sub_1001D0A08((uint64_t)&v87);
      swift_release(v49);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s could not find header for section: %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v70);
      v13 = 0;
      a2 = v72;
    }
    else
    {
      sub_1001D0A08((uint64_t)v88);
      sub_1001D0A08((uint64_t)&v87);
      v53 = v81;
      swift_release(v81);
      sub_1001D0A08((uint64_t)v88);
      sub_1001D0A08((uint64_t)&v87);

      swift_release(v53);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
      v13 = 0;
LABEL_26:
      a2 = v72;
      v3 = v71;
    }
  }
  v54 = v3[4];
  v55 = *(unsigned __int8 *)(v54 + 24);
  if (v55 != 1)
    goto LABEL_31;
  *(_BYTE *)(v54 + 24) = 0;
  if (v13)
  {
    while (1)
    {
      v56 = v55 ^ 1;
      v57 = objc_opt_self(UIView);
      v58 = swift_allocObject(&unk_1005CDDA8, 25, 7);
      *(_QWORD *)(v58 + 16) = v13;
      *(_BYTE *)(v58 + 24) = v56;
      v59 = swift_allocObject(&unk_1005CDDD0, 32, 7);
      *(_QWORD *)(v59 + 16) = sub_1001D09B0;
      *(_QWORD *)(v59 + 24) = v58;
      v85 = sub_10010DF60;
      v86 = v59;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v84 = sub_10006655C;
      *((_QWORD *)&v84 + 1) = &unk_1005CDDE8;
      v60 = _Block_copy(&aBlock);
      v61 = v86;
      v62 = a2;
      v63 = v13;
      swift_retain();
      a2 = v63;
      swift_release(v61);
      objc_msgSend((id)v57, "performWithoutAnimation:", v60);
      _Block_release(v60);
      LOBYTE(v57) = swift_isEscapingClosureAtFileLocation(v59, "", 114, 384, 40, 1);

      swift_release(v58);
      swift_release(v59);
      if ((v57 & 1) == 0)
        break;
      __break(1u);
LABEL_31:
      *(_BYTE *)(v54 + 24) = 1;
      if (!v13)
        goto LABEL_32;
    }
  }
  else
  {
LABEL_32:
    v64 = a2;
  }
  v65 = *(_QWORD *)(v79 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
  v66 = swift_bridgeObjectRetain(v65);
  sub_100039F10(v66, 2);
  swift_bridgeObjectRelease(v65);

}

void sub_10017D5A0(char a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  double v6;
  double v7;
  id v8;
  double v9;
  unint64_t v10;
  void *v11;
  id v12;
  id v13;

  v2 = v1;
  v4 = objc_msgSend(v2, "traitCollection");
  sub_10005897C(v4, 0, 0, 1, a1);

  v5 = sub_1002C9870();
  objc_msgSend(v5, "enclosingUIPHorizontalInset");
  v7 = v6;

  v8 = sub_1002C9870();
  v9 = 0.0;
  if (objc_msgSend(v8, "contextPrefersVariableBlurBottomTabBar"))
  {
    v10 = sub_1001BFEB0();
    v9 = UITraitCollection.subscript.getter(&type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, v10);
  }
  objc_msgSend(v2, "loadViewIfNeeded");
  v11 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v11)
  {
    objc_msgSend(v11, "setVerticalScrollIndicatorInsets:", 0.0, -v7, v9, -v7);

    v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    v12 = objc_msgSend(v2, "viewIfLoaded");
    v13 = objc_msgSend(v12, "window");

    if (v13)
      sub_1000926C8();
  }
  else
  {
    __break(1u);
  }
}

void DOCItemCollectionViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char v40[24];
  void **aBlock;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;

  v6 = ((uint64_t (*)(void))static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:))();
  v8 = v7;
  v9 = static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v11 = v10;
  v12 = DOCSplitViewState.isSidebarShownInline.getter(v6 & 1, v8);
  v13 = DOCSplitViewState.isSidebarShownInline.getter(v9 & 1, v11);
  if (!objc_msgSend(v3, "enclosedInUIPDocumentLanding"))
    return;
  if (((v13 ^ v12) & 1) == 0)
    return;
  v14 = objc_msgSend(v3, "viewIfLoaded");
  if (!v14)
    return;
  v15 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v15)
  {
LABEL_10:

    return;
  }
  v39 = v14;
  v38 = v15;
  v16 = objc_msgSend(v38, "snapshotViewAfterScreenUpdates:", 1);
  if (!v16)
  {

    v14 = v38;
    goto LABEL_10;
  }
  v17 = v16;
  v18 = objc_opt_self(UIView);
  v19 = (_QWORD *)swift_allocObject(&unk_1005CBD00, 40, 7);
  v19[2] = v17;
  v19[3] = v39;
  v19[4] = v38;
  v20 = swift_allocObject(&unk_1005CBD28, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_1001BC204;
  *(_QWORD *)(v20 + 24) = v19;
  v45 = sub_100066584;
  v46 = v20;
  aBlock = _NSConcreteStackBlock;
  v42 = 1107296256;
  v43 = sub_10006655C;
  v44 = &unk_1005CBD40;
  v21 = _Block_copy(&aBlock);
  v22 = v46;
  v23 = v38;
  v24 = v17;
  v25 = v39;
  swift_retain();
  objc_msgSend((id)v18, "performWithoutAnimation:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v20, "", 111, 1338, 40, 1);
  swift_release(v20);
  if ((v18 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v26 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v40, 0, 0);
    if (*(_QWORD *)v26 == 2)
      v27 = 1;
    else
      v27 = sub_1002C99D4() ^ 1;
    v28 = swift_allocObject(&unk_1005CBD78, 33, 7);
    *(_QWORD *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v23;
    *(_BYTE *)(v28 + 32) = v27 & 1;
    v45 = sub_1001BC24C;
    v46 = v28;
    aBlock = _NSConcreteStackBlock;
    v42 = 1107296256;
    v43 = sub_100018CC0;
    v44 = &unk_1005CBD90;
    v29 = _Block_copy(&aBlock);
    v30 = v46;
    v31 = v23;
    v32 = v24;
    swift_release(v30);
    v33 = swift_allocObject(&unk_1005CBDC8, 32, 7);
    *(_QWORD *)(v33 + 16) = v31;
    *(_QWORD *)(v33 + 24) = v32;
    v45 = sub_1001BC284;
    v46 = v33;
    aBlock = _NSConcreteStackBlock;
    v42 = 1107296256;
    v43 = sub_100018CC0;
    v44 = &unk_1005CBDE0;
    v34 = _Block_copy(&aBlock);
    v35 = v46;
    v36 = v31;
    v37 = v32;
    objc_msgSend(a3, "animateAlongsideTransition:completion:", v29, v34, swift_release(v35).n128_f64[0]);

    _Block_release(v34);
    _Block_release(v29);
    swift_release(v19);
  }
}

void sub_10017DAA8(void *a1, void *a2, void *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;
  CGRect v21;
  CGRect v22;

  objc_msgSend(a1, "setAlpha:", 0.0);
  objc_msgSend(a2, "addSubview:", a1);
  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004DAC10;
  v9 = objc_msgSend(a1, "centerXAnchor");
  v10 = objc_msgSend(a2, "centerXAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(a1, "topAnchor");
  v13 = objc_msgSend(a2, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(a1, "widthAnchor");
  objc_msgSend(a3, "frame");
  v16 = objc_msgSend(v15, "constraintEqualToConstant:", CGRectGetWidth(v21));

  *(_QWORD *)(v8 + 48) = v16;
  v17 = objc_msgSend(a1, "heightAnchor");
  objc_msgSend(a3, "frame");
  v18 = objc_msgSend(v17, "constraintEqualToConstant:", CGRectGetHeight(v22));

  *(_QWORD *)(v8 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

}

void sub_10017DD18(uint64_t a1, void *a2, void *a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v7 = objc_opt_self(UIView);
  v8 = swift_allocObject(&unk_1005CEB40, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = swift_allocObject(&unk_1005CEB68, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1001D17DC;
  *(_QWORD *)(v9 + 24) = v8;
  v14[4] = sub_10010DF60;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10006655C;
  v14[3] = &unk_1005CEB80;
  v10 = _Block_copy(v14);
  v11 = v15;
  v12 = a2;
  v13 = a3;
  swift_retain();
  objc_msgSend((id)v7, "performWithoutAnimation:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v9, "", 111, 1380, 44, 1);
  swift_release(v9);
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a4 & 1) != 0)
    {
      objc_msgSend(v13, "setAlpha:", 1.0);
      objc_msgSend(v12, "setAlpha:", 0.0);
    }
    swift_release(v8);
  }
}

void sub_10017DEA0(char *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  Class isa;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  id v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  double v39;
  double v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  double v45;
  double v46;
  void *v47;
  id v48;
  double MinY;
  uint64_t v50;
  double v51;
  double v52;
  char v53;
  void *v54;
  id v55;
  double v56;
  uint64_t v57;
  double v58;
  char v59;
  void *v60;
  double v61;
  double v62;
  void *v63;
  double v64;
  int v65;
  int v66;
  char v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  __n128 v76;
  void *v77;
  id v78;
  id v79;
  char *v80;
  char v81;
  int v82;
  char v83;
  char v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  char v92;
  void (*v93)(char *, uint64_t);
  double v94;
  void *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  CGRect v102;

  v3 = v2;
  v99 = type metadata accessor for IndexPath(0);
  v101 = *(_QWORD *)(v99 - 8);
  v6 = __chkstk_darwin(v99);
  v98 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v100 = (char *)&v98 - v8;
  objc_msgSend(v2, "loadViewIfNeeded");
  v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v10 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v10)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v11 = objc_msgSend(v10, "collectionViewLayout");
  if (qword_100640E40 != -1)
    swift_once(&qword_100640E40, sub_10009B250);
  v12 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "layoutAttributesForSupplementaryViewOfKind:atIndexPath:", v12, isa);

  if (v14)
  {
    if ((sub_10006BCB4() & 1) != 0)
      objc_msgSend(a1, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
    objc_msgSend(v3, "loadViewIfNeeded");
    v15 = *(void **)&v3[v9];
    if (!v15)
      goto LABEL_78;
    v16 = v15;
    objc_msgSend(v14, "frame");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;
    objc_msgSend(v3, "loadViewIfNeeded");
    v25 = *(void **)&v3[v9];
    if (!v25)
    {
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    v26 = objc_msgSend(v25, "superview");
    objc_msgSend(v16, "convertRect:toView:", v26, v18, v20, v22, v24);
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;

    objc_msgSend(v3, "loadViewIfNeeded");
    v35 = *(void **)&v3[v9];
    if (!v35)
    {
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    v36 = v35;
    objc_msgSend(v3, "loadViewIfNeeded");
    v37 = *(void **)&v3[v9];
    if (!v37)
    {
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    v38 = objc_msgSend(v37, "contentOffset");
    v40 = UIView.doc_pixelRounded(_:)(v38, v39);

    objc_msgSend(v3, "loadViewIfNeeded");
    v41 = *(void **)&v3[v9];
    if (!v41)
    {
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    v42 = v41;
    objc_msgSend(v3, "loadViewIfNeeded");
    v43 = *(void **)&v3[v9];
    if (!v43)
    {
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    v44 = objc_msgSend(v43, "adjustedContentInset");
    v46 = UIView.doc_pixelRounded(_:)(v44, v45);

    objc_msgSend(v3, "loadViewIfNeeded");
    v47 = *(void **)&v3[v9];
    if (!v47)
    {
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    v48 = v47;
    v102.origin.x = v28;
    v102.origin.y = v30;
    v102.size.width = v32;
    v102.size.height = v34;
    MinY = CGRectGetMinY(v102);
    v51 = UIView.doc_pixelRounded(_:)(v50, MinY);

    v52 = v40 + v46;
    v53 = v40 + v46 > 0.0 && v51 == v46;
    sub_100423C68(v53);
    objc_msgSend(v3, "loadViewIfNeeded");
    v54 = *(void **)&v3[v9];
    if (!v54)
      goto LABEL_85;
    v55 = objc_msgSend(v54, "safeAreaInsets");
    v57 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned;
    if (a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned] != 1
      || (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] & 1) == 0)
    {
      v56 = 0.0;
    }
    v58 = *(double *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension];
    *(double *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = v56;
    if (v56 != v58)
      v55 = objc_msgSend(a1, "setNeedsUpdateConfiguration");
    if (IndexPath.section.getter(v55))
    {
      v59 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators];
      a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = 0;
      if ((v59 & 1) == 0)
        goto LABEL_32;
    }
    else
    {
      objc_msgSend(v3, "loadViewIfNeeded");
      v60 = *(void **)&v3[v9];
      if (!v60)
      {
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      objc_msgSend(v60, "contentOffset");
      v62 = v61;
      objc_msgSend(v3, "loadViewIfNeeded");
      v63 = *(void **)&v3[v9];
      if (!v63)
      {
LABEL_87:
        __break(1u);
        return;
      }
      objc_msgSend(v63, "_effectiveContentInset");
      v65 = v62 <= -v64;
      v66 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators];
      a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = v65;
      if (v65 == v66)
      {
LABEL_32:
        sub_10003DDDC();
        if ((v68 & 1) == 0)
        {
          v73 = 0;
          goto LABEL_43;
        }
        v69 = sub_10009BBE8();
        v70 = objc_msgSend(v69, "arrangedSubviews");

        v71 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
        v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

        if ((unint64_t)v72 >> 62)
        {
          if (v72 < 0)
            v97 = v72;
          else
            v97 = v72 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v72);
          v73 = (char *)_CocoaArrayWrapper.endIndex.getter(v97);
          swift_bridgeObjectRelease(v72);
          if (!v73)
            goto LABEL_41;
        }
        else
        {
          v73 = *(char **)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v73)
          {
LABEL_41:
            swift_bridgeObjectRelease(v72);
LABEL_43:
            if (!IndexPath.section.getter(v68)
              && v73
              && (v77 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView]) != 0)
            {
              sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
              v78 = v14;
              v79 = v77;
              v80 = v73;
              v81 = static NSObject.== infix(_:_:)(v80, v79);

              v14 = v78;
              v82 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator];
              a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = v81 & 1;
              if ((v81 & 1) == v82)
                goto LABEL_50;
            }
            else
            {
              v83 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator];
              a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 0;
              if ((v83 & 1) == 0)
              {
LABEL_50:
                v84 = sub_100063820(v76);
                v85 = v100;
                v86 = v101;
                v87 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
                v88 = v99;
                v87(v100, a2, v99);
                if ((v84 & 1) != 0)
                {
                  v89 = a1[v57];
                  v90 = v98;
                  v91 = ((uint64_t (*)(char *, char *, uint64_t))v87)(v98, v85, v88);
                  v92 = (v89 & 1) != 0 || IndexPath.section.getter(v91) == 0;
                  v93 = *(void (**)(char *, uint64_t))(v86 + 8);
                  v93(v90, v88);
                  v93(v85, v88);
                }
                else
                {
                  v92 = 0;
                  (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v88);
                }
                sub_100423890(v92);
                v94 = v52 * 0.25;
                if (v52 * 0.25 > 1.0)
                  v94 = 1.0;
                if (v51 > v46 || v52 <= 0.0)
                  v94 = 0.0;
                *(double *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha] = v94;
                v96 = *(void **)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView];
                if (v96)
                  objc_msgSend(v96, "setAlpha:");

                return;
              }
            }
            sub_100425EF4();
            goto LABEL_50;
          }
        }
        v74 = v73 - 1;
        if (__OFSUB__(v73, 1))
        {
          __break(1u);
        }
        else if ((v72 & 0xC000000000000001) == 0)
        {
          if (((unint64_t)v74 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v74 < *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v75 = (char *)*(id *)(v72 + 8 * (_QWORD)v74 + 32);
LABEL_40:
            v73 = v75;
            goto LABEL_41;
          }
          __break(1u);
          goto LABEL_77;
        }
        v75 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v74, v72);
        goto LABEL_40;
      }
    }
    v67 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator];
    a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 1;
    if ((v67 & 1) == 0)
      sub_100425EF4();
    sub_100425EF4();
    goto LABEL_32;
  }
}

uint64_t sub_10017E5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType(a3, a2);
  return sub_1001BDCA4(a1, a2, a3);
}

uint64_t sub_10017E610(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  os_log_t v51;
  uint64_t v52;
  __n128 v53;
  char *v55;
  uint64_t v56;
  os_log_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
  v12 = *(_QWORD *)(v11 + 16);
  v60 = v4;
  v61 = v8;
  v59 = v7;
  if (v12)
  {
    v55 = (char *)&v55 - v9;
    v13 = *(NSObject **)(v10 + 8);
    v14 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRetain_n(v11, 2);
    v57 = v13;
    swift_bridgeObjectRetain(v13);
    v56 = v14;
    swift_bridgeObjectRetain(v14);
    v58 = v11;
    v15 = (uint64_t *)(v11 + 64);
    while (1)
    {
      v16 = *(v15 - 1);
      v17 = *v15;
      v19 = *(v15 - 4);
      v18 = *(v15 - 3);
      swift_beginAccess(*v15 + 16, v64, 0, 0);
      v20 = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v16);
      swift_retain();
      swift_bridgeObjectRetain(v20);
      v21 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v22 = Array<A>.contains(node:)(a1, v20, v21);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) != 0)
        break;
      swift_release(v17);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v18);
      v15 += 5;
      if (!--v12)
      {
        swift_bridgeObjectRelease(v56);
        swift_bridgeObjectRelease(v57);
        v8 = swift_bridgeObjectRelease_n(v58, 2);
        v4 = v60;
        v3 = v61;
        v7 = v59;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v57);
    v35 = swift_bridgeObjectRelease_n(v58, 2);
    v36 = Logger.UI.unsafeMutableAddressor(v35);
    v37 = v60;
    v38 = v61;
    v39 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v55, v36, v61);
    swift_bridgeObjectRetain_n(v18, 2);
    swift_bridgeObjectRetain_n(v16, 2);
    swift_retain_n(v17, 2);
    v40 = swift_unknownObjectRetain_n(a1, 2);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.info.getter();
    v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v44 = swift_slowAlloc(32, -1);
      LODWORD(v59) = v43;
      v45 = v44;
      v58 = swift_slowAlloc(96, -1);
      v63 = v58;
      *(_DWORD *)v45 = 136315650;
      v57 = v41;
      v62 = sub_1000544FC(0xD000000000000023, 0x80000001005167C0, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain(v18);
      v62 = sub_1000544FC(v19, v18, &v63);
      v46 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      swift_release_n(v17, 2, v46);
      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease_n(v18, 3);
      *(_WORD *)(v45 + 22) = 2080;
      v47 = objc_msgSend(a1, "displayName");
      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v50 = v49;

      v62 = sub_1000544FC(v48, v50, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v50);
      v51 = v57;
      _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v59, "%s found section %s containing item: %s", (uint8_t *)v45, 0x20u);
      v52 = v58;
      swift_arrayDestroy(v58, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v45, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v61);
    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
      swift_release_n(v17, 2, v53);
      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease_n(v18, 2);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    }
    v34 = *(unsigned __int8 *)(v17 + 24);
    swift_release(v17);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
LABEL_6:
    v23 = Logger.UI.unsafeMutableAddressor(v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v23, v3);
    v24 = swift_unknownObjectRetain_n(a1, 2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc(22, -1);
      v28 = swift_slowAlloc(64, -1);
      v63 = v28;
      *(_DWORD *)v27 = 136315394;
      v62 = sub_1000544FC(0xD000000000000023, 0x80000001005167C0, &v63);
      *(_QWORD *)&v29 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63).n128_u64[0];
      *(_WORD *)(v27 + 12) = 2080;
      v30 = objc_msgSend(a1, "displayName", v29);
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v33 = v32;

      v62 = sub_1000544FC(v31, v33, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v33);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s can not find section containing item: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    return 1;
  }
  return v34;
}

id sub_10017EC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  char *v13;
  _QWORD *v14;
  void *v15;
  id result;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  id v41;
  char v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  id v50;
  char v51;
  uint64_t v52;
  double v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  void *v62;
  void *v63;
  Swift::String v64;
  Swift::String_optional v65;
  Swift::String v66;
  void *object;
  uint64_t v68;
  id v69;
  char *v70;
  NSString v71;
  void *v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void *v78;
  Swift::String v79;
  Swift::String_optional v80;
  Swift::String v81;
  void *v82;
  uint64_t v83;
  id v84;
  char *v85;
  NSString v86;
  void *v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  Class v94;
  unint64_t v95;
  unint64_t v96;
  id v97;
  void **aBlock;
  uint64_t v99;
  void (*v100)(uint64_t, void *, void *, void *);
  void *v101;
  void *v102;
  uint64_t v103;
  unint64_t v104;
  char v105[24];
  char v106[24];
  Swift::String v107;
  Swift::String v108;

  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v106, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v11);
  if (!Strong)
    return 0;
  v13 = (char *)Strong;
  v14 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v105, 0, 0);
  if (*v14 == 2
    || (v15 = sub_100195148(a1), (v15 & 1) != 0)
    || (v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(_QWORD *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {

    return 0;
  }
  if (IndexPath.count.getter(v15) != 2)
    goto LABEL_10;
  result = *(id *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result)
  {
    __break(1u);
    goto LABEL_42;
  }
  if ((objc_msgSend(result, "isGathering") & 1) == 0
    && (v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_100195148(a1) & 1) != 0)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_17:

    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    goto LABEL_17;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v18 = sub_10017A754((uint64_t)v10, 0);
  if (!v18
    || (v20 = v18,
        ObjectType = swift_getObjectType(v18, v19),
        v22 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType),
        swift_unknownObjectRelease(v20),
        !v22))
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  v23 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v24 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v25 + 32) = v22;
  aBlock = (void **)v25;
  specialized Array._endMutation()(v25);
  v26 = aBlock;
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v97 = v22;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v23, "eligibleActionsForItems:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

  type metadata accessor for FPAction(0);
  v30 = v29;
  v31 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
  v32 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v28, v30, v31);

  v33 = FPActionTrash;
  LOBYTE(isa) = sub_100028BE0((uint64_t)v33, v32);

  if ((isa & 1) != 0)
  {
    v34 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forbiddenActionIdentifiers");
    v35 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, &type metadata for String);

    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierTrash);
    v38 = v37;
    v39 = sub_1000DFDD0(v36, v37, v35);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v38);
    v40 = v39 ^ 1;
  }
  else
  {
    v40 = 0;
  }
  v41 = FPActionDelete;
  v42 = sub_100028BE0((uint64_t)v41, v32);

  if ((v42 & 1) != 0)
  {
    v43 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forbiddenActionIdentifiers");
    v44 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String);

    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDelete);
    v47 = v46;
    v48 = sub_1000DFDD0(v45, v46, v44);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v47);
    v49 = v48 ^ 1;
  }
  else
  {
    v49 = 0;
  }
  v50 = FPActionUntrash;
  v51 = sub_100028BE0((uint64_t)v50, v32);

  *(_QWORD *)&v53 = swift_bridgeObjectRelease(v32).n128_u64[0];
  if ((v51 & 1) != 0)
  {
    v54 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forbiddenActionIdentifiers", v53);
    v55 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, &type metadata for String);

    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierUntrash);
    v58 = v57;
    v59 = sub_1000DFDD0(v56, v57, v55);
    swift_bridgeObjectRelease(v55);
    swift_bridgeObjectRelease(v58);
    v60 = v59 ^ 1;
  }
  else
  {
    v60 = 0;
  }
  v104 = (unint64_t)_swiftEmptyArrayStorage;
  v61 = v40 | v49;
  v62 = v97;
  if ((v61 & 1) == 0)
    goto LABEL_35;
  result = (id)_DocumentManagerBundle(v52);
  if (!result)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v63 = result;
  v107._object = (void *)0x800000010050E520;
  v64._countAndFlagsBits = 0x6574656C6544;
  v64._object = (void *)0xE600000000000000;
  v65.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v65.value._object = (void *)0xEB00000000656C62;
  v66._countAndFlagsBits = 0;
  v66._object = (void *)0xE000000000000000;
  v107._countAndFlagsBits = 0xD00000000000001BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, v65, (NSBundle)v63, v66, v107)._object;

  v68 = swift_allocObject(&unk_1005CDD30, 32, 7);
  *(_QWORD *)(v68 + 16) = v62;
  *(_QWORD *)(v68 + 24) = v13;
  v69 = v62;
  v70 = v13;
  v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v102 = sub_1001D0984;
  v103 = v68;
  aBlock = _NSConcreteStackBlock;
  v99 = 1107296256;
  v100 = sub_100449934;
  v101 = &unk_1005CDD48;
  v72 = _Block_copy(&aBlock);
  v73 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v71, v72);

  _Block_release(v72);
  v74 = swift_release(v103);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
  v75 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v76 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v75 >= v76 >> 1)
  {
    v95 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v75 + 1, 1);
    v75 = v95;
    v62 = v97;
  }
  v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v73);
  v52 = specialized Array._endMutation()(v77);
LABEL_35:
  if ((v60 & 1) == 0)
  {
LABEL_40:
    v93 = v104;
    sub_10004F2F0(0, (unint64_t *)&unk_100655FA0, UIContextualAction_ptr);
    v94 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v93);
    v17 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", v94);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v17;
  }
  result = (id)_DocumentManagerBundle(v52);
  if (result)
  {
    v78 = result;
    v108._countAndFlagsBits = 0xD000000000000048;
    v108._object = (void *)0x8000000100510330;
    v79._countAndFlagsBits = 0x7265766F636552;
    v79._object = (void *)0xE700000000000000;
    v80.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v80.value._object = (void *)0xEB00000000656C62;
    v81._countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v79, v80, (NSBundle)v78, v81, v108)._object;

    v83 = swift_allocObject(&unk_1005CDCE0, 32, 7);
    *(_QWORD *)(v83 + 16) = v62;
    *(_QWORD *)(v83 + 24) = v13;
    v84 = v62;
    v85 = v13;
    v86 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v82);
    v102 = sub_1001D097C;
    v103 = v83;
    aBlock = _NSConcreteStackBlock;
    v99 = 1107296256;
    v100 = sub_100449934;
    v101 = &unk_1005CDCF8;
    v87 = _Block_copy(&aBlock);
    v88 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v86, v87);

    _Block_release(v87);
    v89 = swift_release(v103);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
    v90 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v91 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v90 >= v91 >> 1)
    {
      v96 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v91 > 1, v90 + 1, 1);
      v90 = v96;
      v62 = v97;
    }
    v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v90, v88);
    specialized Array._endMutation()(v92);
    goto LABEL_40;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_10017F568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _BYTE v16[40];

  v10 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v11 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v11, v16);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = a5;
  v15 = inited;
  specialized Array._endMutation()(inited);
  v13 = swift_allocObject(&unk_1005CDD80, 32, 7);
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  v14 = a5;
  swift_retain();
  sub_10047B204(v15, a6, (uint64_t)sub_1001D098C, v13);
  swift_bridgeObjectRelease(v15);
  swift_release(v13);

}

double sub_10017F660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  double result;

  v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v9 = sub_10006922C(&qword_100646C60);
  v10 = type metadata accessor for DOCOperationItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v9, v14 + v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v15 + v14) = a5;
  swift_storeEnumTagMultiPayload(v15 + v14, v10, 1);
  v16 = a5;
  sub_100477E1C(4, v15, 0, 0, 0, 1, a6, 0, 0);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  return result;
}

void sub_10017F758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *Strong;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = 1;

  }
}

void sub_10017F7B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *Strong;
  _BYTE *v4;
  char v5;
  char v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    if (objc_msgSend(Strong, "isEditing"))
      v5 = 2;
    else
      v5 = 0;
    v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = v5;

  }
}

double sub_10017F820(void *a1)
{
  uint64_t v1;
  double result;
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  uint64_t v21;

  sub_100064B54();
  if ((v4 & 1) == 0)
    return result;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  if (!((unint64_t)v5 >> 62))
  {
    if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      return result;
    goto LABEL_4;
  }
  if (v5 < 0)
    v18 = v5;
  else
    v18 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v19 = _CocoaArrayWrapper.endIndex.getter(v18);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  if (v19 >= 1)
  {
LABEL_4:
    v6 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v7 = objc_msgSend(v6, "fractionalWidthDimension:", 1.0);
    v8 = objc_msgSend(v6, "estimatedDimension:", 44.0);
    v9 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v7, v8);

    v10 = qword_100640E40;
    v11 = v9;
    if (v10 != -1)
      swift_once(&qword_100640E40, sub_10009B250);
    v12 = *(_QWORD *)algn_100672748;
    swift_bridgeObjectRetain(*(_QWORD *)algn_100672748);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v14 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v11, v13, 1);

    objc_msgSend(v14, "setPinToVisibleBounds:", 1);
    v15 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v16 = swift_allocObject(v15, 40, 7);
    *(_OWORD *)(v16 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v16 + 32) = v14;
    v21 = v16;
    specialized Array._endMutation()(v16);
    sub_10004F2F0(0, (unint64_t *)&unk_100646C50, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    v17 = v14;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

  }
  return result;
}

id DOCItemCollectionViewController.collectionView.getter()
{
  char *v0;
  id result;

  objc_msgSend(v0, "loadViewIfNeeded");
  result = *(id *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
    return result;
  __break(1u);
  return result;
}

void *DOCItemCollectionViewController.cellContainingScrollView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  v2 = v1;
  return v1;
}

void sub_10017FAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;
  char *v5;
  uint64_t v6;
  void (**v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    return;
  }
  v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v2 + 16) & 1) != 0)
  {
    v3 = *(void **)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v3);
  }
  else
  {
    v3 = *(void **)(v2 + 8);
    swift_unknownObjectRetain(v3);
    if (!v3)
      return;
  }
  v4 = objc_msgSend(v3, "isShared");
  swift_unknownObjectRelease(v3);
  if (v4)
  {
    v5 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCShareBannerView()), "init");
    v6 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    v7 = (void (**)(uint64_t))&v5[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
    v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
    v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler + 8];
    *v7 = sub_1001D095C;
    v7[1] = (void (*)(uint64_t))v6;
    sub_100087534(v8, v9);
  }
}

void sub_10017FBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  __n128 v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String_optional v20;
  void *object;
  NSString v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  __int128 aBlock;
  __int128 v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  char v39[24];
  Swift::String v40;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v39, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v7)
    {
      __break(1u);
      goto LABEL_21;
    }
    v8 = v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v8 + 16) & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)v8 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v9);
    }
    else
    {
      v9 = *(void **)(v8 + 8);
      swift_unknownObjectRetain(v9);
      if (!v9)
        goto LABEL_18;
    }
    v10 = (char *)objc_msgSend(v9, "fpfs_fpItem");
    v11 = swift_unknownObjectRelease(v9);
    if (v10)
    {
      v12 = (void *)FPItem.collaborationHighlight.getter(v11);

      if (!v12)
      {
        aBlock = 0u;
        v36 = 0u;
        v29 = DOCItemCollectionViewController.actionContext(from:)();
        sub_10000CB4C((uint64_t)&aBlock, &qword_100642730);
        v30 = (char *)objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v31 = swift_allocObject(&unk_1005CDC90, 32, 7);
        *(_QWORD *)(v31 + 16) = v10;
        *(_QWORD *)(v31 + 24) = v29;
        v37 = sub_10012B890;
        v38 = v31;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v36 = sub_100175118;
        *((_QWORD *)&v36 + 1) = &unk_1005CDCA8;
        v32 = _Block_copy(&aBlock);
        v33 = v38;
        v34 = v10;
        v14 = v29;
        swift_release(v33);
        objc_msgSend(v30, "fetchURLForItem:completionHandler:", v34, v32);
        _Block_release(v32);
        v15 = v6;
        v6 = v34;
        v10 = v30;
LABEL_17:

        v6 = v10;
        goto LABEL_18;
      }
      v13 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
      NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(v10, 2, 0, 0);
      sub_10004F2F0(0, &qword_100646C48, _SWCollaborationDetailViewController_ptr);
      v14 = v13;
      v15 = (char *)_SWCollaborationDetailViewController.init(itemProvider:)();
      v16 = (id)_DocumentManagerBundle(v15);
      if (v16)
      {
        v17 = v16;
        v18._countAndFlagsBits = 0xD00000000000002CLL;
        v40._countAndFlagsBits = 0xD000000000000053;
        v40._object = (void *)0x80000001005166F0;
        v18._object = (void *)0x80000001005166A0;
        v19._object = (void *)0x80000001005166D0;
        v20.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v20.value._object = (void *)0xEB00000000656C62;
        v19._countAndFlagsBits = 0xD000000000000014;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v20, (NSBundle)v17, v19, v40)._object;

        v22 = String._bridgeToObjectiveC()();
        objc_msgSend(v15, "setManageButtonTitle:", v22, swift_bridgeObjectRelease(object).n128_f64[0]);

        UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
        v23 = objc_msgSend(v15, "presentationController");
        if (v23)
        {
          v24 = v23;
          objc_msgSend(v23, "setDelegate:", v6);

        }
        v25 = objc_msgSend(v15, "popoverPresentationController");
        if (v25)
        {
          v26 = v25;
          objc_msgSend(v25, "setSourceView:", a1);

        }
        v27 = objc_msgSend(v15, "popoverPresentationController");
        if (v27)
        {
          v28 = v27;
          objc_msgSend(v27, "setPermittedArrowDirections:", 1);

        }
        swift_unknownObjectWeakAssign(&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_presentedCollaborationViewController], v15);
        objc_msgSend(v6, "presentViewController:animated:completion:", v15, 1, 0);
        goto LABEL_17;
      }
LABEL_21:
      __break(1u);
      return;
    }
LABEL_18:

  }
}

void sub_10017FFE8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  char *v5;
  char *v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  double v31;
  id v32;
  Swift::String v33;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v2)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      return;
    }
    v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v4 = *(void **)(*v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      v5 = v1;
      swift_unknownObjectRetain(v4);
    }
    else
    {
      v4 = (void *)v3[1];
      v6 = v1;
      swift_unknownObjectRetain(v4);
      if (!v4)
        goto LABEL_11;
    }
    v7 = objc_msgSend(v4, "fpfs_fpItem");
    v8 = swift_unknownObjectRelease(v4);
    if (v7)
    {
      v9 = FPItem.collaborationSenderDisplayName.getter(v8);
      v11 = v10;

      if (v11)
      {
        v13 = (id)_DocumentManagerBundle(v12);
        if (v13)
        {
          v14 = v13;
          v33._object = (void *)0x8000000100516660;
          v15._countAndFlagsBits = 0x7720646572616853;
          v15._object = (void *)0xEE00402520687469;
          v16.value._countAndFlagsBits = 0x617A696C61636F4CLL;
          v16.value._object = (void *)0xEB00000000656C62;
          v17._countAndFlagsBits = 0;
          v17._object = (void *)0xE000000000000000;
          v33._countAndFlagsBits = 0xD00000000000003ALL;
          v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v33);

          v19 = sub_10006922C((uint64_t *)&unk_100644560);
          v20 = swift_allocObject(v19, 72, 7);
          *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v20 + 56) = &type metadata for String;
          *(_QWORD *)(v20 + 64) = sub_10006A638();
          *(_QWORD *)(v20 + 32) = v9;
          *(_QWORD *)(v20 + 40) = v11;
          static String.localizedStringWithFormat(_:_:)(v18._countAndFlagsBits, v18._object, v20);
          v22 = v21;
          swift_bridgeObjectRelease(v18._object);
          swift_bridgeObjectRelease(v20);
          v23 = *(id *)&v1[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView];
          v32 = String._bridgeToObjectiveC()();
          v24 = v22;
LABEL_16:
          *(_QWORD *)&v31 = swift_bridgeObjectRelease(v24).n128_u64[0];
LABEL_19:
          objc_msgSend(v23, "setText:", v32, v31);

          return;
        }
        goto LABEL_21;
      }
    }
LABEL_11:
    v25 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v26 = *(_QWORD *)(*v25 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v26);
    }
    else
    {
      v26 = v25[1];
      swift_unknownObjectRetain(v26);
      if (!v26)
      {
        v30 = *(void **)&v1[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView];
        goto LABEL_18;
      }
    }
    ObjectType = swift_getObjectType(v26);
    DOCNode.localizedSharingStatusDescription(type:options:)(1, 0, ObjectType);
    v29 = v28;
    swift_unknownObjectRelease(v26);
    v30 = *(void **)&v1[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView];
    if (v29)
    {
      v23 = v30;
      v32 = String._bridgeToObjectiveC()();
      v24 = v29;
      goto LABEL_16;
    }
LABEL_18:
    v23 = v30;
    v32 = 0;
    goto LABEL_19;
  }
}

uint64_t DOCItemCollectionViewController.gatheringThumbnails.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails, v3, 0, 0);
  return *v1;
}

uint64_t DOCItemCollectionViewController.gatheringThumbnails.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*DOCItemCollectionViewController.gatheringThumbnails.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails, a1, 33, 0);
  return j_j__swift_endAccess;
}

void sub_1001803A4(void **a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;

  v4 = *a1;
  v5 = swift_allocObject(&unk_1005CDC40, 32, 7);
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = v4;
  v9[4] = sub_1001D0954;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004A82C;
  v9[3] = &unk_1005CDC58;
  v6 = _Block_copy(v9);
  v7 = v10;
  swift_retain();
  v8 = v4;
  swift_release(v7);
  DOCRunInMainThread(v6);
  _Block_release(v6);
}

void sub_100180458(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100194E94((uint64_t)objc_msgSend(a2, "itemsOrigin"));

  }
}

void sub_1001804BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    v8 = v7;

    if (v7)
    {
      sub_100162B10();

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100180554()
{
  void *v0;

}

void sub_10018056C()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  id v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _BYTE *v17;
  int v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 1;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates])
    return;
  v2 = v0;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession])
    return;
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = v3;
  objc_msgSend(v3, "setAccessibilityIdentifier:", 0);

  v5 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts], v25, 1, 0);
  v6 = *v5;
  *v5 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v6);
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 0;
  sub_1001808B8(0);
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v7)
  {
LABEL_21:
    __break(1u);
    return;
  }
  if (*(_BYTE *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) == 1 && (sub_100162E10() & 1) != 0)
    sub_1001626AC();
  v8 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename + 8];
  *v8 = 0;
  v8[1] = 0;
  v10 = objc_msgSend(v2, "navigationItem", swift_bridgeObjectRelease(v9).n128_f64[0]);
  objc_msgSend(v10, "setTitleMenuProvider:", 0);

  v11 = objc_msgSend(v2, "navigationItem");
  objc_msgSend(v11, "setDocumentProperties:", 0);

  v12 = objc_msgSend(v2, "navigationItem");
  UINavigationItem.renameDelegate.setter(0, 0);

  sub_100093754();
  v13 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView];
  if (v13)
    objc_msgSend(v13, "removeFromSuperview");
  objc_msgSend(v2, "doc_setContentUnavailableConfiguration:", 0);
  v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v15 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v16, "setAllowsMultipleSelection:", sub_10009B8FC());
    objc_msgSend(v16, "removeFromSuperview");
    v17 = &v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed], v24, 1, 0);
    v18 = *v17;
    *v17 = 0;
    if (v18 == 1)
      sub_1001F6FD4(0);
    v19 = *(char **)&v2[v14];
    if (v19)
    {
      swift_unknownObjectWeakAssign(&v19[OBJC_IVAR____TtC5Files21DOCItemCollectionView_itemCollectionViewController], 0);
      v19 = *(char **)&v2[v14];
    }
    *(_QWORD *)&v2[v14] = 0;

    objc_msgSend(v2, "setView:", 0);
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
    *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits] = 0;
    swift_release(v20);
    v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource];
    *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = 0;
    swift_release(v21);
    v22 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext], v23, 1, 0);
    if (*(_BYTE *)v22 != 2)
    {
      *v22 = 0u;
      v22[1] = 0u;
    }
    sub_1003E6FF0(v16);

  }
  v2[v1] = 0;
}

void sub_1001808B8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  int v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  id v40;
  id v41;
  char v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  int v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;

  v3 = sub_10006922C((uint64_t *)&unk_100646BD0);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RestorableSettings(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v64 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ScrollPositionInfo(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C((uint64_t *)&unk_100646D20);
  __chkstk_darwin(v12);
  v14 = (double *)((char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed) & 1) != 0
    || (a1 & 1) != 0)
  {
    v19 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    if (v19)
    {
      v20 = (uint64_t)v18;
      v63 = v19;
      sub_100097E58();
      if ((_BYTE)v22 == 0xFF)
      {

      }
      else
      {
        v61 = v21;
        v62 = v22;
        sub_100181A68(v14);
        if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
        {
          sub_100097F40(v61, v62);

          sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100646D20);
        }
        else
        {
          v55 = v62 & 1;
          sub_1001D0788((uint64_t)v14, v20, type metadata accessor for ScrollPositionInfo.ItemOffset);
          objc_msgSend(v63, "contentOffset");
          v24 = v23;
          objc_msgSend(v63, "_effectiveContentInset");
          v26 = -v25;
          v67 = &_swiftEmptyDictionarySingleton;
          v27 = sub_100180E90();
          if (v27)
          {
            v28 = v27;
            v29 = __chkstk_darwin(v27);
            *(&v53 - 2) = (uint64_t)&v67;
            *(&v53 - 1) = v1;
            sub_1001B9878(v29, (void (*)(_OWORD *, uint64_t))sub_1001D17D4);
            swift_bridgeObjectRelease(v28);
          }
          v56 = v20;
          sub_10007C6DC(v20, (uint64_t)v11, type metadata accessor for ScrollPositionInfo.ItemOffset);
          v30 = v67;
          v11[*(int *)(v9 + 20)] = v24 != v26;
          *(_QWORD *)&v11[*(int *)(v9 + 24)] = v30;
          swift_bridgeObjectRetain(v30);
          v31 = sub_1001B9A70(v1);
          v33 = v32;
          v35 = v34;
          v37 = v36;
          v38 = v64;
          sub_10007C6DC((uint64_t)v11, v64, type metadata accessor for ScrollPositionInfo);
          v39 = (uint64_t *)(v38 + *(int *)(v6 + 20));
          *v39 = v31;
          v39[1] = v33;
          v39[2] = v35;
          v39[3] = v37;
          v57 = v33;
          v58 = v31;
          v59 = v37;
          v60 = v35;
          sub_1001D08D0(v31, v33, v35);
          if (qword_100640E38 != -1)
            swift_once(&qword_100640E38, sub_10009870C);
          sub_10007C6DC(v38, (uint64_t)v5, type metadata accessor for RestorableSettings);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
          swift_beginAccess(&off_100645FC0, &v65, 33, 0);
          v40 = v61;
          v41 = v61;
          v42 = v55;
          sub_10043B2D8((uint64_t)v5, v40, v55);
          v43 = swift_endAccess(&v65);
          v44 = *(id *)DOCLog.UI.unsafeMutableAddressor(v43);
          v54 = static os_log_type_t.debug.getter();
          v45 = sub_10006922C((uint64_t *)&unk_100644560);
          v46 = swift_allocObject(v45, 112, 7);
          *(_OWORD *)(v46 + 16) = xmmword_1004D4CE0;
          v47 = sub_100178D2C(v40, v42);
          v49 = v48;
          *(_QWORD *)(v46 + 56) = &type metadata for String;
          v50 = sub_10006A638();
          *(_QWORD *)(v46 + 64) = v50;
          *(_QWORD *)(v46 + 32) = v47;
          *(_QWORD *)(v46 + 40) = v49;
          v65 = 0;
          v66 = 0xE000000000000000;
          _print_unlocked<A, B>(_:_:)(v38, &v65, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v51 = v65;
          v52 = v66;
          *(_QWORD *)(v46 + 96) = &type metadata for String;
          *(_QWORD *)(v46 + 104) = v50;
          *(_QWORD *)(v46 + 72) = v51;
          *(_QWORD *)(v46 + 80) = v52;
          os_log(_:dso:log:type:_:)("[Restorable Settings] Stored settings for %@; info: %@",
            54,
            2,
            &_mh_execute_header,
            v44,
            v54,
            v46);

          swift_bridgeObjectRelease(v46);
          sub_100097F40(v40, v62);
          sub_1001D1484(v58, v57, v60);

          sub_10007C720(v38, type metadata accessor for RestorableSettings);
          sub_10007C720((uint64_t)v11, type metadata accessor for ScrollPositionInfo);
          sub_10007C720(v56, type metadata accessor for ScrollPositionInfo.ItemOffset);
          swift_bridgeObjectRelease(v67);
        }
      }
    }
  }
}

uint64_t sub_100180DD8(__int128 *a1, int64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;

  v4 = sub_10006922C((uint64_t *)&unk_100646D20);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *a1;
  v9 = a1[1];
  v10 = v7;
  sub_1001D0760((uint64_t)&v10);
  sub_1001D0760((uint64_t)&v9);
  swift_retain();
  sub_1001815BC(a2, v6);
  return sub_10043B434((uint64_t)v6, a1);
}

uint64_t sub_100180E90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  char v80[24];
  char v81[24];
  char v82[32];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100654FA0);
  __chkstk_darwin(v2);
  v64 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C((uint64_t *)&unk_100646C20);
  __chkstk_darwin(v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064B54();
  if ((v7 & 1) == 0)
    return 0;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource];
  if (!v8)
    goto LABEL_55;
  swift_retain();
  v72 = sub_100429D88();
  swift_release(v8);
  objc_msgSend(v1, "loadViewIfNeeded");
  v9 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v9)
  {
    v10 = objc_msgSend(v9, "visibleCells");
    v11 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    isUniquelyReferenced_nonNull_native = (uint64_t)sub_1004B9BE4(v12);
    swift_bridgeObjectRelease(v12);
    v14 = (_QWORD *)sub_1003F0810((uint64_t)_swiftEmptyArrayStorage);
    if (isUniquelyReferenced_nonNull_native)
    {
      v15 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)isUniquelyReferenced_nonNull_native >> 62)
      {
LABEL_47:
        if (isUniquelyReferenced_nonNull_native >= 0)
          v59 = v15;
        else
          v59 = isUniquelyReferenced_nonNull_native;
        swift_bridgeObjectRetain_n(isUniquelyReferenced_nonNull_native, 2);
        v16 = _CocoaArrayWrapper.endIndex.getter(v59);
        swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
        if (v16)
          goto LABEL_7;
      }
      else
      {
        v16 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(isUniquelyReferenced_nonNull_native);
        if (v16)
        {
LABEL_7:
          v74 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
          v17 = v72 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
          v62 = v72 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
          swift_beginAccess(v72 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, v82, 0, 0);
          v63 = v17;
          swift_beginAccess(v17, v81, 0, 0);
          v18 = 4;
          v68 = v6;
          v67 = isUniquelyReferenced_nonNull_native;
          v66 = v16;
          do
          {
            if (v74)
              v19 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, isUniquelyReferenced_nonNull_native);
            else
              v19 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v18);
            v20 = v19;
            v21 = v18 - 3;
            if (__OFADD__(v18 - 4, 1))
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
              goto LABEL_47;
            }
            v22 = (*(uint64_t (**)(void))((swift_isaMask & *v19) + 0x1F8))();
            if (v22
              && (v23 = (void *)v22,
                  v24 = (_QWORD *)(v22 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node),
                  swift_beginAccess(v22 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v80, 0, 0),
                  v25 = (void *)*v24,
                  swift_unknownObjectRetain(*v24),
                  v23,
                  v25))
            {
              if ((*(_BYTE *)(v72 + 16) & 1) != 0)
              {
                v26 = v14;
                v27 = objc_opt_self(FINode);
                v28 = swift_dynamicCastObjCClass(v25, v27);
                if (!v28)
                {
                  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000058, 0x80000001005165A0, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 231, 0);
                  goto LABEL_59;
                }
                v29 = v28;
                v30 = v64;
                sub_1000271D4(v63, v64, (uint64_t *)&unk_100654FA0);
                v31 = sub_10006922C((uint64_t *)&unk_100654E80);
                v32 = *(_QWORD *)(v31 - 8);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
                  goto LABEL_54;
                v75 = v29;
                NSDiffableDataSourceSnapshot.sectionIdentifier(containingItem:)(&v76, &v75, v31);
                (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
              }
              else
              {
                v26 = v14;
                v33 = objc_msgSend(v25, "fpfs_fpItem");
                if (!v33)
                  goto LABEL_57;
                v34 = v33;
                sub_1000271D4(v62, (uint64_t)v6, (uint64_t *)&unk_100646C20);
                v35 = sub_10006922C((uint64_t *)&unk_100646C30);
                v36 = *(_QWORD *)(v35 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v6, 1, v35) == 1)
                {
                  __break(1u);
LABEL_54:
                  __break(1u);
LABEL_55:
                  __break(1u);
                  goto LABEL_56;
                }
                v75 = (uint64_t)v34;
                NSDiffableDataSourceSnapshot.sectionIdentifier(containingItem:)(&v76, &v75, v35);

                (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v35);
              }
              v37 = (uint64_t)v76;
              v6 = v77;
              v73 = v79;
              v14 = v26;
              if (v77)
              {
                v65 = v78;
                swift_bridgeObjectRetain(v77);
                v71 = v73;
                swift_bridgeObjectRetain(v73);
                v70 = *((_QWORD *)&v73 + 1);
                swift_retain();
                v69 = v20;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v26);
                v76 = v26;
                v39 = sub_100144398(v37, (uint64_t)v6);
                v15 = v14[2];
                v40 = (v38 & 1) == 0;
                v41 = v15 + v40;
                if (__OFADD__(v15, v40))
                  goto LABEL_45;
                v42 = v38;
                if (v14[3] >= v41)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    sub_1002E560C();
                }
                else
                {
                  sub_1002DB3A0(v41, isUniquelyReferenced_nonNull_native);
                  v43 = sub_100144398(v37, (uint64_t)v6);
                  if ((v42 & 1) != (v44 & 1))
                    goto LABEL_60;
                  v39 = v43;
                }
                v14 = v76;
                swift_bridgeObjectRelease(0x8000000000000000);
                if ((v42 & 1) != 0)
                {
                  swift_bridgeObjectRetain(v14);
                  v45 = v71;
                  v46 = v70;
                }
                else
                {
                  v14[(v39 >> 6) + 8] |= 1 << v39;
                  v47 = v14[6] + 40 * v39;
                  *(_QWORD *)v47 = v37;
                  *(_QWORD *)(v47 + 8) = v6;
                  *(_QWORD *)(v47 + 16) = v65;
                  *(_OWORD *)(v47 + 24) = v73;
                  *(_QWORD *)(v14[7] + 8 * v39) = _swiftEmptyArrayStorage;
                  v48 = v14[2];
                  v49 = v48 + 1;
                  isUniquelyReferenced_nonNull_native = __OFADD__(v48, 1);
                  swift_bridgeObjectRetain(v14);
                  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                    goto LABEL_46;
                  v14[2] = v49;
                  swift_bridgeObjectRetain(v6);
                  v45 = v71;
                  swift_bridgeObjectRetain(v71);
                  v46 = v70;
                  swift_retain();
                }
                v50 = v14[7];
                swift_bridgeObjectRelease(v14);
                v51 = (_QWORD *)(v50 + 8 * v39);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
                v54 = *(_QWORD *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v53 = *(_QWORD *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v54 >= v53 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
                v55 = v54;
                v56 = v69;
                v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v69);
                specialized Array._endMutation()(v57);

                swift_unknownObjectRelease(v25);
                swift_release_n(v46, 2, v58);
                swift_bridgeObjectRelease_n(v45, 2);
                swift_bridgeObjectRelease_n(v6, 2);
              }
              else
              {

                swift_unknownObjectRelease(v25);
              }
              v6 = v68;
              isUniquelyReferenced_nonNull_native = v67;
              v16 = v66;
            }
            else
            {

            }
            ++v18;
          }
          while (v21 != v16);
        }
      }
      swift_release(v72);
      swift_bridgeObjectRelease_n(isUniquelyReferenced_nonNull_native, 2);
    }
    else
    {
      swift_release(v72);
    }
    return (uint64_t)v14;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000058, 0x8000000100516600, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 224, 0);
LABEL_59:
  __break(1u);
LABEL_60:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCCollectionSection);
  __break(1u);
  return result;
}

uint64_t sub_1001815BC@<X0>(int64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  id *v48;
  char *v49;
  double MinX;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void **v61;
  _QWORD *v62;
  char *v63;
  id *v64;
  char v65[24];
  CGRect v66;

  v4 = sub_10006922C((uint64_t *)&unk_100646C10);
  __chkstk_darwin(v4);
  v6 = (void **)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10006922C((uint64_t *)&unk_100644C10);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v64 = (id *)((char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v60 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (void (**)(char *, char *, uint64_t))((char *)&v60 - v15);
  __chkstk_darwin(v14);
  v18 = (void **)((char *)&v60 - v17);
  if ((unint64_t)a1 >> 62)
  {
    v55 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v55 = a1;
    v63 = (char *)v55;
    v56 = a2;
    v57 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    swift_bridgeObjectRetain(a1);
    v58 = v57;
    a2 = v56;
    v59 = _bridgeCocoaArray<A>(_:)(v63, v58);
    swift_bridgeObjectRelease(a1);
    a1 = v59;
  }
  else
  {
    v19 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
    sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  }
  sub_1001820A8(a1, (uint64_t)v6);
  v20 = swift_bridgeObjectRelease(a1);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v20) == 1)
  {
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100646C10);
    v21 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v22 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = a2;
  }
  else
  {
    v62 = v13;
    v63 = (char *)a2;
    v24 = *(int *)(v7 + 48);
    v25 = (char *)v18 + v24;
    v26 = (char *)v6 + v24;
    v27 = *v6;
    *v18 = *v6;
    v28 = type metadata accessor for IndexPath(0);
    v29 = *(_QWORD **)(v28 - 8);
    v60 = (void (*)(char *, char *, uint64_t))v29[4];
    v60(v25, v26, v28);
    v30 = (char *)v16 + *(int *)(v7 + 48);
    *v16 = v27;
    v31 = (void (*)(char *, char *, uint64_t))v29[2];
    v31(v30, v25, v28);
    v32 = sub_10004F2F0(0, (unint64_t *)&unk_100646BF0, UIScrollView_ptr);
    v33 = v27;
    v34 = (void *)UIView.doc_nearestAncestor<A>(ofType:)(v32, v32);

    if (v34)
    {
      v61 = v18;
      v35 = (void (*)(char *, uint64_t))v29[1];
      v35(v30, v28);
      v36 = *(int *)(v7 + 48);
      v37 = v62;
      v38 = (char *)v62 + v36;
      *v62 = v33;
      v39 = ((uint64_t (*)(char *, char *, uint64_t))v31)((char *)v37 + v36, v25, v28);
      v40 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v33) + 0x1F8))(v39);
      if (v40)
      {
        v41 = (void *)v40;
        v42 = (uint64_t *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v65, 0, 0);
        v43 = *v42;
        swift_unknownObjectRetain(v43);

        v35(v38, v28);
        if (v43)
        {
          objc_msgSend(v34, "contentOffset");
          v45 = v44;
          v46 = *(int *)(v7 + 48);
          v47 = v35;
          v48 = v64;
          v49 = (char *)v64 + v46;
          *v64 = v33;
          v31((char *)v48 + v46, v25, v28);
          objc_msgSend(v33, "frame");
          MinX = CGRectGetMinX(v66);

          v47(v49, v28);
          v51 = (char *)v48 + *(int *)(v7 + 48);
          *v48 = v33;
          v31(v51, v25, v28);
          sub_10000CB4C((uint64_t)v61, (uint64_t *)&unk_100644C10);

          v52 = v63;
          *(_QWORD *)v63 = v43;
          v53 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
          v60(&v52[*(int *)(v53 + 20)], v51, v28);
          *(double *)&v52[*(int *)(v53 + 24)] = v45 - MinX;
          return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
        }

      }
      else
      {

        v35(v38, v28);
      }
      sub_10000CB4C((uint64_t)v61, (uint64_t *)&unk_100644C10);
    }
    else
    {
      sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100644C10);

      ((void (*)(char *, uint64_t))v29[1])(v30, v28);
    }
    v21 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v22 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = v63;
  }
  return v22((char *)v23, 1, 1, v21);
}

void *sub_100181A68@<X0>(double *a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  void *result;
  id v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t (*v22)(double *, uint64_t, uint64_t, uint64_t);
  double *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  double v37;
  _QWORD *v38;
  double v39;
  double v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  CGFloat Height;
  double *v49;
  id *v50;
  char *v51;
  uint64_t v52;
  double v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  _QWORD *v56;
  double *v57;
  id *v58;
  uint64_t v59;
  char v60[24];
  CGRect v61;
  CGRect v62;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100646C10);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10006922C((uint64_t *)&unk_100644C10);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v58 = (id *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v9);
  v13 = (_QWORD *)((char *)&v53 - v12);
  __chkstk_darwin(v11);
  v15 = (_QWORD *)((char *)&v53 - v14);
  objc_msgSend(v1, "loadViewIfNeeded");
  v59 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  v17 = objc_msgSend(result, "visibleCells");
  v18 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  sub_1001820A8(v19, (uint64_t)v6);
  v20 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v20) == 1)
  {
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100646C10);
    v21 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v22 = *(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = a1;
    return (void *)v22(v23, 1, 1, v21);
  }
  v56 = v15;
  v57 = a1;
  v24 = *(int *)(v7 + 48);
  v25 = (char *)v15 + v24;
  v26 = (char *)v6 + v24;
  v27 = (_QWORD *)*v6;
  *v15 = *v6;
  v28 = type metadata accessor for IndexPath(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v30(v25, v26, v28);
  v31 = (char *)v13 + *(int *)(v7 + 48);
  *v13 = v27;
  v32 = *(uint64_t (**)(char *, char *, uint64_t))(v29 + 16);
  v33 = v32(v31, v25, v28);
  v34 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v27) + 0x1F8))(v33);
  if (!v34)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
LABEL_12:
    v49 = v57;
    sub_10000CB4C((uint64_t)v56, (uint64_t *)&unk_100644C10);
    v21 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v22 = *(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = v49;
    return (void *)v22(v23, 1, 1, v21);
  }
  v35 = (void *)v34;
  v54 = (void (*)(char *, char *, uint64_t))v32;
  v55 = v30;
  v36 = (_QWORD *)(v34 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v34 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v60, 0, 0);
  v37 = *(double *)v36;
  swift_unknownObjectRetain(*v36);
  v38 = v27;

  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  if (v37 == 0.0)
  {

    goto LABEL_12;
  }
  v53 = v37;
  sub_100181F30(v38);
  v40 = v39;
  objc_msgSend(v2, "loadViewIfNeeded");
  result = *(void **)&v2[v59];
  v42 = (uint64_t)v56;
  v41 = v57;
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(result, "bounds");
  if (CGRectGetHeight(v61) >= fabs(v40))
  {
    v50 = v58;
    v51 = (char *)v58 + *(int *)(v7 + 48);
    *v58 = v38;
    v54(v51, v25, v28);
    sub_10000CB4C(v42, (uint64_t *)&unk_100644C10);

    *v41 = v53;
    v52 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v55((char *)v41 + *(int *)(v52 + 20), v51, v28);
    *(double *)((char *)v41 + *(int *)(v52 + 24)) = v40;
    return (void *)(*(uint64_t (**)(double *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v41, 0, 1, v52);
  }

  v44 = *(id *)DOCLog.UI.unsafeMutableAddressor(v43);
  static os_log_type_t.error.getter(v44);
  v45 = sub_10006922C((uint64_t *)&unk_100644560);
  v46 = swift_allocObject(v45, 112, 7);
  *(_OWORD *)(v46 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v46 + 56) = &type metadata for CGFloat;
  v47 = sub_1000B3368();
  *(_QWORD *)(v46 + 64) = v47;
  *(double *)(v46 + 32) = v40;
  objc_msgSend(v2, "loadViewIfNeeded");
  result = *(void **)&v2[v59];
  if (result)
  {
    objc_msgSend(result, "bounds");
    Height = CGRectGetHeight(v62);
    *(_QWORD *)(v46 + 96) = &type metadata for CGFloat;
    *(_QWORD *)(v46 + 104) = v47;
    *(CGFloat *)(v46 + 72) = Height;
    os_log(_:dso:log:type:_:)("[Restorable Settings] Not storing vertical offset since it's too big (%f)", v53);

    swift_bridgeObjectRelease(v46);
    swift_unknownObjectRelease(*(_QWORD *)&v53);
    sub_10000CB4C(v42, (uint64_t *)&unk_100644C10);
    v21 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v22 = *(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = v41;
    return (void *)v22(v23, 1, 1, v21);
  }
LABEL_17:
  __break(1u);
  return result;
}

id sub_100181F30(void *a1)
{
  char *v1;
  id result;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  CGRect v19;
  CGRect v20;

  result = objc_msgSend(v1, "loadViewIfNeeded");
  v4 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  v6 = v5;
  objc_msgSend(a1, "bounds");
  objc_msgSend(v6, "convertRect:fromCoordinateSpace:", a1);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  objc_msgSend(v1, "loadViewIfNeeded");
  result = *(id *)&v1[v4];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(result, "_effectiveContentInset");
  v15 = *(void **)&v1[v4];
  if (v15)
  {
    v16 = v15;
    v17 = sub_10009B854();
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v17, "bounds");
      objc_msgSend(v18, "convertRect:toCoordinateSpace:", v16);
      CGRectGetHeight(v19);

      v16 = v18;
    }

  }
  v20.origin.x = v8;
  v20.origin.y = v10;
  v20.size.width = v12;
  v20.size.height = v14;
  CGRectGetMinY(v20);
  objc_msgSend(v1, "loadViewIfNeeded");
  result = *(id *)&v1[v4];
  if (result)
    return objc_msgSend(result, "contentOffset");
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1001820A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v4 = sub_1004B9BE4(a1);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = v2;
    v7 = sub_1001B9CB0(v5, v6);
    swift_bridgeObjectRelease(v5);

    v14 = v7;
    swift_bridgeObjectRetain(v7);
    sub_1001B1540(&v14);
    swift_bridgeObjectRelease(v7);
    v8 = v14;
    v9 = v14[2];
    v10 = sub_10006922C((uint64_t *)&unk_100644C10);
    v11 = *(_QWORD *)(v10 - 8);
    if (v9)
    {
      sub_1000271D4((uint64_t)v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2, (uint64_t *)&unk_100644C10);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
    }
    return swift_release(v8);
  }
  else
  {
    v12 = sub_10006922C((uint64_t *)&unk_100644C10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
}

void sub_1001821E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  void *v10;
  id v11;
  unsigned __int8 v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  if (!a2)
    return;
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v5)
  {
    __break(1u);
    return;
  }
  v9 = v5 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v9 + 16) & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    swift_unknownObjectRetain(a3);
  }
  else
  {
    v10 = *(void **)v9;
    sub_1001D08D0(a1, a2, a3);
    v11 = v10;
    v12 = objc_msgSend(v11, "doc_displaysSearchResults");

    if ((v12 & 1) != 0)
    {
LABEL_17:
      swift_unknownObjectRelease(a3);
      swift_bridgeObjectRelease(a2);
      return;
    }
  }
  v13 = *(void **)(v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  if (!v13)
    goto LABEL_17;
  v14 = objc_msgSend(v13, "searchController");
  if (!v14)
    goto LABEL_17;
  v44 = v14;
  v15 = type metadata accessor for DOCSearchController();
  v16 = swift_dynamicCastClass(v44, v15);
  if (!v16)
  {

    goto LABEL_17;
  }
  v17 = v16;
  v18 = sub_10021FCA4(v16);
  v19 = v18;
  v20 = v18[2];
  if (v20)
  {
    v42 = v17;
    v43 = a4;
    sub_100081774(0, v20, 0);
    v41 = v19;
    v22 = v19 + 5;
    do
    {
      v23 = *(v22 - 1);
      v24 = *v22;
      ObjectType = swift_getObjectType(v23, v21);
      v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
      swift_unknownObjectRetain(v23);
      v27 = v26(ObjectType, v24);
      v29 = v28;
      swift_unknownObjectRelease(v23);
      v31 = _swiftEmptyArrayStorage[2];
      v30 = _swiftEmptyArrayStorage[3];
      if (v31 >= v30 >> 1)
        sub_100081774(v30 > 1, v31 + 1, 1);
      _swiftEmptyArrayStorage[2] = v31 + 1;
      v32 = &_swiftEmptyArrayStorage[2 * v31];
      v32[4] = v27;
      v32[5] = v29;
      v22 += 2;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease(v41);
    a4 = v43;
    v17 = v42;
  }
  else
  {
    swift_bridgeObjectRelease(v18);
  }
  v34 = swift_getObjectType(a3, v33);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(v34, a4);
  v37 = v36;
  v38 = sub_100174638(v35, v36, _swiftEmptyArrayStorage);
  v40 = v39;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v37);
  if ((v40 & 1) == 0)
  {
    *(_QWORD *)(v17 + OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex) = v38;
    sub_10045D864();
    sub_10045EFEC();
    sub_100460640();
  }
  swift_unknownObjectRelease(a3);
  swift_bridgeObjectRelease(a2);

}

void sub_1001824BC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_subscriptions));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename
                                      + 8));

  sub_100068588((_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDropSession));

  sub_100087534(*(_QWORD *)(v0+ OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing), *(_QWORD *)(v0+ OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing+ 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier));
  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener);

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath, (uint64_t *)&unk_100642710);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext));
  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 48);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 56);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 64);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 72);

  swift_bridgeObjectRelease(v3);
  swift_unknownObjectRelease(v5);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache));
  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate);

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionCreateCellIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionFooterIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyFooterIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionHeaderIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGroupedSectionHeaderIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyHeaderIdentifier
                                      + 8));
  sub_1001D0614(*(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress + 8));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility
                                       + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource));

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath, (uint64_t *)&unk_100642710);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 16));
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode, (uint64_t *)&unk_100642710);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks));

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___listLayoutConfiguration, &qword_100646B38);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView));
  sub_10008D9C4(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___promptView));
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_presentedCollaborationViewController);

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsAlert);
  sub_100144F34(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 16));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForBrowserLayoutChanges));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForUIPChanges));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForInsetChanges));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext, &qword_100646B40);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController));

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo, &qword_100646B48);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder));

  v9 = *(char **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf) = 0;
  if (v9)
  {
    while (1)
    {
      v12 = v9;
      if (!swift_isUniquelyReferenced())
        break;
      v10 = *(char **)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf];
      v11 = v10;

      v9 = v10;
      if (!v10)
        goto LABEL_6;
    }
    v9 = v12;
  }
LABEL_6:

}

void DOCItemCollectionViewController.__deallocating_deinit()
{
  char *v0;
  char *v1;
  int *v2;
  objc_super v3;
  char v4[24];

  v1 = v0;
  v2 = (int *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken];
  swift_beginAccess(v2, v4, 1, 0);
  if (*v2)
  {
    notify_cancel(*v2);
    *v2 = 0;
  }
  sub_1001808B8(0);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    if ((sub_100162E10() & 1) != 0)
      sub_1001626AC();
    sub_100175858();
    v3.receiver = v1;
    v3.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
    objc_msgSendSuper2(&v3, "dealloc");
  }
  else
  {
    __break(1u);
  }
}

id DOCItemCollectionViewController._contentOverlayInsets.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  return objc_msgSendSuper2(&v2, "_contentOverlayInsets");
}

id DOCItemCollectionViewController._contentOverlayInsets.setter(CGFloat top, CGFloat left, CGFloat bottom, CGFloat right)
{
  uint64_t v4;
  uint64_t v9;
  objc_super *v10;
  uint64_t v12;
  uint64_t v13;

  if (objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "shouldAdjustContentInset"))
  {
    v9 = type metadata accessor for DOCItemCollectionViewController(0);
    v12 = v4;
    v10 = (objc_super *)&v12;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    v9 = type metadata accessor for DOCItemCollectionViewController(0);
    v13 = v4;
    v10 = (objc_super *)&v13;
  }
  v10->super_class = (Class)v9;
  return -[objc_super _setContentOverlayInsets:](v10, "_setContentOverlayInsets:", top, left, bottom, right, v12);
}

void sub_1001834DC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  unint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  id v27;
  Class isa;
  unsigned __int8 v29;
  void *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  int v36;
  uint64_t v37;
  _BOOL4 v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  double v66;
  __n128 v67;
  void *v68;
  id v69;
  Class v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  char v90[24];
  char v91[32];

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v75 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v75 - v10;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v75 - v14;
  objc_msgSend(a1, "loadViewIfNeeded", v13);
  v87 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v16 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v16)
    goto LABEL_69;
  v17 = (unint64_t)objc_msgSend(v16, "numberOfSections");
  if ((v17 & 0x8000000000000000) != 0)
    goto LABEL_64;
  v18 = v17;
  v81 = v11;
  v84 = v3;
  v88 = a1;
  if (!v17)
  {
LABEL_52:
    v72 = v88;
    v88[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    v73 = objc_msgSend(v72, "viewIfLoaded");
    v74 = objc_msgSend(v73, "window");

    if (v74)
      sub_1000926C8();
    return;
  }
  v19 = v8;
  v20 = 0;
  v77 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
  v78 = v8;
  v79 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  v80 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
  v83 = v5;
  v76 = v17;
  v89 = v2;
  while (1)
  {
    if (v20 == v18)
      goto LABEL_62;
    v21 = v88;
    objc_msgSend(v88, "loadViewIfNeeded");
    v22 = *(void **)&v21[v87];
    if (!v22)
      goto LABEL_68;
    v23 = (unint64_t)objc_msgSend(v22, "numberOfItemsInSection:", v20);
    if ((v23 & 0x8000000000000000) != 0)
      goto LABEL_63;
    if (v23)
      break;
LABEL_5:
    ++v20;
    v18 = v76;
    if (v20 == v76)
      goto LABEL_52;
  }
  v24 = 0;
  v82 = v20;
  v86 = (char *)v23;
  while ((char *)v23 != v24)
  {
    IndexPath.init(item:section:)(v24, v20);
    v25 = v88;
    objc_msgSend(v88, "loadViewIfNeeded");
    v26 = *(void **)&v25[v87];
    if (!v26)
      goto LABEL_65;
    v27 = v26;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v29 = objc_msgSend(v25, "collectionView:shouldSelectItemAtIndexPath:", v27, isa);

    if ((v29 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v84 + 8))(v15, v89);
      goto LABEL_12;
    }
    v30 = *(void **)&v25[v80];
    if (!v30)
      goto LABEL_66;
    v31 = objc_msgSend(v30, "isGathering");
    v32 = v89;
    v33 = v84;
    if (v31)
    {
      v34 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      v35 = v81;
      v34(v81, v15, v89);
LABEL_21:
      v38 = 0;
      goto LABEL_22;
    }
    v36 = v25[v77];
    v34 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
    v35 = v81;
    v37 = ((uint64_t (*)(char *, char *, uint64_t))v34)(v81, v15, v89);
    if (v36 != 1)
      goto LABEL_21;
    v38 = IndexPath.item.getter(v37) == 0;
LABEL_22:
    v39 = *(void (**)(char *, uint64_t))(v33 + 8);
    v39(v35, v32);
    v40 = ((uint64_t (*)(char *, char *, uint64_t))v34)(v19, v15, v32);
    if (v38)
    {
      v41 = IndexPath.section.getter(v40);
      v39(v19, v32);
      if (!v41)
        goto LABEL_43;
    }
    else
    {
      v39(v19, v32);
    }
    v85 = v39;
    v42 = *(_QWORD *)&v25[v79];
    v43 = swift_bridgeObjectRetain(v42);
    v44 = IndexPath.section.getter(v43);
    v45 = *(_QWORD *)(v42 + 16);
    v46 = v83;
    v47 = ((uint64_t (*)(char *, char *, uint64_t))v34)(v83, v15, v32);
    if (v44 >= v45)
    {
      v67 = swift_bridgeObjectRelease(v42);
      v39 = v85;
      ((void (*)(char *, uint64_t, __n128))v85)(v46, v32, v67);
      v19 = v78;
LABEL_43:
      v39(v15, v32);
      v20 = v82;
      goto LABEL_12;
    }
    v48 = IndexPath.item.getter(v47);
    v49 = IndexPath.section.getter(v48);
    if ((v49 & 0x8000000000000000) != 0)
      goto LABEL_56;
    if (v49 >= *(_QWORD *)(v42 + 16))
      goto LABEL_57;
    v50 = *(_QWORD *)(v42 + 32 + 40 * v49 + 32);
    v51 = swift_beginAccess(v50 + 16, v91, 0, 0);
    v52 = *(_QWORD *)(v50 + 16);
    if ((unint64_t)v52 >> 62)
    {
      if (v52 < 0)
        v71 = v52;
      else
        v71 = v52 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v52);
      v53 = _CocoaArrayWrapper.endIndex.getter(v71);
      v51 = swift_bridgeObjectRelease(v52);
    }
    else
    {
      v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v54 = v88;
    v55 = ((uint64_t (*)(char *, uint64_t, __n128))v85)(v83, v89, v51);
    if (v48 >= v53)
    {
      swift_bridgeObjectRelease(v42);
      v19 = v78;
      v32 = v89;
      v39 = v85;
      goto LABEL_43;
    }
    v56 = IndexPath.section.getter(v55);
    if ((v56 & 0x8000000000000000) != 0)
      goto LABEL_58;
    if (v56 >= *(_QWORD *)(v42 + 16))
      goto LABEL_59;
    v57 = (_QWORD *)(v42 + 32 + 40 * v56);
    v58 = v57[1];
    v59 = v57[3];
    v60 = v57[4];
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(v59);
    swift_retain();
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v58);
    v62 = IndexPath.item.getter(v61);
    swift_beginAccess(v60 + 16, v90, 0, 0);
    v63 = *(_QWORD *)(v60 + 16);
    swift_bridgeObjectRetain(v63);
    swift_release(v60);
    if ((v63 & 0xC000000000000001) != 0)
    {
      v65 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v63);
      v64 = v89;
    }
    else
    {
      v64 = v89;
      if ((v62 & 0x8000000000000000) != 0)
        goto LABEL_60;
      if (v62 >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_61;
      v65 = *(void **)(v63 + 8 * v62 + 32);
      swift_unknownObjectRetain(v65);
    }
    *(_QWORD *)&v66 = swift_bridgeObjectRelease(v63).n128_u64[0];
    if ((v54[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) != 0
      && (objc_msgSend(v65, "isFolder", v66) & 1) != 0)
    {
      v85(v15, v64);
      swift_unknownObjectRelease(v65);
    }
    else
    {
      objc_msgSend(v54, "loadViewIfNeeded", v66);
      v68 = *(void **)&v54[v87];
      if (!v68)
        goto LABEL_67;
      v69 = v68;
      v70 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v69, "selectItemAtIndexPath:animated:scrollPosition:", v70, 0, 0);
      swift_unknownObjectRelease(v65);

      v85(v15, v64);
    }
    v19 = v78;
    v20 = v82;
LABEL_12:
    ++v24;
    v23 = (unint64_t)v86;
    if (v86 == v24)
      goto LABEL_5;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
}

void DOCItemCollectionViewController.open(node:animated:)(void *a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  Class isa;
  void *v26;
  id v27;
  Class v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v37 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017A9F4(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_100642710);
    v16 = objc_msgSend(a1, "fpfs_fpItem");
    if (v16)
    {
      v17 = v16;
      v18 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v19 = swift_allocObject(v18, 40, 7);
      *(_OWORD *)(v19 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v19 + 32) = v17;
      v39 = v19;
      specialized Array._endMutation()(v19);
      v20 = v39;
      v21 = v17;
      sub_1001851D0(v20, v17);

      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v29 = Logger.UI.unsafeMutableAddressor(0);
      v30 = v37;
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v29, v37);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.error.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v39 = v35;
        *(_DWORD *)v34 = 136315138;
        v38 = sub_1000544FC(0xD000000000000014, 0x80000001005138F0, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s: node could not be found to be opened with App Intents", v34, 0xCu);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v30);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    objc_msgSend(v2, "loadViewIfNeeded");
    v22 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    v23 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v23)
    {
      v24 = v23;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v24, "selectItemAtIndexPath:animated:scrollPosition:", isa, a2 & 1, 0);

      objc_msgSend(v3, "loadViewIfNeeded");
      v26 = *(void **)&v3[v22];
      if (v26)
      {
        v27 = v26;
        v28 = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v3, "collectionView:performPrimaryActionForItemAtIndexPath:", v27, v28);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  void *v2;
  Class isa;
  id v4;
  char v5;
  id v6;
  char v7;
  id v8;
  char v9;
  id v10;
  id v11;
  objc_super v12;

  v2 = v1;
  isa = a1.value.super.isa;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v12, "traitCollectionDidChange:", isa);
  sub_100184178();
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = sub_10000BE74(8, isa);

  if ((v5 & 1) != 0)
    sub_100098EBC();
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = sub_10000BE74(16, isa);

  if ((v7 & 1) != 0)
    sub_100027218();
  v8 = objc_msgSend(v2, "traitCollection");
  v9 = sub_10000BE74(1, isa);

  if ((v9 & 1) != 0)
  {
    *((_BYTE *)v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
    v10 = objc_msgSend(v2, "viewIfLoaded");
    v11 = objc_msgSend(v10, "window");

    if (v11)
      sub_1000926C8();
  }
  sub_100097624();
}

void sub_100184178()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    v3 = v1;
    LODWORD(v2) = objc_msgSend(v2, "isPickerUI");
    v19 = objc_msgSend(v0, "traitCollection");
    if ((_DWORD)v2)
    {
      v4 = UITraitCollection.modifyingTraits(_:)(sub_100190A98, 0);

      v19 = (id)v4;
    }
    v5 = objc_msgSend(v3, "preparedCells");
    if (!v5)
    {
LABEL_23:
      __break(1u);
      return;
    }
    v6 = v5;
    v7 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v18 = v8;
      else
        v18 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease(v8);
      if (v9)
        goto LABEL_7;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_7:
        if (v9 >= 1)
        {
          for (i = 0; i != v9; ++i)
          {
            if ((v8 & 0xC000000000000001) != 0)
              v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
            else
              v11 = *(id *)(v8 + 8 * i + 32);
            v12 = v11;
            v13 = type metadata accessor for DOCItemCollectionCell();
            v14 = (_QWORD *)swift_dynamicCastClass(v12, v13);
            if (v14)
            {
              v15 = (*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x1F8))();
              if (v15)
              {
                v16 = (void *)v15;
                v17 = v19;
                sub_100072444(v19);

              }
            }

          }
          goto LABEL_21;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
LABEL_21:

    swift_bridgeObjectRelease(v8);
  }
}

void sub_100184394(void *a1@<X0>, double a2@<X1>, double a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char *v7;
  char *v8;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double top;
  double left;
  double bottom;
  double right;
  id v25;
  void *v26;
  char *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unsigned __int8 v41;
  uint64_t v42;
  double v43;
  double v44;
  CGFloat leading;
  CGFloat v46;
  CGFloat trailing;
  _BOOL8 v48;
  double v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  char *v62;
  double v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69[24];
  _BYTE v70[64];
  uint64_t v71;

  v8 = v7;
  v16 = 0.0;
  if (!objc_msgSend(v8, "isViewLoaded"))
    goto LABEL_36;
  if ((a4 & 1) != 0)
  {
    sub_100028040();
    v17 = v19;
    v18 = v20;
  }
  else
  {
    v17 = a2;
    v18 = a3;
  }
  top = UIEdgeInsetsZero.top;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v25 = objc_msgSend(v8, "viewIfLoaded");
  if (v25)
  {
    v26 = v25;
    v27 = &v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    *(_QWORD *)&v28 = swift_beginAccess(&v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &v68, 0, 0).n128_u64[0];
    if (*(_QWORD *)v27 <= 1uLL)
    {
      objc_msgSend(v26, "safeAreaInsets", v28);
      v30 = v29;
      objc_msgSend(v26, "safeAreaInsets");
      v17 = v17 - (v30 + v31);
      objc_msgSend(v26, "safeAreaInsets");
      top = v32;
      left = v33;
      bottom = v34;
      right = v35;
    }

  }
  v36 = 0;
  if (v17 > 0.0 && v18 > 0.0)
  {
    v37 = sub_10023B9F4(&off_1005BF0C8);
    v39 = v38;
    swift_arrayDestroy(&unk_1005BF0E8, 4, &_s6TraitsVN);
    v40 = sub_10007B5C0(v37);
    swift_bridgeObjectRelease(v39);
    if (!v40)
      goto LABEL_36;
    v41 = v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 16];
    v42 = type metadata accessor for DOCItemCollectionLayoutTraits();
    swift_allocObject(v42, 960, 7);
    v36 = sub_1002F31D0(v41, a1, v17, v18, top, left, bottom, right);
    *(_QWORD *)&v43 = sub_10009DED4((uint64_t)v70).n128_u64[0];
    if (v71)
    {
      v44 = NSDirectionalEdgeInsetsZero.top;
      leading = NSDirectionalEdgeInsetsZero.leading;
      v46 = NSDirectionalEdgeInsetsZero.bottom;
      trailing = NSDirectionalEdgeInsetsZero.trailing;
      if ((a6 & 1) != 0)
        goto LABEL_26;
      v48 = 0;
    }
    else
    {
      v48 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "browserViewContext", v43) == 0;
      v44 = NSDirectionalEdgeInsetsZero.top;
      leading = NSDirectionalEdgeInsetsZero.leading;
      v46 = NSDirectionalEdgeInsetsZero.bottom;
      trailing = NSDirectionalEdgeInsetsZero.trailing;
      if ((a6 & 1) != 0)
        goto LABEL_26;
    }
    if (*(_BYTE *)(v36 + 544) == 2)
    {
      v50 = sub_1001BBEB8(v48);
      if (v50)
      {
        v51 = (void *)v50;
        v52 = &v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess(&v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v69, 0, 0);
        v53 = *(_QWORD *)v52;
        v54 = qword_100640DD8;
        v55 = v51;
        if (v54 != -1)
          swift_once(&qword_100640DD8, sub_1000AF8E4);
        leading = *((double *)&xmmword_100645A80 + 1);
        v46 = *(double *)&qword_100645A90;
        trailing = *(double *)&qword_100645A98;
        if (v53)
          v44 = *(double *)&xmmword_100645A80;
        else
          v44 = 0.0;
        v58 = *(double *)(v36 + 560);
        LODWORD(v56) = 1148846080;
        LODWORD(v57) = 1112014848;
        objc_msgSend(v55, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", v58, UILayoutFittingCompressedSize.height, v56, v57);
        v60 = v59;
        objc_msgSend(v55, "directionalLayoutMargins");
        v49 = v44 + v60 - v61;
        v62 = (char *)sub_10001B43C();

        v63 = *(double *)&v62[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight];
        v64 = v63 != v49;
        if ((a5 & 1) != 0)
          goto LABEL_32;
LABEL_29:
        if ((v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] & 1) != 0
          || (v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] & 1) != 0
          || v64)
        {
          goto LABEL_32;
        }
        v65 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
        swift_retain();
        v67 = sub_1002F28D0(v66);
        sub_1001D0668((uint64_t)v70);
        swift_release(v65);
        if ((v67 & 1) != 0)
          goto LABEL_33;
        swift_release(v36);
LABEL_36:
        v36 = 0;
        leading = 0.0;
        v46 = 0.0;
        trailing = 0.0;
        v49 = 0.0;
        v44 = 0.0;
        goto LABEL_37;
      }
    }
LABEL_26:
    v49 = 0.0;
    if ((a5 & 1) != 0)
    {
      v58 = 0.0;
LABEL_32:
      sub_1001D0668((uint64_t)v70);
LABEL_33:
      v16 = v58;
      goto LABEL_37;
    }
    v64 = 0;
    v58 = 0.0;
    goto LABEL_29;
  }
  v49 = 0.0;
  v44 = 0.0;
  leading = 0.0;
  v46 = 0.0;
  trailing = 0.0;
LABEL_37:
  *(_QWORD *)a7 = v36;
  *(double *)(a7 + 8) = v16;
  *(double *)(a7 + 16) = v49;
  *(double *)(a7 + 24) = v44;
  *(CGFloat *)(a7 + 32) = leading;
  *(CGFloat *)(a7 + 40) = v46;
  *(CGFloat *)(a7 + 48) = trailing;
}

uint64_t sub_1001847F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  char *v78;
  unint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  _BYTE v97[32];
  uint64_t v98[5];
  char v99[32];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  result = __chkstk_darwin(v11);
  v15 = (char *)&v78 - v14;
  v16 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell];
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] = v16;
  if ((v16 & 1) != 0)
    return result;
  if ((v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0)
    return result;
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  if (!v17)
    return result;
  v88 = v6;
  v89 = v4;
  v90 = v13;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
LABEL_41:
    __break(1u);
    return result;
  }
  swift_retain();
  v18 = sub_10004FD50();
  v19 = *(_QWORD *)(v17 + 64);
  swift_unknownObjectRetain(v19);
  v20 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v21 = Array<A>.contains(node:)(v19, v18, v20);
  swift_bridgeObjectRelease(v18);
  swift_unknownObjectRelease(v19);
  if ((v21 & 1) == 0)
    return swift_release(v17);
  v83 = v5;
  v22 = *(void **)(v17 + 64);
  swift_unknownObjectRetain(v22);
  v23 = sub_1001FBEA0(0xF4240uLL);
  v24 = Logger.Rename.unsafeMutableAddressor(v23);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v81 = v24;
  v82 = v25;
  ((void (*)(char *))v25)(v15);
  v26 = swift_unknownObjectRetain_n(v22, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.debug.getter();
  v29 = v28;
  v30 = os_log_type_enabled(v27, v28);
  v91 = v17;
  v87 = v9;
  v78 = v8;
  v79 = v23;
  if (v30)
  {
    v31 = swift_slowAlloc(32, -1);
    v32 = swift_slowAlloc(64, -1);
    v98[0] = v32;
    *(_DWORD *)v31 = 136315650;
    LODWORD(v94) = v29;
    v96 = sub_1000544FC(0xD000000000000019, 0x8000000100516C50, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
    *(_WORD *)(v31 + 12) = 2048;
    v96 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
    *(_WORD *)(v31 + 22) = 2080;
    ObjectType = swift_getObjectType(v22, v33);
    v35 = DOCNode.nodeDescription.getter(ObjectType);
    v37 = v36;
    v96 = sub_1000544FC(v35, v36, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
    swift_unknownObjectRelease_n(v22, 2);
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v94, "%s (%ld): looking for cell for node: %s", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    v38 = v31;
    v9 = v87;
    v17 = v91;
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(v22, 2);
  }
  v80 = *(void (**)(char *, uint64_t))(v10 + 8);
  v80(v15, v9);
  v39 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v84 = *(_QWORD *)(v39 + 16);
  v95 = v22;
  if (!v84)
  {
LABEL_33:
    v56 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v89, 1, 1, v83);
LABEL_34:
    sub_10000CB4C(v56, (uint64_t *)&unk_100642710);
    v61 = v90;
    v82(v90, v81, v9);
    v62 = swift_retain_n(v17, 2);
    v63 = v9;
    v64 = Logger.logObject.getter(v62);
    v65 = static os_log_type_t.error.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc(32, -1);
      v67 = swift_slowAlloc(64, -1);
      v98[0] = v67;
      *(_DWORD *)v66 = 136315650;
      v96 = sub_1000544FC(0xD000000000000019, 0x8000000100516C50, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
      *(_WORD *)(v66 + 12) = 2048;
      v96 = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
      *(_WORD *)(v66 + 22) = 2080;
      v68 = *(_QWORD *)(v17 + 64);
      v70 = swift_getObjectType(v68, v69);
      swift_unknownObjectRetain(v68);
      v71 = DOCNode.nodeDescription.getter(v70);
      v73 = v72;
      swift_unknownObjectRelease(v68);
      v96 = sub_1000544FC(v71, v73, v98);
      v74 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
      swift_release_n(v17, 2, v74);
      swift_bridgeObjectRelease(v73);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%s %ld: FAILED!!!. Node: %s not found in itemCollection", (uint8_t *)v66, 0x20u);
      swift_arrayDestroy(v67, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v66, -1, -1);
      swift_unknownObjectRelease(v95);
      swift_release(v17);

      v75 = v90;
      v76 = v87;
    }
    else
    {

      swift_release_n(v17, 3, v77);
      swift_unknownObjectRelease(v22);
      v75 = v61;
      v76 = v63;
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v80)(v75, v76);
  }
  v86 = v39 + 32;
  result = swift_bridgeObjectRetain(v39);
  v40 = 0;
  v85 = result;
  while (1)
  {
    if (v40 >= *(_QWORD *)(result + 16))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v41 = (_QWORD *)(v86 + 40 * v40);
    v42 = v41[1];
    v43 = v41[3];
    v44 = v41[4];
    swift_beginAccess(v44 + 16, v99, 0, 0);
    v45 = *(_QWORD *)(v44 + 16);
    v93 = v42;
    v94 = v43;
    v92 = v44;
    if ((unint64_t)v45 >> 62)
      break;
    v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v43);
    swift_retain();
    if (v46)
      goto LABEL_16;
LABEL_12:
    ++v40;
    swift_bridgeObjectRelease(v93);
    swift_bridgeObjectRelease(v45);
    swift_release(v92);
    swift_bridgeObjectRelease(v94);
    v17 = v91;
    result = v85;
    if (v40 == v84)
    {
      swift_bridgeObjectRelease(v85);
      v9 = v87;
      v22 = v95;
      goto LABEL_33;
    }
  }
  if (v45 < 0)
    v55 = v45;
  else
    v55 = v45 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v45, 2);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v43);
  swift_retain();
  v46 = _CocoaArrayWrapper.endIndex.getter(v55);
  swift_bridgeObjectRelease(v45);
  if (!v46)
    goto LABEL_12;
LABEL_16:
  v48 = swift_getObjectType(v95, v47);
  v49 = 0;
  while (1)
  {
    if ((v45 & 0xC000000000000001) != 0)
    {
      result = specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v45);
      v51 = result;
      v52 = v49 + 1;
      if (__OFADD__(v49, 1))
        goto LABEL_39;
    }
    else
    {
      v51 = *(_QWORD *)(v45 + 8 * v49 + 32);
      result = swift_unknownObjectRetain(v51);
      v52 = v49 + 1;
      if (__OFADD__(v49, 1))
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
    v53 = swift_getObjectType(v51, v50);
    DOCNode.identifierKey.getter(v98, v53);
    DOCNode.identifierKey.getter(&v96, v48);
    v54 = static AnyHashable.== infix(_:_:)(v98, &v96);
    sub_100067748((uint64_t)&v96);
    sub_100067748((uint64_t)v98);
    if ((v54 & 1) != 0)
      break;
    swift_unknownObjectRelease(v51);
    ++v49;
    if (v52 == v46)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease(v85);
  swift_bridgeObjectRelease(v45);
  v56 = (uint64_t)v89;
  IndexPath.init(item:section:)(v49, v40);
  swift_release(v92);
  swift_bridgeObjectRelease(v94);
  swift_bridgeObjectRelease(v93);
  swift_unknownObjectRelease(v51);
  v57 = v88;
  v58 = v83;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v56, 0, 1, v83);
  v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v56, 1, v58);
  v9 = v87;
  v17 = v91;
  v22 = v95;
  if (v59 == 1)
    goto LABEL_34;
  v60 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v78, v56, v58);
  sub_1001AD09C(v1, v22, 0xD000000000000019, 0x8000000100516C50, v79, v60);
  swift_unknownObjectRelease(v22);
  swift_release(v17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v60, v58);
}

uint64_t sub_1001851D0(uint64_t Available, void *a2)
{
  char *v2;
  char *v3;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _UNKNOWN **v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  char v32[24];
  char v33[24];
  char v34[24];

  v3 = v2;
  v6 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
  v7 = (char *)DOCPreviewController.init()();
  v8 = v7;
  v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
  if (v9)
    v10 = &protocol witness table for DOCDocumentManager;
  else
    v10 = 0;
  v11 = &v7[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
  swift_beginAccess(&v7[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate], v34, 1, 0);
  *((_QWORD *)v11 + 1) = v10;
  swift_unknownObjectWeakAssign(v11, v9);
  v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
  v13 = &v8[OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager];
  swift_beginAccess(&v8[OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager], v33, 1, 0);
  swift_unknownObjectWeakAssign(v13, v12);
  v14 = &v8[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider];
  *((_QWORD *)v14 + 1) = &protocol witness table for DOCItemCollectionViewController;
  swift_unknownObjectWeakAssign(v14, v3);
  v15 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v16 = (void **)&v8[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
  swift_beginAccess(&v8[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration], v32, 1, 0);
  v17 = *v16;
  *v16 = v15;
  v18 = v15;

  if (!((unint64_t)Available >> 62))
  {
    if (*(_QWORD *)((Available & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_12:
    v25 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    swift_bridgeObjectRetain(v25);
    v26 = sub_10006922C((uint64_t *)&unk_1006424B0);
    Available = Array<A>.fpfs_syncFetchAvailableFPItems()(v25, v26);
    swift_bridgeObjectRelease(v25);
    if (a2)
      goto LABEL_7;
    goto LABEL_13;
  }
  if (Available < 0)
    v23 = Available;
  else
    v23 = Available & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(Available);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(Available);
  if (!v24)
    goto LABEL_12;
LABEL_6:
  swift_bridgeObjectRetain(Available);
  if (a2)
  {
LABEL_7:
    swift_bridgeObjectRetain(Available);
    v19 = a2;
    a2 = (void *)sub_100045810((uint64_t)v19, Available, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v21 = v20;
    swift_bridgeObjectRelease(Available);

    v22 = v21 & 1;
    goto LABEL_14;
  }
LABEL_13:
  v22 = 1;
LABEL_14:
  DOCPreviewController.set(_:defaultIndex:)(Available, 0, 0, (unint64_t)a2, v22);
  swift_bridgeObjectRelease(Available);
  v27 = qword_100640EB0;
  v28 = v3;
  if (v27 != -1)
    swift_once(&qword_100640EB0, sub_10021F734);
  swift_beginAccess(&static DOCPreviewRouter.shared, &v31, 0, 0);
  v29 = static DOCPreviewRouter.shared;
  swift_retain();
  sub_10021F8B0(v8, 1, v28, 0, 0);

  return swift_release(v29);
}

void sub_100185498(int a1, void *a2, int a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  float v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v4 = v3;
  v38 = a3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - v18;
  if (!a2)
  {
    v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = a1 & 1;
    sub_100097F64();
    return;
  }
  v37 = a1;
  if ((a1 & 1) != 0)
  {
    v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 1;
LABEL_8:
    v31 = a2;
    sub_100097F64();
    goto LABEL_9;
  }
  if ((v38 & 1) == 0)
  {
    v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 0;
    goto LABEL_8;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v33 = static OS_dispatch_queue.main.getter(a2);
  v20 = static DispatchTime.now()(v33);
  v21 = UIAnimationDragCoefficient(v20);
  + infix(_:_:)(v16, v21 * 0.3);
  v32 = *(void (**)(char *, uint64_t))(v14 + 8);
  v32(v16, v13);
  v22 = swift_allocObject(&unk_1005CE230, 24, 7);
  *(_QWORD *)(v22 + 16) = v4;
  aBlock[4] = sub_1001D0DDC;
  v40 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CE248;
  v23 = _Block_copy(aBlock);
  v24 = v40;
  v25 = v4;
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v28 = sub_10006922C((uint64_t *)&unk_100647540);
  v29 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v7, v27);
  v30 = (void *)v33;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v12, v9, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
  v32(v19, v13);
LABEL_9:
  objc_msgSend(a2, "setNavigationBarHidden:animated:", v37 & 1, v38 & 1);

}

void sub_1001857F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  uint64_t v12;
  void *v13;
  uint64_t ObjectType;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v17[24];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v9, v10);
  if (Strong)
  {
    v13 = Strong;
    if (a1)
    {
      ObjectType = swift_getObjectType(a3, v12);
      v15 = swift_allocObject(&unk_1005CBE18, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16);
      v16 = (_QWORD *)swift_allocObject(&unk_1005CC930, 48, 7);
      v16[2] = v15;
      v16[3] = a1;
      v16[4] = a4;
      v16[5] = a5;
      swift_bridgeObjectRetain(a1);
      swift_retain();
      swift_retain();
      DOCNode.fpfs_fetchFPItem(completion:)(sub_1001CF2D8, v16, ObjectType);

      swift_release(v15);
      swift_release(v16);
    }
    else
    {

    }
  }
}

void sub_100185900(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, __n128), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *Strong;
  void *v20;
  id v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  void **v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  id v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  void (*v80)(_QWORD, __n128);
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  char v88[24];

  v10 = type metadata accessor for Logger(0);
  v84 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v83 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = (_QWORD *)type metadata accessor for DOCOperationItem(0);
  v12 = *(v85 - 1);
  v13 = __chkstk_darwin(v85);
  v15 = (void **)((char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v17 = (uint64_t *)((char *)&v73 - v16);
  a2 += 16;
  swift_beginAccess(a2, v88, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2, v18);
  if (Strong)
  {
    if (a1)
    {
      v76 = Strong;
      v77 = a5;
      v20 = (void *)objc_opt_self(FPItemManager);
      v21 = a1;
      v22 = objc_msgSend(v20, "defaultManager");
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v75 = v22;
      v78 = v21;
      v24 = objc_msgSend(v22, "eligibleActionsForDroppingItems:underItem:", isa, v21);

      type metadata accessor for FPAction(0);
      v26 = v25;
      v27 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
      v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v24, v26, v27);

      if ((unint64_t)a3 >> 62)
      {
        if (a3 < 0)
          v72 = a3;
        else
          v72 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v30 = _CocoaArrayWrapper.endIndex.getter(v72);
        swift_bridgeObjectRelease(a3);
      }
      else
      {
        v30 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v31 = _swiftEmptyArrayStorage;
      v81 = a1;
      v82 = v30;
      v79 = v28;
      v80 = a4;
      if (v30)
      {
        v87 = _swiftEmptyArrayStorage;
        sub_100155054(0, v30 & ~(v30 >> 63), 0);
        v32 = v82;
        if (v82 < 0)
        {
          __break(1u);
          return;
        }
        v74 = v10;
        v31 = v87;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v33 = 0;
          v34 = v85;
          do
          {
            *v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33, a3);
            swift_storeEnumTagMultiPayload(v17, v34, 1);
            v87 = v31;
            v36 = v31[2];
            v35 = v31[3];
            if (v36 >= v35 >> 1)
            {
              sub_100155054(v35 > 1, v36 + 1, 1);
              v32 = v82;
              v34 = v85;
              v31 = v87;
            }
            ++v33;
            v31[2] = v36 + 1;
            v29 = sub_1001D0788((uint64_t)v17, (uint64_t)v31+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v36, type metadata accessor for DOCOperationItem);
          }
          while (v32 != v33);
        }
        else
        {
          v37 = (void **)(a3 + 32);
          v38 = v82;
          v39 = v85;
          do
          {
            v40 = a3;
            v41 = *v37;
            *v15 = *v37;
            swift_storeEnumTagMultiPayload(v15, v39, 1);
            v87 = v31;
            v43 = v31[2];
            v42 = v31[3];
            v44 = v41;
            if (v43 >= v42 >> 1)
            {
              sub_100155054(v42 > 1, v43 + 1, 1);
              v31 = v87;
            }
            v31[2] = v43 + 1;
            v29 = sub_1001D0788((uint64_t)v15, (uint64_t)v31+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v43, type metadata accessor for DOCOperationItem);
            ++v37;
            --v38;
            a3 = v40;
            v39 = v85;
          }
          while (v38);
        }
        a4 = v80;
        a1 = v81;
        v10 = v74;
      }
      v45 = Logger.UI.unsafeMutableAddressor(v29);
      v47 = v83;
      v46 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v83, v45, v10);
      v48 = v78;
      swift_bridgeObjectRetain(a3);
      v49 = v48;
      v50 = Logger.logObject.getter(v49);
      v51 = static os_log_type_t.debug.getter();
      v52 = v51;
      if (os_log_type_enabled(v50, v51))
      {
        v53 = swift_slowAlloc(42, -1);
        v85 = (_QWORD *)swift_slowAlloc(64, -1);
        v87 = v85;
        *(_DWORD *)v53 = 136315906;
        v86 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100515400, (uint64_t *)&v87);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);
        *(_WORD *)(v53 + 12) = 2048;
        LODWORD(v78) = v52;
        v54 = v82;
        v86 = v82;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);
        *(_WORD *)(v53 + 22) = 2048;
        v86 = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);
        *(_QWORD *)&v55 = swift_bridgeObjectRelease(a3).n128_u64[0];
        *(_WORD *)(v53 + 32) = 2080;
        v56 = objc_msgSend(v49, "displayName", v55);
        v57 = v10;
        v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        v60 = v59;

        v86 = sub_1000544FC(v58, v60, (uint64_t *)&v87);
        a4 = v80;
        a1 = v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);

        swift_bridgeObjectRelease(v60);
        _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v78, "%s Requested to move %ld items. Moving %ld eligible to newly created folder: %s", (uint8_t *)v53, 0x2Au);
        v61 = v85;
        swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v61, -1, -1);
        swift_slowDealloc(v53, -1, -1);

        (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v57);
      }
      else
      {

        swift_bridgeObjectRelease(a3);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v10);
      }
      v62 = FPActionReparent;
      v63 = v79;
      v64 = sub_100028BE0((uint64_t)v62, v79);

      swift_bridgeObjectRelease(v63);
      if ((v64 & 1) != 0)
      {
        v65 = swift_allocObject(&unk_1005CC958, 32, 7);
        v66 = v77;
        *(_QWORD *)(v65 + 16) = a4;
        *(_QWORD *)(v65 + 24) = v66;
        v49 = v49;
        swift_retain();
        v67 = v75;
        v68 = v76;
        sub_100477E1C(0, (uint64_t)v31, (uint64_t)a1, 1, 1, 0, (uint64_t)v76, (uint64_t)sub_1001CF2E4, v65);
        swift_release(v65);

        swift_bridgeObjectRelease(v31);
        v69 = v67;
        v70 = v49;
      }
      else
      {
        v71 = swift_bridgeObjectRelease(v31);
        a4(1, v71);
        v70 = v75;
        v69 = v76;
      }

      Strong = v49;
    }

  }
}

uint64_t sub_100185FBC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  BOOL v31[8];
  uint64_t v32;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.UI.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  v12 = swift_bridgeObjectRetain_n(a1, 4);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v28[1] = a3;
    v29 = a2;
    v15 = swift_slowAlloc(38, -1);
    v28[0] = swift_slowAlloc(96, -1);
    v32 = v28[0];
    *(_DWORD *)v15 = 136315906;
    v30 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100515400, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v30) = a1 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, (char *)&v30 + 4);
    *(_WORD *)(v15 + 18) = 2080;
    if (a1)
    {
      if ((unint64_t)a1 >> 62)
      {
        if (a1 >= 0)
          v27 = a1 & 0xFFFFFFFFFFFFFF8;
        else
          v27 = a1;
        swift_bridgeObjectRetain(a1);
        v16 = _CocoaArrayWrapper.endIndex.getter(v27);
        swift_bridgeObjectRelease(a1);
      }
      else
      {
        v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v16 = 0;
    }
    v30 = v16;
    v31[0] = a1 == 0;
    v17 = sub_10006922C(&qword_1006444D8);
    v18 = String.init<A>(describing:)(&v30, v17);
    v20 = v19;
    v30 = sub_1000544FC(v18, v19, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v15 + 28) = 2080;
    v30 = a1;
    swift_bridgeObjectRetain(a1);
    v21 = sub_10006922C((uint64_t *)&unk_100646AB0);
    v22 = String.init<A>(describing:)(&v30, v21);
    v24 = v23;
    v30 = sub_1000544FC(v22, v23, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s Requested move finished with success: %{BOOL}d moved: %s items. Items: %s", (uint8_t *)v15, 0x26u);
    v25 = v28[0];
    swift_arrayDestroy(v28[0], 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    a2 = v29;
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return a2(a1 != 0);
}

id DOCItemCollectionViewController.view.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  return objc_msgSendSuper2(&v2, "view");
}

void DOCItemCollectionViewController.view.setter(void *a1)
{
  char *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v3, "setView:", a1);
  objc_msgSend(v1, "setContentScrollView:forEdge:", *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView], 15);

}

char *sub_100186410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  __n128 v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  char v35[24];

  v7 = a5 + 16;
  swift_beginAccess(a5 + 16, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7, v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    if (a2 == 0xD000000000000024 && a3 == 0x800000010050BA70
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010050BA70, a2, a3, 0) & 1) != 0)
    {
      sub_1001867C8();
    }
    else if (a2 == 0xD000000000000024 && a3 == 0x8000000100513910
           || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100513910, a2, a3, 0) & 1) != 0)
    {
      sub_100186CB8();
    }
    else
    {
      if (qword_100640E40 != -1)
        swift_once(&qword_100640E40, sub_10009B250);
      if ((qword_100672740 == a2 && *(_QWORD *)algn_100672748 == a3
         || (v23 = _stringCompareWithSmolCheck(_:_:expecting:)(qword_100672740, *(_QWORD *)algn_100672748, a2, a3, 0),
             (v23 & 1) != 0))
        && ((sub_100064B54(), (v25 & 1) != 0) || (v23 = sub_100063820(v24), (v23 & 1) != 0)))
      {
        v11 = sub_100187100();
      }
      else
      {
        v26 = *(id *)DOCLog.UI.unsafeMutableAddressor(v23);
        v34 = static os_log_type_t.fault.getter();
        v27 = sub_10006922C((uint64_t *)&unk_100644560);
        v28 = swift_allocObject(v27, 112, 7);
        *(_OWORD *)(v28 + 16) = xmmword_1004D4CE0;
        *(_QWORD *)(v28 + 56) = &type metadata for String;
        v29 = sub_10006A638();
        *(_QWORD *)(v28 + 64) = v29;
        *(_QWORD *)(v28 + 32) = a2;
        *(_QWORD *)(v28 + 40) = a3;
        v30 = type metadata accessor for IndexPath(0);
        v31 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        swift_bridgeObjectRetain(a3);
        v32 = dispatch thunk of CustomStringConvertible.description.getter(v30, v31);
        *(_QWORD *)(v28 + 96) = &type metadata for String;
        *(_QWORD *)(v28 + 104) = v29;
        *(_QWORD *)(v28 + 72) = v32;
        *(_QWORD *)(v28 + 80) = v33;
        os_log(_:dso:log:type:_:)("Collection view asked for supplementary view of kind %@ at index path %@ but none was returned.", 95, 2, &_mh_execute_header, v26, v34, v28);

        swift_bridgeObjectRelease(v28);
        v11 = (char *)objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
      }
    }
    v21 = v11;

  }
  else
  {
    v12 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v13 = static os_log_type_t.fault.getter();
    v14 = sub_10006922C((uint64_t *)&unk_100644560);
    v15 = swift_allocObject(v14, 112, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    v16 = sub_10006A638();
    *(_QWORD *)(v15 + 64) = v16;
    *(_QWORD *)(v15 + 32) = a2;
    *(_QWORD *)(v15 + 40) = a3;
    v17 = type metadata accessor for IndexPath(0);
    v18 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    swift_bridgeObjectRetain(a3);
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v17, v18);
    *(_QWORD *)(v15 + 96) = &type metadata for String;
    *(_QWORD *)(v15 + 104) = v16;
    *(_QWORD *)(v15 + 72) = v19;
    *(_QWORD *)(v15 + 80) = v20;
    os_log(_:dso:log:type:_:)("Collection view asked for supplementary view of kind %@ at index path %@ but none was returned [self was deallocated].", 118, 2, &_mh_execute_header, v12, v13, v15);

    swift_bridgeObjectRelease(v15);
    return (char *)objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
  }
  return v21;
}

void sub_1001867C8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  Class isa;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char **v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "loadViewIfNeeded");
  v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v7 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v7)
    goto LABEL_22;
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v8, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v9, v10, isa);

  v13 = objc_msgSend(v12, "subviews");
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(void **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    if (!v16)
      goto LABEL_8;
    goto LABEL_4;
  }
  if (v15 < 0)
    v44 = v15;
  else
    v44 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v15);
  v16 = (void *)_CocoaArrayWrapper.endIndex.getter(v44);
  swift_bridgeObjectRelease(v15);
  v17 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
  if (v16)
  {
LABEL_4:
    if ((v15 & 0xC000000000000001) != 0)
    {
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
      goto LABEL_7;
    }
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *(id *)(v15 + 32);
LABEL_7:
      v16 = v18;
      goto LABEL_8;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_8:
  objc_msgSend(v16, "removeFromSuperview", swift_bridgeObjectRelease(v15).n128_f64[0]);

  sub_10003DDDC();
  if ((v19 & 1) != 0)
  {
    v20 = sub_10009BBE8();
    sub_100005254();
    objc_msgSend(v12, "addSubview:", v20);
    v21 = objc_msgSend(v20, "leadingAnchor");
    v22 = objc_msgSend(v12, "leadingAnchor");
    objc_msgSend(v1, v17[496]);
    v23 = *(void **)&v1[v6];
    if (v23)
    {
      objc_msgSend(v23, "layoutMargins");
      v26 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, (v24 + v25) * 0.5);

      objc_msgSend(v26, "setActive:", 1);
      v27 = objc_msgSend(v20, "trailingAnchor");
      v28 = objc_msgSend(v12, "trailingAnchor");
      objc_msgSend(v1, "loadViewIfNeeded");
      v29 = *(void **)&v1[v6];
      if (v29)
      {
        objc_msgSend(v29, "layoutMargins");
        v32 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, (v30 + v31) * -0.5);

        objc_msgSend(v32, "setActive:", 1);
        v33 = objc_msgSend(v20, "bottomAnchor");
        v34 = objc_msgSend(v12, "bottomAnchor");
        v35 = objc_msgSend(v33, "constraintEqualToAnchor:constant:", v34, 0.0);

        objc_msgSend(v35, "setActive:", 1);
        v36 = objc_msgSend(v20, "topAnchor");
        v37 = objc_msgSend(v12, "topAnchor");
        v38 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v37, 0.0);

        objc_msgSend(v38, "setActive:", 1);
        return;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  v39 = Logger.UI.unsafeMutableAddressor(v19);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v39, v2);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.error.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Collection view requested global header but headerContainerView is nil, returning an empty view.", v43, 2u);
    swift_slowDealloc(v43, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100186CB8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  NSString v3;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  Class isa;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSArray v29;
  void *v30;
  id v31;
  NSString v32;
  uint64_t v33;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (!v1 || *(_BYTE *)(v1 + 544) != 2 || (v2 = (void *)sub_1001BBEB8(1)) == 0)
  {
    objc_msgSend(v0, "loadViewIfNeeded");
    v30 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v30)
    {
      v31 = v30;
      v32 = String._bridgeToObjectiveC()();
      v3 = String._bridgeToObjectiveC()();
      v29.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v31, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v32, v3, v29.super.isa);

      goto LABEL_14;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v3 = v2;
  objc_msgSend(v0, "loadViewIfNeeded");
  v4 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v9 = objc_msgSend(v5, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v6, v7, isa);

    v10 = objc_msgSend(v9, "subviews");
    v11 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v33 = v12;
      else
        v33 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v13 = (void *)_CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v12);
      if (!v13)
        goto LABEL_11;
    }
    else
    {
      v13 = *(void **)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v13)
      {
LABEL_11:
        objc_msgSend(v13, "removeFromSuperview", swift_bridgeObjectRelease(v12).n128_f64[0]);

        objc_msgSend(v9, "addSubview:", v3);
        v15 = (void *)objc_opt_self(NSLayoutConstraint);
        v16 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v17 = swift_allocObject(v16, 56, 7);
        *(_OWORD *)(v17 + 16) = xmmword_1004D9720;
        v18 = objc_msgSend(v3, "leadingAnchor");
        v19 = objc_msgSend(v9, "leadingAnchor");
        v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

        *(_QWORD *)(v17 + 32) = v20;
        v21 = objc_msgSend(v3, "bottomAnchor");
        v22 = objc_msgSend(v9, "bottomAnchor");
        v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

        *(_QWORD *)(v17 + 40) = v23;
        v24 = objc_msgSend(v3, "trailingAnchor");
        v25 = objc_msgSend(v9, "trailingAnchor");
        v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

        *(_QWORD *)(v17 + 48) = v26;
        specialized Array._endMutation()(v27);
        v28 = v17;
        sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
        v29.super.isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v15, "activateConstraints:", v29.super.isa, swift_bridgeObjectRelease(v28).n128_f64[0]);
LABEL_14:

        return;
      }
    }
    if ((v12 & 0xC000000000000001) != 0)
    {
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
      goto LABEL_10;
    }
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v14 = *(id *)(v12 + 32);
LABEL_10:
      v13 = v14;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_23:
  __break(1u);
}

char *sub_100187100()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *result;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  Class isa;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t *, _QWORD);
  char **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37[5];

  v1 = sub_10006922C((uint64_t *)&unk_100654FA0);
  __chkstk_darwin(v1);
  v3 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C((uint64_t *)&unk_100646C20);
  __chkstk_darwin(v4);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (char *)objc_msgSend(v0, "loadViewIfNeeded");
  v8 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v9, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v10, v11, isa);

  v14 = type metadata accessor for DOCItemCollectionViewSectionHeader();
  v15 = (char *)swift_dynamicCastClassUnconditional(v13, v14, 0, 0, 0);
  if (IndexPath.count.getter(v15) == 2)
  {
    result = (char *)IndexPath.section.getter(2);
    v16 = result;
  }
  else
  {
    v17 = type metadata accessor for IndexPath(0);
    v18 = sub_10005A360(&qword_100646CC0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    dispatch thunk of Collection.startIndex.getter(v17);
    result = (char *)dispatch thunk of Collection.endIndex.getter(v37, v17, v18);
    if (v36[0] == v37[0])
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v19 = (uint64_t (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(v37, v36, v17, v18);
    v16 = *v20;
    result = (char *)v19(v37, 0);
  }
  v21 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource];
  if (!v21)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_retain();
  v22 = sub_100429D88();
  swift_release(v21);
  if ((*(_BYTE *)(v22 + 16) & 1) != 0)
  {
    v23 = v22 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
    swift_beginAccess(v22 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot, v36, 0, 0);
    sub_1000271D4(v23, (uint64_t)v3, (uint64_t *)&unk_100654FA0);
    v24 = sub_10006922C((uint64_t *)&unk_100654E80);
    v25 = *(_QWORD *)(v24 - 8);
    result = (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v3, 1, v24);
    if ((_DWORD)result == 1)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v26 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v24);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v24);
    goto LABEL_12;
  }
  v27 = v22 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
  swift_beginAccess(v22 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, v36, 0, 0);
  sub_1000271D4(v27, (uint64_t)v6, (uint64_t *)&unk_100646C20);
  v28 = sub_10006922C((uint64_t *)&unk_100646C30);
  v29 = *(_QWORD *)(v28 - 8);
  result = (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v6, 1, v28);
  if ((_DWORD)result != 1)
  {
    v26 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v28);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v28);
LABEL_12:
    result = (char *)swift_release(v22);
    if (((unint64_t)v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v16 < *(_QWORD *)(v26 + 16))
    {
      v30 = (_QWORD *)(v26 + 40 * (_QWORD)v16);
      v32 = v30[4];
      v31 = v30[5];
      v34 = v30[6];
      v33 = v30[7];
      v35 = v30[8];
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v33);
      swift_retain();
      swift_bridgeObjectRelease(v26);
      v37[0] = v32;
      v37[1] = v31;
      v37[2] = v34;
      v37[3] = v33;
      v37[4] = v35;
      sub_100198014(v15, v37);
      swift_release(v35);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v31);
      return v15;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_1001874E8(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = swift_allocObject(&unk_1005CEA78, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v8[4] = sub_1001D15D0;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10004A82C;
  v8[3] = &unk_1005CEA90;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  swift_retain();
  swift_release(v6);
  DOCRunInMainThread(v5);
  _Block_release(v5);
}

void sub_10018759C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE v27[24];

  v4 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for DOCFileEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v13 = &v27[-v12 - 8];
  if (a1)
  {
    v14 = a2 + 16;
    swift_beginAccess(v14, v27, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v14, v15);
    if (Strong)
    {
      v17 = (void *)Strong;
      v18 = a1;
      sub_10012BCCC(v18, (uint64_t)v13);
      v19 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
      sub_10007C6DC((uint64_t)v13, (uint64_t)v11, type metadata accessor for DOCFileEntity);
      type metadata accessor for MainActor(0);
      v20 = v17;
      v21 = static MainActor.shared.getter(v20);
      v22 = *(unsigned __int8 *)(v8 + 80);
      v23 = (v22 + 40) & ~v22;
      v24 = (_QWORD *)swift_allocObject(&unk_1005CEAC8, v23 + v9, v22 | 7);
      v24[2] = v21;
      v24[3] = &protocol witness table for MainActor;
      v24[4] = v20;
      sub_1001D0788((uint64_t)v11, (uint64_t)v24 + v23, type metadata accessor for DOCFileEntity);
      v25 = sub_100174E78((uint64_t)v6, (uint64_t)&unk_100646D08, (uint64_t)v24);

      swift_release(v25);
      sub_10007C720((uint64_t)v13, type metadata accessor for DOCFileEntity);

    }
  }
}

void sub_10018778C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = (v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject(&unk_1005CE9B0, v10 + 8, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + v9, v7, v4);
  *(_QWORD *)(v11 + v10) = a1;
  aBlock[4] = sub_1001D154C;
  v16 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CE9C8;
  v12 = _Block_copy(aBlock);
  v13 = v16;
  v14 = a1;
  swift_release(v13);
  DOCRunInMainThread(v12);
  _Block_release(v12);
}

double sub_1001878C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  double result;
  _QWORD v18[2];
  _QWORD v19[5];
  __int128 v20;
  __int128 v21;

  v3 = Notification.userInfo.getter();
  if (!v3)
  {
    v20 = 0u;
    v21 = 0u;
LABEL_10:
    sub_10000CB4C((uint64_t)&v20, &qword_100642730);
    goto LABEL_11;
  }
  v4 = v3;
  v5 = (uint64_t *)DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey.unsafeMutableAddressor();
  v7 = *v5;
  v6 = v5[1];
  v18[0] = v7;
  v18[1] = v6;
  swift_bridgeObjectRetain(v6);
  AnyHashable.init<A>(_:)(v18, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v8 = sub_100067654((uint64_t)v19), (v9 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v4 + 56) + 32 * v8, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease(v4);
  sub_100067748((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_10;
  v10 = sub_10006922C(&qword_10064F390);
  if ((swift_dynamicCast(v19, &v20, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
  {
LABEL_11:
    v15 = *(char **)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    v16 = swift_bridgeObjectRetain(v15);
    sub_100039F10(v16, 257);
    goto LABEL_12;
  }
  v11 = (_QWORD *)v19[0];
  v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  v13 = swift_bridgeObjectRetain(v12);
  v14 = sub_1001BD284(v13, v11);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  v15 = sub_100096D88((uint64_t)v14);
  swift_bridgeObjectRelease(v14);
  sub_100065350((uint64_t)v15);
LABEL_12:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  return result;
}

void *sub_100187A4C(double a1, double a2)
{
  void **v2;
  void **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = v2;
  v6 = sub_10023B9F4(&off_1005BFA38);
  v8 = v7;
  swift_arrayDestroy(&unk_1005BFA58, 3, &_s6TraitsVN);
  v9 = sub_10000BE74(v6, *v2);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) == 0 && *((double *)v3 + 1) == a1 && *((double *)v3 + 2) == a2)
    return v3[3];
  else
    return 0;
}

void sub_100187B04(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v3, "traitCollection");
    objc_msgSend(v3, "frame");
    v6 = v5;
    v8 = v7;
    objc_msgSend(v3, "contentOffset");
    v9 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration);
    v12 = *(id *)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration);
    *v9 = v4;
    v9[1] = v6;
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v11;

  }
}

void sub_100187BD0(char *a1)
{
  void *v1;
  id v3;
  id v4;
  double v5;
  double v6;
  char *v7;
  id v8;

  v1 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(a1, "traitCollection");
    objc_msgSend(v3, "frame");
    sub_100187C90(v5, v6);

    v7 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
    v8 = *(id *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
    *((_QWORD *)v7 + 4) = 0;
    *(_OWORD *)v7 = 0u;
    *((_OWORD *)v7 + 1) = 0u;

  }
}

void sub_100187C90(double a1, double a2)
{
  char *v2;
  void *v3;
  char *v4;
  id v7;
  double v8;
  double v9;
  double v10;
  char v11;
  char v12;
  uint64_t v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v20;
  double v21;
  double v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  double Height;
  double v31;
  double v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  BOOL v37;
  double v38;
  CGRect v39;

  v3 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
  if (!v3)
    return;
  v4 = v2;
  v7 = v3;
  v8 = COERCE_DOUBLE(sub_100187A4C(a1, a2));
  v10 = v9;
  v12 = v11;

  if ((v12 & 1) != 0)
    return;
  objc_msgSend(v4, "loadViewIfNeeded");
  v13 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v14 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v14)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v15 = v8;
  v16 = v10;
  objc_msgSend(v14, "contentOffset");
  if (v18 == v8 && v17 == v10)
    return;
  objc_msgSend(v4, "loadViewIfNeeded");
  v20 = *(void **)&v4[v13];
  if (!v20)
    goto LABEL_26;
  objc_msgSend(v20, "_effectiveContentInset");
  v22 = v21;
  objc_msgSend(v4, "loadViewIfNeeded");
  v23 = *(void **)&v4[v13];
  if (!v23)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v24 = v23;
  objc_msgSend(v24, "_effectiveContentInset");
  v26 = v25;
  v27 = objc_msgSend(v24, "collectionViewLayout");
  objc_msgSend(v27, "collectionViewContentSize");
  v29 = v28;

  objc_msgSend(v24, "bounds");
  Height = CGRectGetHeight(v39);
  objc_msgSend(v24, "_effectiveContentInset");
  v32 = v31;

  objc_msgSend(v4, "loadViewIfNeeded");
  v33 = *(void **)&v4[v13];
  if (!v33)
  {
LABEL_28:
    __break(1u);
    return;
  }
  v34 = v29 - Height + v32;
  if (v34 < -v26)
    v34 = -v26;
  if (v34 >= v16)
    v35 = v16;
  else
    v35 = v34;
  v36 = -v22;
  v37 = v34 < v16 || v16 < v36;
  v38 = 0.0;
  if (!v37)
    v38 = v15;
  if (v16 < v36)
    v35 = -v22;
  objc_msgSend(v33, "setContentOffset:animated:", 0, v38, v35);
}

id DOCItemCollectionViewController.undoManager.getter()
{
  return objc_msgSend((id)objc_opt_self(DOCUndoManager), "shared");
}

BOOL DOCItemCollectionViewController.canBecomeFirstResponder.getter()
{
  void *v0;

  return objc_msgSend(v0, "_appearState") - 1 < 2;
}

Swift::Bool __swiftcall DOCItemCollectionViewController.resignFirstResponder()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id v3;
  Swift::Bool v4;
  char *v5;
  double v6;
  Swift::Bool result;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15[24];
  objc_super v16;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v16.receiver = v0;
  v16.super_class = v2;
  v3 = objc_msgSendSuper2(&v16, "resignFirstResponder");
  v4 = (char)v3;
  if (!(_DWORD)v3)
    goto LABEL_5;
  v5 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v6 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v15, 0, 0).n128_u64[0];
  if (*(_QWORD *)v5 == 2)
    goto LABEL_5;
  result = objc_msgSend(v1, "loadViewIfNeeded", v6);
  v8 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v8)
  {
    v9 = v8;
    sub_1001880A0();

LABEL_5:
    v10 = *(id *)DOCLog.UI.unsafeMutableAddressor(v3);
    v11 = static os_log_type_t.debug.getter(v10);
    v12 = sub_10006922C((uint64_t *)&unk_100644560);
    v13 = swift_allocObject(v12, 72, 7);
    *(_OWORD *)(v13 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v13 + 56) = v2;
    *(_QWORD *)(v13 + 64) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v13 + 32) = v1;
    v14 = v1;
    os_log(_:dso:log:type:_:)("Resigning first responder in item collection view controller %@", 63, 2, &_mh_execute_header, v10, v11, v13);

    swift_bridgeObjectRelease(v13);
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001880A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  _BYTE v18[24];

  v1 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v1);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for IndexPath(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState);
  v7 = v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v18, 33, 0);
  swift_retain();
  sub_10008BB40((uint64_t)v3, v7, (uint64_t *)&unk_100642710);
  swift_endAccess(v18);
  result = swift_release(v6);
  v10 = *(_QWORD *)(v0 + v5);
  if (*(_BYTE *)(v10 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) == 1)
  {
    v11 = v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate;
    result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate, v9);
    if (result)
    {
      v13 = result;
      v14 = *(_QWORD *)(v11 + 8);
      ObjectType = swift_getObjectType(result, v12);
      v16 = v10 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
      swift_beginAccess(v10 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v18, 0, 0);
      sub_1000271D4(v16, (uint64_t)v3, (uint64_t *)&unk_100642710);
      (*(void (**)(uint64_t, _UNKNOWN **, _BYTE *, uint64_t, uint64_t))(v14 + 16))(v0, &off_1005E7FD8, v3, ObjectType, v14);
      swift_unknownObjectRelease(v13);
      return sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_100642710);
    }
  }
  return result;
}

Swift::Bool __swiftcall DOCItemCollectionViewController.becomeFirstResponder()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  return objc_msgSendSuper2(&v2, "becomeFirstResponder");
}

void sub_1001882EC(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  char *v13;

  v2 = v1;
  if ((objc_msgSend(v2, "isFirstResponder") & 1) == 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(DOCUISession), "keyWindow");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "firstResponder");

      if (v6)
      {
        v7 = type metadata accessor for DOCItemCollectionViewController(0);
        v8 = (char *)swift_dynamicCastClass(v6, v7);
        if (v8)
          goto LABEL_7;

      }
    }
  }
  v8 = v2;
LABEL_7:
  v13 = v8;
  objc_msgSend(v8, "loadViewIfNeeded");
  v9 = *(void **)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(a1, "input");
    if (v11)
    {

      v12 = sub_10027D5E0();
      sub_10024B194(v12, ((unint64_t)objc_msgSend(a1, "modifierFlags") >> 18) & 2 | ((unint64_t)objc_msgSend(a1, "modifierFlags") >> 17) & 1);
    }

  }
  else
  {
    __break(1u);
  }
}

uint64_t DOCItemCollectionViewController.selectAll(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;

  v3 = result;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  if (!((unint64_t)v4 >> 62))
  {
    if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      return result;
    goto LABEL_3;
  }
  if (v4 < 0)
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  else
    v10 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8));
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  result = swift_bridgeObjectRelease(v4);
  if (v11 >= 1)
  {
LABEL_3:
    v5 = v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
    result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate, a2);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

void sub_100188564(uint64_t a1, char a2)
{
  char *v2;
  void *v3;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;

  v3 = v2;
  if (objc_msgSend(v2, "canPerformAction:withSender:", "selectAll:", 0))
  {
    v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate]);
    if (!Strong
      || (v7 = Strong,
          v8 = *((_QWORD *)v5 + 1),
          ObjectType = swift_getObjectType(Strong),
          LOBYTE(v8) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 40))(v3, ObjectType, v8),
          swift_unknownObjectRelease(v7),
          (v8 & 1) != 0))
    {
      if ((a2 & 1) != 0)
        objc_msgSend(v3, "setEditing:animated:", 1, 1);
      v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
      if ((*((_BYTE *)v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
      {
        *((_BYTE *)v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
        sub_1001834DC((char *)v3);
        *((_BYTE *)v3 + v10) = 0;
      }
    }
  }
}

void DOCItemCollectionViewController.copy(_:)(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t All;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  __int128 v42;
  __int128 v43;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return;
  v6 = Strong;
  v7 = *((_QWORD *)v4 + 1);
  ObjectType = swift_getObjectType(Strong);
  v9 = (void *)(*(uint64_t (**)(char *, const char *, uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, "copy:", a1, ObjectType, v7);
  if (!v9)
  {
LABEL_12:
    swift_unknownObjectRelease(v6);
    return;
  }
  v41 = v9;
  v10 = type metadata accessor for DOCItemCollectionViewController(0);
  v11 = swift_dynamicCastClass(v41, v10);
  if (!v11)
  {

    goto LABEL_12;
  }
  v12 = (void *)v11;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v12, v2) & 1) != 0)
  {
    v13 = (uint64_t)sub_100034068(0);
    v14 = v13;
    if ((unint64_t)v13 >> 62)
    {
      if (v13 >= 0)
        v13 &= 0xFFFFFFFFFFFFFF8uLL;
      v15 = _CocoaArrayWrapper.endIndex.getter(v13);
    }
    else
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v14);
    if (v15 < 1)
    {
      swift_unknownObjectRelease(v6);

      return;
    }
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierCopy);
    v18 = v17;
    v19 = sub_100034068(0);
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (!v20)
    {
      __break(1u);
      return;
    }
    v21 = v19;
    v22 = v20 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v22 + 16) & 1) != 0)
      v23 = *(_QWORD *)(*(_QWORD *)v22 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v23 = *(_QWORD *)(v22 + 8);
    swift_unknownObjectRetain(v23);
    v42 = 0u;
    v43 = 0u;
    v31 = (char *)DOCItemCollectionViewController.actionContext(from:)();
    sub_10000CB4C((uint64_t)&v42, &qword_100642730);
    v32 = sub_10006922C((uint64_t *)&unk_1006424B0);
    All = Array<A>.fpfs_syncFetchAllFPItems()(v21, v32);
    if (All)
    {
      v34 = All;
      v40 = v21;
      v35 = v18;
      v36 = v16;
      if (v23)
      {
        v37 = swift_getObjectType(v23);
        v38 = (void *)DOCNode.fpfs_syncFetchFPItem()(v37);
      }
      else
      {
        v38 = 0;
      }
      v39 = v36;
      v18 = v35;
      DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v39, v35, v34, v38, v31);
      swift_unknownObjectRelease(v23);

      swift_bridgeObjectRelease(v34);
      v21 = v40;
    }
    else
    {

      swift_unknownObjectRelease(v23);
    }
    swift_bridgeObjectRelease(v18);
    objc_msgSend(v2, "setEditing:animated:", 0, 1, swift_bridgeObjectRelease(v21).n128_f64[0]);
  }
  else
  {
    sub_1000271D4(a1, (uint64_t)&v42, &qword_100642730);
    v24 = *((_QWORD *)&v43 + 1);
    if (*((_QWORD *)&v43 + 1))
    {
      v25 = sub_10007E7A0(&v42, *((uint64_t *)&v43 + 1));
      v26 = *(_QWORD *)(v24 - 8);
      v27 = __chkstk_darwin(v25);
      v29 = (char *)&v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v26 + 16))(v29, v27);
      v30 = _bridgeAnythingToObjectiveC<A>(_:)(v29, v24);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v24);
      sub_100068588(&v42);
    }
    else
    {
      v30 = 0;
    }
    objc_msgSend(v12, "copy:", v30);
    swift_unknownObjectRelease(v30);
  }
  swift_unknownObjectRelease(v6);

}

uint64_t sub_1001889F8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, __n128))
{
  id v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v8);
    v9 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v10 = a1;
  }
  a4(v12, v9);

  return sub_10000CB4C((uint64_t)v12, &qword_100642730);
}

double DOCItemCollectionViewController.paste(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  void *v10;
  id v11;

  v3 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    v11 = (id)(*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))(v7 + 32))(v1, "paste:", a1, ObjectType, v7);
    if (v11)
    {
      v9 = type metadata accessor for DOCItemCollectionViewController(0);
      v10 = (void *)swift_dynamicCastClass(v11, v9);
      if (v10)
      {
        objc_msgSend(v10, "pasteboardPasteInCollectionView:", 0);
        swift_unknownObjectRelease(v6);

        return result;
      }

    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

double DOCItemCollectionViewController.delete(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  id v10;

  v3 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    v10 = (id)(*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))(v7 + 32))(v1, "delete:", a1, ObjectType, v7);
    if (v10)
    {
      v9 = type metadata accessor for DOCItemCollectionViewController(0);
      if (swift_dynamicCastClass(v10, v9))
      {
        sub_10018947C(1, 1);
        swift_unknownObjectRelease(v6);

        return result;
      }

    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_100188C58()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  void *v7;
  uint64_t v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v1)
  {
    __break(1u);
    return;
  }
  v2 = v0;
  v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
  {
    v4 = *(_QWORD *)(*(_QWORD *)v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v4);
  }
  else
  {
    v4 = *(_QWORD *)(v3 + 8);
    swift_unknownObjectRetain(v4);
    if (!v4)
      return;
  }
  ObjectType = swift_getObjectType(v4);
  v6 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  if (v6)
  {
    v7 = v6;
    v8 = sub_10035F99C(v6, v2, 1);

    if (v8 >= 1)
      objc_msgSend(v2, "pasteboardMoveToCollectionView:", 0);
  }
  swift_unknownObjectRelease(v4);
}

void sub_100188D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t ObjectType;
  uint64_t v6;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0
    && ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
     || !*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v1)
    {
      __break(1u);
      return;
    }
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    {
      v3 = *(_QWORD *)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v3);
    }
    else
    {
      v3 = *(_QWORD *)(v2 + 8);
      swift_unknownObjectRetain(v3);
      if (!v3)
        return;
    }
    v4 = _swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      v6 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v4 = (_QWORD *)_bridgeCocoaArray<A>(_:)(_swiftEmptyArrayStorage, v6);
    }
    ObjectType = swift_getObjectType(v3);
    sub_1001B488C(v3, (uint64_t)v4, v0, ObjectType);
    swift_unknownObjectRelease(v3);
    swift_bridgeObjectRelease(v4);
  }
}

uint64_t sub_100188E58(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t Available;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v4 = result;
  if ((a2 & 1) == 0
    || (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0
    && ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
     || !*(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)))
  {
    v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v5)
    {
      __break(1u);
      return result;
    }
    v6 = v5 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v6 + 16) & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)v6 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v7);
    }
    else
    {
      v7 = *(_QWORD *)(v6 + 8);
      result = swift_unknownObjectRetain(v7);
      if (!v7)
        return result;
    }
    if ((v4 & 1) != 0)
    {
      v8 = sub_100034068(0);
      v9 = sub_10006922C((uint64_t *)&unk_1006424B0);
      Available = Array<A>.fpfs_syncFetchAvailableFPItems()(v8, v9);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      Available = (uint64_t)_swiftEmptyArrayStorage;
    }
    if ((unint64_t)Available >> 62)
    {
      if (Available < 0)
        v15 = Available;
      else
        v15 = Available & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(Available);
      v16 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v13 = _bridgeCocoaArray<A>(_:)(v15, v16);
      swift_bridgeObjectRelease_n(Available, 2);
      Available = v13;
    }
    else
    {
      v11 = swift_bridgeObjectRetain(Available);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
      swift_bridgeObjectRelease(Available);
      v13 = Available;
    }
    ObjectType = swift_getObjectType(v7, v12);
    sub_1001B488C(v7, v13, v3, ObjectType);
    swift_unknownObjectRelease(v7);
    return swift_bridgeObjectRelease(Available);
  }
  return result;
}

void sub_100188FF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *Strong;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19[5];
  _QWORD *v20;
  char v21[24];
  char v22[40];

  if (a1)
  {
    v7 = a1;
    v8 = (void *)FPActionImportHere;
    v9 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v9, v22);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v7;
    v19[0] = inited;
    specialized Array._endMutation()(inited);
    v11 = v7;
    LOBYTE(v7) = sub_1003598CC(v8, v19[0]);
    swift_bridgeObjectRelease(v19[0]);
    if ((v7 & 1) != 0)
    {
      v12 = a2 + 16;
      v13 = swift_allocObject(&unk_1005CBE18, 24, 7);
      swift_beginAccess(v12, v21, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v12, v14);
      swift_unknownObjectWeakInit(v13 + 16, Strong);

      v16 = (_QWORD *)swift_allocObject(&unk_1005CC750, 40, 7);
      v16[2] = v13;
      v16[3] = a3;
      v16[4] = a4;
      v19[4] = (uint64_t)sub_1001CF024;
      v20 = v16;
      v19[0] = (uint64_t)_NSConcreteStackBlock;
      v19[1] = 1107296256;
      v19[2] = (uint64_t)sub_10004A82C;
      v19[3] = (uint64_t)&unk_1005CC768;
      v17 = _Block_copy(v19);
      v18 = v20;
      swift_bridgeObjectRetain(a4);
      swift_unknownObjectRetain(a3);
      swift_release(v18);
      DOCRunInMainThread(v17);
      _Block_release(v17);
    }

  }
}

uint64_t sub_100189184(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE v13[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    v8 = (void *)result;
    sub_100197E04();
    v9 = sub_100189408();
    v11 = v10;
    if (a3)
      v12 = a3;
    else
      v12 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(a3);
    sub_100189234(v9, v11, a2, (uint64_t)v12);
    swift_bridgeObjectRelease(v12);

    return swift_bridgeObjectRelease(v11);
  }
  return result;
}

uint64_t sub_100189234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  uint64_t v23;

  v5 = v4;
  v10 = sub_10006922C(&qword_1006438A0);
  v11 = __chkstk_darwin(v10);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload) == 1)
    sub_100027218(v11);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) = 1;
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v4);
  type metadata accessor for MainActor(0);
  swift_retain();
  swift_bridgeObjectRetain(a2);
  swift_unknownObjectRetain(a3);
  v16 = swift_bridgeObjectRetain(a4);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_1005CC7A0, 72, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v15;
  v18[5] = a1;
  v18[6] = a2;
  v18[7] = a3;
  v18[8] = a4;
  swift_release(v15);
  v19 = sub_100174E78((uint64_t)v13, (uint64_t)&unk_100646A98, (uint64_t)v18);
  swift_beginAccess(v5 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks, v22, 33, 0);
  swift_retain();
  sub_100087A88(&v23, v19);
  v20 = v23;
  swift_endAccess(v22);
  swift_release(v19);
  return swift_release(v20);
}

uint64_t sub_100189408()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName + 8);
  if (v2)
  {
    v3 = *v1;
  }
  else
  {
    v4 = (uint64_t *)DOCCreateFolderOperation.untitledFolderName.unsafeMutableAddressor();
    v3 = *v4;
    v5 = v4[1];
    v6 = v1[1];
    *v1 = *v4;
    v1[1] = v5;
    swift_bridgeObjectRetain_n(v5, 2);
    swift_bridgeObjectRelease(v6);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

void sub_10018947C(char a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  void *v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t All;
  double v43;
  __int128 v44;
  __int128 v45;

  v3 = v2;
  v6 = (uint64_t)sub_100034068(0);
  v7 = v6;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 >= 0)
      v6 &= 0xFFFFFFFFFFFFFF8uLL;
    v8 = _CocoaArrayWrapper.endIndex.getter(v6);
  }
  else
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v7);
  if (v8 >= 1)
  {
    v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
       + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type;
    if (*(_BYTE *)(v9 + 8) == 1)
    {
      v10 = *(void **)v9;
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierTrashedItems);
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      if (v11 == v14 && v13 == v15)
      {
        v35 = v10;
        swift_bridgeObjectRelease_n(v13, 2);

      }
      else
      {
        v17 = v15;
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
        v19 = v10;
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v17);

        if ((v18 & 1) == 0)
          goto LABEL_10;
      }
      v36 = &UIDocumentBrowserActionIdentifierUntrash;
      if ((a2 & 1) == 0)
        v36 = &UIDocumentBrowserActionIdentifierDelete;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v36);
      v23 = v37;
      v38 = sub_100034068(0);
      v39 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (v39)
      {
        v26 = v38;
        v40 = v39 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
        if ((*(_BYTE *)(v40 + 16) & 1) != 0)
          v28 = *(_QWORD *)(*(_QWORD *)v40 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
        else
          v28 = *(_QWORD *)(v40 + 8);
        swift_unknownObjectRetain(v28);
        v44 = 0u;
        v45 = 0u;
        v29 = DOCItemCollectionViewController.actionContext(from:)();
        sub_10000CB4C((uint64_t)&v44, &qword_100642730);
        v41 = sub_10006922C((uint64_t *)&unk_1006424B0);
        All = Array<A>.fpfs_syncFetchAllFPItems()(v26, v41);
        if (All)
        {
          v32 = All;
          if (v28)
            goto LABEL_18;
          goto LABEL_28;
        }
LABEL_30:

        swift_unknownObjectRelease(v28);
        goto LABEL_31;
      }
LABEL_37:
      __break(1u);
      return;
    }
LABEL_10:
    v20 = &UIDocumentBrowserActionIdentifierMixedDelete;
    if ((a1 & 1) == 0)
      v20 = &UIDocumentBrowserActionIdentifierDelete;
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v20);
    v23 = v22;
    v24 = sub_100034068(0);
    v25 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v25)
    {
      v26 = v24;
      v27 = v25 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v27 + 16) & 1) != 0)
        v28 = *(_QWORD *)(*(_QWORD *)v27 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      else
        v28 = *(_QWORD *)(v27 + 8);
      swift_unknownObjectRetain(v28);
      v44 = 0u;
      v45 = 0u;
      v29 = DOCItemCollectionViewController.actionContext(from:)();
      sub_10000CB4C((uint64_t)&v44, &qword_100642730);
      v30 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v31 = Array<A>.fpfs_syncFetchAllFPItems()(v26, v30);
      if (v31)
      {
        v32 = v31;
        if (v28)
        {
LABEL_18:
          ObjectType = swift_getObjectType(v28);
          v34 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
LABEL_29:
          DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v21, v23, v32, v34, (char *)v29);
          swift_unknownObjectRelease(v28);

          swift_bridgeObjectRelease(v32);
LABEL_31:
          swift_bridgeObjectRelease(v23);
          *(_QWORD *)&v43 = swift_bridgeObjectRelease(v26).n128_u64[0];
          objc_msgSend(v3, "setEditing:animated:", 0, 1, v43, v44, v45);
          return;
        }
LABEL_28:
        v34 = 0;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    __break(1u);
    goto LABEL_37;
  }
}

uint64_t sub_10018981C(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  v2 = v1;
  v3 = objc_msgSend(a1, "userInfo");
  if (!v3)
  {
    v12 = 0u;
    v13 = 0u;
    return sub_10000CB4C((uint64_t)&v12, &qword_100642730);
  }
  v4 = v3;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v10[0] = 0x6C6C6F7263537369;
  v10[1] = 0xEF64656C62616E45;
  AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_100067654((uint64_t)v11), (v7 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  swift_bridgeObjectRelease(v5);
  sub_100067748((uint64_t)v11);
  if (!*((_QWORD *)&v13 + 1))
    return sub_10000CB4C((uint64_t)&v12, &qword_100642730);
  result = swift_dynamicCast(v11, &v12, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((result & 1) != 0)
  {
    v9 = v11[0];
    v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled] = v11[0];
    objc_msgSend(v2, "loadViewIfNeeded");
    result = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (result)
      return (uint64_t)objc_msgSend((id)result, "setScrollEnabled:", v9);
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_1001899E8(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  double v10;
  double v11;
  _WORD v12[8];
  _QWORD v13[5];
  __int128 v14;
  __int128 v15;

  v2 = v1;
  v3 = objc_msgSend(a1, "userInfo");
  if (!v3)
  {
    v14 = 0u;
    v15 = 0u;
    return sub_10000CB4C((uint64_t)&v14, &qword_100642730);
  }
  v4 = v3;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  strcpy((char *)v12, "contentOffset");
  v12[7] = -4864;
  AnyHashable.init<A>(_:)(v12, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_100067654((uint64_t)v13), (v7 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease(v5);
  sub_100067748((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
    return sub_10000CB4C((uint64_t)&v14, &qword_100642730);
  type metadata accessor for CGPoint(0);
  result = swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, v8, 6);
  if ((result & 1) != 0)
  {
    v10 = *(double *)v13;
    v11 = *(double *)&v13[1];
    objc_msgSend(v2, "loadViewIfNeeded");
    result = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (result)
      return (uint64_t)objc_msgSend((id)result, "setContentOffset:", v10, v11);
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_100189BB8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  int v15;
  double v16;
  uint64_t v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v29 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v29 - v11;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView) & 1) == 0)
    sub_100194D70();
  v13 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (v13)
  {
    v14 = objc_msgSend(v13, "identifier");
    v15 = DOCProviderDomainIDIsRemovable();

    if (v15)
      v16 = 0.7;
    else
      v16 = 1.5;
  }
  else
  {
    v16 = 1.5;
  }
  v17 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter(v17);
  static DispatchTime.now()(v18);
  + infix(_:_:)(v10, v16);
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  v20 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  aBlock[4] = sub_1001D147C;
  v34 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CE928;
  v21 = _Block_copy(aBlock);
  v22 = swift_release(v34);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10006922C((uint64_t *)&unk_100647540);
  v25 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = v24;
  v27 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v25, v29, v23);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v5, v2, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v2, v27);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v6);
}

void sub_100189EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  double v16;
  void *v17;
  _BYTE v18[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView) & 1) == 0)
    {
      v5 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
      if (!v5)
      {
        __break(1u);
        return;
      }
      if (objc_msgSend(v5, "isGathering"))
      {
        sub_100194D68();
      }
      else
      {
        v6 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier");
        v7 = DOCDocumentSourceIdentifierSearch;
        v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        if (v8 == v11 && v10 == v12)
        {

          swift_bridgeObjectRelease_n(v10, 2);
        }
        else
        {
          v14 = v12;
          v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);

          swift_bridgeObjectRelease(v10);
          *(_QWORD *)&v16 = swift_bridgeObjectRelease(v14).n128_u64[0];
          if ((v15 & 1) == 0)
          {
            v17 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView];
            if (v17)
              objc_msgSend(v17, "setHidden:", 1, v16);
          }
        }
      }
    }

  }
}

uint64_t sub_10018A030(char *a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  _BYTE v9[24];
  _BYTE v10[48];
  _BYTE v11[24];
  _BYTE v12[40];

  v4 = (uint64_t)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext], v11, 0, 0);
  sub_1000271D4(v4, (uint64_t)v12, &qword_100646B40);
  v5 = (char *)sub_10001B43C();
  v6 = (uint64_t)&v5[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  swift_beginAccess(&v5[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout], v9, 0, 0);
  sub_10008F04C(v6, (uint64_t)v10);

  if (sub_1001FFF18((uint64_t)v12))
  {
    v7 = objc_msgSend(a1, "traitCollection");
    sub_10005897C(v7, 0, 0, 1, a2 & 1);

  }
  sub_10000CB4C((uint64_t)v12, &qword_100646B40);
  return sub_1000423BC((uint64_t)v10);
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v8, "viewIsAppearing:", a1);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 1;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 1;
  objc_msgSend(v1, "loadViewIfNeeded");
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    v4 = objc_msgSend(v3, "indexPathsForVisibleItems");
    v5 = type metadata accessor for IndexPath(0);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    v7 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRelease(v6);
    if (v7)
      sub_10018C44C(0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *Strong;
  void *v20;
  objc_super v21;

  v2 = v1;
  v21.receiver = v2;
  v21.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v21, "viewWillDisappear:", a1);
  v4 = (void *)objc_opt_self(NSNotificationCenter);
  v5 = objc_msgSend(v4, "defaultCenter");
  v6 = (void *)objc_opt_self(DOCDeprecatedUIMenuController);
  v7 = objc_msgSend(v6, "willShowMenuNotification");
  objc_msgSend(v5, "removeObserver:name:object:", v2, v7, 0);

  v8 = objc_msgSend(v4, "defaultCenter");
  v9 = objc_msgSend(v6, "willHideMenuNotification");
  objc_msgSend(v8, "removeObserver:name:object:", v2, v9, 0);

  sub_1003DF014();
  objc_msgSend(v2, "resignFirstResponder");
  v10 = objc_msgSend((id)objc_opt_self(DOCKeyboardFocusManager), "sharedManager");
  objc_msgSend(v10, "unregisterKeyboardFocusable:", v2);

  v11 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  objc_msgSend(v11, "cleanAppContainerBundleIDCache");

  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer], "invalidate");
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_repositionRenamingCellTimer], "invalidate");
  v12 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename + 8];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  swift_bridgeObjectRelease(v13);
  v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView;
  v15 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView];
  if (v15)
  {
    v16 = v15;
    sub_1003613BC();

    v17 = *(_QWORD *)&v2[v14];
    if (v17)
    {
      v18 = v17 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate;
      *(_QWORD *)(v18 + 8) = 0;
      swift_unknownObjectWeakAssign(v18, 0);
    }
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_presentedCollaborationViewController]);
  if (Strong)
  {
    v20 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  void *Strong;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v13, "viewDidDisappear:", a1);
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = 0;
  sub_1003619FC();
  v4 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    v5 = v4;
    sub_1001880A0();

  }
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing]);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "parentViewController");
    if (v8)
    {
      v9 = v8;
      v10 = type metadata accessor for DOCColumnViewController(0);
      v11 = swift_dynamicCastClass(v9, v10);
      swift_unknownObjectRelease(v7);

      if (v11)
        goto LABEL_9;
    }
    else
    {
      swift_unknownObjectRelease(v7);
    }
    sub_10018056C();
  }
LABEL_9:
  if (qword_100641228 != -1)
    swift_once(&qword_100641228, sub_1004B9C08);
  v12 = qword_100672F18;
  swift_retain();
  sub_1001B4944(v2, v12, (SEL *)&selRef_removeObject_, "Unregistering FilesIntentsViewAnnotationDelegate: %s");
  swift_release(v12);
}

uint64_t sub_10018A694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  void *v19;
  Swift::String v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  v4._countAndFlagsBits = 0x7473657571657228;
  v4._object = (void *)0xEC000000203A4449;
  String.append(_:)(v4);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_10005A360(&qword_100646B30, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._object = (void *)0x8000000100515FC0;
  v9._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v9);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler))
    v10 = 1702195828;
  else
    v10 = 0x65736C6166;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler))
    v11 = 0xE400000000000000;
  else
    v11 = 0xE500000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 0x203A6C7275203BLL;
  v13._object = (void *)0xE700000000000000;
  String.append(_:)(v13);
  sub_1000271D4(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, (uint64_t)v3, &qword_100643470);
  v14._countAndFlagsBits = String.init<A>(describing:)(v3, v1);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0x203A65646F6E203BLL;
  v16._object = (void *)0xE800000000000000;
  String.append(_:)(v16);
  v23 = *(_QWORD *)(v0 + 16);
  swift_unknownObjectRetain(v23);
  v17 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v18._countAndFlagsBits = String.init<A>(describing:)(&v23, v17);
  v19 = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v19);
  v20._countAndFlagsBits = 41;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  return v24;
}

uint64_t sub_10018A8A0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_unknownObjectRelease(v0[2]);
  sub_10000CB4C((uint64_t)v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, &qword_100643470);
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler
                          + 8));
  v1 = (char *)v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10018A924()
{
  return sub_10018A694();
}

uint64_t sub_10018A944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void (*v58)(char *, uint64_t);
  __n128 v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];
  uint64_t v71;
  uint64_t v72;
  char v73[24];
  char v74[32];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v62 - v9;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v62 - v16;
  a1 += 16;
  swift_beginAccess(a1, v74, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1, v18);
  if (result)
  {
    v20 = (char *)result;
    v64 = v8;
    v65 = v12;
    v68 = v5;
    v69 = v4;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v21(v17, a2 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID, v11);
    v66 = v20;
    v22 = (uint64_t *)&v20[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts];
    v23 = swift_beginAccess(&v20[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts], v73, 0, 0);
    v24 = *v22;
    __chkstk_darwin(v23);
    *(&v62 - 2) = (uint64_t)v17;
    swift_bridgeObjectRetain(v24);
    v25 = sub_100175218(sub_1001D0550, (uint64_t)(&v62 - 4), v24);
    LOBYTE(v20) = v26;
    result = swift_bridgeObjectRelease(v24);
    v67 = v17;
    if ((v20 & 1) == 0)
    {
      v27 = v11;
      v28 = *v22;
      if ((*v22 & 0xC000000000000001) == 0)
      {
        if ((v25 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v25 < *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v29 = *(_QWORD *)(v28 + 8 * v25 + 32);
          swift_retain();
LABEL_7:
          swift_beginAccess(v22, v70, 33, 0);
          v30 = sub_10008853C(v25, sub_1000818A0);
          swift_endAccess(v70);
          v31 = swift_release(v30);
          v32 = Logger.UI.unsafeMutableAddressor(v31);
          v34 = v68;
          v33 = v69;
          v35 = v64;
          (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v64, v32, v69);
          v36 = swift_retain_n(v29, 2);
          v37 = Logger.logObject.getter(v36);
          v38 = static os_log_type_t.default.getter(v37);
          if (os_log_type_enabled(v37, v38))
          {
            v39 = swift_slowAlloc(22, -1);
            v63 = swift_slowAlloc(64, -1);
            v70[0] = v63;
            *(_DWORD *)v39 = 136315394;
            v71 = sub_1000544FC(0xD00000000000002BLL, 0x8000000100515F90, v70);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72);
            *(_WORD *)(v39 + 12) = 2080;
            v62 = v39 + 14;
            swift_retain();
            v40 = sub_10018A694();
            v42 = v41;
            swift_release(v29);
            v71 = sub_1000544FC(v40, v42, v70);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72);
            swift_release_n(v29, 2, v43);
            swift_bridgeObjectRelease(v42);
            _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s - TIMEOUT calling resolvedItemHandler with 'nil' item for pending node context: %s", (uint8_t *)v39, 0x16u);
            v44 = v63;
            swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v44, -1, -1);
            swift_slowDealloc(v39, -1, -1);

            (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v69);
          }
          else
          {

            swift_release_n(v29, 2, v59);
            (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
          }
          v60 = v67;
          v61 = v65;
          if ((*(_BYTE *)(v29
                         + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) & 1) == 0)
          {
            *(_BYTE *)(v29
                     + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 1;
            (*(void (**)(_QWORD))(v29
                                           + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler))(0);
          }

          swift_release(v29);
          return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v60, v27);
        }
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain(*v22);
      v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v28);
      swift_bridgeObjectRelease(v28);
      goto LABEL_7;
    }
    v45 = Logger.UI.unsafeMutableAddressor(result);
    v47 = v68;
    v46 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v10, v45, v69);
    v48 = ((uint64_t (*)(char *, char *, uint64_t))v21)(v15, v17, v11);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter(v49);
    v51 = v11;
    if (os_log_type_enabled(v49, v50))
    {
      v52 = swift_slowAlloc(22, -1);
      v53 = swift_slowAlloc(64, -1);
      v70[0] = v53;
      *(_DWORD *)v52 = 136315394;
      v71 = sub_1000544FC(0xD00000000000002BLL, 0x8000000100515F90, v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72);
      *(_WORD *)(v52 + 12) = 2080;
      v54 = sub_10005A360(&qword_100646B30, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v55 = dispatch thunk of CustomStringConvertible.description.getter(v51, v54);
      v57 = v56;
      v71 = sub_1000544FC(v55, v56, v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72);
      swift_bridgeObjectRelease(v57);
      v58 = *(void (**)(char *, uint64_t))(v65 + 8);
      v58(v15, v51);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s - TIMEOUT did not find pendingNodeContext for requestID: %s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v10, v69);
    }
    else
    {
      v58 = *(void (**)(char *, uint64_t))(v65 + 8);
      v58(v15, v11);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v46);
    }
    return ((uint64_t (*)(char *, uint64_t))v58)(v67, v51);
  }
  else if ((*(_BYTE *)(a2
                      + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) & 1) == 0)
  {
    *(_BYTE *)(a2 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 1;
    return (*(uint64_t (**)(_QWORD))(a2
                                             + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler))(0);
  }
  return result;
}

uint64_t sub_10018AFF0()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  _WORD *v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, _QWORD *);
  uint64_t *v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  _WORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t i;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t (*v51)(char *, _QWORD *);
  id v52;
  uint64_t v54;
  char *v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  id v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74[3];

  v1 = (_QWORD *)type metadata accessor for Logger(0);
  v2 = *(v1 - 1);
  v3 = __chkstk_darwin(v1);
  v68 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v67 - v6;
  v8 = __chkstk_darwin(v5);
  v70 = (char *)&v67 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (uint64_t)&v67 - v11;
  v13 = Logger.UI.unsafeMutableAddressor(v10);
  v14 = *(void (**)(uint64_t))(v2 + 16);
  v71 = v13;
  v14(v12);
  v15 = v0;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  v18 = os_log_type_enabled(v16, v17);
  v69 = v7;
  if (v18)
  {
    v19 = swift_slowAlloc(22, -1);
    v67 = v1;
    v20 = v19;
    v21 = swift_slowAlloc(64, -1);
    v74[0] = v21;
    *(_DWORD *)v20 = 136315394;
    v73 = (id)sub_1000544FC(0xD00000000000001CLL, 0x8000000100516480, v74);
    *(_QWORD *)&v22 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74).n128_u64[0];
    *(_WORD *)(v20 + 12) = 2080;
    v73 = objc_msgSend(*(id *)((char *)v15 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier", v22);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v24 = String.init<A>(describing:)(&v73, v23);
    v25 = v14;
    v27 = v26;
    v73 = (id)sub_1000544FC(v24, v26, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);

    v28 = v27;
    v14 = v25;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s - BEGIN source: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    v29 = v20;
    v1 = v67;
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

  }
  v30 = *(uint64_t (**)(char *, _QWORD *))(v2 + 8);
  v30((char *)v12, v1);
  v31 = (uint64_t *)((char *)v15 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts);
  v32 = swift_beginAccess((char *)v15 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts, v74, 0, 0);
  v33 = *v31;
  v34 = v70;
  if (!((unint64_t)*v31 >> 62))
  {
    if (*(uint64_t *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_6;
LABEL_23:
    v46 = v68;
    v47 = ((uint64_t (*)(char *, uint64_t, _QWORD *, __n128))v14)(v68, v71, v1, v32);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = v30;
      v52 = (id)swift_slowAlloc(32, -1);
      v73 = v52;
      *(_DWORD *)v50 = 136315138;
      v72 = (id)sub_1000544FC(0xD00000000000001CLL, 0x8000000100516480, (uint64_t *)&v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s - pendingNodeContexts == 0, returning ", v50, 0xCu);
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v50, -1, -1);

      return v51(v46, v1);
    }
    else
    {

      return v30(v46, v1);
    }
  }
  if (v33 < 0)
    v44 = *v31;
  else
    v44 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v31);
  v45 = _CocoaArrayWrapper.endIndex.getter(v44);
  v32 = swift_bridgeObjectRelease(v33);
  if (v45 < 1)
    goto LABEL_23;
LABEL_6:
  v68 = (char *)v14;
  ((void (*)(char *, uint64_t, _QWORD *, __n128))v14)(v34, v71, v1, v32);
  v35 = v15;
  v36 = Logger.logObject.getter(v35);
  LOBYTE(v37) = static os_log_type_t.default.getter(v36);
  if (!os_log_type_enabled((os_log_t)v36, (os_log_type_t)v37))
  {

    v39 = v34;
    v40 = v1;
    goto LABEL_11;
  }
  v34 = (char *)v1;
  v15 = (_WORD *)swift_slowAlloc(22, -1);
  v1 = (_QWORD *)swift_slowAlloc(32, -1);
  v73 = v1;
  *(_DWORD *)v15 = 136315394;
  v72 = (id)sub_1000544FC(0xD00000000000001CLL, 0x8000000100516480, (uint64_t *)&v73);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
  v15[6] = 2048;
  v12 = *v31;
  if ((unint64_t)*v31 >> 62)
    goto LABEL_36;
  v38 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v72 = (id)v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v36, (os_log_type_t)v37, "%s - pendingNodeContexts == %ld, keep going", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v1, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v1, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v39 = v70;
    v1 = v34;
    v40 = v34;
LABEL_11:
    v30(v39, v40);
    v36 = *v31;
    v41 = (unint64_t)*v31 >> 62;
    v67 = v30;
    if (v41)
    {
      if (v36 < 0)
        v54 = v36;
      else
        v54 = v36 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v36, 2);
      v37 = _CocoaArrayWrapper.endIndex.getter(v54);
      if (!v37)
        goto LABEL_30;
    }
    else
    {
      v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v36, 2);
      if (!v37)
        goto LABEL_30;
    }
    if (v37 >= 1)
      break;
    __break(1u);
LABEL_36:
    if (v12 < 0)
      v66 = v12;
    else
      v66 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v38 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(v12);
  }
  for (i = 0; i != v37; ++i)
  {
    if ((v36 & 0xC000000000000001) != 0)
    {
      v43 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v36);
    }
    else
    {
      v43 = *(_QWORD *)(v36 + 8 * i + 32);
      swift_retain();
    }
    sub_10018B844(v43, (unint64_t)v35);
    swift_release(v43);
  }
LABEL_30:
  swift_bridgeObjectRelease_n(v36, 2);
  v55 = v69;
  ((void (*)(char *, uint64_t, _QWORD *))v68)(v69, v71, v1);
  v56 = v35;
  v57 = Logger.logObject.getter(v56);
  v58 = static os_log_type_t.default.getter(v57);
  if (os_log_type_enabled(v57, v58))
  {
    v59 = swift_slowAlloc(22, -1);
    v60 = (id)swift_slowAlloc(64, -1);
    v73 = v60;
    *(_DWORD *)v59 = 136315394;
    v72 = (id)sub_1000544FC(0xD00000000000001CLL, 0x8000000100516480, (uint64_t *)&v73);
    *(_QWORD *)&v61 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73).n128_u64[0];
    *(_WORD *)(v59 + 12) = 2080;
    v72 = objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier", v61);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v63 = String.init<A>(describing:)(&v72, v62);
    v65 = v64;
    v72 = (id)sub_1000544FC(v63, v64, (uint64_t *)&v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);

    swift_bridgeObjectRelease(v65);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s - END source: %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v59, -1, -1);

  }
  else
  {

  }
  return ((uint64_t (*)(char *, _QWORD *))v67)(v55, v1);
}

uint64_t sub_10018B844(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __n128 v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  char *v77;
  void (*v78)(char *);
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint8_t *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint8_t *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  void (*v111)(uint64_t);
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  unint64_t v120;
  void (*v121)(char *);
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  _BYTE v125[16];
  uint64_t v126;
  uint64_t v127;
  uint64_t v128[4];

  v120 = a2;
  v3 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v3);
  v5 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v115 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v113 - v11;
  v13 = __chkstk_darwin(v10);
  v114 = (char *)&v113 - v14;
  v15 = __chkstk_darwin(v13);
  v116 = (char *)&v113 - v16;
  v17 = __chkstk_darwin(v15);
  v118 = (char *)&v113 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v113 - v20;
  v22 = Logger.UI.unsafeMutableAddressor(v19);
  v23 = *(void (**)(char *))(v7 + 16);
  v123 = (void (*)(char *, uint64_t))v22;
  v23(v21);
  v24 = swift_retain_n(a1, 4);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  v27 = os_log_type_enabled(v25, v26);
  v28 = (_QWORD *)&unk_100672000;
  v121 = v23;
  v122 = a1;
  v119 = v12;
  if (v27)
  {
    v117 = v6;
    v29 = swift_slowAlloc(32, -1);
    v113 = swift_slowAlloc(96, -1);
    v128[0] = v113;
    *(_DWORD *)v29 = 136315650;
    v124 = sub_1000544FC(0xD00000000000001DLL, 0x80000001005164A0, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
    *(_WORD *)(v29 + 12) = 2080;
    ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 16), v30);
    v32 = DOCNode.nodeDescription.getter(ObjectType);
    v34 = v33;
    v124 = sub_1000544FC(v32, v33, v128);
    v35 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
    swift_release_n(a1, 2, v35);
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v29 + 22) = 2080;
    sub_1000271D4(a1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, (uint64_t)v5, &qword_100643470);
    v36 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v5, 1, v36) == 1)
    {
      sub_10000CB4C((uint64_t)v5, &qword_100643470);
      v38 = 0xE300000000000000;
      v39 = 4271950;
    }
    else
    {
      v39 = URL.absoluteString.getter();
      v38 = v44;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v36);
    }
    a1 = v122;
    v45 = v113;
    v124 = sub_1000544FC(v39, v38, v128);
    v46 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
    swift_release_n(a1, 2, v46);
    swift_bridgeObjectRelease(v38);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s - Resolving context for : node %s - URL: %s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy(v45, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v29, -1, -1);

    v41 = *(void (**)(char *, uint64_t))(v7 + 8);
    v6 = v117;
    v41(v21, v117);
    v43 = v120;
    v23 = v121;
    v28 = &unk_100672000;
  }
  else
  {

    swift_release_n(a1, 4, v40);
    v41 = *(void (**)(char *, uint64_t))(v7 + 8);
    v41(v21, v6);
    v43 = v120;
  }
  v47 = *(_QWORD *)(a1 + 16);
  v48 = a1 + v28[296];
  swift_getObjectType(v47, v42);
  v49 = sub_1001B40D4(v47, v48, v43);
  if (v49)
  {
    v50 = (void *)v49;
    v51 = v118;
    ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v23)(v118, v123, v6);
    v52 = swift_unknownObjectRetain_n(v50, 3);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc(22, -1);
      v56 = swift_slowAlloc(64, -1);
      v128[0] = v56;
      *(_DWORD *)v55 = 136315394;
      v124 = sub_1000544FC(0xD00000000000001DLL, 0x80000001005164A0, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
      *(_WORD *)(v55 + 12) = 2080;
      v58 = swift_getObjectType(v50, v57);
      v59 = DOCNode.nodeDescription.getter(v58);
      v61 = v60;
      v124 = sub_1000544FC(v59, v60, v128);
      v43 = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
      swift_unknownObjectRelease_n(v50, 2);
      swift_bridgeObjectRelease(v61);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "%s - Found matching node: %s", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v55, -1, -1);

      v62 = v118;
    }
    else
    {

      swift_unknownObjectRelease_n(v50, 2);
      v62 = v51;
    }
    v41(v62, v6);
    v70 = (uint64_t *)(v43 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts);
    swift_beginAccess(v43 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts, v128, 0, 0);
    v71 = *v70;
    v72 = v122;
    swift_retain();
    v73 = swift_bridgeObjectRetain(v71);
    v74 = sub_1001BE304(v73, v72);
    v76 = v75;
    swift_bridgeObjectRelease(v71);
    swift_release(v72);
    if ((v76 & 1) != 0)
    {
      v87 = v114;
      v78 = v121;
      v88 = ((uint64_t (*)(char *, void (*)(char *, uint64_t), uint64_t))v121)(v114, v123, v6);
      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.default.getter(v89);
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc(12, -1);
        v92 = swift_slowAlloc(32, -1);
        v124 = v92;
        *(_DWORD *)v91 = 136315138;
        v126 = sub_1000544FC(0xD00000000000001DLL, 0x80000001005164A0, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, &v127);
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "%s - Not Removing pending node context (context is gone already)", v91, 0xCu);
        swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v92, -1, -1);
        v93 = v91;
        v78 = v121;
        swift_slowDealloc(v93, -1, -1);
      }

      v41(v87, v6);
    }
    else
    {
      v77 = v116;
      v78 = v121;
      v79 = ((uint64_t (*)(char *, void (*)(char *, uint64_t), uint64_t))v121)(v116, v123, v6);
      v80 = Logger.logObject.getter(v79);
      v81 = static os_log_type_t.default.getter(v80);
      if (os_log_type_enabled(v80, v81))
      {
        v82 = swift_slowAlloc(12, -1);
        v120 = v74;
        v83 = (uint8_t *)v82;
        v84 = swift_slowAlloc(32, -1);
        v124 = v84;
        *(_DWORD *)v83 = 136315138;
        v126 = sub_1000544FC(0xD00000000000001DLL, 0x80000001005164A0, &v124);
        v78 = v121;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, &v127);
        _os_log_impl((void *)&_mh_execute_header, v80, v81, "%s - Removing pending node context", v83, 0xCu);
        swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v84, -1, -1);
        v85 = v83;
        v74 = v120;
        swift_slowDealloc(v85, -1, -1);

        v86 = v116;
      }
      else
      {

        v86 = v77;
      }
      v41(v86, v6);
      swift_beginAccess(v70, &v124, 33, 0);
      v94 = sub_10008853C(v74, sub_1000818A0);
      swift_endAccess(&v124);
      swift_release(v94);
    }
    v95 = v119;
    ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v78)(v119, v123, v6);
    v96 = swift_unknownObjectRetain_n(v50, 2);
    v97 = Logger.logObject.getter(v96);
    v98 = static os_log_type_t.default.getter(v97);
    if (os_log_type_enabled(v97, v98))
    {
      v99 = swift_slowAlloc(22, -1);
      v100 = swift_slowAlloc(64, -1);
      v124 = v100;
      *(_DWORD *)v99 = 136315394;
      v126 = sub_1000544FC(0xD00000000000001DLL, 0x80000001005164A0, &v124);
      *(_QWORD *)&v101 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, &v127).n128_u64[0];
      *(_WORD *)(v99 + 12) = 2080;
      v102 = objc_msgSend(v50, "displayName", v101);
      v123 = v41;
      v103 = v102;
      v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
      v117 = v6;
      v105 = v104;
      v107 = v106;

      v126 = sub_1000544FC(v105, v107, &v124);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, &v127);
      swift_unknownObjectRelease_n(v50, 2);
      swift_bridgeObjectRelease(v107);
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "%s - Calling resolved block for node %s", (uint8_t *)v99, 0x16u);
      swift_arrayDestroy(v100, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v100, -1, -1);
      swift_slowDealloc(v99, -1, -1);

      v123(v119, v117);
    }
    else
    {

      swift_unknownObjectRelease_n(v50, 2);
      v41(v95, v6);
    }
    v108 = v122;
    if (*(_BYTE *)(v122 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) == 1)
    {
      v109 = v50;
      v110 = 2;
    }
    else
    {
      *(_BYTE *)(v122 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 1;
      v111 = *(void (**)(uint64_t))(v108
                                            + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler);
      v112 = swift_unknownObjectRetain(v50);
      v111(v112);
      v109 = v50;
      v110 = 3;
    }
    return swift_unknownObjectRelease_n(v109, v110);
  }
  else
  {
    v63 = v115;
    v64 = ((uint64_t (*)(char *, void (*)(char *, uint64_t), uint64_t))v23)(v115, v123, v6);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.error.getter(v65);
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc(12, -1);
      v68 = swift_slowAlloc(32, -1);
      v128[0] = v68;
      *(_DWORD *)v67 = 136315138;
      v124 = sub_1000544FC(0xD00000000000001DLL, 0x80000001005164A0, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "%s - Could Not Find existing node", v67, 0xCu);
      swift_arrayDestroy(v68, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v68, -1, -1);
      swift_slowDealloc(v67, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v41)(v63, v6);
  }
}

uint64_t sub_10018C44C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed) & 1) == 0
    && (result & 1) == 0)
  {
    return result;
  }
  v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal);
    else
      v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal));
    v15 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v3);
    if (v15 >= 1)
    {
LABEL_5:
      v4 = *(_QWORD *)(v1 + v2);
      v5 = swift_bridgeObjectRetain(v4);
      v6 = sub_10018D330(v5, 0, 0);
      swift_bridgeObjectRelease(v4);
      if ((v6 & 1) != 0)
      {
        v7 = *(_QWORD *)(v1 + v2);
        *(_QWORD *)(v1 + v2) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v7);
      }
    }
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
    goto LABEL_5;
  }
  result = sub_10018C57C();
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll);
  if (v9)
  {
    v10 = v8[1] & 1;
    v11 = (void *)swift_unknownObjectRetain(*(_QWORD *)(v1
                                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll));
    if ((sub_10018EBD8(v11, v10, 0) & 1) != 0)
    {
      v12 = *v8;
      *v8 = 0;
      *((_BYTE *)v8 + 8) = 0;
      swift_unknownObjectRelease(v9);
      v13 = v12;
    }
    else
    {
      v13 = v9;
    }
    return swift_unknownObjectRelease(v13);
  }
  return result;
}

uint64_t sub_10018C57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v1 = sub_10006922C(&qword_100646B48);
  v2 = __chkstk_darwin(v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v13[-v5];
  v7 = type metadata accessor for ScrollPositionInfo(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo, v14, 0, 0);
  sub_1000271D4(v11, (uint64_t)v6, &qword_100646B48);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_10000CB4C((uint64_t)v6, &qword_100646B48);
  sub_1001D0788((uint64_t)v6, (uint64_t)v10, type metadata accessor for ScrollPositionInfo);
  if ((sub_10018C740((uint64_t)v10, 0) & 1) != 0)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
    swift_beginAccess(v11, v13, 33, 0);
    sub_10008BB40((uint64_t)v4, v11, &qword_100646B48);
    swift_endAccess(v13);
  }
  return sub_10007C720((uint64_t)v10, type metadata accessor for ScrollPositionInfo);
}

id sub_10018C740(uint64_t a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void **v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v30;
  void *v31;
  char v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  id result;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void *v45;
  char v46;
  uint64_t v47;
  void *v48;
  char v49;
  char v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char **v58;
  double v59;
  void *v60;
  Class isa;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  int v65;
  _BYTE *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  id v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  char *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  CGRect v106;

  v3 = v2;
  v6 = sub_10006922C(&qword_100646B48);
  __chkstk_darwin(v6);
  v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_100646BD0);
  __chkstk_darwin(v9);
  v11 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v12);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v104 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  __chkstk_darwin(v103);
  v19 = (void **)((char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007C6DC(a1, (uint64_t)v19, v20);
  v21 = type metadata accessor for ScrollPositionInfo(0);
  v22 = v21;
  v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = *(_BYTE *)(a1 + *(int *)(v21 + 20));
  if (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] != 1)
    goto LABEL_5;
  v23 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23)
    goto LABEL_5;
  v100 = v21;
  v101 = v15;
  v102 = (uint64_t *)a1;
  v24 = v17;
  v25 = *v19;
  v26 = v23;
  sub_10017A9F4(v25, (uint64_t)v14);
  v27 = v101;
  v28 = v104;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v14, 1, v101) == 1)
  {

    sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100642710);
    a1 = (uint64_t)v102;
    v22 = v100;
LABEL_5:
    if ((a2 & 1) != 0)
    {
      sub_100097E58();
      if (v30 != -1)
      {
        v31 = v29;
        v32 = v30;
        v33 = v30 & 1;
        if (qword_100640E38 != -1)
          swift_once(&qword_100640E38, sub_10009870C);
        v34 = type metadata accessor for RestorableSettings(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v11, 1, 1, v34);
        swift_beginAccess(&off_100645FC0, v105, 33, 0);
        v35 = v31;
        sub_10043B2D8((uint64_t)v11, v31, v33);
        swift_endAccess(v105);
        sub_100097F40(v31, v32);
      }
      v36 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
      *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v36);
      v37 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      v38 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(_QWORD *)v37 = 0;
      v37[8] = 0;
      swift_unknownObjectRelease(v38);
      v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
      v39(v8, 1, 1, v22);
      v40 = (uint64_t)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], v105, 33, 0);
      sub_10008BB40((uint64_t)v8, v40, &qword_100646B48);
      sub_10007C6DC(a1, (uint64_t)v8, type metadata accessor for ScrollPositionInfo);
      v39(v8, 0, 1, v22);
      sub_10008BB40((uint64_t)v8, v40, &qword_100646B48);
      swift_endAccess(v105);
    }
    v41 = 0;
    goto LABEL_12;
  }
  v99 = v26;
  v43 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v44 = v24;
  v43(v24, v14, v27);
  sub_100097E58();
  v47 = v100;
  if (v46 != -1)
  {
    v48 = v45;
    v49 = v46;
    v50 = v46 & 1;
    if (qword_100640E38 != -1)
      swift_once(&qword_100640E38, sub_10009870C);
    v51 = type metadata accessor for RestorableSettings(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v11, 1, 1, v51);
    swift_beginAccess(&off_100645FC0, v105, 33, 0);
    v52 = v48;
    sub_10043B2D8((uint64_t)v11, v48, v50);
    swift_endAccess(v105);
    sub_100097F40(v48, v49);
  }
  v53 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v53);
  v54 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  v55 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(_QWORD *)v54 = 0;
  v54[8] = 0;
  swift_unknownObjectRelease(v55);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v8, 1, 1, v47);
  v56 = (uint64_t)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], v105, 33, 0);
  sub_10008BB40((uint64_t)v8, v56, &qword_100646B48);
  swift_endAccess(v105);
  v57 = v99;
  objc_msgSend(v99, "contentSize");
  v58 = &selRef_objectForKey_ofClass_;
  if (v59 == 0.0)
  {
    result = objc_msgSend(v3, "view");
    if (!result)
    {
      __break(1u);
      goto LABEL_43;
    }
    v60 = result;
    objc_msgSend(result, "layoutBelowIfNeeded");

  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v57, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 1, 0);

  sub_100064B54();
  if ((v62 & 1) != 0
    && (v63 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode],
        swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v105, 0, 0),
        !*v63))
  {
    v91 = *(uint64_t *)((char *)v102 + *(int *)(v47 + 24));
    __chkstk_darwin(v64);
    v92 = (uint64_t)v99;
    *(&v97 - 2) = v3;
    *(&v97 - 1) = (char *)v92;
    v93 = swift_bridgeObjectRetain(v91);
    sub_1001BBC3C(v93, (void (*)(__int128 *, uint64_t, __n128))sub_1001D0758);
    v98 = 0;
    v57 = v99;
    swift_bridgeObjectRelease(v91);
    v65 = 1;
    v58 = &selRef_objectForKey_ofClass_;
  }
  else
  {
    v65 = 0;
    v98 = 0;
  }
  objc_msgSend(v57, "layoutBelowIfNeeded");
  v66 = sub_100195350(*v102);
  if (!v66)
    goto LABEL_38;
  v67 = v66;
  v97 = v44;
  v68 = sub_10009B854();
  if (!v68)
  {
    v76 = 0.0;
    goto LABEL_28;
  }
  v69 = v68;
  result = objc_msgSend(v3, v58[410]);
  if (result)
  {
    v70 = result;
    objc_msgSend(result, "bounds");
    v72 = v71;
    v74 = v73;

    objc_msgSend(v69, "systemLayoutSizeFittingSize:", v72, v74);
    v76 = v75;

LABEL_28:
    sub_100181F30(v67);
    v78 = v77 - v76 - *(double *)((char *)v102 + *(int *)(v103 + 24));
    v57 = v99;
    objc_msgSend(v99, "_effectiveContentInset");
    v80 = -v79;
    objc_msgSend(v57, "_effectiveContentInset");
    v82 = -v81;
    v83 = objc_msgSend(v57, "collectionViewLayout");
    objc_msgSend(v83, "collectionViewContentSize");
    v85 = v84;

    objc_msgSend(v57, "bounds");
    v86 = v85 - CGRectGetHeight(v106);
    objc_msgSend(v57, "_effectiveContentInset");
    if (v86 + v87 < v82)
      v88 = v82;
    else
      v88 = v86 + v87;
    objc_msgSend(v57, "contentOffset");
    if (v78 + v89 >= v80)
    {
      objc_msgSend(v57, "contentOffset", v78 + v89);
      v44 = v97;
      if (v88 >= v78 + v90)
        UIScrollView.doc_translateContent(dx:dy:animated:)(0, 0.0, v78);
      else
        objc_msgSend(v57, "setContentOffset:animated:", 0, 0.0, v88);
    }
    else
    {
      objc_msgSend(v57, "setContentOffset:animated:", 0, 0.0, v80);
      v44 = v97;
    }

LABEL_38:
    if (v65)
    {
      v94 = *(uint64_t *)((char *)v102 + *(int *)(v47 + 24));
      __chkstk_darwin(v66);
      *(&v97 - 2) = v3;
      *(&v97 - 1) = (char *)v57;
      v95 = swift_bridgeObjectRetain(v94);
      sub_1001BBC3C(v95, (void (*)(__int128 *, uint64_t, __n128))sub_1001D0750);
      v96 = swift_bridgeObjectRelease(v94);
      (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v44, v101, v96);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v104 + 8))(v44, v101);
    }

    v41 = 1;
LABEL_12:
    sub_10007C720((uint64_t)v19, type metadata accessor for ScrollPositionInfo.ItemOffset);
    return (id)v41;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_10018D00C(uint64_t a1, void **a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Class isa;
  uint64_t v15;

  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017A9F4(*a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a4, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 8, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_10018D148(uint64_t a1, void **a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017A9F4(*a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(a4, "cellForItemAtIndexPath:", isa);

  if (v14)
  {
    v15 = sub_10004F2F0(0, (unint64_t *)&unk_100646BF0, UIScrollView_ptr);
    v16 = UIView.doc_nearestAncestor<A>(ofType:)(v15, v15);
    if (!v16)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

      return;
    }
    v17 = (void *)v16;
    if ((static NSObject.== infix(_:_:)(v16, a4) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

      return;
    }
    v18 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    UIScrollView.doc_translateContent(dx:dy:animated:)(0, *(double *)((char *)a2 + *(int *)(v18 + 24)), 0.0);

  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10018D330(uint64_t a1, int a2, int a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint8_t *v41;
  void **v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  id v48;
  void *v49;
  char v50;
  void *v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  os_log_type_t v81;
  uint8_t *v82;
  void **v83;
  uint8_t *v84;
  void *v85;
  char v86;
  void *v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  unsigned __int8 *v109;
  int v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  Class isa;
  uint64_t v129;
  void *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, char *, uint64_t);
  char *v150;
  Class v151;
  void *v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)(char *, uint64_t, uint64_t);
  char *v165;
  _QWORD *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  int v178;
  int v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  void **aBlock;
  uint64_t v186;
  uint64_t (*v187)(uint64_t);
  void *v188;
  void (*v189)();
  uint64_t v190;
  uint64_t v191;
  char v192[8];

  v178 = a2;
  v179 = a3;
  v5 = sub_10006922C(&qword_100644BF0);
  v174 = *(_QWORD *)(v5 - 8);
  v175 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v171 = (char *)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = type metadata accessor for DispatchTime(0);
  v169 = *(_QWORD *)(v177 - 8);
  v15 = __chkstk_darwin(v177);
  v168 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v170 = (char *)&v157 - v17;
  v18 = sub_10006922C(&qword_100646BE0);
  __chkstk_darwin(v18);
  v166 = (uint64_t *)((char *)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v20);
  v167 = (char *)&v157 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for IndexPath(0);
  v172 = *(_QWORD *)(v22 - 8);
  v173 = v22;
  __chkstk_darwin(v22);
  v165 = (char *)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10006922C(&qword_100646B48);
  __chkstk_darwin(v24);
  v182 = (char *)&v157 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10006922C((uint64_t *)&unk_100646BD0);
  __chkstk_darwin(v26);
  v181 = (char *)&v157 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for Logger(0);
  v28 = *(_QWORD *)(v184 - 8);
  v29 = __chkstk_darwin(v184);
  v176 = (char *)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v157 - v32;
  v183 = a1;
  if ((unint64_t)a1 >> 62)
  {
    v104 = a1;
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    swift_bridgeObjectRetain(v104);
    v105 = _CocoaArrayWrapper.endIndex.getter(a1);
    swift_bridgeObjectRelease(v183);
    if (v105 < 1)
      return 0;
  }
  else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return 0;
  }
  v158 = v7;
  v180 = v3;
  v159 = v12;
  v160 = v11;
  v34 = Logger.UI.unsafeMutableAddressor(v31);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v163 = v34;
  v36 = v184;
  v164 = v35;
  v37 = ((uint64_t (*)(char *))v35)(v33);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter(v38);
  v40 = os_log_type_enabled(v38, v39);
  v162 = v8;
  v161 = v9;
  if (v40)
  {
    v41 = (uint8_t *)swift_slowAlloc(12, -1);
    v42 = (void **)swift_slowAlloc(32, -1);
    aBlock = v42;
    *(_DWORD *)v41 = 136315138;
    v191 = sub_1000544FC(0xD000000000000030, 0x8000000100516440, (uint64_t *)&aBlock);
    v36 = v184;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v191, v192);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s Revealing node", v41, 0xCu);
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v41, -1, -1);
  }

  v43 = *(void (**)(char *, uint64_t))(v28 + 8);
  v43(v33, v36);
  v44 = v183;
  v45 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v46 = v180;
  v47 = *(void **)&v180[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v47)
  {
    if ((v178 & 1) != 0)
    {
      v77 = v176;
      v78 = v164(v176, v163, v36);
      v79 = Logger.logObject.getter(v78);
      v80 = v36;
      v81 = static os_log_type_t.default.getter(v79);
      if (os_log_type_enabled(v79, v81))
      {
        v82 = (uint8_t *)swift_slowAlloc(12, -1);
        v83 = (void **)swift_slowAlloc(32, -1);
        aBlock = v83;
        *(_DWORD *)v82 = 136315138;
        v191 = sub_1000544FC(0xD000000000000030, 0x8000000100516440, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v191, v192);
        _os_log_impl((void *)&_mh_execute_header, v79, v81, "%s Enqueueing node to reveal", v82, 0xCu);
        swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v83, -1, -1);
        v84 = v82;
        v44 = v183;
        swift_slowDealloc(v84, -1, -1);
      }

      v43(v77, v80);
      sub_100097E58();
      if (v86 != -1)
      {
        v87 = v85;
        v88 = v86;
        v89 = v86 & 1;
        if (qword_100640E38 != -1)
          swift_once(&qword_100640E38, sub_10009870C);
        v90 = type metadata accessor for RestorableSettings(0);
        v91 = (uint64_t)v181;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v181, 1, 1, v90);
        swift_beginAccess(&off_100645FC0, &aBlock, 33, 0);
        v92 = v87;
        sub_10043B2D8(v91, v87, v89);
        swift_endAccess(&aBlock);
        sub_100097F40(v87, v88);
      }
      v93 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal;
      v94 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
      *(_QWORD *)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v94);
      v95 = &v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      v96 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(_QWORD *)v95 = 0;
      v95[8] = 0;
      swift_unknownObjectRelease(v96);
      v97 = type metadata accessor for ScrollPositionInfo(0);
      v98 = (uint64_t)v182;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v182, 1, 1, v97);
      v99 = (uint64_t)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess(&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], &aBlock, 33, 0);
      sub_10008BB40(v98, v99, &qword_100646B48);
      swift_endAccess(&aBlock);
      v65 = *(char **)&v46[v93];
      *(_QWORD *)&v46[v93] = v44;
      swift_bridgeObjectRetain(v44);
      goto LABEL_25;
    }
    return 0;
  }
  v48 = v47;
  sub_100097E58();
  if (v50 != -1)
  {
    v51 = v49;
    v52 = v50;
    v53 = v50 & 1;
    if (qword_100640E38 != -1)
      swift_once(&qword_100640E38, sub_10009870C);
    v54 = type metadata accessor for RestorableSettings(0);
    v55 = (uint64_t)v181;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v181, 1, 1, v54);
    swift_beginAccess(&off_100645FC0, &aBlock, 33, 0);
    v56 = v51;
    sub_10043B2D8(v55, v51, v53);
    swift_endAccess(&aBlock);
    sub_100097F40(v51, v52);
  }
  v57 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
  *(_QWORD *)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v57);
  v58 = &v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  v59 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(_QWORD *)v58 = 0;
  v58[8] = 0;
  swift_unknownObjectRelease(v59);
  v60 = type metadata accessor for ScrollPositionInfo(0);
  v61 = (uint64_t)v182;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v182, 1, 1, v60);
  v62 = (uint64_t)&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess(&v46[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], &aBlock, 33, 0);
  sub_10008BB40(v61, v62, &qword_100646B48);
  swift_endAccess(&aBlock);
  v63 = (char *)v48;
  v64 = v46;
  v65 = (char *)sub_1001BA578(v44, (uint64_t)v64, v63);

  if (!*((_QWORD *)v65 + 2))
  {

LABEL_25:
    swift_bridgeObjectRelease(v65);
    return 0;
  }
  if ((v179 & 1) != 0)
  {
LABEL_38:
    v103 = 1;
    goto LABEL_39;
  }
  v67 = v63;
  v68 = (uint64_t)sub_1001BA860((uint64_t)v65, v67);

  if ((unint64_t)v68 >> 62)
  {
    if (v68 < 0)
      v106 = v68;
    else
      v106 = v68 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v68);
    v107 = _CocoaArrayWrapper.endIndex.getter(v106);
    swift_bridgeObjectRelease(v68);
    if (v107)
      goto LABEL_14;
    goto LABEL_37;
  }
  if (!*(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_37:
    v66 = swift_bridgeObjectRelease(v68).n128_u64[0];
    goto LABEL_38;
  }
LABEL_14:
  sub_1000D02A4(v68);
  v70 = v69;
  swift_bridgeObjectRelease(v68);
  v71 = *(void **)&v46[v45];
  if (v71)
  {
    v72 = v71;
    v73 = objc_msgSend(v72, "visibleCells");
    v74 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v75 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v73, v74);

    v76 = sub_1001BC3D0(v75, v72);
    swift_bridgeObjectRelease(v75);

  }
  else
  {
    v76 = _swiftEmptyArrayStorage;
  }
  sub_10018E860((uint64_t)v76, v70);
  v102 = v101;
  swift_bridgeObjectRelease(v76);
  v66 = swift_bridgeObjectRelease(v70).n128_u64[0];
  v103 = v102 ^ 1;
LABEL_39:
  v108 = *(void **)&v64[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
  if (!v108
    || (v109 = (unsigned __int8 *)objc_msgSend(v108, "activeDocumentCreationSession", *(double *)&v66)) == 0
    || (v110 = v109[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates],
        v109,
        v110 != 1))
  {
    if ((v103 & 1) == 0)
    {

      swift_bridgeObjectRelease(v65);
      return 1;
    }
    v117 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
    if ((v64[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
    {
      v64[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
      sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
      v64[v117] = 0;
    }
    v118 = *((_QWORD *)v65 + 2);
    if (v118)
    {
      v182 = v64;
      v183 = v13;
      v119 = &v65[(*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80)];
      v184 = *(_QWORD *)(v174 + 72);
      v120 = v172;
      v121 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
      v181 = v65;
      swift_bridgeObjectRetain(v65);
      v122 = v173;
      v123 = v63;
      v124 = v175;
      v125 = v158;
      do
      {
        v126 = *(int *)(v124 + 48);
        v127 = &v125[v126];
        *(_QWORD *)v125 = *(_QWORD *)v119;
        v121(&v125[v126], &v119[v126], v122);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v120 + 8))(v127, v122);
        objc_msgSend(v123, "selectItemAtIndexPath:animated:scrollPosition:", isa, 1, 2);

        v119 += v184;
        --v118;
      }
      while (v118);
      v65 = v181;
      swift_bridgeObjectRelease(v181);
      v13 = v183;
      v63 = v123;
    }
    v129 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v130 = (void *)static OS_dispatch_queue.main.getter(v129);
    v131 = v65;
    v132 = v168;
    static DispatchTime.now()(v130);
    v133 = v170;
    + infix(_:_:)(v132, 1.5);
    v184 = *(_QWORD *)(v169 + 8);
    ((void (*)(char *, uint64_t))v184)(v132, v177);
    v134 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v134 + 16);
    v135 = swift_allocObject(&unk_1005CDB78, 32, 7);
    *(_QWORD *)(v135 + 16) = v134;
    *(_QWORD *)(v135 + 24) = v131;
    v189 = sub_1001D0708;
    v190 = v135;
    aBlock = _NSConcreteStackBlock;
    v186 = 1107296256;
    v187 = sub_10004A82C;
    v188 = &unk_1005CDB90;
    v136 = _Block_copy(&aBlock);
    v137 = swift_release(v190);
    v138 = v171;
    static DispatchQoS.unspecified.getter(v137);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v139 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v140 = sub_10006922C((uint64_t *)&unk_100647540);
    v141 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v142 = v160;
    v143 = v140;
    v144 = v162;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v143, v141, v162, v139);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v133, v138, v142, v136);
    _Block_release(v136);

    (*(void (**)(char *, uint64_t))(v161 + 8))(v142, v144);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v138, v159);
    ((void (*)(char *, uint64_t))v184)(v133, v177);
    return 1;
  }
  if (*((_QWORD *)v65 + 2))
  {
    v111 = v174;
    v112 = v166;
    sub_1000271D4((uint64_t)&v65[(*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80)], (uint64_t)v166, &qword_100644BF0);
    v113 = 0;
    v114 = v65;
    v115 = v175;
    v116 = (uint64_t)v167;
  }
  else
  {
    v113 = 1;
    v114 = v65;
    v111 = v174;
    v115 = v175;
    v116 = (uint64_t)v167;
    v112 = v166;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v111 + 56))(v112, v113, 1, v115);
  v145 = swift_bridgeObjectRelease(v114);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v111 + 48))(v112, 1, v115, v145) != 1)
  {
    swift_unknownObjectRelease(*v112);
    v146 = (char *)v112 + *(int *)(v115 + 48);
    v147 = v172;
    v148 = v173;
    v149 = *(void (**)(uint64_t, char *, uint64_t))(v172 + 32);
    v149(v116, v146, v173);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v147 + 56))(v116, 0, 1, v148);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))(v116, 1, v148) == 1)
      goto LABEL_58;
    v150 = v165;
    v149((uint64_t)v165, (char *)v116, v148);
    v151 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v63, "scrollToItemAtIndexPath:atScrollPosition:animated:", v151, 2, 0);

    v64[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 0;
    v152 = (void *)objc_opt_self(DOCUISession);
    v153 = swift_allocObject(&unk_1005CDBC8, 24, 7);
    *(_QWORD *)(v153 + 16) = v64;
    v189 = sub_1001D0710;
    v190 = v153;
    aBlock = _NSConcreteStackBlock;
    v186 = 1107296256;
    v187 = sub_10004A82C;
    v188 = &unk_1005CDBE0;
    v154 = _Block_copy(&aBlock);
    v155 = v190;
    v156 = v64;
    swift_release(v155);
    objc_msgSend(v152, "performAfterCATransactionCommits:", v154);
    _Block_release(v154);

    (*(void (**)(char *, uint64_t))(v147 + 8))(v150, v148);
    return 1;
  }
  sub_10000CB4C((uint64_t)v112, &qword_100646BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v172 + 56))(v116, 1, 1, v173);
LABEL_58:

  sub_10000CB4C(v116, (uint64_t *)&unk_100642710);
  return 1;
}

uint64_t sub_10018E2F4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  void (*v46)(char *, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  os_log_t v66;
  uint64_t v67;
  char *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v80 = a2;
  v78 = a3;
  v79 = a4;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v76 = v5;
  v77 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v71 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v71 - v20;
  v22 = *a1;
  sub_10017A9F4(*a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_100642710);
    v23 = sub_10006922C(&qword_100644BF0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v79, 1, 1, v23);
  }
  v74 = v16;
  v75 = v8;
  v80 = (uint64_t)v22;
  v25 = *(uint64_t (**)(char *, char *, uint64_t))(v13 + 32);
  v26 = v25(v21, v11, v12);
  v27 = IndexPath.section.getter(v26);
  v28 = objc_msgSend(v78, "numberOfSections");
  v29 = *(uint64_t (**)(char *, char *, uint64_t))(v13 + 16);
  v30 = v21;
  v31 = v21;
  v32 = v12;
  v33 = v29(v19, v31, v12);
  if (v27 >= (uint64_t)v28)
  {
    v37 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
    v38 = v12;
    v39 = v37(v19, v12);
    v41 = v30;
    v42 = v80;
  }
  else
  {
    v34 = IndexPath.item.getter(v33);
    v35 = IndexPath.section.getter(v34);
    v36 = objc_msgSend(v78, "numberOfItemsInSection:", v35);
    v37 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
    v38 = v32;
    v39 = v37(v19, v32);
    v40 = v34 < (uint64_t)v36;
    v41 = v30;
    v42 = v80;
    if (v40)
    {
      v43 = sub_10006922C(&qword_100644BF0);
      v44 = v79;
      v45 = (char *)v79 + *(int *)(v43 + 48);
      *v79 = v42;
      v25(v45, v30, v32);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v44, 0, 1, v43);
      return swift_unknownObjectRetain(v42);
    }
  }
  v46 = (void (*)(char *, uint64_t, __n128))v37;
  v47 = Logger.UI.unsafeMutableAddressor(v39);
  v49 = v76;
  v48 = v77;
  v50 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v75, v47, v76);
  v51 = v74;
  v29(v74, v41, v38);
  v52 = swift_unknownObjectRetain_n(v42, 2);
  v53 = Logger.logObject.getter(v52);
  v54 = static os_log_type_t.error.getter(v53);
  LODWORD(v80) = v54;
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc(32, -1);
    v78 = v41;
    v56 = v55;
    v73 = swift_slowAlloc(96, -1);
    v83 = v73;
    *(_DWORD *)v56 = 136315650;
    v81 = sub_1000544FC(0xD000000000000030, 0x8000000100516440, &v83);
    v72 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
    *(_WORD *)(v56 + 12) = 2080;
    v57 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v58 = dispatch thunk of CustomStringConvertible.description.getter(v38, v57);
    v60 = v59;
    v81 = sub_1000544FC(v58, v59, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
    v61 = swift_bridgeObjectRelease(v60);
    v46(v51, v38, v61);
    *(_WORD *)(v56 + 22) = 2080;
    v81 = v42;
    swift_unknownObjectRetain(v42);
    v62 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v63 = String.init<A>(describing:)(&v81, v62);
    v65 = v64;
    v81 = sub_1000544FC(v63, v64, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
    swift_unknownObjectRelease_n(v42, 2);
    swift_bridgeObjectRelease(v65);
    v66 = v72;
    _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v80, "%s Invalid index path %s for item %s", (uint8_t *)v56, 0x20u);
    v67 = v73;
    swift_arrayDestroy(v73, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    swift_slowDealloc(v56, -1, -1);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v49);
    v68 = v78;
  }
  else
  {
    swift_unknownObjectRelease_n(v42, 2);

    ((void (*)(char *, uint64_t))v46)(v51, v38);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
    v68 = v41;
  }
  ((void (*)(char *, uint64_t))v46)(v68, v38);
  v69 = v79;
  v70 = sub_10006922C(&qword_100644BF0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 1, 1, v70);
}

void sub_10018E860(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];
  id v11;

  v2 = a2;
  if ((a2 & 0xC000000000000001) == 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (!v6)
      return;
    if (v6 != 1)
    {
      swift_bridgeObjectRetain(a2);
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  if (a2 < 0)
    v4 = a2;
  else
    v4 = a2 & 0xFFFFFFFFFFFFFF8;
  if (__CocoaSet.count.getter(v4))
  {
    if (__CocoaSet.count.getter(v4) != 1)
    {
      swift_bridgeObjectRetain(v2);
      v5 = __CocoaSet.count.getter(v4);
      v2 = sub_1004443B4(v4, v5);
LABEL_14:
      sub_1001B3AC0(a1, v2);
      swift_release(v2);
      return;
    }
LABEL_10:
    v7 = swift_bridgeObjectRetain(v2);
    v8 = (void *)sub_10024391C(v7);
    swift_bridgeObjectRelease(v2);
    v11 = v8;
    if (v8)
    {
      __chkstk_darwin(v9);
      v10[2] = &v11;
      sub_10017397C((uint64_t (*)(id *))sub_1001D0734, (uint64_t)v10, a1);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10018E994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *Strong;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void *v23;
  char *v24;
  id v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  char v32[24];

  v4 = sub_10006922C(&qword_100644BF0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v30 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, v32, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1, v7);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(a2 + 16);
    if (v10)
    {
      v11 = (uint64_t *)(a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
      v27 = a2;
      v28 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
      v31 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain(a2);
      while (1)
      {
        v12 = (uint64_t)v11 + *(int *)(v4 + 48);
        v13 = sub_10017A754(v12, 0);
        if (v13)
        {
          v14 = (void *)v13;
          v15 = (char *)v30 + *(int *)(v4 + 48);
          v16 = v9;
          v17 = v4;
          v18 = *v11;
          *v30 = *v11;
          v19 = type metadata accessor for IndexPath(0);
          v20 = *(_QWORD *)(v19 - 8);
          v29 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
          v29(v15, v12, v19);
          v21 = *(void (**)(char *, uint64_t))(v20 + 8);
          swift_unknownObjectRetain(v18);
          v21(v15, v19);
          LODWORD(v15) = objc_msgSend(v14, "isEqual:", v18);
          swift_unknownObjectRelease(v14);
          v22 = v18;
          v4 = v17;
          v9 = v16;
          swift_unknownObjectRelease(v22);
          if ((_DWORD)v15)
          {
            objc_msgSend(v16, "loadViewIfNeeded");
            v23 = *(void **)&v16[v28];
            if (!v23)
            {
              __break(1u);
              return;
            }
            v24 = (char *)v30 + *(int *)(v4 + 48);
            *v30 = *v11;
            v29(v24, v12, v19);
            v25 = v23;
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            v21(v24, v19);
            objc_msgSend(v25, "deselectItemAtIndexPath:animated:", isa, 1);

          }
        }
        v11 = (uint64_t *)((char *)v11 + v31);
        if (!--v10)
        {

          swift_bridgeObjectRelease(v27);
          return;
        }
      }
    }

  }
}

uint64_t sub_10018EBD8(void *a1, int a2, int a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  char v32;
  void *v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t result;
  void (*v48)(_BYTE *, uint64_t, uint64_t);
  Class isa;
  Class v50;
  void *v51;
  _BYTE *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char v58;
  void *v59;
  char v60;
  void *v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, _BYTE *, uint64_t);
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  NSIndexPath v87;
  Class v88;
  _BYTE *v89;
  Class v90;
  id v91;
  uint64_t v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  void *v101;
  char v102;
  void *v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  NSIndexPath v116;
  uint64_t v117;
  double MinY;
  id v119;
  double v120;
  CGFloat v121;
  double v122;
  CGFloat v123;
  double v124;
  CGFloat v125;
  double v126;
  CGFloat v127;
  uint64_t v128;
  _BYTE v129[12];
  int v130;
  _BYTE *v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t v134;
  int v135;
  _BYTE *v136;
  _BYTE *v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141[4];
  CGRect v142;
  CGRect v143;

  v4 = v3;
  v135 = a3;
  LODWORD(v5) = a2;
  v138 = a1;
  v6 = sub_10006922C(&qword_100646B48);
  __chkstk_darwin(v6);
  v133 = &v129[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10006922C((uint64_t *)&unk_100646BD0);
  __chkstk_darwin(v8);
  v131 = &v129[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v137 = &v129[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v136 = &v129[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = &v129[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = Logger.UI.unsafeMutableAddressor(v17);
  v21 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v19, v20, v15);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v134 = v12;
    v24 = swift_slowAlloc(12, -1);
    v130 = (int)v5;
    v5 = (uint8_t *)v24;
    v25 = swift_slowAlloc(32, -1);
    v141[0] = v25;
    v132 = v13;
    *(_DWORD *)v5 = 136315138;
    v139 = sub_1000544FC(0xD00000000000002BLL, 0x8000000100516410, v141);
    v12 = v134;
    v13 = v132;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s Scrolling to node", v5, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    v26 = v5;
    LOBYTE(v5) = v130;
    swift_slowDealloc(v26, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v19, v15);
  v27 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v28 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  v29 = (uint64_t)v137;
  if (!v28)
    goto LABEL_6;
  v30 = v28;
  sub_10017A9F4(v138, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v29, 1, v12) == 1)
  {

    sub_10000CB4C(v29, (uint64_t *)&unk_100642710);
LABEL_6:
    if ((v135 & 1) != 0)
    {
      sub_100097E58();
      if (v32 != -1)
      {
        v33 = v31;
        v34 = v32;
        v35 = v32 & 1;
        if (qword_100640E38 != -1)
          swift_once(&qword_100640E38, sub_10009870C);
        v36 = type metadata accessor for RestorableSettings(0);
        v37 = (uint64_t)v131;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v131, 1, 1, v36);
        swift_beginAccess(&off_100645FC0, v141, 33, 0);
        v38 = v33;
        sub_10043B2D8(v37, v33, v35);
        swift_endAccess(v141);
        sub_100097F40(v33, v34);
      }
      v39 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
      *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v39);
      v40 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      v41 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(_QWORD *)v40 = 0;
      v40[8] = 0;
      swift_unknownObjectRelease(v41);
      v42 = type metadata accessor for ScrollPositionInfo(0);
      v43 = (uint64_t)v133;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v133, 1, 1, v42);
      v44 = (uint64_t)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess(&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], v141, 33, 0);
      sub_10008BB40(v43, v44, &qword_100646B48);
      swift_endAccess(v141);
      v45 = *(_QWORD *)v40;
      v46 = v138;
      *(_QWORD *)v40 = v138;
      v40[8] = v5 & 1;
      swift_unknownObjectRetain(v46);
      swift_unknownObjectRelease(v45);
    }
    return 0;
  }
  v48 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 32);
  v134 = v12;
  v48(v136, v29, v12);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v50 = (Class)objc_msgSend(v30, "cellForItemAtIndexPath:", isa);

  if (v50)
  {
    v51 = *(void **)&v4[v27];
    v132 = v13;
    if (v51)
    {
      v52 = v4;
      v53 = v51;
      v54 = objc_msgSend(v53, "visibleCells");
      v55 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
      v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

      v57 = sub_1001BC3D0(v56, v53);
      swift_bridgeObjectRelease(v56);

      v4 = v52;
    }
    else
    {
      v57 = _swiftEmptyArrayStorage;
    }
    v58 = sub_1000DFC20((uint64_t)v50, (uint64_t)v57);
    swift_bridgeObjectRelease(v57);
    if ((v58 & 1) != 0)
    {
      sub_100097E58();
      if (v60 != -1)
      {
        v61 = v59;
        v62 = v60;
        v63 = v60 & 1;
        if (qword_100640E38 != -1)
          swift_once(&qword_100640E38, sub_10009870C);
        v64 = type metadata accessor for RestorableSettings(0);
        v65 = (uint64_t)v131;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v131, 1, 1, v64);
        swift_beginAccess(&off_100645FC0, v141, 33, 0);
        v66 = v61;
        sub_10043B2D8(v65, v61, v63);
        swift_endAccess(v141);
        sub_100097F40(v61, v62);
      }
      v67 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
      *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v67);
      v68 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      v69 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(_QWORD *)v68 = 0;
      v68[8] = 0;
      swift_unknownObjectRelease(v69);
      v70 = type metadata accessor for ScrollPositionInfo(0);
      v71 = (uint64_t)v133;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v133, 1, 1, v70);
      v72 = (uint64_t)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess(&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], v141, 33, 0);
      sub_10008BB40(v71, v72, &qword_100646B48);
      swift_endAccess(v141);
      v73 = (uint64_t)sub_100034068(0);
      v74 = v73;
      if ((unint64_t)v73 >> 62)
      {
        if (v73 >= 0)
          v73 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v73) == 1)
        {
LABEL_24:
          v75 = sub_10006922C((uint64_t *)&unk_1006424B0);
          v76 = Array<A>.contains(node:)(v138, v74, v75);
          swift_bridgeObjectRelease(v74);
          if ((v76 & 1) != 0)
          {
            v77 = sub_10006922C(&qword_100644BD0);
            v78 = v132;
            v79 = *(unsigned __int8 *)(v132 + 80);
            v80 = (v79 + 32) & ~v79;
            v81 = swift_allocObject(v77, v80 + *(_QWORD *)(v132 + 72), v79 | 7);
            *(_OWORD *)(v81 + 16) = xmmword_1004D9670;
            v82 = v81 + v80;
            v83 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v78 + 16);
            v84 = v81 + v80;
            v85 = v136;
            v86 = v134;
            v83(v84, v136, v134);
            sub_10009A978(0, v81);
            swift_setDeallocating(v81);
            swift_arrayDestroy(v82, *(_QWORD *)(v81 + 16), v86);
            swift_deallocClassInstance(v81, 32, 7);
            v87.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
            v88 = v50;
            v50 = v87.super.isa;
LABEL_48:
            objc_msgSend(v30, "selectItemAtIndexPath:animated:scrollPosition:", v87.super.isa, v5 & 1, 0);

            (*(void (**)(_BYTE *, uint64_t))(v132 + 8))(v85, v134);
            return 1;
          }
LABEL_45:
          v128 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
          if ((v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
          {
            v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
            sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
            v4[v128] = 0;
          }
          v85 = v136;
          v87.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v88 = v87.super.isa;
          goto LABEL_48;
        }
      }
      else if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      {
        goto LABEL_24;
      }
      swift_bridgeObjectRelease(v74);
      goto LABEL_45;
    }

    v13 = v132;
  }
  v89 = v136;
  v90 = IndexPath._bridgeToObjectiveC()().super.isa;
  v91 = objc_msgSend(v30, "layoutAttributesForItemAtIndexPath:", v90);

  if (!v91)
  {
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v89, v134);

    return 0;
  }
  v92 = v13;
  objc_msgSend(v91, "frame");
  v94 = v93;
  v96 = v95;
  v98 = v97;
  v100 = v99;

  sub_100097E58();
  if (v102 != -1)
  {
    v103 = v101;
    v104 = v102;
    v105 = v102 & 1;
    if (qword_100640E38 != -1)
      swift_once(&qword_100640E38, sub_10009870C);
    v106 = type metadata accessor for RestorableSettings(0);
    v107 = (uint64_t)v131;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v131, 1, 1, v106);
    swift_beginAccess(&off_100645FC0, v141, 33, 0);
    v108 = v103;
    sub_10043B2D8(v107, v103, v105);
    swift_endAccess(v141);
    sub_100097F40(v103, v104);
  }
  v109 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v109);
  v110 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  v111 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(_QWORD *)v110 = 0;
  v110[8] = 0;
  swift_unknownObjectRelease(v111);
  v112 = type metadata accessor for ScrollPositionInfo(0);
  v113 = (uint64_t)v133;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v133, 1, 1, v112);
  v114 = (uint64_t)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess(&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], v141, 33, 0);
  sub_10008BB40(v113, v114, &qword_100646B48);
  swift_endAccess(v141);
  v115 = v136;
  v116.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "loadViewIfNeeded");
  result = *(_QWORD *)&v4[v27];
  if (result)
  {
    if ((objc_msgSend((id)result, "_isRectFullyVisible:", v94, v96, v98, v100) & 1) != 0)
    {
      v117 = 0;
LABEL_40:
      objc_msgSend(v30, "selectItemAtIndexPath:animated:scrollPosition:", v116.super.isa, v5 & 1, v117);

      (*(void (**)(_BYTE *, uint64_t))(v92 + 8))(v115, v134);
      return 1;
    }
    v142.origin.x = v94;
    v142.origin.y = v96;
    v142.size.width = v98;
    v142.size.height = v100;
    MinY = CGRectGetMinY(v142);
    objc_msgSend(v4, "loadViewIfNeeded");
    result = *(_QWORD *)&v4[v27];
    if (result)
    {
      v119 = objc_msgSend((id)result, "safeAreaLayoutGuide");
      objc_msgSend(v119, "layoutFrame");
      v121 = v120;
      v123 = v122;
      v125 = v124;
      v127 = v126;

      v143.origin.x = v121;
      v143.origin.y = v123;
      v143.size.width = v125;
      v143.size.height = v127;
      if (MinY <= CGRectGetMinY(v143))
        v117 = 1;
      else
        v117 = 4;
      goto LABEL_40;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCItemCollectionViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  char *v3;
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  objc_class *v16;
  char v17;
  uint64_t v18;
  char *v19;
  void *Strong;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  void *v32;
  _BOOL8 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  int v45;
  objc_class *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[3];
  objc_class *v50;
  void (*v51)();
  uint64_t v52;
  char v53[24];
  objc_super v54;

  v3 = v2;
  LODWORD(v4) = animated;
  v5 = _;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v48 - 8);
  v11 = __chkstk_darwin(v48);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
  if (v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1 && !v5)
    return;
  if (((objc_msgSend(v2, "isEditing", v11) ^ v5) & 1) == 0)
  {
    objc_msgSend(v2, "loadViewIfNeeded");
    v15 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v15)
    {
LABEL_28:
      __break(1u);
      return;
    }
    if (objc_msgSend(v15, "isEditing") == v5)
      return;
  }
  v47 = v7;
  v16 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v54.receiver = v2;
  v54.super_class = v16;
  v46 = v16;
  if (v5)
    v17 = 2;
  else
    v17 = 0;
  objc_msgSendSuper2(&v54, "setEditing:animated:", v5, v4 & 1);
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = v17;
  if (!v5)
  {
    v45 = v4;
    v18 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
    if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
    {
      v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
      sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
      v2[v18] = 0;
    }
    v19 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v53, 0, 0);
    if (*(_QWORD *)v19 == 2
      && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting])) != 0)
    {
      v21 = Strong;
      v22 = objc_msgSend(Strong, "infoPanelPreviewingMultipleItems");
      swift_unknownObjectRelease(v21);
    }
    else
    {
      v22 = 0;
    }
    v23 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v44 = static OS_dispatch_queue.main.getter(v23);
    v24 = swift_allocObject(&unk_1005CBEB8, 25, 7);
    *(_QWORD *)(v24 + 16) = v3;
    *(_BYTE *)(v24 + 24) = v22;
    v51 = sub_1001BF918;
    v52 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    v50 = (objc_class *)&unk_1005CBED0;
    v43 = _Block_copy(aBlock);
    v25 = v52;
    v26 = v3;
    swift_release(v25);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = _swiftEmptyArrayStorage;
    v28 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v4 = sub_10006922C((uint64_t *)&unk_100647540);
    v29 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v4, v29, v6, v28);
    v31 = v43;
    v30 = (void *)v44;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v43);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v48);
    LOBYTE(v4) = v45;
  }
  objc_msgSend(v3, "loadViewIfNeeded");
  v32 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v32)
  {
    __break(1u);
    goto LABEL_28;
  }
  v33 = v5;
  objc_msgSend(v32, "setEditing:", v33);
  if ((v3[v14] & 1) == 0)
  {
    v34 = &v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
    v35 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting]);
    if (v35)
    {
      v36 = v35;
      v37 = *((_QWORD *)v34 + 1);
      ObjectType = swift_getObjectType(v35);
      v50 = v46;
      aBlock[0] = v3;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8))(aBlock, objc_msgSend(v3, "isEditing"), 3, v4 & 1, ObjectType, v37);
      swift_unknownObjectRelease(v36);
      sub_100068588(aBlock);
    }
    v39 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_100640E18 != -1)
      swift_once(&qword_100640E18, sub_1001753A8);
    objc_msgSend(v39, "postNotificationName:object:", qword_100672720, v3);

  }
  sub_10018FDE8(v33, v4 & 1);
  sub_100014AAC();
  v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = v4 & 1;
  v40 = objc_msgSend(v3, "viewIfLoaded");
  v41 = objc_msgSend(v40, "window");

  if (v41)
    sub_1000926C8();
}

uint64_t sub_10018FCC8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode);
}

void sub_10018FD1C(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  void *v5;
  int v6;
  char *v7;
  id v8;

  v2 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
  v3 = v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
  v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] = a1;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v1, "setEditing:animated:", 1, 0);
    if (v3 == v1[v2])
      return;
  }
  else if ((v3 & 1) == 0)
  {
    return;
  }
  v4 = objc_msgSend(v1, "isEditing");
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v5)
  {
    v6 = v4;
    v8 = v5;
    v7 = v1;
    sub_10009BC94(v8, v7, v6);

  }
}

void sub_10018FDE8(char a1, char a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    v6 = swift_allocObject(&unk_1005CEA00, 33, 7);
    *(_QWORD *)(v6 + 16) = v3;
    *(_QWORD *)(v6 + 24) = v2;
    v7 = a1 & 1;
    *(_BYTE *)(v6 + 32) = v7;
    if ((a2 & 1) != 0)
    {
      v8 = (void *)objc_opt_self(UIView);
      v9 = swift_allocObject(&unk_1005CEA28, 32, 7);
      *(_QWORD *)(v9 + 16) = sub_1001D158C;
      *(_QWORD *)(v9 + 24) = v6;
      aBlock[4] = sub_100066584;
      v16 = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CEA40;
      v10 = _Block_copy(aBlock);
      v11 = v16;
      v12 = v3;
      v13 = v2;
      swift_retain();
      swift_release(v11);
      objc_msgSend(v8, "animateWithDuration:animations:", v10, 0.2);
      swift_release(v6);

      _Block_release(v10);
    }
    else
    {
      v14 = v3;
      sub_10009BC94(v14, v2, v7);
      swift_release(v6);

    }
  }
}

void DOCItemCollectionViewController.willTransition(to:with:)(void *a1, void *a2)
{
  char *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  double v9;
  id v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  void **v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void *v31;
  void *v32;
  uint64_t v33;
  objc_super v34;

  v3 = v2;
  v34.receiver = v2;
  v34.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v34, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
  v6 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v7, "delegate");
    *(_QWORD *)&v9 = swift_unknownObjectRelease(v8).n128_u64[0];
    if (v8)
    {
      if (objc_msgSend(a1, "horizontalSizeClass", v9) == (id)2)
        sub_1002C9CCC();
      v10 = objc_msgSend(v3, "traitCollection");
      v11 = sub_10000BE74(2, v10);

      if ((v11 & 1) != 0)
      {
        v12 = swift_allocObject(&unk_1005CBFA8, 32, 7);
        *(_QWORD *)(v12 + 16) = v3;
        *(_QWORD *)(v12 + 24) = a1;
        v32 = sub_1001BFE38;
        v33 = v12;
        v28 = _NSConcreteStackBlock;
        v29 = 1107296256;
        v30 = sub_100018CC0;
        v31 = &unk_1005CBFC0;
        v13 = _Block_copy(&v28);
        v14 = v33;
        v15 = v3;
        v16 = a1;
        objc_msgSend(a2, "animateAlongsideTransition:completion:", v13, 0, swift_release(v14).n128_f64[0]);
        _Block_release(v13);
      }
      v17 = objc_msgSend(v3, "traitCollection");
      v18 = sub_10000BE74(16, v17);

      if ((v18 & 1) != 0)
      {
        v19 = swift_allocObject(&unk_1005CBF08, 24, 7);
        *(_QWORD *)(v19 + 16) = v3;
        v32 = sub_1001BFDFC;
        v33 = v19;
        v28 = _NSConcreteStackBlock;
        v29 = 1107296256;
        v30 = sub_100018CC0;
        v31 = &unk_1005CBF20;
        v20 = _Block_copy(&v28);
        v21 = v33;
        v22 = v3;
        swift_release(v21);
        v23 = swift_allocObject(&unk_1005CBF58, 32, 7);
        *(_QWORD *)(v23 + 16) = v22;
        *(_QWORD *)(v23 + 24) = a1;
        v32 = sub_1001BFE04;
        v33 = v23;
        v28 = _NSConcreteStackBlock;
        v29 = 1107296256;
        v30 = sub_100018CC0;
        v31 = &unk_1005CBF70;
        v24 = _Block_copy(&v28);
        v25 = v33;
        v26 = v22;
        v27 = a1;
        objc_msgSend(a2, "animateAlongsideTransition:completion:", v20, v24, swift_release(v25).n128_f64[0]);
        _Block_release(v24);
        _Block_release(v20);
      }
      sub_1001BF94C();
    }

  }
}

void sub_100190218(int a1, char *a2, id a3)
{
  int v5;
  id v6;

  if ((a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] == 1))
  {
    if (objc_msgSend(a3, "verticalSizeClass") == (id)1)
      v5 = 1;
    else
      v5 = UITraitCollection.doc_preferredLayoutSizeCategory.getter() == 2
        && objc_msgSend(a3, "horizontalSizeClass") == (id)1;
    v6 = objc_msgSend(a2, "navigationController");
    sub_100185498(v5, v6, 1);

  }
}

void sub_100190308(int a1, _BYTE *a2)
{
  id v2;
  id v3;

  a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  v2 = objc_msgSend(a2, "viewIfLoaded");
  v3 = objc_msgSend(v2, "window");

  if (v3)
    sub_1000926C8();
}

void sub_1001903E8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  v3 = v2;
  v6 = swift_allocObject(&unk_1005CE848, 32, 7);
  v7 = objc_msgSend(a1, "splitViewController");
  v8 = v7;
  if (v7)
  {
    v9 = objc_msgSend(v7, "displayMode");

  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(v6 + 16) = v9;
  *(_BYTE *)(v6 + 24) = v8 == 0;
  v10 = (_QWORD *)swift_allocObject(&unk_1005CE870, 40, 7);
  v10[2] = a1;
  v10[3] = v6;
  v10[4] = v3;
  v11 = swift_allocObject(&unk_1005CE898, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_1001D1470;
  *(_QWORD *)(v11 + 24) = v10;
  v22 = sub_100066584;
  v23 = v11;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100018CC0;
  v21 = &unk_1005CE8B0;
  v12 = _Block_copy(&v18);
  v13 = v23;
  v14 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(v13);
  v15 = swift_allocObject(&unk_1005CE8E8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001D1470;
  *(_QWORD *)(v15 + 24) = v10;
  v22 = sub_10010DF60;
  v23 = v15;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100018CC0;
  v21 = &unk_1005CE900;
  v16 = _Block_copy(&v18);
  v17 = v23;
  swift_retain();
  objc_msgSend(a2, "animateAlongsideTransition:completion:", v12, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  _Block_release(v12);
  swift_release(v6);
  swift_release(v10);
}

uint64_t sub_1001905E0(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t result;
  BOOL *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v5 = (_QWORD *)(a2 + 16);
  v6 = objc_msgSend(a1, "splitViewController");
  v7 = v6;
  if (!v6)
  {
    result = swift_beginAccess(v5, v15, 0, 0);
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
      return result;
    v8 = 0;
    v10 = (BOOL *)(a2 + 24);
    goto LABEL_7;
  }
  v8 = objc_msgSend(v6, "displayMode");

  result = swift_beginAccess(v5, v15, 0, 0);
  v10 = (BOOL *)(a2 + 24);
  if ((*(_BYTE *)(a2 + 24) & 1) != 0 || v8 != *(id *)(a2 + 16))
  {
LABEL_7:
    swift_beginAccess(v5, &v14, 1, 0);
    *v5 = v8;
    *v10 = v7 == 0;
    v12 = *(void (**)(uint64_t))(a3 + 16);
    v11 = *(_QWORD *)(a3 + 24);
    v13 = swift_retain(v11);
    v12(v13);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_1001906E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

void DOCItemCollectionViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  void **v25;
  unint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void *v28;
  void *v29;
  uint64_t v30;
  _QWORD v31[2];
  objc_super v32;

  v4 = v3;
  v32.receiver = v3;
  v32.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v32, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v8 = swift_allocObject(&unk_1005CBFF8, 24, 7);
  *(_QWORD *)(v8 + 16) = v4;
  v9 = type metadata accessor for DOCItemCollectionViewController.SplitModeChangeTracker();
  v10 = swift_allocObject(v9, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_1001BFE40;
  *(_QWORD *)(v10 + 24) = v8;
  v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  v12 = v4;
  if (v11)
  {
    swift_retain();
    sub_10038CB34();
    swift_release(v11);
  }
  sub_1001903E8(v4, a1);
  v25 = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  v13._object = (void *)0x80000001005139A0;
  v13._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v13);
  *(double *)v31 = a2;
  *(double *)&v31[1] = a3;
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)(v31, &v25, v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v15._countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  v16 = v26;
  sub_1001F6BB0((uint64_t)v25, (void *)v26, a1);
  swift_bridgeObjectRelease(v16);
  v17 = swift_allocObject(&unk_1005CC020, 40, 7);
  *(_QWORD *)(v17 + 16) = v4;
  *(double *)(v17 + 24) = a2;
  *(double *)(v17 + 32) = a3;
  v29 = sub_1001BFE9C;
  v30 = v17;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_100018CC0;
  v28 = &unk_1005CC038;
  v18 = _Block_copy(&v25);
  v19 = v30;
  v20 = v4;
  swift_release(v19);
  v21 = swift_allocObject(&unk_1005CC070, 24, 7);
  *(_QWORD *)(v21 + 16) = v20;
  v29 = sub_1001BFEA8;
  v30 = v21;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_100018CC0;
  v28 = &unk_1005CC088;
  v22 = _Block_copy(&v25);
  v23 = v30;
  v24 = v20;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v18, v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);
  _Block_release(v18);
  swift_release(v10);
}

void sub_100190988(int a1, id a2, double a3, double a4)
{
  id v6;

  v6 = objc_msgSend(a2, "traitCollection");
  sub_100187C90(a3, a4);

}

double sub_1001909E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController);
  if (v2)
  {
    swift_retain();
    sub_10038CF58();
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

uint64_t sub_100190A98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_10007E7C8(a1, v1);
  return UIMutableTraits.horizontalSizeClass.setter(1, v1, v2);
}

void sub_100190AD4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  const char *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  char **v22;
  char *v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  void *v33;
  uint64_t v34;
  id v35;
  void **aBlock;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  char v42[24];

  v1 = (int *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken, v42, 1, 0);
  if (*v1)
  {
    notify_cancel(*v1);
    *v1 = 0;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v2)
  {
    __break(1u);
    return;
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    v3 = *(id *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    v4 = objc_opt_self(FPExtensionCollection);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5)
    {
      v6 = objc_msgSend(v5, "settings");
      v7 = objc_msgSend(v6, "enumeratedItemID");

      v8 = objc_msgSend(v7, "providerID");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCLocalStorageFileProviderIdentifier);
      if (v9 == v12 && v11 == v13)
      {
        swift_bridgeObjectRelease_n(v11, 2);
      }
      else
      {
        v15 = v13;
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v15);
        if ((v16 & 1) == 0)
          goto LABEL_20;
      }
      v17 = (const char *)DOCDefaultSaveLocationDidChangeNotification;
      v18 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v19 = static OS_dispatch_queue.main.getter(v18);
      v20 = swift_allocObject(&unk_1005CBE18, 24, 7);
      swift_unknownObjectWeakInit(v20 + 16);
      v40 = sub_1001D06A4;
      v41 = v20;
      aBlock = _NSConcreteStackBlock;
      v37 = 1107296256;
      v38 = sub_10016C02C;
      v39 = &unk_1005CDAF0;
      v21 = _Block_copy(&aBlock);
      swift_release(v41);
      swift_beginAccess(v1, &aBlock, 33, 0);
      notify_register_dispatch(v17, v1, v19, v21);
      swift_endAccess(&aBlock);
      _Block_release(v21);

      v22 = (char **)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      v23 = *(char **)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
      {
        v24 = *(void **)&v23[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
        v25 = v24;
      }
      else
      {
        v26 = v23;
        v25 = objc_msgSend(v26, "itemFilteringPredicate");

        v24 = v25;
      }
      v27 = swift_allocObject(&unk_1005CDB28, 24, 7);
      *(_QWORD *)(v27 + 16) = v24;
      v40 = sub_1001D06AC;
      v41 = v27;
      aBlock = _NSConcreteStackBlock;
      v37 = 1107296256;
      v38 = sub_100068430;
      v39 = &unk_1005CDB40;
      v28 = _Block_copy(&aBlock);
      v29 = (void *)objc_opt_self(NSPredicate);
      v30 = v25;
      v31 = objc_msgSend(v29, "predicateWithBlock:", v28);
      _Block_release(v28);
      swift_release(v41);
      v32 = *v22;
      if (((_BYTE)v22[2] & 1) != 0)
      {
        v33 = *(void **)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
        *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v31;

        v3 = v33;
      }
      else
      {
        v34 = (uint64_t)v22[1];
        v35 = v31;
        sub_1000B0EFC(v32, v34, 0);
        swift_unknownObjectRelease(v34);
        objc_msgSend(v32, "setItemFilteringPredicate:", v35);

        v30 = v35;
        v3 = v35;
      }

    }
LABEL_20:

  }
}

void sub_100190EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (v6)
    {
      v7 = v6;
      sub_100162B10();

    }
    else
    {
      __break(1u);
    }
  }
}

BOOL sub_100190F1C(uint64_t a1, Class isa, void *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  _QWORD v40[3];
  uint64_t v41;

  if (!a3)
    goto LABEL_6;
  sub_1000271D4(a1, (uint64_t)v40, &qword_100642730);
  v6 = v41;
  if (v41)
  {
    v7 = sub_10007E7A0(v40, v41);
    v8 = *(_QWORD *)(v6 - 8);
    __chkstk_darwin(v7);
    v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    sub_100068588(v40);
    if (!isa)
      goto LABEL_5;
    goto LABEL_4;
  }
  v11 = 0;
  if (isa)
LABEL_4:
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
LABEL_5:
  v12 = objc_msgSend(a3, "evaluateWithObject:substitutionVariables:", v11, isa);
  swift_unknownObjectRelease(v11);

  if (!v12)
    return 0;
LABEL_6:
  sub_1000271D4(a1, (uint64_t)v40, &qword_100642730);
  if (!v41)
  {
    sub_10000CB4C((uint64_t)v40, &qword_100642730);
    return 0;
  }
  v13 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  if ((swift_dynamicCast(&v39, v40, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    return 0;
  v14 = v39;
  if (!objc_msgSend(v39, "isAppContainer"))
  {
LABEL_24:

    return 1;
  }
  v15 = objc_msgSend(v14, "fp_appContainerBundleIdentifier");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend((id)objc_opt_self(DOCDocumentSource), "defaultSourceIdentifierForBundleIdentifier:", v15);

    if (v17)
    {
      v18 = DOCDocumentSourceIdentifierLocal;
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v21 = v20;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v24 = v22;
      if (v19 == v23 && v21 == v22)
      {
        swift_bridgeObjectRelease_n(v21, 2);
LABEL_19:

        return 1;
      }
      v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v24);
      if ((v26 & 1) != 0)
        goto LABEL_19;
      v27 = DOCDocumentSourceIdentifierLocalAutomatic;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v30 = v29;
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v33 = v31;
      if (v28 == v32 && v30 == v31)
      {

        swift_bridgeObjectRelease_n(v30, 2);
        goto LABEL_24;
      }
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);

      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v33);
      if ((v34 & 1) != 0)
        goto LABEL_24;
    }
  }
  v35 = objc_msgSend(v14, "childItemCount");
  if (!v35)
  {

    return 0;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "integerValue");

  return (uint64_t)v37 > 0;
}

void *sub_100191290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100195148(a1);
  if ((v11 & 1) != 0)
    goto LABEL_10;
  if (IndexPath.count.getter(v11) != 2)
    goto LABEL_7;
  result = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (result)
  {
    if ((objc_msgSend(result, "isGathering") & 1) == 0
      && (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
      && (sub_100195148(a1) & 1) != 0)
    {
LABEL_7:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_9:
      sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
LABEL_10:
      v13 = 0;
      return (void *)(v13 & 1);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      goto LABEL_9;
    v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v15 = IndexPath.item.getter(v14);
    v16 = v15;
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
      else
        v21 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v2
                                         + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController
                                         + 8));
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v17);
      if (v16 < v22)
      {
LABEL_14:
        v18 = (void *)sub_10017A754((uint64_t)v10, 0);
        if (v18)
        {
          v19 = v18;
          v13 = sub_1001914E4(v18);
          v20 = swift_unknownObjectRelease(v19);
          (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v20);
          return (void *)(v13 & 1);
        }
      }
    }
    else if (v15 < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001914E4(void *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  int v15;
  uint64_t v16;

  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v16 - v9;
  if ((objc_msgSend(v1, "isEditing", v8) & 1) == 0
    && (objc_msgSend(a1, "isCopying") & 1) != 0)
  {
    return 1;
  }
  v12 = objc_msgSend(a1, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v12);

  static UTType.folder.getter(v13);
  LOBYTE(v12) = static UTType.== infix(_:_:)(v10, v6);
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v6, v3);
  v14(v10, v3);
  if ((v12 & 1) != 0
    && objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingDocuments")&& objc_msgSend(v1, "isEditing"))
  {
    v15 = v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
  }
  else
  {
    v15 = 1;
  }
  return sub_10007181C(a1) & v15;
}

void *sub_100191654(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *result;
  void (*v15)(char *, uint64_t, uint64_t);
  unsigned __int8 v16;
  void *v17;
  void *v18;
  unsigned __int8 v19;
  void (*v20)(char *, uint64_t);
  unsigned __int8 v21;
  __n128 v22;
  uint64_t v23;

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - v11;
  if (IndexPath.count.getter(v13) != 2)
    goto LABEL_6;
  result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (result)
  {
    if ((objc_msgSend(result, "isGathering") & 1) != 0
      || (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) == 0
      || (sub_100195148(a1) & 1) == 0)
    {
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v15(v5, a1, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
        v17 = (void *)sub_10017A754((uint64_t)v12, 0);
        if (v17)
        {
          v18 = v17;
          if ((v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0
            || !objc_msgSend(v17, "isFolder"))
          {
            v19 = objc_msgSend(v1, "isEditing");
            v15(v9, a1, v6);
            if ((v19 & 1) != 0)
            {
              v20 = *(void (**)(char *, uint64_t))(v7 + 8);
              v20(v9, v6);
            }
            else
            {
              v21 = sub_100195148((uint64_t)v9);
              v20 = *(void (**)(char *, uint64_t))(v7 + 8);
              v20(v9, v6);
              if ((v21 & 1) != 0)
              {
                v20(v12, v6);
                swift_unknownObjectRelease(v18);
                v16 = 1;
                return (void *)(v16 & 1);
              }
            }
            v16 = sub_100191290(a1);
            v22 = swift_unknownObjectRelease(v18);
            ((void (*)(char *, uint64_t, __n128))v20)(v12, v6, v22);
            return (void *)(v16 & 1);
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
          swift_unknownObjectRelease(v18);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        }
LABEL_9:
        v16 = 0;
        return (void *)(v16 & 1);
      }
LABEL_8:
      sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100642710);
      goto LABEL_9;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *sub_10019191C(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *result;
  unsigned __int8 v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  __n128 v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter(v11) != 2)
    goto LABEL_6;
  result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (result)
  {
    if ((objc_msgSend(result, "isGathering") & 1) != 0
      || (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) == 0
      || (sub_100195148(a1) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        v14 = (void *)sub_10017A754((uint64_t)v10, 0);
        if (v14)
        {
          v15 = v14;
          if ((v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) != 0)
          {
            v16 = objc_msgSend(v14, "isFolder");
            v17 = swift_unknownObjectRelease(v15);
            (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v17);
            if ((v16 & 1) != 0)
              goto LABEL_12;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
            swift_unknownObjectRelease(v15);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        }
LABEL_9:
        if ((objc_msgSend(v2, "isEditing") & 1) != 0)
        {
          v13 = 0;
          return (void *)(v13 & 1);
        }
        if ((sub_100195148(a1) & 1) == 0)
        {
          v13 = sub_100191290(a1);
          return (void *)(v13 & 1);
        }
LABEL_12:
        v13 = 1;
        return (void *)(v13 & 1);
      }
LABEL_8:
      sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
      goto LABEL_9;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100191B78()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 48, 7);
}

void sub_100191BBC(void *a1, uint64_t a2, void (*a3)(void))
{
  char *v4;

  v4 = a1;
  if (!objc_msgSend(v4, "isFirstResponder"))
    goto LABEL_4;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    a3();
LABEL_4:

    return;
  }
  __break(1u);
}

id sub_100191C18(void *a1, void *a2, char a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  id v23;
  id v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  NSObject *v34;
  uint64_t v35;
  char **v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  NSObject *v40;
  NSObject *v41;
  _QWORD *v42;
  uint64_t v43;
  _BYTE v45[12];
  int v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  NSObject *v50;
  uint64_t v51;

  v49 = a1;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v19 = &v45[-v18];
  v21 = Logger.UI.unsafeMutableAddressor(v20);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16);
  if ((a3 & 1) != 0)
  {
    v22(v16, v21, v13);
    v37 = v49;
    v27 = Logger.logObject.getter(v37);
    v38 = static os_log_type_t.debug.getter(v27);
    if (os_log_type_enabled(v27, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v39 = 138412290;
      v50 = v37;
      v40 = v37;
      v48 = v14;
      v41 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      v42 = v47;
      *v47 = v37;

      v14 = v48;
      _os_log_impl((void *)&_mh_execute_header, v27, v38, "converting cell geometry from: %@ to screen space", v39, 0xCu);
      v43 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v42, 1, v43);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v39, -1, -1);
      v26 = 0;
      v36 = &selRef_convertRect_toView_;
      v19 = v16;
    }
    else
    {

      v26 = 0;
      v27 = v37;
      v19 = v16;
      v36 = &selRef_convertRect_toView_;
    }
  }
  else
  {
    v22(v19, v21, v13);
    v23 = v49;
    v24 = a2;
    v25 = v23;
    v26 = v24;
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.debug.getter(v27);
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc(22, -1);
      v31 = swift_slowAlloc(16, -1);
      v47 = (_QWORD *)v13;
      v32 = (_QWORD *)v31;
      *(_DWORD *)v30 = 138412546;
      v48 = v14;
      v46 = v29;
      v50 = v25;
      v33 = v25;
      v14 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      *v32 = v25;

      *(_WORD *)(v30 + 12) = 2112;
      v50 = v26;
      v34 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      v32[1] = v26;

      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v46, "converting cell geometry from: %@ to view: %@", (uint8_t *)v30, 0x16u);
      v35 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v32, 2, v35);
      v13 = (uint64_t)v47;
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v30, -1, -1);
      v36 = &selRef_convertRect_toCoordinateSpace_;
      v26 = v34;
    }
    else
    {

      v36 = &selRef_convertRect_toCoordinateSpace_;
      v27 = v25;
    }
  }

  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
  return objc_msgSend(v49, *v36, v26, a4, a5, a6, a7);
}

void sub_100192008(void *a1, char *a2, uint64_t a3, void ***a4, void (*a5)(id, id, void *, void *, double, double, double, double), uint64_t a6, int a7, int a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  void *v40;
  id v41;
  uint64_t v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  Class isa;
  id v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  void ***p_aBlock;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void ***v57;
  void ***v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  uint8_t *v62;
  void **v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  void *object;
  Swift::String v73;
  void **v74;
  void *v75;
  void ***v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  Swift::String v80;
  void *v81;
  Swift::String v82;
  unint64_t v83;
  void **v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  void **v93;
  uint64_t v94;
  id v95;
  id v96;
  uint64_t v97;
  void *v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  id v111;
  uint64_t v112;
  char *v113;
  void ***v114;
  id v115;
  id v116;
  id v117;
  id v118;
  NSObject *v119;
  os_log_type_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  void **v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(id, id, void *, void *, double, double, double, double);
  uint64_t v139;
  char v140;
  void *v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t ObjectType;
  void **v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  void *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  void (*v167)(_QWORD *, _QWORD, uint64_t);
  uint64_t v168;
  char *v169;
  void (*v170)(_QWORD *, uint64_t);
  void (*v171)(char *, uint64_t);
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  _QWORD *v187;
  void **v188;
  uint64_t v189;
  void *v190;
  void ***v191;
  id v192;
  __n128 v193;
  __n128 v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  _QWORD *v215;
  _QWORD *v216;
  uint64_t v217;
  char *v218;
  int v219;
  char *v220;
  void *v221;
  void ***v222;
  void *v223;
  uint64_t v224;
  void (*v225)(id, id, void *, void *, double, double, double, double);
  uint64_t v226;
  void **v227;
  void ***v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char v234[8];
  void **aBlock;
  unint64_t v236;
  uint64_t (*v237)(uint64_t);
  void *v238;
  uint64_t (*v239)();
  _QWORD *v240;

  v219 = a8;
  LODWORD(v221) = a7;
  v226 = a6;
  v225 = a5;
  v222 = a4;
  v231 = a2;
  v217 = type metadata accessor for DispatchTimeInterval(0);
  v212 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v216 = (uint64_t *)((char *)&v196 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v215 = (uint64_t *)((char *)&v196 - v12);
  v214 = type metadata accessor for DispatchTime(0);
  v211 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin(v214);
  v210 = (char *)&v196 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v213 = (char *)&v196 - v15;
  v207 = type metadata accessor for DispatchWorkItemFlags(0);
  v206 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v205 = (char *)&v196 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = type metadata accessor for DispatchQoS(0);
  v203 = *(_QWORD *)(v204 - 8);
  v17 = __chkstk_darwin(v204);
  v202 = (char *)&v196 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for OS_dispatch_source.TimerFlags(0, v17);
  v200 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v196 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = (void ***)type metadata accessor for Logger(0);
  v230 = (uint64_t)*(v228 - 1);
  __chkstk_darwin(v228);
  v229 = (char *)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v220 = (char *)&v196 - v22;
  __chkstk_darwin(v23);
  v218 = (char *)&v196 - v24;
  v25 = type metadata accessor for IndexPath(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v209 = (char *)&v196 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v196 - v29;
  v224 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v224);
  v32 = (char *)&v196 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v196 - v34;
  v37 = __chkstk_darwin(v36);
  v39 = (char *)&v196 - v38;
  v40 = a1;
  v41 = objc_msgSend(a1, "indexPathsForVisibleItems", v37);
  v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v25);

  v43 = v231;
  swift_unknownObjectRetain(a3);
  v227 = v43;
  v223 = (void *)a3;
  sub_100174744(v42, v43, a3, v39);
  swift_bridgeObjectRelease(v42);
  v231 = v39;
  v44 = (uint64_t)v39;
  v45 = v26;
  sub_1000271D4(v44, (uint64_t)v35, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v35, 1, v25) == 1)
  {
    sub_10000CB4C((uint64_t)v35, (uint64_t *)&unk_100642710);
LABEL_11:
    aBlock = 0;
    v236 = 0xE000000000000000;
    p_aBlock = &aBlock;
    _StringGuts.grow(_:)(102);
    v69._object = (void *)0x8000000100515CD0;
    v69._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v69);
    v70._countAndFlagsBits = 0xD000000000000019;
    v70._object = (void *)0x8000000100515CF0;
    String.append(_:)(v70);
    sub_1000271D4((uint64_t)v231, (uint64_t)v32, (uint64_t *)&unk_100642710);
    v71._countAndFlagsBits = String.init<A>(describing:)(v32, v224);
    object = v71._object;
    String.append(_:)(v71);
    swift_bridgeObjectRelease(object);
    v73._countAndFlagsBits = 0xD00000000000002DLL;
    v73._object = (void *)0x8000000100515D10;
    String.append(_:)(v73);
    v74 = v227;
    objc_msgSend(v227, "loadViewIfNeeded");
    v75 = *(void **)((char *)v74 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    v76 = v228;
    if (v75)
    {
      v77 = objc_msgSend(v75, "indexPathsForVisibleItems");
      v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v77, v25);

      v79 = *(_QWORD *)(v78 + 16);
      swift_bridgeObjectRelease(v78);
      v233 = v79;
      v80._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v81 = v80._object;
      String.append(_:)(v80);
      swift_bridgeObjectRelease(v81);
      v82._countAndFlagsBits = 0xD00000000000001ALL;
      v82._object = (void *)0x8000000100515D40;
      String.append(_:)(v82);
      v84 = aBlock;
      v83 = v236;
      v85 = sub_10012B03C((uint64_t)aBlock, v236);
      v86 = Logger.UI.unsafeMutableAddressor(v85);
      v87 = v229;
      v88 = v230;
      (*(void (**)(char *, uint64_t, void ***))(v230 + 16))(v229, v86, v76);
      v89 = swift_bridgeObjectRetain(v83);
      v90 = Logger.logObject.getter(v89);
      v91 = static os_log_type_t.error.getter(v90);
      if (os_log_type_enabled(v90, v91))
      {
        v92 = (uint8_t *)swift_slowAlloc(12, -1);
        v93 = (void **)swift_slowAlloc(32, -1);
        aBlock = v93;
        *(_DWORD *)v92 = 136315138;
        swift_bridgeObjectRetain(v83);
        v233 = sub_1000544FC((uint64_t)v84, v83, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v234);
        swift_bridgeObjectRelease_n(v83, 3);
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "%s", v92, 0xCu);
        swift_arrayDestroy(v93, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v93, -1, -1);
        swift_slowDealloc(v92, -1, -1);

        (*(void (**)(char *, void ***))(v230 + 8))(v229, v76);
      }
      else
      {

        swift_bridgeObjectRelease_n(v83, 2);
        (*(void (**)(char *, void ***))(v88 + 8))(v87, v76);
      }
      v225(0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0);
LABEL_16:
      sub_10000CB4C((uint64_t)v231, (uint64_t *)&unk_100642710);
      return;
    }
    __break(1u);
LABEL_31:
    type metadata accessor for DOCServicePopoverTrackerRegion(0);
    v238 = v195;
    aBlock = (void **)p_aBlock;
    doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(&aBlock);
    __break(1u);
    return;
  }
  v46 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v46(v30, v35, v25);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v48 = objc_msgSend(v40, "cellForItemAtIndexPath:", isa);

  v49 = v30;
  if (!v48)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v25);
    goto LABEL_11;
  }
  v50 = type metadata accessor for DOCItemCollectionCell();
  v51 = (_QWORD *)swift_dynamicCastClass(v48, v50);
  v198 = v51;
  if (!v51)
  {

    goto LABEL_10;
  }
  v52 = v221 & 1;
  p_aBlock = v222;
  if (v222)
  {
    v94 = v230;
    if (v222 == (void ***)1)
    {
      v95 = sub_100195294(v40);
      v96 = objc_msgSend(v95, "window");

      if (v96)
      {
        v98 = v198;
        objc_msgSend(v198, "bounds");
        sub_100191C18(v98, v95, v52, v99, v100, v101, v102);
        v104 = v103;
        v106 = v105;
        v108 = v107;
        v110 = v109;
        v111 = v48;
        v225(0, 0, v98, 0, v104, v106, v108, v110);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v25);
      }
      else
      {
        v196 = v45;
        v112 = Logger.UI.unsafeMutableAddressor(v97);
        v113 = v218;
        v114 = v228;
        (*(void (**)(char *, uint64_t, void ***))(v94 + 16))(v218, v112, v228);
        v115 = v48;
        v116 = v95;
        v117 = v115;
        v118 = v116;
        v119 = Logger.logObject.getter(v118);
        v120 = static os_log_type_t.error.getter(v119);
        if (os_log_type_enabled(v119, v120))
        {
          v121 = swift_slowAlloc(32, -1);
          v224 = (uint64_t)v118;
          v122 = v198;
          v123 = v121;
          v124 = (_QWORD *)swift_slowAlloc(16, -1);
          v227 = (void **)swift_slowAlloc(32, -1);
          aBlock = v227;
          *(_DWORD *)v123 = 136315650;
          v233 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, (uint64_t *)&aBlock);
          v197 = v25;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v234);
          *(_WORD *)(v123 + 12) = 2112;
          v229 = v49;
          v233 = (uint64_t)v122;
          v125 = v117;
          v126 = v117;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v234);
          *v124 = v122;
          v118 = (id)v224;

          *(_WORD *)(v123 + 22) = 2112;
          v233 = (uint64_t)v118;
          v127 = v118;
          v25 = v197;
          v117 = v125;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v234);
          v124[1] = v118;

          v49 = v229;
          _os_log_impl((void *)&_mh_execute_header, v119, v120, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v123, 0x20u);
          v128 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v124, 2, v128);
          swift_slowDealloc(v124, -1, -1);
          v129 = v227;
          swift_arrayDestroy(v227, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v129, -1, -1);
          swift_slowDealloc(v123, -1, -1);

          (*(void (**)(char *, void ***))(v230 + 8))(v218, v228);
        }
        else
        {

          (*(void (**)(char *, void ***))(v94 + 8))(v113, v114);
        }
        v225(0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0);

        (*(void (**)(char *, uint64_t))(v196 + 8))(v49, v25);
      }
      goto LABEL_16;
    }
    goto LABEL_31;
  }
  LODWORD(v224) = v221 & 1;
  v218 = (char *)v46;
  v221 = v40;
  v229 = v30;
  v197 = v25;
  v54 = Logger.UI.unsafeMutableAddressor(v51);
  v55 = v230;
  v56 = v220;
  v57 = v228;
  (*(void (**)(char *, uint64_t, void ***))(v230 + 16))(v220, v54, v228);
  v58 = (void ***)v48;
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.debug.getter(v59);
  v61 = os_log_type_enabled(v59, v60);
  v222 = v58;
  if (v61)
  {
    v62 = (uint8_t *)swift_slowAlloc(12, -1);
    v63 = (void **)swift_slowAlloc(32, -1);
    aBlock = v63;
    *(_DWORD *)v62 = 136315138;
    v64 = (*(uint64_t (**)(void))((swift_isaMask & *v198) + 0x1F8))();
    if (v64)
    {
      v65 = (void *)v64;
      v66 = v45;
      v67 = (uint64_t *)(v64 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(v64 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v233, 0, 0);
      v68 = *v67;
      swift_unknownObjectRetain(v68);

    }
    else
    {
      v66 = v45;
      v68 = 0;
    }
    v232 = v68;
    v130 = sub_10006922C(&qword_100652EB0);
    v131 = String.init<A>(describing:)(&v232, v130);
    v133 = v132;
    v232 = sub_1000544FC(v131, v132, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v232, &v233);

    swift_bridgeObjectRelease(v133);
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v62, 0xCu);
    swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    swift_slowDealloc(v62, -1, -1);

    (*(void (**)(char *, void ***))(v230 + 8))(v220, v228);
    v45 = v66;
  }
  else
  {

    (*(void (**)(char *, void ***))(v55 + 8))(v56, v57);
  }
  v134 = swift_allocObject(&unk_1005CCE80, 17, 7);
  *(_BYTE *)(v134 + 16) = 0;
  v135 = swift_allocObject(&unk_1005CCE80, 17, 7);
  *(_BYTE *)(v135 + 16) = 0;
  v136 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v136 + 16);
  v137 = swift_allocObject(&unk_1005CCEA8, 72, 7);
  *(_QWORD *)(v137 + 16) = v136;
  *(_QWORD *)(v137 + 24) = v135;
  v138 = v225;
  v139 = v226;
  *(_QWORD *)(v137 + 32) = v225;
  *(_QWORD *)(v137 + 40) = v139;
  *(_QWORD *)(v137 + 48) = v134;
  v140 = v224;
  *(_BYTE *)(v137 + 56) = v224;
  v141 = v223;
  *(_QWORD *)(v137 + 64) = v223;
  if ((v219 & 1) != 0)
  {
    sub_10004F2F0(0, &qword_100646AD8, OS_dispatch_source_ptr);
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    swift_unknownObjectRetain(v141);
    swift_retain();
    swift_retain();
    swift_retain();
    v143 = (void *)static OS_dispatch_queue.main.getter(v142);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v144 = sub_10005A360(&qword_100646AE0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v145 = sub_10006922C(&qword_100646AE8);
    v196 = v45;
    v146 = v145;
    v147 = sub_100062698((unint64_t *)&unk_100646AF0, &qword_100646AE8, (uint64_t)&protocol conformance descriptor for [A]);
    v148 = v134;
    v149 = v199;
    v150 = v146;
    v151 = v201;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v150, v147, v201, v144);
    v152 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v149, v143);

    (*(void (**)(char *, uint64_t))(v200 + 8))(v149, v151);
    v153 = v152;
    ObjectType = swift_getObjectType(v152);
    v155 = (void **)v137;
    v156 = ObjectType;
    v157 = (_QWORD *)swift_allocObject(&unk_1005CCED0, 48, 7);
    v230 = v148;
    v157[2] = v148;
    v157[3] = sub_1001CFA88;
    v227 = v155;
    v158 = v198;
    v157[4] = v155;
    v157[5] = v158;
    v239 = sub_1001CFA90;
    v240 = v157;
    aBlock = _NSConcreteStackBlock;
    v236 = 1107296256;
    v237 = sub_10004A82C;
    v238 = &unk_1005CCEE8;
    v159 = _Block_copy(&aBlock);
    v228 = v222;
    swift_retain();
    swift_retain();
    v160 = v202;
    static DispatchQoS.unspecified.getter(v161);
    v162 = v205;
    sub_100193FCC();
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v160, v162, v159, v156);
    _Block_release(v159);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v162, v207);
    (*(void (**)(char *, uint64_t))(v203 + 8))(v160, v204);
    swift_release(v240);
    v224 = v153;
    OS_dispatch_source.resume()();
    v163 = v210;
    static DispatchTime.now()(v164);
    v226 = v135;
    v165 = v215;
    *v215 = 250;
    v166 = v212;
    v167 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v212 + 104);
    v168 = v217;
    v167(v165, enum case for DispatchTimeInterval.milliseconds(_:), v217);
    v169 = v213;
    + infix(_:_:)(v163, v165);
    v170 = *(void (**)(_QWORD *, uint64_t))(v166 + 8);
    v170(v165, v168);
    v171 = *(void (**)(char *, uint64_t))(v211 + 8);
    v172 = v214;
    v171(v163, v214);
    v167(v165, enum case for DispatchTimeInterval.never(_:), v168);
    v173 = v216;
    *v216 = 0;
    v167(v173, enum case for DispatchTimeInterval.nanoseconds(_:), v168);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v169, v165, v173, v156);
    v170(v173, v168);
    v170(v165, v168);
    v171(v169, v172);
    v225 = (void (*)(id, id, void *, void *, double, double, double, double))swift_getObjectType(v223);
    v174 = v196;
    v175 = v209;
    v176 = v197;
    (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v209, v229, v197);
    v177 = *(unsigned __int8 *)(v174 + 80);
    v178 = (v177 + 24) & ~v177;
    v179 = (v208 + v178 + 7) & 0xFFFFFFFFFFFFFFF8;
    v180 = (v179 + 15) & 0xFFFFFFFFFFFFFFF8;
    v181 = (v180 + 23) & 0xFFFFFFFFFFFFFFF8;
    v182 = (v181 + 15) & 0xFFFFFFFFFFFFFFF8;
    v183 = (v182 + 15) & 0xFFFFFFFFFFFFFFF8;
    v184 = swift_allocObject(&unk_1005CCF20, v183 + 8, v177 | 7);
    v185 = v221;
    *(_QWORD *)(v184 + 16) = v221;
    ((void (*)(uint64_t, char *, uint64_t))v218)(v184 + v178, v175, v176);
    v186 = v224;
    *(_QWORD *)(v184 + v179) = v224;
    v187 = (_QWORD *)(v184 + v180);
    v189 = v226;
    v188 = v227;
    *v187 = sub_1001CFA88;
    v187[1] = v188;
    *(_QWORD *)(v184 + v181) = v198;
    v190 = v223;
    *(_QWORD *)(v184 + v182) = v223;
    *(_QWORD *)(v184 + v183) = v189;
    swift_unknownObjectRetain(v190);
    v191 = v228;
    swift_retain();
    swift_retain();
    v192 = v185;
    swift_unknownObjectRetain(v186);
    DOCNode.fpfs_fetchFPItem(completion:)(sub_1001CFA98, v184, v225);

    swift_release(v188);
    swift_unknownObjectRelease(v186);
    v193 = swift_release(v184);
    (*(void (**)(char *, uint64_t, __n128))(v196 + 8))(v229, v197, v193);
    sub_10000CB4C((uint64_t)v231, (uint64_t *)&unk_100642710);
    swift_release(v230);
    swift_release(v189);
  }
  else
  {
    swift_unknownObjectRetain(v141);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100193400(v198, v136, v135, v138, v139, v134, v140, v141);

    swift_release(v136);
    v194 = swift_release(v137);
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v229, v197, v194);
    sub_10000CB4C((uint64_t)v231, (uint64_t *)&unk_100642710);
    swift_release(v134);
    swift_release(v135);
  }
}

void sub_100193400(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, id, void *, void *, double, double, double, double), uint64_t a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *Strong;
  NSObject *v26;
  id v27;
  void *v28;
  id v29;
  double v30;
  id v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(NSObject *, uint64_t, uint64_t);
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  void *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (**v49)(_QWORD, _QWORD);
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  id v53;
  id v54;
  NSObject *v55;
  NSObject *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  NSObject **v60;
  NSObject *v61;
  NSObject *v62;
  NSObject *v63;
  os_log_t v64;
  uint64_t v65;
  char *v66;
  os_log_t v67;
  _QWORD *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  void *v73;
  uint64_t *v74;
  uint64_t v75;
  void (*v76)(os_log_t, uint64_t);
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  os_log_t v82;
  os_log_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  os_log_t v88;
  void *v89;
  unint64_t v90;
  char *v91;
  double v92;
  void *v93;
  id v94;
  double v95;
  double v96;
  double v97;
  double v98;
  NSObject *v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  id v117;
  uint64_t v118;
  NSObject *v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint8_t *v123;
  NSObject **v124;
  NSObject *v125;
  uint64_t v126;
  NSObject **v127;
  uint8_t *v128;
  void (*v129)(id, id, void *, void *, double, double, double, double);
  id v130;
  void *v131;
  os_log_t v132;
  void (*v133)(os_log_t, uint64_t);
  id v134;
  void *v135;
  os_log_t v136;
  uint64_t v137;
  void (*v138)(id, id, void *, void *, double, double, double, double);
  NSObject *v139;
  char *v140;
  id v141;
  uint64_t v142;
  _BYTE v143[24];
  uint64_t v144;
  os_log_t v145;
  _BYTE v146[16];
  uint64_t v147[3];
  char v148[24];
  char v149[32];

  v141 = a1;
  v142 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v17 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v140 = (char *)&v132 - v19;
  __chkstk_darwin(v20);
  v136 = (os_log_t)((char *)&v132 - v21);
  __chkstk_darwin(v22);
  v24 = ((char *)&v132 - v23);
  a2 += 16;
  swift_beginAccess(a2, v149, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v26 = Strong;
    v135 = a8;
    v137 = a5;
    v138 = a4;
    v27 = -[NSObject view](Strong, "view");
    if (!v27)
    {
      __break(1u);
      return;
    }
    v28 = v27;
    v29 = sub_100195294(v27);

    *(_QWORD *)&v30 = swift_beginAccess(a3 + 16, v148, 1, 0).n128_u64[0];
    *(_BYTE *)(a3 + 16) = 1;
    v31 = objc_msgSend(v29, "window", v30);

    if (!v31)
    {
      v48 = Logger.UI.unsafeMutableAddressor(v32);
      v49 = (void (**)(_QWORD, _QWORD))v15;
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      v51 = v17;
      v52 = v142;
      v50(v17, v48, v142);
      v53 = v141;
      v54 = v29;
      v55 = v53;
      v56 = v54;
      v57 = Logger.logObject.getter(v56);
      v58 = static os_log_type_t.error.getter(v57);
      if (os_log_type_enabled(v57, v58))
      {
        v59 = swift_slowAlloc(32, -1);
        v60 = (NSObject **)swift_slowAlloc(16, -1);
        v140 = (char *)swift_slowAlloc(32, -1);
        v147[0] = (uint64_t)v140;
        *(_DWORD *)v59 = 136315650;
        v139 = v26;
        v145 = (os_log_t)sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, v147);
        v141 = v49;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
        *(_WORD *)(v59 + 12) = 2112;
        v145 = v55;
        v61 = v55;
        v136 = v57;
        v62 = v61;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
        *v60 = v55;

        *(_WORD *)(v59 + 22) = 2112;
        v145 = v56;
        v63 = v56;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
        v60[1] = v56;

        v26 = v139;
        v64 = v136;
        _os_log_impl((void *)&_mh_execute_header, v136, v58, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v59, 0x20u);
        v65 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v60, 2, v65);
        swift_slowDealloc(v60, -1, -1);
        v66 = v140;
        swift_arrayDestroy(v140, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v66, -1, -1);
        swift_slowDealloc(v59, -1, -1);

        (*((void (**)(char *, uint64_t))v141 + 1))(v51, v142);
      }
      else
      {

        ((void (**)(char *, uint64_t))v49)[1](v51, v52);
      }
      v138(0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0);
      goto LABEL_33;
    }
    v134 = v29;
    v139 = v26;
    LODWORD(v133) = a7 & 1;
    swift_beginAccess(a6 + 16, v147, 0, 0);
    v33 = *(unsigned __int8 *)(a6 + 16);
    v35 = Logger.UI.unsafeMutableAddressor(v34);
    v36 = v15;
    v37 = *(void (**)(NSObject *, uint64_t, uint64_t))(v15 + 16);
    v38 = v142;
    v39 = v141;
    if (v33 == 1)
    {
      v37(v24, v35, v142);
      v40 = v39;
      v41 = Logger.logObject.getter(v40);
      v42 = static os_log_type_t.debug.getter(v41);
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc(12, -1);
        v136 = (os_log_t)swift_slowAlloc(32, -1);
        v145 = v136;
        *(_DWORD *)v43 = 136315138;
        v44 = (*(uint64_t (**)(void))((swift_isaMask & *v40) + 0x1F8))();
        if (v44)
        {
          v45 = (void *)v44;
          v46 = (uint64_t *)(v44 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess(v44 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v143, 0, 0);
          v47 = *v46;
          swift_unknownObjectRetain(v47);

        }
        else
        {
          v47 = 0;
        }
        v144 = v47;
        v78 = sub_10006922C(&qword_100652EB0);
        v79 = String.init<A>(describing:)(&v144, v78);
        v81 = v80;
        v144 = sub_1000544FC(v79, v80, (uint64_t *)&v145);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, &v145);

        swift_bridgeObjectRelease(v81);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Timed out (250ms) re-fetching thumbnail for %s", v43, 0xCu);
        v82 = v136;
        swift_arrayDestroy(v136, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v82, -1, -1);
        swift_slowDealloc(v43, -1, -1);

        v76 = *(void (**)(os_log_t, uint64_t))(v36 + 8);
        v83 = v24;
LABEL_22:
        v38 = v142;
        v76(v83, v142);
        v77 = v134;
        v39 = v141;
        goto LABEL_23;
      }

      v76 = *(void (**)(os_log_t, uint64_t))(v36 + 8);
      v76(v24, v38);
    }
    else
    {
      v67 = v136;
      v37(v136, v35, v142);
      v68 = v39;
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.debug.getter(v69);
      if (os_log_type_enabled(v69, v70))
      {
        v71 = (uint8_t *)swift_slowAlloc(12, -1);
        v132 = (os_log_t)swift_slowAlloc(32, -1);
        v145 = v132;
        *(_DWORD *)v71 = 136315138;
        v72 = (*(uint64_t (**)(void))((swift_isaMask & *v68) + 0x1F8))();
        if (v72)
        {
          v73 = (void *)v72;
          v74 = (uint64_t *)(v72 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess(v72 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v143, 0, 0);
          v75 = *v74;
          swift_unknownObjectRetain(v75);

        }
        else
        {
          v75 = 0;
        }
        v144 = v75;
        v84 = sub_10006922C(&qword_100652EB0);
        v85 = String.init<A>(describing:)(&v144, v84);
        v87 = v86;
        v144 = sub_1000544FC(v85, v86, (uint64_t *)&v145);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, &v145);

        swift_bridgeObjectRelease(v87);
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "Updated thumbnail for %s", v71, 0xCu);
        v88 = v132;
        swift_arrayDestroy(v132, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v88, -1, -1);
        swift_slowDealloc(v71, -1, -1);

        v76 = *(void (**)(os_log_t, uint64_t))(v36 + 8);
        v83 = v67;
        goto LABEL_22;
      }

      v76 = *(void (**)(os_log_t, uint64_t))(v36 + 8);
      v76(v67, v38);
    }
    v77 = v134;
LABEL_23:
    v89 = *(void **)((char *)v39 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    v90 = objc_msgSend(v89, "addDecoration");
    v91 = (char *)v139 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode;
    *(_QWORD *)&v92 = swift_beginAccess((char *)v139 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, &v145, 0, 0).n128_u64[0];
    if ((unint64_t)(*(_QWORD *)v91 - 1) >= 2)
      v93 = (void *)v90;
    else
      v93 = (void *)(v90 | 2);
    v141 = v93;
    v94 = objc_msgSend(v89, "layoutIfNeeded", v92);
    v95 = (*(double (**)(id))((swift_isaMask & *v39) + 0x100))(v94);
    sub_100191C18(v39, v77, (char)v133, v95, v96, v97, v98);
    v136 = v99;
    v101 = v100;
    v103 = v102;
    v105 = v104;
    objc_msgSend(v89, "_continuousCornerRadius");
    v107 = v106;
    objc_msgSend(v89, "bounds");
    v112 = v110;
    v113 = v111;
    if (v107 <= 0.0)
    {
      v117 = sub_1001BD5E0(v135, v110, v111);
    }
    else
    {
      v114 = v108;
      v115 = v109;
      objc_msgSend(v89, "_continuousCornerRadius");
      v117 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v114, v115, v112, v113, v116);
    }
    v135 = v117;
    v118 = Logger.UI.unsafeMutableAddressor(v117);
    v37(v140, v118, v38);
    v119 = v39;
    v120 = Logger.logObject.getter(v119);
    v121 = static os_log_type_t.debug.getter(v120);
    if (os_log_type_enabled(v120, v121))
    {
      v122 = swift_slowAlloc(12, -1);
      v133 = v76;
      v123 = (uint8_t *)v122;
      v124 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v123 = 138412290;
      v144 = (uint64_t)v119;
      v125 = v119;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, &v145);
      *v124 = v119;

      v77 = v134;
      _os_log_impl((void *)&_mh_execute_header, v120, v121, "calling completion block with cell %@", v123, 0xCu);
      v126 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v124, 1, v126);
      v127 = v124;
      v38 = v142;
      swift_slowDealloc(v127, -1, -1);
      v128 = v123;
      v76 = v133;
      swift_slowDealloc(v128, -1, -1);
    }
    else
    {

      v120 = v119;
    }
    v129 = v138;

    v76((os_log_t)v140, v38);
    v130 = objc_msgSend(v89, "image");
    v131 = v135;
    v56 = v135;
    v129(v130, v141, v89, v131, *(double *)&v136, v101, v103, v105);

    v26 = v56;
LABEL_33:

  }
}

uint64_t sub_100193FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_10006922C((uint64_t *)&unk_100647540);
  v3 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

void sub_100194080(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  __n128 v37;
  void *v38;
  void *v39;
  char *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a6;
  v49 = a5;
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v45 = a9;
    v43 = v15;
    v19 = objc_opt_self(FPItemManager);
    v44 = a4;
    v20 = (void *)v19;
    v47 = a1;
    v46 = objc_msgSend(v20, "defaultManager");
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v15);
    v21 = *(unsigned __int8 *)(v16 + 80);
    v22 = (v21 + 24) & ~v21;
    v23 = (v17 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = a7;
    v42 = a8;
    v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
    v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    v40 = v18;
    v27 = v48;
    v28 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject(&unk_1005CCF48, v28 + 8, v21 | 7);
    *(_QWORD *)(v29 + 16) = a2;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v29 + v22, v40, v43);
    v31 = v44;
    v30 = v45;
    *(_QWORD *)(v29 + v23) = v44;
    v32 = (_QWORD *)(v29 + v24);
    *v32 = v49;
    v32[1] = v27;
    v34 = v41;
    v33 = v42;
    *(_QWORD *)(v29 + v25) = v41;
    *(_QWORD *)(v29 + v26) = v33;
    *(_QWORD *)(v29 + v28) = v30;
    v35 = a2;
    swift_unknownObjectRetain(v31);
    swift_retain();
    v36 = v34;
    swift_unknownObjectRetain(v33);
    v37 = swift_retain();
    v38 = v46;
    v39 = v47;
    FPItemManager.doc_refetchItem(_:completion:)(v47, sub_1001CFAA0, v29, v37);
    swift_release(v29);

  }
}

void sub_100194258(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v47 = a7;
  v48 = a8;
  v45 = a6;
  v46 = a2;
  v49 = a3;
  v43 = a1;
  v44 = a10;
  v41 = a5;
  v42 = a9;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v12 + 16))(v15, a4, v14);
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = (v16 + 24) & ~v16;
  v39 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_1005CCF70, v23 + 8, v16 | 7);
  *(_QWORD *)(v24 + 16) = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v24 + v17, v15, v40);
  v25 = v41;
  *(_QWORD *)(v24 + v39) = v41;
  v26 = (_QWORD *)(v24 + v18);
  v28 = v47;
  v27 = v48;
  *v26 = v45;
  v26[1] = v28;
  *(_QWORD *)(v24 + v19) = v27;
  v29 = v42;
  v30 = v43;
  *(_QWORD *)(v24 + v20) = v43;
  *(_QWORD *)(v24 + v21) = v29;
  v31 = v46;
  *(_QWORD *)(v24 + v22) = v46;
  *(_QWORD *)(v24 + v23) = v44;
  aBlock[4] = sub_1001CFC54;
  v51 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CCF88;
  v32 = _Block_copy(aBlock);
  v33 = v51;
  v34 = v31;
  swift_retain();
  v35 = v49;
  swift_unknownObjectRetain(v25);
  swift_retain();
  v36 = v27;
  v37 = v30;
  swift_unknownObjectRetain(v29);
  swift_release(v33);
  DOCRunInMainThread(v32);
  _Block_release(v32);
}

void sub_100194454(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Class isa;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  _DWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  _DWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  os_log_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  _DWORD *v57;
  os_log_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65[3];
  uint64_t v66;
  uint64_t v67;

  v64 = a4;
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (!v21)
    goto LABEL_7;
  v63 = a5;
  v22 = type metadata accessor for DOCItemCollectionCell();
  v23 = (_QWORD *)swift_dynamicCastClass(v21, v22);
  if (!v23)
  {

LABEL_7:
    swift_getObjectType(a3);
    OS_dispatch_source.cancel()();
    v64(a6);
    return;
  }
  v24 = v23;
  if (a7)
  {
    v25 = (*(uint64_t (**)(void))((swift_isaMask & *v23) + 0x1F8))();
    if (v25)
    {
      v26 = (void *)v25;
      v27 = (uint64_t *)(v25 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(v25 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v65, 1, 0);
      v28 = *v27;
      *v27 = (uint64_t)a7;
      v29 = a7;
      swift_unknownObjectRelease(v28);
      sub_10007804C();

    }
  }
  else
  {
    v30 = Logger.UI.unsafeMutableAddressor(v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v30, v16);
    v61 = (uint64_t)a9;
    v31 = a9;
    swift_unknownObjectRetain_n(a8, 2);
    v62 = v31;
    v32 = Logger.logObject.getter(v62);
    v33 = static os_log_type_t.error.getter(v32);
    v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      v35 = (_DWORD *)swift_slowAlloc(22, -1);
      v60 = swift_slowAlloc(64, -1);
      v65[0] = v60;
      *v35 = 136315394;
      v56 = v35;
      v57 = v35 + 1;
      v36 = objc_msgSend(a8, "displayName");
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v58 = v32;
      v38 = v37;
      v59 = v34;
      v40 = v39;

      v41 = sub_1000544FC(v38, v40, v65);
      v42 = v56;
      v66 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      swift_unknownObjectRelease_n(a8, 2);
      swift_bridgeObjectRelease(v40);
      v43 = v42;
      *((_WORD *)v42 + 6) = 2080;
      v66 = v61;
      v44 = v62;
      v45 = sub_10006922C((uint64_t *)&unk_100646AC0);
      v46 = String.init<A>(describing:)(&v66, v45);
      v48 = v47;
      v66 = sub_1000544FC(v46, v47, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);

      swift_bridgeObjectRelease(v48);
      v49 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v59, "Could not refetch %s: %s", (uint8_t *)v42, 0x16u);
      v50 = v60;
      swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

      v51 = v62;
      swift_unknownObjectRelease_n(a8, 2);
    }
    v25 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v52 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v24) + 0x1F8))(v25);
  if (v52)
  {
    v53 = (void *)v52;
    swift_unknownObjectRetain(a3);
    swift_retain();
    v54 = v63;
    swift_retain();
    v21 = v21;
    sub_1004B0974((uint64_t)v53, a3, a10, v64, v54, v24);

    swift_unknownObjectRelease(a3);
    swift_release(a10);
    swift_release(v54);

  }
}

uint64_t sub_10019489C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t (*v20)(_QWORD);
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  char v26[24];

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = (_BYTE *)(a2 + 16);
  v15 = Logger.UI.unsafeMutableAddressor(v11);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15, v9);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    v25 = a5;
    v20 = a3;
    v21 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "thumbnail updated", v19, 2u);
    v22 = v21;
    a3 = v20;
    a5 = v25;
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_getObjectType(a1, v23);
  OS_dispatch_source.cancel()();
  result = swift_beginAccess(v14, v26, 0, 0);
  if ((*v14 & 1) == 0)
    return a3(a5);
  return result;
}

void sub_100194A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  id v9;
  char v10;
  _BYTE v12[24];

  v2 = type metadata accessor for OSSignpostID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = static os_signpost_type_t.event.getter(Strong);
    v9 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
    static OSSignpostID.exclusive.getter();
    v10 = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v8, &_mh_execute_header, v9, "Files-PPT", 9, 2, v5, "notify report did Load with visible cells", 41, v10, _swiftEmptyArrayStorage);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_100098F90();

  }
}

void sub_100194B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100098F90();

  }
}

void sub_100194B88()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  Class isa;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v2 = v1;
  v20 = objc_msgSend(v1, "superview");

  v3 = v20;
  if (v20)
  {
    v4 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView;
    if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView])
    {
LABEL_8:

      return;
    }
    v5 = objc_msgSend(v0, "view");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "bounds");
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

      v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionLoadingView()), "initWithFrame:", v8, v10, v12, v14);
      objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v20, "addSubview:", v15);
      isa = (Class)(id)DOCConstraintsToResizeWithSuperview(v15, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
      if (!isa)
      {
        v17 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
        v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v17);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v18);
      }
      objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "activateConstraints:", isa);

      v19 = *(void **)&v0[v4];
      *(_QWORD *)&v0[v4] = v15;

      v3 = v19;
      goto LABEL_8;
    }
    goto LABEL_11;
  }
}

void sub_100194D68()
{
  sub_100194D78(0);
}

void sub_100194D70()
{
  sub_100194D78(1);
}

void sub_100194D78(char a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier");
  v4 = DOCDocumentSourceIdentifierSearch;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);

    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    if ((v12 & 1) == 0)
    {
      sub_100194B88();
      v13 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView;
      v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView);
      if (v14)
      {
        objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_stackView), "setHidden:", a1 & 1);
        v15 = *(void **)(v1 + v13);
        if (v15)
          objc_msgSend(v15, "setHidden:", 0);
      }
    }
  }
}

void sub_100194E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1;
  v3 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  static os_log_type_t.debug.getter();
  v4 = sub_10006922C((uint64_t *)&unk_100644560);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v5 + 56) = &type metadata for UInt;
  *(_QWORD *)(v5 + 64) = &protocol witness table for UInt;
  *(_QWORD *)(v5 + 32) = v2;
  os_log(_:dso:log:type:_:)("Updating items origin on collection view, since it has changed in the item collection: %ld", v30);

  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v5).n128_u64[0];
  v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v7 && (v8 = objc_msgSend(v7, "preparedCells", v6)) != 0)
  {
    v9 = v8;
    v10 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

    if ((unint64_t)v11 >> 62)
      goto LABEL_4;
  }
  else
  {
    v11 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_4:
      if (v11 < 0)
        v12 = v11;
      else
        v12 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v13 = _CocoaArrayWrapper.endIndex.getter(v12);
      swift_bridgeObjectRelease(v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_11;
    }
  }
  v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v13)
  {
LABEL_28:
    swift_bridgeObjectRelease(v11);
    return;
  }
LABEL_11:
  v14 = v11 & 0xC000000000000001;
  v15 = 4;
  v31 = v11;
  while (1)
  {
    v16 = v14 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v11) : *(id *)(v11 + 8 * v15);
    v17 = v16;
    v18 = v15 - 3;
    if (__OFADD__(v15 - 4, 1))
      break;
    v19 = type metadata accessor for DOCItemCollectionCell();
    v20 = (_QWORD *)swift_dynamicCastClass(v17, v19);
    if (v20)
    {
      v21 = (*(uint64_t (**)(void))((swift_isaMask & *v20) + 0x1F8))();
      if (v21)
      {
        v22 = (char *)v21;
        v23 = v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin;
        v24 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin);
        v25 = *(_BYTE *)(v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin + 8);
        *(_QWORD *)v23 = v2;
        *(_BYTE *)(v23 + 8) = 0;
        if ((v25 & 1) != 0 || v24 != v2)
        {
          v26 = v2;
          v27 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
          v28 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
          if ((v28 & 1) == 0)
          {
            v28 |= 1uLL;
            *(_QWORD *)(v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v28;
          }
          if (!*(_QWORD *)(v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
            && !sub_10007BAFC())
          {
            *(_QWORD *)&v22[v27] = 0;
            v29 = objc_autoreleasePoolPush();
            sub_10006D2D4(v28, (uint64_t)v22);
            objc_autoreleasePoolPop(v29);
          }
          v2 = v26;
          v11 = v31;
        }

      }
    }

    ++v15;
    if (v18 == v13)
      goto LABEL_28;
  }
  __break(1u);
}

void *sub_100195148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *result;
  void (*v11)(char *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  _BOOL8 v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v17 - v8;
  result = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!result)
  {
    __break(1u);
    return result;
  }
  if (objc_msgSend(result, "isGathering"))
  {
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v11(v9, a1, v3);
LABEL_6:
    v14 = 0;
    goto LABEL_7;
  }
  v12 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v13 = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v9, a1, v3);
  if (v12 != 1)
    goto LABEL_6;
  v14 = IndexPath.item.getter(v13) == 0;
LABEL_7:
  v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v9, v3);
  v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v7, a1, v3);
  if (v14)
    v14 = IndexPath.section.getter(v16) == 0;
  v15(v7, v3);
  return (void *)v14;
}

id sub_100195294(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v1 = objc_msgSend(a1, "superview");
  if (!v1)
    return a1;
  v2 = v1;
  v3 = (void *)sub_100195294();

  v4 = type metadata accessor for DOCServiceView();
  if (swift_dynamicCastClass(v3, v4))
    return v3;
  v5 = objc_opt_self(DOCTabbedBrowserView);
  if (swift_dynamicCastObjCClass(v3, v5))
    return v3;
  v7 = a1;

  return v7;
}

_BYTE *sub_100195350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  _BYTE *result;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  _BYTE *v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  _BYTE *v43;
  void (*v44)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v45;
  _BYTE *v46;
  int v47;
  _BYTE *v48;
  uint64_t v49;
  BOOL v50;
  int v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  void (*v60)(uint64_t, uint64_t);
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[12];
  int v65;
  void (*v66)(_BYTE *, uint64_t);
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _BYTE *v84;

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  v4 = __chkstk_darwin(v3);
  v6 = &v64[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v79 = &v64[-v7];
  v8 = type metadata accessor for IndexPath(0);
  v82 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = &v64[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v9);
  v14 = &v64[-v13];
  v15 = __chkstk_darwin(v12);
  v17 = &v64[-v16];
  v18 = __chkstk_darwin(v15);
  v77 = &v64[-v19];
  __chkstk_darwin(v18);
  v21 = &v64[-v20];
  v75 = v1;
  v22 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v22)
    return 0;
  v80 = v22;
  result = objc_msgSend(v80, "preparedCells");
  if (!result)
    goto LABEL_54;
  v24 = result;
  v25 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

  v81 = v26;
  if ((unint64_t)v26 >> 62)
  {
LABEL_45:
    if (v26 < 0)
      v62 = v26;
    else
      v62 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v63 = _CocoaArrayWrapper.endIndex.getter(v62);
    swift_bridgeObjectRelease(v26);
    v78 = (_BYTE *)v63;
    if (v63)
      goto LABEL_5;
    goto LABEL_49;
  }
  v78 = *(_BYTE **)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v78)
  {
LABEL_49:

    v61 = (_BYTE *)v81;
LABEL_50:
    swift_bridgeObjectRelease(v61);
    return 0;
  }
LABEL_5:
  v76 = v21;
  v68 = v14;
  v69 = v17;
  v67 = v11;
  v74 = v6;
  v72 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
  v70 = a1;
  v71 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
  v11 = (_BYTE *)v81;
  a1 = v82;
  v83 = v81 & 0xC000000000000001;
  v27 = 4;
  v14 = v78;
  while (1)
  {
    v26 = v27 - 4;
    if (v83)
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27 - 4, v11);
    else
      v28 = *(id *)&v11[8 * v27];
    v29 = v28;
    v21 = (_BYTE *)(v27 - 3);
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    v30 = type metadata accessor for DOCItemCollectionCell();
    v31 = swift_dynamicCastClass(v29, v30);
    if (v31)
      break;

LABEL_7:
    ++v27;
    if (v21 == v14)
    {

      v61 = v11;
      goto LABEL_50;
    }
  }
  v6 = (_BYTE *)v31;
  v32 = v29;
  v33 = objc_msgSend(v80, "indexPathForCell:", v6);
  if (!v33)
  {
    v36 = (uint64_t)v79;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(a1 + 56))(v79, 1, 1, v8);
    goto LABEL_22;
  }
  v34 = v33;
  v35 = v77;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v33);

  v17 = *(_BYTE **)(a1 + 32);
  v36 = (uint64_t)v79;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v17)(v79, v35, v8);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 56);
  v37(v36, 0, 1, v8);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(a1 + 48);
  if (v38(v36, 1, v8) == 1)
  {
LABEL_22:

    sub_10000CB4C(v36, (uint64_t *)&unk_100642710);
    goto LABEL_23;
  }
  v39 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v17)(v76, v36, v8);
  result = (_BYTE *)IndexPath.count.getter(v39);
  if (result != (_BYTE *)2)
  {
LABEL_35:
    v45 = (uint64_t)v74;
    v37((uint64_t)v74, 1, 1, v8);
    a1 = v82;
    v46 = v76;
    goto LABEL_36;
  }
  v40 = *(void **)(v75 + v72);
  if (v40)
  {
    if ((objc_msgSend(v40, "isGathering") & 1) != 0 || (*(_BYTE *)(v75 + v71) & 1) == 0)
    {
      a1 = v82;
      v44 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v82 + 16);
      v45 = (uint64_t)v74;
      v73 = v38;
      v46 = v76;
      v44(v74, v76, v8);
      v37(v45, 0, 1, v8);
      if (v73(v45, 1, v8) == 1)
      {
LABEL_36:
        (*(void (**)(_BYTE *, uint64_t))(a1 + 8))(v46, v8);

        sub_10000CB4C(v45, (uint64_t *)&unk_100642710);
        goto LABEL_37;
      }
    }
    else
    {
      if (objc_msgSend(v40, "isGathering"))
      {
        v41 = v82;
        v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
        v42((uint64_t)v68, (uint64_t)v76, v8);
        v43 = v68;
        v65 = 0;
      }
      else
      {
        v47 = *(unsigned __int8 *)(v75 + v71);
        v48 = v68;
        v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
        v49 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v73)(v68, v76, v8);
        if (v47 == 1)
        {
          v50 = IndexPath.item.getter(v49) == 0;
          v43 = v48;
          v51 = v50;
          v65 = v51;
          v41 = v82;
        }
        else
        {
          v65 = 0;
          v41 = v82;
          v43 = v48;
        }
        v42 = v73;
      }
      v66 = *(void (**)(_BYTE *, uint64_t))(v41 + 8);
      v66(v43, v8);
      v52 = v67;
      v73 = v42;
      v53 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v42)(v67, v76, v8);
      if (v65)
      {
        v54 = IndexPath.section.getter(v53);
        v66(v52, v8);
        if (!v54)
          goto LABEL_35;
      }
      else
      {
        v66(v52, v8);
      }
      v45 = (uint64_t)v74;
      v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
      v46 = v76;
      v73((uint64_t)v74, (uint64_t)v76, v8);
      v37(v45, 0, 1, v8);
      v56 = v55(v45, 1, v8);
      a1 = v82;
      if (v56 == 1)
        goto LABEL_36;
    }
    v57 = (uint64_t)v69;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v17)(v69, v45, v8);
    v17 = (_BYTE *)sub_10017A754(v57, 0);
    v84 = v17;
    v58 = sub_10006922C(&qword_100652EB0);
    v59 = Optional.isEqualTo(node:)(v70, v58);

    swift_unknownObjectRelease(v17);
    v60 = *(void (**)(uint64_t, uint64_t))(a1 + 8);
    v60(v57, v8);
    v60((uint64_t)v46, v8);
    if ((v59 & 1) != 0)
    {

      swift_bridgeObjectRelease(v81);
      return v6;
    }

LABEL_23:
    a1 = v82;
LABEL_37:
    v11 = (_BYTE *)v81;
    v14 = v78;
    goto LABEL_7;
  }
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

void sub_1001959B8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  Class isa;
  id v22;
  void *v23;
  id v24;
  Class v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v46 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  __chkstk_darwin(v9);
  v45 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v40 - v17;
  v19 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v20 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v20)
  {
    ((void (*)(uint64_t))a2)(v16);
    return;
  }
  v42 = v16;
  v43 = v7;
  v44 = v6;
  v49 = v20;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v49, "cellForItemAtIndexPath:", isa);

  if (v22)
  {
    objc_msgSend(v22, "frame");
    if (objc_msgSend(v49, "_isRectFullyVisible:"))
    {
      a2();

LABEL_12:
      return;
    }

  }
  if ((uint64_t)objc_msgSend(v49, "numberOfSections") < 1)
  {
    a2();
    goto LABEL_12;
  }
  objc_msgSend(v3, "loadViewIfNeeded");
  v23 = *(void **)&v3[v19];
  if (v23)
  {
    v24 = v23;
    v25 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "scrollToItemAtIndexPath:atScrollPosition:animated:", v25, 0, 1);

    v26 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v27 = (void *)static OS_dispatch_queue.main.getter(v26);
    static DispatchTime.now()(v27);
    + infix(_:_:)(v15, 0.3);
    v41 = *(void (**)(char *, uint64_t))(v12 + 8);
    v28 = v15;
    v29 = v42;
    v41(v28, v42);
    v30 = swift_allocObject(&unk_1005CD9C0, 32, 7);
    *(_QWORD *)(v30 + 16) = a2;
    *(_QWORD *)(v30 + 24) = a3;
    aBlock[4] = sub_10010DF60;
    v51 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CD9D8;
    v31 = _Block_copy(aBlock);
    v32 = v51;
    swift_retain();
    v33 = swift_release(v32);
    v34 = v45;
    static DispatchQoS.unspecified.getter(v33);
    aBlock[0] = _swiftEmptyArrayStorage;
    v35 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v36 = sub_10006922C((uint64_t *)&unk_100647540);
    v37 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v38 = v46;
    v39 = v44;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v44, v35);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v34, v38, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v48);
    v41(v18, v29);
  }
  else
  {
    __break(1u);
  }
}

void sub_100195DB0(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *Strong;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t Available;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  unint64_t v26;
  char v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v35, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3, v4);
  if (!Strong)
    return;
  v6 = Strong;
  if (!a1)
  {

    return;
  }
  v7 = *(_QWORD *)&Strong[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v7);
  v8 = a1;
  v9 = sub_10006922C((uint64_t *)&unk_1006424B0);
  Available = Array<A>.fpfs_syncFetchAvailableFPItems()(v7, v9);
  swift_bridgeObjectRelease(v7);
  v33 = Available;
  swift_bridgeObjectRetain(Available);
  v11 = sub_100045810((uint64_t)v8, Available, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v13 = v12;
  swift_bridgeObjectRelease(Available);
  if ((v13 & 1) == 0)
  {

    if ((unint64_t)Available >> 62)
    {
      if (Available < 0)
        v31 = Available;
      else
        v31 = Available & 0xFFFFFFFFFFFFFF8;
      v32 = v8;
      swift_bridgeObjectRetain(Available);
      v14 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_bridgeObjectRelease(Available);
      if (v14 >= v11)
      {
LABEL_6:
        if ((v11 & 0x8000000000000000) == 0)
        {
          sub_1004594F0(v11, v11, (uint64_t)v8);
          goto LABEL_11;
        }
        goto LABEL_28;
      }
    }
    else
    {
      v14 = *(_QWORD *)((Available & 0xFFFFFFFFFFFFF8) + 0x10);
      v15 = v8;
      if (v14 >= v11)
        goto LABEL_6;
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v11 = (uint64_t)v8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
  v14 = *(_QWORD *)((Available & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((Available & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v14 >= v16 >> 1)
LABEL_29:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v14 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
  specialized Array._endMutation()(v17);
LABEL_11:
  v18 = *(void **)&v6[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (!objc_msgSend(v18, "useSharedQuickLook", v33)
    || (objc_msgSend(v8, "isFolder") & 1) != 0)
  {

    v19 = v34;
LABEL_14:
    swift_bridgeObjectRelease(v19);
    return;
  }
  v20 = objc_msgSend(v18, "sceneIdentifier");
  if (!v20)
  {
    v29 = *(id *)DOCLog.Source.unsafeMutableAddressor();
    v30 = static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v29, v30, _swiftEmptyArrayStorage);

    v19 = v34;
    goto LABEL_14;
  }
  v21 = qword_1006411A8;
  v22 = v20;
  if (v21 != -1)
    swift_once(&qword_1006411A8, sub_100470A10);
  v23 = (void *)qword_100656EE0;
  v24 = objc_msgSend((id)qword_100656EE0, "objectForKey:", v22);
  if (!v24)
  {
    v25 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
    v24 = DOCPreviewController.init()();
    objc_msgSend(v23, "setObject:forKey:", v24, v22);
  }

  swift_bridgeObjectRetain(v34);
  v26 = sub_100045810((uint64_t)v8, v34, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v28 = v27;
  swift_bridgeObjectRelease(v34);
  DOCPreviewController.set(_:defaultIndex:)(v34, 0, 0, v26, v28 & 1);

  swift_bridgeObjectRelease(v34);
}

void sub_100196134(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  char *v18;
  char *v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  char v28[24];

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v25 - v14;
  a3 += 16;
  swift_beginAccess(a3, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3, v16);
  if (Strong)
  {
    v18 = (char *)Strong;
    sub_1000271D4(a2, (uint64_t)v8, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {

      sub_10000CB4C((uint64_t)v8, &qword_100643470);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      if (a1)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
        v19 = &v18[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache];
        swift_beginAccess(&v18[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache], v27, 33, 0);
        v20 = a1;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v19);
        v26 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0x8000000000000000;
        sub_1001B962C((uint64_t)v20, (uint64_t)v13, isUniquelyReferenced_nonNull_native, &v26);
        v22 = *(_QWORD *)v19;
        *(_QWORD *)v19 = v26;
        v23 = swift_bridgeObjectRelease(v22);
        v24 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
        v24(v13, v9, v23);
        swift_endAccess(v27);

        ((void (*)(char *, uint64_t))v24)(v15, v9);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);

      }
    }
  }
}

void sub_10019634C(uint64_t a1, void *a2, char *a3, void (*a4)(void), uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *Strong;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  void *v37;
  void *v38;
  void (*v39)(void);
  void *v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  char *v45;
  id v46;
  id v47;
  double v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void **v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(void);
  id v67;
  _QWORD aBlock[5];
  char *v69;
  char v70[24];

  v64 = a7;
  v65 = a5;
  v66 = a4;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v70, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(Strong);
  v20 = v19;
  v67 = Strong;
  if (Strong)
  {
    v63 = a9;
    LODWORD(v60) = static os_log_type_t.default.getter(v19);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 72, 7);
    v62 = a3;
    v23 = (_QWORD *)v22;
    *(_OWORD *)(v22 + 16) = xmmword_1004D9670;
    v24 = objc_msgSend(a2, "displayName");
    v61 = a6;
    v25 = v24;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v59 = a2;
    v27 = v26;
    v29 = v28;

    v23[7] = &type metadata for String;
    v23[8] = sub_10006A638();
    v23[4] = v27;
    v23[5] = v29;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] Adopting persona for: %@", 44, 2, &_mh_execute_header, v20, v60, v23);

    swift_bridgeObjectRelease(v23);
    v60 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
    v30 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v64, v14);
    v31 = *(unsigned __int8 *)(v15 + 80);
    v32 = (v31 + 56) & ~v31;
    v33 = (v16 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    v35 = (char *)swift_allocObject(&unk_1005CCAC0, v34 + 73, v31 | 7);
    v36 = v17;
    v37 = v59;
    *((_QWORD *)v35 + 2) = v30;
    *((_QWORD *)v35 + 3) = v37;
    v38 = v62;
    v39 = v66;
    *((_QWORD *)v35 + 4) = v62;
    *((_QWORD *)v35 + 5) = v39;
    *((_QWORD *)v35 + 6) = v65;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v35[v32], v36, v14);
    v40 = v61;
    *(_QWORD *)&v35[v33] = v61;
    v41 = &v35[v34];
    *((_QWORD *)v41 + 8) = *(_QWORD *)(a8 + 64);
    v42 = *(_OWORD *)(a8 + 48);
    *((_OWORD *)v41 + 2) = *(_OWORD *)(a8 + 32);
    *((_OWORD *)v41 + 3) = v42;
    v43 = *(_OWORD *)(a8 + 16);
    *(_OWORD *)v41 = *(_OWORD *)a8;
    *((_OWORD *)v41 + 1) = v43;
    v41[72] = v63 & 1;
    aBlock[4] = sub_1001CF524;
    v69 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CCAD8;
    v44 = _Block_copy(aBlock);
    v45 = v69;
    swift_unknownObjectRetain(v37);
    v46 = v38;
    swift_retain();
    v47 = v40;
    sub_1001CF3C8((_QWORD *)a8);
    *(_QWORD *)&v48 = swift_release(v45).n128_u64[0];
    v49 = v60;
    objc_msgSend(v60, "adoptPersonaFromItem:andPerformBlock:", v47, v44, v48);
    _Block_release(v44);

  }
  else
  {
    v50 = static os_log_type_t.error.getter(v19);
    v51 = sub_10006922C((uint64_t *)&unk_100644560);
    v52 = swift_allocObject(v51, 72, 7);
    *(_OWORD *)(v52 + 16) = xmmword_1004D9670;
    v53 = objc_msgSend(a2, "displayName");
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    *(_QWORD *)(v52 + 56) = &type metadata for String;
    *(_QWORD *)(v52 + 64) = sub_10006A638();
    *(_QWORD *)(v52 + 32) = v54;
    *(_QWORD *)(v52 + 40) = v56;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] Clearing lastOpenedItem: self is nil. item: %@. Bailing out.", 80, 2, &_mh_execute_header, v20, v50, v52);

    swift_bridgeObjectRelease(v52);
    v57 = (void **)&a3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess(&a3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
    v58 = *v57;
    *v57 = 0;
    sub_1000AE638(v58);

    v66();
  }
}

void sub_100196764(uint64_t a1, void *a2, char *a3, void (*a4)(void), uint64_t a5, uint64_t a6, void *a7, __int128 *a8, char a9)
{
  uint64_t v15;
  char *Strong;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  char v48[24];
  char v49[24];

  v15 = a1 + 16;
  swift_beginAccess(a1 + 16, v49, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v15);
  v17 = *(id *)DOCLog.UI.unsafeMutableAddressor(Strong);
  v18 = v17;
  if (Strong)
  {
    v46 = a4;
    v19 = static os_log_type_t.default.getter(v17);
    v20 = sub_10006922C((uint64_t *)&unk_100644560);
    v21 = swift_allocObject(v20, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1004D9670;
    v44 = a5;
    v22 = objc_msgSend(a2, "displayName");
    v45 = a6;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    *(_QWORD *)(v21 + 56) = &type metadata for String;
    *(_QWORD *)(v21 + 64) = sub_10006A638();
    *(_QWORD *)(v21 + 32) = v23;
    *(_QWORD *)(v21 + 40) = v25;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] tryOpeningInDefaultApp for: %@", 50, 2, &_mh_execute_header, v18, v19, v21);

    swift_bridgeObjectRelease(v21);
    v26 = objc_msgSend((id)objc_opt_self(DOCFeature), "supportsQuickLookInsteadOfOpen:", *(_QWORD *)&Strong[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration]);
    v27 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16);
    v28 = swift_allocObject(&unk_1005CCB10, 144, 7);
    v29 = *a8;
    *(_OWORD *)(v28 + 56) = a8[1];
    v30 = a8[3];
    *(_OWORD *)(v28 + 72) = a8[2];
    *(_OWORD *)(v28 + 88) = v30;
    *(_QWORD *)(v28 + 16) = v27;
    *(_QWORD *)(v28 + 24) = a3;
    *(_QWORD *)(v28 + 32) = a2;
    v31 = *((_QWORD *)a8 + 8);
    *(_OWORD *)(v28 + 40) = v29;
    *(_QWORD *)(v28 + 104) = v31;
    *(_QWORD *)(v28 + 112) = a7;
    *(_BYTE *)(v28 + 120) = a9 & 1;
    *(_QWORD *)(v28 + 128) = v46;
    *(_QWORD *)(v28 + 136) = v44;
    swift_retain();
    v32 = a3;
    swift_unknownObjectRetain(a2);
    sub_1001CF3C8(a8);
    v33 = a7;
    v34 = swift_retain();
    static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)(v45, a7, 1, v26, Strong, sub_1001CF60C, v28, v34);

    swift_release(v27);
    swift_release(v28);
  }
  else
  {
    v35 = static os_log_type_t.error.getter(v17);
    v36 = sub_10006922C((uint64_t *)&unk_100644560);
    v37 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1004D9670;
    v38 = objc_msgSend(a2, "displayName");
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v41 = v40;

    *(_QWORD *)(v37 + 56) = &type metadata for String;
    *(_QWORD *)(v37 + 64) = sub_10006A638();
    *(_QWORD *)(v37 + 32) = v39;
    *(_QWORD *)(v37 + 40) = v41;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] Clearing lastOpenedItem: self is nil. item: %@. Bailing out.", 80, 2, &_mh_execute_header, v18, v35, v37);

    swift_bridgeObjectRelease(v37);
    v42 = (void **)&a3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess(&a3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v48, 1, 0);
    v43 = *v42;
    *v42 = 0;
    sub_1000AE638(v43);

    a4();
  }
}

void sub_100196AB0(char a1, uint64_t a2, void *a3, uint64_t a4, __int128 *a5, void *a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  void *Strong;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD aBlock[5];
  uint64_t v28;
  char v29[24];

  v15 = a2 + 16;
  v16 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_beginAccess(v15, v29, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v15);
  swift_unknownObjectWeakInit(v16 + 16);

  v18 = swift_allocObject(&unk_1005CCB38, 152, 7);
  v19 = *a5;
  *(_OWORD *)(v18 + 56) = a5[1];
  v20 = a5[3];
  *(_OWORD *)(v18 + 72) = a5[2];
  *(_OWORD *)(v18 + 88) = v20;
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = a4;
  *(_BYTE *)(v18 + 32) = a1;
  v21 = *((_QWORD *)a5 + 8);
  *(_OWORD *)(v18 + 40) = v19;
  *(_QWORD *)(v18 + 104) = v21;
  *(_QWORD *)(v18 + 112) = v16;
  *(_QWORD *)(v18 + 120) = a6;
  *(_BYTE *)(v18 + 128) = a7;
  *(_QWORD *)(v18 + 136) = a8;
  *(_QWORD *)(v18 + 144) = a9;
  aBlock[4] = sub_1001CF6C0;
  v28 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CCB50;
  v22 = _Block_copy(aBlock);
  v23 = v28;
  v24 = a3;
  swift_unknownObjectRetain(a4);
  sub_1001CF3C8(a5);
  v25 = a6;
  swift_retain();
  swift_release(v23);
  DOCRunInMainThread(v22);
  _Block_release(v22);
}

uint64_t sub_100196C2C(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, void *a6, int a7, uint64_t (*a8)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  void *v20;
  uint64_t v21;
  id *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t Strong;
  _QWORD *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  NSString v65;
  Class isa;
  char *v67;
  uint64_t v68;
  char *v69;
  void *v70;
  uint64_t v71;
  uint64_t inited;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  id v86;
  uint64_t v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  NSString v93;
  uint64_t v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  void *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  void *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t result;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t ObjectType;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  __int128 v137;
  void (*v138)(char *, uint64_t);
  uint64_t (*v139)(void);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD v143[5];
  uint64_t v144;
  char v145[24];
  char v146[24];
  char v147[24];
  char v148[24];
  _QWORD v149[6];

  v139 = a8;
  v136 = a7;
  v131 = a6;
  v133 = a5;
  v135 = a4;
  LODWORD(v138) = a3;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v125 = *(_QWORD *)(v10 - 8);
  v126 = v10;
  __chkstk_darwin(v10);
  v124 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v122 = *(_QWORD *)(v12 - 8);
  v123 = v12;
  __chkstk_darwin(v12);
  v121 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for DispatchTime(0);
  v119 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v118 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v120 = (char *)&v117 - v16;
  v17 = type metadata accessor for Date(0);
  v128 = *(_QWORD *)(v17 - 8);
  v129 = v17;
  __chkstk_darwin(v17);
  v127 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void **)(a1 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem, v148, 1, 0);
  v20 = *v19;
  *v19 = 0;
  v134 = a1;
  sub_1000AE638(v20);

  v22 = (id *)DOCLog.UI.unsafeMutableAddressor(v21);
  v23 = *v22;
  v24 = static os_log_type_t.default.getter(v23);
  v25 = sub_10006922C((uint64_t *)&unk_100644560);
  v26 = swift_allocObject(v25, 72, 7);
  v137 = xmmword_1004D9670;
  *(_OWORD *)(v26 + 16) = xmmword_1004D9670;
  ObjectType = swift_getObjectType(a2);
  v27 = objc_msgSend(a2, "displayName");
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  *(_QWORD *)(v26 + 56) = &type metadata for String;
  v31 = sub_10006A638();
  *(_QWORD *)(v26 + 64) = v31;
  *(_QWORD *)(v26 + 32) = v28;
  *(_QWORD *)(v26 + 40) = v30;

  swift_bridgeObjectRelease(v26);
  v32 = *v22;
  v33 = static os_log_type_t.default.getter(v32);
  v34 = swift_allocObject(v25, 72, 7);
  *(_OWORD *)(v34 + 16) = v137;
  v35 = objc_msgSend(a2, "displayName");
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  *(_QWORD *)(v34 + 56) = &type metadata for String;
  *(_QWORD *)(v34 + 64) = v31;
  *(_QWORD *)(v34 + 32) = v36;
  *(_QWORD *)(v34 + 40) = v38;
  if ((v138 & 1) == 0)
  {

    swift_bridgeObjectRelease(v34);
    sub_100431F28(a2, v135, v134, ObjectType);
    return v139();
  }
  v39 = v133 + 16;

  swift_bridgeObjectRelease(v34);
  swift_beginAccess(v39, v147, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v39);
  v41 = &unk_100672000;
  if (Strong)
  {
    v42 = (void *)Strong;
    v43 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
    v44 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 8);
    v45 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24);
    v46 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 48);
    v47 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 56);
    v48 = objc_retain(*(id *)(Strong
                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                            + 72));
    v49 = v43;
    v50 = v44;
    v51 = v45;
    swift_bridgeObjectRetain(v46);
    v52 = v47;

    v41 = (_QWORD *)&unk_100672000;
    swift_bridgeObjectRelease(v46);

    if (v45)
    {
      v53 = objc_msgSend(v51, "fileProviderItem");

      if (v53)
      {
        swift_beginAccess(v39, &v140, 0, 0);
        v54 = swift_unknownObjectWeakLoadStrong(v39);
        if (v54)
        {
          v55 = (void *)v54;
          v56 = *(id *)(v54 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);

          v57 = objc_msgSend(v56, "hostIdentifier");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v59 = v58;

          v61 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v60);
          v62 = v53;
          v63 = v127;
          Date.init()(v62);
          v64 = objc_allocWithZone((Class)DOCHotFolderEvent);
          v65 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v59);
          isa = Date._bridgeToObjectiveC()().super.isa;
          v53 = objc_msgSend(v64, "initWithAppBundleIdentifier:folderItem:type:lastUsedDate:frecency:", v65, v62, 0, isa, 1.0);

          v67 = v63;
          v41 = &unk_100672000;
          (*(void (**)(char *, uint64_t))(v128 + 8))(v67, v129);
          DOCSmartFolderManager.register(event:)(v53);

        }
      }
    }
  }
  swift_beginAccess(v39, v146, 0, 0);
  v68 = swift_unknownObjectWeakLoadStrong(v39);
  if (!v68)
  {
LABEL_15:
    if ((v136 & 1) != 0)
    {
      swift_beginAccess(v39, v145, 0, 0);
      v87 = swift_unknownObjectWeakLoadStrong(v39);
      if (v87
        && (v88 = (void *)v87,
            v89 = *(id *)(v87 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration),
            v88,
            v90 = objc_msgSend(v89, "sceneIdentifier"),
            v89,
            v90))
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v92 = v91;

        v93 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v92);
        v94 = qword_1006411A8;
        v95 = v93;
        if (v94 != -1)
          swift_once(&qword_1006411A8, sub_100470A10);
        v96 = (void *)qword_100656EE0;
        v97 = objc_msgSend((id)qword_100656EE0, "objectForKey:", v95);
        if (!v97)
        {
          v98 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
          v97 = DOCPreviewController.init()();
          objc_msgSend(v96, "setObject:forKey:", v97, v95);
        }

        v99 = objc_msgSend(v97, "presentingViewController");
        if (v99)
        {
          v100 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
          v101 = (void *)static OS_dispatch_queue.main.getter(v100);
          v102 = v118;
          static DispatchTime.now()(v101);
          v103 = v120;
          + infix(_:_:)(v102, 1.0);
          v138 = *(void (**)(char *, uint64_t))(v119 + 8);
          v138(v102, v130);
          v104 = swift_allocObject(&unk_1005CCB88, 24, 7);
          swift_unknownObjectWeakInit(v104 + 16);
          v143[4] = sub_1001CF6F8;
          v144 = v104;
          v143[0] = _NSConcreteStackBlock;
          v143[1] = 1107296256;
          v143[2] = sub_10004A82C;
          v143[3] = &unk_1005CCBA0;
          v105 = _Block_copy(v143);
          swift_release(v144);
          v106 = v121;
          static DispatchQoS.unspecified.getter(v107);
          v143[0] = _swiftEmptyArrayStorage;
          v108 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v109 = sub_10006922C((uint64_t *)&unk_100647540);
          v110 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
          v111 = v124;
          v112 = v109;
          v113 = v126;
          dispatch thunk of SetAlgebra.init<A>(_:)(v143, v112, v110, v126, v108);
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v103, v106, v111, v105);
          _Block_release(v105);

          (*(void (**)(char *, uint64_t))(v125 + 8))(v111, v113);
          (*(void (**)(char *, uint64_t))(v122 + 8))(v106, v123);
          v138(v103, v130);
        }
        else
        {

        }
      }
      else
      {
        v114 = *(id *)DOCLog.Source.unsafeMutableAddressor();
        v115 = static os_log_type_t.debug.getter(v114);
        os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v114, v115, _swiftEmptyArrayStorage);

      }
    }
    return v139();
  }
  v69 = (char *)v68;
  v70 = *(void **)(v68 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  v71 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v71, &v142);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  v73 = v131;
  *(_QWORD *)(inited + 32) = v131;
  v143[0] = inited;
  specialized Array._endMutation()(inited);
  v74 = v143[0];
  v75 = v70;
  v76 = v73;
  v77 = DOCAnalyticsActionEvent.FileProvider.init(items:)(v74);
  v78 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v79 = objc_msgSend(v78, "bundleIdentifier");

  if (v79)
  {
    v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
    v82 = v81;

  }
  else
  {
    v80 = 0;
    v82 = 0;
  }
  v83 = DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(objc_msgSend(*(id *)&v69[v41[237]], "identifier"));
  v84 = &v69[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v69[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &v141, 0, 0);
  if (*(_QWORD *)v84 < 3uLL)
  {
    v85 = DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(v149, 2, v75, v77, v80, v82, v83, *(_QWORD *)v84 + 1);
    v86 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v85);
    DOCAnalyticsManager.sendActionEvent(_:)(v149);

    sub_1000B3334((uint64_t)v149);
    goto LABEL_15;
  }
  v143[0] = *(_QWORD *)v84;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, v143, &type metadata for DOCDisplayMode, &type metadata for Int);
  __break(1u);
  return result;
}

void sub_100197694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 0, 0);

  }
}

uint64_t sub_1001976F4(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t, __n128))
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;

  v8 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v9 = static os_log_type_t.default.getter(v8);
  v10 = sub_10006922C((uint64_t *)&unk_100644560);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004D9670;
  v12 = objc_msgSend(a3, "displayName");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  *(_QWORD *)(v11 + 56) = &type metadata for String;
  *(_QWORD *)(v11 + 64) = sub_10006A638();
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;

  v16 = swift_bridgeObjectRelease(v11);
  return a4(a1, a2, v16);
}

uint64_t sub_100197878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __n128 v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Logger.UI.unsafeMutableAddressor(v4);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.info.getter(v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "received request to create new folder", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_100188E58(0, 1);
}

Swift::String *sub_100197A4C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String *v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel))
  {
    v2 = *(Swift::String **)(v0
                           + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel);
  }
  else
  {
    v2 = sub_100197AAC();
    v3 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release(v3);
  }
  swift_retain();
  return v2;
}

Swift::String *sub_100197AAC()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  char v4;
  id v5;
  unsigned int v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  Swift::String *v23;
  char *v24;
  char v26;
  uint64_t v27;
  char v28;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_1001463A0();
  UITraitCollection.subscript.getter(&v27, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v3);

  v4 = v28;
  v5 = objc_msgSend((id)objc_opt_self(DOCFeature), "viewOptionsSizeSetting");
  v6 = objc_msgSend(v5, "isEnabled");

  sub_100095BFC();
  v7 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8];
  v26 = v4;
  if (v8)
  {
    v9 = *((_QWORD *)v7 + 2);
    v10 = *(_QWORD *)v7;
    sub_1001CEF88(*(_QWORD *)v7, v8, v9);
    sub_100144F34(v10, v8, v9);
    v11 = *((_QWORD *)v7 + 1);
    if (v11)
    {
      v12 = v7[24];
      v13 = *((_QWORD *)v7 + 2);
      v14 = *(_QWORD *)v7;
      sub_1001CEF88(*(_QWORD *)v7, *((_QWORD *)v7 + 1), v13);
      v15 = DOCItemSortDescriptor.ascending.getter(v14, v11, v13, v12 & 1);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v11);
    }
    else
    {
      v15 = 0;
    }
  }
  else
  {
    v15 = 0;
    LODWORD(v10) = 5;
  }
  if (v6)
    v16 = &off_1005BF240;
  else
    v16 = _swiftEmptyArrayStorage;
  v17 = sub_1002C9DC4((_QWORD *)1);
  v18 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                  + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
  v19 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isShowingAllFilenameExtensions];
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher];
  v21 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior];
  v22 = type metadata accessor for DOCViewOptionsViewModel(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  swift_bridgeObjectRetain(v18);
  swift_retain();
  v23 = sub_1002F193C((uint64_t)v17, v21, v18, v10, v15 & 1, (uint64_t)v16, v26, v19, v20);
  swift_release(v20);
  v24 = (char *)v23 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate;
  *((_QWORD *)v24 + 1) = &off_1005DA8B0;
  swift_unknownObjectWeakAssign(v24, v1);
  return v23;
}

uint64_t sub_100197D0C()
{
  uint64_t v0;
  Swift::String *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  void (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[32];

  v1 = sub_100197AAC();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel) = v1;
  swift_retain();
  swift_release(v2);
  v3 = *(char **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController);
  if (!v3)
    return swift_release(v1);
  v4 = OBJC_IVAR____TtC5Files28DOCViewOptionsViewController_viewModel;
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files28DOCViewOptionsViewController_viewModel];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files28DOCViewOptionsViewController_viewModel] = v1;
  swift_retain();
  v6 = v3;
  swift_release(v5);
  v7 = *(_QWORD *)&v3[v4];
  v8 = swift_retain();
  v9 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v13, v8);
  v11 = v10;
  swift_release(*(_QWORD *)(v10 + 8));
  *(_QWORD *)(v11 + 8) = v7;
  v9(v13, 0);

  return swift_release(v1);
}

uint64_t sub_100197E04()
{
  char *v0;
  id v1;
  id v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16[24];

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v3 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier;
  if ((v1 & 1) == 0)
    v3 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier;
  v4 = (uint64_t *)&v0[*v3];
  v6 = *v4;
  v5 = v4[1];
  swift_bridgeObjectRetain(v5);
  v7 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v16, 0, 0);
  if (!*(_QWORD *)v7)
  {
    swift_bridgeObjectRelease(v5);
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier + 8];
    swift_bridgeObjectRetain(v5);
  }
  v8 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier];
  swift_beginAccess(v8, &v15, 0, 0);
  v9 = *v8;
  if (!*(_QWORD *)(v9 + 16))
  {
    v13 = v5;
LABEL_10:
    swift_bridgeObjectRelease(v13);
    return type metadata accessor for DOCItemCollectionGridCell();
  }
  swift_bridgeObjectRetain(v9);
  v10 = sub_10007EF08(v6, v5);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(v5);
    v13 = v9;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v12;
}

void sub_100197F70()
{
  id v0;

  sub_1000968DC();
  v0 = sub_10001F69C();
  sub_10005897C(v0, 0, 0, 1, 1);

}

Swift::Bool __swiftcall DOCItemCollectionViewController.establishFirstResponder()()
{
  void *v0;
  id v1;
  unsigned __int8 v2;

  objc_msgSend(v0, "setNeedsFocusUpdate");
  v1 = objc_msgSend((id)objc_opt_self(DOCKeyboardFocusManager), "sharedManager");
  v2 = objc_msgSend(v1, "requestCurrentFocus:", v0);

  return v2;
}

uint64_t sub_100198014(char *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  Class v41;
  UIMenuIdentifier_optional v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t result;
  uint64_t v51;
  void (**v52)(char *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (**v70)(uint64_t, char);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void **aBlock;
  uint64_t v77;
  uint64_t (*v78)(uint64_t);
  void *v79;
  uint64_t (*v80)();
  uint64_t v81;
  char v82[24];
  __int128 v83;
  uint64_t v84[6];

  v5 = a2[2];
  v73 = a2[1];
  v74 = *a2;
  v7 = a2[3];
  v6 = a2[4];
  v8 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v8, v82, 0, 0);
  *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style] = *v8;
  sub_100425EF4();
  sub_100423D88(v9, v10);
  v11 = objc_msgSend(a1, "traitCollection");
  sub_100426A04();

  v12 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8];
  *v12 = v5;
  v12[1] = v7;
  swift_bridgeObjectRetain(v7);
  sub_100422870(v13, v14);
  swift_bridgeObjectRelease(v14);
  v15 = *(void **)(v6 + 32);
  v16 = _swiftEmptyArrayStorage;
  aBlock = (void **)_swiftEmptyArrayStorage;
  if (v15)
  {
    v17 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);
    v16 = aBlock;
  }

  sub_1004226DC((uint64_t)v16);
  v83 = *(_OWORD *)a2;
  v21 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
  sub_100070EDC((uint64_t)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection], (uint64_t)v84, &qword_100646CC8);
  v22 = *v21;
  v23 = v21[1];
  v24 = v21[2];
  v25 = v21[3];
  v26 = v21[4];
  *v21 = v74;
  v21[1] = v73;
  v21[2] = v5;
  v21[3] = v7;
  v21[4] = v6;
  swift_bridgeObjectRetain(v7);
  sub_1001D0760((uint64_t)&v83);
  swift_retain();
  swift_bridgeObjectRetain(v7);
  sub_1001D0760((uint64_t)&v83);
  swift_retain();
  sub_1001D0FDC(v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001BC194);
  sub_1001D09CC(v22, v23, v24, v25, v26);
  sub_100423F04(v84);
  sub_1001D0A08((uint64_t)&v83);
  swift_release(v6);
  swift_bridgeObjectRelease(v7);
  sub_1001D0FDC(v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D09CC);
  v27 = *(_QWORD *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor);
  v28 = *(_QWORD *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8);
  v29 = *(_QWORD *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 16);
  v30 = &a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
  v31 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
  v32 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8];
  v33 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 16];
  v34 = *(_BYTE *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 24);
  *(_QWORD *)v30 = v27;
  *((_QWORD *)v30 + 1) = v28;
  *((_QWORD *)v30 + 2) = v29;
  LOBYTE(v24) = v30[24];
  v30[24] = v34;
  sub_1001CEF88(v27, v28, v29);
  sub_1001CEF88(v31, v32, v33);
  sub_100144F34(v31, v32, v33);
  sub_1004235B4(v31, v32, v33, v24);
  sub_100144F34(v31, v32, v33);
  v35 = *(_QWORD *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 32);
  v36 = &a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
  v37 = *(_OWORD *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 16);
  *(_OWORD *)v36 = *(_OWORD *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics);
  *((_OWORD *)v36 + 1) = v37;
  *((_QWORD *)v36 + 4) = v35;
  sub_100422DD8();
  v38 = *(_QWORD *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits);
  v39 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits];
  *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = v38;
  swift_retain_n(v38, 2);
  swift_release(v39);
  sub_100426320();
  swift_release(v38);
  sub_100064B54();
  if ((v40 & 1) != 0
    && (static DOCItemGroupingBehavior.__derived_enum_equals(_:_:)(*(unsigned __int8 *)(v75 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior), 7) & 1) == 0)
  {
    v42.value = 0;
    v41 = sub_10005B950(0, v42);
  }
  else
  {
    v41 = 0;
  }
  sub_10042794C(v41);

  if (sub_1001BC2BC(v6))
  {
    v43 = *(_BYTE *)(v6 + 24);
    v44 = objc_opt_self(UIView);
    v45 = swift_allocObject(&unk_1005CEC30, 25, 7);
    *(_QWORD *)(v45 + 16) = a1;
    *(_BYTE *)(v45 + 24) = v43;
    v46 = swift_allocObject(&unk_1005CEC58, 32, 7);
    *(_QWORD *)(v46 + 16) = sub_1001D25E4;
    *(_QWORD *)(v46 + 24) = v45;
    v80 = sub_10010DF60;
    v81 = v46;
    aBlock = _NSConcreteStackBlock;
    v77 = 1107296256;
    v78 = sub_10006655C;
    v79 = &unk_1005CEC70;
    v47 = _Block_copy(&aBlock);
    v48 = v81;
    v49 = a1;
    swift_retain();
    swift_release(v48);
    objc_msgSend((id)v44, "performWithoutAnimation:", v47);
    _Block_release(v47);
    LOBYTE(v44) = swift_isEscapingClosureAtFileLocation(v46, "", 114, 384, 40, 1);
    swift_release(v45);
    result = swift_release(v46);
    if ((v44 & 1) == 0)
    {
      v51 = swift_allocObject(&unk_1005CBE18, 24, 7);
      swift_unknownObjectWeakInit(v51 + 16);
      v52 = (void (**)(char *))&v49[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      v53 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      v54 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler + 8];
      *v52 = sub_1001D185C;
      v52[1] = (void (*)(char *))v51;
      swift_retain_n(v51, 2);
      v55 = sub_100087534(v53, v54);
      sub_100423D88(v55, v56);
      swift_release_n(v51, 2, v57);
LABEL_14:
      v69 = swift_allocObject(&unk_1005CBE18, 24, 7);
      swift_unknownObjectWeakInit(v69 + 16);
      v70 = (void (**)(uint64_t, char))&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
      v71 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
      v72 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler + 8];
      *v70 = sub_1001D1844;
      v70[1] = (void (*)(uint64_t, char))v69;
      return sub_100087534(v71, v72);
    }
    __break(1u);
  }
  else
  {
    v58 = objc_opt_self(UIView);
    v59 = swift_allocObject(&unk_1005CEBB8, 25, 7);
    *(_QWORD *)(v59 + 16) = a1;
    *(_BYTE *)(v59 + 24) = 0;
    v60 = swift_allocObject(&unk_1005CEBE0, 32, 7);
    *(_QWORD *)(v60 + 16) = sub_1001D25E4;
    *(_QWORD *)(v60 + 24) = v59;
    v80 = sub_10010DF60;
    v81 = v60;
    aBlock = _NSConcreteStackBlock;
    v77 = 1107296256;
    v78 = sub_10006655C;
    v79 = &unk_1005CEBF8;
    v61 = _Block_copy(&aBlock);
    v62 = v81;
    v63 = a1;
    swift_retain();
    swift_release(v62);
    objc_msgSend((id)v58, "performWithoutAnimation:", v61);
    _Block_release(v61);
    LOBYTE(v58) = swift_isEscapingClosureAtFileLocation(v60, "", 114, 384, 40, 1);
    swift_release(v59);
    result = swift_release(v60);
    if ((v58 & 1) == 0)
    {
      v64 = &v63[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      v65 = *(_QWORD *)&v63[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      v66 = *(_QWORD *)&v63[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler + 8];
      *(_QWORD *)v64 = 0;
      *((_QWORD *)v64 + 1) = 0;
      v67 = sub_100087534(v65, v66);
      sub_100423D88(v67, v68);
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

void sub_1001986D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __n128 v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSString v10;
  uint64_t v11;
  Class isa;
  id v13;
  uint64_t v14;
  CGRect v15;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064B54();
  if ((v6 & 1) != 0 || (sub_100063820(v5) & 1) != 0)
  {
    objc_msgSend(v0, "loadViewIfNeeded");
    v7 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v7)
    {
      v8 = qword_100640E40;
      v9 = v7;
      if (v8 != -1)
        swift_once(&qword_100640E40, sub_10009B250);
      v10 = String._bridgeToObjectiveC()();
      v11 = IndexPath.section.getter(v10);
      IndexPath.init(item:section:)(0, v11);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v13 = objc_msgSend(v9, "supplementaryViewForElementKind:atIndexPath:", v10, isa);

      if (v13)
      {
        objc_msgSend(v13, "frame");
        CGRectGetHeight(v15);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100198854()
{
  uint64_t v0;

  sub_100087534(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

void sub_1001988C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _BYTE *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;
  char v26[24];

  v1 = (void *)v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext, v26, 0, 0);
  if (*(_BYTE *)v10 != 2 && (*(_BYTE *)v10 & 1) != 0)
  {
    v12 = sub_1001793C8((uint64_t)aBlock);
    if (*v11 != 2)
      *v11 = 0;
    ((void (*)(_QWORD *, _QWORD))v12)(aBlock, 0);
    if (*v10 != 2 && sub_1001790A0(v0, *(_WORD *)v10 & 0x101))
    {
      v13 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v23 = static OS_dispatch_queue.main.getter(v13);
      v14 = swift_allocObject(&unk_1005CE708, 24, 7);
      *(_QWORD *)(v14 + 16) = v0;
      aBlock[4] = sub_1001D1354;
      v25 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CE720;
      v15 = _Block_copy(aBlock);
      v16 = v25;
      v17 = v1;
      swift_release(v16);
      static DispatchQoS.unspecified.getter(v18);
      aBlock[0] = _swiftEmptyArrayStorage;
      v19 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v20 = sub_10006922C((uint64_t *)&unk_100647540);
      v21 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v2, v19);
      v22 = (void *)v23;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v15);
      _Block_release(v15);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView _, Swift::Bool willDecelerate)
{
  if (!willDecelerate)
    _s5Files31DOCItemCollectionViewControllerC06scrollD18DidEndDeceleratingyySo08UIScrollD0CF_0();
}

void sub_100198C04(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v2 = objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_1005CE758, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject(&unk_1005CE780, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_1001D135C;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_10010DF60;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10006655C;
  v8[3] = &unk_1005CE798;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  swift_retain();
  objc_msgSend((id)v2, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 111, 5919, 44, 1);
  swift_release(v3);
  swift_release(v4);
  if ((v2 & 1) != 0)
    __break(1u);
}

void sub_100198D3C(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v8 = sub_10001F69C();
  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "frame");
    v5 = v4;
    v7 = v6;

    sub_10005897C(v8, v5, v7, 0, 0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionView(_:prefetchItemsAt:)(UICollectionView _, Swift::OpaquePointer prefetchItemsAt)
{
  sub_1001C8850((uint64_t)prefetchItemsAt._rawValue);
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionView(_:cancelPrefetchingForItemsAt:)(UICollectionView _, Swift::OpaquePointer cancelPrefetchingForItemsAt)
{
  sub_1001C8A70((uint64_t)cancelPrefetchingForItemsAt._rawValue);
}

double sub_100198DE4(uint64_t a1)
{
  void *v1;
  double result;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
  sub_100078678(v1);
  *(_QWORD *)&result = swift_unknownObjectRelease(v1).n128_u64[0];
  return result;
}

uint64_t sub_100198E28(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v9 = type metadata accessor for IndexPath(0);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v9);
  v11 = a3;
  v12 = a1;
  a5(v10);

  return swift_bridgeObjectRelease(v10);
}

uint64_t DOCItemCollectionViewController.collectionView(_:canFocusItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_1001C8C90(a2);
}

uint64_t DOCItemCollectionViewController.collectionView(_:shouldDeselectItemAt:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  Class isa;
  id v6;

  if ((objc_msgSend(v1, "isEditing") & 1) != 0)
    return 1;
  v3 = objc_msgSend(a1, "delegate");
  if (!v3)
    return 0;
  v4 = v3;
  if ((objc_msgSend(v3, "respondsToSelector:", "collectionView:shouldSelectItemAtIndexPath:") & 1) == 0)
  {
    swift_unknownObjectRelease(v4);
    return 1;
  }
  swift_unknownObjectRetain(v4);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "collectionView:shouldSelectItemAtIndexPath:", a1, isa);
  swift_unknownObjectRelease_n(v4, 2);

  return (uint64_t)v6;
}

uint64_t DOCItemCollectionViewController.collectionView(_:shouldSelectItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  unsigned __int8 v38;
  __n128 v39;
  void *v40;
  uint64_t v41;
  uint64_t Strong;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t ObjectType;
  char v69;
  __n128 v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  uint64_t v77;
  id v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v82[4];
  BOOL v83;

  v3 = v2;
  v78 = a1;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v80 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v79 = (char *)&v77 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v77 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - v17;
  v19 = type metadata accessor for IndexPath(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  v27 = (char *)&v77 - v26;
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) == 0
    && (*(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
     || (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) != 0))
  {
    v30 = Logger.UI.unsafeMutableAddressor(v23);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v30, v5);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.debug.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Inline rename session in progress, skipping cell selection", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v28 = v25;
  v77 = v24;
  if (IndexPath.count.getter(v23) != 2)
    goto LABEL_7;
  result = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!result)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if ((objc_msgSend((id)result, "isGathering") & 1) == 0
    && (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
    && (sub_100195148(a2) & 1) != 0)
  {
LABEL_7:
    v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v81(v18, 1, 1, v19);
LABEL_14:
    v35 = sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100642710);
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a2, v19);
  v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v81(v18, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    goto LABEL_14;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  v36 = (void *)sub_10017A754((uint64_t)v27, 0);
  if (v36)
  {
    v37 = v36;
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode) & 1) != 0)
    {
      v38 = objc_msgSend(v36, "isFolder");
      v39 = swift_unknownObjectRelease(v37);
      v35 = (*(uint64_t (**)(char *, uint64_t, __n128))(v20 + 8))(v27, v19, v39);
      if ((v38 & 1) != 0)
        return 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      swift_unknownObjectRelease(v37);
    }
  }
  else
  {
    v35 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v27, v19);
  }
LABEL_15:
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
  {
    if (IndexPath.count.getter(v35) != 2)
    {
LABEL_21:
      v81(v15, 1, 1, v19);
LABEL_27:
      sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_100642710);
      goto LABEL_28;
    }
    result = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!result)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    if ((objc_msgSend((id)result, "isGathering") & 1) == 0
      && (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
      && (sub_100195148(a2) & 1) != 0)
    {
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v15, a2, v19);
    v81(v15, 0, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) == 1)
      goto LABEL_27;
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v28, v15, v19);
    v59 = sub_10017A754(v28, 0);
    if (!v59)
    {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v28, v19);
      goto LABEL_28;
    }
    v60 = v59;
    v61 = (uint64_t)sub_100034068(0);
    v62 = v61;
    if ((unint64_t)v61 >> 62)
    {
      if (v61 >= 0)
        v61 &= 0xFFFFFFFFFFFFFF8uLL;
      v63 = _CocoaArrayWrapper.endIndex.getter(v61);
    }
    else
    {
      v63 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v64 = swift_bridgeObjectRelease(v62);
    if (v63 == 1)
    {
      v65 = (uint64_t)sub_100034068(0);
      v66 = v65;
      if ((unint64_t)v65 >> 62)
      {
        if (v65 >= 0)
          v65 &= 0xFFFFFFFFFFFFFF8uLL;
        result = _CocoaArrayWrapper.endIndex.getter(v65);
        if (result)
          goto LABEL_52;
      }
      else
      {
        result = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (result)
        {
LABEL_52:
          if ((v66 & 0xC000000000000001) != 0)
          {
            v67 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v66);
            goto LABEL_55;
          }
          if (*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v67 = *(_QWORD *)(v66 + 32);
            swift_unknownObjectRetain(v67);
LABEL_55:
            swift_bridgeObjectRelease(v66);
            ObjectType = swift_getObjectType(v67);
            v69 = DOCNode.isEqualTo(node:)(v60, ObjectType);
            swift_unknownObjectRelease(v67);
            v70 = swift_unknownObjectRelease(v60);
            (*(void (**)(uint64_t, uint64_t, __n128))(v20 + 8))(v28, v19, v70);
LABEL_73:
            *(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) = v69 & 1;
            goto LABEL_29;
          }
          __break(1u);
          goto LABEL_76;
        }
      }
      v64 = swift_bridgeObjectRelease(v66);
    }
    (*(void (**)(uint64_t, uint64_t, __n128))(v20 + 8))(v28, v19, v64);
    swift_unknownObjectRelease(v60);
    v69 = 0;
    goto LABEL_73;
  }
LABEL_28:
  *(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) = 0;
LABEL_29:
  v40 = sub_100191290(a2);
  if ((v40 & 1) != 0)
  {
    v41 = v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate);
    if (!Strong)
      return 1;
    v43 = Strong;
    v44 = *(_QWORD *)(v41 + 8);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v46 = objc_msgSend(v78, "layoutAttributesForItemAtIndexPath:", isa);

    if (v46)
    {
      objc_msgSend(v46, "frame");
      v48 = v47;
      v50 = v49;
      v52 = v51;
      v54 = v53;

    }
    else
    {
      v48 = 0;
      v50 = 0;
      v52 = 0;
      v54 = 0;
    }
    v82[0] = v48;
    v82[1] = v50;
    v82[2] = v52;
    v82[3] = v54;
    v83 = v46 == 0;
    v57 = swift_getObjectType(v43);
    v58 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v79, a2, v19);
    v56 = 1;
    v81((char *)v58, 0, 1, v19);
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v44 + 16))(v3, v58, v82, v57, v44);
    swift_unknownObjectRelease(v43);
    sub_10000CB4C(v58, (uint64_t *)&unk_100642710);
    return v56;
  }
  if (IndexPath.count.getter(v40) != 2)
    goto LABEL_38;
  result = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (result)
  {
    if ((objc_msgSend((id)result, "isGathering") & 1) != 0
      || (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) == 0
      || (sub_100195148(a2) & 1) == 0)
    {
      v55 = (uint64_t)v80;
      (*(void (**)(void))(v20 + 16))();
      v81((char *)v55, 0, 1, v19);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v55, 1, v19) != 1)
      {
        v71 = v77;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v77, v55, v19);
        v72 = (void *)sub_10017A754(v71, 0);
        if (v72)
        {
          v73 = v72;
          v74 = objc_msgSend(v72, "fpfs_fpItem");
          swift_unknownObjectRelease(v73);
          if (v74)
          {
            v75 = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting);
            if (!v75)
            {
              (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v77, v19);

              return 0;
            }
            v76 = v75;
            objc_msgSend(v75, "didTapOnUnselectableItem:", v74);

            swift_unknownObjectRelease(v76);
          }
        }
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v77, v19);
        return 0;
      }
LABEL_40:
      sub_10000CB4C(v55, (uint64_t *)&unk_100642710);
      return 0;
    }
LABEL_38:
    v55 = (uint64_t)v80;
    v81(v80, 1, 1, v19);
    goto LABEL_40;
  }
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_100199994(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  LOBYTE(a5) = a5(v13, v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return a5 & 1;
}

double sub_100199A58(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double result;

  v2 = v1;
  v4 = static os_log_type_t.debug.getter(a1);
  v5 = sub_10006922C((uint64_t *)&unk_100644560);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v6 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  *(_QWORD *)(v6 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  *(_QWORD *)(v6 + 32) = a1;
  sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
  v7 = a1;
  v8 = (void *)static OS_os_log.default.getter(v7);
  os_log(_:dso:log:type:_:)("Handling archive item: %@", 25, 2, &_mh_execute_header, v8, v4, v6);
  swift_bridgeObjectRelease(v6);

  v9 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v10 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = swift_allocObject(&unk_1005CE5C8, 32, 7);
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = v7;
  swift_retain();
  sub_10047B94C(v12, v2, (uint64_t)sub_1001D11B8, v11);

  swift_release(v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void sub_100199BF8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  __int128 v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;

  if (a2 || !a1)
  {
    v17 = static os_log_type_t.error.getter(a1);
    v18 = sub_10006922C((uint64_t *)&unk_100644560);
    v19 = swift_allocObject(v18, 112, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v19 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v19 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v19 + 32) = a3;
    if (a2)
    {
      v20 = a3;
      v21 = _convertErrorToNSError(_:)(a2);
      v26 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v27 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)&v24 = v21;
      sub_1000E85C4(&v24, v19 + 72);
    }
    else
    {
      *(_QWORD *)(v19 + 96) = &type metadata for String;
      *(_QWORD *)(v19 + 104) = sub_10006A638();
      *(_QWORD *)(v19 + 72) = 0xD000000000000013;
      *(_QWORD *)(v19 + 80) = 0x8000000100516BA0;
      v22 = a3;
    }
    v23 = sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v16 = (id)static OS_os_log.default.getter(v23);
    os_log(_:dso:log:type:_:)("Error unarchiving item:%@. Error: %@", 36, 2, &_mh_execute_header, v16, v17, v19);
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    v7 = a1;
    v8 = static os_log_type_t.debug.getter(v7);
    v9 = sub_10006922C((uint64_t *)&unk_100644560);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v10 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v10 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v10 + 32) = v7;
    sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v11 = v7;
    v12 = (void *)static OS_os_log.default.getter(v11);
    os_log(_:dso:log:type:_:)("Unarchive operation ended with result item", 42, 2, &_mh_execute_header, v12, v8, v10);
    swift_bridgeObjectRelease(v10);

    v13 = swift_allocObject(&unk_1005CE5F0, 32, 7);
    *(_QWORD *)(v13 + 16) = a4;
    *(_QWORD *)(v13 + 24) = v11;
    v27 = (uint64_t)sub_1001D11CC;
    v28 = v13;
    *(_QWORD *)&v24 = _NSConcreteStackBlock;
    *((_QWORD *)&v24 + 1) = 1107296256;
    v25 = sub_10004A82C;
    v26 = &unk_1005CE608;
    v14 = _Block_copy(&v24);
    v15 = v28;
    v16 = v11;
    swift_retain();
    swift_release(v15);
    DOCRunInMainThread(v14);
    _Block_release(v14);
  }

}

void sub_100199F08(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v7 + 32) = a2;
    aBlock[0] = v7;
    specialized Array._endMutation()(v7);
    v8 = aBlock[0];
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v9 = a2;
    isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
    v13 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016C02C;
    aBlock[3] = &unk_1005CE630;
    v11 = _Block_copy(aBlock);
    objc_msgSend(v5, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, 0, v11, swift_release(v13).n128_f64[0]);
    _Block_release(v11);

    swift_bridgeObjectRelease(v8);
  }
}

void DOCItemCollectionViewController.collectionView(_:didSelectItemAt:)(uint64_t a1, uint64_t a2)
{
  sub_1001C8FEC(a2);
}

void DOCItemCollectionViewController.collectionView(_:didDeselectItemAt:)(uint64_t a1, uint64_t a2)
{
  sub_1001C9A60(a2);
}

uint64_t sub_10019A06C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  a5(v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void *DOCItemCollectionViewController.collectionView(_:canPerformPrimaryActionForItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_10019191C(a2);
}

uint64_t DOCItemCollectionViewController.collectionView(_:performPrimaryActionForItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  NSObject *v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  __n128 v62;
  uint64_t v63;
  _QWORD v64[2];
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[24];

  v70 = a1;
  v71 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v64 - v8;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v64 - v15;
  v17 = v2;
  v18 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v18, v74, 0, 0);
  if (*v18 != 2)
  {
    v38 = v70;
    v39 = v71;
    return sub_10019A70C(v38, v39);
  }
  v19 = sub_1001C8DBC();
  v20 = v19;
  v21 = Logger.UI.unsafeMutableAddressor(v19);
  v69 = v11;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  if ((v20 & 1) == 0)
  {
    v40 = v13;
    v41 = v10;
    v22(v13, v21, v10);
    v42 = v6;
    v43 = v6;
    v44 = v71;
    v45 = v3;
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v43, v71, v3);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.debug.getter(v47);
    v49 = v47;
    v66 = v48;
    v50 = os_log_type_enabled(v47, v48);
    v51 = v45;
    v52 = v4;
    v67 = v17;
    v54 = v69;
    v53 = v70;
    if (v50)
    {
      v55 = swift_slowAlloc(22, -1);
      v65 = v40;
      v68 = v41;
      v56 = v55;
      v73 = swift_slowAlloc(64, -1);
      v57 = v73;
      *(_DWORD *)v56 = 136315394;
      v72 = sub_1000544FC(0xD000000000000030, 0x80000001005139D0, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
      *(_WORD *)(v56 + 12) = 2080;
      v64[1] = v56 + 14;
      v58 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v59 = dispatch thunk of CustomStringConvertible.description.getter(v51, v58);
      v61 = v60;
      v72 = sub_1000544FC(v59, v60, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
      v62 = swift_bridgeObjectRelease(v61);
      (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v42, v51, v62);
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v66, "%s %s performing primary action", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
      v63 = v57;
      v53 = v70;
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v56, -1, -1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v65, v68);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v51);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v41);
    }
    v38 = v53;
    v39 = v44;
    return sub_10019A70C(v38, v39);
  }
  v22(v16, v21, v10);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v71, v3);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.debug.getter(v24);
  v26 = v25;
  v27 = os_log_type_enabled(v24, v25);
  v28 = v69;
  if (v27)
  {
    v29 = swift_slowAlloc(22, -1);
    v68 = v10;
    v30 = v29;
    v31 = swift_slowAlloc(64, -1);
    v73 = v31;
    *(_DWORD *)v30 = 136315394;
    LODWORD(v71) = v26;
    v72 = sub_1000544FC(0xD000000000000030, 0x80000001005139D0, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
    *(_WORD *)(v30 + 12) = 2080;
    v32 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v33 = dispatch thunk of CustomStringConvertible.description.getter(v3, v32);
    v35 = v34;
    v72 = sub_1000544FC(v33, v34, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
    v36 = swift_bridgeObjectRelease(v35);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v9, v3, v36);
    _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v71, "%s %s navigation action. Error if this was not handled by didSelect:", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v16, v68);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);

    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v10);
  }
}

uint64_t sub_10019A70C(void *a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Available;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  void **v71;
  uint64_t v72;
  void **v73;
  os_log_type_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  NSObject *v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  unsigned __int8 v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint8_t *v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  unsigned __int8 v107;
  uint64_t v108;
  unsigned __int8 v109;
  char *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint8_t *v115;
  void *v116;
  void *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  void **v123;
  _BYTE *v124;
  char *v125;
  uint64_t v126;
  void **v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  _BYTE *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  _BOOL4 v137;
  uint8_t *v138;
  uint8_t *v139;
  uint64_t v140;
  id v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  const char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  NSObject *v152;
  uint64_t v153;
  os_log_type_t v154;
  uint64_t v155;
  void **v156;
  void **v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  __n128 v162;
  NSObject *v163;
  uint64_t ObjectType;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  os_log_type_t v171;
  uint8_t *v172;
  uint8_t *v173;
  id v174;
  void *v175;
  unsigned int v176;
  char *v177;
  void *v178;
  uint64_t v179;
  void **inited;
  id v181;
  void **v182;
  id v183;
  id v184;
  uint64_t v185;
  id v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  _BYTE *v193;
  char *v194;
  _BYTE *v195;
  NSObject *v196;
  os_log_type_t v197;
  _BOOL4 v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  double v202;
  unsigned int v203;
  BOOL v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  double v208;
  NSObject *v209;
  __n128 v210;
  uint64_t v211;
  uint64_t v212;
  NSObject *v213;
  os_log_type_t v214;
  _BOOL4 v215;
  uint8_t *v216;
  NSString v217;
  double v218;
  _BYTE *v219;
  uint64_t v220;
  uint64_t v221;
  __n128 v222;
  char *v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  uint8_t *v227;
  uint8_t *v228;
  char *v229;
  void (*v230)(char *, uint64_t);
  _QWORD *v231;
  __n128 v232;
  uint64_t v233;
  NSObject *v234;
  os_log_type_t v235;
  uint8_t *v236;
  uint8_t *v237;
  _BYTE *v238;
  void **v239;
  Class v240;
  void **v241;
  Class isa;
  id v243;
  id v244;
  char *v245;
  uint64_t v246;
  NSObject *v247;
  os_log_type_t v248;
  uint8_t *v249;
  uint8_t *v250;
  _BYTE *v251;
  uint64_t v252;
  void ***v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  NSObject *v257;
  os_log_type_t v258;
  _BOOL4 v259;
  uint8_t *v260;
  uint64_t v261;
  id v262;
  uint64_t v263;
  _BOOL4 v264;
  char *v265;
  void *v266;
  unsigned int v267;
  char *v268;
  char *v269;
  uint64_t v270;
  NSObject *v271;
  os_log_type_t v272;
  uint8_t *v273;
  uint8_t *v274;
  void *v275;
  id v276;
  uint64_t v277;
  void **v278;
  id v279;
  void **v280;
  Class v281;
  id v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  id v286;
  char *v287;
  void *v288;
  unsigned int v289;
  double v290;
  id v291;
  char v292;
  __n128 v293;
  id v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  char *v303;
  uint64_t v304;
  NSObject *v305;
  os_log_type_t v306;
  uint8_t *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  __n128 v311;
  uint64_t v312;
  uint64_t v313;
  void **v314;
  uint64_t v315;
  NSObject *v316;
  os_log_type_t v317;
  uint64_t v318;
  uint64_t v319;
  unsigned int v320;
  id v321;
  uint64_t v322;
  void *v323;
  char *v324;
  id v325;
  char *v326;
  char *v327;
  char *v328;
  unint64_t v329;
  char v330;
  char v331;
  int v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  NSObject *v336;
  os_log_type_t v337;
  uint8_t *v338;
  uint8_t *v339;
  NSObject *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  id v344;
  id v345;
  __n128 v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  NSObject *v350;
  os_log_type_t v351;
  _BOOL4 v352;
  NSObject *v353;
  uint8_t *v354;
  void *Strong;
  __n128 v356;
  void *v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  NSObject *v361;
  os_log_type_t v362;
  _BOOL4 v363;
  uint64_t v364;
  uint8_t *v365;
  uint8_t *v366;
  id v367;
  char *v368;
  id v369;
  uint64_t v370;
  NSObject *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  id v376;
  void *v377;
  uint64_t v378;
  char *v379;
  id v380;
  __n128 v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  NSObject *v385;
  os_log_type_t v386;
  _BOOL4 v387;
  NSObject *v388;
  char *v389;
  uint8_t *v390;
  uint8_t *v391;
  char *v392;
  id v393;
  Class v394;
  id v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  void **v399;
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  char *v404;
  char *v405;
  char *v406;
  char *v407;
  char *v408;
  char *v409;
  NSObject *v410;
  char *v411;
  uint64_t v412;
  char *v413;
  char *v414;
  char *v415;
  id v416;
  char *v417;
  char *v418;
  char *v419;
  char *v420;
  char *v421;
  uint64_t v422;
  char *v423;
  uint64_t v424;
  void **v425;
  uint64_t v426;
  char *v427;
  char *v428;
  uint64_t v429;
  uint64_t (*v430)(char *, uint64_t, uint64_t);
  _BYTE *v431;
  NSObject *v432;
  uint64_t v433;
  uint64_t v434;
  char *v435;
  uint64_t v436;
  void **v437;
  char v438[8];
  char v439[8];
  void **aBlock;
  _QWORD v441[4];
  uint64_t v442;
  char v443[8];
  NSObject *v444;
  char v445[8];
  uint64_t v446;
  char v447[8];

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v422 = (uint64_t)&v399 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v428 = (char *)&v399 - v9;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v419 = (char *)&v399 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = ((char *)&v399 - v14);
  __chkstk_darwin(v16);
  Available = (uint64_t)&v399 - v17;
  __chkstk_darwin(v19);
  v432 = ((char *)&v399 - v20);
  v412 = v21;
  __chkstk_darwin(v22);
  v435 = (char *)&v399 - v23;
  v24 = type metadata accessor for Logger(0);
  v436 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v421 = (char *)&v399 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  __chkstk_darwin(v27);
  v414 = (char *)&v399 - v28;
  __chkstk_darwin(v29);
  v409 = (char *)&v399 - v30;
  __chkstk_darwin(v31);
  v402 = (char *)&v399 - v32;
  __chkstk_darwin(v33);
  v404 = (char *)&v399 - v34;
  __chkstk_darwin(v35);
  v403 = (char *)&v399 - v36;
  __chkstk_darwin(v37);
  v401 = (char *)&v399 - v38;
  __chkstk_darwin(v39);
  v400 = (char *)&v399 - v40;
  __chkstk_darwin(v41);
  v405 = (char *)&v399 - v42;
  __chkstk_darwin(v43);
  v407 = (char *)&v399 - v44;
  __chkstk_darwin(v45);
  v415 = (char *)&v399 - v46;
  __chkstk_darwin(v47);
  v406 = (char *)&v399 - v48;
  __chkstk_darwin(v49);
  v413 = (char *)&v399 - v50;
  __chkstk_darwin(v51);
  v411 = (char *)&v399 - v52;
  __chkstk_darwin(v53);
  v417 = (char *)&v399 - v54;
  __chkstk_darwin(v55);
  v408 = (char *)&v399 - v56;
  __chkstk_darwin(v57);
  v420 = (char *)&v399 - v58;
  __chkstk_darwin(v59);
  v423 = (char *)&v399 - v60;
  __chkstk_darwin(v61);
  v427 = (char *)&v399 - v62;
  __chkstk_darwin(v63);
  v67 = (char *)&v399 - v66;
  v68 = qword_100672750 + 1;
  if (__OFADD__(qword_100672750, 1))
  {
    __break(1u);
    goto LABEL_144;
  }
  v418 = v65;
  v410 = v15;
  v416 = a1;
  ++qword_100672750;
  v69 = Logger.UI.unsafeMutableAddressor(v64);
  v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v436 + 16);
  v429 = v69;
  v430 = v70;
  ((void (*)(char *))v70)(v67);
  v71 = *(void ***)(v11 + 16);
  v434 = a2;
  v437 = v71;
  v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v71)(v435, a2, v10);
  v73 = (void **)v68;
  v15 = Logger.logObject.getter(v72);
  v74 = static os_log_type_t.default.getter(v15);
  v75 = os_log_type_enabled(v15, v74);
  v431 = v3;
  v433 = v11;
  v425 = v73;
  if (v75)
  {
    v76 = swift_slowAlloc(32, -1);
    v424 = Available;
    v77 = v76;
    v78 = (void **)swift_slowAlloc(64, -1);
    v426 = v24;
    v399 = v78;
    aBlock = v78;
    *(_DWORD *)v77 = 136315650;
    v446 = sub_1000544FC(0xD00000000000001BLL, 0x8000000100516B60, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
    *(_WORD *)(v77 + 12) = 2048;
    v446 = (uint64_t)v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
    *(_WORD *)(v77 + 22) = 2080;
    v79 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v80 = v11;
    v81 = v435;
    v82 = dispatch thunk of CustomStringConvertible.description.getter(v10, v79);
    v84 = v83;
    v446 = sub_1000544FC(v82, v83, (uint64_t *)&aBlock);
    v3 = v431;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
    v85 = swift_bridgeObjectRelease(v84);
    v86 = *(NSObject **)(v80 + 8);
    ((void (*)(char *, uint64_t, __n128))v86)(v81, v10, v85);
    _os_log_impl((void *)&_mh_execute_header, v15, v74, "%s [TAP][%ld] Primary Action (user tapped) at index path: %s", (uint8_t *)v77, 0x20u);
    v87 = v399;
    swift_arrayDestroy(v399, 2, (char *)&type metadata for Any + 8);
    v24 = v426;
    swift_slowDealloc(v87, -1, -1);
    v88 = v77;
    Available = v424;
    swift_slowDealloc(v88, -1, -1);
  }
  else
  {
    v86 = *(NSObject **)(v11 + 8);
    ((void (*)(char *, uint64_t))v86)(v435, v10);
  }

  v436 = *(_QWORD *)(v436 + 8);
  ((void (*)(char *, uint64_t))v436)(v67, v24);
  v89 = (uint64_t)v432;
  v90 = &off_10061F000;
  v91 = objc_msgSend(v3, "isEditing");
  v92 = v434;
  if ((v91 & 1) == 0)
  {
    v93 = v427;
    v94 = v430(v427, v429, v24);
    v95 = Logger.logObject.getter(v94);
    v96 = static os_log_type_t.default.getter(v95);
    if (os_log_type_enabled(v95, v96))
    {
      v97 = v24;
      v98 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v98 = 134217984;
      v93 = v427;
      aBlock = v425;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "[TAP][%ld] Deselect item", v98, 0xCu);
      v99 = v98;
      v24 = v97;
      v92 = v434;
      swift_slowDealloc(v99, -1, -1);
    }

    ((void (*)(char *, uint64_t))v436)(v93, v24);
    v100 = sub_10006922C(&qword_100644BD0);
    v101 = *(unsigned __int8 *)(v433 + 80);
    v102 = (v101 + 32) & ~v101;
    v103 = swift_allocObject(v100, v102 + *(_QWORD *)(v433 + 72), v101 | 7);
    *(_OWORD *)(v103 + 16) = xmmword_1004D9670;
    v104 = v103 + v102;
    ((void (*)(uint64_t, uint64_t, uint64_t))v437)(v103 + v102, v92, v10);
    v105 = v431;
    sub_10009A978(0, v103);
    swift_setDeallocating(v103);
    v106 = v104;
    v3 = v105;
    swift_arrayDestroy(v106, *(_QWORD *)(v103 + 16), v10);
    swift_deallocClassInstance(v103, 32, 7);
    v89 = (uint64_t)v432;
  }
  v107 = objc_msgSend(v3, "isEditing");
  ((void (*)(uint64_t, uint64_t, uint64_t))v437)(v89, v92, v10);
  if ((v107 & 1) != 0)
  {
    v108 = ((uint64_t (*)(uint64_t, uint64_t))v86)(v89, v10);
  }
  else
  {
    v15 = v86;
    v109 = sub_100195148(v89);
    v90 = &off_10061F000;
    v108 = ((uint64_t (*)(uint64_t, uint64_t))v86)(v89, v10);
    if ((v109 & 1) != 0)
    {
      v110 = v423;
      v111 = v430(v423, v429, v24);
      v112 = Logger.logObject.getter(v111);
      v113 = static os_log_type_t.default.getter(v112);
      if (os_log_type_enabled(v112, v113))
      {
        v114 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v114 = 134217984;
        v92 = v434;
        aBlock = v425;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
        _os_log_impl((void *)&_mh_execute_header, v112, v113, "[TAP][%ld] Create new file", v114, 0xCu);
        v115 = v114;
        v3 = v431;
        swift_slowDealloc(v115, -1, -1);
      }

      v108 = ((uint64_t (*)(char *, uint64_t))v436)(v110, v24);
      v86 = v15;
      if (*(_QWORD *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager])
      {
        DOCItemCollectionViewController.getCurrentLocation()();
        v117 = v116;
        sub_10041A310(v116);

        v3 = v431;
      }
    }
  }
  if (IndexPath.count.getter(v108) != 2)
    goto LABEL_21;
  v118 = *(char **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v118)
  {
    __break(1u);
    goto LABEL_160;
  }
  if ((objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection], "isGathering") & 1) == 0&& (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0&& (sub_100195148(v92) & 1) != 0)
  {
LABEL_21:
    v119 = (uint64_t)v428;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v433 + 56))(v428, 1, 1, v10);
    return sub_10000CB4C(v119, (uint64_t *)&unk_100642710);
  }
  v427 = v118;
  v119 = (uint64_t)v428;
  ((void (*)(void))v437)();
  v120 = v433;
  v121 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v433 + 56);
  v121(v119, 0, 1, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v119, 1, v10) == 1)
    return sub_10000CB4C(v119, (uint64_t *)&unk_100642710);
  v432 = v86;
  v428 = *(char **)(v120 + 32);
  ((void (*)(uint64_t, uint64_t, uint64_t))v428)(Available, v119, v10);
  objc_msgSend(v3, "loadViewIfNeeded");
  v123 = (void **)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v124 = v3;
  v423 = (char *)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v125 = *(char **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v125)
  {
    __break(1u);
    goto LABEL_162;
  }
  v126 = v422;
  v127 = v437;
  ((void (*)(uint64_t, uint64_t, uint64_t))v437)(v422, v434, v10);
  v121(v126, 0, 1, v10);
  v128 = *(_QWORD *)&v125[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState];
  v129 = v128 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v128 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, &aBlock, 33, 0);
  swift_retain();
  v130 = v125;
  sub_10008BB40(v126, v129, (uint64_t *)&unk_100642710);
  swift_endAccess(&aBlock);

  swift_release(v128);
  v435 = (char *)sub_10017A754(Available, 0);
  if (!v435)
  {
    v149 = v421;
    v430(v421, v429, v24);
    v150 = v419;
    v151 = ((uint64_t (*)(char *, uint64_t, uint64_t))v127)(v419, Available, v10);
    v152 = Logger.logObject.getter(v151);
    v153 = v24;
    v154 = static os_log_type_t.error.getter(v152);
    if (os_log_type_enabled(v152, v154))
    {
      v155 = swift_slowAlloc(22, -1);
      v156 = (void **)swift_slowAlloc(32, -1);
      v424 = Available;
      v157 = v156;
      aBlock = v156;
      *(_DWORD *)v155 = 134218242;
      v446 = (uint64_t)v425;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
      *(_WORD *)(v155 + 12) = 2080;
      v158 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v159 = dispatch thunk of CustomStringConvertible.description.getter(v10, v158);
      v161 = v160;
      v446 = sub_1000544FC(v159, v160, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
      v162 = swift_bridgeObjectRelease(v161);
      v163 = v432;
      ((void (*)(char *, uint64_t, __n128))v432)(v150, v10, v162);
      _os_log_impl((void *)&_mh_execute_header, v152, v154, "[TAP][%ld] No Node at resolved index path: %s. Bailing out", (uint8_t *)v155, 0x16u);
      swift_arrayDestroy(v157, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v157, -1, -1);
      swift_slowDealloc(v155, -1, -1);

      ((void (*)(char *, uint64_t))v436)(v421, v153);
      return ((uint64_t (*)(uint64_t, uint64_t))v163)(v424, v10);
    }

    v209 = v432;
    ((void (*)(char *, uint64_t))v432)(v150, v10);
    ((void (*)(char *, uint64_t))v436)(v149, v153);
    return ((uint64_t (*)(uint64_t, uint64_t, __n128))v209)(Available, v10, v210);
  }
  v131 = v124;
  v426 = v24;
  v424 = Available;
  if (objc_msgSend(v124, "isEditing"))
  {
    v132 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
    if (v124[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] != 1
      || !objc_msgSend(v435, "isFolder"))
    {
      v191 = v418;
      v192 = v426;
      v430(v418, v429, v426);
      v193 = v124;
      v194 = v435;
      swift_unknownObjectRetain_n(v435, 2);
      v195 = v193;
      v196 = Logger.logObject.getter(v195);
      v197 = static os_log_type_t.default.getter(v196);
      v198 = os_log_type_enabled(v196, v197);
      v199 = v425;
      if (v198)
      {
        v427 = (char *)v10;
        v200 = 5457241;
        v201 = swift_slowAlloc(32, -1);
        v437 = (void **)swift_slowAlloc(64, -1);
        aBlock = v437;
        *(_DWORD *)v201 = 134218498;
        v446 = (uint64_t)v199;
        *(_QWORD *)&v202 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447).n128_u64[0];
        *(_WORD *)(v201 + 12) = 2080;
        v203 = objc_msgSend(v195, "isEditing", v202);
        v204 = v203 == 0;
        if (v203)
          v205 = 5457241;
        else
          v205 = 20302;
        v206 = 0xE300000000000000;
        if (v204)
          v207 = 0xE200000000000000;
        else
          v207 = 0xE300000000000000;
        v446 = sub_1000544FC(v205, v207, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);

        *(_QWORD *)&v208 = swift_bridgeObjectRelease(v207).n128_u64[0];
        *(_WORD *)(v201 + 22) = 2080;
        if (v431[v132] == 1)
        {
          v194 = v435;
          if (objc_msgSend(v435, "isFolder", v208))
          {
            v200 = 20302;
            v206 = 0xE200000000000000;
          }
          Available = v424;
        }
        else
        {
          Available = v424;
          v194 = v435;
        }
        v446 = sub_1000544FC(v200, v206, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
        swift_unknownObjectRelease_n(v194, 2);

        swift_bridgeObjectRelease(v206);
        _os_log_impl((void *)&_mh_execute_header, v196, v197, "[TAP][%ld] Selecting the node: isEditing: %s, canMultiSelect: %s", (uint8_t *)v201, 0x20u);
        v241 = v437;
        swift_arrayDestroy(v437, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v241, -1, -1);
        swift_slowDealloc(v201, -1, -1);

        ((void (*)(char *, uint64_t))v436)(v418, v426);
        v10 = (uint64_t)v427;
      }
      else
      {

        swift_unknownObjectRelease_n(v194, 2);
        ((void (*)(char *, uint64_t))v436)(v191, v192);
        Available = v424;
      }
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v416, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

      v195[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      v243 = objc_msgSend(v195, "viewIfLoaded");
      v244 = objc_msgSend(v243, "window");

      v209 = v432;
      if (v244)
        sub_1000926C8();
      v210 = swift_unknownObjectRelease(v194);
      return ((uint64_t (*)(uint64_t, uint64_t, __n128))v209)(Available, v10, v210);
    }
  }
  v133 = v420;
  v134 = v430(v420, v429, v426);
  v135 = Logger.logObject.getter(v134);
  v136 = static os_log_type_t.default.getter(v135);
  v137 = os_log_type_enabled(v135, v136);
  v15 = v425;
  if (v137)
  {
    v138 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v138 = 134217984;
    aBlock = (void **)&v15->isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
    _os_log_impl((void *)&_mh_execute_header, v135, v136, "[TAP][%ld] Performing action (user not in select mode)", v138, 0xCu);
    v139 = v138;
    v131 = v431;
    swift_slowDealloc(v139, -1, -1);
  }

  ((void (*)(char *, uint64_t))v436)(v133, v426);
  v140 = v424;
  v141 = v435;
  if (v131[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1
    && objc_msgSend(v435, "isFolder")
    && v131[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] == 1)
  {
    v142 = v408;
    v143 = v426;
    v144 = v430(v408, v429, v426);
    v145 = Logger.logObject.getter(v144);
    v146 = static os_log_type_t.default.getter(v145);
    if (os_log_type_enabled(v145, v146))
    {
      v147 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v147 = 134217984;
      v143 = v426;
      aBlock = (void **)&v15->isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
      v148 = "[TAP][%ld] Folder opening prevented while in gesture selection mode. Bailing out";
LABEL_62:
      _os_log_impl((void *)&_mh_execute_header, v145, v146, v148, v147, 0xCu);
      swift_slowDealloc(v147, -1, -1);
      goto LABEL_63;
    }
    goto LABEL_63;
  }
  ObjectType = swift_getObjectType(v141);
  v165 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  if (!v165)
  {
    v142 = v414;
    v143 = v426;
    v211 = v430(v414, v429, v426);
    v145 = Logger.logObject.getter(v211);
    v146 = static os_log_type_t.error.getter(v145);
    if (os_log_type_enabled(v145, v146))
    {
      v147 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v147 = 134217984;
      v143 = v426;
      aBlock = (void **)&v15->isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
      v148 = "[TAP][%ld] Couldn't fetch FPItem for the current node. Bailing out";
      goto LABEL_62;
    }
LABEL_63:
    swift_unknownObjectRelease(v141);

    ((void (*)(char *, uint64_t))v436)(v142, v143);
    return ((uint64_t (*)(uint64_t, uint64_t))v432)(v140, v10);
  }
  v166 = (char *)v165;
  v422 = ObjectType;
  v167 = v417;
  v168 = v426;
  v169 = v430(v417, v429, v426);
  v170 = Logger.logObject.getter(v169);
  v171 = static os_log_type_t.default.getter(v170);
  if (os_log_type_enabled(v170, v171))
  {
    v172 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v172 = 134217984;
    v168 = v426;
    aBlock = (void **)&v15->isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
    _os_log_impl((void *)&_mh_execute_header, v170, v171, "[TAP][%ld] FPItem fetched", v172, 0xCu);
    v173 = v172;
    v167 = v417;
    swift_slowDealloc(v173, -1, -1);
  }

  ((void (*)(char *, uint64_t))v436)(v167, v168);
  v174 = objc_msgSend(v166, "copyingProgress");
  if (v174)
  {
    v175 = v174;
    if ((objc_msgSend(v174, "isFinished") & 1) != 0)
    {

      goto LABEL_44;
    }
    v223 = v411;
    v224 = v430(v411, v429, v168);
    v225 = Logger.logObject.getter(v224);
    v226 = static os_log_type_t.default.getter(v225);
    if (os_log_type_enabled(v225, v226))
    {
      v227 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v227 = 134217984;
      v140 = v424;
      aBlock = (void **)&v15->isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
      _os_log_impl((void *)&_mh_execute_header, v225, v226, "[TAP][%ld] Item is in the middle of a copy...", v227, 0xCu);
      v228 = v227;
      v168 = v426;
      swift_slowDealloc(v228, -1, -1);
    }

    v229 = v223;
    v230 = (void (*)(char *, uint64_t))v436;
    ((void (*)(char *, uint64_t))v436)(v229, v168);
    v231 = &v431[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    v232 = swift_beginAccess(&v431[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &aBlock, 0, 0);
    if (!*v231)
    {
      v245 = v406;
      v246 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v430)(v406, v429, v168, v232);
      v247 = Logger.logObject.getter(v246);
      v248 = static os_log_type_t.default.getter(v247);
      if (os_log_type_enabled(v247, v248))
      {
        v249 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v249 = 134217984;
        v140 = v424;
        v446 = (uint64_t)v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
        _os_log_impl((void *)&_mh_execute_header, v247, v248, "[TAP][%ld] Cancelling the copy", v249, 0xCu);
        v250 = v249;
        v168 = v426;
        swift_slowDealloc(v250, -1, -1);
      }

      v230(v245, v168);
      objc_msgSend(v175, "cancel");

      swift_unknownObjectRelease(v435);
      return ((uint64_t (*)(uint64_t, uint64_t))v432)(v140, v10);
    }
    v233 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v430)(v413, v429, v168, v232);
    v234 = Logger.logObject.getter(v233);
    v235 = static os_log_type_t.default.getter(v234);
    if (os_log_type_enabled(v234, v235))
    {
      v236 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v236 = 134217984;
      v140 = v424;
      v446 = (uint64_t)v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447);
      _os_log_impl((void *)&_mh_execute_header, v234, v235, "[TAP][%ld] Deselecting the item. Bailing out", v236, 0xCu);
      v237 = v236;
      v168 = v426;
      swift_slowDealloc(v237, -1, -1);
    }

    v230(v413, v168);
    v238 = v431;
    objc_msgSend(v431, "loadViewIfNeeded");
    v123 = *(void ***)&v423[(_QWORD)v238];
    if (v123)
    {
      v239 = v123;
      v240 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v239, "deselectItemAtIndexPath:animated:", v240, 1);

      swift_unknownObjectRelease(v435);
      return ((uint64_t (*)(_QWORD, _QWORD))v432)(v140, v10);
    }
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
LABEL_44:
  if ((objc_msgSend(v141, "isReadable") & 1) == 0)
  {
    v212 = v430(v415, v429, v168);
    v213 = Logger.logObject.getter(v212);
    v214 = static os_log_type_t.error.getter(v213);
    v215 = os_log_type_enabled(v213, v214);
    v86 = v432;
    if (v215)
    {
      v216 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v216 = 134217984;
      v168 = v426;
      aBlock = (void **)&v15->isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
      _os_log_impl((void *)&_mh_execute_header, v213, v214, "[TAP][%ld] Item is not readable. Bailing out", v216, 0xCu);
      swift_slowDealloc(v216, -1, -1);
    }

    ((void (*)(char *, uint64_t))v436)(v415, v168);
    v217 = objc_msgSend(v141, "displayName");
    v219 = v431;
    if (!v217)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v221 = v220;
      v217 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v218 = swift_bridgeObjectRelease(v221).n128_u64[0];
    }
    DOCAlertItemIsNotReadable(v217, objc_msgSend(v141, "isFolder", v218), v219);

    swift_unknownObjectRelease(v141);
    return ((uint64_t (*)(uint64_t, uint64_t, __n128))v86)(v140, v10, v222);
  }
  v423 = v166;
  v176 = objc_msgSend(v141, "isFolder");
  v86 = v432;
  v177 = v431;
  if (!v176)
    goto LABEL_92;
  v178 = *(void **)&v431[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v179 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = (void **)swift_initStackObject(v179, v439);
  *((_OWORD *)inited + 1) = xmmword_1004D9B40;
  v181 = v423;
  inited[4] = v423;
  aBlock = inited;
  specialized Array._endMutation()(inited);
  v182 = aBlock;
  v183 = v178;
  v184 = v181;
  v185 = DOCAnalyticsActionEvent.FileProvider.init(items:)(v182);
  v186 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v187 = objc_msgSend(v186, "bundleIdentifier");

  if (v187)
  {
    v188 = static String._unconditionallyBridgeFromObjectiveC(_:)(v187);
    v190 = v189;

  }
  else
  {
    v188 = 0;
    v190 = 0;
  }
  v251 = v431;
  v252 = DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(objc_msgSend(*(id *)&v431[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier"));
  v253 = (void ***)&v251[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(v253, v438, 0, 0);
  v123 = *v253;
  if ((unint64_t)*v253 >= 3)
  {
LABEL_163:
    aBlock = v123;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, &aBlock, &type metadata for DOCDisplayMode, &type metadata for Int);
    __break(1u);
    return result;
  }
  DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(&v446, 4, v183, v185, v188, v190, v252, ((_DWORD)v123 + 1));
  v254 = v407;
  v255 = v426;
  v256 = v430(v407, v429, v426);
  v257 = Logger.logObject.getter(v256);
  v258 = static os_log_type_t.default.getter(v257);
  v259 = os_log_type_enabled(v257, v258);
  v86 = v432;
  if (v259)
  {
    v260 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v260 = 134217984;
    v255 = v426;
    aBlock = (void **)&v15->isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
    _os_log_impl((void *)&_mh_execute_header, v257, v258, "[TAP][%ld] Sending Analytics event.", v260, 0xCu);
    swift_slowDealloc(v260, -1, -1);
  }

  v261 = ((uint64_t (*)(char *, uint64_t))v436)(v254, v255);
  v262 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v261);
  DOCAnalyticsManager.sendActionEvent(_:)(&v446);

  sub_1000B3334((uint64_t)&v446);
  v140 = v424;
  v177 = v431;
LABEL_92:
  v263 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected;
  if ((v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] & 1) != 0)
  {
    v264 = 1;
  }
  else
  {
    v265 = &v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v445, 0, 0);
    v264 = *(_QWORD *)v265 == 2;
  }
  LODWORD(v421) = v264;
  v266 = *(void **)&v177[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v267 = objc_msgSend(v266, "isFilesApp");
  v90 = v435;
  if (!v267)
    goto LABEL_131;
  if ((v177[v263] & 1) == 0)
  {
    v268 = &v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v443, 0, 0);
    if (*(_QWORD *)v268 == 2)
      goto LABEL_131;
  }
  if ((objc_msgSend(v90, "isFolder") & 1) != 0)
    goto LABEL_131;
  v269 = v405;
  v270 = v430(v405, v429, v426);
  v271 = Logger.logObject.getter(v270);
  v272 = static os_log_type_t.default.getter(v271);
  if (os_log_type_enabled(v271, v272))
  {
    v273 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v273 = 134217984;
    aBlock = (void **)&v15->isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
    _os_log_impl((void *)&_mh_execute_header, v271, v272, "[TAP][%ld] Triggering action in Files for a non folder item.", v273, 0xCu);
    v274 = v273;
    v177 = v431;
    swift_slowDealloc(v274, -1, -1);
  }

  ((void (*)(char *, uint64_t))v436)(v269, v426);
  v275 = (void *)objc_opt_self(FPItemManager);
  v276 = objc_msgSend(v275, "defaultManager");
  v277 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v278 = (void **)swift_allocObject(v277, 40, 7);
  *((_OWORD *)v278 + 1) = xmmword_1004D9B40;
  v279 = v423;
  v278[4] = v423;
  aBlock = v278;
  specialized Array._endMutation()(v278);
  v280 = aBlock;
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v420 = (char *)v279;
  v281 = Array._bridgeToObjectiveC()().super.isa;
  v282 = objc_msgSend(v276, "eligibleActionsForItems:", v281, swift_bridgeObjectRelease(v280).n128_f64[0]);

  type metadata accessor for FPAction(0);
  v284 = v283;
  v285 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
  v67 = (char *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v282, v284, v285);

  v286 = FPActionUnarchive;
  LOBYTE(v281) = sub_100028BE0((uint64_t)v286, (uint64_t)v67);

  if ((v281 & 1) != 0)
  {
    v287 = &v427[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
    if ((v427[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
    {
      v288 = *(void **)(*(_QWORD *)v287 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v288);
    }
    else
    {
      v288 = (void *)*((_QWORD *)v287 + 1);
      swift_unknownObjectRetain(v288);
      if (!v288)
        goto LABEL_107;
    }
    v289 = objc_msgSend(v288, "isWritable");
    *(_QWORD *)&v290 = swift_unknownObjectRelease(v288).n128_u64[0];
    if (v289)
    {
      if ((objc_msgSend(v420, "isDownloading", v290) & 1) == 0)
      {
LABEL_144:
        v381 = swift_bridgeObjectRelease(v67);
        v382 = v400;
        v383 = v426;
        v384 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v430)(v400, v429, v426, v381);
        v385 = Logger.logObject.getter(v384);
        v386 = static os_log_type_t.default.getter(v385);
        v387 = os_log_type_enabled(v385, v386);
        v388 = v432;
        v389 = v435;
        if (v387)
        {
          v390 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v390 = 134217984;
          aBlock = (void **)&v15->isa;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
          _os_log_impl((void *)&_mh_execute_header, v385, v386, "[TAP][%ld] Unarchiving selected item.", v390, 0xCu);
          v391 = v390;
          v383 = v426;
          swift_slowDealloc(v391, -1, -1);
        }

        ((void (*)(char *, uint64_t))v436)(v382, v383);
        v392 = v420;
        sub_100199A58(v420);
        v393 = v416;
        if ((v421 & 1) == 0)
        {
          v394 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v393, "deselectItemAtIndexPath:animated:", v394, 1);

        }
        swift_unknownObjectRelease(v389);
        return ((uint64_t (*)(uint64_t, uint64_t))v388)(v424, v10);
      }
    }
  }
LABEL_107:
  v291 = v286;
  v292 = sub_100028BE0((uint64_t)v291, (uint64_t)v67);

  v293 = swift_bridgeObjectRelease(v67);
  if ((v292 & 1) == 0)
    goto LABEL_113;
  v294 = objc_msgSend(*(id *)&v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier", v293.n128_f64[0]);
  v295 = DOCDocumentSourceIdentifierRecentDocuments;
  v296 = static String._unconditionallyBridgeFromObjectiveC(_:)(v294);
  v298 = v297;
  v300 = static String._unconditionallyBridgeFromObjectiveC(_:)(v295);
  v301 = v299;
  if (v296 == v300 && v298 == v299)
  {

    swift_bridgeObjectRelease_n(v298, 2);
  }
  else
  {
    v302 = _stringCompareWithSmolCheck(_:_:expecting:)(v296, v298, v300, v299, 0);

    swift_bridgeObjectRelease(v298);
    v293 = swift_bridgeObjectRelease(v301);
    if ((v302 & 1) == 0)
      goto LABEL_113;
  }
  if ((objc_msgSend(v420, "isDownloading") & 1) == 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v177[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting]);
    if (Strong)
    {
      v357 = Strong;
      objc_msgSend(Strong, "didTapLocationOf:", v420);
      v356 = swift_unknownObjectRelease(v357);
    }
    v358 = v401;
    v359 = v426;
    v360 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v430)(v401, v429, v426, v356);
    v361 = Logger.logObject.getter(v360);
    v362 = static os_log_type_t.default.getter(v361);
    v363 = os_log_type_enabled(v361, v362);
    v364 = v434;
    if (v363)
    {
      v365 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v365 = 134217984;
      aBlock = (void **)&v15->isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
      _os_log_impl((void *)&_mh_execute_header, v361, v362, "[TAP][%ld] Unarchiving selected item from RECENTS. Fetching Parent", v365, 0xCu);
      v366 = v365;
      v358 = v401;
      v359 = v426;
      swift_slowDealloc(v366, -1, -1);
    }

    ((void (*)(char *, uint64_t))v436)(v358, v359);
    v367 = objc_msgSend(v275, "defaultManager");
    v368 = v420;
    v369 = objc_msgSend(v420, "parentItemID");
    v370 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v370 + 16);
    v371 = v410;
    ((void (*)(NSObject *, uint64_t, uint64_t))v437)(v410, v364, v10);
    v372 = *(unsigned __int8 *)(v433 + 80);
    v373 = (v372 + 56) & ~v372;
    v374 = swift_allocObject(&unk_1005CE578, v373 + v412, v372 | 7);
    *(_QWORD *)(v374 + 16) = v370;
    *(_QWORD *)(v374 + 24) = v15;
    *(_QWORD *)(v374 + 32) = v368;
    *(_BYTE *)(v374 + 40) = (_BYTE)v421;
    v375 = v374 + v373;
    v376 = v416;
    *(_QWORD *)(v374 + 48) = v416;
    ((void (*)(uint64_t, NSObject *, uint64_t))v428)(v375, v371, v10);
    v441[3] = sub_1001D1150;
    v442 = v374;
    aBlock = _NSConcreteStackBlock;
    v441[0] = 1107296256;
    v441[1] = sub_100083540;
    v441[2] = &unk_1005CE590;
    v377 = _Block_copy(&aBlock);
    v378 = v442;
    v379 = v368;
    v380 = v376;
    objc_msgSend(v367, "fetchItemForItemID:completionHandler:", v369, v377, swift_release(v378).n128_f64[0]);

    swift_unknownObjectRelease(v435);
    _Block_release(v377);

    return ((uint64_t (*)(uint64_t, uint64_t))v432)(v424, v10);
  }
LABEL_113:
  v303 = v403;
  v304 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v430)(v403, v429, v426, v293);
  v305 = Logger.logObject.getter(v304);
  v306 = static os_log_type_t.default.getter(v305);
  if (os_log_type_enabled(v305, v306))
  {
    v307 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v307 = 134217984;
    aBlock = (void **)&v15->isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
    _os_log_impl((void *)&_mh_execute_header, v305, v306, "[TAP][%ld] Preparing Quick Look for the preview", v307, 0xCu);
    swift_slowDealloc(v307, -1, -1);
  }

  ((void (*)(char *, uint64_t))v436)(v303, v426);
  v308 = &v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v309 = *(_QWORD *)&v177[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v309);
  v310 = sub_10006922C((uint64_t *)&unk_1006424B0);
  Available = Array<A>.fpfs_syncFetchAvailableFPItems()(v309, v310);
  v311 = swift_bridgeObjectRelease(v309);
  v90 = v435;
  if ((unint64_t)Available >> 62)
  {
    if (Available < 0)
      v397 = Available;
    else
      v397 = Available & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(Available);
    v312 = _CocoaArrayWrapper.endIndex.getter(v397);
    v311 = swift_bridgeObjectRelease(Available);
  }
  else
  {
    v312 = *(_QWORD *)((Available & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v313 = *((_QWORD *)v308 + 1);
  if ((unint64_t)v313 >> 62)
  {
    if (v313 < 0)
      v398 = v313;
    else
      v398 = v313 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v313);
    v314 = (void **)_CocoaArrayWrapper.endIndex.getter(v398);
    v311 = swift_bridgeObjectRelease(v313);
    if (v314 != (void **)v312)
      goto LABEL_119;
  }
  else
  {
    v314 = *(void ***)((v313 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v314 != (void **)v312)
    {
LABEL_119:
      v315 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v430)(v404, v429, v426, v311);
      v316 = Logger.logObject.getter(v315);
      v317 = static os_log_type_t.error.getter(v316);
      if (os_log_type_enabled(v316, v317))
      {
        v318 = swift_slowAlloc(32, -1);
        *(_DWORD *)v318 = 134218496;
        aBlock = (void **)&v15->isa;
        v427 = (char *)v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
        *(_WORD *)(v318 + 12) = 2048;
        aBlock = v314;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
        *(_WORD *)(v318 + 22) = 2048;
        v177 = v431;
        aBlock = (void **)v312;
        v10 = (uint64_t)v427;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
        _os_log_impl((void *)&_mh_execute_header, v316, v317, "[TAP][%ld] The number of DOCNodes (%ld) is different from the number of FPItems (%ld)", (uint8_t *)v318, 0x20u);
        v319 = v318;
        v90 = v435;
        swift_slowDealloc(v319, -1, -1);
      }

      ((void (*)(char *, uint64_t))v436)(v404, v426);
    }
  }
  if (v312 >= 1)
  {
    v320 = objc_msgSend(v266, "useSharedQuickLook");
    v86 = v432;
    if (!v320)
    {
LABEL_129:
      swift_bridgeObjectRelease(Available);
LABEL_130:
      v140 = v424;
LABEL_131:
      v333 = v409;
      v334 = v426;
      v335 = v430(v409, v429, v426);
      v336 = Logger.logObject.getter(v335);
      v337 = static os_log_type_t.default.getter(v336);
      if (os_log_type_enabled(v336, v337))
      {
        v338 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v338 = 134217984;
        v334 = v426;
        v444 = v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v444, v445);
        _os_log_impl((void *)&_mh_execute_header, v336, v337, "[TAP][%ld] Validate Node Selection and perform did pick", v338, 0xCu);
        v339 = v338;
        v177 = v431;
        swift_slowDealloc(v339, -1, -1);
      }

      ((void (*)(char *, uint64_t))v436)(v333, v334);
      v340 = v410;
      ((void (*)(NSObject *, uint64_t, uint64_t))v437)(v410, v434, v10);
      v341 = *(unsigned __int8 *)(v433 + 80);
      v342 = (v341 + 40) & ~v341;
      v343 = swift_allocObject(&unk_1005CE550, v342 + v412, v341 | 7);
      *(_QWORD *)(v343 + 16) = v15;
      *(_BYTE *)(v343 + 24) = (_BYTE)v421;
      v344 = v416;
      *(_QWORD *)(v343 + 32) = v416;
      ((void (*)(uint64_t, NSObject *, uint64_t))v428)(v343 + v342, v340, v10);
      v345 = v344;
      sub_1001B66A4(v90, 0, sub_1001D1094, v343, v177, v422);

      swift_unknownObjectRelease(v90);
      v222 = swift_release(v343);
      return ((uint64_t (*)(uint64_t, uint64_t, __n128))v86)(v140, v10, v222);
    }
    v321 = objc_msgSend(v266, "sceneIdentifier");
    if (!v321)
    {
      v395 = *(id *)DOCLog.Source.unsafeMutableAddressor();
      v396 = static os_log_type_t.debug.getter(v395);
      os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v395, v396, _swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(Available);

      goto LABEL_130;
    }
    v322 = qword_1006411A8;
    v118 = (char *)v321;
    if (v322 == -1)
    {
LABEL_126:
      v323 = (void *)qword_100656EE0;
      v324 = (char *)objc_msgSend((id)qword_100656EE0, "objectForKey:", v118);
      if (!v324)
      {
        v325 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
        v324 = (char *)DOCPreviewController.init()();
        objc_msgSend(v323, "setObject:forKey:", v324, v118);
      }

      v326 = &v324[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
      swift_beginAccess(&v324[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity], &aBlock, 1, 0);
      *v326 = 1;
      v327 = &v324[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider];
      *((_QWORD *)v327 + 1) = &protocol witness table for DOCItemCollectionViewController;
      v328 = v431;
      swift_unknownObjectWeakAssign(v327, v431);
      swift_bridgeObjectRetain(Available);
      v329 = sub_100045810((uint64_t)v420, Available, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v331 = v330;
      swift_bridgeObjectRelease(Available);
      v332 = v331 & 1;
      v177 = v328;
      DOCPreviewController.set(_:defaultIndex:)(Available, 0, 0, v329, v332);

      goto LABEL_129;
    }
LABEL_160:
    swift_once(&qword_1006411A8, sub_100470A10);
    goto LABEL_126;
  }
  v346 = swift_bridgeObjectRelease(Available);
  v347 = v402;
  v348 = v426;
  v349 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v430)(v402, v429, v426, v346);
  v350 = Logger.logObject.getter(v349);
  v351 = static os_log_type_t.error.getter(v350);
  v352 = os_log_type_enabled(v350, v351);
  v353 = v432;
  if (v352)
  {
    v354 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v354 = 134217984;
    aBlock = (void **)&v15->isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v441);
    _os_log_impl((void *)&_mh_execute_header, v350, v351, "[TAP][%ld] Could not get any FPItems to preview", v354, 0xCu);
    v348 = v426;
    swift_slowDealloc(v354, -1, -1);
  }

  swift_unknownObjectRelease(v90);
  ((void (*)(char *, uint64_t))v436)(v347, v348);
  return ((uint64_t (*)(uint64_t, uint64_t))v353)(v424, v10);
}

void sub_10019D588(void *a1, uint64_t a2, uint64_t a3, void **a4, void *a5, int a6, void *a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint8_t *v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  int v38;
  void **v39;
  void *v40;
  uint64_t v41;
  void *v42;
  int v43;
  void **aBlock;
  _QWORD v45[4];
  uint64_t v46;
  char v47[24];

  v41 = a8;
  v42 = a7;
  v43 = a6;
  v39 = a4;
  v40 = a5;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v47, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v19 = (void *)Strong;
    if (a1 && !a2)
    {
      v20 = a1;
      v21 = objc_msgSend(v20, "isWritable");
      if ((_DWORD)v21)
      {
        v23 = Logger.UI.unsafeMutableAddressor(v21);
        v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v23, v14);
        v25 = Logger.logObject.getter(v24);
        v26 = static os_log_type_t.default.getter(v25);
        v38 = v26;
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc(12, -1);
          v37 = v20;
          v28 = v27;
          *(_DWORD *)v27 = 134217984;
          aBlock = v39;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v45);
          _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v38, "[TAP][%ld] Parent is writable, unarchiving...", v28, 0xCu);
          v29 = v28;
          v20 = v37;
          swift_slowDealloc(v29, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        v22.n128_f64[0] = sub_100199A58(v40);
      }
      if ((v43 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v41, v11, v22);
        v30 = *(unsigned __int8 *)(v12 + 80);
        v31 = (v30 + 24) & ~v30;
        v32 = swift_allocObject(&unk_1005CE668, v31 + v13, v30 | 7);
        v33 = v42;
        *(_QWORD *)(v32 + 16) = v42;
        (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v32 + v31, (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
        v45[3] = sub_1001D1248;
        v46 = v32;
        aBlock = _NSConcreteStackBlock;
        v45[0] = 1107296256;
        v45[1] = sub_10004A82C;
        v45[2] = &unk_1005CE680;
        v34 = _Block_copy(&aBlock);
        v35 = v46;
        v36 = v33;
        swift_release(v35);
        DOCRunInMainThread(v34);

        _Block_release(v34);
        return;
      }

    }
  }
}

void sub_10019D840(void **a1, int a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  void **v27;
  uint64_t v28;
  int v29;
  void **aBlock;
  _QWORD v31[4];
  uint64_t v32;

  v27 = a1;
  v28 = a4;
  v29 = a2;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.UI.unsafeMutableAddressor(v12);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = a3;
    v18 = v17;
    *(_DWORD *)v17 = 134217984;
    aBlock = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v31);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[TAP][%ld] Validation finished", v18, 0xCu);
    v19 = v18;
    a3 = v26;
    swift_slowDealloc(v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v5);
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(&unk_1005CE6B8, v21 + v7, v20 | 7);
  *(_BYTE *)(v22 + 16) = v29 & 1;
  *(_QWORD *)(v22 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v22 + v21, (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v31[3] = sub_1001D1320;
  v32 = v22;
  aBlock = _NSConcreteStackBlock;
  v31[0] = 1107296256;
  v31[1] = sub_10004A82C;
  v31[2] = &unk_1005CE6D0;
  v23 = _Block_copy(&aBlock);
  v24 = v32;
  v25 = a3;
  swift_release(v24);
  DOCRunInMainThread(v23);
  _Block_release(v23);
}

void sub_10019DA84(char a1, void *a2)
{
  Class isa;
  id v4;
  Class v5;

  if ((a1 & 1) == 0)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v4 = objc_msgSend(a2, "cellForItemAtIndexPath:", isa);

    if (v4)
    {
      objc_msgSend(v4, "layoutIfNeeded");

    }
    v5 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a2, "deselectItemAtIndexPath:animated:", v5, 1);

  }
}

void *DOCItemCollectionViewController.collectionView(_:canPerformAction:forItemAt:withSender:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C9BC8(a3);
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionView(_:didUpdateFocusIn:with:)(UICollectionView _, UICollectionViewFocusUpdateContext didUpdateFocusIn, UIFocusAnimationCoordinator with)
{
  sub_1001C9DA0(didUpdateFocusIn.super.super.isa);
}

void DOCItemCollectionViewController.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1, void *a2)
{
  sub_100042448(a2);
}

void DOCItemCollectionViewController.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  void (*v5)(void);
  id v6;

  v3 = type metadata accessor for DOCItemCollectionCell();
  v4 = (_QWORD *)swift_dynamicCastClass(a2, v3);
  if (v4)
  {
    v5 = *(void (**)(void))((swift_isaMask & *v4) + 0x218);
    v6 = a2;
    v5();

  }
}

void DOCItemCollectionViewController.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100063478(a2, a5);
}

uint64_t sub_10019DF18()
{
  _BYTE *v0;
  id v1;
  void *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  char v12;
  _QWORD *v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char v20[24];

  if (!sub_10009B8FC()
    || (objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPopoverOrWidget") & 1) != 0|| (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0&& (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]|| (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {
    goto LABEL_21;
  }
  v1 = objc_msgSend(v0, "presentedViewController");
  if (!v1)
  {
LABEL_18:
    v13 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v20, 0, 0);
    if (*v13 != 2)
    {
      v12 = 1;
      return v12 & 1;
    }
    v14 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate]);
    if (Strong)
    {
      v16 = Strong;
      v17 = *((_QWORD *)v14 + 1);
      ObjectType = swift_getObjectType(Strong);
      v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 40))(v0, ObjectType, v17);
      swift_unknownObjectRelease(v16);
      return v12 & 1;
    }
LABEL_21:
    v12 = 0;
    return v12 & 1;
  }
  v2 = v1;
  v3 = type metadata accessor for DOCSearchController();
  v4 = (char *)swift_dynamicCastClass(v2, v3);
  if (!v4 || (v5 = v4, !objc_msgSend(v4, "isActive")))
  {

    goto LABEL_18;
  }
  if (objc_msgSend(v5, "isActive"))
  {
    v6 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController], "viewIfLoaded");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "isHidden");

      if (v8)
        objc_msgSend(v5, "setActive:", 0);
    }
  }
  if (objc_msgSend(v5, "isActive")
    && (v9 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController], "viewIfLoaded")) != 0)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "isHidden");

    v12 = v11 ^ 1;
  }
  else
  {

    v12 = 1;
  }
  return v12 & 1;
}

void DOCItemCollectionViewController.collectionView(_:didBeginMultipleSelectionInteractionAt:)(void *a1)
{
  _BYTE *v1;
  void *v3;
  id v4;

  if ((sub_10019DF18() & 1) != 0)
  {
    v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] = 1;
    if (objc_msgSend(a1, "isEditing"))
    {
      sub_10000E7DC();
      if (v3)
      {
        v4 = v3;
        if ((sub_10013FAF4() & 1) != 0)
        {
          sub_10045EA44(0, 0, 1);
          objc_msgSend(v1, "setEditing:animated:", objc_msgSend(a1, "isEditing"), 1);

          return;
        }

      }
    }
    objc_msgSend(v1, "setEditing:animated:", objc_msgSend(a1, "isEditing"));
  }
  else if ((v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0)
  {
    objc_msgSend(a1, "setEditing:", 0);
  }
}

id DOCItemCollectionViewController.indexPathForPreferredFocusedView(in:)@<X0>(char *a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  id result;
  char *v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char v44[24];
  char v45[24];

  v2 = v1;
  v43 = a1;
  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - v12;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v40 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v41 = (char *)&v40 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v40 - v20;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v40 - v24;
  result = objc_msgSend(v2, "loadViewIfNeeded", v23);
  v27 = *(char **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v27)
  {
    v28 = (uint64_t)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
    swift_beginAccess(v28, v45, 0, 0);
    sub_1000271D4(v28, (uint64_t)v13, (uint64_t *)&unk_100642710);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v29(v13, 1, v14) == 1)
    {
      v30 = v27;
    }
    else
    {
      v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v31(v25, v13, v14);
      v32 = v27;
      sub_10031A1E8((uint64_t)v25, 0xD00000000000001FLL, 0x8000000100513A40, (uint64_t)v10);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v14);
      if (v29(v10, 1, v14) != 1)
      {

        v31(v21, v10, v14);
        v35 = v43;
        v37 = v43;
        v38 = v21;
        goto LABEL_12;
      }
      v13 = v10;
    }
    sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_100642710);
    v33 = *(_QWORD *)&v27[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v33, v44, 0, 0);
    sub_1000271D4(v33, (uint64_t)v7, (uint64_t *)&unk_100642710);
    if (v29(v7, 1, v14) == 1)
    {

LABEL_9:
      v35 = v43;
      sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
      v36 = 1;
      return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v35, v36, 1, v14);
    }
    v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v34 = (uint64_t)v41;
    v31(v41, v7, v14);
    v7 = v42;
    sub_10031A1E8(v34, 0xD000000000000024, 0x8000000100513A10, (uint64_t)v42);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v34, v14);
    if (v29(v7, 1, v14) == 1)
      goto LABEL_9;
    v39 = v40;
    v31(v40, v7, v14);
    v35 = v43;
    v37 = v43;
    v38 = v39;
LABEL_12:
    v31(v37, v38, v14);
    v36 = 0;
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v35, v36, 1, v14);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionViewDidEndMultipleSelectionInteraction(_:)(UICollectionView a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture) = 0;
}

void sub_10019E898(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, &v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = &a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
    v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8];
    if (v8)
    {
      v10 = *((_QWORD *)v7 + 3);
      v9 = *((_QWORD *)v7 + 4);
      v11 = *((_QWORD *)v7 + 2);
      v13[0] = *(_QWORD *)v7;
      v13[1] = v8;
      v13[2] = v11;
      v13[3] = v10;
      v13[4] = v9;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v10);
      swift_retain();
      sub_10017CEE0(v13, a1);

      swift_release(v9);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v8);
    }
    else
    {

    }
  }
}

void sub_10019E96C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4, v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_1002C9F70(a2);

  }
}

_QWORD *_s5Files31DOCItemCollectionViewControllerC010collectionD0_11cellForNode2atSo012UICollectionD4CellCSo0kD0C_So7DOCNode_p10Foundation9IndexPathVtF_0(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  id v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  NSString v13;
  Class isa;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned int v18;
  int v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjectType;
  unint64_t v23;
  char v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  _BOOL4 v38;
  void *v39;
  uint64_t v40;
  id v41;
  void (*v42)(char *);
  char *v43;
  id v44;
  id v45;
  double v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  _QWORD v53[6];
  _QWORD v54[5];
  char v55[24];

  v4 = v3;
  v8 = objc_msgSend(v3, "traitCollection");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  LOBYTE(v8) = UIContentSizeCategory.isAccessibilityCategory.getter(v9);
  v10 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier;
  if ((v8 & 1) == 0)
    v10 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier;
  v11 = *(_QWORD *)&v4[*v10 + 8];
  swift_bridgeObjectRetain(v11);
  v12 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v55, 0, 0);
  if (!*(_QWORD *)v12)
  {
    swift_bridgeObjectRelease(v11);
    v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier + 8];
    swift_bridgeObjectRetain(v11);
  }
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v13, isa);

  v16 = type metadata accessor for DOCItemCollectionCell();
  v17 = (_QWORD *)swift_dynamicCastClassUnconditional(v15, v16, 0, 0, 0);
  v18 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPopoverOrWidget");
  v19 = *((unsigned __int8 *)v17 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_canShowBackgroundView);
  *((_BYTE *)v17 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_canShowBackgroundView) = v18 ^ 1;
  if (v18 == v19)
    objc_msgSend(v17, "setNeedsUpdateConfiguration");
  v20 = (char *)v17 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate;
  *((_QWORD *)v20 + 1) = &off_1005CC2E8;
  swift_unknownObjectWeakAssign(v20, v4);
  v21 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 16];
  ObjectType = swift_getObjectType(a2);
  swift_bridgeObjectRetain(v21);
  DOCNode.identifierKey.getter(v54, ObjectType);
  if (*(_QWORD *)(v21 + 16) && (v23 = sub_100067654((uint64_t)v54), (v24 & 1) != 0))
  {
    a2 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
    swift_unknownObjectRetain(a2);
    swift_bridgeObjectRelease(v21);
    sub_100067748((uint64_t)v54);
  }
  else
  {
    swift_bridgeObjectRelease(v21);
    sub_100067748((uint64_t)v54);
    swift_unknownObjectRetain(a2);
  }
  swift_getObjectType(a2);
  if (DOCNode.isCreateDocumentSentinel()())
  {
    v25 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionCellContent()), "init");
    sub_10006A958(v25);
    v26 = v25;
  }
  else
  {
    v27 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
    v25 = v4;
    v26 = (char *)sub_10010E300(a2, v27, v25);
  }

  v28 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  v29 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  if (v29)
  {
    v30 = *((_QWORD *)v28 + 1);
    sub_1001D1598(*(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress], v30);
    swift_unknownObjectRetain(v30);
    sub_1001D0614(v29, v30);
    v31 = swift_getObjectType(v30);
    v32 = DOCNode.isEqualTo(node:)(a2, v31);
    swift_unknownObjectRelease(v30);
    if ((v32 & 1) != 0)
    {
      v29 = *(void **)v28;
      if (*(_QWORD *)v28)
      {
        v33 = *((_QWORD *)v28 + 1);
        sub_1001D1598(*(void **)v28, v33);
        v34 = v29;
        sub_1001D0614(v29, v33);
      }
    }
    else
    {
      v29 = 0;
    }
  }
  v35 = *(void **)&v26[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress];
  *(_QWORD *)&v26[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = v29;
  v36 = v29;
  sub_1000628EC(v35);

  v37 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility + 8];
  if (v37)
  {
    v38 = (*(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility] & 1) == 0;
    v39 = *(void **)((char *)v17 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    v40 = swift_getObjectType(*(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility
                                           + 8]);
    swift_unknownObjectRetain(v37);
    v41 = v39;
    objc_msgSend(v41, "setHidden:", DOCNode.isEqualTo(node:)(a2, v40) & v38);
    swift_unknownObjectRelease(v37);

  }
  else
  {
    objc_msgSend(*(id *)((char *)v17 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setHidden:", 0);
  }
  v42 = *(void (**)(char *))((swift_isaMask & *v17) + 0x200);
  v43 = v26;
  v42(v26);
  v44 = v15;
  v45 = objc_msgSend(a1, "indexPathsForSelectedItems");
  if (v45)
  {
    v47 = v45;
    v48 = type metadata accessor for IndexPath(0);
    v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v48);

    __chkstk_darwin(v50);
    v53[2] = a3;
    v51 = sub_100173AD4((uint64_t (*)(char *))sub_1001CA4F8, (_BOOL8)v53, v49, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, (uint64_t *)&unk_100642710);
    *(_QWORD *)&v46 = swift_bridgeObjectRelease(v49).n128_u64[0];
  }
  else
  {
    v51 = 0;
  }
  objc_msgSend(v17, "setSelected:", v51, v46);
  swift_unknownObjectRelease(a2);

  return v17;
}

void sub_10019EF04(void *a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v5 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = sub_10006922C((uint64_t *)&unk_100644560);
  v8 = swift_allocObject(v7, 152, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = sub_10006A638();
  *(_QWORD *)(v8 + 32) = 0xD000000000000024;
  *(_QWORD *)(v8 + 40) = 0x8000000100516A70;
  *(_QWORD *)(v8 + 96) = type metadata accessor for DOCNodeCollection();
  *(_QWORD *)(v8 + 104) = sub_10005A360((unint64_t *)&unk_100646C90, (uint64_t (*)(uint64_t))type metadata accessor for DOCNodeCollection, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v8 + 72) = a1;
  v9 = a1;
  v10 = _convertErrorToNSError(_:)(a2);
  *(_QWORD *)(v8 + 136) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v8 + 144) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v8 + 112) = v10;
  os_log(_:dso:log:type:_:)("[Content Unavailable] %@: collection %@ did encounter error %@", 62, 2, &_mh_execute_header, v5, v6, v8);

  swift_bridgeObjectRelease(v8);
  v11 = swift_allocObject(&unk_1005CDF60, 32, 7);
  *(_QWORD *)(v11 + 16) = v2;
  *(_QWORD *)(v11 + 24) = a2;
  v15[4] = sub_1001D0AE0;
  v16 = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10004A82C;
  v15[3] = &unk_1005CDF78;
  v12 = _Block_copy(v15);
  v13 = v16;
  v14 = v2;
  swift_errorRetain(a2);
  swift_release(v13);
  DOCRunInMainThread(v12);
  _Block_release(v12);
}

void sub_10019F0EC(_BYTE *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;
  double v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t Strong;
  uint64_t v65;
  id v66;
  NSString v67;
  void *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 aBlock;
  __int128 v104;
  uint64_t (*v105)();
  uint64_t v106;
  _QWORD v107[2];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v101 = *(_QWORD *)(v4 - 8);
  v102 = v4;
  __chkstk_darwin(v4);
  v100 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v98 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  __chkstk_darwin(v6);
  v97 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTimeInterval(0);
  v94 = *(_QWORD *)(v8 - 8);
  v95 = v8;
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = type metadata accessor for DispatchTime(0);
  v93 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v89 - v15;
  a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = 1;
  v17 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  v18 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier", v14);
  v19 = DOCDocumentSourceIdentifierSearch;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v22 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  if (v20 == v23 && v22 == v24)
  {

    swift_bridgeObjectRelease_n(v22, 2);
  }
  else
  {
    v26 = v24;
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v23, v24, 0);

    swift_bridgeObjectRelease(v22);
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v26).n128_u64[0];
    if ((v27 & 1) == 0)
    {
      v29 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView];
      if (v29)
        objc_msgSend(v29, "setHidden:", 1, v28);
    }
  }
  v30 = swift_allocObject(&unk_1005CDFB0, 32, 7);
  *(_QWORD *)(v30 + 16) = a2;
  *(_QWORD *)(v30 + 24) = a1;
  *(_QWORD *)&aBlock = a2;
  swift_errorRetain(a2);
  swift_errorRetain(a2);
  v31 = a1;
  v32 = sub_10006922C((uint64_t *)&unk_100643490);
  v33 = sub_10004F2F0(0, (unint64_t *)&unk_100646CA0, FPError_ptr);
  if ((swift_dynamicCast(v107, &aBlock, v32, v33, 6) & 1) != 0)
  {
    v34 = (void *)v107[0];
    v35 = (void *)*((_QWORD *)v17 + 8);
    if (v35 && (v36 = objc_msgSend(v35, "fpfs_fpItem")) != 0)
    {
      v37 = v36;
      v91 = v30;
      v92 = v34;
      v38 = objc_msgSend(v34, "userInfo");
      v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSFileProviderErrorNonExistentItemIdentifierKey);
      v42 = v41;
      if (*(_QWORD *)(v39 + 16) && (v43 = sub_10007EF08(v40, v41), (v44 & 1) != 0))
      {
        sub_100069BD8(*(_QWORD *)(v39 + 56) + 32 * v43, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v104 = 0u;
      }
      swift_bridgeObjectRelease(v42);
      swift_bridgeObjectRelease(v39);
      if (*((_QWORD *)&v104 + 1))
      {
        type metadata accessor for NSFileProviderItemIdentifier(0);
        if ((swift_dynamicCast(v107, &aBlock, (char *)&type metadata for Any + 8, v45, 6) & 1) != 0)
        {
          v46 = (void *)v107[0];
          v47 = v92;
          if (objc_msgSend(v92, "code") == (id)-1005)
          {
            v48 = objc_msgSend(v37, "itemIdentifier");
            v90 = v46;
            v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
            v51 = v50;
            v52 = v48;
            v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
            v55 = v53;
            if (v49 == v54 && v51 == v53)
            {

              v56 = swift_bridgeObjectRelease_n(v51, 2);
              goto LABEL_27;
            }
            v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v51, v54, v53, 0);

            swift_bridgeObjectRelease(v51);
            swift_bridgeObjectRelease(v55);
            if ((v57 & 1) != 0)
            {
LABEL_27:
              v58 = *(id *)DOCLog.UI.unsafeMutableAddressor(v56);
              v59 = static os_log_type_t.error.getter(v58);
              v60 = sub_10006922C((uint64_t *)&unk_100644560);
              v61 = v31;
              v62 = swift_allocObject(v60, 112, 7);
              *(_OWORD *)(v62 + 16) = xmmword_1004D4CE0;
              *(_QWORD *)(v62 + 56) = &type metadata for String;
              *(_QWORD *)(v62 + 64) = sub_10006A638();
              *(_QWORD *)(v62 + 32) = 0xD000000000000024;
              *(_QWORD *)(v62 + 40) = 0x8000000100516A70;
              *(_QWORD *)(v62 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
              *(_QWORD *)(v62 + 104) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
              *(_QWORD *)(v62 + 72) = v37;
              v63 = v37;
              os_log(_:dso:log:type:_:)("The parent item of this item collection no longer exists: %@", 60, 2, &_mh_execute_header, v58, v59, v62);

              swift_bridgeObjectRelease(v62);
              Strong = swift_unknownObjectWeakLoadStrong(&v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener]);
              if (Strong)
              {
                v65 = Strong;
                v66 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
                v67 = String._bridgeToObjectiveC()();
                objc_msgSend(v66, "postNotificationName:object:", v67, 0);
                swift_release(v91);

                swift_unknownObjectRelease(v65);
              }
              else
              {
                swift_release(v91);

              }
              return;
            }

          }
          else
          {

          }
        }
        else
        {

        }
      }
      else
      {

        sub_10000CB4C((uint64_t)&aBlock, &qword_100642730);
      }
      v30 = v91;
    }
    else
    {

    }
  }
  v68 = (void *)_convertErrorToNSError(_:)(a2);
  v69 = NSError.isProviderNotFound.getter();

  if ((v69 & 1) != 0)
  {
    v70 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v92 = (id)static OS_dispatch_queue.main.getter(v70);
    static DispatchTime.now()(v92);
    *v10 = 5;
    v72 = v94;
    v71 = v95;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v94 + 104))(v10, enum case for DispatchTimeInterval.seconds(_:), v95);
    v73 = v16;
    + infix(_:_:)(v12, v10);
    (*(void (**)(_QWORD *, uint64_t))(v72 + 8))(v10, v71);
    v74 = *(void (**)(char *, uint64_t))(v93 + 8);
    v75 = v96;
    v74(v12, v96);
    v76 = swift_allocObject(&unk_1005CDFD8, 32, 7);
    *(_QWORD *)(v76 + 16) = sub_1001D0AF4;
    *(_QWORD *)(v76 + 24) = v30;
    v105 = sub_10010DF60;
    v106 = v76;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v104 = sub_10004A82C;
    *((_QWORD *)&v104 + 1) = &unk_1005CDFF0;
    v77 = _Block_copy(&aBlock);
    v78 = v106;
    swift_retain();
    swift_release(v78);
    v79 = v97;
    static DispatchQoS.unspecified.getter(v80);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v81 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v82 = v30;
    v83 = sub_10006922C((uint64_t *)&unk_100647540);
    v84 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v85 = v100;
    v86 = v83;
    v87 = v102;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v86, v84, v102, v81);
    v88 = v92;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v73, v79, v85, v77);
    _Block_release(v77);
    swift_release(v82);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v85, v87);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v79, v99);
    v74(v73, v75);
  }
  else
  {
    sub_10019F974(a2, v31);
    swift_release(v30);
  }
}

void sub_10019F974(void *a1, char *a2)
{
  void *v4;
  void *v5;
  id v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(unint64_t *, id, _QWORD, uint64_t, uint64_t, uint64_t);
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  double v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  void *object;
  Swift::String v35;
  id v36;
  uint64_t v37;
  Swift::String v38;
  void *v39;
  unint64_t v40;
  NSString v41;
  __n128 v42;
  char v43;
  _OWORD v44[2];
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v4 = (void *)objc_opt_self(DOCErrorStore);
  v5 = (void *)_convertErrorToNSError(_:)(a1);
  v6 = objc_msgSend(v4, "augmentedErrorForError:", v5);

  if (!v6)
  {
    swift_errorRetain(a1);
    v6 = a1;
  }
  v7 = &a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
  Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting]);
  if (Strong)
  {
    v9 = Strong;
    v10 = *((_QWORD *)v7 + 1);
    ObjectType = swift_getObjectType(Strong);
    v47 = type metadata accessor for DOCItemCollectionViewController(0);
    v45 = (unint64_t)a2;
    v12 = *(void (**)(unint64_t *, id, _QWORD, uint64_t, uint64_t, uint64_t))(v10 + 8);
    v13 = a2;
    swift_errorRetain(v6);
    v12(&v45, v6, 0, 1, ObjectType, v10);
    swift_unknownObjectRelease(v9);
    swift_errorRelease(v6);
    sub_100068588(&v45);
  }
  a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  v14 = objc_msgSend(a2, "viewIfLoaded");
  v15 = objc_msgSend(v14, "window");

  if (v15)
    sub_1000926C8();
  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
  v17 = v16;
  v18 = objc_allocWithZone((Class)NSUserDefaults);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "initWithSuiteName:", v19, swift_bridgeObjectRelease(v17).n128_f64[0]);

  if (!v20)
    goto LABEL_19;
  v21 = objc_msgSend(v20, "valueForKey:", DOCUserDefaultsKeyReportAllFileProviderErrors);
  if (v21)
  {
    v22 = v21;
    _bridgeAnyObjectToAny(_:)(v44, v21);
    swift_unknownObjectRelease(v22);
  }
  else
  {
    memset(v44, 0, sizeof(v44));
  }
  sub_100070EDC((uint64_t)v44, (uint64_t)&v45, &qword_100642730);
  if (!v47)
  {

    swift_errorRelease(v6);
    sub_10000CB4C((uint64_t)&v45, &qword_100642730);
    return;
  }
  v23 = swift_dynamicCast(&v43, &v45, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((v23 & 1) == 0)
  {

LABEL_19:
    swift_errorRelease(v6);
    return;
  }
  if (v43 == 1 && DOCIsInternalBuild(v23))
  {
    v24 = (void *)_convertErrorToNSError(_:)(v6);
    if ((NSError.isProviderDomainNotAuthenticated.getter() & 1) != 0)
    {
      swift_errorRelease(v6);
    }
    else
    {
      v25 = (void *)_convertErrorToNSError(_:)(a1);
      v45 = 0;
      v46 = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(v46).n128_u64[0];
      v45 = 0xD000000000000020;
      v46 = 0x8000000100516AE0;
      v27 = objc_msgSend(v24, "domain", v26);
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v31._countAndFlagsBits = v28;
      v31._object = v30;
      String.append(_:)(v31);
      swift_bridgeObjectRelease(v30);
      v32._countAndFlagsBits = 0x20727245202D20;
      v32._object = (void *)0xE700000000000000;
      String.append(_:)(v32);
      *(_QWORD *)&v44[0] = objc_msgSend(v24, "code");
      v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v33._object;
      String.append(_:)(v33);
      swift_bridgeObjectRelease(object);
      v35._countAndFlagsBits = 168442409;
      v35._object = (void *)0xE400000000000000;
      String.append(_:)(v35);
      v36 = objc_msgSend(v24, "userInfo");
      v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v36, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      v38._countAndFlagsBits = Dictionary.description.getter(v37, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
      v39 = v38._object;
      String.append(_:)(v38);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v39);
      v40 = v46;
      v41 = String._bridgeToObjectiveC()();
      v42 = swift_bridgeObjectRelease(v40);
      DOCPresentAlertForErrorWithForceHandler(v25, v41, 0, 0, 0, a2, 0, 0, v42);
      swift_errorRelease(v6);

    }
  }
  else
  {
    swift_errorRelease(v6);

  }
}

uint64_t sub_10019FE08(void *a1, void *a2)
{
  _BYTE *v2;
  uint64_t result;
  id v5;
  id v6;
  id v7;
  uint64_t ObjectType;
  uint64_t v9;
  __n128 v10;

  result = (uint64_t)objc_msgSend(a1, "isGathering");
  if ((result & 1) == 0)
  {
    sub_10002F3B0(2);
    sub_100005254();
    _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
    sub_10019FF5C(a2);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24], "updateUnderlyingNodeToNode:", a2);
    sub_10009629C();
    if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] == 1)
    {
      v5 = sub_10001F69C();
      sub_10005897C(v5, 0, 0, 1, 0);

    }
    sub_100014AAC();
    v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    v6 = objc_msgSend(v2, "viewIfLoaded");
    v7 = objc_msgSend(v6, "window");

    if (v7)
      sub_1000926C8();
    ObjectType = swift_getObjectType(a2);
    v9 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    swift_retain();
    DOCNode.fpfs_fetchFPItem(completion:)(sub_1001D0AB8, v9, ObjectType);
    return swift_release_n(v9, 2, v10);
  }
  return result;
}

void sub_10019FF5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  void *v6;
  char *v7;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView;
  v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView);
  if (v3)
  {
    v5 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode;
    v6 = *(void **)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode];
    swift_unknownObjectRetain(v6);
    v7 = v3;
    v8 = sub_100170C1C(a1, v6);
    swift_unknownObjectRelease(v6);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)&v3[v5];
      swift_unknownObjectRetain(v9);
      v10 = (void *)swift_unknownObjectRetain(a1);
      sub_100170220(v10);
      v11 = *(_QWORD *)&v3[v5];
      *(_QWORD *)&v3[v5] = a1;
      swift_unknownObjectRetain(a1);
      swift_unknownObjectRelease(v11);
      sub_1001703B0(v9);

      swift_unknownObjectRelease(v9);
      swift_unknownObjectRelease(a1);
    }
    else
    {
      v12 = *(void **)(v1 + v2);
      *(_QWORD *)(v1 + v2) = 0;

      *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload) = 1;
    }
  }
}

void sub_1001A0064(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  if (a1)
  {
    v4 = swift_allocObject(&unk_1005CDF10, 32, 7);
    *(_QWORD *)(v4 + 16) = a2;
    *(_QWORD *)(v4 + 24) = a1;
    v8[4] = sub_1001D0ACC;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_10004A82C;
    v8[3] = &unk_1005CDF28;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = a1;
    swift_retain();
    swift_release(v6);
    DOCRunInMainThread(v5);
    _Block_release(v5);

  }
}

void sub_1001A0128(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1004BD020(a2);

  }
}

void sub_1001A0180(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_100640E28 != -1)
    swift_once(&qword_100640E28, sub_1001753DC);
  objc_msgSend(v4, "postNotificationName:object:", qword_100672730, v2);

  objc_msgSend(v2, "docSetNeedsUpdateContentUnavailableConfiguration");
  v5 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v5)
  {
    if (objc_msgSend(v5, "isGathering"))
    {
      v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = 0;
      sub_100189BB8();
    }
    else
    {
      sub_100007214();
      v6 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
      if (v6)
      {
        v7 = v6;
        sub_10003181C();

      }
    }
    _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
    sub_10002F574(a1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001A02A0(char a1)
{
  _BYTE *v1;
  id v2;

  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] = (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] | a1) & 1;
  v2 = objc_msgSend(v1, "viewIfLoaded");
  objc_msgSend(v2, "setNeedsLayout");

}

void DOCItemCollectionViewController.collectionView(_:willEndContextMenuInteraction:animator:)(uint64_t a1, void *a2, void *a3)
{
  sub_1001CA2B4(a2, a3);
}

void sub_1001A0394(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  uint64_t ObjectType;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(_QWORD);
  id v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v16, 0, 0);
  if (!*v3)
  {
    v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
      else
        v15 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes));
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
          }
          else
          {
            v7 = *(_QWORD *)(v4 + 8 * i + 32);
            swift_unknownObjectRetain(v7);
          }
          v8 = sub_100195350(v7);
          if (v8)
          {
            v9 = v8;
            ObjectType = swift_getObjectType(v8);
            v11 = type metadata accessor for DOCItemCollectionGridCell();
            v12 = (_QWORD *)sub_1001D0F7C((uint64_t)v9, ObjectType, v11, (uint64_t)&protocol descriptor for DOCItemCollectionGridCell_ConcreteSubclassProtocol);
            if (v12)
            {
              v13 = *(void (**)(_QWORD))((swift_isaMask & *v12) + 0x550);
              v14 = v9;
              v13(0);

            }
          }
          swift_unknownObjectRelease(v7);
        }
      }
    }
    swift_bridgeObjectRelease(v4);
  }
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfiguration:highlightPreviewForItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  Class isa;
  id v9;
  uint64_t v10;
  char *v11;

  v5 = type metadata accessor for DOCNodeContextMenuConfiguration();
  if (!swift_dynamicCastClass(a2, v5))
    return 0;
  if (objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "browserViewContext"))
  {
    return 0;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (!v9)
    return 0;
  v10 = type metadata accessor for DOCItemCollectionCell();
  v11 = (char *)swift_dynamicCastClass(v9, v10);
  if (v11)
    v6 = DOCItemCollectionViewController.targetPreview(for:)(v11);
  else
    v6 = 0;

  return v6;
}

UITargetedPreview_optional __swiftcall DOCItemCollectionViewController.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(UICollectionView _, UIContextMenuConfiguration previewForHighlightingContextMenuWithConfiguration)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Bool v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  Class isa;
  id v26;
  uint64_t v27;
  char *v28;
  objc_class *v29;
  objc_class *v30;
  uint64_t v31;
  UITargetedPreview_optional result;

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DOCNodeContextMenuConfiguration();
  v14 = swift_dynamicCastClass(previewForHighlightingContextMenuWithConfiguration.super.isa, v13);
  if (!v14)
    goto LABEL_14;
  v16 = v14;
  v17 = *(void **)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  v18 = previewForHighlightingContextMenuWithConfiguration.super.isa;
  if (objc_msgSend(v17, "browserViewContext"))
  {

LABEL_14:
    v29 = 0;
    goto LABEL_15;
  }
  v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
  v20 = swift_bridgeObjectRetain(v19);
  v21 = sub_100096D88(v20);
  v22 = swift_bridgeObjectRelease(v19);
  if (*((_QWORD *)v21 + 2))
  {
    (*(void (**)(char *, char *, uint64_t, __n128))(v10 + 16))(v8, &v21[(*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)], v9, v22);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v23, 1, v9);
  v24 = swift_bridgeObjectRelease(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v24) == 1)
  {

    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v26 = -[objc_class cellForItemAtIndexPath:](_.super.super.super.super.isa, "cellForItemAtIndexPath:", isa);

  if (!v26)
  {
LABEL_13:

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_14;
  }
  v27 = type metadata accessor for DOCItemCollectionCell();
  v28 = (char *)swift_dynamicCastClass(v26, v27);
  if (!v28)
  {

    goto LABEL_13;
  }
  v29 = (objc_class *)DOCItemCollectionViewController.targetPreview(for:)(v28);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_15:
  v30 = v29;
  result.value.super.isa = v30;
  result.is_nil = v15;
  return result;
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfiguration:dismissalPreviewForItemAt:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  Class isa;
  id v7;

  v3 = v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v3, "collectionView:contextMenuConfiguration:highlightPreviewForItemAtIndexPath:", a1, a2, isa);

  return v7;
}

UITargetedPreview_optional __swiftcall DOCItemCollectionViewController.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(UICollectionView _, UIContextMenuConfiguration previewForDismissingContextMenuWithConfiguration)
{
  void *v2;
  objc_class *v3;
  Swift::Bool v4;
  UITargetedPreview_optional result;

  v3 = (objc_class *)objc_msgSend(v2, "collectionView:previewForHighlightingContextMenuWithConfiguration:", _.super.super.super.super.isa, previewForDismissingContextMenuWithConfiguration.super.isa);
  result.value.super.isa = v3;
  result.is_nil = v4;
  return result;
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfigurationForItemsAt:point:)(void *a1, uint64_t a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  id v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  void **v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE v46[16];
  uint64_t aBlock[5];
  uint64_t v48;
  char v49[24];
  char v50[24];

  v5 = v4;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v14);
  v16 = &v46[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v17);
  v20 = &v46[-v19];
  if ((v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(_QWORD *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {
    return 0;
  }
  v21 = *(void **)&v5[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (objc_msgSend(v21, "browserViewContext", v18)
    || v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] == 1
    || (objc_msgSend(v21, "suppressBlackCallout") & 1) != 0)
  {
    return 0;
  }
  v22 = objc_msgSend(v21, "sceneIdentifier");
  v23 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v22);

  v24 = &v23[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess(&v23[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v50, 0, 0);
  if (*(_QWORD *)v24)
  {
    v26 = Logger.UI.unsafeMutableAddressor(v25);
    v27 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, v26, v10);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.debug.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[Interaction] An action was trying to be performed while there is an item trying to be opened.", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  v33 = (void **)&v23[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
  swift_beginAccess(&v23[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem], v49, 1, 0);
  v34 = *v33;
  *v33 = 0;
  sub_10010EDA8(v34);

  if (!*(_QWORD *)(a2 + 16))
  {
    if ((objc_msgSend(a1, "isEditing") & 1) == 0)
    {
      v41 = swift_allocObject(&unk_1005CC0C0, 24, 7);
      *(_QWORD *)(v41 + 16) = v5;
      v42 = (void *)objc_opt_self(UIContextMenuConfiguration);
      aBlock[4] = (uint64_t)sub_100151FC8;
      v48 = v41;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1001B1644;
      aBlock[3] = (uint64_t)&unk_1005CC0D8;
      v43 = _Block_copy(aBlock);
      v44 = v48;
      v45 = v5;
      swift_retain();
      v31 = objc_msgSend(v42, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v43, swift_release(v44).n128_f64[0]);
      swift_release(v41);
      _Block_release(v43);

      return v31;
    }

    return 0;
  }
  v35 = objc_msgSend(a1, "indexPathForItemAtPoint:", a3, a4);
  if (v35)
  {
    v36 = v35;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v35);

    v37 = type metadata accessor for IndexPath(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v16, 0, 1, v37);
  }
  else
  {
    v38 = type metadata accessor for IndexPath(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v16, 1, 1, v38);
  }
  sub_100070EDC((uint64_t)v16, (uint64_t)v20, (uint64_t *)&unk_100642710);
  aBlock[0] = a2;
  swift_bridgeObjectRetain(a2);
  sub_1001B15C4(aBlock);
  v39 = aBlock[0];
  sub_1001A102C(aBlock[0], (uint64_t)v20);
  v31 = v40;

  swift_release(v39);
  sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_100642710);
  return v31;
}

void sub_1001A102C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Class isa;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *ObjCClassFromMetadata;
  void *v19;
  uint64_t v20;
  id v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  _QWORD aBlock[5];
  uint64_t v76;

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v3, "contextMenuForItemsAt:", isa);

  if (!v14)
    return;
  v15 = v3;
  v71 = sub_1001BA370(a1, (uint64_t)v15, 0);

  sub_1000271D4(a2, (uint64_t)v8, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
    v70 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v70 = sub_10017A754((uint64_t)v12, 0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v16 = type metadata accessor for DOCNodeContextMenuConfiguration();
  v17 = swift_allocObject(&unk_1005CE410, 24, 7);
  *(_QWORD *)(v17 + 16) = v14;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v16);
  aBlock[4] = sub_1000A71D8;
  v76 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B1644;
  aBlock[3] = &unk_1005CE428;
  v19 = _Block_copy(aBlock);
  v20 = v76;
  v21 = v14;
  swift_retain();
  v22 = (char *)objc_msgSend(ObjCClassFromMetadata, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v19, swift_release(v20).n128_f64[0]);
  swift_release(v17);
  _Block_release(v19);
  v23 = objc_msgSend(v21, "children");
  v24 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v37 = v25;
    else
      v37 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v26 = _CocoaArrayWrapper.endIndex.getter(v37);
    v68 = v22;
    v69 = v21;
    if (v26)
      goto LABEL_8;
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v25);
    v68 = v22;
    v69 = v21;
    if (v26)
    {
LABEL_8:
      if (v26 < 1)
      {
LABEL_62:
        __break(1u);
        return;
      }
      v27 = 0;
      v28 = _swiftEmptyArrayStorage;
      do
      {
        if ((v25 & 0xC000000000000001) != 0)
          v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
        else
          v29 = *(id *)(v25 + 8 * v27 + 32);
        v30 = v29;
        v31 = objc_opt_self(UIMenu);
        v32 = (void *)swift_dynamicCastObjCClass(v30, v31);
        if (v32)
        {
          v33 = objc_msgSend(v32, "children");
          v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v24);

          if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
            v28 = sub_10015418C(0, v28[2] + 1, 1, v28);
          v36 = v28[2];
          v35 = v28[3];
          if (v36 >= v35 >> 1)
            v28 = sub_10015418C((_QWORD *)(v35 > 1), v36 + 1, 1, v28);
          v28[2] = v36 + 1;
          v28[v36 + 4] = v34;
        }
        else
        {

        }
        ++v27;
      }
      while (v26 != v27);
      goto LABEL_26;
    }
  }
  v28 = _swiftEmptyArrayStorage;
LABEL_26:
  swift_bridgeObjectRelease_n(v25, 2);
  v38 = UIDocumentBrowserActionIdentifierUnpin;
  v73 = v28 + 4;
  swift_bridgeObjectRetain(v28);
  v39 = 0;
  v74 = 0;
  while (1)
  {
    v56 = v28[2];
    if (v74 == v56)
      break;
    if (v74 >= v56)
      goto LABEL_61;
    v57 = v74 + 1;
    v58 = v73[v74];
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRelease(v39);
    v39 = v58;
    v74 = v57;
    if (v58)
    {
      v40 = 0;
      if (v58 >= 0)
        v41 = v58 & 0xFFFFFFFFFFFFFF8;
      else
        v41 = v58;
      v72 = v41;
      if ((unint64_t)v58 >> 62)
      {
LABEL_31:
        swift_bridgeObjectRetain(v39);
        v42 = _CocoaArrayWrapper.endIndex.getter(v72);
        swift_bridgeObjectRelease(v39);
        if (v40 != v42)
          goto LABEL_37;
      }
      else
      {
        while (2)
        {
          if (v40 != *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_37:
            if ((v39 & 0xC000000000000001) != 0)
            {
              v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v39);
            }
            else
            {
              if (v40 >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
                goto LABEL_62;
              }
              v45 = *(id *)(v39 + 8 * v40 + 32);
            }
            v46 = v45;
            if (__OFADD__(v40, 1))
              goto LABEL_60;
            v47 = objc_opt_self(UIAction);
            v48 = (void *)swift_dynamicCastObjCClass(v46, v47);
            if (v48)
            {
              v49 = objc_msgSend(v48, "identifier");
              v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
              v52 = v51;

              v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
              v44 = v54;
              if (v52)
              {
                if (v50 == v53 && v52 == v54)
                {
                  swift_bridgeObjectRelease(v28);
                  swift_bridgeObjectRelease_n(v52, 2);
                  goto LABEL_54;
                }
                v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, v53, v54, 0);
                swift_bridgeObjectRelease(v52);
                swift_bridgeObjectRelease(v44);
                if ((v55 & 1) != 0)
                {
                  swift_bridgeObjectRelease(v28);
LABEL_54:
                  swift_bridgeObjectRelease(v28);
                  swift_bridgeObjectRelease(v39);
                  v59 = objc_opt_self(UIAction);
                  v60 = (void *)swift_dynamicCastObjCClass(v46, v59);
                  v61 = v60;
                  v63 = v70;
                  v62 = v71;
                  v64 = v69;
                  if (v60)
                    objc_msgSend(v60, "setState:", 1);
                  else

                  goto LABEL_57;
                }

                goto LABEL_35;
              }
            }
            else
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
              v44 = v43;
            }

            swift_bridgeObjectRelease(v44);
LABEL_35:
            ++v40;
            if (!(v39 >> 62))
              continue;
            goto LABEL_31;
          }
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease_n(v28, 2);
  swift_bridgeObjectRelease(v39);
  v61 = 0;
  v63 = v70;
  v62 = v71;
  v64 = v69;
LABEL_57:
  v65 = v68;
  v66 = *(_QWORD *)&v68[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes];
  *(_QWORD *)&v68[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes] = v62;
  swift_bridgeObjectRelease(v66);
  v67 = *(_QWORD *)&v65[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_presentingNode];
  *(_QWORD *)&v65[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_presentingNode] = v63;

  swift_unknownObjectRelease(v67);
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(void *a1, uint64_t a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  id v29;
  void *v30;
  id v31;
  _BOOL4 v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  id result;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint8_t *v50;
  void **v51;
  void *v52;
  void *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Class isa;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  Class v66;
  Class v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  void (*v83)(char *, uint64_t, uint64_t);
  _BOOL4 v84;
  char *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[32];
  char v90[24];
  char v91[32];

  v5 = v4;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v14);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v82 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v82 - v21;
  v23 = type metadata accessor for IndexPath(0);
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(_QWORD *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {
    return 0;
  }
  v85 = v19;
  v86 = a1;
  v87 = v24;
  v88 = v25;
  v29 = objc_msgSend(a1, "contextMenuInteraction", v26);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v29, "menuAppearance");

    v32 = v31 == (id)2;
  }
  else
  {
    v32 = 0;
  }
  if (objc_msgSend(v5, "isEditing") && !v32)
    return 0;
  v33 = *(void **)&v5[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (objc_msgSend(v33, "browserViewContext"))
    return 0;
  v84 = v32;
  v34 = v87;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
  v83(v28, a2, v87);
  v35 = objc_msgSend(v86, "indexPathsForSelectedItems");
  if (v35)
  {
    v36 = v35;
    v37 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v34);

  }
  else
  {
    v37 = _swiftEmptyArrayStorage;
  }
  if (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] == 1
    || (objc_msgSend(v33, "suppressBlackCallout") & 1) != 0
    || (sub_100195148((uint64_t)v28) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v28, v87);
    swift_bridgeObjectRelease(v37);
    return 0;
  }
  v40 = objc_msgSend(v33, "sceneIdentifier");
  v41 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v40);

  v42 = &v41[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess(&v41[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v91, 0, 0);
  if (*(_QWORD *)v42)
  {
    swift_bridgeObjectRelease(v37);
    v44 = Logger.UI.unsafeMutableAddressor(v43);
    v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v44, v10);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.debug.getter(v46);
    v48 = os_log_type_enabled(v46, v47);
    v49 = v87;
    if (v48)
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "[Interaction] An action was trying to be performed while there is an item trying to be opened.", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v28, v49);
    return 0;
  }
  v51 = (void **)&v41[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
  swift_beginAccess(&v41[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem], v90, 1, 0);
  v52 = *v51;
  *v51 = 0;
  v53 = v41;
  sub_10010EDA8(v52);

  __chkstk_darwin(v54);
  *(&v82 - 2) = v28;
  v55 = sub_100173AD4((uint64_t (*)(char *))sub_1001CA4F8, (_BOOL8)(&v82 - 4), (uint64_t)v37, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, (uint64_t *)&unk_100642710);
  v56 = v87;
  if (v55)
    goto LABEL_32;
  swift_bridgeObjectRelease(v37);
  v57 = sub_10006922C(&qword_100644BD0);
  v58 = *(unsigned __int8 *)(v88 + 80);
  v59 = (v58 + 32) & ~v58;
  v37 = (_QWORD *)swift_allocObject(v57, v59 + *(_QWORD *)(v88 + 72), v58 | 7);
  *((_OWORD *)v37 + 1) = xmmword_1004D9670;
  v83((char *)v37 + v59, (uint64_t)v28, v56);
  if (!objc_msgSend(v5, "isEditing"))
    goto LABEL_32;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v61 = objc_msgSend(v5, "collectionView:shouldSelectItemAtIndexPath:", v86, isa);

  if (!v61)
    goto LABEL_32;
  v62 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
  if ((v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
  {
    v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
    sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
    v5[v62] = 0;
  }
  result = objc_msgSend(v5, "loadViewIfNeeded");
  v63 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v64 = *(void **)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v64)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v82 = v37;
  v65 = v64;
  v66 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v65, "selectItemAtIndexPath:animated:scrollPosition:", v66, 0, 0);

  v67 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "collectionView:performPrimaryActionForItemAtIndexPath:", v86, v67);

  result = objc_msgSend(v5, "loadViewIfNeeded");
  v68 = *(char **)&v5[v63];
  if (v68)
  {
    v69 = v87;
    v83(v22, (uint64_t)v28, v87);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v22, 0, 1, v69);
    v70 = *(_QWORD *)&v68[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState];
    v71 = v70 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v70 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v89, 33, 0);
    v72 = v68;
    swift_retain();
    sub_10008BB40((uint64_t)v22, v71, (uint64_t *)&unk_100642710);
    swift_endAccess(v89);

    v56 = v69;
    swift_release(v70);
    v37 = v82;
LABEL_32:
    if (!v84 || (objc_msgSend(v5, "isEditing") & 1) != 0)
    {
LABEL_36:
      v75 = objc_msgSend(v86, "indexPathForItemAtPoint:", a3, a4);
      if (v75)
      {
        v76 = v75;
        v77 = (uint64_t)v37;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v75);

        v78 = 0;
      }
      else
      {
        v77 = (uint64_t)v37;
        v78 = 1;
      }
      v79 = v88;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v16, v78, 1, v56);
      v80 = (uint64_t)v85;
      sub_100070EDC((uint64_t)v16, (uint64_t)v85, (uint64_t *)&unk_100642710);
      sub_1001A102C(v77, v80);
      v38 = v81;
      swift_bridgeObjectRelease(v77);

      sub_10000CB4C(v80, (uint64_t *)&unk_100642710);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v28, v56);
      return (id)v38;
    }
    result = objc_msgSend(v5, "loadViewIfNeeded");
    v73 = *(void **)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v73)
    {
      v74 = v73;
      sub_1001A1EF0((uint64_t)v28, 1);

      goto LABEL_36;
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1001A1EF0(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  uint64_t v48;
  uint64_t (*v49)(void (*)(void), uint64_t, uint64_t);
  uint64_t result;
  void (*v51)(void);
  id v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Class isa;
  uint64_t v61;
  uint64_t v62;
  Class v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(void);
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  char *v108;
  _QWORD aBlock[5];
  uint64_t v110;
  char v111[24];
  char v112[8];

  v3 = v2;
  v99 = type metadata accessor for DispatchWorkItemFlags(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for DispatchQoS(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v107 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v91 = v9;
  v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C((uint64_t *)&unk_100642710);
  v12 = __chkstk_darwin(v11);
  v102 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v86 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v86 - v18;
  v20 = __chkstk_darwin(v17);
  v105 = (void (*)(void))((char *)&v86 - v21);
  __chkstk_darwin(v20);
  v23 = (char *)&v86 - v22;
  v24 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate], v25);
  if (Strong)
  {
    v28 = Strong;
    v29 = *((_QWORD *)v24 + 1);
    ObjectType = swift_getObjectType(Strong, v27);
    (*(void (**)(char *, _UNKNOWN **, uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 64))(v3, &off_1005E7FD8, a1, a2 & 1, ObjectType, v29);
    swift_unknownObjectRelease(v28);
  }
  v93 = a2;
  v31 = v107;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
  v92 = a1;
  v106 = v32;
  v32(v23, a1, v8);
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
  v33(v23, 0, 1, v8);
  v34 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  v35 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState];
  v108 = v3;
  v36 = v35 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v35 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, aBlock, 33, 0);
  swift_retain();
  sub_10008BB40((uint64_t)v23, v36, (uint64_t *)&unk_100642710);
  swift_endAccess(aBlock);
  swift_release(v35);
  v100 = v33;
  v33(v23, 1, 1, v8);
  v37 = *(_QWORD *)&v108[v34];
  v38 = v37 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart;
  swift_beginAccess(v37 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, aBlock, 33, 0);
  swift_retain();
  sub_10008BB40((uint64_t)v23, v38, (uint64_t *)&unk_100642710);
  swift_endAccess(aBlock);
  swift_release(v37);
  v39 = sub_10006922C(&qword_100644BD0);
  v40 = v31;
  v41 = *(_QWORD *)(v31 + 72);
  v42 = *(unsigned __int8 *)(v40 + 80);
  v43 = (v42 + 32) & ~v42;
  v89 = v42;
  v90 = v42 | 7;
  v44 = swift_allocObject(v39, v43 + v41, v42 | 7);
  *(_OWORD *)(v44 + 16) = xmmword_1004D9670;
  v101 = v34;
  v45 = *(_QWORD *)&v108[v34]
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v45, v112, 0, 0);
  v46 = v45;
  v47 = v105;
  v48 = v40;
  sub_1000271D4(v46, (uint64_t)v105, (uint64_t *)&unk_100642710);
  v49 = *(uint64_t (**)(void (*)(void), uint64_t, uint64_t))(v40 + 48);
  result = v49(v47, 1, v8);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v51 = *(void (**)(void))(v48 + 32);
    v103 = v44 + v43;
    v104 = v44;
    v105 = v51;
    v51();
    v52 = objc_msgSend(v108, "indexPathsForSelectedItems");
    v53 = v43;
    v54 = v100;
    if (v52)
    {
      v55 = v52;
      v87 = v53;
      v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, v8);

      v57 = *(_QWORD *)(v56 + 16);
      v88 = v56;
      if (v57)
      {
        v58 = v56;
        v59 = v56 + v87;
        swift_bridgeObjectRetain(v58);
        while (1)
        {
          v106(v19, v59, v8);
          v54(v19, 0, 1, v8);
          if (v49((void (*)(void))v19, 1, v8) == 1)
            break;
          ((void (*)(char *, char *, uint64_t))v105)(v10, v19, v8);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v108, "deselectItemAtIndexPath:animated:", isa, 0);

          (*(void (**)(char *, uint64_t))(v107 + 8))(v10, v8);
          v59 += v41;
          if (!--v57)
            goto LABEL_11;
        }
      }
      else
      {
        swift_bridgeObjectRetain(v56);
LABEL_11:
        v54(v19, 1, 1, v8);
      }
      swift_bridgeObjectRelease_n(v88, 2);
    }
    v61 = *(_QWORD *)(v104 + 16);
    if (v61)
    {
      swift_bridgeObjectRetain(v104);
      v62 = v103;
      while (1)
      {
        v106(v16, v62, v8);
        v54(v16, 0, 1, v8);
        if (v49((void (*)(void))v16, 1, v8) == 1)
          break;
        ((void (*)(char *, char *, uint64_t))v105)(v10, v16, v8);
        v63 = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v108, "selectItemAtIndexPath:animated:scrollPosition:", v63, 0, 0);

        (*(void (**)(char *, uint64_t))(v107 + 8))(v10, v8);
        v62 += v41;
        if (!--v61)
          goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v104);
LABEL_19:
      v54(v16, 1, 1, v8);
    }
    v64 = v104;
    swift_bridgeObjectRelease(v104);
    swift_setDeallocating(v64);
    swift_arrayDestroy(v103, *(_QWORD *)(v64 + 16), v8);
    swift_deallocClassInstance(v64, 32, 7);
    v65 = v108;
    v66 = *(_QWORD *)&v108[v101]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v66, v111, 0, 0);
    v67 = v66;
    v68 = v102;
    sub_1000271D4(v67, v102, (uint64_t *)&unk_100642710);
    result = v49((void (*)(void))v68, 1, v8);
    if ((_DWORD)result != 1)
    {
      v69 = v89;
      sub_10024FC9C(v68);
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v68, v8);
      v70 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v71 = (void *)static OS_dispatch_queue.main.getter(v70);
      v106(v10, v92, v8);
      v72 = (v69 + 24) & ~v69;
      v73 = v72 + v91;
      v74 = swift_allocObject(&unk_1005CE3C0, v72 + v91 + 1, v90);
      *(_QWORD *)(v74 + 16) = v65;
      ((void (*)(uint64_t, char *, uint64_t))v105)(v74 + v72, v10, v8);
      *(_BYTE *)(v74 + v73) = v93 & 1;
      aBlock[4] = sub_1001D0EC8;
      v110 = v74;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CE3D8;
      v75 = _Block_copy(aBlock);
      v76 = v110;
      v77 = v65;
      v78 = swift_release(v76);
      v79 = v94;
      static DispatchQoS.unspecified.getter(v78);
      aBlock[0] = _swiftEmptyArrayStorage;
      v80 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v81 = sub_10006922C((uint64_t *)&unk_100647540);
      v82 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v83 = v97;
      v84 = v81;
      v85 = v99;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v84, v82, v99, v80);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v79, v83, v75);
      _Block_release(v75);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v83, v85);
      return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v79, v96);
    }
  }
  __break(1u);
  return result;
}

