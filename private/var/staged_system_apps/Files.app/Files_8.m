id sub_100436A7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCGoToRecentLocation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCGoToRecentLocation()
{
  return objc_opt_self(DOCGoToRecentLocation);
}

uint64_t sub_100436B04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_10007E7A0(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

id sub_100436B48()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;

  v1 = (void *)v0[5];
  if (v1)
  {
    v2 = (id)v0[5];
  }
  else
  {
    v3 = v0[3];
    v4 = v0[4];
    sub_10007E7A0(v0, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    v6 = v5;
    v7 = objc_allocWithZone((Class)NSAttributedString);
    v8 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend(v7, "initWithString:", v8, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v1 = 0;
  }
  v9 = v1;
  return v2;
}

uint64_t sub_100436BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100092328(v1, a1);
}

uint64_t sub_100436C10()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_100436C20@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  id v6;
  uint64_t result;

  v3 = *v1;
  ObjectType = swift_getObjectType(v3);
  v5 = (void *)DOCNode.sourceIdentifier.getter(ObjectType);
  v6 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v5, v3);

  result = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  a1[3] = result;
  a1[4] = &off_1005EBFF8;
  *a1 = v6;
  return result;
}

uint64_t sub_100436CA8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_100436CB0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, "displayName");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

id sub_100436D04()
{
  id *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;

  v1 = objc_msgSend(*v0, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v3 = v2;

  v4 = objc_allocWithZone((Class)NSAttributedString);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v6 = objc_msgSend(v4, "initWithString:", v5);

  return v6;
}

uint64_t sub_100436D98@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;
  id v4;
  uint64_t result;

  v3 = objc_msgSend(*v1, "identifier");
  v4 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v3, 0);

  result = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  a1[3] = result;
  a1[4] = &off_1005EBFF8;
  *a1 = v4;
  return result;
}

id sub_100436E28()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  objc_super v5;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection];
  if (v2)
  {
    v3 = v2;
    sub_1001626AC();

  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCItemCollectionCandidateSource(0);
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_100436FF0()
{
  return type metadata accessor for DOCItemCollectionCandidateSource(0);
}

uint64_t type metadata accessor for DOCItemCollectionCandidateSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1006553F8;
  if (!qword_1006553F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCItemCollectionCandidateSource);
  return result;
}

void sub_100437034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[24];

  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = (_QWORD *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix);
  v16 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix + 8);
  *v15 = a1;
  v15[1] = a2;
  swift_bridgeObjectRetain(a2);
  v17 = swift_bridgeObjectRelease(v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, a3, v11, v17);
  v18 = v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_requestID;
  v19 = swift_beginAccess(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_requestID, v24, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v12 + 40))(v18, v14, v11, v19);
  swift_endAccess(v24);
  v20 = (_QWORD *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler);
  v21 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler);
  v22 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler + 8);
  *v20 = a4;
  v20[1] = a5;
  swift_retain();
  sub_100087534(v21, v22);
  sub_100437164();
  sub_1004374F8();
}

void sub_100437164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t ObjectType;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  Class isa;
  _QWORD v40[2];
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v1 = OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection))
  {
    v2 = v0;
    v3 = v0 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_itemCollectionConfiguration;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_itemCollectionConfiguration + 72);
    if (v4)
    {
      *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection) = v4;
      v5 = v4;
    }
    else
    {
      v6 = *(void **)(v3 + 64);
      if (v6)
      {
        v7 = type metadata accessor for DOCNodeCollection();
        v9 = *(void **)v3;
        v8 = *(void **)(v3 + 8);
        ObjectType = swift_getObjectType(v6);
        swift_unknownObjectRetain_n(v6, 2);
        v11 = v8;
        v12 = v9;
        LOBYTE(v40[0]) = 1;
        v13 = sub_100163EB8(v6, v8, v9, 0x100000000uLL, v7, ObjectType);
        v14 = objc_msgSend(v12, "identifier");
        v15 = *(_BYTE *)(v3 + 16);
        v16 = *(_QWORD *)(v3 + 24);
        v17 = *(_BYTE *)(v3 + 32);
        v18 = *(_BYTE *)(v3 + 33);
        v19 = *(_QWORD *)(v3 + 56);
        v40[0] = v12;
        v40[1] = v11;
        v41 = v15;
        v42 = v16;
        v43 = v17;
        v44 = v18;
        v45 = *(_OWORD *)(v3 + 40);
        v46 = v19;
        v47 = v6;
        v48 = 0;
        v20 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
        v21 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0((uint64_t)v14, 0, v20, (uint64_t)v40, 0);

        v22 = *(char **)(v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
        if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
        {
          v23 = *(id *)&v22[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
          *(_QWORD *)&v22[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v21;
          v24 = v21;
        }
        else
        {
          v25 = *(_QWORD *)(v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
          v23 = v21;
          sub_1000B0EFC(v22, v25, 0);
          objc_msgSend(v22, "setItemFilteringPredicate:", v23, swift_unknownObjectRelease(v25).n128_f64[0]);

        }
        v26 = *(void **)(v2 + v1);
        *(_QWORD *)(v2 + v1) = v13;
        swift_unknownObjectRelease(v6);

      }
    }
    v27 = *(char **)(v2 + v1);
    if (v27)
    {
      v28 = &v27[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
      *((_QWORD *)v28 + 1) = &off_1005EC040;
      swift_unknownObjectWeakAssign(v28, v2);
      v29 = v27;
      sub_10000F6EC();

      v30 = *(char **)(v2 + v1);
      if (v30)
      {
        v31 = v2 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_sortingDescriptor;
        v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_sortingDescriptor + 8);
        v33 = *(_QWORD *)(v31 + 16);
        v34 = *(void **)&v30[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        if ((v30[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
        {
          v35 = *(_QWORD *)&v30[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
          v36 = v30;
          swift_bridgeObjectRetain(v32);
          swift_bridgeObjectRetain(v33);
          sub_1000B0EFC(v34, v35, 1);
          sub_10032F49C(v32, v33);
          sub_100008A60(v34, v35, 1);

          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v32);
        }
        else
        {
          sub_10004F2F0(0, &qword_100645410, NSSortDescriptor_ptr);
          v37 = v30;
          swift_bridgeObjectRetain_n(v32, 2);
          swift_bridgeObjectRetain(v33);
          v38 = v34;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v38, "reorderItemsWithSortDescriptors:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v32);

        }
      }
    }
  }
}

void sub_1004374F8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void (*v7)(_QWORD, _QWORD, __n128);
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  _QWORD *v22;
  __n128 v23;
  __n128 v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, __n128);
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection];
  if (v6)
  {
    v30 = v6;
    if ((objc_msgSend(v30, "isGathering") & 1) != 0)
    {

      return;
    }
    v7 = *(void (**)(_QWORD, _QWORD, __n128))&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler];
    if (!v7)
      goto LABEL_24;
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler + 8];
    swift_retain();
    v9 = sub_10004FD50();
    v10 = v1;
    v11 = (uint64_t)sub_100439678(v9, v10);

    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v19 = v11;
      else
        v19 = v11 & 0xFFFFFFFFFFFFFF8;
      v12 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (v12)
        goto LABEL_7;
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12)
      {
LABEL_7:
        v25 = v10;
        v26 = v8;
        v27 = v7;
        v28 = v3;
        v29 = v2;
        v31 = _swiftEmptyArrayStorage;
        sub_100155104(0, v12 & ~(v12 >> 63), 0);
        if ((v12 & 0x8000000000000000) == 0)
        {
          v13 = 0;
          v14 = v31;
          do
          {
            if ((v11 & 0xC000000000000001) != 0)
            {
              v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
            }
            else
            {
              v15 = *(_QWORD *)(v11 + 8 * v13 + 32);
              swift_unknownObjectRetain(v15);
            }
            v31 = v14;
            v17 = v14[2];
            v16 = v14[3];
            if (v17 >= v16 >> 1)
            {
              sub_100155104(v16 > 1, v17 + 1, 1);
              v14 = v31;
            }
            ++v13;
            v14[2] = v17 + 1;
            v18 = &v14[2 * v17];
            v18[4] = v15;
            *((_BYTE *)v18 + 40) = 2;
          }
          while (v12 != v13);
          swift_bridgeObjectRelease(v11);
          v3 = v28;
          v2 = v29;
          v8 = v26;
          v7 = v27;
          v10 = v25;
          goto LABEL_21;
        }
        __break(1u);
LABEL_24:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000015, 0x8000000100535710, "Files/DOCGoToLocation+DocumentManager.swift", 43, 2, 219, 0);
        __break(1u);
        return;
      }
    }
    swift_bridgeObjectRelease(v11);
    v14 = _swiftEmptyArrayStorage;
LABEL_21:
    v20 = (char *)v10 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_requestID;
    v21 = swift_beginAccess((char *)v10 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_requestID, &v31, 0, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v5, v20, v2, v21);
    v22 = sub_10043B960((uint64_t)v14);
    v23 = swift_bridgeObjectRelease(v14);
    v7(v5, v22, v23);
    sub_100087534((uint64_t)v7, v8);

    v24 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v24);
  }
}

uint64_t sub_1004377F8(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t ObjectType;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  ObjectType = swift_getObjectType(v8);
  v10 = objc_msgSend(v8, "displayName");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v15 = String.doc_sanitizedForComparison.getter(v11, v13, v14);
  v17 = v16;
  if (objc_msgSend(v8, "isFolder", swift_bridgeObjectRelease(v13).n128_f64[0]))
  {
    v43[0] = v15;
    v43[1] = v17;
    v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix + 8);
    v41 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix);
    v42 = v18;
    v19 = sub_10010BEE8();
    v20 = sub_10010BF2C();
    v21 = BidirectionalCollection<>.starts<A>(with:)(&v41, &type metadata for String, &type metadata for String, v19, v20);
    swift_bridgeObjectRelease(v17);
    if ((v21 & 1) != 0)
    {
      v22 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
      v23 = sub_100439354(v8);

      if ((v23 & 1) != 0)
        return 1;
      v26 = Logger.UI.unsafeMutableAddressor(v24);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v26, v4);
      v27 = swift_unknownObjectRetain_n(v8, 2);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.debug.getter(v28);
      v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = swift_slowAlloc(22, -1);
        v40 = swift_slowAlloc(64, -1);
        v43[0] = v40;
        *(_DWORD *)v31 = 136315394;
        v39 = v28;
        v41 = sub_1000544FC(0xD000000000000013, 0x8000000100535730, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
        *(_WORD *)(v31 + 12) = 2080;
        v38 = v30;
        v32 = DOCNode.nodeDescription.getter(ObjectType);
        v34 = v33;
        v41 = sub_1000544FC(v32, v33, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
        swift_unknownObjectRelease_n(v8, 2);
        swift_bridgeObjectRelease(v34);
        v35 = v39;
        _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v38, "%s [PROTECTED APPS] filtering out suggested node: %s", (uint8_t *)v31, 0x16u);
        v36 = v40;
        swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v31, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(v8, 2);
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v17);
  }
  return 0;
}

uint64_t sub_100437B60(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "P";
  v4[1] = &unk_1004E8880;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_1004E8898;
  v4[4] = &unk_1004E88B0;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_1004E88C8;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100437C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100437034(a1, a2, a3, a4, a5);
}

void sub_100437C30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t ObjectType;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  char *v34;
  id v35;
  id v36;
  unint64_t v37;
  _QWORD *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  Swift::Int v43;
  Swift::Int v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  uint8_t *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  id v69;
  void *v70;
  Class isa;
  double v72;
  id v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  id *v78;
  id v79;
  Class v80;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  objc_super v89;
  id v90[3];
  uint64_t v91;
  uint64_t v92;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v87 - v14;
  if (a2)
  {
    v16 = Logger.UI.unsafeMutableAddressor(v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
    swift_unknownObjectRetain(a3);
    swift_errorRetain(a2);
    swift_unknownObjectRetain(a3);
    v17 = swift_errorRetain(a2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc(22, -1);
      v21 = (void *)swift_slowAlloc(64, -1);
      v88 = v8;
      v22 = v21;
      v90[0] = v21;
      *(_DWORD *)v20 = 136315394;
      ObjectType = swift_getObjectType(a3);
      v24 = DOCNode.nodeDescription.getter(ObjectType);
      v26 = v25;
      v91 = sub_1000544FC(v24, v25, (uint64_t *)v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92);
      swift_unknownObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v26);
      *(_WORD *)(v20 + 12) = 2080;
      v91 = a2;
      swift_errorRetain(a2);
      v27 = sub_10006922C((uint64_t *)&unk_1006434A0);
      v28 = String.init<A>(describing:)(&v91, v27);
      v30 = v29;
      v91 = sub_1000544FC(v28, v29, (uint64_t *)v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to fetch all parents for node: %s. Error: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v88);
      return;
    }
    swift_unknownObjectRelease_n(a3, 2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

    v48 = *(void (**)(char *, uint64_t))(v9 + 8);
    v49 = v11;
LABEL_17:
    v48(v49, v8);
    return;
  }
  if (!a1)
  {
    v50 = Logger.UI.unsafeMutableAddressor(v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v50, v8);
    v51 = swift_unknownObjectRetain_n(a3, 2);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter(v52);
    if (os_log_type_enabled(v52, (os_log_type_t)v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = (void *)swift_slowAlloc(32, -1);
      v90[0] = v55;
      v88 = v8;
      *(_DWORD *)v54 = 136315138;
      v56 = swift_getObjectType(a3);
      v57 = DOCNode.nodeDescription.getter(v56);
      v59 = v58;
      v91 = sub_1000544FC(v57, v58, (uint64_t *)v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92);
      swift_unknownObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v59);
      _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "Received nil for parents of %s.", v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v88);
      return;
    }

    swift_unknownObjectRelease_n(a3, 2);
    v48 = *(void (**)(char *, uint64_t))(v9 + 8);
    v49 = v15;
    goto LABEL_17;
  }
  v31 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1004D9B40;
  v33 = (objc_class *)type metadata accessor for DOCGoToRecentLocation();
  v34 = (char *)objc_allocWithZone(v33);
  *(_QWORD *)&v34[OBJC_IVAR___DOCGoToRecentLocation_location] = a4;
  *(_QWORD *)&v34[OBJC_IVAR___DOCGoToRecentLocation_parents] = a1;
  v89.receiver = v34;
  v89.super_class = v33;
  swift_bridgeObjectRetain(a1);
  v35 = a4;
  v36 = objc_msgSendSuper2(&v89, "init");
  *(_QWORD *)(v32 + 32) = v36;
  v90[0] = (id)v32;
  specialized Array._endMutation()(v36);
  v37 = (unint64_t)v90[0];
  v38 = sub_10043A830();
  v39 = v35;
  v40 = sub_10043A5BC((uint64_t)v38, (uint64_t)v39);
  swift_bridgeObjectRelease(v38);

  v90[0] = (id)v37;
  sub_100130908((uint64_t)v40);
  v41 = (uint64_t)v90[0];
  if ((unint64_t)v90[0] >> 62)
  {
    if ((uint64_t)v90[0] < 0)
      v46 = v90[0];
    else
      v46 = (id)((unint64_t)v90[0] & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v90[0]);
    v45 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRetain(v41);
    v47 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v41);
    if (v47 < 0)
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v45 >= 4)
      v85 = 4;
    else
      v85 = v45;
    if (v45 >= 0)
      v42 = v85;
    else
      v42 = 4;
    swift_bridgeObjectRetain(v41);
    v86 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v41);
    if (v86 < v42)
    {
      __break(1u);
      return;
    }
  }
  else if (*(uint64_t *)(((unint64_t)v90[0] & 0xFFFFFFFFFFFFF8) + 0x10) >= 4)
  {
    v42 = 4;
  }
  else
  {
    v42 = *(_QWORD *)(((unint64_t)v90[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v41 & 0xC000000000000001) != 0 && v42)
  {
    v43 = 0;
    do
    {
      v44 = v43 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v43);
      v43 = v44;
    }
    while (v42 != v44);
  }
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v60 = v41;
    else
      v60 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v41);
    v46 = (id)_CocoaArrayWrapper.subscript.getter(0, v42, v60);
    v47 = v61;
    v45 = v62;
    v37 = v63;
    swift_bridgeObjectRelease_n(v41, 2);
    if ((v37 & 1) == 0)
      goto LABEL_25;
LABEL_26:
    v65 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v66 = swift_unknownObjectRetain_n(v46, 2);
    v67 = (_QWORD *)swift_dynamicCastClass(v66, v65);
    if (!v67)
    {
      swift_unknownObjectRelease(v46);
      v67 = _swiftEmptyArrayStorage;
    }
    v68 = v67[2];
    swift_release(v67);
    if (!__OFSUB__(v37 >> 1, v45))
    {
      v69 = v46;
      if (v68 == (v37 >> 1) - v45)
      {
        v64 = (_QWORD *)swift_dynamicCastClass(v46, v65);
        if (!v64)
        {
          swift_unknownObjectRelease(v46);
          v64 = _swiftEmptyArrayStorage;
        }
        goto LABEL_32;
      }
      goto LABEL_44;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    swift_unknownObjectRelease(v69);
    goto LABEL_25;
  }
  v45 = 0;
  v46 = (id)(v41 & 0xFFFFFFFFFFFFFF8);
  v47 = (v41 & 0xFFFFFFFFFFFFFF8) + 32;
  v37 = (2 * v42) | 1;
  if ((v37 & 1) != 0)
    goto LABEL_26;
LABEL_25:
  v64 = sub_10028FCA0((uint64_t)v46, v47, v45, v37);
LABEL_32:
  swift_unknownObjectRelease(v46);
  v70 = (void *)objc_opt_self(NSKeyedArchiver);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v72 = swift_release(v64).n128_u64[0];
  v90[0] = 0;
  v73 = objc_msgSend(v70, "archivedDataWithRootObject:requiringSecureCoding:error:", isa, 1, v90, v72);

  v74 = v90[0];
  if (v73)
  {
    v75 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v73);
    v77 = v76;

    v78 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
    swift_beginAccess(v78, v90, 0, 0);
    if (*v78)
    {
      v79 = *v78;
      v80 = Data._bridgeToObjectiveC()().super.isa;
      v81 = DOCUserDefaultsKeyMostRecentGoToLocations;
      objc_msgSend(v79, "setObject:forKey:", v80, v81);
      sub_1000D4C00(v75, v77);

    }
    else
    {
      sub_1000D4C00(v75, v77);
    }
  }
  else
  {
    v82 = v74;
    v83 = _convertNSErrorToError(_:)(v74);

    swift_willThrow(v84);
    swift_errorRelease(v83);
  }
}

uint64_t sub_100438428(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain();
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1004384A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __objc2_prot *v16;
  SEL *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t All;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63[32];

  v6 = v5;
  v54 = a4;
  v55 = a5;
  v53 = a3;
  v9 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  v10 = *(char **)(v51 + 64);
  __chkstk_darwin(v9);
  v50 = (char *)&v46 - ((unint64_t)(v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v6 + 24, v63, 1, 0);
  v11 = *(_QWORD *)(v6 + 24);
  *(_QWORD *)(v6 + 24) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v11);
  v12 = sub_10043A830();
  swift_retain();
  swift_bridgeObjectRetain(a2);
  v56 = v12;
  v13 = (uint64_t)sub_10043A338((unint64_t)v12, v6, a1, a2);
  v61 = v6;
  swift_release(v6);
  swift_bridgeObjectRelease(a2);
  if ((unint64_t)v13 >> 62)
    goto LABEL_17;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v13);
  while (v14)
  {
    v62 = v13 & 0xC000000000000001;
    v47 = v10 + 7;
    v48 = v14;
    v15 = 4;
    v16 = &OBJC_PROTOCOL___RPTTestParameters;
    v17 = (SEL *)&off_10061F000;
    v49 = v13;
    while (1)
    {
      v37 = v62
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v13)
          : (char *)*(id *)(v13 + 8 * v15);
      v10 = v37;
      v38 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        break;
      v39 = (char *)objc_msgSend(*(id *)&v37[(unint64_t)v16[12].isa], v17[319]);
      if (v39)
      {
        v40 = v39;
        v41 = *(_QWORD *)&v10[OBJC_IVAR___DOCGoToRecentLocation_parents];
        v42 = sub_10006922C((uint64_t *)&unk_1006424B0);
        All = Array<A>.fpfs_syncFetchAllFPItems()(v41, v42);
        if (All)
        {
          v18 = *(_QWORD *)(v61 + 16);
          v19 = v61;
          v58 = All;
          v59 = v18;
          v57 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
          v21 = v50;
          v20 = v51;
          v22 = v52;
          (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v53, v52);
          v23 = *(unsigned __int8 *)(v20 + 80);
          v24 = (v23 + 48) & ~v23;
          v25 = (unint64_t)&v47[v24] & 0xFFFFFFFFFFFFFFF8;
          v26 = (_QWORD *)swift_allocObject(&unk_1005EC098, v25 + 8, v23 | 7);
          v60 = v15;
          v27 = v26;
          v26[2] = v19;
          v26[3] = v10;
          v28 = v55;
          v26[4] = v54;
          v26[5] = v28;
          v29 = v22;
          v17 = (SEL *)&off_10061F000;
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v26 + v24, v21, v29);
          v30 = v56;
          *(_QWORD *)((char *)v27 + v25) = v56;
          v31 = v48;
          swift_retain();
          v32 = v30;
          v13 = v49;
          swift_bridgeObjectRetain(v32);
          v33 = v10;
          swift_retain();
          v34 = v58;
          v35 = v57;
          FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)(v58, 0, v59, 1, v57, 0, sub_10043AD14, v27);

          v16 = &OBJC_PROTOCOL___RPTTestParameters;
          v36 = v27;
          v15 = v60;
          swift_release(v36);
          swift_bridgeObjectRelease(v34);

          v14 = v31;
          if (v38 == v31)
            goto LABEL_15;
          goto LABEL_5;
        }

      }
      else
      {
        v40 = v10;
      }

      if (v38 == v14)
        goto LABEL_15;
LABEL_5:
      ++v15;
    }
    __break(1u);
LABEL_17:
    if (v13 < 0)
      v45 = v13;
    else
      v45 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v45);
  }
LABEL_15:
  swift_bridgeObjectRelease(v56);
  return swift_bridgeObjectRelease_n(v13, 2);
}

void sub_1004387F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, void (*a6)(uint64_t, _QWORD *, __n128), uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v32)(uint64_t, _QWORD *, __n128);
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[5];

  v13 = *(void **)&a5[OBJC_IVAR___DOCGoToRecentLocation_location];
  v36[3] = &type metadata for DOCLocationGoToCandidate;
  v36[4] = &off_1005EC2B0;
  v14 = swift_allocObject(&unk_1005EC0C0, 65, 7);
  v36[0] = v14;
  *(_QWORD *)(v14 + 40) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  *(_QWORD *)(v14 + 48) = &off_1005EBFF8;
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 56) = a1;
  *(_BYTE *)(v14 + 64) = 0;
  v15 = (_QWORD *)(a4 + 24);
  swift_beginAccess(v15, &v33, 33, 0);
  v16 = a1;
  v17 = a5;
  v18 = v13;
  sub_10043B718((uint64_t)v36, v17);
  swift_endAccess(&v33);
  if ((unint64_t)a9 >> 62)
  {
    if (a9 < 0)
      v29 = a9;
    else
      v29 = a9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a9);
    v19 = _CocoaArrayWrapper.endIndex.getter(v29);
    v32 = a6;
    if (v19)
      goto LABEL_3;
LABEL_25:
    v21 = _swiftEmptyArrayStorage;
LABEL_26:
    v30 = swift_bridgeObjectRelease(a9);
    v32(a8, v21, v30);
    swift_bridgeObjectRelease(v21);
    return;
  }
  v19 = *(_QWORD *)((a9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a9);
  v32 = a6;
  if (!v19)
    goto LABEL_25;
LABEL_3:
  if (v19 >= 1)
  {
    v20 = 0;
    v21 = _swiftEmptyArrayStorage;
    while (1)
    {
      if ((a9 & 0xC000000000000001) != 0)
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, a9);
      else
        v22 = *(id *)(a9 + 8 * v20 + 32);
      v23 = v22;
      v24 = *v15;
      if (*(_QWORD *)(*v15 + 16))
      {
        swift_bridgeObjectRetain(*v15);
        v25 = sub_1001410A0((uint64_t)v23);
        if ((v26 & 1) != 0)
        {
          sub_100092328(*(_QWORD *)(v24 + 56) + 40 * v25, (uint64_t)&v33);
        }
        else
        {
          v35 = 0;
          v33 = 0u;
          v34 = 0u;
        }
        swift_bridgeObjectRelease(v24);
        if (*((_QWORD *)&v34 + 1))
        {
          sub_1000E85C4(&v33, (uint64_t)v36);
          sub_100092328((uint64_t)v36, (uint64_t)&v33);
          if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
            v21 = sub_1001543FC(0, v21[2] + 1, 1, v21);
          v28 = v21[2];
          v27 = v21[3];
          if (v28 >= v27 >> 1)
            v21 = sub_1001543FC((_QWORD *)(v27 > 1), v28 + 1, 1, v21);
          v21[2] = v28 + 1;
          sub_1000E85C4(&v33, (uint64_t)&v21[5 * v28 + 4]);

          sub_100068588(v36);
          goto LABEL_7;
        }
      }
      else
      {
        v35 = 0;
        v33 = 0u;
        v34 = 0u;
      }

      sub_10000CB4C((uint64_t)&v33, &qword_100649580);
LABEL_7:
      if (v19 == ++v20)
        goto LABEL_26;
    }
  }
  __break(1u);
}

uint64_t sub_100438AC8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_10043ADC0(v0 + 32);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for DOCRecentLocationsCandidateSource()
{
  return objc_opt_self(_TtC5Files33DOCRecentLocationsCandidateSource);
}

uint64_t sub_100438B14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1004384A8(a1, a2, a3, a4, a5);
}

void sub_100438B34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *, __n128))
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  __n128 v21;

  v9 = *(_QWORD *)(v4 + 24);
  swift_retain();
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v9);
  v11 = (uint64_t)sub_100439CF4(v10, v4, a1, a2);
  swift_bridgeObjectRelease(v9);
  swift_release(v4);
  swift_bridgeObjectRelease(a2);
  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v11);
    v20 = sub_10043BA60((uint64_t)_swiftEmptyArrayStorage);
    v21 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    a4(a3, v20, v21);
    swift_bridgeObjectRelease(v20);
    return;
  }
  if (v11 < 0)
    v19 = v11;
  else
    v19 = v11 & 0xFFFFFFFFFFFFFF8;
  v12 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v12)
    goto LABEL_16;
LABEL_3:
  sub_100155218(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v13 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
      else
        v14 = *(id *)(v11 + 8 * v13 + 32);
      v15 = v14;
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_100155218(v16 > 1, v17 + 1, 1);
      ++v13;
      _swiftEmptyArrayStorage[2] = v17 + 1;
      v18 = &_swiftEmptyArrayStorage[2 * v17];
      v18[4] = v15;
      *((_BYTE *)v18 + 40) = 1;
    }
    while (v12 != v13);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_100438D04()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for DOCFileProviderSourcesCandidateSource()
{
  return objc_opt_self(_TtC5Files37DOCFileProviderSourcesCandidateSource);
}

void sub_100438D50(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *, __n128))
{
  sub_100438B34(a1, a2, a3, a4);
}

void sub_100438D70(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *, __n128))
{
  uint64_t v4;
  uint64_t v5;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;

  v5 = v4;
  v10 = objc_msgSend(*(id *)(v5 + 24), "favoritedLocations");
  v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  swift_retain();
  swift_bridgeObjectRetain(a2);
  v13 = (uint64_t)sub_100439B44(v12, v5, a1, a2);
  swift_release(v5);
  swift_bridgeObjectRelease(a2);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v13);
    v22 = sub_10043B960((uint64_t)_swiftEmptyArrayStorage);
    v23 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    a4(a3, v22, v23);
    swift_bridgeObjectRelease(v22);
    return;
  }
  if (v13 < 0)
    v21 = v13;
  else
    v21 = v13 & 0xFFFFFFFFFFFFFF8;
  v14 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v14)
    goto LABEL_16;
LABEL_3:
  sub_100155104(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
      else
        v16 = *(id *)(v13 + 8 * v15 + 32);
      v17 = v16;
      v19 = _swiftEmptyArrayStorage[2];
      v18 = _swiftEmptyArrayStorage[3];
      if (v19 >= v18 >> 1)
        sub_100155104(v18 > 1, v19 + 1, 1);
      ++v15;
      _swiftEmptyArrayStorage[2] = v19 + 1;
      v20 = &_swiftEmptyArrayStorage[2 * v19];
      v20[4] = v17;
      *((_BYTE *)v20 + 40) = 2;
    }
    while (v14 != v15);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_100438F7C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[4];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  if ((sub_1001E9928(v12, 0) & 1) == 0)
    return 0;
  v43[3] = v4;
  v13 = objc_msgSend(v12, "displayName");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v18 = String.doc_sanitizedForComparison.getter(v14, v16, v17);
  v20 = v19;
  swift_bridgeObjectRelease(v16);
  if (String.count.getter(v18, v20) < 1)
  {
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v43[0] = v18;
    v43[1] = v20;
    v41 = a3;
    v42 = a4;
    v21 = sub_10010BEE8();
    v22 = sub_10010BF2C();
    v23 = BidirectionalCollection<>.starts<A>(with:)(&v41, &type metadata for String, &type metadata for String, v21, v22);
    swift_bridgeObjectRelease(v20);
    if ((v23 & 1) != 0)
    {
      v24 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
      v25 = sub_10043981C(v12);

      if ((v25 & 1) != 0)
        return 1;
      v28 = Logger.UI.unsafeMutableAddressor(v26);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v28, v8);
      v29 = v12;
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.debug.getter(v30);
      v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        v33 = swift_slowAlloc(22, -1);
        v40 = swift_slowAlloc(64, -1);
        v43[0] = v40;
        *(_DWORD *)v33 = 136315394;
        HIDWORD(v39) = v32;
        v41 = sub_1000544FC(0xD000000000000030, 0x8000000100535660, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
        *(_WORD *)(v33 + 12) = 2080;
        v34 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v35 = DOCNode.nodeDescription.getter(v34);
        v37 = v36;
        v41 = sub_1000544FC(v35, v36, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);

        swift_bridgeObjectRelease(v37);
        _os_log_impl((void *)&_mh_execute_header, v30, BYTE4(v39), "%s [PROTECTED APPS] filtering out suggested node: %s", (uint8_t *)v33, 0x16u);
        v38 = v40;
        swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return 0;
}

uint64_t type metadata accessor for DOCFavoritesCandidateSource()
{
  return objc_opt_self(_TtC5Files27DOCFavoritesCandidateSource);
}

void sub_1004392E8(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *, __n128))
{
  sub_100438D70(a1, a2, a3, a4);
}

uint64_t sub_100439308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = sub_10006922C(&qword_100655668);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_1006441A0;
  else
    v2 = (uint64_t *)&unk_100655670;
  return sub_10006922C(v2);
}

uint64_t sub_100439354(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  double v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint64_t v25;
  id v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  os_log_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if (!(_DWORD)v6)
    return 1;
  v7 = Logger.UI.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = swift_unknownObjectRetain_n(a1, 4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter(v9);
  v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    v12 = swift_slowAlloc(32, -1);
    v31 = v9;
    v13 = v12;
    v30 = swift_slowAlloc(96, -1);
    v34 = v30;
    *(_DWORD *)v13 = 136315650;
    v32 = sub_1000544FC(0xD00000000000001BLL, 0x80000001005356A0, &v34);
    *(_QWORD *)&v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33).n128_u64[0];
    *(_WORD *)(v13 + 12) = 2080;
    v15 = objc_msgSend(a1, "displayName", v14);
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    HIDWORD(v29) = v11;
    v18 = v17;

    v32 = sub_1000544FC(v16, v18, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    swift_unknownObjectRelease_n(a1, 2);
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
    *(_WORD *)(v13 + 22) = 2080;
    v20 = objc_msgSend(a1, "identifier", v19);
    _bridgeAnyObjectToAny(_:)(&v32, v20);
    swift_unknownObjectRelease(v20);
    v21 = String.init<A>(describing:)(&v32, (char *)&type metadata for Any + 8);
    v23 = v22;
    v32 = sub_1000544FC(v21, v22, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v23);
    v24 = v31;
    _os_log_impl((void *)&_mh_execute_header, v31, BYTE4(v29), "%s [PROTECTED APPS] item: %s identifier: %s", (uint8_t *)v13, 0x20u);
    v25 = v30;
    swift_arrayDestroy(v30, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a1, 4);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v27 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  v28 = objc_msgSend(v27, "nodeRequiresAuthentication_Sync:", a1);

  return v28 ^ 1;
}

_QWORD *sub_100439678(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;

  v4 = a1;
  v21 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_18;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    v6 = 0;
    v7 = v4 & 0xC000000000000001;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    v18 = i;
    v19 = v4;
    while (1)
    {
      if (v7)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
        v10 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease(v4);
          swift_unknownObjectRelease(v9);
          swift_release(v21);
          return a2;
        }
        goto LABEL_9;
      }
      if (v6 >= *(_QWORD *)(v8 + 16))
        break;
      v9 = *(void **)(v4 + 8 * v6 + 32);
      swift_unknownObjectRetain(v9);
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_14;
LABEL_9:
      v20 = v9;
      v11 = sub_1004377F8(&v20, (uint64_t)a2);
      if (v2)
        goto LABEL_15;
      if ((v11 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v12 = v8;
        v13 = v21[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
        v14 = v13;
        v8 = v12;
        v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v9);
        specialized ContiguousArray._endMutation()(v15);
        i = v18;
        v4 = v19;
      }
      else
      {
        swift_unknownObjectRelease(v9);
      }
      ++v6;
      if (v10 == i)
      {
        a2 = v21;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_18:
    if (v4 < 0)
      v16 = v4;
    else
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  a2 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return a2;
}

uint64_t sub_10043981C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint64_t v26;
  id v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  os_log_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if (!(_DWORD)v6)
    return 1;
  v7 = Logger.UI.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = a1;
  v9 = swift_unknownObjectRetain_n(v8, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter(v10);
  v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc(32, -1);
    v32 = v10;
    v14 = v13;
    v31 = swift_slowAlloc(96, -1);
    v35 = v31;
    *(_DWORD *)v14 = 136315650;
    v33 = sub_1000544FC(0xD00000000000001BLL, 0x80000001005356A0, &v35);
    *(_QWORD *)&v15 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34).n128_u64[0];
    *(_WORD *)(v14 + 12) = 2080;
    v16 = objc_msgSend(v8, "displayName", v15);
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    HIDWORD(v30) = v12;
    v19 = v18;

    v33 = sub_1000544FC(v17, v19, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34);

    *(_QWORD *)&v20 = swift_bridgeObjectRelease(v19).n128_u64[0];
    *(_WORD *)(v14 + 22) = 2080;
    v21 = objc_msgSend(v8, "identifier", v20);
    _bridgeAnyObjectToAny(_:)(&v33, v21);
    swift_unknownObjectRelease(v21);
    v22 = String.init<A>(describing:)(&v33, (char *)&type metadata for Any + 8);
    v24 = v23;
    v33 = sub_1000544FC(v22, v23, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34);

    swift_bridgeObjectRelease(v24);
    v25 = v32;
    _os_log_impl((void *)&_mh_execute_header, v32, BYTE4(v30), "%s [PROTECTED APPS] item: %s identifier: %s", (uint8_t *)v14, 0x20u);
    v26 = v31;
    swift_arrayDestroy(v31, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v28 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  v29 = objc_msgSend(v28, "nodeRequiresAuthentication_Sync:", v8);

  return v29 ^ 1;
}

_QWORD *sub_100439B44(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  _QWORD *v27;

  v8 = a1;
  v27 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      v10 = 0;
      v24 = v8 & 0xFFFFFFFFFFFFFF8;
      v25 = v8 & 0xC000000000000001;
      v22 = a2;
      v23 = v8;
      while (v25)
      {
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
LABEL_9:
        v12 = v11;
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_17;
        v26 = v11;
        v14 = sub_100438F7C(&v26, a2, a3, (uint64_t)a4);
        if (v4)
        {
          swift_bridgeObjectRelease(v8);

          swift_release(v27);
          return a4;
        }
        if ((v14 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
          v15 = v9;
          v16 = a3;
          v17 = v27[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a3 = v16;
          v9 = v15;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v12);
          specialized ContiguousArray._endMutation()(v19);
          a2 = v22;
          v8 = v23;
        }
        else
        {

        }
        ++v10;
        if (v13 == v9)
        {
          a4 = v27;
          goto LABEL_23;
        }
      }
      if (v10 < *(_QWORD *)(v24 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v8 < 0)
        v20 = v8;
      else
        v20 = v8 & 0xFFFFFFFFFFFFFF8;
      v9 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v9)
        goto LABEL_22;
    }
    v11 = *(id *)(v8 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_22:
  a4 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v8);
  return a4;
}

_QWORD *sub_100439CF4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Class isa;
  uint64_t v39;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v45[4];
  _QWORD *v46;

  v5 = a1;
  v46 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_32;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  result = _swiftEmptyArrayStorage;
  if (v6)
  {
    v39 = v5;
    v8 = 0;
    v43 = v5 & 0xFFFFFFFFFFFFFF8;
    v44 = v5 & 0xC000000000000001;
    v42 = v6;
    while (1)
    {
      if (v44)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      }
      else
      {
        if (v8 >= *(_QWORD *)(v43 + 16))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          if (v5 < 0)
            v37 = v5;
          else
            v37 = v5 & 0xFFFFFFFFFFFFFF8;
          v6 = _CocoaArrayWrapper.endIndex.getter(v37);
          goto LABEL_3;
        }
        v9 = *(id *)(v5 + 8 * v8 + 32);
      }
      v10 = v9;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_31;
      v12 = *(void **)(a2 + 16);
      v13 = type metadata accessor for DOCFileProviderSource();
      v14 = swift_dynamicCastClass(v10, v13);
      if (!v14 || (v15 = *(void **)(v14 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0)
      {
LABEL_20:
        v23 = objc_msgSend(v10, "displayName");
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v26 = v25;

        v28 = String.doc_sanitizedForComparison.getter(v24, v26, v27);
        v30 = v29;
        swift_bridgeObjectRelease(v26);
        if (String.count.getter(v28, v30) < 1)
        {

          swift_bridgeObjectRelease(v30);
        }
        else
        {
          v45[2] = v28;
          v45[3] = v30;
          v45[0] = a3;
          v45[1] = a4;
          v31 = sub_10010BEE8();
          v32 = sub_10010BF2C();
          v33 = BidirectionalCollection<>.starts<A>(with:)(v45, &type metadata for String, &type metadata for String, v31, v32);
          swift_bridgeObjectRelease(v30);
          if ((v33 & 1) != 0)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
            v35 = v46[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
            v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v10);
            specialized ContiguousArray._endMutation()(v36);
          }
          else
          {

          }
        }
        goto LABEL_6;
      }
      v16 = a2;
      v17 = (void *)objc_opt_self(DOCManagedPermission);
      v18 = v10;
      v19 = v15;
      v20 = objc_msgSend(v17, "defaultPermission");
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
        && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage) >= 1)
      {
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v21 = objc_msgSend(v20, "canItems:performAction:fileProviderDomain:", isa, objc_msgSend(v20, "userActionForConfiguration:", v12), v19);

      }
      else
      {
        v21 = 1;
      }
      if (objc_msgSend(v12, "forPickingFoldersOnly"))
      {
        v22 = objc_msgSend(v19, "supportsPickingFolders");

        if ((v21 & 1) == 0)
        {

          a2 = v16;
          v5 = v39;
          goto LABEL_6;
        }
        a2 = v16;
        v5 = v39;
        if ((v22 & 1) != 0)
          goto LABEL_20;
      }
      else
      {

        a2 = v16;
        v5 = v39;
        if ((v21 & 1) != 0)
          goto LABEL_20;
      }

LABEL_6:
      ++v8;
      if (v11 == v42)
        return v46;
    }
  }
  return result;
}

uint64_t sub_10043A068(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  os_log_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  id v19;
  unsigned int v20;
  uint64_t v21;
  os_log_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if (!(_DWORD)v6)
    return 1;
  v7 = Logger.UI.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = a1;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v23 = (_QWORD *)swift_slowAlloc(8, -1);
    v24 = swift_slowAlloc(32, -1);
    v26 = v24;
    *(_DWORD *)v11 = 136315394;
    v25 = sub_1000544FC(0xD00000000000001CLL, 0x80000001005356C0, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    *(_WORD *)(v11 + 12) = 2112;
    v22 = v9;
    v25 = (uint64_t)v8;
    v12 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    v13 = v23;
    *v23 = v8;

    v14 = v22;
    _os_log_impl((void *)&_mh_execute_header, v22, v10, "%s [PROTECTED APPS] location: %@", (uint8_t *)v11, 0x16u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    v16 = v24;
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v18 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  v19 = objc_msgSend(*(id *)&v8[OBJC_IVAR___DOCGoToRecentLocation_location], "node");
  v20 = objc_msgSend(v18, "nodeRequiresAuthentication_Sync:", v19);

  swift_unknownObjectRelease(v19);
  return v20 ^ 1;
}

_QWORD *sub_10043A338(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t ObjectType;
  double v16;
  _QWORD *result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;

  v31._countAndFlagsBits = a3;
  v31._object = a4;
  v4 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    if (v4 < 0)
      v30 = v4;
    else
      v30 = v4 & 0xFFFFFFFFFFFFFF8;
    v5 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (v5)
      goto LABEL_3;
    return _swiftEmptyArrayStorage;
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return _swiftEmptyArrayStorage;
LABEL_3:
  v6 = 0;
  v33 = v4;
  v35 = v4 & 0xFFFFFFFFFFFFFF8;
  v36 = v4 & 0xC000000000000001;
  v32 = v5;
  while (1)
  {
    if (v36)
    {
      v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
    }
    else
    {
      if (v6 >= *(_QWORD *)(v35 + 16))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v7 = (char *)*(id *)(v4 + 8 * v6 + 32);
    }
    v8 = v7;
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_21;
    v10 = OBJC_IVAR___DOCGoToRecentLocation_location;
    v11 = objc_msgSend(*(id *)&v7[OBJC_IVAR___DOCGoToRecentLocation_location], "displayName");
    if (v11)
      break;

LABEL_5:
    ++v6;
    if (v9 == v5)
      return _swiftEmptyArrayStorage;
  }

  v12 = objc_msgSend(*(id *)&v8[v10], "sourceIdentifier");
  Strong = swift_unknownObjectUnownedLoadStrong(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  ObjectType = swift_getObjectType(Strong);
  LOBYTE(v14) = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v14 + 8))(a2, v12, ObjectType, v14);

  *(_QWORD *)&v16 = swift_unknownObjectRelease(Strong).n128_u64[0];
  if ((v14 & 1) == 0)
    goto LABEL_16;
  result = objc_msgSend(*(id *)&v8[v10], "displayName", v16);
  if (result)
  {
    v18 = result;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v21 = v20;

    String.doc_sanitizedForComparison.getter(v19, v21, v22);
    v24 = v23;
    swift_bridgeObjectRelease(v21);
    LOBYTE(v18) = String.hasPrefix(_:)(v31);
    swift_bridgeObjectRelease(v24);
    if ((v18 & 1) != 0)
    {
      v25 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
      v26 = sub_10043A068(v8);

      if ((v26 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        v28 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v28);
        v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v8);
        specialized ContiguousArray._endMutation()(v29);
LABEL_17:
        v5 = v32;
        v4 = v33;
        goto LABEL_5;
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10043A5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unint64_t v9;
  void *v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_9:
        v8 = v7;
        v9 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        v10 = *(void **)&v7[OBJC_IVAR___DOCGoToRecentLocation_location];
        sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        v11 = v10;
        v12 = static NSObject.== infix(_:_:)(v11, a2);

        if ((v12 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v5 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
          v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
          specialized ContiguousArray._endMutation()(v6);
        }
        ++v4;
        if (v9 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v15 = a1;
      else
        v15 = a1 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v7 = (char *)*(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

id sub_10043A734(_OWORD *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  dispatch_semaphore_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  objc_super v17;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection] = 0;
  v3 = OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_semaphore;
  v4 = v1;
  v5 = dispatch_semaphore_create(0);
  *(_QWORD *)&v1[v3] = v5;
  v6 = &v4[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v4[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  UUID.init()(v5);
  v8 = &v4[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_sortingDescriptor];
  *v8 = DOCItemSortDescriptor.init(type:isReversed:)(2, 0);
  *((_QWORD *)v8 + 1) = v9;
  *((_QWORD *)v8 + 2) = v10;
  v8[24] = v11 & 1;
  v12 = &v4[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_itemCollectionConfiguration];
  v14 = a1[1];
  v13 = a1[2];
  v15 = a1[4];
  *((_OWORD *)v12 + 3) = a1[3];
  *((_OWORD *)v12 + 4) = v15;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = v13;
  *(_OWORD *)v12 = *a1;
  sub_100028DA4((uint64_t)a1);

  v17.receiver = v4;
  v17.super_class = (Class)type metadata accessor for DOCItemCollectionCandidateSource(0);
  return objc_msgSendSuper2(&v17, "init");
}

_QWORD *sub_10043A830()
{
  id *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  _BYTE v35[24];

  v0 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v0, v35, 0, 0);
  if (!*v0)
  {
    v2 = 0;
    v33 = 0u;
    v34 = 0u;
LABEL_11:
    sub_10000CB4C((uint64_t)&v33, &qword_100642730);
    goto LABEL_12;
  }
  v1 = DOCUserDefaultsKeyMostRecentGoToLocations;
  v2 = *v0;
  v3 = objc_msgSend(v2, "objectForKey:", v1);
  if (v3)
  {
    v4 = v3;
    _bridgeAnyObjectToAny(_:)(v32, v3);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v32, 0, sizeof(v32));
  }
  sub_100070EDC((uint64_t)v32, (uint64_t)&v33, &qword_100642730);
  if (!*((_QWORD *)&v34 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast(v32, &v33, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_12:

    return _swiftEmptyArrayStorage;
  }
  v5 = v32[0];
  sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
  v6 = sub_10006922C((uint64_t *)&unk_100647C70);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v7 + 32) = sub_10004F2F0(0, &qword_100655650, NSArray_ptr);
  *(_QWORD *)(v7 + 40) = sub_10004F2F0(0, (unint64_t *)&unk_100655658, NSMutableArray_ptr);
  v8 = type metadata accessor for DOCGoToRecentLocation();
  *(_QWORD *)(v7 + 48) = v8;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(&v33, v7, v5, *((_QWORD *)&v5 + 1));
  swift_bridgeObjectRelease(v7);
  if (*((_QWORD *)&v34 + 1))
  {
    v11 = sub_10006922C(&qword_100644590);
    if ((swift_dynamicCast(v32, &v33, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
    {
      v12 = *(_QWORD *)&v32[0];
      v13 = *(_QWORD *)&v32[0] >> 62;
      if (*(_QWORD *)&v32[0] >> 62)
      {
        v31 = *(_QWORD *)&v32[0] >> 62;
        if (*(uint64_t *)&v32[0] < 0)
          v17 = *(_QWORD *)&v32[0];
        else
          v17 = *(_QWORD *)&v32[0] & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)&v32[0]);
        v18 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRetain(v12);
        v19 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v12);
        if ((v19 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        if (v18 >= 4)
          v29 = 4;
        else
          v29 = v18;
        if (v18 >= 0)
          v14 = v29;
        else
          v14 = 4;
        swift_bridgeObjectRetain(v12);
        v30 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v12);
        if (v30 < v14)
          __break(1u);
        v13 = v31;
        if ((v12 & 0xC000000000000001) == 0)
        {
LABEL_25:
          if (v13)
          {
            if (v12 < 0)
              v20 = v12;
            else
              v20 = v12 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v12);
            v17 = _CocoaArrayWrapper.subscript.getter(0, v14, v20);
            v18 = v21;
            v8 = v22;
            v19 = v23;
            swift_bridgeObjectRelease_n(v12, 2);
          }
          else
          {
            v8 = 0;
            v17 = v12 & 0xFFFFFFFFFFFFFF8;
            v18 = (v12 & 0xFFFFFFFFFFFFFF8) + 32;
            v19 = (2 * v14) | 1;
          }
          if ((v19 & 1) == 0)
            goto LABEL_33;
          v24 = type metadata accessor for __ContiguousArrayStorageBase(0);
          v25 = swift_unknownObjectRetain_n(v17, 2);
          v26 = (_QWORD *)swift_dynamicCastClass(v25, v24);
          if (!v26)
          {
            swift_unknownObjectRelease(v17);
            v26 = _swiftEmptyArrayStorage;
          }
          v27 = v26[2];
          swift_release(v26);
          if (!__OFSUB__(v19 >> 1, v8))
          {
            v28 = v17;
            if (v27 == (v19 >> 1) - v8)
            {
              v9 = (_QWORD *)swift_dynamicCastClass(v17, v24);

              swift_unknownObjectRelease(v17);
              if (v9)
                goto LABEL_39;
              swift_unknownObjectRelease(v17);
              goto LABEL_10;
            }
LABEL_47:
            swift_unknownObjectRelease(v28);
LABEL_33:
            v9 = sub_10028FCA0(v17, v18, v8, v19);

            swift_unknownObjectRelease(v17);
LABEL_39:
            sub_1000D4C00(v5, *((unint64_t *)&v5 + 1));
            return v9;
          }
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
      }
      else
      {
        if (*(uint64_t *)((*(_QWORD *)&v32[0] & 0xFFFFFFFFFFFFF8) + 0x10) >= 4)
          v14 = 4;
        else
          v14 = *(_QWORD *)((*(_QWORD *)&v32[0] & 0xFFFFFFFFFFFFF8) + 0x10);
        if ((*(_QWORD *)&v32[0] & 0xC000000000000001) == 0)
          goto LABEL_25;
      }
      if (v14)
      {
        v15 = 0;
        do
        {
          v16 = v15 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v15);
          v15 = v16;
        }
        while (v14 != v16);
      }
      goto LABEL_25;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)&v33, &qword_100642730);
  }

LABEL_10:
  sub_1000D4C00(v5, *((unint64_t *)&v5 + 1));
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10043AC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10043AD14(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_1004387F4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(char **)(v3 + 24), *(void (**)(uint64_t, _QWORD *, __n128))(v3 + 32), *(_QWORD *)(v3 + 40), v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10043AD94()
{
  uint64_t v0;

  sub_100068588((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 65, 7);
}

uint64_t sub_10043ADC0(uint64_t a1)
{
  swift_unknownObjectUnownedDestroy();
  return a1;
}

uint64_t sub_10043ADE4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10043AE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100437C30(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void destroy for DOCLocationGoToCandidate(uint64_t a1)
{
  sub_100068588((_QWORD *)a1);

}

uint64_t initializeWithCopy for DOCLocationGoToCandidate(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  id v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCLocationGoToCandidate(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  sub_10025C2AC((_QWORD *)a1, (_QWORD *)a2);
  v4 = *(void **)(a1 + 40);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for DOCLocationGoToCandidate(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;

  sub_100068588((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a1 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCLocationGoToCandidate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCLocationGoToCandidate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCLocationGoToCandidate()
{
  return &type metadata for DOCLocationGoToCandidate;
}

ValueMetadata *type metadata accessor for DOCFileProviderSourceGoToCandidate()
{
  return &type metadata for DOCFileProviderSourceGoToCandidate;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCNodeGoToCandidate(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for DOCNodeGoToCandidate(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t *assignWithTake for DOCNodeGoToCandidate(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for DOCNodeGoToCandidate()
{
  return &type metadata for DOCNodeGoToCandidate;
}

uint64_t sub_10043B10C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for DOCInterfaceSystemAppearance_xrOS()
{
  return objc_opt_self(_TtC5Files33DOCInterfaceSystemAppearance_xrOS);
}

uint64_t sub_10043B158(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100655BB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_10000CB4C(a1, (uint64_t *)&unk_100655BB0);
    sub_100443A10(a2, (uint64_t)v8);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100655BB0);
  }
  else
  {
    sub_1001D0788(a1, (uint64_t)v11, type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_1003557AC((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v16);
    v17 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

void sub_10043B2D8(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v7 = a3 & 1;
  v8 = sub_10006922C((uint64_t *)&unk_100646BD0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RestorableSettings(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10000CB4C(a1, (uint64_t *)&unk_100646BD0);
    sub_100443B4C(a2, v7, (uint64_t)v10);

    sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100646BD0);
  }
  else
  {
    sub_1001D0788(a1, (uint64_t)v13, type metadata accessor for RestorableSettings);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_10035592C((uint64_t)v13, a2, v7, isUniquelyReferenced_nonNull_native);
    v16 = *v4;
    *v4 = v18;
    swift_bridgeObjectRelease(v16);

  }
}

uint64_t sub_10043B434(uint64_t a1, __int128 *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100646D20);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a2;
  v20 = a2[1];
  v21 = v12;
  v13 = *((_QWORD *)a2 + 4);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10000CB4C(a1, (uint64_t *)&unk_100646D20);
    sub_100443EA8((uint64_t *)a2, (uint64_t)v8);
    sub_1001D0A08((uint64_t)&v21);
    sub_1001D0A08((uint64_t)&v20);
    swift_release(v13);
    return sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100646D20);
  }
  else
  {
    sub_1001D0788(a1, (uint64_t)v11, type metadata accessor for ScrollPositionInfo.ItemOffset);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_100357158((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v17 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v17);
    sub_1001D0A08((uint64_t)&v21);
    sub_1001D0A08((uint64_t)&v20);
    return swift_release(v13);
  }
}

double sub_10043B5B8(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_10000CB4C(a1, &qword_100643470);
    sub_1004440A0((uint64_t)a2, (uint64_t)v8);

    sub_10000CB4C((uint64_t)v8, &qword_100643470);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1003579B0((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v18;

    *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  return result;
}

void sub_10043B718(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[2];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1000E85C4((__int128 *)a1, (uint64_t)v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v7 = *v2;
    *v2 = 0x8000000000000000;
    sub_10035857C(v8, a2, isUniquelyReferenced_nonNull_native);
    v6 = *v2;
    *v3 = v7;

    swift_bridgeObjectRelease(v6);
  }
  else
  {
    sub_10000CB4C(a1, &qword_100649580);
    sub_1004441C4((uint64_t)a2, (uint64_t)v8);

    sub_10000CB4C((uint64_t)v8, &qword_100649580);
  }
}

_QWORD *sub_10043B7D0(uint64_t a1)
{
  return sub_10043BCF8(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100155028, &qword_100644B68, (uint64_t *)&unk_100655C20);
}

_QWORD *sub_10043B7EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _OWORD v15[2];
  _QWORD *v16;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_100154DE8(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast(v15, v5, v2, (char *)&type metadata for Any + 8, 7);
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_100154DE8(0, v7[2] + 1, 1);
        v7 = v16;
      }
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_100154DE8(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      v7[2] = v12 + 1;
      sub_100079B28(v15, &v7[4 * v12 + 4]);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

_QWORD *sub_10043B960(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v10;
  ValueMetadata *v11;
  _UNKNOWN **v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v13 = _swiftEmptyArrayStorage;
    sub_1001550D8(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (_BYTE *)(a1 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v13 = v2;
      v8 = v2[2];
      v7 = v2[3];
      swift_unknownObjectRetain(v5);
      if (v8 >= v7 >> 1)
      {
        sub_1001550D8(v7 > 1, v8 + 1, 1);
        v2 = v13;
      }
      v11 = &type metadata for DOCNodeGoToCandidate;
      v12 = &off_1005EC310;
      *(_QWORD *)&v10 = v5;
      BYTE8(v10) = v6;
      v2[2] = v8 + 1;
      sub_1000E85C4(&v10, (uint64_t)&v2[5 * v8 + 4]);
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_10043BA60(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  _BYTE *v4;
  void *v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  __int128 v11;
  ValueMetadata *v12;
  _UNKNOWN **v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v14 = _swiftEmptyArrayStorage;
    sub_1001550D8(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (_BYTE *)(a1 + 40);
    do
    {
      v5 = (void *)*((_QWORD *)v4 - 1);
      v6 = *v4;
      v14 = v2;
      v8 = v2[2];
      v7 = v2[3];
      v9 = v5;
      if (v8 >= v7 >> 1)
      {
        sub_1001550D8(v7 > 1, v8 + 1, 1);
        v2 = v14;
      }
      v12 = &type metadata for DOCFileProviderSourceGoToCandidate;
      v13 = &off_1005EC2E0;
      *(_QWORD *)&v11 = v9;
      BYTE8(v11) = v6;
      v2[2] = v8 + 1;
      sub_1000E85C4(&v11, (uint64_t)&v2[5 * v8 + 4]);
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_10043BB60(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(isa);
      v6 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
      v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, isa);
      specialized ContiguousArray._endMutation()(v7);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10043BC04(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[32];
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      sub_100069BD8(v4, (uint64_t)v10);
      v5 = type metadata accessor for DOCFileSystemCollection(0);
      v6 = swift_dynamicCast(&v11, v10, (char *)&type metadata for Any + 8, v5, 7);
      v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 32;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

_QWORD *sub_10043BCDC(uint64_t a1)
{
  return sub_10043BCF8(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100155300, &qword_100644C90, &qword_100644C80);
}

_QWORD *sub_10043BCF8(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *v5;
  __int128 *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _QWORD *v24;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    v24 = _swiftEmptyArrayStorage;
    a2(0, v4, 0);
    v10 = (__int128 *)(a1 + 32);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v20 = *v10;
      v22 = v20;
      v11 = (id)v20;
      v12 = *((id *)&v20 + 1);
      v13 = v11;
      v14 = v12;
      v15 = sub_10006922C(a3);
      v16 = sub_10006922C(a4);
      swift_dynamicCast(&v23, &v22, v15, v16, 7);
      v21 = v23;

      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      {
        a2(0, v5[2] + 1, 1);
        v5 = v24;
      }
      v18 = v5[2];
      v17 = v5[3];
      if (v18 >= v17 >> 1)
      {
        a2(v17 > 1, v18 + 1, 1);
        v5 = v24;
      }
      v5[2] = v18 + 1;
      *(_OWORD *)&v5[2 * v18 + 4] = v21;
      ++v10;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_10043BE64(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_100154DE8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_100154DE8(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_100154DE8(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        v3[2] = v8 + 1;
        sub_100079B28(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_100154DE8(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_100154DE8(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_100079B28(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10043C0C4(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v13 = _swiftEmptyArrayStorage;
    sub_100155358(0, v1, 0);
    v4 = (uint64_t *)(a1 + 32);
    v2 = _swiftEmptyArrayStorage;
    do
    {
      v11 = *v4;
      v5 = sub_10006922C(&qword_100655668);
      v6 = sub_10006922C((uint64_t *)&unk_100655BF0);
      swift_dynamicCast(&v12, &v11, v5, v6, 7);
      v7 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100155358(0, v2[2] + 1, 1);
        v2 = v13;
      }
      v9 = v2[2];
      v8 = v2[3];
      if (v9 >= v8 >> 1)
      {
        sub_100155358(v8 > 1, v9 + 1, 1);
        v2 = v13;
      }
      v2[2] = v9 + 1;
      v2[v9 + 4] = v7;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_10043C1F0(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE v10[80];
  _BYTE v11[80];
  _QWORD *v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v12 = _swiftEmptyArrayStorage;
    sub_1001553E8(0, v1, 0);
    v4 = a1 + 32;
    v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000271D4(v4, (uint64_t)v10, (uint64_t *)&unk_100655BC0);
      v5 = sub_10006922C((uint64_t *)&unk_100655BC0);
      v6 = sub_10006922C(&qword_100655F30);
      swift_dynamicCast(v11, v10, v5, v6, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1001553E8(0, v2[2] + 1, 1);
        v2 = v12;
      }
      v8 = v2[2];
      v7 = v2[3];
      if (v8 >= v7 >> 1)
      {
        sub_1001553E8(v7 > 1, v8 + 1, 1);
        v2 = v12;
      }
      v2[2] = v8 + 1;
      sub_100070EDC((uint64_t)v11, (uint64_t)&v2[10 * v8 + 4], &qword_100655F30);
      v4 += 80;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t DOCBrowserHistoryShiftDirection.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64726177726F66;
  else
    return 0x647261776B636162;
}

unint64_t sub_10043C378()
{
  unint64_t result;

  result = qword_1006557E0;
  if (!qword_1006557E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCBrowserHistoryShiftDirection, &type metadata for DOCBrowserHistoryShiftDirection);
    atomic_store(result, (unint64_t *)&qword_1006557E0);
  }
  return result;
}

uint64_t sub_10043C3BC()
{
  _BYTE *v0;

  if (*v0)
    return 0x64726177726F66;
  else
    return 0x647261776B636162;
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCBrowserHistoryItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  __int128 v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v23);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
    v16 = a3[9];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 3);
    v20 = v10;
    swift_bridgeObjectRetain(v11);
    v21 = v14;
    v22 = v15;
    if (v19)
    {
      *((_QWORD *)v17 + 3) = v19;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      v24 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v24;
    }
  }
  return a1;
}

uint64_t assignWithCopy for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(_QWORD *)(a2 + v11);
  v13 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a3[7];
  v15 = *(void **)(a1 + v14);
  v16 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v16;
  v17 = v16;

  v18 = a3[8];
  v19 = *(void **)(a2 + v18);
  v20 = *(void **)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  v21 = v19;

  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(v24 + 24);
  if (!*(_QWORD *)(a1 + v22 + 24))
  {
    if (v25)
    {
      *(_QWORD *)(v23 + 24) = v25;
      (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v23, v24);
      return a1;
    }
LABEL_7:
    v26 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v26;
    return a1;
  }
  if (!v25)
  {
    sub_100068588((_QWORD *)v23);
    goto LABEL_7;
  }
  sub_10026DED0((_QWORD *)v23, (_QWORD *)v24);
  return a1;
}

uint64_t initializeWithTake for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  return a1;
}

uint64_t assignWithTake for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease(v10);
  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[8];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  v15 = a3[9];
  v16 = (_OWORD *)(a1 + v15);
  if (*(_QWORD *)(a1 + v15 + 24))
    sub_100068588((_QWORD *)(a1 + v15));
  v17 = *(_OWORD *)(a2 + v15 + 16);
  *v16 = *(_OWORD *)(a2 + v15);
  v16[1] = v17;
  return a1;
}

uint64_t sub_10043C75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10043C7D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryShiftDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10043C89C + 4 * byte_1004E8B45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10043C8D0 + 4 * asc_1004E8B40[v4]))();
}

uint64_t sub_10043C8D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043C8D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10043C8E0);
  return result;
}

uint64_t sub_10043C8EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10043C8F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10043C8F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043C900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserHistoryShiftDirection()
{
  return &type metadata for DOCBrowserHistoryShiftDirection;
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCBrowserHistoryShiftAmount(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  __int128 v27;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_10006922C(&qword_10064EBF0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      v12 = v11[5];
      v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      v14 = v11[6];
      v15 = *(uint64_t *)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = v15;
      v16 = v11[7];
      v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      v18 = v11[8];
      v19 = *(void **)((char *)a2 + v18);
      *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
      v20 = v11[9];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = *((_QWORD *)v22 + 3);
      v24 = v13;
      swift_bridgeObjectRetain(v15);
      v25 = v17;
      v26 = v19;
      if (v23)
      {
        *((_QWORD *)v21 + 3) = v23;
        (**(void (***)(char *, char *, uint64_t))(v23 - 8))(v21, v22, v23);
      }
      else
      {
        v27 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v27;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

_QWORD *destroy for DOCBrowserHistoryShiftAmount(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  int *v5;

  v2 = sub_10006922C(&qword_10064EBF0);
  result = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[6]));
    result = (_QWORD *)(a1 + v5[9]);
    if (result[3])
      return (_QWORD *)sub_100068588(result);
  }
  return result;
}

char *initializeWithCopy for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  __int128 v25;

  v6 = sub_10006922C(&qword_10064EBF0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    v10 = v9[5];
    v11 = *(void **)&a2[v10];
    *(_QWORD *)&a1[v10] = v11;
    v12 = v9[6];
    v13 = *(_QWORD *)&a2[v12];
    *(_QWORD *)&a1[v12] = v13;
    v14 = v9[7];
    v15 = *(void **)&a2[v14];
    *(_QWORD *)&a1[v14] = v15;
    v16 = v9[8];
    v17 = *(void **)&a2[v16];
    *(_QWORD *)&a1[v16] = v17;
    v18 = v9[9];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = *((_QWORD *)v20 + 3);
    v22 = v11;
    swift_bridgeObjectRetain(v13);
    v23 = v15;
    v24 = v17;
    if (v21)
    {
      *((_QWORD *)v19 + 3) = v21;
      (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
    }
    else
    {
      v25 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v25;
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v51;

  v6 = sub_10006922C(&qword_10064EBF0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v28 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(a1, a2, v28);
      v29 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      v30 = v29[5];
      v31 = *(void **)&a2[v30];
      v32 = *(void **)&a1[v30];
      *(_QWORD *)&a1[v30] = v31;
      v33 = v31;

      v34 = v29[6];
      v35 = *(_QWORD *)&a2[v34];
      v36 = *(_QWORD *)&a1[v34];
      *(_QWORD *)&a1[v34] = v35;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRelease(v36);
      v37 = v29[7];
      v38 = *(void **)&a1[v37];
      v39 = *(void **)&a2[v37];
      *(_QWORD *)&a1[v37] = v39;
      v40 = v39;

      v41 = v29[8];
      v42 = *(void **)&a2[v41];
      v43 = *(void **)&a1[v41];
      *(_QWORD *)&a1[v41] = v42;
      v44 = v42;

      v45 = v29[9];
      v46 = &a1[v45];
      v47 = &a2[v45];
      v48 = *((_QWORD *)v47 + 3);
      if (*(_QWORD *)&a1[v45 + 24])
      {
        if (v48)
        {
          sub_10026DED0(v46, v47);
          return a1;
        }
        sub_100068588(v46);
      }
      else if (v48)
      {
        *((_QWORD *)v46 + 3) = v48;
        (**(void (***)(char *, char *))(v48 - 8))(v46, v47);
        return a1;
      }
      v51 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v51;
      return a1;
    }
    sub_10000CB4C((uint64_t)a1, &qword_10064EBF0);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v13 = v12[5];
  v14 = *(void **)&a2[v13];
  *(_QWORD *)&a1[v13] = v14;
  v15 = v12[6];
  v16 = *(_QWORD *)&a2[v15];
  *(_QWORD *)&a1[v15] = v16;
  v17 = v12[7];
  v18 = *(void **)&a2[v17];
  *(_QWORD *)&a1[v17] = v18;
  v19 = v12[8];
  v20 = *(void **)&a2[v19];
  *(_QWORD *)&a1[v19] = v20;
  v21 = v12[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_QWORD *)v23 + 3);
  v25 = v14;
  swift_bridgeObjectRetain(v16);
  v26 = v18;
  v27 = v20;
  if (v24)
  {
    *((_QWORD *)v22 + 3) = v24;
    (**(void (***)(char *, char *, uint64_t))(v24 - 8))(v22, v23, v24);
  }
  else
  {
    v49 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v49;
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;

  v6 = sub_10006922C(&qword_10064EBF0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    *(_QWORD *)&a1[v9[5]] = *(_QWORD *)&a2[v9[5]];
    *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    v10 = v9[9];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;

  v6 = sub_10006922C(&qword_10064EBF0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      *(_QWORD *)&a1[v12[5]] = *(_QWORD *)&a2[v12[5]];
      *(_QWORD *)&a1[v12[6]] = *(_QWORD *)&a2[v12[6]];
      *(_QWORD *)&a1[v12[7]] = *(_QWORD *)&a2[v12[7]];
      *(_QWORD *)&a1[v12[8]] = *(_QWORD *)&a2[v12[8]];
      v13 = v12[9];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_10000CB4C((uint64_t)a1, &qword_10064EBF0);
    goto LABEL_6;
  }
  v18 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(a1, a2, v18);
  v19 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v20 = v19[5];
  v21 = *(void **)&a1[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];

  v22 = v19[6];
  v23 = *(_QWORD *)&a1[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  swift_bridgeObjectRelease(v23);
  v24 = v19[7];
  v25 = *(void **)&a1[v24];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];

  v26 = v19[8];
  v27 = *(void **)&a1[v26];
  *(_QWORD *)&a1[v26] = *(_QWORD *)&a2[v26];

  v28 = v19[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (*(_QWORD *)&a1[v28 + 24])
    sub_100068588(v29);
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCBrowserHistoryShiftAmount(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043D1D4);
}

uint64_t sub_10043D1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10006922C(&qword_10064EBF0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryShiftAmount(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043D230);
}

uint64_t sub_10043D230(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_10006922C(&qword_10064EBF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10043D284(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_10064EBF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_10043D2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_10064EBF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DOCBrowserHistoryShiftAmount(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_100655900, (uint64_t)&nominal type descriptor for DOCBrowserHistoryShiftAmount);
}

uint64_t sub_10043D318(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for DOCBrowserHistoryItem(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

id sub_10043D370()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _DOCBrowserHistoryDataSourceBase();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10043D3EC(void *a1)
{
  _BYTE *v1;
  uint64_t (**v3)();
  id v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken] = 0;
  v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] = 0;
  v3 = (uint64_t (**)())&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter];
  *v3 = variable initialization expression of DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourceObserver] = a1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DOCBrowserHistoryDataSource();
  v4 = a1;
  v5 = objc_msgSendSuper2(&v7, "init");
  sub_10002C2E0();

  return v5;
}

uint64_t sub_10043D4A0()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter + 8));
}

id sub_10043D4F0()
{
  void *v0;
  objc_super v2;

  sub_10043D524();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowserHistoryDataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10043D524()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "shared");
  objc_msgSend(v2, "removeChangeObserver:", v1);

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection);
  if (v3)
  {
    v4 = v3;
    sub_1001626AC();

  }
  v5 = OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken);
  if (v6)
  {
    v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourceObserver);
    v8 = v6;
    objc_msgSend(v7, "removeSubscriberForToken:", v8);
    v9 = *(id *)(v1 + v5);
    *(_QWORD *)(v1 + v5) = 0;

  }
}

uint64_t sub_10043D6A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v2 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - v6;
  sub_1000271D4(a1, (uint64_t)&v9 - v6, &qword_10064A600);
  sub_100070EDC((uint64_t)v7, (uint64_t)v4, &qword_10064A600);
  sub_10007C720(a1, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_100070EDC((uint64_t)v4, a1, &qword_10064A600);
  result = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(_QWORD *)(a1 + *(int *)(result + 20)) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + *(int *)(result + 24)) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_10043D788(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v31 = a2;
  v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD, double))(**(_QWORD **)(v2 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state)
                                                                                                  + 160))(sub_10009301C, 0, v15);
  sub_10007C6DC((uint64_t)v17, (uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_10007C720((uint64_t)v17, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  if ((a1 & 1) != 0)
  {
    v20 = *(_QWORD *)&v13[*(int *)(v11 + 24)];
    swift_bridgeObjectRetain(v20);
    sub_10007C720((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  }
  else
  {
    v18 = *(_QWORD *)&v13[*(int *)(v11 + 20)];
    swift_bridgeObjectRetain(v18);
    sub_10007C720((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_10013CBB8(v18);
    v20 = v19;
  }
  sub_10007C6DC(v31, (uint64_t)v10, type metadata accessor for DOCBrowserHistoryShiftAmount);
  v21 = sub_10006922C(&qword_10064EBF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v10, 1, v21) == 1)
  {
    v22 = *(_QWORD *)(v20 + 16);
    swift_bridgeObjectRelease(v20);
    v23 = v22 != 0;
  }
  else
  {
    sub_1001D0788((uint64_t)v10, (uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    v24 = *(_QWORD *)(v20 + 16);
    if (v24)
    {
      v25 = v20 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v26 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain(v20);
      v27 = v24 - 1;
      do
      {
        v28 = v27;
        v23 = static UUID.== infix(_:_:)(v25, v7);
        if ((v23 & 1) != 0)
          break;
        v27 = v28 - 1;
        v25 += v26;
      }
      while (v28);
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v23 = 0;
    }
    sub_10007C720((uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    swift_bridgeObjectRelease(v20);
  }
  return v23 & 1;
}

uint64_t sub_10043DA34(char a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v71)(uint64_t);
  uint64_t v72;
  void (*v73)(_QWORD, _QWORD, _QWORD);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t (*v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t (*v157)(uint64_t);
  unint64_t v158;
  unint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v178)(uint64_t, uint64_t, uint64_t);
  int v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(_QWORD, _QWORD, _QWORD);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;

  v3 = a1 & 1;
  v184 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v184);
  v165 = (uint64_t)&v158 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v175 = (char *)&v158 - v6;
  __chkstk_darwin(v7);
  v180 = (uint64_t)&v158 - v8;
  v183 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v183);
  v164 = (char *)&v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v181 = (char *)&v158 - v11;
  __chkstk_darwin(v12);
  v182 = (char *)&v158 - v13;
  v14 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v14);
  v176 = (uint64_t)&v158 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v16);
  v163 = (uint64_t)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v168 = (uint64_t)&v158 - v19;
  __chkstk_darwin(v20);
  v162 = (uint64_t)&v158 - v21;
  __chkstk_darwin(v22);
  v169 = (uint64_t)&v158 - v23;
  __chkstk_darwin(v24);
  v174 = (uint64_t)&v158 - v25;
  __chkstk_darwin(v26);
  v189 = (uint64_t)&v158 - v27;
  __chkstk_darwin(v28);
  v188 = (uint64_t)&v158 - v29;
  v192 = type metadata accessor for DOCBrowserHistoryItem(0);
  v196 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v161 = (char *)&v158 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v167 = (uint64_t)&v158 - v32;
  __chkstk_darwin(v33);
  v160 = (char *)&v158 - v34;
  __chkstk_darwin(v35);
  v166 = (uint64_t)&v158 - v36;
  __chkstk_darwin(v37);
  v185 = (uint64_t)&v158 - v38;
  __chkstk_darwin(v39);
  v186 = (uint64_t)&v158 - v40;
  __chkstk_darwin(v41);
  v43 = (char *)&v158 - v42;
  __chkstk_darwin(v44);
  v46 = (char *)&v158 - v45;
  __chkstk_darwin(v47);
  v49 = (char *)&v158 - v48;
  __chkstk_darwin(v50);
  v52 = (char *)&v158 - v51;
  __chkstk_darwin(v53);
  v55 = (char *)&v158 - v54;
  __chkstk_darwin(v56);
  v58 = (char *)&v158 - v57;
  __chkstk_darwin(v59);
  v61 = (char *)&v158 - v60;
  v62 = v3;
  v190 = a2;
  v63 = a2;
  v64 = v170;
  result = sub_10043D788(v3, v63);
  if ((result & 1) == 0)
    return result;
  v187 = (void (*)(_QWORD, _QWORD, _QWORD))v58;
  v172 = v61;
  v191 = v55;
  v193 = v49;
  v194 = v52;
  v173 = v46;
  v195 = v43;
  v66 = v64;
  sub_10043EA08(v62);
  v67 = v188;
  sub_10007C6DC(v190, v188, type metadata accessor for DOCBrowserHistoryShiftAmount);
  v68 = sub_10006922C(&qword_10064EBF0);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v70(v67, 1, v68) == 1)
  {
    v71 = type metadata accessor for DOCBrowserHistoryShiftAmount;
    v72 = v67;
    return sub_10007C720(v72, v71);
  }
  v171 = v69;
  v178 = v70;
  v190 = v68;
  v73 = v187;
  sub_1001D0788(v67, (uint64_t)v187, type metadata accessor for DOCBrowserHistoryItem);
  sub_1001D0788((uint64_t)v73, (uint64_t)v172, type metadata accessor for DOCBrowserHistoryItem);
  v188 = *(_QWORD *)(v66 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state);
  v187 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)v188 + 160);
  v159 = (unint64_t)" completion to that job!";
  v158 = 0x8000000100535C00;
  v179 = v62;
  v74 = v183;
  v75 = v184;
  v76 = (uint64_t)v175;
  v77 = v180;
  v78 = (uint64_t)v181;
  v79 = (uint64_t)v182;
  v81 = (uint64_t)v191;
  v80 = v192;
  v187(sub_10009301C, 0, v183);
  while (1)
  {
    sub_10007C6DC(v79, v77, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_10007C720(v79, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    v82 = v176;
    sub_1000271D4(v77, v176, &qword_10064A600);
    sub_10007C720(v77, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v82, 1, v80) == 1)
    {
      sub_10007C720((uint64_t)v172, type metadata accessor for DOCBrowserHistoryItem);
      return sub_10000CB4C(v82, &qword_10064A600);
    }
    v83 = type metadata accessor for DOCBrowserHistoryItem;
    sub_1001D0788(v82, v81, type metadata accessor for DOCBrowserHistoryItem);
    v84 = type metadata accessor for UUID(0);
    v85 = sub_10005A360((unint64_t *)&qword_100655BE0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v86 = (uint64_t)v172;
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v81, v172, v84, v85) & 1) != 0)
    {
      sub_10007C720(v81, type metadata accessor for DOCBrowserHistoryItem);
      v72 = v86;
      v71 = type metadata accessor for DOCBrowserHistoryItem;
      return sub_10007C720(v72, v71);
    }
    v87 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v171 + 56);
    v87(v189, 1, 1, v190);
    v177 = v87;
    if (v179)
    {
      v187(sub_10009301C, 0, v74);
      sub_10007C6DC(v79, v77, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
      sub_10007C720(v79, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
      v88 = *(_QWORD *)(v77 + *(int *)(v75 + 24));
      swift_bridgeObjectRetain(v88);
      sub_10007C720(v77, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
      goto LABEL_23;
    }
    v187(sub_10009301C, 0, v74);
    sub_10007C6DC(v78, v76, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_10007C720(v78, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    v88 = *(_QWORD *)(v76 + *(int *)(v75 + 20));
    swift_bridgeObjectRetain(v88);
    result = sub_10007C720(v76, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    v89 = *(_QWORD *)(v88 + 16);
    if (v89 >= 2)
      break;
LABEL_23:
    v94 = (uint64_t)v195;
LABEL_24:
    v105 = v189;
    v106 = v174;
    sub_10007C6DC(v189, v174, type metadata accessor for DOCBrowserHistoryShiftAmount);
    if (v178(v106, 1, v190) == 1)
    {
      v107 = *(_QWORD *)(v88 + 16);
      swift_bridgeObjectRelease(v88);
      sub_10007C720(v105, type metadata accessor for DOCBrowserHistoryShiftAmount);
      v79 = (uint64_t)v182;
      v74 = v183;
      v78 = (uint64_t)v181;
      v81 = (uint64_t)v191;
      v80 = v192;
      if (!v107)
        goto LABEL_6;
      if (!v179)
      {
LABEL_27:
        v177(v169, 1, 1, v190);
        v108 = v164;
        v187(sub_10009301C, 0, v74);
        v109 = (uint64_t)v108;
        v110 = (uint64_t)v108;
        v111 = v165;
        sub_10007C6DC(v110, v165, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
        sub_10007C720(v109, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
        v112 = *(_QWORD *)(v111 + *(int *)(v184 + 20));
        swift_bridgeObjectRetain(v112);
        result = sub_10007C720(v111, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
        v113 = *(_QWORD *)(v112 + 16);
        if (v113 >= 2)
        {
          v129 = 0;
          v130 = v113 >> 1;
          v131 = v113 - 1;
          v132 = v186;
          do
          {
            if (v129 != v131)
            {
              v133 = *(_QWORD *)(v112 + 16);
              if (v129 >= v133)
                goto LABEL_75;
              v134 = (*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
              v135 = *(_QWORD *)(v196 + 72);
              v136 = v135 * v129;
              result = sub_10007C6DC(v112 + v134 + v135 * v129, v132, type metadata accessor for DOCBrowserHistoryItem);
              if (v131 >= v133)
                goto LABEL_76;
              v137 = v135 * v131;
              v138 = v112 + v134 + v135 * v131;
              v139 = v185;
              sub_10007C6DC(v138, v185, type metadata accessor for DOCBrowserHistoryItem);
              result = swift_isUniquelyReferenced_nonNull_native(v112);
              if ((result & 1) == 0)
              {
                result = sub_100452E1C(v112);
                v112 = result;
              }
              if (v129 >= *(_QWORD *)(v112 + 16))
                goto LABEL_77;
              result = sub_100144EF0(v139, v112 + v134 + v136);
              if (v131 >= *(_QWORD *)(v112 + 16))
                goto LABEL_78;
              v140 = v112 + v134 + v137;
              v141 = v186;
              result = sub_100144EF0(v186, v140);
              v132 = v141;
              v81 = (uint64_t)v191;
              v80 = v192;
            }
            ++v129;
            --v131;
          }
          while (v130 != v129);
        }
        v114 = v169;
        v115 = v162;
        sub_10007C6DC(v169, v162, type metadata accessor for DOCBrowserHistoryShiftAmount);
        if (v178(v115, 1, v190) != 1)
        {
          sub_1001D0788(v115, v166, type metadata accessor for DOCBrowserHistoryItem);
          v150 = *(_QWORD *)(v112 + 16);
          v79 = (uint64_t)v182;
          v74 = v183;
          if (!v150)
          {
LABEL_61:
            sub_10007C720(v166, type metadata accessor for DOCBrowserHistoryItem);
            swift_bridgeObjectRelease(v112);
            sub_10007C720(v114, type metadata accessor for DOCBrowserHistoryShiftAmount);
            v78 = (uint64_t)v181;
            goto LABEL_6;
          }
          v151 = v196;
          v152 = v112 + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80));
          swift_bridgeObjectRetain(v112);
          v153 = *(_QWORD *)(v151 + 72);
          v154 = (uint64_t)v160;
          v155 = v166;
          while (1)
          {
            sub_10007C6DC(v152, v154, type metadata accessor for DOCBrowserHistoryItem);
            v156 = static UUID.== infix(_:_:)(v154, v155);
            sub_10007C720(v154, type metadata accessor for DOCBrowserHistoryItem);
            if ((v156 & 1) != 0)
              break;
            v152 += v153;
            if (!--v150)
            {
              swift_bridgeObjectRelease(v112);
              v79 = (uint64_t)v182;
              v74 = v183;
              v81 = (uint64_t)v191;
              v80 = v192;
              goto LABEL_61;
            }
          }
          swift_bridgeObjectRelease(v112);
          sub_10007C720(v155, type metadata accessor for DOCBrowserHistoryItem);
          swift_bridgeObjectRelease(v112);
          sub_10007C720(v114, type metadata accessor for DOCBrowserHistoryShiftAmount);
          v79 = (uint64_t)v182;
          v74 = v183;
          v78 = (uint64_t)v181;
          v81 = (uint64_t)v191;
          v80 = v192;
LABEL_65:
          sub_1000542B0(0xD000000000000018, v158);
          v157 = sub_100440874;
          goto LABEL_66;
        }
        v116 = *(_QWORD *)(v112 + 16);
        swift_bridgeObjectRelease(v112);
        sub_10007C720(v114, type metadata accessor for DOCBrowserHistoryShiftAmount);
        v79 = (uint64_t)v182;
        v74 = v183;
        v78 = (uint64_t)v181;
        if (v116)
          goto LABEL_65;
        goto LABEL_6;
      }
    }
    else
    {
      sub_1001D0788(v106, (uint64_t)v173, v83);
      v117 = *(_QWORD *)(v88 + 16);
      if (!v117)
      {
LABEL_5:
        sub_10007C720((uint64_t)v173, v83);
        swift_bridgeObjectRelease(v88);
        sub_10007C720(v105, type metadata accessor for DOCBrowserHistoryShiftAmount);
        v79 = (uint64_t)v182;
        v74 = v183;
        v78 = (uint64_t)v181;
        v81 = (uint64_t)v191;
        v80 = v192;
        goto LABEL_6;
      }
      v118 = v196;
      v119 = v88 + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80));
      swift_bridgeObjectRetain(v88);
      v120 = *(_QWORD *)(v118 + 72);
      v121 = (uint64_t)v173;
      while (1)
      {
        sub_10007C6DC(v119, v94, v83);
        v122 = static UUID.== infix(_:_:)(v94, v121);
        sub_10007C720(v94, v83);
        if ((v122 & 1) != 0)
          break;
        v119 += v120;
        if (!--v117)
        {
          swift_bridgeObjectRelease(v88);
          v105 = v189;
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease(v88);
      sub_10007C720(v121, v83);
      swift_bridgeObjectRelease(v88);
      sub_10007C720(v189, type metadata accessor for DOCBrowserHistoryShiftAmount);
      v79 = (uint64_t)v182;
      v74 = v183;
      v78 = (uint64_t)v181;
      v81 = (uint64_t)v191;
      v80 = v192;
      if (!v179)
        goto LABEL_27;
    }
    v123 = v168;
    v124 = v190;
    v177(v168, 1, 1, v190);
    v187(sub_10009301C, 0, v74);
    v125 = v180;
    sub_10007C6DC(v79, v180, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_10007C720(v79, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    v126 = *(_QWORD *)(v125 + *(int *)(v184 + 24));
    swift_bridgeObjectRetain(v126);
    sub_10007C720(v125, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    v127 = v163;
    sub_10007C6DC(v123, v163, type metadata accessor for DOCBrowserHistoryShiftAmount);
    if (v178(v127, 1, v124) != 1)
    {
      sub_1001D0788(v127, v167, type metadata accessor for DOCBrowserHistoryItem);
      v142 = *(_QWORD *)(v126 + 16);
      if (!v142)
      {
LABEL_55:
        sub_10007C720(v167, type metadata accessor for DOCBrowserHistoryItem);
        swift_bridgeObjectRelease(v126);
        sub_10007C720(v168, type metadata accessor for DOCBrowserHistoryShiftAmount);
        goto LABEL_6;
      }
      v143 = v196;
      v144 = v126 + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80));
      swift_bridgeObjectRetain(v126);
      v145 = *(_QWORD *)(v143 + 72);
      v146 = v168;
      v147 = (uint64_t)v161;
      v148 = v167;
      while (1)
      {
        sub_10007C6DC(v144, v147, type metadata accessor for DOCBrowserHistoryItem);
        v149 = static UUID.== infix(_:_:)(v147, v148);
        sub_10007C720(v147, type metadata accessor for DOCBrowserHistoryItem);
        if ((v149 & 1) != 0)
          break;
        v144 += v145;
        if (!--v142)
        {
          swift_bridgeObjectRelease(v126);
          v79 = (uint64_t)v182;
          v74 = v183;
          v78 = (uint64_t)v181;
          v81 = (uint64_t)v191;
          v80 = v192;
          goto LABEL_55;
        }
      }
      swift_bridgeObjectRelease(v126);
      sub_10007C720(v148, type metadata accessor for DOCBrowserHistoryItem);
      swift_bridgeObjectRelease(v126);
      sub_10007C720(v146, type metadata accessor for DOCBrowserHistoryShiftAmount);
      v79 = (uint64_t)v182;
      v74 = v183;
      v78 = (uint64_t)v181;
      v81 = (uint64_t)v191;
      v80 = v192;
LABEL_63:
      sub_1000542B0(0xD000000000000018, v159 | 0x8000000000000000);
      v157 = sub_100440C88;
LABEL_66:
      sub_10001A27C(0, (uint64_t)v157, 0);
      goto LABEL_6;
    }
    v128 = *(_QWORD *)(v126 + 16);
    swift_bridgeObjectRelease(v126);
    sub_10007C720(v123, type metadata accessor for DOCBrowserHistoryShiftAmount);
    if (v128)
      goto LABEL_63;
LABEL_6:
    sub_10007C720(v81, type metadata accessor for DOCBrowserHistoryItem);
    v75 = v184;
    v76 = (uint64_t)v175;
    v77 = v180;
    v187(sub_10009301C, 0, v74);
  }
  v90 = 0;
  v91 = v89 >> 1;
  v92 = v89 - 1;
  v93 = (uint64_t)v194;
  v94 = (uint64_t)v195;
  while (1)
  {
    if (v90 == v92)
      goto LABEL_13;
    v97 = *(_QWORD *)(v88 + 16);
    if (v90 >= v97)
      break;
    v98 = (*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
    v99 = v83;
    v100 = *(_QWORD *)(v196 + 72);
    v101 = v100 * v90;
    result = sub_10007C6DC(v88 + v98 + v100 * v90, v93, v99);
    if (v92 >= v97)
      goto LABEL_72;
    v102 = v100 * v92;
    v103 = (uint64_t)v193;
    sub_10007C6DC(v88 + v98 + v100 * v92, (uint64_t)v193, v99);
    result = swift_isUniquelyReferenced_nonNull_native(v88);
    v83 = v99;
    if ((result & 1) == 0)
    {
      result = sub_100452E1C(v88);
      v88 = result;
    }
    if (v90 >= *(_QWORD *)(v88 + 16))
      goto LABEL_73;
    v104 = v88 + v98;
    result = sub_100144EF0(v103, v104 + v101);
    if (v92 >= *(_QWORD *)(v88 + 16))
      goto LABEL_74;
    v95 = v104 + v102;
    v96 = (uint64_t)v194;
    result = sub_100144EF0((uint64_t)v194, v95);
    v93 = v96;
    v94 = (uint64_t)v195;
LABEL_13:
    ++v90;
    --v92;
    if (v91 == v90)
      goto LABEL_24;
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_10043EA08(char a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  char v7;
  uint64_t result;
  int v9;
  uint64_t (*v10)(uint64_t);
  char v11;
  uint64_t v12;

  v1 = a1 & 1;
  v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_10064EBF0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v7 = sub_10043D788(v1, (uint64_t)v4);
  result = sub_10007C720((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
  if ((v7 & 1) != 0)
  {
    v6(v4, 1, 1, v5);
    if (v1)
    {
      v11 = sub_10043D788(1, (uint64_t)v4);
      result = sub_10007C720((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if ((v11 & 1) == 0)
        return result;
      v10 = sub_100440C88;
    }
    else
    {
      v9 = sub_10043D788(0, (uint64_t)v4);
      result = sub_10007C720((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if ((v9 & 1) == 0)
        return result;
      v10 = sub_100440874;
    }
    sub_1000542B0(0xD000000000000018, 0x8000000100535C00);
    return sub_10001A27C(0, (uint64_t)v10, 0);
  }
  return result;
}

uint64_t sub_10043EB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  unsigned __int8 v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  Swift::String v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE v50[24];
  _QWORD v51[4];

  v46 = a3;
  v5 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v9 = *((_QWORD *)v8 - 1);
  __chkstk_darwin(v8);
  v45 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v44 = (uint64_t)&v44 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - v14;
  v16 = swift_projectBox(a2);
  v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v18 = *(int *)(v17 + 24);
  v19 = *(_QWORD *)(a1 + v18);
  v51[3] = &type metadata for DOCBrowserHistoryItem.SearchContext;
  v51[0] = v19;
  swift_beginAccess(v16, v50, 1, 0);
  v20 = v16 + v8[9];
  swift_bridgeObjectRetain(v19);
  sub_10008BB40((uint64_t)v51, v20, &qword_100642730);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v18));
  *(_QWORD *)(a1 + v18) = _swiftEmptyArrayStorage;
  sub_1000271D4(a1, (uint64_t)v7, &qword_10064A600);
  v47 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10000CB4C((uint64_t)v7, &qword_10064A600);
  }
  else
  {
    sub_1001D0788((uint64_t)v7, (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
    v21 = v44;
    sub_10007C6DC((uint64_t)v15, v44, type metadata accessor for DOCBrowserHistoryItem);
    v22 = *(int *)(v17 + 20);
    v23 = *(_QWORD *)(a1 + v22);
    if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
      v23 = sub_100081B5C(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
    v25 = *(_QWORD *)(v23 + 16);
    v24 = *(_QWORD *)(v23 + 24);
    if (v25 >= v24 >> 1)
      v23 = sub_100081B5C(v24 > 1, v25 + 1, 1, v23);
    *(_QWORD *)(v23 + 16) = v25 + 1;
    sub_1001D0788(v21, v23+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v25, type metadata accessor for DOCBrowserHistoryItem);
    *(_QWORD *)(a1 + v22) = v23;
    sub_10007C720((uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  }
  v48 = 0x203A676E69646461;
  v49 = 0xE800000000000000;
  swift_beginAccess(v16, v51, 0, 0);
  v26 = v45;
  sub_10007C6DC(v16, v45, type metadata accessor for DOCBrowserHistoryItem);
  v27 = v8;
  v28 = *(void **)(v26 + v8[8]);
  v29 = *(id *)(v26 + v8[5]);
  v30 = v28;
  sub_10007C720(v26, type metadata accessor for DOCBrowserHistoryItem);
  v31 = sub_1000868F0();
  if (v32 != 255)
  {
    v33 = v31;
    if (v32 == 2)
    {
      v34 = objc_msgSend(v30, "displayName");
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      sub_100086998(v33, 2u);
      goto LABEL_15;
    }
    sub_100086998(v31, v32);
  }
  v38 = objc_msgSend(v29, "displayName");
  if (v38)
  {
    v39 = v38;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v37 = v40;

  }
  else
  {

    v35 = 0;
    v37 = (void *)0xE000000000000000;
  }
LABEL_15:
  v41._countAndFlagsBits = v35;
  v41._object = v37;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(v37);
  v42 = v49;
  sub_1000542B0(v48, v49);
  swift_bridgeObjectRelease(v42);
  sub_10000CB4C(a1, &qword_10064A600);
  swift_beginAccess(v16, &v48, 0, 0);
  sub_10007C6DC(v16, a1, type metadata accessor for DOCBrowserHistoryItem);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v47 + 56))(a1, 0, 1, v27);
}

uint64_t sub_10043EFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;

  v1 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v1);
  v22 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DOCBrowserHistoryItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v0;
  (*(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD, uint64_t, double))(**(_QWORD **)(v0 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state) + 160))(sub_10009301C, 0, v6, v14);
  sub_10007C6DC((uint64_t)v8, (uint64_t)v5, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_10007C720((uint64_t)v8, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  sub_1000271D4((uint64_t)v5, (uint64_t)v11, &qword_10064A600);
  sub_10007C720((uint64_t)v5, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_10000CB4C((uint64_t)v11, &qword_10064A600);
  sub_1001D0788((uint64_t)v11, (uint64_t)v16, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000271D4((uint64_t)&v16[*(int *)(v12 + 36)], (uint64_t)v25, &qword_100642730);
  if (v26)
  {
    if ((swift_dynamicCast(&v24, v25, (char *)&type metadata for Any + 8, &type metadata for DOCBrowserHistoryItem.SearchContext, 6) & 1) != 0)
    {
      swift_bridgeObjectRelease(v24);
      v18 = sub_10006922C(&qword_10064EBF0);
      v19 = (uint64_t)v22;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v22, 1, 1, v18);
      v20 = sub_10043D788(0, v19);
      sub_10007C720(v19, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if ((v20 & 1) != 0)
      {
        sub_1000542B0(0xD000000000000018, 0x8000000100535C00);
        sub_10001A27C(0, (uint64_t)sub_100440874, 0);
      }
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v25, &qword_100642730);
  }
  return sub_10007C720((uint64_t)v16, type metadata accessor for DOCBrowserHistoryItem);
}

BOOL sub_10043F2C4(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  dispatch_semaphore_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for DispatchTime(0);
  v25 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - v6;
  v8 = type metadata accessor for DispatchQoS.QoSClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = dispatch_semaphore_create(0);
  v16 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.userInitiated(_:), v8);
  v17 = (void *)static OS_dispatch_queue.global(qos:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = swift_allocObject(&unk_1005ECB40, 24, 7);
  *(_QWORD *)(v18 + 16) = v15;
  v19 = v15;
  sub_10004693C((uint64_t)v14, 0, v17, (id *)sub_100447A7C, v18);

  swift_release(v18);
  v20 = sub_10000CB4C((uint64_t)v14, &qword_10064A600);
  static DispatchTime.now()(v20);
  + infix(_:_:)(v4, a1);
  v21 = *(void (**)(char *, uint64_t))(v25 + 8);
  v21(v4, v2);
  v22 = OS_dispatch_semaphore.wait(timeout:)(v7) & 1;
  v21(v7, v2);
  LOBYTE(v2) = static DispatchTimeoutResult.== infix(_:_:)(v22, 1);

  return (v2 & 1) == 0;
}

BOOL sub_10043F524(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  dispatch_semaphore_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for DispatchTime(0);
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - v8;
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = dispatch_semaphore_create(0);
  sub_10007C6DC(a1, (uint64_t)v16, type metadata accessor for DOCBrowserHistoryItem);
  v18 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 0, 1, v18);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v10);
  v19 = (void *)static OS_dispatch_queue.global(qos:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v20 = swift_allocObject(&unk_1005ECB18, 24, 7);
  *(_QWORD *)(v20 + 16) = v17;
  v21 = v17;
  sub_10004693C((uint64_t)v16, 0, v19, (id *)sub_1003471B8, v20);

  swift_release(v20);
  v22 = sub_10000CB4C((uint64_t)v16, &qword_10064A600);
  static DispatchTime.now()(v22);
  + infix(_:_:)(v6, a2);
  v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v6, v4);
  v24 = OS_dispatch_semaphore.wait(timeout:)(v9) & 1;
  v23(v9, v4);
  LOBYTE(v4) = static DispatchTimeoutResult.== infix(_:_:)(v24, 1);

  return (v4 & 1) == 0;
}

void sub_10043F79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  double v30;
  void *v31;
  id v32;
  id v33;
  void **aBlock;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;

  v7 = type metadata accessor for DOCBrowserHistoryItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(a1 + *(int *)(v12 + 20));
  v14 = objc_msgSend(v13, "fileProviderItem", v10);
  if (!v14)
    goto LABEL_4;
  v15 = v14;
  if ((objc_msgSend(v13, "isRoot") & 1) != 0)
  {

LABEL_4:
    sub_10007C6DC(a1, (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
    v16 = *(unsigned __int8 *)(v8 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject(&unk_1005EC988, v17 + v9, v16 | 7);
    *(_QWORD *)(v18 + 16) = a2;
    *(_QWORD *)(v18 + 24) = a3;
    sub_1001D0788((uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for DOCBrowserHistoryItem);
    v38 = sub_1004471CC;
    v39 = v18;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_10004A82C;
    v37 = &unk_1005EC9A0;
    v19 = _Block_copy(&aBlock);
    v20 = v39;
    swift_retain();
    swift_release(v20);
    DOCRunInMainThread(v19);
    _Block_release(v19);
    return;
  }
  v33 = *(id *)&v3[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_itemManager];
  v32 = objc_msgSend(v15, "itemID");
  sub_10007C6DC(a1, (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = (v9 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1005EC9D8, v24 + 16, v21 | 7);
  sub_1001D0788((uint64_t)v11, v25 + v22, type metadata accessor for DOCBrowserHistoryItem);
  *(_QWORD *)(v25 + v23) = v3;
  v26 = (_QWORD *)(v25 + v24);
  *v26 = a2;
  v26[1] = a3;
  v38 = sub_1004472F4;
  v39 = v25;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10013103C;
  v37 = &unk_1005EC9F0;
  v27 = _Block_copy(&aBlock);
  v28 = v39;
  v29 = v3;
  swift_retain();
  *(_QWORD *)&v30 = swift_release(v28).n128_u64[0];
  v31 = v32;
  objc_msgSend(v33, "fetchParentsForItemID:recursively:completionHandler:", v32, 1, v27, v30);
  _Block_release(v27);

}

double sub_10043FA38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD aBlock[5];
  uint64_t v50;

  v43 = a5;
  v44 = a6;
  v41 = a1;
  v42 = a4;
  v39 = a3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DOCBrowserHistoryItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS.QoSClass(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchQoS.QoSClass.userInitiated(_:), v16);
  v40 = static OS_dispatch_queue.global(qos:)(v19);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_10007C6DC(v39, (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  v20 = *(unsigned __int8 *)(v13 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1005ECA28, v24 + 16, v20 | 7);
  sub_1001D0788((uint64_t)v15, v25 + v21, type metadata accessor for DOCBrowserHistoryItem);
  v26 = v41;
  *(_QWORD *)(v25 + v22) = v41;
  v28 = v42;
  v27 = v43;
  *(_QWORD *)(v25 + v23) = v42;
  v29 = (_QWORD *)(v25 + v24);
  v30 = v44;
  *v29 = v27;
  v29[1] = v30;
  aBlock[4] = sub_10044745C;
  v50 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005ECA40;
  v31 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(v26);
  v32 = v28;
  swift_retain();
  static DispatchQoS.unspecified.getter(v33);
  v48 = _swiftEmptyArrayStorage;
  v34 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v35 = sub_10006922C((uint64_t *)&unk_100647540);
  v36 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v35, v36, v6, v34);
  v37 = (void *)v40;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v46);
  *(_QWORD *)&result = swift_release(v50).n128_u64[0];
  return result;
}

double sub_10043FD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;
  char v32[24];

  v28 = a4;
  v29 = a3;
  v8 = type metadata accessor for DOCBrowserHistoryItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocBox(v12);
  v15 = v14;
  sub_10007C6DC(a1, v14, type metadata accessor for DOCBrowserHistoryItem);
  if (a2)
  {
    sub_10007C6DC(a1, (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
    v16 = *(unsigned __int8 *)(v9 + 80);
    v17 = (v16 + 16) & ~v16;
    v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = a5;
    v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject(&unk_1005ECAC8, v20 + 8, v16 | 7);
    sub_1001D0788((uint64_t)v11, v21 + v17, type metadata accessor for DOCBrowserHistoryItem);
    *(_QWORD *)(v21 + v18) = a2;
    *(_QWORD *)(v21 + v20) = v13;
    a5 = v19;
    v22 = swift_allocObject(&unk_1005ECAF0, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_1004475D4;
    *(_QWORD *)(v22 + 24) = v21;
    swift_bridgeObjectRetain(a2);
    swift_retain();
    swift_retain();
    sub_10001A27C(0, (uint64_t)sub_100447B10, v22);
    swift_release(v21);
    swift_release(v22);
  }
  swift_beginAccess(v15, v32, 0, 0);
  sub_10007C6DC(v15, (uint64_t)v11, type metadata accessor for DOCBrowserHistoryItem);
  sub_10043F524((uint64_t)v11, 5.0);
  sub_10007C720((uint64_t)v11, type metadata accessor for DOCBrowserHistoryItem);
  v23 = (_QWORD *)swift_allocObject(&unk_1005ECA78, 40, 7);
  v23[2] = v28;
  v23[3] = a5;
  v23[4] = v13;
  aBlock[4] = sub_1004474E4;
  v31 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005ECA90;
  v24 = _Block_copy(aBlock);
  v25 = v31;
  swift_retain();
  swift_retain();
  swift_release(v25);
  DOCRunInMainThread(v24);
  _Block_release(v24);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_10043FFB8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[24];
  _QWORD *v36;

  v10 = type metadata accessor for DOCBrowserHistoryItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = swift_projectBox(a4);
  if ((static UUID.== infix(_:_:)(a1, a2) & 1) == 0)
  {
LABEL_22:
    sub_10007C6DC(a1, a5, type metadata accessor for DOCBrowserHistoryItem);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a5, 0, 1, v10);
  }
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  if (!v15)
  {
LABEL_20:
    swift_bridgeObjectRelease(a3);
    v27 = _swiftEmptyArrayStorage;
LABEL_21:
    sub_10044029C(0, 0, (uint64_t)v27, (uint64_t)v13);
    swift_bridgeObjectRelease(v27);
    swift_beginAccess(v14, &v36, 1, 0);
    sub_100144EF0((uint64_t)v13, v14);
    swift_beginAccess(v14, v35, 0, 0);
    a1 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v36 = _swiftEmptyArrayStorage;
    result = specialized ContiguousArray.reserveCapacity(_:)(v15);
    if (v15 < 0)
      break;
    v29 = v13;
    v30 = v14;
    v31 = a1;
    v32 = v11;
    v33 = v10;
    v34 = a5;
    if ((a3 & 0xC000000000000001) != 0)
    {
      v17 = v15 - 1;
      a1 = 0x7FFFFFFFFFFFFFFFLL;
      v13 = &qword_1006419B0;
      while (v17 != 0x7FFFFFFFFFFFFFFFLL)
      {
        v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17, a3);
        v19 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        a5 = DOCNode.representedLocation.getter(v19);
        swift_unknownObjectRelease(v18);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v10 = v36[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, a5);
        specialized ContiguousArray._endMutation()(v21);
        if (--v17 == -1)
          goto LABEL_13;
      }
      __break(1u);
    }
    else
    {
      a1 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v14 = v15 - 1;
      v11 = a3 + 24;
      v13 = (uint64_t *)FPItem_ptr;
      while (v14 < a1)
      {
        v22 = *(void **)(v11 + 8 * v15);
        v23 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v24 = v22;
        a5 = DOCNode.representedLocation.getter(v23);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
        v10 = v36[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, a5);
        specialized ContiguousArray._endMutation()(v26);
        if (!--v15)
        {
LABEL_13:
          v27 = v36;
          swift_bridgeObjectRelease(a3);
          v10 = v33;
          a5 = v34;
          v11 = v32;
          v13 = v29;
          v14 = v30;
          goto LABEL_21;
        }
      }
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v28 = a3;
    else
      v28 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (!v15)
      goto LABEL_20;
  }
  __break(1u);
  return result;
}

void sub_10044029C(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  Swift::Int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  Swift::Int v55;
  uint64_t v56;

  sub_10007C6DC(v4, a4, type metadata accessor for DOCBrowserHistoryItem);
  v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v11 = v10[5];
  v12 = *(void **)(a4 + v11);
  v13 = v12;
  v14 = sub_10000DE10(v12, a1, (uint64_t)a2);
  if (!v14)
  {
    __break(1u);
    goto LABEL_68;
  }
  v15 = v14;

  *(_QWORD *)(a4 + v11) = v15;
  v16 = v10[7];
  v17 = *(void **)(a4 + v16);
  v18 = v17;
  v19 = sub_10000DE10(v17, a1, (uint64_t)a2);

  *(_QWORD *)(a4 + v16) = v19;
  v20 = v19;

  v21 = v10[6];
  v22 = *(_QWORD *)(a4 + v21);
  if (!a3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a4 + v21));

    a3 = v22;
    goto LABEL_51;
  }
  if (!v19)
  {
    swift_bridgeObjectRetain(a3);
    goto LABEL_51;
  }
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v24 = *(_QWORD *)(a4 + v21);
    else
      v24 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a4 + v21));
    swift_bridgeObjectRetain(a3);
    if (_CocoaArrayWrapper.endIndex.getter(v24) < 2)
      goto LABEL_6;
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(a4 + v21));
    swift_bridgeObjectRetain(a3);
    if (v23 < 2)
    {
LABEL_6:

      swift_bridgeObjectRelease(v22);
LABEL_51:
      v49 = a2;
      swift_bridgeObjectRetain(a1);
      v50 = sub_10008A298(a3, a1, (uint64_t)a2);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(a1);

      *(_QWORD *)(a4 + v21) = v50;
      return;
    }
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v22);
LABEL_16:
    v26 = v25;
    swift_bridgeObjectRelease(v22);
    v55 = sub_100174624((uint64_t)v26, a3);
    v28 = v27;

    if ((v28 & 1) != 0)
    {

      goto LABEL_51;
    }
    v29 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v30 = swift_allocObject(v29, 40, 7);
    *(_OWORD *)(v30 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v30 + 32) = v20;
    v56 = v30;
    v31 = (unint64_t)&v56;
    v32 = (id)specialized Array._endMutation()(v30);
    v5 = v56;
    v54 = (unint64_t)a3 >> 62;
    if (!((unint64_t)a3 >> 62))
    {
      v33 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v33 < v55)
      {
        __break(1u);
        goto LABEL_60;
      }
      v32 = v20;
      v31 = v33;
LABEL_20:
      if (v33 >= v55)
      {
        if ((v55 & 0x8000000000000000) == 0)
        {
          if (v54)
          {
            if (a3 < 0)
              v35 = a3;
            else
              v35 = a3 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(a3);
            v34 = _CocoaArrayWrapper.endIndex.getter(v35);
            swift_bridgeObjectRelease(a3);
          }
          else
          {
            v34 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v34 >= (uint64_t)v31)
          {
            v53 = v5;
            if ((v31 & 0x8000000000000000) == 0)
            {
              if ((a3 & 0xC000000000000001) == 0 || v55 == v31)
              {
LABEL_36:
                if (v54)
                {
                  if (a3 < 0)
                    v39 = a3;
                  else
                    v39 = a3 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(a3);
                  v5 = _CocoaArrayWrapper.subscript.getter(v55, v31, v39);
                  v38 = v40;
                  v55 = v41;
                  v31 = v42;
                  swift_bridgeObjectRelease_n(a3, 2);
                  if ((v31 & 1) == 0)
                    goto LABEL_43;
                }
                else
                {
                  v5 = a3 & 0xFFFFFFFFFFFFFF8;
                  v38 = (a3 & 0xFFFFFFFFFFFFFF8) + 32;
                  v31 = (2 * v31) | 1;
                  if ((v31 & 1) == 0)
                  {
LABEL_43:
                    v43 = sub_10028F730(v5, v38, v55, v31);
LABEL_50:
                    swift_unknownObjectRelease(v5);
                    v56 = v53;
                    swift_bridgeObjectRetain(v53);
                    swift_retain();
                    sub_10008862C(v48);
                    swift_bridgeObjectRelease(v53);
                    swift_release(v43);

                    a3 = v56;
                    goto LABEL_51;
                  }
                }
                v54 = v38;
                v44 = type metadata accessor for __ContiguousArrayStorageBase(0);
                v45 = swift_unknownObjectRetain_n(v5, 2);
                v46 = (_QWORD *)swift_dynamicCastClass(v45, v44);
                if (!v46)
                {
                  swift_unknownObjectRelease(v5);
                  v46 = _swiftEmptyArrayStorage;
                }
                v47 = v46[2];
                swift_release(v46);
                if (!__OFSUB__(v31 >> 1, v55))
                {
                  v32 = (id)v5;
                  if (v47 == (v31 >> 1) - v55)
                  {
                    v43 = (_QWORD *)swift_dynamicCastClass(v5, v44);
                    if (!v43)
                    {
                      swift_unknownObjectRelease(v5);
                      v43 = _swiftEmptyArrayStorage;
                    }
                    goto LABEL_50;
                  }
                  goto LABEL_66;
                }
LABEL_65:
                __break(1u);
LABEL_66:
                swift_unknownObjectRelease(v32);
                v38 = v54;
                goto LABEL_43;
              }
              if (v55 < v31)
              {
                sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
                v36 = v55;
                do
                {
                  v37 = v36 + 1;
                  _ArrayBuffer._typeCheckSlowPath(_:)(v36);
                  v36 = v37;
                }
                while (v31 != v37);
                goto LABEL_36;
              }
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    goto LABEL_54;
  }
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v25 = *(id *)(v22 + 40);
    goto LABEL_16;
  }
  __break(1u);
LABEL_54:
  if (a3 < 0)
    v51 = a3;
  else
    v51 = a3 & 0xFFFFFFFFFFFFFF8;
  v52 = v20;
  swift_bridgeObjectRetain(a3);
  v31 = _CocoaArrayWrapper.endIndex.getter(v51);
  swift_bridgeObjectRelease(a3);
  if ((uint64_t)v31 >= v55)
  {
    swift_bridgeObjectRetain(a3);
    v33 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease(a3);
    goto LABEL_20;
  }
LABEL_68:
  __break(1u);
}

uint64_t sub_100440790(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE v11[24];

  v5 = type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = swift_projectBox(a3);
  swift_beginAccess(v8, v11, 0, 0);
  sub_10007C6DC(v8, (uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
  a1(v7);
  return sub_10007C720((uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_100440874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v2 = sub_10006922C((uint64_t *)&unk_100656590);
  __chkstk_darwin(v2);
  v4 = (char *)&v31[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v5);
  v7 = (char *)&v31[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31[-1] - v9;
  v11 = type metadata accessor for DOCBrowserHistoryItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31[-1] - v16;
  sub_1000271D4(a1, (uint64_t)v10, &qword_10064A600);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v18 = &qword_10064A600;
    v19 = v10;
    return sub_10000CB4C((uint64_t)v19, v18);
  }
  sub_1001D0788((uint64_t)v10, (uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000271D4((uint64_t)&v17[*(int *)(v11 + 36)], (uint64_t)v31, &qword_100642730);
  if (v32)
  {
    v20 = sub_10006922C(&qword_100655BD8);
    if ((swift_dynamicCast(&v33, v31, (char *)&type metadata for Any + 8, v20, 6) & 1) == 0)
    {
      v35 = 0;
      v33 = 0u;
      v34 = 0u;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v31, &qword_100642730);
    v33 = 0u;
    v34 = 0u;
    v35 = 0;
  }
  sub_1000271D4((uint64_t)&v33, (uint64_t)v31, &qword_100655BD0);
  if (v32)
  {
    v21 = sub_10007E7A0(v31, v32);
    v22 = *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0) + 24);
    v23 = *(_QWORD *)(a1 + v22);
    if (!*(_QWORD *)(v23 + 16))
    {
      v24 = *v21;
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRelease(v23);
      *(_QWORD *)(a1 + v22) = v24;
    }
    sub_100068588(v31);
  }
  else
  {
    sub_10000CB4C((uint64_t)v31, &qword_100655BD0);
  }
  if ((sub_100440BF8(1) & 1) == 0)
  {
    type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
    sub_10007C6DC((uint64_t)v17, (uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
    sub_100459C00(0, 0, (uint64_t)v4);
  }
  v25 = *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0) + 20);
  v26 = *(_QWORD *)(a1 + v25);
  if (!*(_QWORD *)(v26 + 16))
  {
    __break(1u);
LABEL_20:
    result = sub_100452E1C(v26);
    v26 = result;
    v28 = *(_QWORD *)(result + 16);
    if (v28)
      goto LABEL_17;
    goto LABEL_21;
  }
  result = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a1 + v25));
  if ((result & 1) == 0)
    goto LABEL_20;
  v28 = *(_QWORD *)(v26 + 16);
  if (v28)
  {
LABEL_17:
    v29 = v28 - 1;
    sub_1001D0788(v26+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * (v28 - 1), (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
    *(_QWORD *)(v26 + 16) = v29;
    *(_QWORD *)(a1 + v25) = v26;
    sub_1001D0788((uint64_t)v14, (uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    sub_10007C720((uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    sub_10008BB40((uint64_t)v7, a1, &qword_10064A600);
    v18 = &qword_100655BD0;
    v19 = (char *)&v33;
    return sub_10000CB4C((uint64_t)v19, v18);
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_100440BF8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    v2 = type metadata accessor for DOCBrowserHistoryItem(0);
    sub_1000271D4(v1 + *(int *)(v2 + 36), (uint64_t)v5, &qword_100642730);
    if (v6)
    {
      if ((swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, &type metadata for DOCBrowserHistoryItem.SearchContext, 6) & 1) != 0)
      {
        swift_bridgeObjectRelease(v4);
        return 1;
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)v5, &qword_100642730);
    }
  }
  return 0;
}

uint64_t sub_100440C88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - v6;
  v8 = type metadata accessor for DOCBrowserHistoryItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - v13;
  sub_1000271D4(a1, (uint64_t)v7, &qword_10064A600);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10000CB4C((uint64_t)v7, &qword_10064A600);
  sub_1001D0788((uint64_t)v7, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  sub_10007C6DC((uint64_t)v14, (uint64_t)v11, type metadata accessor for DOCBrowserHistoryItem);
  v23 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v16 = *(int *)(v23 + 20);
  v17 = *(_QWORD *)(a1 + v16);
  if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
    v17 = sub_100081B5C(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
  v19 = *(_QWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 24);
  if (v19 >= v18 >> 1)
    v17 = sub_100081B5C(v18 > 1, v19 + 1, 1, v17);
  *(_QWORD *)(v17 + 16) = v19 + 1;
  v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  result = sub_1001D0788((uint64_t)v11, v17 + v20 + *(_QWORD *)(v9 + 72) * v19, type metadata accessor for DOCBrowserHistoryItem);
  *(_QWORD *)(a1 + v16) = v17;
  v21 = a1 + *(int *)(v23 + 24);
  if (*(_QWORD *)(*(_QWORD *)v21 + 16))
  {
    sub_10007C6DC(*(_QWORD *)v21 + v20, (uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
    sub_10045C3D0(0, 1);
    sub_10007C720((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
    return sub_10008BB40((uint64_t)v4, a1, &qword_10064A600);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100440EF8(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __objc2_prot *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, __n128);
  __n128 v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __objc2_meth_list *opt_inst_meths;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, __n128);
  __n128 v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t (*v78)(char *, __n128);
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t, uint64_t, uint64_t);
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;

  v124 = a2;
  v3 = sub_10006922C(&qword_10064A600);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v106 - v8;
  v10 = __chkstk_darwin(v7);
  v122 = (char *)&v106 - v11;
  v12 = __chkstk_darwin(v10);
  v116 = (uint64_t)&v106 - v13;
  v14 = __chkstk_darwin(v12);
  v121 = (char *)&v106 - v15;
  v16 = __chkstk_darwin(v14);
  v120 = (uint64_t)&v106 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v106 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v106 - v21;
  v23 = type metadata accessor for DOCBrowserHistoryItem(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v115 = (uint64_t)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v126 = (uint64_t)&v106 - v28;
  v29 = __chkstk_darwin(v27);
  v127 = (char *)&v106 - v30;
  v31 = __chkstk_darwin(v29);
  v125 = (char *)&v106 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v106 - v34;
  __chkstk_darwin(v33);
  v37 = (char *)&v106 - v36;
  sub_1000271D4(a1, (uint64_t)v22, &qword_10064A600);
  v123 = v24;
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v38(v22, 1, v23) == 1)
  {
    sub_10000CB4C((uint64_t)v22, &qword_10064A600);
    return;
  }
  v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
  v113 = v23;
  v114 = v20;
  v110 = v9;
  v107 = v6;
  v119 = v37;
  sub_1001D0788((uint64_t)v22, (uint64_t)v37, type metadata accessor for DOCBrowserHistoryItem);
  v39 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v111 = *(int *)(v39 + 20);
  v40 = *(char **)(a1 + v111);
  v128 = (char *)_swiftEmptyArrayStorage;
  v41 = *((_QWORD *)v40 + 2);
  v42 = &OBJC_PROTOCOL___RPTTestParameters;
  v43 = OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter;
  v44 = v124;
  v45 = v124;
  swift_bridgeObjectRetain(v40);
  v117 = a1;
  v112 = v40;
  if (v41)
  {
    v108 = v39;
    v109 = v45;
    v46 = &v44[v43];
    v47 = *(_QWORD *)(v123 + 72);
    v124 = (char *)((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
    v48 = &v124[(_QWORD)v40];
    v49 = (char *)_swiftEmptyArrayStorage;
    v50 = (uint64_t)v127;
    do
    {
      sub_10007C6DC((uint64_t)v48, (uint64_t)v35, type metadata accessor for DOCBrowserHistoryItem);
      v52 = *(uint64_t (**)(char *, __n128))v46;
      v51 = *((_QWORD *)v46 + 1);
      v53 = swift_retain();
      LOBYTE(v52) = v52(v35, v53);
      swift_release(v51);
      if ((v52 & 1) != 0)
      {
        sub_1001D0788((uint64_t)v35, (uint64_t)v125, type metadata accessor for DOCBrowserHistoryItem);
        if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
          sub_1001553A0(0, *((_QWORD *)v49 + 2) + 1, 1);
        v49 = v128;
        v55 = *((_QWORD *)v128 + 2);
        v54 = *((_QWORD *)v128 + 3);
        if (v55 >= v54 >> 1)
        {
          sub_1001553A0(v54 > 1, v55 + 1, 1);
          v49 = v128;
        }
        *((_QWORD *)v49 + 2) = v55 + 1;
        sub_1001D0788((uint64_t)v125, (uint64_t)&v124[(_QWORD)v49 + v55 * v47], type metadata accessor for DOCBrowserHistoryItem);
        v50 = (uint64_t)v127;
      }
      else
      {
        sub_10007C720((uint64_t)v35, type metadata accessor for DOCBrowserHistoryItem);
      }
      v48 += v47;
      --v41;
    }
    while (v41);
    v56 = v128;
    a1 = v117;
    v42 = &OBJC_PROTOCOL___RPTTestParameters;
    v39 = v108;
    v45 = v109;
  }
  else
  {
    v56 = (char *)_swiftEmptyArrayStorage;
    v50 = (uint64_t)v127;
  }
  swift_bridgeObjectRelease(v112);

  v57 = (char *)*(int *)(v39 + 24);
  v58 = a1;
  v59 = *(char **)&v57[a1];
  v128 = (char *)_swiftEmptyArrayStorage;
  v60 = *((_QWORD *)v59 + 2);
  opt_inst_meths = v42[33].opt_inst_meths;
  v62 = v45;
  v125 = v56;
  swift_retain();
  swift_bridgeObjectRetain(v59);
  if (v60)
  {
    v112 = v62;
    v124 = v57;
    v63 = (char *)opt_inst_meths + (_QWORD)v45;
    v64 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    v65 = *(_QWORD *)(v123 + 72);
    v109 = v59;
    v66 = (uint64_t)&v59[v64];
    v67 = (char *)_swiftEmptyArrayStorage;
    do
    {
      sub_10007C6DC(v66, v50, type metadata accessor for DOCBrowserHistoryItem);
      v69 = *(uint64_t (**)(uint64_t, __n128))v63;
      v68 = *((_QWORD *)v63 + 1);
      v70 = swift_retain();
      LOBYTE(v69) = v69(v50, v70);
      swift_release(v68);
      if ((v69 & 1) != 0)
      {
        sub_1001D0788(v50, v126, type metadata accessor for DOCBrowserHistoryItem);
        if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0)
          sub_1001553A0(0, *((_QWORD *)v67 + 2) + 1, 1);
        v67 = v128;
        v72 = *((_QWORD *)v128 + 2);
        v71 = *((_QWORD *)v128 + 3);
        if (v72 >= v71 >> 1)
        {
          sub_1001553A0(v71 > 1, v72 + 1, 1);
          v67 = v128;
        }
        *((_QWORD *)v67 + 2) = v72 + 1;
        sub_1001D0788(v126, (uint64_t)&v67[v64 + v72 * v65], type metadata accessor for DOCBrowserHistoryItem);
        v50 = (uint64_t)v127;
      }
      else
      {
        sub_10007C720(v50, type metadata accessor for DOCBrowserHistoryItem);
      }
      v66 += v65;
      --v60;
    }
    while (v60);
    v73 = v128;
    v74 = v117;
    v75 = v124;
    v42 = &OBJC_PROTOCOL___RPTTestParameters;
    v62 = v112;
    v76 = v109;
  }
  else
  {
    v73 = (char *)_swiftEmptyArrayStorage;
    v76 = v59;
    v74 = v58;
    v75 = v57;
  }
  swift_bridgeObjectRelease(v76);

  v127 = v73;
  v128 = v73;
  v77 = &v62[(unint64_t)v42[33].opt_inst_meths];
  v78 = *(uint64_t (**)(char *, __n128))v77;
  v79 = *((_QWORD *)v77 + 1);
  swift_retain();
  v80 = swift_retain();
  v81 = (uint64_t)v119;
  LOBYTE(v78) = v78(v119, v80);
  swift_release(v79);
  v83 = v113;
  v82 = (uint64_t)v114;
  v84 = (uint64_t)v122;
  if ((v78 & 1) != 0)
  {
    sub_10007C6DC(v81, (uint64_t)v114, type metadata accessor for DOCBrowserHistoryItem);
    v85 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v123 + 56);
    v85(v82, 0, 1, v83);
  }
  else
  {
    v85 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v123 + 56);
    v85((uint64_t)v114, 1, 1, v113);
  }
  v86 = (unint64_t)v125;
  v88 = v120;
  v87 = (uint64_t)v121;
  sub_1000271D4(v82, v120, &qword_10064A600);
  v89 = v118;
  if (v118(v88, 1, v83) != 1)
  {
    swift_release(v86);
    sub_10000CB4C(v88, &qword_10064A600);
    goto LABEL_41;
  }
  sub_10000CB4C(v88, &qword_10064A600);
  v90 = *(_QWORD *)(v86 + 16);
  if (v90)
  {
    sub_10007C6DC(v86+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(_QWORD *)(v123 + 72) * (v90 - 1), v87, type metadata accessor for DOCBrowserHistoryItem);
    v91 = 0;
  }
  else
  {
    v91 = 1;
  }
  v85(v87, v91, 1, v83);
  swift_release(v86);
  v92 = v89(v87, 1, v83);
  sub_10000CB4C(v87, &qword_10064A600);
  if (v92 == 1)
  {
    v89 = v118;
    goto LABEL_41;
  }
  if (!*(_QWORD *)(v86 + 16))
  {
    __break(1u);
    goto LABEL_52;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
LABEL_52:
    v86 = sub_100452E1C(v86);
  v124 = v75;
  v93 = *(_QWORD *)(v86 + 16);
  if (!v93)
  {
    __break(1u);
    goto LABEL_54;
  }
  v94 = v93 - 1;
  v95 = v86
      + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))
      + *(_QWORD *)(v123 + 72) * (v93 - 1);
  v96 = v86;
  v97 = v115;
  sub_1001D0788(v95, v115, type metadata accessor for DOCBrowserHistoryItem);
  *(_QWORD *)(v96 + 16) = v94;
  v98 = v97;
  v86 = v96;
  v99 = v116;
  sub_1001D0788(v98, v116, type metadata accessor for DOCBrowserHistoryItem);
  sub_10000CB4C(v82, &qword_10064A600);
  v85(v99, 0, 1, v83);
  sub_100070EDC(v99, v82, &qword_10064A600);
  v89 = v118;
  v75 = v124;
LABEL_41:
  sub_1000271D4(v82, v84, &qword_10064A600);
  if (v89(v84, 1, v83) != 1)
  {
    swift_release(v127);
    sub_10000CB4C(v84, &qword_10064A600);
    sub_10007C720((uint64_t)v119, type metadata accessor for DOCBrowserHistoryItem);
LABEL_50:
    sub_10008BB40(v82, v74, &qword_10064A600);
    v104 = v111;
    swift_bridgeObjectRelease(*(_QWORD *)(v74 + v111));
    *(_QWORD *)(v74 + v104) = v86;
    v105 = v128;
    swift_bridgeObjectRelease(*(_QWORD *)&v75[v74]);
    *(_QWORD *)&v75[v74] = v105;
    return;
  }
  sub_10000CB4C(v84, &qword_10064A600);
  v100 = v127;
  if (*((_QWORD *)v127 + 2))
  {
    v101 = (uint64_t)v110;
    sub_10007C6DC((uint64_t)&v127[(*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80)], (uint64_t)v110, type metadata accessor for DOCBrowserHistoryItem);
    v102 = 0;
  }
  else
  {
    v102 = 1;
    v101 = (uint64_t)v110;
  }
  v85(v101, v102, 1, v83);
  swift_release(v100);
  if (v89(v101, 1, v83) == 1)
  {
    sub_10007C720((uint64_t)v119, type metadata accessor for DOCBrowserHistoryItem);
    sub_10000CB4C(v101, &qword_10064A600);
    goto LABEL_50;
  }
  sub_10000CB4C(v101, &qword_10064A600);
  if (*((_QWORD *)v128 + 2))
  {
    v103 = (uint64_t)v107;
    sub_10007C6DC((uint64_t)&v128[(*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80)], (uint64_t)v107, type metadata accessor for DOCBrowserHistoryItem);
    sub_10045C3D0(0, 1);
    sub_10000CB4C(v82, &qword_10064A600);
    sub_10007C720((uint64_t)v119, type metadata accessor for DOCBrowserHistoryItem);
    v85(v103, 0, 1, v83);
    sub_100070EDC(v103, v82, &qword_10064A600);
    goto LABEL_50;
  }
LABEL_54:
  __break(1u);
}

uint64_t sub_1004418C4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;

  v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = objc_msgSend(*(id *)(a1 + *(int *)(v6 + 20)), "representedTag");
  if (!v7)
    goto LABEL_4;
  v8 = v7;
  sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
  v9 = a2;
  v10 = v8;
  v11 = static NSObject.== infix(_:_:)(v10, v9);

  if ((v11 & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
LABEL_4:
    sub_10007C6DC(a1, a3, type metadata accessor for DOCBrowserHistoryItem);
    v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, v12, 1, v6);
}

void *sub_100441A74@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *result;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;

  v8 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v9 = objc_msgSend(*(id *)(a1 + v8[5]), "representedTag");
  if (!v9)
    goto LABEL_5;
  v10 = v9;
  sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
  v11 = a2;
  v12 = v10;
  v13 = static NSObject.== infix(_:_:)(v12, v11);

  if ((v13 & 1) == 0)
  {
LABEL_5:
    sub_10007C6DC(a1, a4, type metadata accessor for DOCBrowserHistoryItem);
    return (void *)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v8 - 1) + 56))(a4, 0, 1, v8);
  }
  sub_10007C6DC(a1, a4, type metadata accessor for DOCBrowserHistoryItem);
  v14 = v8[5];
  v15 = *(void **)(a4 + v14);
  v16 = v15;
  result = sub_10000DE10(v15, 0, (uint64_t)a3);
  if (result)
  {
    v18 = result;

    *(_QWORD *)(a4 + v14) = v18;
    v19 = v8[7];
    v20 = *(void **)(a4 + v19);
    v21 = v20;
    v22 = sub_10000DE10(v20, 0, (uint64_t)a3);

    *(_QWORD *)(a4 + v19) = v22;
    v23 = v22;

    v24 = v8[6];
    v25 = *(_QWORD *)(a4 + v24);
    swift_bridgeObjectRetain(v25);

    v26 = a3;
    v27 = sub_10008A298(v25, 0, (uint64_t)a3);
    swift_bridgeObjectRelease_n(v25, 2);

    *(_QWORD *)(a4 + v24) = v27;
    return (void *)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v8 - 1) + 56))(a4, 0, 1, v8);
  }
  __break(1u);
  return result;
}

uint64_t *sub_100441D14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10006922C(&qword_10064A600);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = v7[5];
      v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      v14 = v7[6];
      v15 = *(uint64_t *)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = v15;
      v16 = v7[7];
      v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      v18 = v7[8];
      v19 = *(void **)((char *)a2 + v18);
      *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
      v20 = v7[9];
      v38 = (char *)a1 + v20;
      v21 = (_OWORD *)((char *)a2 + v20);
      v22 = *(uint64_t *)((char *)a2 + v20 + 24);
      v23 = v13;
      swift_bridgeObjectRetain(v15);
      v24 = v17;
      v25 = v19;
      if (v22)
      {
        *((_QWORD *)v38 + 3) = v22;
        (**(void (***)(void))(v22 - 8))();
      }
      else
      {
        v26 = v21[1];
        *(_OWORD *)v38 = *v21;
        *((_OWORD *)v38 + 1) = v26;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v27 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
    v28 = *(int *)(v27 + 20);
    v29 = *(uint64_t *)((char *)a2 + v28);
    *(uint64_t *)((char *)a1 + v28) = v29;
    v30 = *(int *)(v27 + 24);
    v31 = *(uint64_t *)((char *)a2 + v30);
    *(uint64_t *)((char *)a1 + v30) = v31;
    v32 = *(int *)(a3 + 20);
    v33 = (uint64_t *)((char *)a1 + v32);
    v34 = (char *)a2 + v32;
    v35 = *(uint64_t *)((char *)a2 + v32);
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v31);
    if (v35)
    {
      v36 = *((_QWORD *)v34 + 1);
      *v33 = v35;
      v33[1] = v36;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
  }
  return a1;
}

char *sub_100441F04(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v65;
  uint64_t v66;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v66 = a3;
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = v6[5];
      v13 = *(void **)&a2[v12];
      *(_QWORD *)&a1[v12] = v13;
      v14 = v6[6];
      v15 = *(_QWORD *)&a2[v14];
      *(_QWORD *)&a1[v14] = v15;
      v16 = v6[7];
      v17 = *(void **)&a2[v16];
      *(_QWORD *)&a1[v16] = v17;
      v18 = v6[8];
      v19 = *(void **)&a2[v18];
      *(_QWORD *)&a1[v18] = v19;
      v20 = v6[9];
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = *(_QWORD *)&a2[v20 + 24];
      v24 = v13;
      swift_bridgeObjectRetain(v15);
      v25 = v17;
      v26 = v19;
      if (v23)
      {
        *((_QWORD *)v21 + 3) = v23;
        (**(void (***)(char *, char *, uint64_t))(v23 - 8))(v21, v22, v23);
      }
      else
      {
        v48 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v48;
      }
      a3 = v66;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_13;
    }
LABEL_7:
    v27 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  if (v10)
  {
    sub_10007C720((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_7;
  }
  v28 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(a1, a2, v28);
  v29 = v6[5];
  v30 = *(void **)&a2[v29];
  v31 = *(void **)&a1[v29];
  *(_QWORD *)&a1[v29] = v30;
  v32 = v30;

  v33 = v6[6];
  v34 = *(_QWORD *)&a2[v33];
  v35 = *(_QWORD *)&a1[v33];
  *(_QWORD *)&a1[v33] = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  v36 = v6[7];
  v37 = *(void **)&a1[v36];
  v38 = *(void **)&a2[v36];
  *(_QWORD *)&a1[v36] = v38;
  v39 = v38;

  v40 = v6[8];
  v41 = *(void **)&a2[v40];
  v42 = *(void **)&a1[v40];
  *(_QWORD *)&a1[v40] = v41;
  v43 = v41;

  v44 = v6[9];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = *(_QWORD *)&a2[v44 + 24];
  if (*(_QWORD *)&a1[v44 + 24])
  {
    if (v47)
    {
      sub_10026DED0(v45, v46);
      goto LABEL_13;
    }
    sub_100068588(v45);
  }
  else if (v47)
  {
    *((_QWORD *)v45 + 3) = v47;
    (**(void (***)(char *, char *))(v47 - 8))(v45, v46);
    goto LABEL_13;
  }
  v65 = *((_OWORD *)v46 + 1);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v65;
LABEL_13:
  v49 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v50 = *(int *)(v49 + 20);
  v51 = *(_QWORD *)&a2[v50];
  v52 = *(_QWORD *)&a1[v50];
  *(_QWORD *)&a1[v50] = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52);
  v53 = *(int *)(v49 + 24);
  v54 = *(_QWORD *)&a2[v53];
  v55 = *(_QWORD *)&a1[v53];
  *(_QWORD *)&a1[v53] = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  v56 = *(int *)(a3 + 20);
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = *(_QWORD *)&a1[v56];
  v60 = *(_QWORD *)v58;
  if (!v59)
  {
    if (v60)
    {
      *(_QWORD *)v57 = v60;
      v63 = *((_QWORD *)v58 + 1);
      *((_QWORD *)v57 + 1) = v63;
      swift_bridgeObjectRetain(v60);
      swift_bridgeObjectRetain(v63);
      return a1;
    }
LABEL_19:
    *(_OWORD *)v57 = *(_OWORD *)v58;
    return a1;
  }
  if (!v60)
  {
    sub_10044222C(&a1[v56]);
    goto LABEL_19;
  }
  *(_QWORD *)v57 = v60;
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRelease(v59);
  v61 = *((_QWORD *)v58 + 1);
  v62 = *((_QWORD *)v57 + 1);
  *((_QWORD *)v57 + 1) = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  return a1;
}

_QWORD *sub_10044222C(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  return a1;
}

char *sub_10044225C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v10 = v6[9];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
  *(_QWORD *)&a1[*(int *)(v14 + 24)] = *(_QWORD *)&a2[*(int *)(v14 + 24)];
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100442388(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      v12 = v6[9];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_10007C720((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
LABEL_6:
    v16 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v28 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(a1, a2, v28);
  v29 = v6[5];
  v30 = *(void **)&a1[v29];
  *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];

  v31 = v6[6];
  v32 = *(_QWORD *)&a1[v31];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
  swift_bridgeObjectRelease(v32);
  v33 = v6[7];
  v34 = *(void **)&a1[v33];
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];

  v35 = v6[8];
  v36 = *(void **)&a1[v35];
  *(_QWORD *)&a1[v35] = *(_QWORD *)&a2[v35];

  v37 = v6[9];
  v38 = &a1[v37];
  v39 = &a2[v37];
  if (*(_QWORD *)&a1[v37 + 24])
    sub_100068588(v38);
  v40 = *((_OWORD *)v39 + 1);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v40;
LABEL_7:
  v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v18 = *(int *)(v17 + 20);
  v19 = *(_QWORD *)&a1[v18];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  swift_bridgeObjectRelease(v19);
  v20 = *(int *)(v17 + 24);
  v21 = *(_QWORD *)&a1[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  swift_bridgeObjectRelease(v21);
  v22 = *(int *)(a3 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_QWORD *)&a1[v22];
  if (!v25)
  {
LABEL_11:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    return a1;
  }
  if (!*(_QWORD *)v24)
  {
    sub_10044222C(v23);
    goto LABEL_11;
  }
  *(_QWORD *)v23 = *(_QWORD *)v24;
  swift_bridgeObjectRelease(v25);
  v26 = *((_QWORD *)v23 + 1);
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRelease(v26);
  return a1;
}

uint64_t sub_1004425D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_100442658(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

ValueMetadata *type metadata accessor for _DOCBrowserHistoryDataSourceBase.RefreshContext()
{
  return &type metadata for _DOCBrowserHistoryDataSourceBase.RefreshContext;
}

uint64_t *sub_1004426E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10006922C(&qword_10064A600);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = v7[5];
      v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      v14 = v7[6];
      v15 = *(uint64_t *)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = v15;
      v16 = v7[7];
      v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      v18 = v7[8];
      v19 = *(void **)((char *)a2 + v18);
      *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
      v20 = v7[9];
      v32 = (char *)a1 + v20;
      v21 = (_OWORD *)((char *)a2 + v20);
      v22 = *(uint64_t *)((char *)a2 + v20 + 24);
      v23 = v13;
      swift_bridgeObjectRetain(v15);
      v24 = v17;
      v25 = v19;
      if (v22)
      {
        *((_QWORD *)v32 + 3) = v22;
        (**(void (***)(void))(v22 - 8))();
      }
      else
      {
        v26 = v21[1];
        *(_OWORD *)v32 = *v21;
        *((_OWORD *)v32 + 1) = v26;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v27 = *(int *)(a3 + 20);
    v28 = *(int *)(a3 + 24);
    v29 = *(uint64_t *)((char *)a2 + v27);
    *(uint64_t *)((char *)a1 + v27) = v29;
    v30 = *(uint64_t *)((char *)a2 + v28);
    *(uint64_t *)((char *)a1 + v28) = v30;
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v30);
  }
  return a1;
}

char *sub_100442890(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v56;
  uint64_t v57;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v28 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(a1, a2, v28);
      v29 = v6[5];
      v30 = *(void **)&a2[v29];
      v31 = *(void **)&a1[v29];
      *(_QWORD *)&a1[v29] = v30;
      v32 = v30;

      v33 = v6[6];
      v34 = *(_QWORD *)&a2[v33];
      v35 = *(_QWORD *)&a1[v33];
      *(_QWORD *)&a1[v33] = v34;
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRelease(v35);
      v36 = v6[7];
      v37 = *(void **)&a1[v36];
      v38 = *(void **)&a2[v36];
      *(_QWORD *)&a1[v36] = v38;
      v39 = v38;

      v40 = v6[8];
      v41 = *(void **)&a2[v40];
      v42 = *(void **)&a1[v40];
      *(_QWORD *)&a1[v40] = v41;
      v43 = v41;

      v44 = v6[9];
      v45 = &a1[v44];
      v46 = &a2[v44];
      v47 = *(_QWORD *)&a2[v44 + 24];
      if (*(_QWORD *)&a1[v44 + 24])
      {
        if (v47)
        {
          sub_10026DED0(v45, v46);
          goto LABEL_13;
        }
        sub_100068588(v45);
      }
      else if (v47)
      {
        *((_QWORD *)v45 + 3) = v47;
        (**(void (***)(char *, char *))(v47 - 8))(v45, v46);
        goto LABEL_13;
      }
      v56 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v56;
      goto LABEL_13;
    }
    sub_10007C720((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    v27 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  v57 = a3;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = v6[5];
  v13 = *(void **)&a2[v12];
  *(_QWORD *)&a1[v12] = v13;
  v14 = v6[6];
  v15 = *(_QWORD *)&a2[v14];
  *(_QWORD *)&a1[v14] = v15;
  v16 = v6[7];
  v17 = *(void **)&a2[v16];
  *(_QWORD *)&a1[v16] = v17;
  v18 = v6[8];
  v19 = *(void **)&a2[v18];
  *(_QWORD *)&a1[v18] = v19;
  v20 = v6[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)&a2[v20 + 24];
  v24 = v13;
  swift_bridgeObjectRetain(v15);
  v25 = v17;
  v26 = v19;
  if (v23)
  {
    *((_QWORD *)v21 + 3) = v23;
    (**(void (***)(char *, char *, uint64_t))(v23 - 8))(v21, v22, v23);
  }
  else
  {
    v48 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v48;
  }
  a3 = v57;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_13:
  v49 = *(int *)(a3 + 20);
  v50 = *(_QWORD *)&a2[v49];
  v51 = *(_QWORD *)&a1[v49];
  *(_QWORD *)&a1[v49] = v50;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRelease(v51);
  v52 = *(int *)(a3 + 24);
  v53 = *(_QWORD *)&a2[v52];
  v54 = *(_QWORD *)&a1[v52];
  *(_QWORD *)&a1[v52] = v53;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRelease(v54);
  return a1;
}

char *sub_100442B34(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v10 = v6[9];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  return a1;
}

char *sub_100442C48(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      v12 = v6[9];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    v16 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10007C720((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_6;
  }
  v22 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(a1, a2, v22);
  v23 = v6[5];
  v24 = *(void **)&a1[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];

  v25 = v6[6];
  v26 = *(_QWORD *)&a1[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  swift_bridgeObjectRelease(v26);
  v27 = v6[7];
  v28 = *(void **)&a1[v27];
  *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];

  v29 = v6[8];
  v30 = *(void **)&a1[v29];
  *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];

  v31 = v6[9];
  v32 = &a1[v31];
  v33 = &a2[v31];
  if (*(_QWORD *)&a1[v31 + 24])
    sub_100068588(v32);
  v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
LABEL_7:
  v17 = *(int *)(a3 + 20);
  v18 = *(_QWORD *)&a1[v17];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  swift_bridgeObjectRelease(v18);
  v19 = *(int *)(a3 + 24);
  v20 = *(_QWORD *)&a1[v19];
  *(_QWORD *)&a1[v19] = *(_QWORD *)&a2[v19];
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_100442E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10006922C(&qword_10064A600);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100442EBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10006922C(&qword_10064A600);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

id *sub_100442F38(_QWORD *a1, uint64_t a2)
{
  id v3;
  id *result;
  _BYTE v5[56];
  id v6[7];

  sub_100444DF0(a1, (uint64_t)v6);
  v3 = v6[0];
  result = (id *)sub_10000CB4C((uint64_t)v6, &qword_100655B80);
  if (v3)
  {
    sub_1000A0110(a2, (uint64_t)v5);
    sub_100087C98((uint64_t)v6, (uint64_t)v5);
    return sub_1000A00DC(v6);
  }
  return result;
}

void sub_100442FA8(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[3];
  uint64_t v22;
  _BYTE v23[24];
  _OWORD v24[3];
  uint64_t v25;

  sub_1000A0110((uint64_t)a1, (uint64_t)v24);
  swift_beginAccess(a3, v23, 32, 0);
  v8 = *a3;
  if (*(_QWORD *)(*a3 + 16) && (v9 = sub_10007EF1C(a2), (v10 & 1) != 0))
  {
    sub_1000A0110(*(_QWORD *)(v8 + 56) + 56 * v9, (uint64_t)v21);
  }
  else
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
  }
  swift_endAccess(v23);
  swift_beginAccess(a3, v23, 33, 0);
  sub_10008A81C((uint64_t)v21, (id *)v24);
  swift_endAccess(v23);
  swift_beginAccess(a4, v21, 0, 0);
  v11 = *a4;
  swift_bridgeObjectRetain(*a4);
  v12 = sub_100089948(a1, v11);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
    sub_1000A0110((uint64_t)a2, (uint64_t)v24);
    swift_beginAccess(a4, v23, 33, 0);
    v13 = (_QWORD *)*a4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
    *a4 = (uint64_t)v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v13 = sub_1001549F4(0, v13[2] + 1, 1, v13);
      *a4 = (uint64_t)v13;
    }
    v16 = v13[2];
    v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      v13 = sub_1001549F4((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
      *a4 = (uint64_t)v13;
    }
    v13[2] = v16 + 1;
    v17 = &v13[7 * v16];
    v18 = v24[0];
    v19 = v24[1];
    v20 = v24[2];
    v17[10] = v25;
    *((_OWORD *)v17 + 3) = v19;
    *((_OWORD *)v17 + 4) = v20;
    *((_OWORD *)v17 + 2) = v18;
    swift_endAccess(v23);
  }
}

double sub_100443170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100446B24(a4);
}

id *sub_100443178(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[7];
  id v12;
  id v13;
  id v14;
  ValueMetadata *v15;
  unint64_t v16;
  unint64_t v17;

  v12 = a1;
  v3 = a1;
  v4 = objc_msgSend(v3, "fileProviderItem");
  if (v4)
  {
    v5 = v4;
    v15 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    v16 = sub_1000A0258();
    v17 = sub_1000A02E0();
    v13 = v3;
    v14 = v5;
  }
  else
  {
    v6 = objc_msgSend(v3, "representedTag");
    if (v6)
    {
      v7 = v6;
      v8 = v3;
      v9 = (id)FPTagFromDOCTag(v7);
      v15 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      v16 = sub_100446EF4();
      v17 = sub_100446F38();

      v13 = v8;
      v14 = v9;
    }
    else
    {
      v15 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      v16 = sub_100446DA0();
      v17 = sub_100446DE4();
      v13 = v3;
    }
  }
  sub_10009FF74(a2, v11);
  return sub_10008A81C((uint64_t)v11, &v12);
}

uint64_t sub_1004432A8()
{
  uint64_t v0;

  return sub_10044656C(*(void **)(v0 + 8));
}

Swift::Int sub_1004432B4()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD v4[9];

  v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  v2 = v1;
  NSObject.hash(into:)(v4);

  return Hasher._finalize()();
}

Swift::Int sub_100443300(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD v5[9];

  v2 = *(void **)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  v3 = v2;
  NSObject.hash(into:)(v5);

  return Hasher._finalize()();
}

uint64_t sub_100443348()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;

  v1 = objc_msgSend(*(id *)(v0 + 8), "label");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v5._countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  return 979853652;
}

uint64_t sub_1004433C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v5) & 1) != 0)
    return static NSObject.== infix(_:_:)(v2, v4) & 1;
  else
    return 0;
}

void sub_10044343C(uint64_t a1, id a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = objc_msgSend(a2, "sourceIdentifier");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  String.hash(into:)(a1, v5, v6);

  swift_bridgeObjectRelease(v7);
  v8 = objc_msgSend(a2, "displayName");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v12);
    String.hash(into:)(a1, v10, v12);
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

unint64_t sub_10044350C(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;

  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend(a1, "displayName");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v6 = (void *)0xE200000000000000;
    v4 = 16191;
  }
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  return 0xD00000000000001CLL;
}

Swift::Int sub_1004435C8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, 0);
  v2 = objc_msgSend(a1, "sourceIdentifier");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;
  String.hash(into:)(v12, v3, v4);

  swift_bridgeObjectRelease(v5);
  v6 = objc_msgSend(a1, "displayName");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v10);
    String.hash(into:)(v12, v8, v10);
    swift_bridgeObjectRelease_n(v10, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1004436B8()
{
  void **v0;

  return sub_1004435C8(*v0);
}

void sub_1004436C0(uint64_t a1)
{
  id *v1;

  sub_10044343C(a1, *v1);
}

Swift::Int sub_1004436C8(uint64_t a1)
{
  void **v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[9];

  v2 = *v1;
  Hasher.init(_seed:)(v13, a1);
  v3 = objc_msgSend(v2, "sourceIdentifier");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;
  String.hash(into:)(v13, v4, v5);

  swift_bridgeObjectRelease(v6);
  v7 = objc_msgSend(v2, "displayName");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v11);
    String.hash(into:)(v13, v9, v11);
    swift_bridgeObjectRelease_n(v11, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

unint64_t sub_1004437B4()
{
  void **v0;

  return sub_10044350C(*v0);
}

uint64_t sub_1004437BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  return static NSObject.== infix(_:_:)(v2, v3) & 1;
}

Swift::Int sub_10044380C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  v1 = v0[4];
  v2 = v0[6];
  sub_10007E7A0(v0 + 1, v1);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_100443870(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[4];
  v4 = v1[6];
  sub_10007E7A0(v1 + 1, v3);
  return dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
}

Swift::Int sub_1004438BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  v2 = v1[4];
  v3 = v1[6];
  sub_10007E7A0(v1 + 1, v2);
  dispatch thunk of Hashable.hash(into:)(v5, v2, v3);
  return Hasher._finalize()();
}

BOOL sub_10044391C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, 0);
  v4 = a1[4];
  v5 = a1[6];
  sub_10007E7A0(a1 + 1, v4);
  dispatch thunk of Hashable.hash(into:)(v11, v4, v5);
  v6 = Hasher._finalize()();
  Hasher.init(_seed:)(v11, 0);
  v7 = a2 + 1;
  v8 = a2[4];
  v9 = a2[6];
  sub_10007E7A0(v7, v8);
  dispatch thunk of Hashable.hash(into:)(v11, v8, v9);
  return v6 == Hasher._finalize()();
}

uint64_t sub_1004439D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  v2 = v0[5];
  sub_10007E7A0(v0 + 1, v1);
  return dispatch thunk of CustomStringConvertible.description.getter(v1, v2);
}

uint64_t sub_100443A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100140624(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v21 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002E55F0();
      v10 = v21;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for URL(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_1001D0788(v13 + *(_QWORD *)(v15 + 72) * v7, a2, type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    sub_1002E3954(v7, v10);
    v16 = *v3;
    *v3 = v10;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19, v20);
  }
}

uint64_t sub_100443B4C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_1001406BC(a1, v7);
  LOBYTE(a1) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v21 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002E57F8();
      v12 = v21;
    }

    v13 = *(_QWORD *)(v12 + 56);
    v14 = type metadata accessor for RestorableSettings(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_1001D0788(v13 + *(_QWORD *)(v15 + 72) * v9, a3, type metadata accessor for RestorableSettings);
    sub_1002E3978(v9, v12);
    v16 = *v4;
    *v4 = v12;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a3, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for RestorableSettings(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19, v20);
  }
}

uint64_t sub_100443C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10007EF98(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002E5A3C();
      v10 = v19;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo(0);
    v15 = *(_QWORD *)(updated - 8);
    sub_1001D0788(v13 + *(_QWORD *)(v15 + 72) * v7, a2, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    sub_1002E3BF4(v7, v10);
    v16 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, updated);
  }
  else
  {
    v18 = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

double sub_100443DB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_10007EF08(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002E7EFC();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_100079B28((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_1002E41B8(v9, v12);
    v13 = *v4;
    *v4 = v12;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_100443EA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;

  v3 = v2;
  v5 = *v2;
  v6 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain(v5);
  v8 = sub_100144398(v6, v7);
  LOBYTE(v7) = v9;
  swift_bridgeObjectRelease(v5);
  if ((v7 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v11 = *v3;
    v23 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002E883C();
      v11 = v23;
    }
    v12 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 40 * v8);
    v13 = v12[1];
    v14 = v12[3];
    swift_release(v12[4]);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v13);
    v15 = *(_QWORD *)(v11 + 56);
    v16 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v17 = *(_QWORD *)(v16 - 8);
    sub_1001D0788(v15 + *(_QWORD *)(v17 + 72) * v8, a2, type metadata accessor for ScrollPositionInfo.ItemOffset);
    sub_1002E438C(v8, v11);
    v18 = *v3;
    *v3 = v11;
    v19 = swift_bridgeObjectRelease(v18);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v17 + 56))(a2, 0, 1, v16, v19);
  }
  else
  {
    v21 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21, v22);
  }
}

uint64_t sub_100443FE8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v3 = sub_100140784(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v7 = *v1;
  v11 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002E8C78();
    v7 = v11;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v5);
  sub_1002E45C4(v5, v7);
  v9 = *v2;
  *v2 = v7;
  swift_bridgeObjectRelease(v9);
  return v8;
}

uint64_t sub_1004440A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100140E34(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002E93D4();
      v10 = v19;
    }

    v11 = *(_QWORD *)(v10 + 56);
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 32))(a2, v11 + *(_QWORD *)(v13 + 72) * v7, v12);
    sub_1002E4940(v7, v10);
    v14 = *v3;
    *v3 = v10;
    v15 = swift_bridgeObjectRelease(v14);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v13 + 56))(a2, 0, 1, v12, v15);
  }
  else
  {
    v17 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17, v18);
  }
}

double sub_1004441C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1001410A0(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002EAA78();
      v10 = v13;
    }

    sub_1000E85C4((__int128 *)(*(_QWORD *)(v10 + 56) + 40 * v7), a2);
    sub_1002E4CE0(v7, v10);
    v11 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1004442B0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10007EF1C(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002EAC40();
      v10 = v15;
    }
    sub_1000A00DC((id *)(*(_QWORD *)(v10 + 48) + 56 * v7));
    v11 = *(_QWORD *)(v10 + 56) + 56 * v7;
    v12 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v11;
    *(_OWORD *)(a2 + 16) = v12;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v11 + 32);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(v11 + 48);
    sub_1002E4EA4(v7, v10);
    v13 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    *(_QWORD *)(a2 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

Swift::Int sub_1004443B4(uint64_t a1, uint64_t a2)
{
  return sub_1004443FC(a1, a2, (uint64_t *)&unk_1006419C0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr, (void (*)(unint64_t))sub_1000CA39C);
}

Swift::Int sub_1004443D8(uint64_t a1, uint64_t a2)
{
  return sub_1004443FC(a1, a2, &qword_100655C30, &qword_100651EE0, UIOpenURLContext_ptr, (void (*)(unint64_t))sub_1000CA960);
}

Swift::Int sub_1004443FC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, _QWORD *a5, void (*a6)(unint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    sub_10006922C(a3);
    v11 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v30 = v11;
    v12 = __CocoaSet.makeIterator()(a1);
    v13 = __CocoaSet.Iterator.next()(v12);
    if (v13)
    {
      v14 = v13;
      v15 = sub_10004F2F0(0, a4, a5);
      do
      {
        v28 = v14;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        v11 = v30;
        v23 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v23)
        {
          a6(v23 + 1);
          v11 = v30;
        }
        v16 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v11 + 40));
        v18 = v11 + 56;
        v19 = -1 << *(_BYTE *)(v11 + 32);
        v20 = result & ~v19;
        v21 = v20 >> 6;
        if (((-1 << v20) & ~*(_QWORD *)(v11 + 56 + 8 * (v20 >> 6))) != 0)
        {
          v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 56 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v24 = 0;
          v25 = (unint64_t)(63 - v19) >> 6;
          do
          {
            if (++v21 == v25 && (v24 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v26 = v21 == v25;
            if (v21 == v25)
              v21 = 0;
            v24 |= v26;
            v27 = *(_QWORD *)(v18 + 8 * v21);
          }
          while (v27 == -1);
          v22 = __clz(__rbit64(~v27)) + (v21 << 6);
        }
        *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
        *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v22) = v16;
        ++*(_QWORD *)(v11 + 16);
        v14 = __CocoaSet.Iterator.next()(result);
      }
      while (v14);
    }
    swift_release(v12);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v11;
}

Swift::Int sub_1004445F8(uint64_t a1, uint64_t a2)
{
  return sub_1004443FC(a1, a2, &qword_100653160, (unint64_t *)&unk_100641970, FINode_ptr, (void (*)(unint64_t))sub_100082AD4);
}

Swift::Int sub_10044461C(uint64_t a1, uint64_t a2)
{
  return sub_1004443FC(a1, a2, &qword_1006419F0, (unint64_t *)&qword_1006419B0, FPItem_ptr, (void (*)(unint64_t))sub_1000CBC08);
}

unint64_t sub_100444644(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1004446C4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    if ((v7 & 1) != 0)
    {
      v8 = sub_1004453AC(v5, (uint64_t)v6, &qword_100655C30, &qword_100651EE0, UIOpenURLContext_ptr, (void (*)(unint64_t))sub_1000CA960);
      swift_bridgeObjectRelease(v4);
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v9 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v10 = NSObject._rawHashValue(seed:)(v9);
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    goto LABEL_15;
  sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
  v13 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v12);
  v14 = static NSObject.== infix(_:_:)(v13, a1);

  if ((v14 & 1) == 0)
  {
    v15 = ~v11;
    do
    {
      v12 = (v12 + 1) & v15;
      if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_15;
      v16 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v12);
      v17 = static NSObject.== infix(_:_:)(v16, a1);

    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v19 = *v2;
  v22 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000CD770();
    v19 = v22;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v12);
  sub_100445BE4(v12);
  v20 = *v2;
  *v2 = v22;
  swift_bridgeObjectRelease(v20);
  return v8;
}

uint64_t sub_1004448B8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[9];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v8 = v7;
  Hasher.init(_seed:)(v33, v5);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v33, v6, v8);
  v9 = Hasher._finalize()();
  swift_bridgeObjectRelease(v8);
  v10 = -1 << *(_BYTE *)(v4 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11));
  v14 = v13;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v12 == v15 && v14 == v16)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v14, 2);
  }
  else
  {
    v18 = v16;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v18);
    if ((v19 & 1) == 0)
    {
      v20 = ~v10;
      do
      {
        v11 = (v11 + 1) & v20;
        if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          goto LABEL_15;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11));
        v14 = v22;
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        if (v21 == v23 && v14 == v24)
          goto LABEL_16;
        v26 = v24;
        v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v14, v23, v24, 0);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v26);
      }
      while ((v27 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v30 = *v2;
  v33[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000CCF2C();
    v30 = v33[0];
  }
  v28 = *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * v11);
  sub_100445A04(v11);
  v31 = *v2;
  *v2 = v33[0];
  swift_bridgeObjectRelease(v31);
  return v28;
}

uint64_t sub_100444AC8(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    if ((v7 & 1) != 0)
    {
      v8 = sub_1004453AC(v5, (uint64_t)v6, &qword_100653160, (unint64_t *)&unk_100641970, FINode_ptr, (void (*)(unint64_t))sub_100082AD4);
      swift_bridgeObjectRelease(v4);
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v9 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v10 = NSObject._rawHashValue(seed:)(v9);
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    goto LABEL_15;
  sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
  v13 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v12);
  v14 = static NSObject.== infix(_:_:)(v13, a1);

  if ((v14 & 1) == 0)
  {
    v15 = ~v11;
    do
    {
      v12 = (v12 + 1) & v15;
      if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_15;
      v16 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v12);
      v17 = static NSObject.== infix(_:_:)(v16, a1);

    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v19 = *v2;
  v22 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000CDFF0();
    v19 = v22;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v12);
  sub_100445BE4(v12);
  v20 = *v2;
  *v2 = v22;
  swift_bridgeObjectRelease(v20);
  return v8;
}

uint64_t sub_100444CBC(char a1)
{
  _QWORD *v1;
  Swift::UInt v2;
  uint64_t v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[9];

  v2 = a1 & 1;
  v3 = *v1;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v1 + 40));
  Hasher._combine(_:)(v2);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 2;
  v7 = *(_QWORD *)(v3 + 48);
  if (((((_DWORD)v2 == 0) ^ *(unsigned __int8 *)(v7 + v6)) & 1) == 0)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return 2;
    }
    while (((((_DWORD)v2 == 0) ^ *(unsigned __int8 *)(v7 + v6)) & 1) == 0);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v10 = *v1;
  v14[0] = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000CD438();
    v10 = v14[0];
  }
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 48) + v6);
  sub_100445D84(v6);
  v12 = *v1;
  *v1 = v14[0];
  swift_bridgeObjectRelease(v12);
  return v11;
}

double sub_100444DF0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[10];

  v5 = *v2;
  Hasher.init(_seed:)(v30, *(_QWORD *)(*v2 + 40));
  v6 = a1[4];
  v7 = a1[6];
  sub_10007E7A0(a1 + 1, v6);
  swift_bridgeObjectRetain(v5);
  dispatch thunk of Hashable.hash(into:)(v30, v6, v7);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v24 = v2;
    v25 = a2;
    v11 = ~v9;
    while (1)
    {
      sub_1000A0110(*(_QWORD *)(v5 + 48) + 56 * v10, (uint64_t)&v26);
      Hasher.init(_seed:)(v30, 0);
      v12 = v28;
      v13 = v29;
      sub_10007E7A0(v27, v28);
      dispatch thunk of Hashable.hash(into:)(v30, v12, v13);
      v14 = Hasher._finalize()();
      Hasher.init(_seed:)(v30, 0);
      v15 = a1[4];
      v16 = a1[6];
      sub_10007E7A0(a1 + 1, v15);
      dispatch thunk of Hashable.hash(into:)(v30, v15, v16);
      v17 = Hasher._finalize()();
      sub_1000A00DC(&v26);
      if (v14 == v17)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease(v5);
        a2 = v25;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v24);
    v20 = *v24;
    v30[0] = *v24;
    *v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000CD90C();
      v20 = v30[0];
    }
    v21 = *(_QWORD *)(v20 + 48) + 56 * v10;
    v22 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v21;
    *(_OWORD *)(v25 + 16) = v22;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v21 + 32);
    *(_QWORD *)(v25 + 48) = *(_QWORD *)(v21 + 48);
    sub_100445F2C(v10);
    v23 = *v24;
    *v24 = v30[0];
    *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  }
  else
  {
    swift_bridgeObjectRelease(v5);
LABEL_7:
    *(_QWORD *)(a2 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

void sub_100445028(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(*(_QWORD *)v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_10044508C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  swift_bridgeObjectRetain(v0);
  String.hash(into:)(&v3, 0x796C746E65636572, 0xEC00000064657355);
  swift_bridgeObjectRelease(0xEC00000064657355);
  v1 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v0 + 32));
  if (((*(_QWORD *)(v0 + 56 + ((v1 >> 3) & 0xFFFFFFFFFFFFF8)) >> v1) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v0);
  return 6;
}

uint64_t sub_1004453AC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, _QWORD *a5, void (*a6)(unint64_t))
{
  Swift::Int *v6;
  Swift::Int *v11;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t result;
  Swift::Int v27;

  v11 = v6;
  swift_bridgeObjectRelease(*v11);
  v14 = __CocoaSet.count.getter(a1);
  v15 = swift_unknownObjectRetain(a1);
  v16 = sub_1004443FC(v15, v14, a3, a4, a5, a6);
  v27 = v16;
  v17 = *(_QWORD *)(v16 + 40);
  swift_retain();
  v18 = NSObject._rawHashValue(seed:)(v17);
  v19 = -1 << *(_BYTE *)(v16 + 32);
  v20 = v18 & ~v19;
  if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
  {
    sub_10004F2F0(0, a4, a5);
    v21 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v20);
    v22 = static NSObject.== infix(_:_:)(v21, a2);

    if ((v22 & 1) != 0)
    {
LABEL_6:
      swift_release(v16);
      v16 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v20);
      sub_100445BE4(v20);
      if ((static NSObject.== infix(_:_:)(a2, v16) & 1) != 0)
      {
        *v11 = v27;
        return v16;
      }
      __break(1u);
    }
    else
    {
      v23 = ~v19;
      while (1)
      {
        v20 = (v20 + 1) & v23;
        if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          break;
        v24 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v20);
        v25 = static NSObject.== infix(_:_:)(v24, a2);

        if ((v25 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v16);
    __break(1u);
  }
  result = swift_release(v16);
  __break(1u);
  return result;
}

unint64_t sub_10044555C(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  Swift::UInt v13;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v12 = *v10;
        v11 = v10[1];
        Hasher.init(_seed:)(v22, *(_QWORD *)(v3 + 40));
        switch(v11)
        {
          case 0uLL:
            v13 = 0;
            goto LABEL_19;
          case 1uLL:
            v13 = 1;
            goto LABEL_19;
          case 2uLL:
            v13 = 2;
            goto LABEL_19;
          case 3uLL:
            v13 = 3;
            goto LABEL_19;
          case 4uLL:
            v13 = 4;
            goto LABEL_19;
          case 5uLL:
            v13 = 5;
            goto LABEL_19;
          case 6uLL:
            v13 = 6;
            goto LABEL_19;
          case 7uLL:
            v13 = 7;
            goto LABEL_19;
          case 8uLL:
            v13 = 8;
            goto LABEL_19;
          case 9uLL:
            v13 = 9;
            goto LABEL_19;
          case 0xAuLL:
            v13 = 11;
LABEL_19:
            Hasher._combine(_:)(v13);
            break;
          default:
            Hasher._combine(_:)(0xAuLL);
            swift_bridgeObjectRetain(v11);
            String.hash(into:)(v22, v12, v11);
            break;
        }
        v14 = Hasher._finalize()();
        sub_1000D13D0(v12, v11);
        v15 = v14 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v15 < v9)
            goto LABEL_5;
        }
        else if (v15 >= v9)
        {
          goto LABEL_25;
        }
        if (v2 >= (uint64_t)v15)
        {
LABEL_25:
          v16 = *(_QWORD *)(v3 + 48);
          v17 = (_OWORD *)(v16 + 16 * v2);
          v18 = (_OWORD *)(v16 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x1004457E0);
  }
  *(_QWORD *)(v3 + 16) = v21;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_10044580C(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  Swift::UInt v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      while (1)
      {
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
        Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
        if (v10 == 2)
          break;
        if (v10 == 3)
        {
          v11 = 2;
          goto LABEL_12;
        }
        if (v10 == 4)
        {
          v11 = 3;
LABEL_12:
          Hasher._combine(_:)(v11);
          goto LABEL_14;
        }
        Hasher._combine(_:)(0);
        Hasher._combine(_:)(v10 & 1);
LABEL_14:
        v12 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9)
            goto LABEL_5;
        }
        else if (v12 >= v9)
        {
          goto LABEL_19;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_19:
          v13 = *(_QWORD *)(v3 + 48);
          v14 = (_BYTE *)(v13 + v2);
          v15 = (_BYTE *)(v13 + v6);
          if (v2 != v6 || (v2 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_22;
      }
      v11 = 1;
      goto LABEL_12;
    }
LABEL_22:
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100445A04(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::Int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;
        Hasher.init(_seed:)(v24, v10);
        v15 = v11;
        String.hash(into:)(v24, v12, v14);
        v16 = Hasher._finalize()();

        swift_bridgeObjectRelease(v14);
        v17 = v16 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v17 < v9)
            goto LABEL_5;
        }
        else if (v17 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v17)
        {
LABEL_11:
          v18 = *(_QWORD *)(v3 + 48);
          v19 = (_QWORD *)(v18 + 8 * v2);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v19 >= v20 + 1))
          {
            *v19 = *v20;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v23;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100445BE4(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100445D84(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::UInt v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
        Hasher.init(_seed:)(v18, *(_QWORD *)(v3 + 40));
        Hasher._combine(_:)(v10);
        v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_BYTE *)(v12 + v2);
          v14 = (_BYTE *)(v12 + v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_100445F2C(unint64_t a1)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD v26[9];
  id v27;
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v25 = v1;
    v7 = ~v5;
    swift_retain();
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v13 = v4;
        sub_1000A0110(*(_QWORD *)(v3 + 48) + 56 * v6, (uint64_t)&v27);
        Hasher.init(_seed:)(v26, *(_QWORD *)(v3 + 40));
        v14 = v29;
        v15 = v30;
        sub_10007E7A0(v28, v29);
        dispatch thunk of Hashable.hash(into:)(v26, v14, v15);
        v16 = Hasher._finalize()();
        sub_1000A00DC(&v27);
        v17 = v16 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v17 < v9)
          {
            v4 = v13;
          }
          else
          {
            v4 = v13;
            if (v2 >= v17)
              goto LABEL_12;
          }
        }
        else
        {
          v4 = v13;
          if (v17 >= v9 || v2 >= v17)
          {
LABEL_12:
            v18 = *(_QWORD *)(v3 + 48);
            v19 = v18 + 56 * v2;
            v20 = (__int128 *)(v18 + 56 * v6);
            if (v2 != v6 || (v2 = v6, v19 >= (unint64_t)v20 + 56))
            {
              v10 = *v20;
              v11 = v20[1];
              v12 = v20[2];
              *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
              *(_OWORD *)(v19 + 16) = v11;
              *(_OWORD *)(v19 + 32) = v12;
              *(_OWORD *)v19 = v10;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
}

unint64_t sub_100446160(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _QWORD v17[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)(v17, *(_QWORD *)(v3 + 40));
        Hasher._combine(_:)(0);
        v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_BYTE *)(v11 + v2);
          v13 = (_BYTE *)(v11 + v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100446304(unint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v12[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
      Hasher.init(_seed:)(v12, *(_QWORD *)(v3 + 40));
      __asm { BR              X8 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x100446554);
  }
  *(_QWORD *)(v3 + 16) = v11;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_10044656C(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;

  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend(a1, "itemID");
  v3 = objc_msgSend(v2, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);

  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 0x3A656D616E202CLL;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  v9 = objc_msgSend(a1, "displayName");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v12);
  return 0x3A44497066;
}

void sub_100446694(uint64_t a1, void (*a2)(id, id, __n128))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  __n128 v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v30 = 0;
    v4 = 0;
    v5 = 0;
    v6 = __CocoaDictionary.makeIterator()(a1) | 0x8000000000000000;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v4 = ~v7;
    v30 = a1 + 64;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 64);
    v6 = a1;
  }
  v10 = swift_bridgeObjectRetain(v3);
  v11 = 0;
  v29 = (unint64_t)(v4 + 64) >> 6;
  v28 = (char *)&type metadata for Swift.AnyObject + 8;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_12;
  while (1)
  {
    if (v5)
    {
      v12 = (v5 - 1) & v5;
      v13 = __clz(__rbit64(v5)) | (v11 << 6);
      v14 = v11;
      goto LABEL_31;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v23 >= v29)
      goto LABEL_34;
    v24 = *(_QWORD *)(v30 + 8 * v23);
    v14 = v11 + 1;
    if (!v24)
    {
      v14 = v11 + 2;
      if (v11 + 2 >= v29)
        goto LABEL_34;
      v24 = *(_QWORD *)(v30 + 8 * v14);
      if (!v24)
      {
        v14 = v11 + 3;
        if (v11 + 3 >= v29)
          goto LABEL_34;
        v24 = *(_QWORD *)(v30 + 8 * v14);
        if (!v24)
        {
          v14 = v11 + 4;
          if (v11 + 4 >= v29)
            goto LABEL_34;
          v24 = *(_QWORD *)(v30 + 8 * v14);
          if (!v24)
          {
            v14 = v11 + 5;
            if (v11 + 5 >= v29)
              goto LABEL_34;
            v24 = *(_QWORD *)(v30 + 8 * v14);
            if (!v24)
            {
              v25 = v11 + 6;
              while (v29 != v25)
              {
                v24 = *(_QWORD *)(v30 + 8 * v25++);
                if (v24)
                {
                  v14 = v25 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_10021C590(v6);
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v12 = (v24 - 1) & v24;
    v13 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v26 = 8 * v13;
    v27 = *(void **)(*(_QWORD *)(v6 + 56) + v26);
    v20 = *(id *)(*(_QWORD *)(v6 + 48) + v26);
    v21 = v27;
    if (!v20)
      goto LABEL_34;
    while (1)
    {
      a2(v20, v21, v22);

      v11 = v14;
      v5 = v12;
      if ((v6 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v15 = __CocoaDictionary.Iterator.next()(v10);
      if (v15)
      {
        v17 = v15;
        v18 = v16;
        v31 = v15;
        v19 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        swift_unknownObjectRetain(v17);
        swift_dynamicCast(&v32, &v31, v28, v19, 7);
        v20 = v32;
        swift_unknownObjectRelease(v17);
        v31 = v18;
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v32, &v31, v28, v19, 7);
        v21 = v32;
        v22 = swift_unknownObjectRelease(v18);
        v14 = v11;
        v12 = v5;
        if (v20)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

void sub_100446978(uint64_t a1, void (*a2)(_BYTE *, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _BYTE v16[56];
  _BYTE v17[56];

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      goto LABEL_23;
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_23;
      v14 = *(_QWORD *)(v4 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_23;
        v14 = *(_QWORD *)(v4 + 8 * v9);
        if (!v14)
        {
          v9 = v13 + 3;
          if (v13 + 3 >= v8)
            goto LABEL_23;
          v14 = *(_QWORD *)(v4 + 8 * v9);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_5:
    v12 = 56 * v11;
    sub_1000A0110(*(_QWORD *)(a1 + 48) + 56 * v11, (uint64_t)v16);
    sub_1000A0110(*(_QWORD *)(a1 + 56) + v12, (uint64_t)v17);
    a2(v16, v17);
    sub_10000CB4C((uint64_t)v16, &qword_100655B88);
  }
  v15 = v13 + 4;
  if (v15 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v14 = *(_QWORD *)(v4 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

double sub_100446B24(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  if (!((unint64_t)a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      return result;
    goto LABEL_3;
  }
  if (a1 < 0)
    v8 = a1;
  else
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (v9 >= 1)
  {
LABEL_3:
    v3 = swift_allocObject(&unk_1005EC4D8, 24, 7);
    *(_QWORD *)(v3 + 16) = v1;
    v10[4] = sub_1000A10B0;
    v11 = v3;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10004A82C;
    v10[3] = &unk_1005EC4F0;
    v4 = _Block_copy(v10);
    v5 = v11;
    v6 = v1;
    swift_release(v5);
    DOCRunInMainThread(v4);
    _Block_release(v4);
  }
  return result;
}

uint64_t sub_100446C18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100446C3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100446C60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100446C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(sub_10006922C(&qword_10064A600) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 72) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);

    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6]));
    v8 = (_QWORD *)(v5 + v6[9]);
    if (v8[3])
      sub_100068588(v8);
  }
  v9 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v10, v2 | 7);
}

unint64_t sub_100446DA0()
{
  unint64_t result;

  result = qword_100655B40;
  if (!qword_100655B40)
  {
    result = swift_getWitnessTable(&unk_1004E9020, &type metadata for DOCIdentityHashableLocation.OtherImpl);
    atomic_store(result, (unint64_t *)&qword_100655B40);
  }
  return result;
}

unint64_t sub_100446DE4()
{
  unint64_t result;

  result = qword_100655B48;
  if (!qword_100655B48)
  {
    result = swift_getWitnessTable(&unk_1004E8FE0, &type metadata for DOCIdentityHashableLocation.OtherImpl);
    atomic_store(result, (unint64_t *)&qword_100655B48);
  }
  return result;
}

id *sub_100446E28(_QWORD *a1, uint64_t a2)
{
  return sub_100442F38(a1, a2);
}

uint64_t sub_100446E30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_100068588((_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 88));

  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100446E7C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100446EA0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

id *sub_100446EEC(void *a1, void *a2)
{
  return sub_100443178(a1, a2);
}

unint64_t sub_100446EF4()
{
  unint64_t result;

  result = qword_100655B58;
  if (!qword_100655B58)
  {
    result = swift_getWitnessTable(&unk_1004E8FB8, &type metadata for DOCIdentityHashableLocation.FPTagImpl);
    atomic_store(result, (unint64_t *)&qword_100655B58);
  }
  return result;
}

unint64_t sub_100446F38()
{
  unint64_t result;

  result = qword_100655B60;
  if (!qword_100655B60)
  {
    result = swift_getWitnessTable(&unk_1004E8F78, &type metadata for DOCIdentityHashableLocation.FPTagImpl);
    atomic_store(result, (unint64_t *)&qword_100655B60);
  }
  return result;
}

void sub_100446F7C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  sub_100442FA8(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_100446F84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100446FC0()
{
  uint64_t v0;

  sub_100068588((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100446FF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_100447004()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, *(_QWORD *)(*v0 + 40));
  Hasher._combine(_:)(0);
  v2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v1 + 32));
  v3 = (1 << v2) & *(_QWORD *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8) + 56);
  if (v3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v0);
    v7[0] = *v0;
    *v0 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
      sub_1000CDAE0();
    sub_100446160(v2);
    v5 = *v0;
    *v0 = v7[0];
    swift_bridgeObjectRelease(v5);
  }
  return v3 == 0;
}

uint64_t sub_1004470D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *sub_1004470FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100441A74(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_100447104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004418C4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_10044710C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  if (v7[3])
    sub_100068588(v7);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1004471CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10044720C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;

  v1 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  if (v7[3])
    sub_100068588(v7);
  v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

double sub_1004472F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10043FA38(a1, a2, v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100447364()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  if (v7[3])
    sub_100068588(v7);
  v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8));

  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v3 | 7);
}

double sub_10044745C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10043FD5C(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1004474B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004474E4()
{
  uint64_t v0;

  return sub_100440790(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1004474F0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;

  v1 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  if (v7[3])
    sub_100068588(v7);
  v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v3 | 7);
}

uint64_t sub_1004475D4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10043FFB8(a1, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_100447640()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100447664()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  if (v7[3])
    sub_100068588(v7);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_100447730(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 201) = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserHistoryItem.SearchContext()
{
  return &type metadata for DOCBrowserHistoryItem.SearchContext;
}

ValueMetadata *type metadata accessor for DOCIdentityHashableLocation.FPItemImpl()
{
  return &type metadata for DOCIdentityHashableLocation.FPItemImpl;
}

ValueMetadata *type metadata accessor for DOCIdentityHashableLocation.FPTagImpl()
{
  return &type metadata for DOCIdentityHashableLocation.FPTagImpl;
}

void **assignWithCopy for DOCIdentityHashableLocation(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  sub_1004477D8(v6, v4);
  return a1;
}

_QWORD *sub_1004477D8(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for DOCIdentityHashableLocation(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  sub_100068588((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DOCIdentityHashableLocation.OtherImpl()
{
  return &type metadata for DOCIdentityHashableLocation.OtherImpl;
}

unint64_t sub_1004479B0()
{
  unint64_t result;

  result = qword_100655C48;
  if (!qword_100655C48)
  {
    result = swift_getWitnessTable(&unk_1004E8E70, &type metadata for DOCIdentityHashableLocation.FPTagImpl);
    atomic_store(result, (unint64_t *)&qword_100655C48);
  }
  return result;
}

unint64_t sub_1004479F8()
{
  unint64_t result;

  result = qword_100655C50;
  if (!qword_100655C50)
  {
    result = swift_getWitnessTable(&unk_1004E8DF8, &type metadata for DOCIdentityHashableLocation.OtherImpl);
    atomic_store(result, (unint64_t *)&qword_100655C50);
  }
  return result;
}

void sub_100447B1C(CGContext *a1)
{
  double *v1;
  double *v2;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat Height;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const __CTLine *v14;
  const __CTLine *v15;
  CGFloat *v16;
  char v17;
  const __CTLine *v18;
  double v19;
  CGFloat v20;
  CGFloat v21;
  double v22;
  uint64_t v23;
  double MinX;
  double v25;
  void (*v26)(CGContext *);
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  CGFloat v33;
  CGFloat MinY;
  void (*v35)(CGContext *);
  CGFloat v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  unint64_t v44;
  uint64_t v45;
  CGFloat v46;
  uint64_t v47;
  uint64_t v48;
  CGFloat tx;
  double v50;
  double rect;
  CGFloat a;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  CGAffineTransform v57;
  _QWORD v58[2];
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v2 = v1;
  v57.a = 1.0;
  v57.b = 0.0;
  v57.c = 0.0;
  v57.d = 1.0;
  v57.tx = 0.0;
  v57.ty = 0.0;
  CGContextSetTextMatrix(a1, &v57);
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v59.origin.x = v4;
  v59.origin.y = v5;
  v59.size.width = v6;
  v59.size.height = v7;
  Height = CGRectGetHeight(v59);
  CGContextTranslateCTM(a1, -v4, Height - v5);
  CGContextScaleCTM(a1, 1.0, -1.0);
  v60.origin.x = v4;
  v60.origin.y = v5;
  v60.size.width = v6;
  v60.size.height = v7;
  v9 = CGRectGetHeight(v60);
  v57.a = v1[9];
  v10 = *(_QWORD *)&v57.a & 0xFFFFFFFFFFFFFF8;
  a = v57.a;
  if (*(_QWORD *)&v57.a >> 62)
    goto LABEL_33;
  v11 = *(_QWORD *)((*(_QWORD *)&v57.a & 0xFFFFFFFFFFFFFF8) + 0x10);
  v12 = *((_QWORD *)v2 + 10);
  v58[0] = v12;
  sub_100449378(&v57);
  sub_100449378(v58);
  v13 = v11;
  if (!v11)
  {
LABEL_28:
    sub_1004493A0(&v57);
    v45 = v12;
LABEL_31:
    swift_bridgeObjectRelease(v45);
    return;
  }
LABEL_3:
  if ((*(_QWORD *)&a & 0xC000000000000001) != 0)
  {
    v14 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)&a);
    goto LABEL_6;
  }
  if (*(_QWORD *)(v10 + 16))
  {
    v14 = (const __CTLine *)*(id *)(*(_QWORD *)&a + 32);
LABEL_6:
    v15 = v14;
    v56 = *(_QWORD *)(v12 + 16);
    if (!v56)
    {

      goto LABEL_28;
    }
    v55 = v13 - 1;
    if (__OFSUB__(v13, 1))
      goto LABEL_40;
    v48 = v10;
    v10 = 0;
    v54 = *v2;
    v16 = (CGFloat *)(v12 + 56);
    v53 = v11 - 1;
    v47 = v12;
    v17 = 1;
    while (1)
    {
      v20 = *(v16 - 3);
      v19 = *(v16 - 2);
      v21 = *(v16 - 1);
      v22 = *v16;
      v9 = v9 - *v16 - v19;
      v61.origin.x = v20;
      v61.origin.y = v19;
      v61.size.width = v21;
      v61.size.height = *v16;
      MinX = CGRectGetMinX(v61);
      v25 = MinX - v54;
      if ((v17 & 1) != 0)
      {
        v26 = (void (*)(CGContext *))*((_QWORD *)v2 + 15);
        if (v26)
        {
          v27 = v2[12];
          v29 = *((uint64_t *)v2 + 13);
          v28 = *((uint64_t *)v2 + 14);
          v30 = *((_QWORD *)v2 + 16);
          v50 = v2[11];
          v31 = MinX - v54;
          if (*((_QWORD *)v2 + 23))
          {
            swift_retain();
            v62.origin.x = v20;
            v62.origin.y = v19;
            v62.size.width = v21;
            v62.size.height = v22;
            v32 = CGRectGetWidth(v62) + *(double *)&v29;
          }
          else
          {
            v32 = -v50 - *(double *)&v29;
            swift_retain();
          }
          v33 = v31 + v32;
          CGContextSaveGState(a1);
          v63.origin.x = v33;
          v63.origin.y = v9 + *(double *)&v28;
          v63.size.width = v50;
          v63.size.height = v27;
          tx = CGRectGetMinX(v63);
          v64.origin.x = v33;
          v64.origin.y = v9 + *(double *)&v28;
          v64.size.width = v50;
          v64.size.height = v27;
          v25 = v31;
          MinY = CGRectGetMinY(v64);
          CGContextTranslateCTM(a1, tx, MinY);
          v26(a1);
          CGContextRestoreGState(a1);
          v23 = sub_100059B10(*(uint64_t *)&v50, *(uint64_t *)&v27, v29, v28, (uint64_t)v26, v30);
        }
      }
      if (v55 == v10)
      {
        v35 = (void (*)(CGContext *))*((_QWORD *)v2 + 21);
        if (v35)
        {
          v36 = v2[18];
          v38 = *((uint64_t *)v2 + 19);
          v37 = *((uint64_t *)v2 + 20);
          rect = v2[17];
          v39 = *((_QWORD *)v2 + 22);
          if (*((_QWORD *)v2 + 23) == 1)
          {
            v40 = -rect - *(double *)&v38;
            swift_retain();
          }
          else
          {
            swift_retain();
            v65.origin.x = v20;
            v65.origin.y = v19;
            v65.size.width = v21;
            v65.size.height = v22;
            v40 = CGRectGetWidth(v65) + *(double *)&v38;
          }
          v41 = v25 + v40;
          CGContextSaveGState(a1);
          v66.origin.x = v41;
          v66.origin.y = v9 + *(double *)&v37;
          v66.size.width = rect;
          v66.size.height = v36;
          v42 = CGRectGetMinX(v66);
          v67.origin.x = v41;
          v67.origin.y = v9 + *(double *)&v37;
          v67.size.width = rect;
          v67.size.height = v36;
          v43 = CGRectGetMinY(v67);
          CGContextTranslateCTM(a1, v42, v43);
          v35(a1);
          CGContextRestoreGState(a1);
          v23 = sub_100059B10(*(uint64_t *)&rect, *(uint64_t *)&v36, v38, v37, (uint64_t)v35, v39);
        }
      }
      CGContextRef.textPosition.setter(v23, v25, v9);
      CTLineDraw(v15, a1);

      if (v53 == v10)
        goto LABEL_30;
      v44 = v10 + 1;
      if ((*(_QWORD *)&a & 0xC000000000000001) != 0)
      {
        v18 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, *(_QWORD *)&a);
      }
      else
      {
        if (v44 >= *(_QWORD *)(v48 + 16))
        {
          __break(1u);
LABEL_33:
          if (a >= 0.0)
            v46 = *(double *)&v10;
          else
            v46 = a;
          swift_bridgeObjectRetain(*(_QWORD *)&a);
          v13 = _CocoaArrayWrapper.endIndex.getter(*(_QWORD *)&v46);
          sub_1004493A0(&v57);
          v12 = *((_QWORD *)v2 + 10);
          v58[0] = v12;
          sub_100449378(&v57);
          sub_100449378(v58);
          v11 = _CocoaArrayWrapper.endIndex.getter(*(_QWORD *)&v46);
          if (!v11)
            goto LABEL_28;
          goto LABEL_3;
        }
        v18 = (const __CTLine *)*(id *)(*(_QWORD *)&a + 40 + 8 * v10);
      }
      v15 = v18;
      v17 = 0;
      v16 += 4;
      if (v56 == ++v10)
      {

LABEL_30:
        sub_1004493A0(&v57);
        v45 = v47;
        goto LABEL_31;
      }
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_100447FC4(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = v1;
  v4 = *(void **)&v2[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection];
  *(_QWORD *)&v2[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection] = a1;
  v5 = a1;
  if (a1)
  {
    v6 = v5;
    if ((sub_10000BE74(8, v4) & 1) != 0)
      objc_msgSend(v2, "setNeedsDisplay");

    v7 = v6;
  }
  else
  {
    v6 = v4;
    v7 = v5;
  }

}

id sub_100448050(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;
  _BYTE v9[200];

  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection] = 0;
  v3 = (uint64_t)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation];
  sub_1000D07FC((uint64_t)v9);
  sub_100070EDC((uint64_t)v9, v3, (uint64_t *)&unk_100641310);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCFastLabel.FastLabelLayer();
  v4 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);
  v5 = v4;
  if (v4)
  {
    v6 = v4;
    objc_msgSend(v6, "setOpaque:", 0);
    objc_msgSend(v6, "setContentsFormat:", kCAContentsFormatAutomatic);

  }
  return v5;
}

id sub_10044813C(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD v13[25];
  _QWORD v14[25];
  void *v15;
  _BYTE v16[32];
  objc_super v17;
  _BYTE v18[200];

  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection] = 0;
  v3 = (uint64_t)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation];
  sub_1000D07FC((uint64_t)v18);
  sub_100070EDC((uint64_t)v18, v3, (uint64_t *)&unk_100641310);
  v4 = a1[3];
  v5 = sub_10007E7A0(a1, v4);
  v6 = _bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
  v7 = (objc_class *)type metadata accessor for DOCFastLabel.FastLabelLayer();
  v17.receiver = v1;
  v17.super_class = v7;
  v8 = objc_msgSendSuper2(&v17, "initWithLayer:", v6);
  swift_unknownObjectRelease(v6);
  v9 = v8;
  objc_msgSend(v9, "setOpaque:", 0);
  objc_msgSend(v9, "setContentsFormat:", kCAContentsFormatAutomatic);

  sub_100069BD8((uint64_t)a1, (uint64_t)v16);
  if ((swift_dynamicCast(&v15, v16, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
  {
    v10 = v15;
    sub_100070EDC((uint64_t)v15+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v13, (uint64_t *)&unk_100641310);
    sub_10044930C(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B2804);

    sub_100068588(a1);
    v11 = (uint64_t)v9
        + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_100070EDC((uint64_t)v9+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v14, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v13, v11, (uint64_t *)&unk_100641310);
    sub_10044930C(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
  }
  else
  {
    sub_100068588(a1);
  }
  return v9;
}

void sub_100448330(CGContext *a1)
{
  char *v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v7[25];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _QWORD v21[25];
  uint64_t v22[25];
  objc_super v23;
  _OWORD v24[12];

  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for DOCFastLabel.FastLabelLayer();
  -[CGContext drawInContext:](&v23, "drawInContext:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection];
  if (v3)
  {
    v4 = (void *)objc_opt_self(UITraitCollection);
    v5 = v3;
    v6 = objc_msgSend(v4, "_currentTraitCollection");
    objc_msgSend(v4, "_setCurrentTraitCollection:", v5);
    sub_100070EDC((uint64_t)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation], (uint64_t)v21, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v21, (uint64_t)v8, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v21, (uint64_t)v22, (uint64_t *)&unk_100641310);
    if (sub_1000A849C(v22) != 1)
    {
      v24[8] = v17;
      v24[9] = v18;
      v24[10] = v19;
      v24[11] = v20;
      v24[4] = v13;
      v24[5] = v14;
      v24[6] = v15;
      v24[7] = v16;
      v24[0] = v9;
      v24[1] = v10;
      v24[2] = v11;
      v24[3] = v12;
      sub_100070EDC((uint64_t)v8, (uint64_t)v7, (uint64_t *)&unk_100641310);
      sub_10044930C(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B2804);
      sub_1000B2454((uint64_t)v24);
      sub_10044930C(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
      sub_100447B1C(a1);
      sub_1000B2398(v24);
    }
    objc_msgSend(v4, "_setCurrentTraitCollection:", v6);

  }
}

id sub_100448540()
{
  return sub_1001405E0(0, type metadata accessor for DOCFastLabel.FastLabelLayer);
}

id sub_100448674()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD v4[25];
  _BYTE v5[72];
  void *v6;
  _QWORD v7[25];
  uint64_t v8[26];

  sub_100070EDC(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer)+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v7, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_100641310);
  if (sub_1000A849C(v8) == 1)
    return 0;
  v2 = v6;
  sub_100070EDC((uint64_t)v5, (uint64_t)v4, (uint64_t *)&unk_100641310);
  sub_10044930C(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B2804);
  v1 = v2;
  sub_10044930C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
  return v1;
}

id sub_100448794()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD v26[25];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  objc_super v40;
  _QWORD v41[25];
  uint64_t v42[25];

  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for DOCFastLabel();
  objc_msgSendSuper2(&v40, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
  sub_100070EDC((uint64_t)v1+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v41, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v41, (uint64_t)v27, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v41, (uint64_t)v42, (uint64_t *)&unk_100641310);
  if (sub_1000A849C(v42) == 1)
  {
    v2 = 0.0;
    v3 = 0.0;
    v4 = 0.0;
    v5 = 0.0;
  }
  else
  {
    v22 = v36;
    v23 = v37;
    v24 = v38;
    v25 = v39;
    v18 = v32;
    v19 = v33;
    v20 = v34;
    v21 = v35;
    v14 = v28;
    v15 = v29;
    v16 = v30;
    v17 = v31;
    sub_100070EDC((uint64_t)v27, (uint64_t)v26, (uint64_t *)&unk_100641310);
    sub_10044930C(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B2804);
    sub_1000B2454((uint64_t)&v14);
    sub_10044930C(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
    objc_msgSend(v0, "bounds", v14, v15, v16);
    v7 = v6;
    v9 = v8;
    v10 = objc_msgSend(v0, "contentScaleFactor");
    v3 = *((double *)&v17 + 1);
    v2 = *(double *)&v17;
    v4 = UIPointRoundToScale(v10, (v7 - *(double *)&v17) * 0.5, (v9 - *((double *)&v17 + 1)) * 0.5, v11);
    v5 = v12;
    sub_1000B2398(&v14);
  }
  return objc_msgSend(v1, "setFrame:", v4, v5, v2, v3);
}

id sub_100448AB8(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCFastLabel);
}

uint64_t destroy for DOCFastLabel.LabelInformation(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  if (*(_QWORD *)(a1 + 128))
    result = swift_release(*(_QWORD *)(a1 + 136));
  if (*(_QWORD *)(a1 + 176))
    return swift_release(*(_QWORD *)(a1 + 184));
  return result;
}

uint64_t initializeWithCopy for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(void **)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v5;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = (_OWORD *)(a1 + 96);
  v9 = (_OWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 128);
  v11 = v4;
  v12 = v6;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  if (v10)
  {
    *v8 = *v9;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    v13 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = v13;
    swift_retain(v13);
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    v8[2] = v9[2];
  }
  v15 = (_OWORD *)(a1 + 144);
  v16 = (_OWORD *)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 176);
  if (v17)
  {
    *v15 = *v16;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    v18 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = v17;
    *(_QWORD *)(a1 + 184) = v18;
    swift_retain(v18);
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 160);
    *v15 = *v16;
    *(_OWORD *)(a1 + 160) = v19;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t assignWithCopy for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(void **)(a2 + 72);
  v8 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = (_OWORD *)(a1 + 96);
  v15 = (_OWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v16)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v17 = *(_QWORD *)(a2 + 136);
      v18 = *(_QWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v17;
      swift_retain();
      swift_release(v18);
    }
    else
    {
      sub_100448E80(a1 + 96);
      v21 = *(_OWORD *)(a2 + 112);
      v20 = *(_OWORD *)(a2 + 128);
      *v14 = *v15;
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v20;
    }
  }
  else if (v16)
  {
    *v14 = *v15;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    v19 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v19;
    swift_retain();
  }
  else
  {
    v22 = *v15;
    v23 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v23;
    *v14 = v22;
  }
  v24 = (_OWORD *)(a1 + 144);
  v25 = (_OWORD *)(a2 + 144);
  v26 = *(_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 176))
  {
    if (v26)
    {
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      v27 = *(_QWORD *)(a2 + 184);
      v28 = *(_QWORD *)(a1 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v27;
      swift_retain();
      swift_release(v28);
    }
    else
    {
      sub_100448E80(a1 + 144);
      v31 = *(_OWORD *)(a2 + 160);
      v30 = *(_OWORD *)(a2 + 176);
      *v24 = *v25;
      *(_OWORD *)(a1 + 160) = v31;
      *(_OWORD *)(a1 + 176) = v30;
    }
  }
  else if (v26)
  {
    *v24 = *v25;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    v29 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v29;
    swift_retain();
  }
  else
  {
    v32 = *v25;
    v33 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v33;
    *v24 = v32;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t sub_100448E80(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 40));
  return a1;
}

__n128 initializeWithTake for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v6 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease(v7);
  if (*(_QWORD *)(a1 + 128))
  {
    v8 = *(_QWORD *)(a2 + 128);
    if (v8)
    {
      v9 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v9;
      v10 = *(_QWORD *)(a2 + 136);
      v11 = *(_QWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 128) = v8;
      *(_QWORD *)(a1 + 136) = v10;
      swift_release(v11);
      goto LABEL_6;
    }
    sub_100448E80(a1 + 96);
  }
  v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_6:
  if (!*(_QWORD *)(a1 + 176))
  {
LABEL_10:
    v17 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v17;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    goto LABEL_11;
  }
  v13 = *(_QWORD *)(a2 + 176);
  if (!v13)
  {
    sub_100448E80(a1 + 144);
    goto LABEL_10;
  }
  v14 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v14;
  v15 = *(_QWORD *)(a2 + 184);
  v16 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = v13;
  *(_QWORD *)(a1 + 184) = v15;
  swift_release(v16);
LABEL_11:
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFastLabel.LabelInformation(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFastLabel.LabelInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCFastLabel.LabelInformation()
{
  return &type metadata for DOCFastLabel.LabelInformation;
}

uint64_t destroy for DOCFastLabel.AttachmentRenderer(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for DOCFastLabel.AttachmentRenderer(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for DOCFastLabel.AttachmentRenderer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v3 = a2[5];
  v4 = a1[5];
  a1[4] = a2[4];
  a1[5] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for DOCFastLabel.AttachmentRenderer(uint64_t a1, _OWORD *a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFastLabel.AttachmentRenderer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFastLabel.AttachmentRenderer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100449240(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100655D40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100449280()
{
  void *v0;

  v0 = (void *)docUILogHandle;
  if (!docUILogHandle)
  {
    DOCInitLogging();
    v0 = (void *)docUILogHandle;
  }
  return v0;
}

unint64_t sub_1004492B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100655D48;
  if (!qword_100655D48)
  {
    v1 = sub_10004F2F0(255, &qword_10064A0C0, NSAttributedString_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100655D48);
  }
  return result;
}

_QWORD *sub_10044930C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

_QWORD *sub_100449378(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

_QWORD *sub_1004493A0(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

uint64_t destroy for DOCFastLabel.TextDrawInformation(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  if (*(_QWORD *)(a1 + 120))
    result = swift_release(*(_QWORD *)(a1 + 128));
  if (*(_QWORD *)(a1 + 168))
    return swift_release(*(_QWORD *)(a1 + 176));
  return result;
}

uint64_t initializeWithCopy for DOCFastLabel.TextDrawInformation(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(void **)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = (_OWORD *)(a1 + 88);
  v10 = (_OWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 120);
  v12 = v6;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  if (v11)
  {
    *v9 = *v10;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    v13 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v11;
    *(_QWORD *)(a1 + 128) = v13;
    swift_retain(v13);
  }
  else
  {
    v14 = v10[1];
    *v9 = *v10;
    v9[1] = v14;
    v9[2] = v10[2];
  }
  v15 = (_OWORD *)(a1 + 136);
  v16 = (_OWORD *)(a2 + 136);
  v17 = *(_QWORD *)(a2 + 168);
  if (v17)
  {
    *v15 = *v16;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    v18 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v17;
    *(_QWORD *)(a1 + 176) = v18;
    swift_retain(v18);
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 152);
    *v15 = *v16;
    *(_OWORD *)(a1 + 152) = v19;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  }
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  return a1;
}

_QWORD *assignWithCopy for DOCFastLabel.TextDrawInformation(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  v4 = (void *)a2[8];
  v5 = (void *)a1[8];
  a1[8] = v4;
  v6 = v4;

  v7 = a2[9];
  v8 = a1[9];
  a1[9] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = a2[10];
  v10 = a1[10];
  a1[10] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = a1 + 11;
  v12 = a2 + 11;
  v13 = a2[15];
  if (a1[15])
  {
    if (v13)
    {
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      v14 = a2[16];
      v15 = a1[16];
      a1[15] = a2[15];
      a1[16] = v14;
      swift_retain();
      swift_release(v15);
    }
    else
    {
      sub_100448E80((uint64_t)(a1 + 11));
      v18 = *(_OWORD *)(a2 + 13);
      v17 = *(_OWORD *)(a2 + 15);
      *v11 = *v12;
      *(_OWORD *)(a1 + 13) = v18;
      *(_OWORD *)(a1 + 15) = v17;
    }
  }
  else if (v13)
  {
    *v11 = *v12;
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    v16 = a2[16];
    a1[15] = a2[15];
    a1[16] = v16;
    swift_retain();
  }
  else
  {
    v19 = *v12;
    v20 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 15) = v20;
    *v11 = v19;
  }
  v21 = a1 + 17;
  v22 = a2 + 17;
  v23 = a2[21];
  if (a1[21])
  {
    if (v23)
    {
      a1[17] = a2[17];
      a1[18] = a2[18];
      a1[19] = a2[19];
      a1[20] = a2[20];
      v24 = a2[22];
      v25 = a1[22];
      a1[21] = a2[21];
      a1[22] = v24;
      swift_retain();
      swift_release(v25);
    }
    else
    {
      sub_100448E80((uint64_t)(a1 + 17));
      v28 = *(_OWORD *)(a2 + 19);
      v27 = *(_OWORD *)(a2 + 21);
      *v21 = *v22;
      *(_OWORD *)(a1 + 19) = v28;
      *(_OWORD *)(a1 + 21) = v27;
    }
  }
  else if (v23)
  {
    *v21 = *v22;
    *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
    v26 = a2[22];
    a1[21] = a2[21];
    a1[22] = v26;
    swift_retain();
  }
  else
  {
    v29 = *v22;
    v30 = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 21) = v30;
    *v21 = v29;
  }
  a1[23] = a2[23];
  return a1;
}

__n128 initializeWithTake for DOCFastLabel.TextDrawInformation(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for DOCFastLabel.TextDrawInformation(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(v8);
  if (*(_QWORD *)(a1 + 120))
  {
    v9 = *(_QWORD *)(a2 + 120);
    if (v9)
    {
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      v10 = *(_QWORD *)(a2 + 128);
      v11 = *(_QWORD *)(a1 + 128);
      *(_QWORD *)(a1 + 120) = v9;
      *(_QWORD *)(a1 + 128) = v10;
      swift_release(v11);
      goto LABEL_6;
    }
    sub_100448E80(a1 + 88);
  }
  v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v12;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
LABEL_6:
  if (!*(_QWORD *)(a1 + 168))
  {
LABEL_10:
    v16 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v16;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    goto LABEL_11;
  }
  v13 = *(_QWORD *)(a2 + 168);
  if (!v13)
  {
    sub_100448E80(a1 + 136);
    goto LABEL_10;
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 176);
  v15 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = v13;
  *(_QWORD *)(a1 + 176) = v14;
  swift_release(v15);
LABEL_11:
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFastLabel.TextDrawInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 192))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFastLabel.TextDrawInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCFastLabel.TextDrawInformation()
{
  return &type metadata for DOCFastLabel.TextDrawInformation;
}

void sub_100449934(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(id, id, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_1005ED3A0, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain();
  v11 = a2;
  v10 = a3;
  v7(v11, v10, sub_100386F18, v9);
  swift_release(v6);
  swift_release(v9);

}

Swift::Int sub_1004499E4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_100465728(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_10044D838(v5);
  *a1 = v2;
  return result;
}

id sub_100449A4C(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  char v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id result;
  void *v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  void *object;
  NSString v24;
  objc_super v25;
  Swift::String v26;

  v6 = a3 & 1;
  v7 = &v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState];
  v8 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v9 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_additionalTopInset] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView] = 0;
  v10 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint;
  v11 = objc_allocWithZone((Class)NSLayoutConstraint);
  v12 = v3;
  *(_QWORD *)&v3[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian;
  v14 = type metadata accessor for DOCUpdateGuardian();
  v15 = swift_allocObject(v14, 25, 7);
  *(_QWORD *)(v15 + 16) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v15 + 24) = 0;
  *(_QWORD *)&v12[v13] = v15;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable] = 0;
  v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_isDisplayingProgress] = 0;
  v16 = &v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_style] = v6;
  swift_unknownObjectRetain(a1);

  v25.receiver = v12;
  v25.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  v17 = objc_msgSendSuper2(&v25, "init");
  result = (id)_DocumentManagerBundle(v17);
  if (result)
  {
    v19 = result;
    v26._countAndFlagsBits = 0xD000000000000040;
    v26._object = (void *)0x8000000100527740;
    v20._object = (void *)0x8000000100527720;
    v20._countAndFlagsBits = 0xD00000000000001CLL;
    v21.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v21.value._object = (void *)0xEB00000000656C62;
    v22._countAndFlagsBits = 0x73736572676F7250;
    v22._object = (void *)0xE800000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v26)._object;

    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v17, "setTitle:", v24);

    swift_unknownObjectRelease(a1);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100449C8C()
{
  qword_100672DF8 = 0x4046000000000000;
}

void sub_100449D08()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  objc_super v8;

  v1 = OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount];
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v0[OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount] = v4;
    v8.receiver = v0;
    v8.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView();
    objc_msgSendSuper2(&v8, "layoutSubviews");
    v5 = *(_QWORD *)&v0[v1];
    if (v5 == 1)
    {
      objc_msgSend(v0, "contentSize");
      objc_msgSend(v0, "setFittingHeight:", v6);
      v5 = *(_QWORD *)&v0[v1];
    }
    v3 = __OFSUB__(v5, 1);
    v7 = v5 - 1;
    if (!v3)
    {
      *(_QWORD *)&v0[v1] = v7;
      return;
    }
  }
  __break(1u);
}

id sub_100449EB4(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeight;
  v4 = qword_100641168;
  v5 = v1;
  if (v4 != -1)
    swift_once(&qword_100641168, sub_100449C8C);
  *(_QWORD *)&v5[v3] = qword_100672DF8;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_100449F80(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView);
}

id sub_100449F8C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  v1 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView];
LABEL_5:
    v17 = v2;
    return v3;
  }
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v5 = result;
    objc_msgSend(result, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    v14 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
    v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView()), "initWithFrame:collectionViewLayout:", v14, v7, v9, v11, v13);

    v16 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v15;
    v3 = v15;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10044A08C()
{
  char *v0;
  char *v1;
  id v2;
  NSString v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  Class isa;
  objc_super v42;

  v1 = v0;
  v42.receiver = v0;
  v42.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  objc_msgSendSuper2(&v42, "viewDidLoad");
  v2 = sub_100449F8C();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setAccessibilityIdentifier:", v3);

  v4 = objc_msgSend(v1, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = v4;
  v6 = sub_100449F8C();
  objc_msgSend(v5, "addSubview:", v6);

  v7 = sub_100449F8C();
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v8 = sub_100449F8C();
  v9 = objc_msgSend(v8, "topAnchor");

  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "topAnchor");

  v13 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v12, *(double *)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_additionalTopInset]);
  v14 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint;
  v15 = *(void **)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint] = v13;

  v16 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v17 = swift_allocObject(v16, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1004DAC10;
  v18 = sub_100449F8C();
  v19 = objc_msgSend(v18, "leadingAnchor");

  v20 = objc_msgSend(v1, "view");
  if (!v20)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "leadingAnchor");

  v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);
  *(_QWORD *)(v17 + 32) = v23;
  v24 = sub_100449F8C();
  v25 = objc_msgSend(v24, "trailingAnchor");

  v26 = objc_msgSend(v1, "view");
  if (!v26)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "trailingAnchor");

  v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);
  v30 = *(void **)&v1[v14];
  *(_QWORD *)(v17 + 40) = v29;
  *(_QWORD *)(v17 + 48) = v30;
  v31 = v30;
  v32 = sub_100449F8C();
  v33 = objc_msgSend(v32, "bottomAnchor");

  v34 = objc_msgSend(v1, "view");
  if (v34)
  {
    v35 = v34;
    v36 = (void *)objc_opt_self(NSLayoutConstraint);
    v37 = objc_msgSend(v35, "bottomAnchor");

    v38 = objc_msgSend(v33, "constraintEqualToAnchor:", v37);
    *(_QWORD *)(v17 + 56) = v38;
    specialized Array._endMutation()(v39);
    v40 = v17;
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v36, "activateConstraints:", isa, swift_bridgeObjectRelease(v40).n128_f64[0]);

    sub_10044AF0C();
    sub_10044B8CC();
    sub_10044AB6C();
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_10044A4B8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v1 = objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1005ED3C8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_1005ED3F0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10044FF80;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_10006657C;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10006655C;
  v9[3] = &unk_1005ED408;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain();
  swift_release(v5);
  objc_msgSend((id)v1, "performWithoutAnimation:", v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v3, "", 136, 124, 40, 1);
  result = swift_release(v3);
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian];
    swift_beginAccess(v8 + 16, v9, 33, 0);
    swift_retain();
    sub_1000C9248();
    swift_endAccess(v9);
    swift_release(v2);
    return swift_release(v8);
  }
  return result;
}

void sub_10044A630(void *a1)
{
  id v2;
  id v3;

  sub_10044BF3C((uint64_t)_swiftEmptyArrayStorage, 0);
  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10044A698(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  double (*v8)(char *, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;
  __n128 v10;
  _BYTE v12[24];
  objc_super v13;

  v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  objc_msgSendSuper2(&v13, "viewWillAppear:", a1 & 1);
  sub_10044BF3C((uint64_t)_swiftEmptyArrayStorage, 0);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian];
  swift_beginAccess(v4 + 16, v12, 33, 0);
  swift_retain();
  sub_1000C9248();
  swift_endAccess(v12);
  swift_release(v4);
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source]);
  v7 = swift_allocObject(&unk_1005ED300, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = *(double (**)(char *, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
  v9 = swift_retain();
  v10.n128_f64[0] = v8(v2, sub_10044FF98, v7, ObjectType, v5, v9);
  return swift_release_n(v7, 2, v10);
}

void sub_10044A7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v3 = a3 + 16;
  if (qword_100640DA0 != -1)
    a1 = swift_once(&qword_100640DA0, sub_100083308);
  v4 = qword_1006726B0;
  v5 = static os_log_type_t.default.getter(a1);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Progress listing received 'didUpdate' from source", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
  swift_beginAccess(v3, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_10044BF3C((uint64_t)_swiftEmptyArrayStorage, 1);

  }
}

double sub_10044A8EC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  double result;
  _BYTE v10[24];
  objc_super v11;

  v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  objc_msgSendSuper2(&v11, "viewDidAppear:", a1 & 1);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian];
  swift_beginAccess(v4 + 16, v10, 33, 0);
  swift_retain();
  sub_100447004();
  v5 = swift_endAccess(v10);
  if (!*(_QWORD *)(*(_QWORD *)(v4 + 16) + 16) && *(_BYTE *)(v4 + 24) == 1)
  {
    if (qword_100640DA0 != -1)
      v5 = swift_once(&qword_100640DA0, sub_100083308);
    v6 = qword_1006726B0;
    v7 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Progress listing received 'didUpdate' while appearing.  Performing now!", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    sub_10044BF3C((uint64_t)_swiftEmptyArrayStorage, 1);
  }
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_10044AB6C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  char v19;
  id v20;
  void *v21;
  id v22;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton;
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton];
  if (v3)
  {
    if (objc_msgSend(v3, "systemItem") == (id)24)
    {
      v4 = objc_msgSend(v1, "editButtonItem");
      v5 = *(void **)&v1[v2];
      v6 = v5;
      goto LABEL_7;
    }
    v4 = *(id *)&v1[v2];
  }
  else
  {
    v4 = 0;
  }
  v7 = v4;
  v6 = objc_msgSend(v1, "editButtonItem");
  v5 = v6;
LABEL_7:
  v22 = v6;
  v8 = objc_msgSend(v1, "navigationItem");
  v9 = objc_msgSend(v8, "leftBarButtonItem");

  if (!v5)
  {
    v10 = v9;
    if (!v9)
      goto LABEL_14;
    goto LABEL_12;
  }
  v10 = v22;
  if (!v9)
  {
LABEL_12:

    goto LABEL_13;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  v11 = v22;
  v12 = static NSObject.== infix(_:_:)(v11, v9);

  if ((v12 & 1) == 0)
  {
LABEL_13:
    v13 = objc_msgSend(v1, "navigationItem");
    objc_msgSend(v13, "setLeftBarButtonItem:", v22);

  }
LABEL_14:
  v14 = v4;
  v15 = objc_msgSend(v1, "navigationItem");
  v16 = objc_msgSend(v15, "rightBarButtonItem");

  if (v4)
  {
    v17 = v14;
    if (v16)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
      v18 = v14;
      v19 = static NSObject.== infix(_:_:)(v18, v16);

      if ((v19 & 1) != 0)
        goto LABEL_21;
      goto LABEL_20;
    }
  }
  else
  {
    v17 = v16;
    if (!v16)
    {
      v21 = v22;
      goto LABEL_22;
    }
  }

LABEL_20:
  v20 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v20, "setRightBarButtonItem:", v14);

  v18 = v14;
LABEL_21:

  v21 = v18;
LABEL_22:

}

uint64_t sub_10044AF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  int v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_style);
  v12 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:);
  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_style))
    v12 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, *v12, v2, v8);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = swift_allocObject(&unk_1005ED300, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_10044FAFC, v13);
  if (v11 == 1)
  {
    v14 = swift_allocObject(&unk_1005ED300, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16);
    UICollectionLayoutListConfiguration.itemSeparatorHandler.setter(sub_10044FB04, v14);
  }
  v15 = (void *)objc_opt_self(UIColor);
  UICollectionLayoutListConfiguration.backgroundColor.setter(objc_msgSend(v15, "clearColor"));
  v16 = sub_100449F8C();
  v17 = objc_msgSend(v15, "clearColor");
  objc_msgSend(v16, "setBackgroundColor:", v17);

  v18 = sub_100449F8C();
  v19 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 9);
  v20 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v19);

  objc_msgSend(v18, "setBackgroundView:", v20);
  sub_10004F2F0(0, &qword_100655F98, UICollectionViewCompositionalLayout_ptr);
  v21 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v10);
  v22 = sub_100449F8C();
  objc_msgSend(v22, "setCollectionViewLayout:", v21);

  v23 = sub_100449F8C();
  objc_msgSend(v23, "setDelegate:", v1);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_10044B1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  Class isa;
  void *v5;
  id v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  void *object;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  Class v37;
  id v38;
  char v39[24];
  _QWORD aBlock[3];
  void *v41;
  void (*v42)(uint64_t, uint64_t, void (*)(uint64_t, __n128), uint64_t);
  uint64_t v43[5];
  __int128 v44[2];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  char v48[32];
  Swift::String v49;

  v3 = a2 + 16;
  sub_10004F2F0(0, (unint64_t *)&unk_100655FA0, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = (void *)objc_opt_self(UISwipeActionsConfiguration);
  v6 = objc_msgSend(v5, "configurationWithActions:", isa);

  swift_beginAccess(v3, v48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(void **)(Strong + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable);
    v10 = v9;

    if (!v9)
    {
      __break(1u);
LABEL_14:
      __break(1u);
      return;
    }
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(aBlock, a1);
    if (v41)
    {
      sub_100092328((uint64_t)v43, (uint64_t)v44);
      sub_10000CB4C((uint64_t)aBlock, (uint64_t *)&unk_100655BC0);
      sub_1000E85C4(v44, (uint64_t)v45);
      v11 = v46;
      v12 = v47;
      sub_10007E7A0(v45, v46);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 8))(aBlock, v11, v12);
      if (qword_100641170 != -1)
        swift_once(&qword_100641170, sub_10044CA5C);
      v13 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
      v14 = sub_10007E788(v13, (uint64_t)qword_100655D50);
      v15 = static AnyHashable.== infix(_:_:)(aBlock, v14 + 80);
      sub_100067748((uint64_t)aBlock);
      if ((v15 & 1) != 0
        || (v16 = v46,
            v17 = v47,
            sub_10007E7A0(v45, v46),
            v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17),
            LODWORD(v16) = objc_msgSend(v18, "isCancellable"),
            v18,
            !(_DWORD)v16))
      {

        sub_100068588(v45);
        return;
      }
      v20 = (id)_DocumentManagerBundle(v19);
      if (v20)
      {
        v21 = v20;
        v49._object = (void *)0x8000000100519410;
        v22._countAndFlagsBits = 0x6C65636E6143;
        v22._object = (void *)0xE600000000000000;
        v23.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v23.value._object = (void *)0xEB00000000656C62;
        v24._countAndFlagsBits = 0;
        v24._object = (void *)0xE000000000000000;
        v49._countAndFlagsBits = 0xD00000000000001BLL;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v49)._object;

        v26 = swift_allocObject(&unk_1005ED300, 24, 7);
        swift_beginAccess(v3, v39, 0, 0);
        v27 = (void *)swift_unknownObjectWeakLoadStrong(v3);
        swift_unknownObjectWeakInit(v26 + 16);

        sub_100092328((uint64_t)v45, (uint64_t)v44);
        v28 = swift_allocObject(&unk_1005ED350, 64, 7);
        *(_QWORD *)(v28 + 16) = v26;
        sub_1000E85C4(v44, v28 + 24);
        swift_retain();
        v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(object);
        v42 = sub_10044FB38;
        v43[0] = v28;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100449934;
        v41 = &unk_1005ED368;
        v30 = _Block_copy(aBlock);
        v31 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v29, v30);

        _Block_release(v30);
        v32 = v43[0];
        swift_release(v26);
        swift_release(v32);
        v33 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v34 = swift_allocObject(v33, 40, 7);
        *(_OWORD *)(v34 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v34 + 32) = v31;
        aBlock[0] = v34;
        specialized Array._endMutation()(v34);
        v35 = aBlock[0];
        v36 = v31;
        v37 = Array._bridgeToObjectiveC()().super.isa;
        v38 = objc_msgSend(v5, "configurationWithActions:", v37, swift_bridgeObjectRelease(v35).n128_f64[0]);

        objc_msgSend(v38, "setPerformsFirstActionWithFullSwipe:", 0);
        sub_100068588(v45);
        return;
      }
      goto LABEL_14;
    }
    sub_10000CB4C((uint64_t)aBlock, &qword_100655F30);

  }
}

void sub_10044B63C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _BYTE v12[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    swift_retain();
    sub_10044FB68(a6, (uint64_t)v11, a3, a4);

    swift_release(a4);
  }
  else
  {
    ((void (*)(void))a3)();
  }
}

void sub_10044B6C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37[24];

  v35 = a4;
  v36 = a1;
  v6 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - v11;
  v13 = type metadata accessor for UIListSeparatorConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v18 = (void *)Strong;
    v34 = v9;
    v19 = v6;
    v20 = sub_100449F8C();
    v21 = (char *)objc_msgSend(v20, "numberOfItemsInSection:", IndexPath.section.getter(v20));

    if (__OFSUB__(v21, 1))
    {
      __break(1u);
    }
    else
    {
      v32 = v21 - 1;
      v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
      v33 = v13;
      v23 = IndexPath.row.getter(v22);
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
      v25 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      v26 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
      if (v23)
        v27 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
      else
        v27 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      v24(v12, v27, v19);
      v28 = UIListSeparatorConfiguration.topSeparatorVisibility.setter(v12);
      v29 = IndexPath.row.getter(v28);
      if ((char *)v29 == v32)
        v30 = v25;
      else
        v30 = v26;
      v31 = v34;
      v24(v34, v30, v19);
      UIListSeparatorConfiguration.bottomSeparatorVisibility.setter(v31);

      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v35, v16, v33);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v35, a2, v13);
  }
}

id sub_10044B8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id result;
  void *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  _BYTE v38[80];
  _BYTE v39[88];

  v1 = v0;
  v2 = sub_10006922C(&qword_100655F80);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - v12;
  v14 = swift_allocObject(&unk_1005ED300, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = type metadata accessor for DOCProgressCollectionListCell(0);
  v16 = sub_10006922C((uint64_t *)&unk_100644350);
  v37 = v13;
  UICollectionView.CellRegistration.init(handler:)(sub_10044F99C, v14, v15, v16);
  if (qword_100641170 != -1)
    swift_once(&qword_100641170, sub_10044CA5C);
  v17 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  v18 = sub_10007E788(v17, (uint64_t)qword_100655D50);
  sub_1000271D4(v18, (uint64_t)v39, &qword_100655F30);
  UICollectionView.CellRegistration.init(handler:)(sub_10044BD0C, 0, v15, v16);
  v19 = sub_100449F8C();
  sub_1000271D4((uint64_t)v39, (uint64_t)v38, &qword_100655F30);
  v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v7, v10, v2);
  v21 = v36;
  v20(v36, v37, v2);
  v22 = *(unsigned __int8 *)(v3 + 80);
  v23 = (v22 + 96) & ~v22;
  v24 = (v4 + v22 + v23) & ~v22;
  v25 = swift_allocObject(&unk_1005ED328, v24 + v4, v22 | 7);
  sub_10044FA44((uint64_t)v38, v25 + 16);
  v26 = v25 + v23;
  v27 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v27(v26, v7, v2);
  v27(v25 + v24, v21, v2);
  v28 = objc_allocWithZone((Class)sub_10006922C(&qword_100655F88));
  v29 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v19, sub_10044FA8C, v25);
  v30 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable;
  v31 = *(void **)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable) = v29;

  result = sub_100449F8C();
  if (*(_QWORD *)(v1 + v30))
  {
    v33 = result;
    objc_msgSend(result, "setDataSource:");

    v34 = *(void (**)(char *, uint64_t))(v3 + 8);
    v34(v10, v2);
    sub_10000CB4C((uint64_t)v39, &qword_100655F30);
    return (id)((uint64_t (*)(char *, uint64_t))v34)(v37, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10044BBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[40];
  _BYTE v18[40];
  _BYTE v19[24];

  v7 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_100092328(a3, (uint64_t)v18);
    v13 = a1 + qword_100672D50;
    swift_beginAccess(a1 + qword_100672D50, v16, 0, 0);
    sub_1000271D4(v13, (uint64_t)v17, &qword_100655F90);
    swift_beginAccess(v13, v15, 33, 0);
    sub_1003BDD04((uint64_t)v18, v13);
    swift_endAccess(v15);
    sub_1003B938C((uint64_t)v17);
    sub_10000CB4C((uint64_t)v18, &qword_100655F90);
    sub_10000CB4C((uint64_t)v17, &qword_100655F90);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, (uint64_t)v12 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState, v7);
    sub_1003B9208(v10);

  }
}

id sub_10044BD0C(_BYTE *a1)
{
  a1[qword_100672D58] = 1;
  return objc_msgSend(a1, "setNeedsUpdateConfiguration");
}

uint64_t sub_10044BD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[5];
  _BYTE v21[80];
  _BYTE v22[24];
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[80];

  sub_1000271D4(a3, (uint64_t)v29, (uint64_t *)&unk_100655BC0);
  sub_1000271D4((uint64_t)v29, (uint64_t)v22, &qword_100655F30);
  sub_1000271D4(a4, (uint64_t)&v24, &qword_100655F30);
  if (!v23)
  {
    sub_10000CB4C((uint64_t)v29, &qword_100655F30);
    if (!*((_QWORD *)&v25 + 1))
    {
      sub_10000CB4C((uint64_t)v22, &qword_100655F30);
      goto LABEL_7;
    }
LABEL_9:
    sub_10000CB4C((uint64_t)v22, &qword_100655F78);
LABEL_10:
    sub_100092328(a3 + 40, (uint64_t)v22);
    v17 = type metadata accessor for DOCProgressCollectionListCell(0);
    v13 = sub_10006922C((uint64_t *)&unk_100644350);
    v14 = a6;
    v15 = a2;
    v16 = v17;
    goto LABEL_11;
  }
  sub_1000271D4((uint64_t)v22, (uint64_t)v21, &qword_100655F30);
  if (!*((_QWORD *)&v25 + 1))
  {
    sub_10000CB4C((uint64_t)v29, &qword_100655F30);
    sub_10000CB4C((uint64_t)v21, (uint64_t *)&unk_100655BC0);
    goto LABEL_9;
  }
  v20[2] = v26;
  v20[3] = v27;
  v20[4] = v28;
  v20[0] = v24;
  v20[1] = v25;
  v11 = static AnyHashable.== infix(_:_:)(v21, v20);
  sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_100655BC0);
  sub_10000CB4C((uint64_t)v29, &qword_100655F30);
  sub_10000CB4C((uint64_t)v21, (uint64_t *)&unk_100655BC0);
  sub_10000CB4C((uint64_t)v22, &qword_100655F30);
  if ((v11 & 1) == 0)
    goto LABEL_10;
LABEL_7:
  sub_100092328(a3 + 40, (uint64_t)v22);
  v12 = type metadata accessor for DOCProgressCollectionListCell(0);
  v13 = sub_10006922C((uint64_t *)&unk_100644350);
  v14 = a5;
  v15 = a2;
  v16 = v12;
LABEL_11:
  v18 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v14, v15, v22, v16, v13);
  sub_10000CB4C((uint64_t)v22, &qword_100655F90);
  return v18;
}

uint64_t sub_10044BF3C(uint64_t a1, int a2)
{
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::OpaquePointer v57;
  _QWORD *v58;
  int64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 *v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  int v90;
  int v91;
  char *v92;
  __int128 *v93;
  id v94;
  void *v95;
  char v96;
  id v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  void *v104;
  uint64_t v105;
  unsigned __int8 *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  char *v116;
  uint64_t v117;
  int64_t v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  __int128 *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unsigned __int8 *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  char *v136;
  int v137;
  uint64_t v138;
  __int128 v139;
  _QWORD *v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  _QWORD v147[3];
  uint64_t v148;
  uint64_t v149;
  char v150[24];

  v137 = a2;
  *(_QWORD *)&v139 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v130 = *(_QWORD *)(v3 - 8);
  v131 = v3;
  __chkstk_darwin(v3);
  v129 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v127 = *(_QWORD *)(v5 - 8);
  v128 = v5;
  __chkstk_darwin(v5);
  v132 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v133 - 8);
  v8 = __chkstk_darwin(v133);
  v10 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v117 - v11;
  v13 = sub_10006922C((uint64_t *)&unk_100655F20);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v134 = (uint64_t *)((char *)&v117 - v18);
  v19 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian;
  v20 = v2;
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian];
  result = swift_beginAccess(v21 + 16, v150, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(v21 + 16) + 16))
  {
    LOBYTE(v24) = 1;
LABEL_3:
    *(_BYTE *)(v21 + 24) = v24;
    return result;
  }
  v123 = v14;
  v124 = v7;
  v138 = (uint64_t)v10;
  v121 = v19;
  v135 = v13;
  v136 = v17;
  v125 = v12;
  v25 = v20;
  v26 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v20[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source], v23);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(ObjectType, v26);
  v29 = *(_QWORD *)(v28 + 16);
  v30 = _swiftEmptyArrayStorage;
  v126 = v25;
  if (v29)
  {
    v140 = _swiftEmptyArrayStorage;
    sub_100154E78(0, v29, 0);
    v31 = v28 + 32;
    v30 = v140;
    do
    {
      sub_100092328(v31, (uint64_t)v147);
      v32 = v148;
      v33 = v149;
      sub_10007E7A0(v147, v148);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v33 + 8))(&v141, v32, v33);
      sub_100068588(v147);
      if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
      {
        sub_100154E78(0, v30[2] + 1, 1);
        v30 = v140;
      }
      v35 = v30[2];
      v34 = v30[3];
      if (v35 >= v34 >> 1)
      {
        sub_100154E78(v34 > 1, v35 + 1, 1);
        v30 = v140;
      }
      v30[2] = v35 + 1;
      v36 = &v30[5 * v35];
      v37 = v141;
      v38 = v142;
      v36[8] = v143;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v31 += 40;
      --v29;
    }
    while (v29);
    v25 = v126;
  }
  v39 = sub_10043C1F0(v139);
  v40 = sub_10006922C((uint64_t *)&unk_1006449C0);
  inited = swift_initStackObject(v40, &v146);
  v139 = xmmword_1004D9670;
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  if (qword_100641170 != -1)
    swift_once(&qword_100641170, sub_10044CA5C);
  v122 = (__int128 *)v28;
  v42 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  v43 = sub_10007E788(v42, (uint64_t)qword_100655D50);
  sub_1000271D4(v43, inited + 32, &qword_100655F30);
  *(_QWORD *)&v141 = v39;
  v44 = &v141;
  sub_100130CC4(inited);
  v45 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable;
  v46 = *(void **)&v25[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable];
  if (!v46)
  {
    __break(1u);
    goto LABEL_43;
  }
  v47 = v141;
  v48 = v46;
  v49 = v134;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v50 = v135;
  v44 = (__int128 *)NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v135);
  v51 = *(void (**)(_QWORD *, uint64_t))(v123 + 8);
  v51(v49, v50);
  v134 = sub_10044F488((uint64_t)v44, (uint64_t)v30, v47);
  v123 = 0;
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v47);
  if (!*(_QWORD *)&v25[v45])
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v117 = v43;
  v119 = (void (*)(char *, uint64_t))v51;
  v120 = v45;
  v52 = sub_10006922C((uint64_t *)&unk_100655F38);
  v53 = sub_10006922C((uint64_t *)&unk_100655BC0);
  v54 = sub_100062698(&qword_100655F48, (uint64_t *)&unk_100655F38, (uint64_t)&protocol conformance descriptor for DOCDiffableIdentifier<A>);
  v55 = sub_100062698(&qword_100655F50, (uint64_t *)&unk_100655BC0, (uint64_t)&protocol conformance descriptor for DOCDiffableIdentifier<A>);
  NSDiffableDataSourceSnapshot.init()(v52, v53, v54, v55);
  v56 = sub_10006922C((uint64_t *)&unk_100655F58);
  v57._rawValue = (void *)swift_allocObject(v56, 88, 7);
  *((_OWORD *)v57._rawValue + 1) = v139;
  *(_QWORD *)&v141 = 0x746365536E69616DLL;
  *((_QWORD *)&v141 + 1) = 0xEB000000006E6F69;
  AnyHashable.init<A>(_:)(&v141, &type metadata for String, &protocol witness table for String);
  *((_QWORD *)v57._rawValue + 9) = 0x746365536E69616DLL;
  *((_QWORD *)v57._rawValue + 10) = 0xEB000000006E6F69;
  NSDiffableDataSourceSnapshot.appendSections(_:)(v57);
  swift_bridgeObjectRelease(v57._rawValue);
  v58 = v134;
  v59 = v134[2];
  v60 = _swiftEmptyArrayStorage;
  v118 = v59;
  if (v59)
  {
    v140 = _swiftEmptyArrayStorage;
    sub_100154E94(0, v59, 0);
    v61 = (uint64_t)(v58 + 4);
    v60 = v140;
    do
    {
      sub_1000271D4(v61, (uint64_t)&v141, (uint64_t *)&unk_100655BC0);
      sub_100092328((uint64_t)&v143 + 8, (uint64_t)v147);
      sub_10000CB4C((uint64_t)&v141, (uint64_t *)&unk_100655BC0);
      if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0)
      {
        sub_100154E94(0, v60[2] + 1, 1);
        v60 = v140;
      }
      v63 = v60[2];
      v62 = v60[3];
      if (v63 >= v62 >> 1)
        sub_100154E94(v62 > 1, v63 + 1, 1);
      v64 = v148;
      v65 = v149;
      v66 = sub_10007E7C8((uint64_t)v147, v148);
      __chkstk_darwin(v66);
      v68 = (char *)&v117 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v69 + 16))(v68);
      sub_10044F1F8(v63, (uint64_t)v68, (uint64_t *)&v140, v64, v65);
      sub_100068588(v147);
      v60 = v140;
      v61 += 80;
      --v59;
      v70 = v138;
    }
    while (v59);
  }
  else
  {
    v70 = v138;
  }
  *(_QWORD *)&v141 = v122;
  sub_100130B3C((uint64_t)v60);
  v71 = v141;
  swift_bridgeObjectRetain(v141);
  v72 = v123;
  sub_1004499E4(&v141);
  v44 = (__int128 *)v141;
  v74 = v124;
  v73 = v125;
  if (v72)
    goto LABEL_47;
  v75 = *(_QWORD *)(v141 + 16);
  if (v75)
  {
    v122 = (__int128 *)v141;
    v123 = v71;
    v76 = (_QWORD *)(v141 + 32);
    swift_retain();
    v77 = v135;
    do
    {
      v78 = sub_10006922C((uint64_t *)&unk_1006449B0);
      v79 = swift_allocObject(v78, 112, 7);
      *(_OWORD *)(v79 + 16) = v139;
      v80 = v76[3];
      v81 = v76[4];
      sub_10007E7A0(v76, v80);
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v81);
      sub_100092328((uint64_t)v76, v79 + 72);
      *(_QWORD *)&v144 = 0;
      v142 = 0u;
      v143 = 0u;
      v141 = 0u;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v79, &v141, v77);
      swift_bridgeObjectRelease(v79);
      sub_10000CB4C((uint64_t)&v141, (uint64_t *)&unk_100655F68);
      v76 += 5;
      --v75;
    }
    while (v75);
    v44 = v122;
    swift_release(v122);
    v74 = v124;
    v73 = v125;
    v70 = v138;
    v71 = v123;
  }
  swift_release(v44);
  v82 = *(_QWORD *)(v71 + 16);
  v83 = v126;
  v84 = v133;
  if (!v82)
  {
    v85 = sub_10006922C((uint64_t *)&unk_1006449B0);
    v86 = (_OWORD *)swift_allocObject(v85, 112, 7);
    v86[1] = v139;
    sub_1000271D4(v117, (uint64_t)&v141, &qword_100655F30);
    v87 = v135;
    if (!*((_QWORD *)&v142 + 1))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      result = swift_release(v44);
      __break(1u);
      return result;
    }
    v88 = v144;
    v86[4] = v143;
    v86[5] = v88;
    v86[6] = v145;
    v89 = v142;
    v86[2] = v141;
    v86[3] = v89;
    *(_QWORD *)&v144 = 0;
    v142 = 0u;
    v143 = 0u;
    v141 = 0u;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v86, &v141, v87);
    swift_bridgeObjectRelease(v86);
    sub_10000CB4C((uint64_t)&v141, (uint64_t *)&unk_100655F68);
  }
  v44 = (__int128 *)OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_isDisplayingProgress;
  v90 = v83[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_isDisplayingProgress];
  swift_bridgeObjectRelease(v71);
  v91 = v82 != 0;
  *((_BYTE *)v44 + (_QWORD)v83) = v91;
  v92 = v132;
  if (v91 != v90)
  {
    v93 = (__int128 *)objc_msgSend(v83, "view");
    if (!v93)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v44 = v93;
    v94 = objc_msgSend(v93, "window");

    v137 = (v94 != 0) & v137;
  }
  v95 = *(void **)&v83[v120];
  v96 = v137;
  if (!v95)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v97 = v95;
  v98 = v96 & 1;
  v99 = v136;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v136, v98, DOCSplitBrowserViewController.didCommitPreview(of:), 0);

  if (v118)
  {
    v100 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v138 = static OS_dispatch_queue.main.getter(v100);
    static DispatchTime.now()(v138);
    + infix(_:_:)(v70, 0.5);
    *(_QWORD *)&v139 = *(_QWORD *)(v74 + 8);
    ((void (*)(uint64_t, uint64_t))v139)(v70, v84);
    v101 = swift_allocObject(&unk_1005ED2B0, 32, 7);
    v102 = v134;
    *(_QWORD *)(v101 + 16) = v83;
    *(_QWORD *)(v101 + 24) = v102;
    *(_QWORD *)&v143 = sub_10044F908;
    *((_QWORD *)&v143 + 1) = v101;
    *(_QWORD *)&v141 = _NSConcreteStackBlock;
    *((_QWORD *)&v141 + 1) = 1107296256;
    *(_QWORD *)&v142 = sub_10004A82C;
    *((_QWORD *)&v142 + 1) = &unk_1005ED2C8;
    v103 = v73;
    v104 = _Block_copy(&v141);
    v105 = *((_QWORD *)&v143 + 1);
    v106 = v83;
    v107 = swift_release(v105);
    static DispatchQoS.unspecified.getter(v107);
    *(_QWORD *)&v141 = _swiftEmptyArrayStorage;
    v108 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v109 = sub_10006922C((uint64_t *)&unk_100647540);
    v110 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v111 = v84;
    v112 = v129;
    v113 = v109;
    v114 = v131;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v141, v113, v110, v131, v108);
    v115 = (void *)v138;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v103, v92, v112, v104);
    _Block_release(v104);

    (*(void (**)(char *, uint64_t))(v130 + 8))(v112, v114);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v92, v128);
    v116 = v103;
    v99 = v136;
    ((void (*)(char *, uint64_t))v139)(v116, v111);
  }
  else
  {
    swift_bridgeObjectRelease(v134);
  }
  v119(v99, v135);
  v21 = *(_QWORD *)&v83[v121];
  result = swift_beginAccess(v21 + 16, &v141, 0, 0);
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 16) + 16);
  if (!v24)
    goto LABEL_3;
  return result;
}

uint64_t sub_10044CA5C()
{
  uint64_t v0;
  _OWORD *v1;

  v0 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  sub_10007E874(v0, qword_100655D50);
  v1 = (_OWORD *)sub_10007E788(v0, (uint64_t)qword_100655D50);
  return sub_10044CAA4(v1);
}

uint64_t sub_10044CAA4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _WORD v8[20];
  _QWORD v9[5];

  a1[4] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  strcpy((char *)v8, "NullProgress");
  HIBYTE(v8[6]) = 0;
  v8[7] = -5120;
  AnyHashable.init<A>(_:)(v8, &type metadata for String, &protocol witness table for String);
  v2 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  static Date.distantPast.getter();
  v3 = *(int *)(v2 + 28);
  *(_QWORD *)((char *)a1 + v3) = objc_msgSend(objc_allocWithZone((Class)NSProgress), "init");
  v4 = (char *)a1 + *(int *)(v2 + 32);
  static UTType.data.getter();
  v5 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  v9[3] = v2;
  v9[4] = &off_1005ED430;
  v6 = sub_10006CBAC(v9);
  sub_10007C6DC((uint64_t)a1, (uint64_t)v6, type metadata accessor for DOCProgressCollectionListViewController.NullProgress);
  sub_10006777C((uint64_t)(v6 + 10), (uint64_t)v8);
  return sub_10044F930((uint64_t)v8, (uint64_t)a1);
}

Swift::Int sub_10044CBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[5];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD v22[9];

  v1 = type metadata accessor for UTType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  Hasher.init(_seed:)(v22, 0);
  sub_1000271D4(v0, (uint64_t)&v17, &qword_100655F30);
  if (*((_QWORD *)&v18 + 1))
  {
    v16[2] = v19;
    v16[3] = v20;
    v16[4] = v21;
    v16[1] = v18;
    v16[0] = v17;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)(v22);
    sub_10000CB4C((uint64_t)v16, (uint64_t *)&unk_100655BC0);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  AnyHashable.hash(into:)(v22);
  v8 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  v9 = type metadata accessor for Date(0);
  v10 = sub_10005A360(&qword_100656058, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v22, v9, v10);
  NSObject.hash(into:)(v22);
  sub_10007C6DC(v0 + *(int *)(v8 + 32), (uint64_t)v7, type metadata accessor for DOCProgressProvidingOperationIconType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v5);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v12 = *v7;
      v13 = v7[1];
      Hasher._combine(_:)(2uLL);
      String.hash(into:)(v22, v12, v13);
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1uLL);
    v14 = sub_10005A360((unint64_t *)&unk_10064D9C0, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
    dispatch thunk of Hashable.hash(into:)(v22, v1, v14);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return Hasher._finalize()();
}

uint64_t sub_10044CE58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10006777C(v1 + 80, a1);
}

id sub_10044CE64(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_10044CE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10007C6DC(v2 + *(int *)(a1 + 32), a2, type metadata accessor for DOCProgressProvidingOperationIconType);
}

void sub_10044CE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[5];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v5 = type metadata accessor for UTType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000271D4(v2, (uint64_t)&v19, &qword_100655F30);
  if (*((_QWORD *)&v20 + 1))
  {
    v18[2] = v21;
    v18[3] = v22;
    v18[4] = v23;
    v18[0] = v19;
    v18[1] = v20;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)(a1);
    sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100655BC0);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  AnyHashable.hash(into:)(a1);
  v12 = type metadata accessor for Date(0);
  v13 = sub_10005A360(&qword_100656058, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v12, v13);
  NSObject.hash(into:)(a1);
  sub_10007C6DC(v2 + *(int *)(a2 + 32), (uint64_t)v11, type metadata accessor for DOCProgressProvidingOperationIconType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v9);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *v11;
      v16 = v11[1];
      Hasher._combine(_:)(2uLL);
      String.hash(into:)(a1, v15, v16);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(1uLL);
    v17 = sub_10005A360((unint64_t *)&unk_10064D9C0, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
    dispatch thunk of Hashable.hash(into:)(a1, v5, v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

Swift::Int sub_10044D0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[5];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD v26[9];

  v4 = v2;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  Hasher.init(_seed:)(v26, a1);
  sub_1000271D4(v4, (uint64_t)&v21, &qword_100655F30);
  if (*((_QWORD *)&v22 + 1))
  {
    v20[2] = v23;
    v20[3] = v24;
    v20[4] = v25;
    v20[1] = v22;
    v20[0] = v21;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)(v26);
    sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_100655BC0);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  AnyHashable.hash(into:)(v26);
  v13 = type metadata accessor for Date(0);
  v14 = sub_10005A360(&qword_100656058, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v26, v13, v14);
  NSObject.hash(into:)(v26);
  sub_10007C6DC(v4 + *(int *)(a2 + 32), (uint64_t)v12, type metadata accessor for DOCProgressProvidingOperationIconType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *v12;
      v17 = v12[1];
      Hasher._combine(_:)(2uLL);
      String.hash(into:)(v26, v16, v17);
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v9, v12, v6);
    Hasher._combine(_:)(1uLL);
    v18 = sub_10005A360((unint64_t *)&unk_10064D9C0, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
    dispatch thunk of Hashable.hash(into:)(v26, v6, v18);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return Hasher._finalize()();
}

void sub_10044D3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source));
  v1 = v0 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState;
  v2 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView));

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian));
}

id sub_10044D444()
{
  return sub_1001405E0(0, (uint64_t (*)(void))type metadata accessor for DOCProgressCollectionListViewController);
}

uint64_t sub_10044D4F4()
{
  return type metadata accessor for DOCProgressCollectionListViewController(0);
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_100655DC8, (uint64_t)&nominal type descriptor for DOCProgressCollectionListViewController);
}

uint64_t sub_10044D510(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_1004E9128;
  v4[1] = &unk_1004E9140;
  result = type metadata accessor for UICellAccessory.DisplayedState(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1004E9158;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = &unk_1004E9158;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = &unk_1004E9158;
    v4[9] = &unk_1004E9140;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView()
{
  return objc_opt_self(_TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView);
}

uint64_t sub_10044D5E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t type metadata accessor for DOCUpdateGuardian()
{
  return objc_opt_self(_TtC5FilesP33_6B6C11E2935D2683530A429636FE4F7D17DOCUpdateGuardian);
}

uint64_t storeEnumTagSinglePayload for DOCUpdateGuardian.UpdatesDisabledReason(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10044D66C + 4 * asc_1004E90E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10044D68C + 4 * byte_1004E90E5[v4]))();
}

_BYTE *sub_10044D66C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10044D68C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10044D694(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10044D69C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10044D6A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10044D6AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DOCUpdateGuardian.UpdatesDisabledReason()
{
  return &type metadata for DOCUpdateGuardian.UpdatesDisabledReason;
}

uint64_t storeEnumTagSinglePayload for DOCProgressCollectionListViewController.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10044D714 + 4 * byte_1004E90EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10044D748 + 4 * byte_1004E90EA[v4]))();
}

uint64_t sub_10044D748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044D750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10044D758);
  return result;
}

uint64_t sub_10044D764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10044D76CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10044D770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044D778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressCollectionListViewController.Style()
{
  return &type metadata for DOCProgressCollectionListViewController.Style;
}

unint64_t sub_10044D798()
{
  unint64_t result;

  result = qword_100655F10;
  if (!qword_100655F10)
  {
    result = swift_getWitnessTable(&unk_1004E921C, &type metadata for DOCProgressCollectionListViewController.Style);
    atomic_store(result, (unint64_t *)&qword_100655F10);
  }
  return result;
}

unint64_t sub_10044D7E0()
{
  unint64_t result;

  result = qword_100655F18;
  if (!qword_100655F18)
  {
    result = swift_getWitnessTable(&unk_1004E9284, &type metadata for DOCUpdateGuardian.UpdatesDisabledReason);
    atomic_store(result, (unint64_t *)&qword_100655F18);
  }
  return result;
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController.NullProgress(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100656008, (uint64_t)&nominal type descriptor for DOCProgressCollectionListViewController.NullProgress);
}

Swift::Int sub_10044D838(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::Int v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  _BOOL4 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  void (*v52)(uint64_t, uint64_t);
  char *v53;
  char v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  int v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  Swift::Int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  Swift::Int v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  void (*v85)(uint64_t, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  void (*v90)(uint64_t, uint64_t);
  char v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  char *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  unint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  char v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  unint64_t v164;
  char *v165;
  _QWORD *v166;
  uint64_t v167;
  _QWORD *v168;
  Swift::Int v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t);
  char *v172;
  uint64_t v173;
  uint64_t v174;
  Swift::Int v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  Swift::Int v181;
  _QWORD *v182;
  void (*v183)(uint64_t, uint64_t);
  void (*v184)(uint64_t, uint64_t);
  void (*v185)(uint64_t, uint64_t);
  char *v186;
  uint64_t v187;
  _QWORD v188[5];
  _QWORD v189[5];
  _QWORD v190[2];
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v177 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v180 = (char *)&v167 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v167 - v7;
  v196 = a1;
  v9 = a1[1];
  result = _minimumMergeRunLength(_:)(v9);
  if (result >= v9)
  {
    if (v9 < 0)
      goto LABEL_151;
    if (v9)
      return sub_10044E680(0, v9, 1, v196);
    return result;
  }
  if (v9 >= 0)
    v11 = v9;
  else
    v11 = v9 + 1;
  if (v9 < -1)
    goto LABEL_159;
  v178 = v4;
  v169 = result;
  if (v9 < 2)
  {
    v176 = (char *)&_swiftEmptyArrayStorage[4];
    v168 = _swiftEmptyArrayStorage;
    if (v9 != 1)
    {
      v17 = _swiftEmptyArrayStorage[2];
      v16 = (char *)_swiftEmptyArrayStorage;
LABEL_114:
      if (v17 >= 2)
      {
        v159 = *v196;
        do
        {
          v160 = v17 - 2;
          if (v17 < 2)
            goto LABEL_146;
          if (!v159)
            goto LABEL_158;
          v153 = v16;
          v161 = *(_QWORD *)&v16[16 * v160 + 32];
          v162 = *(_QWORD *)&v16[16 * v17 + 24];
          sub_10044EA38((char *)(v159 + 40 * v161), (char *)(v159 + 40 * *(_QWORD *)&v16[16 * v17 + 16]), (char *)(v159 + 40 * v162), v176);
          if (v2)
            goto LABEL_126;
          if (v162 < v161)
            goto LABEL_147;
          if ((swift_isUniquelyReferenced_nonNull_native(v153) & 1) == 0)
            v153 = sub_10046564C((uint64_t)v153);
          if (v160 >= *((_QWORD *)v153 + 2))
            goto LABEL_148;
          v163 = &v153[16 * v160 + 32];
          *(_QWORD *)v163 = v161;
          *((_QWORD *)v163 + 1) = v162;
          v164 = *((_QWORD *)v153 + 2);
          if (v17 > v164)
            goto LABEL_149;
          memmove(&v153[16 * v17 + 16], &v153[16 * v17 + 32], 16 * (v164 - v17));
          v16 = v153;
          *((_QWORD *)v153 + 2) = v164 - 1;
          v17 = v164 - 1;
        }
        while (v164 > 2);
      }
      v165 = v16;
LABEL_128:
      swift_bridgeObjectRelease(v165);
      v166 = v168;
      v168[2] = 0;
      return swift_bridgeObjectRelease(v166);
    }
  }
  else
  {
    v12 = v11 >> 1;
    v13 = sub_10006922C((uint64_t *)&unk_100644350);
    v14 = static Array._allocateBufferUninitialized(minimumCapacity:)(v12, v13);
    *(_QWORD *)(v14 + 16) = v12;
    v168 = (_QWORD *)v14;
    v176 = (char *)(v14 + 32);
  }
  v15 = 0;
  v16 = (char *)_swiftEmptyArrayStorage;
  v179 = v8;
LABEL_15:
  v18 = v15;
  v19 = v15 + 1;
  v172 = v16;
  v175 = v15;
  if (v15 + 1 < v9)
  {
    v182 = (_QWORD *)v9;
    v20 = *v196;
    sub_100092328(*v196 + 40 * v19, (uint64_t)&v193);
    v170 = v20;
    sub_100092328(v20 + 40 * v18, (uint64_t)v190);
    v22 = v194;
    v21 = v195;
    v23 = (void (*)(uint64_t, uint64_t))sub_10007E7A0(&v193, v194);
    v24 = *(char **)(v21 + 16);
    v185 = v23;
    v187 = v21;
    v186 = v24;
    ((void (*)(uint64_t, uint64_t))v24)(v22, v21);
    v25 = v191;
    v26 = v192;
    v27 = (void (*)(uint64_t, uint64_t))sub_10007E7A0(v190, v191);
    v28 = *(void (**)(uint64_t, uint64_t))(v26 + 16);
    v29 = v180;
    v183 = v27;
    v184 = v28;
    v28(v25, v26);
    v30 = static Date.< infix(_:_:)(v8, v29);
    v31 = *(void (**)(char *, uint64_t))(v177 + 8);
    v32 = v178;
    v31(v29, v178);
    v31(v8, v32);
    v171 = v31;
    if ((v30 & 1) != 0)
    {
      v33 = 1;
    }
    else
    {
      ((void (*)(uint64_t, uint64_t))v186)(v22, v187);
      v184(v25, v26);
      v34 = static Date.> infix(_:_:)(v8, v29);
      v31(v29, v32);
      v31(v8, v32);
      if ((v34 & 1) != 0)
      {
        LODWORD(v173) = 0;
LABEL_22:
        v18 = v175;
        v9 = (Swift::Int)v182;
        sub_100068588(v190);
        sub_100068588(&v193);
        v19 = v18 + 2;
        if (v18 + 2 < v9)
        {
          v43 = v170 + 40 * v18 + 40;
          while (1)
          {
            v181 = v19;
            v174 = v2;
            sub_100092328(v43 + 40, (uint64_t)&v193);
            v187 = v43;
            sub_100092328(v43, (uint64_t)v190);
            v45 = v194;
            v44 = v195;
            v46 = (void (*)(uint64_t, uint64_t))sub_10007E7A0(&v193, v194);
            v47 = *(char **)(v44 + 16);
            v48 = v179;
            v185 = v46;
            v186 = v47;
            ((void (*)(uint64_t, uint64_t))v47)(v45, v44);
            v50 = v191;
            v49 = v192;
            v51 = (void (*)(uint64_t, uint64_t))sub_10007E7A0(v190, v191);
            v52 = *(void (**)(uint64_t, uint64_t))(v49 + 16);
            v53 = v180;
            v183 = v51;
            v184 = v52;
            v52(v50, v49);
            v54 = static Date.< infix(_:_:)(v48, v53);
            v55 = v178;
            v56 = v171;
            v171(v53, v178);
            v56(v48, v55);
            if ((v54 & 1) != 0)
            {
              v57 = 1;
            }
            else
            {
              ((void (*)(uint64_t, uint64_t))v186)(v45, v44);
              v184(v50, v49);
              v58 = static Date.> infix(_:_:)(v48, v53);
              v56(v53, v55);
              v56(v48, v55);
              if ((v58 & 1) != 0)
              {
                v57 = 0;
              }
              else
              {
                v59 = v194;
                v60 = v195;
                sub_10007E7A0(&v193, v194);
                v61 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v60 + 8))(v189, v59, v60);
                v62 = AnyHashable.hashValue.getter(v61);
                sub_100067748((uint64_t)v189);
                v63 = v191;
                v64 = v192;
                sub_10007E7A0(v190, v191);
                v65 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v64 + 8))(v188, v63, v64);
                v66 = AnyHashable.hashValue.getter(v65);
                sub_100067748((uint64_t)v188);
                v57 = v62 < v66;
              }
            }
            v2 = v174;
            v19 = v181;
            v9 = (Swift::Int)v182;
            sub_100068588(v190);
            sub_100068588(&v193);
            if ((_DWORD)v173 != v57)
              break;
            ++v19;
            v43 = v187 + 40;
            if (v9 == v19)
            {
              v19 = v9;
              break;
            }
          }
          v18 = v175;
        }
        v16 = v172;
        if ((_DWORD)v173)
        {
          if (v19 < v18)
            goto LABEL_152;
          if (v18 < v19)
          {
            v67 = 40 * v19 - 40;
            v68 = 40 * v18;
            v69 = v19;
            v70 = v18;
            do
            {
              if (v70 != --v19)
              {
                if (!v170)
                  goto LABEL_157;
                v71 = v170 + v68;
                v72 = v170 + v67;
                sub_1000E85C4((__int128 *)(v170 + v68), (uint64_t)&v193);
                v73 = *(_QWORD *)(v72 + 32);
                v74 = *(_OWORD *)(v72 + 16);
                *(_OWORD *)v71 = *(_OWORD *)v72;
                *(_OWORD *)(v71 + 16) = v74;
                *(_QWORD *)(v71 + 32) = v73;
                sub_1000E85C4(&v193, v72);
                v16 = v172;
                v18 = v175;
              }
              ++v70;
              v67 -= 40;
              v68 += 40;
            }
            while (v70 < v19);
            v19 = v69;
            v9 = (Swift::Int)v182;
          }
        }
        goto LABEL_43;
      }
      v35 = v194;
      v36 = v195;
      sub_10007E7A0(&v193, v194);
      v37 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v36 + 8))(v189, v35, v36);
      v38 = AnyHashable.hashValue.getter(v37);
      sub_100067748((uint64_t)v189);
      v39 = v191;
      v40 = v192;
      sub_10007E7A0(v190, v191);
      v41 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v40 + 8))(v188, v39, v40);
      v42 = AnyHashable.hashValue.getter(v41);
      sub_100067748((uint64_t)v188);
      v33 = v38 < v42;
    }
    LODWORD(v173) = v33;
    goto LABEL_22;
  }
LABEL_43:
  if (v19 >= v9)
    goto LABEL_65;
  if (__OFSUB__(v19, v18))
    goto LABEL_150;
  if (v19 - v18 >= v169)
    goto LABEL_65;
  if (__OFADD__(v18, v169))
    goto LABEL_153;
  if (v18 + v169 >= v9)
    v75 = (void (*)(char *, uint64_t))v9;
  else
    v75 = (void (*)(char *, uint64_t))(v18 + v169);
  if ((uint64_t)v75 >= v18)
  {
    if ((void (*)(char *, uint64_t))v19 == v75)
      goto LABEL_65;
    v174 = v2;
    v76 = 40 * v19 - 40;
    v77 = v180;
    v171 = v75;
LABEL_56:
    v173 = v76;
    v79 = (char *)v76;
    v181 = v19;
    while (1)
    {
      v187 = v18;
      v80 = *v196;
      v186 = v79;
      v81 = (uint64_t)&v79[v80];
      sub_100092328((uint64_t)&v79[v80 + 40], (uint64_t)&v193);
      sub_100092328(v81, (uint64_t)v190);
      v82 = v194;
      v83 = v195;
      v84 = (void (*)(uint64_t, uint64_t))sub_10007E7A0(&v193, v194);
      v85 = *(void (**)(uint64_t, uint64_t))(v83 + 16);
      v86 = v179;
      v184 = v84;
      v185 = v85;
      v85(v82, v83);
      v87 = v191;
      v88 = v192;
      v89 = sub_10007E7A0(v190, v191);
      v90 = *(void (**)(uint64_t, uint64_t))(v88 + 16);
      v182 = v89;
      v183 = v90;
      v90(v87, v88);
      v91 = static Date.< infix(_:_:)(v86, v77);
      v92 = *(void (**)(char *, uint64_t))(v177 + 8);
      v93 = v77;
      v94 = v77;
      v95 = v178;
      v92(v93, v178);
      v92(v86, v95);
      if ((v91 & 1) != 0)
      {
        sub_100068588(v190);
        sub_100068588(&v193);
      }
      else
      {
        v185(v82, v83);
        v183(v87, v88);
        v96 = static Date.> infix(_:_:)(v86, v94);
        v92(v94, v95);
        v92(v86, v95);
        if ((v96 & 1) != 0)
        {
          sub_100068588(v190);
          sub_100068588(&v193);
LABEL_54:
          v77 = v180;
          v78 = v181;
LABEL_55:
          v19 = v78 + 1;
          v76 = v173 + 40;
          v18 = v175;
          if ((void (*)(char *, uint64_t))v19 != v171)
            goto LABEL_56;
          v19 = (Swift::Int)v171;
          v2 = v174;
          v16 = v172;
LABEL_65:
          if (v19 < v18)
            goto LABEL_145;
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) != 0)
            v16 = v172;
          else
            v16 = sub_100464E4C(0, *((_QWORD *)v172 + 2) + 1, 1, v172);
          v110 = *((_QWORD *)v16 + 2);
          v109 = *((_QWORD *)v16 + 3);
          v17 = v110 + 1;
          if (v110 >= v109 >> 1)
            v16 = sub_100464E4C((char *)(v109 > 1), v110 + 1, 1, v16);
          *((_QWORD *)v16 + 2) = v17;
          v111 = v16 + 32;
          v112 = &v16[16 * v110 + 32];
          *(_QWORD *)v112 = v175;
          *((_QWORD *)v112 + 1) = v19;
          v181 = v19;
          if (v110)
          {
LABEL_71:
            v113 = v17 - 1;
            if (v17 >= 4)
            {
              v118 = &v111[16 * v17];
              v119 = *((_QWORD *)v118 - 8);
              v120 = *((_QWORD *)v118 - 7);
              v124 = __OFSUB__(v120, v119);
              v121 = v120 - v119;
              if (v124)
                goto LABEL_134;
              v123 = *((_QWORD *)v118 - 6);
              v122 = *((_QWORD *)v118 - 5);
              v124 = __OFSUB__(v122, v123);
              v116 = v122 - v123;
              v117 = v124;
              if (v124)
                goto LABEL_135;
              v125 = v17 - 2;
              v126 = &v111[16 * v17 - 32];
              v128 = *(_QWORD *)v126;
              v127 = *((_QWORD *)v126 + 1);
              v124 = __OFSUB__(v127, v128);
              v129 = v127 - v128;
              if (v124)
                goto LABEL_137;
              v124 = __OFADD__(v116, v129);
              v130 = v116 + v129;
              if (v124)
                goto LABEL_140;
              if (v130 >= v121)
              {
                v148 = &v111[16 * v113];
                v150 = *(_QWORD *)v148;
                v149 = *((_QWORD *)v148 + 1);
                v124 = __OFSUB__(v149, v150);
                v151 = v149 - v150;
                if (v124)
                  goto LABEL_144;
                v141 = v116 < v151;
              }
              else
              {
LABEL_84:
                if ((v117 & 1) != 0)
                  goto LABEL_136;
                v125 = v17 - 2;
                v131 = &v111[16 * v17 - 32];
                v133 = *(_QWORD *)v131;
                v132 = *((_QWORD *)v131 + 1);
                v134 = __OFSUB__(v132, v133);
                v135 = v132 - v133;
                v136 = v134;
                if (v134)
                  goto LABEL_139;
                v137 = &v111[16 * v113];
                v139 = *(_QWORD *)v137;
                v138 = *((_QWORD *)v137 + 1);
                v124 = __OFSUB__(v138, v139);
                v140 = v138 - v139;
                if (v124)
                  goto LABEL_142;
                if (__OFADD__(v135, v140))
                  goto LABEL_143;
                if (v135 + v140 < v116)
                  goto LABEL_96;
                v141 = v116 < v140;
              }
              if (v141)
                v113 = v125;
            }
            else
            {
              if (v17 == 3)
              {
                v115 = *((_QWORD *)v16 + 4);
                v114 = *((_QWORD *)v16 + 5);
                v124 = __OFSUB__(v114, v115);
                v116 = v114 - v115;
                v117 = v124;
                goto LABEL_84;
              }
              v142 = *((_QWORD *)v16 + 4);
              v143 = *((_QWORD *)v16 + 5);
              v124 = __OFSUB__(v143, v142);
              v135 = v143 - v142;
              v136 = v124;
LABEL_96:
              if ((v136 & 1) != 0)
                goto LABEL_138;
              v144 = &v111[16 * v113];
              v146 = *(_QWORD *)v144;
              v145 = *((_QWORD *)v144 + 1);
              v124 = __OFSUB__(v145, v146);
              v147 = v145 - v146;
              if (v124)
                goto LABEL_141;
              if (v147 < v135)
                goto LABEL_14;
            }
            v152 = v113 - 1;
            if (v113 - 1 >= v17)
            {
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
              break;
            }
            if (!*v196)
              goto LABEL_156;
            v153 = v16;
            v154 = &v111[16 * v152];
            v155 = *(_QWORD *)v154;
            v156 = &v111[16 * v113];
            v157 = *((_QWORD *)v156 + 1);
            sub_10044EA38((char *)(*v196 + 40 * *(_QWORD *)v154), (char *)(*v196 + 40 * *(_QWORD *)v156), (char *)(*v196 + 40 * v157), v176);
            if (v2)
            {
LABEL_126:
              v165 = v153;
              goto LABEL_128;
            }
            if (v157 < v155)
              goto LABEL_131;
            if (v113 > *((_QWORD *)v153 + 2))
              goto LABEL_132;
            *(_QWORD *)v154 = v155;
            *(_QWORD *)&v111[16 * v152 + 8] = v157;
            v158 = *((_QWORD *)v153 + 2);
            if (v113 >= v158)
              goto LABEL_133;
            v17 = v158 - 1;
            memmove(&v111[16 * v113], v156 + 16, 16 * (v158 - 1 - v113));
            v16 = v153;
            *((_QWORD *)v153 + 2) = v158 - 1;
            if (v158 <= 2)
              goto LABEL_14;
            goto LABEL_71;
          }
          v17 = 1;
LABEL_14:
          v9 = v196[1];
          v15 = v181;
          v8 = v179;
          if (v181 >= v9)
            goto LABEL_114;
          goto LABEL_15;
        }
        v97 = v194;
        v98 = v195;
        sub_10007E7A0(&v193, v194);
        v99 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v98 + 8))(v189, v97, v98);
        v100 = AnyHashable.hashValue.getter(v99);
        sub_100067748((uint64_t)v189);
        v101 = v191;
        v102 = v192;
        sub_10007E7A0(v190, v191);
        v103 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v102 + 8))(v188, v101, v102);
        v104 = AnyHashable.hashValue.getter(v103);
        sub_100067748((uint64_t)v188);
        sub_100068588(v190);
        sub_100068588(&v193);
        if (v100 >= v104)
          goto LABEL_54;
      }
      v105 = *v196;
      v77 = v180;
      v78 = v181;
      if (!*v196)
        goto LABEL_155;
      v106 = v186;
      v107 = (uint64_t)&v186[v105];
      sub_1000E85C4((__int128 *)&v186[v105 + 40], (uint64_t)&v193);
      v108 = *(_OWORD *)(v107 + 16);
      *(_OWORD *)(v107 + 40) = *(_OWORD *)v107;
      *(_OWORD *)(v107 + 56) = v108;
      *(_QWORD *)(v107 + 72) = *(_QWORD *)(v107 + 32);
      sub_1000E85C4(&v193, v107);
      v79 = v106 - 40;
      v18 = v187 + 1;
      if (v78 == v187 + 1)
        goto LABEL_55;
    }
  }
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_10044E680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(uint64_t, uint64_t);
  _QWORD *v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t *v54;
  uint64_t v55;
  _QWORD v56[5];
  _QWORD v57[5];
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v54 = a4;
  v45 = a1;
  v48 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v48 - 8);
  v6 = __chkstk_darwin(v48);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v6);
  v11 = (char *)&v43 - v10;
  v49 = a3;
  v44 = a2;
  if (a3 != a2)
  {
    v12 = 40 * v49 - 40;
    v13 = v48;
LABEL_6:
    v14 = v45;
    v46 = v12;
    v15 = v12;
    while (1)
    {
      v64 = v14;
      v16 = *v54;
      v55 = v15;
      v17 = v16 + v15;
      sub_100092328(v16 + v15 + 40, (uint64_t)&v61);
      sub_100092328(v17, (uint64_t)v58);
      v18 = v62;
      v19 = v63;
      v20 = sub_10007E7A0(&v61, v62);
      v21 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
      v52 = v20;
      v53 = v21;
      v21(v18, v19);
      v23 = v59;
      v22 = v60;
      v24 = sub_10007E7A0(v58, v59);
      v25 = *(void (**)(uint64_t, uint64_t))(v22 + 16);
      v50 = v24;
      v51 = v25;
      v25(v23, v22);
      v26 = static Date.< infix(_:_:)(v11, v8);
      v27 = *(void (**)(char *, uint64_t))(v47 + 8);
      v27(v8, v13);
      v27(v11, v13);
      if ((v26 & 1) != 0)
      {
        sub_100068588(v58);
        result = sub_100068588(&v61);
        v28 = v64;
        v29 = v55;
      }
      else
      {
        v53(v18, v19);
        v51(v23, v22);
        v30 = static Date.> infix(_:_:)(v11, v8);
        v27(v8, v13);
        v27(v11, v13);
        if ((v30 & 1) != 0)
        {
          sub_100068588(v58);
          result = sub_100068588(&v61);
LABEL_5:
          v12 = v46 + 40;
          if (++v49 == v44)
            return result;
          goto LABEL_6;
        }
        v31 = v62;
        v32 = v63;
        sub_10007E7A0(&v61, v62);
        v33 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v32 + 8))(v57, v31, v32);
        v34 = AnyHashable.hashValue.getter(v33);
        sub_100067748((uint64_t)v57);
        v35 = v59;
        v36 = v60;
        sub_10007E7A0(v58, v59);
        v37 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v36 + 8))(v56, v35, v36);
        v38 = AnyHashable.hashValue.getter(v37);
        sub_100067748((uint64_t)v56);
        sub_100068588(v58);
        result = sub_100068588(&v61);
        v39 = v34 < v38;
        v28 = v64;
        v29 = v55;
        if (!v39)
          goto LABEL_5;
      }
      v40 = *v54;
      if (!*v54)
        break;
      v41 = v40 + v29;
      sub_1000E85C4((__int128 *)(v40 + v29 + 40), (uint64_t)&v61);
      v42 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)(v41 + 40) = *(_OWORD *)v41;
      *(_OWORD *)(v41 + 56) = v42;
      *(_QWORD *)(v41 + 72) = *(_QWORD *)(v41 + 32);
      result = sub_1000E85C4(&v61, v41);
      v15 = v29 - 40;
      v14 = v28 + 1;
      if (v49 == v14)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10044EA38(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, uint64_t);
  _BYTE *v24;
  char v25;
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  char *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(uint64_t, uint64_t);
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  _BYTE *v58;
  char v59;
  void (*v60)(_BYTE *, uint64_t);
  uint64_t v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  __int128 v79;
  __int128 v80;
  uint64_t result;
  _BYTE v82[16];
  char *v83;
  char *v84;
  unint64_t v85;
  char *v86;
  _QWORD *v87;
  void (*v88)(uint64_t, uint64_t);
  char *v89;
  char *v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD v96[5];
  _QWORD v97[5];
  _QWORD v98[3];
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[3];
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;

  v94 = type metadata accessor for Date(0);
  v93 = *(_QWORD *)(v94 - 8);
  v8 = __chkstk_darwin(v94);
  v92 = &v82[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v91 = &v82[-v10];
  v11 = a2 - a1;
  v12 = (a2 - a1) / 40;
  v86 = a3;
  v13 = a3 - a2;
  v14 = v13 / 40;
  v106 = a1;
  v105 = a4;
  if (v12 >= v13 / 40)
  {
    if (v13 >= -39)
    {
      if (a4 != a2 || &a2[40 * v14] <= a4)
        memmove(a4, a2, 40 * v14);
      v45 = &a4[40 * v14];
      v104 = v45;
      v106 = a2;
      if (v13 >= 40 && a1 < a2)
      {
        v46 = v86 - 40;
        v84 = a4;
        v83 = a1;
        do
        {
          v90 = v46;
          sub_100092328((uint64_t)(v45 - 40), (uint64_t)v101);
          v95 = a2;
          v89 = a2 - 40;
          sub_100092328((uint64_t)(a2 - 40), (uint64_t)v98);
          v49 = v102;
          v50 = v103;
          v51 = sub_10007E7A0(v101, v102);
          v52 = *(void (**)(uint64_t, uint64_t))(v50 + 16);
          v53 = v91;
          v87 = v51;
          v88 = v52;
          v52(v49, v50);
          v54 = v99;
          v55 = v100;
          v56 = sub_10007E7A0(v98, v99);
          v57 = *(char **)(v55 + 16);
          v58 = v92;
          v85 = (unint64_t)v56;
          v86 = v57;
          ((void (*)(uint64_t, uint64_t))v57)(v54, v55);
          v59 = static Date.< infix(_:_:)(v53, v58);
          v60 = *(void (**)(_BYTE *, uint64_t))(v93 + 8);
          v61 = v94;
          v60(v58, v94);
          v60(v53, v61);
          if ((v59 & 1) != 0)
          {
            v62 = 1;
          }
          else
          {
            v88(v49, v50);
            ((void (*)(uint64_t, uint64_t))v86)(v54, v55);
            v63 = static Date.> infix(_:_:)(v53, v58);
            v60(v58, v61);
            v60(v53, v61);
            if ((v63 & 1) != 0)
            {
              v62 = 0;
            }
            else
            {
              v64 = v102;
              v65 = v103;
              sub_10007E7A0(v101, v102);
              v66 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v65 + 8))(v97, v64, v65);
              v67 = AnyHashable.hashValue.getter(v66);
              sub_100067748((uint64_t)v97);
              v68 = v99;
              v69 = v100;
              sub_10007E7A0(v98, v99);
              v70 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v69 + 8))(v96, v68, v69);
              v71 = AnyHashable.hashValue.getter(v70);
              sub_100067748((uint64_t)v96);
              v62 = v67 < v71;
            }
          }
          v72 = v95;
          v73 = (unint64_t)v84;
          v74 = v83;
          v75 = v90;
          v76 = v90 + 40;
          sub_100068588(v98);
          sub_100068588(v101);
          if (v62)
          {
            v77 = v89;
            if (v76 != v72 || v75 >= v72)
            {
              v47 = *(_OWORD *)v89;
              v48 = *((_OWORD *)v89 + 1);
              *((_QWORD *)v75 + 4) = *((_QWORD *)v89 + 4);
              *(_OWORD *)v75 = v47;
              *((_OWORD *)v75 + 1) = v48;
            }
            v106 -= 40;
            v45 = v104;
            if ((unint64_t)v104 <= v73)
              break;
          }
          else
          {
            v78 = v104;
            v45 = v104 - 40;
            v104 -= 40;
            if (v76 < v78 || v75 >= v78 || v76 != v78)
            {
              v79 = *(_OWORD *)v45;
              v80 = *(_OWORD *)(v78 - 24);
              *((_QWORD *)v75 + 4) = *((_QWORD *)v78 - 1);
              *(_OWORD *)v75 = v79;
              *((_OWORD *)v75 + 1) = v80;
            }
            v77 = v72;
            if ((unint64_t)v45 <= v73)
              break;
          }
          v46 = v75 - 40;
          a2 = v77;
        }
        while (v77 > v74);
      }
LABEL_49:
      sub_100465594((void **)&v106, (const void **)&v105, &v104);
      return 1;
    }
  }
  else if (v11 >= -39)
  {
    if (a4 != a1 || &a1[40 * v12] <= a4)
      memmove(a4, a1, 40 * v12);
    v85 = (unint64_t)&a4[40 * v12];
    v104 = (char *)v85;
    if (v11 >= 40 && a2 < v86)
    {
      while (1)
      {
        v95 = a2;
        sub_100092328((uint64_t)a2, (uint64_t)v101);
        sub_100092328((uint64_t)a4, (uint64_t)v98);
        v15 = v102;
        v16 = v103;
        v17 = (char *)sub_10007E7A0(v101, v102);
        v18 = *(char **)(v16 + 16);
        v19 = v91;
        v89 = v17;
        v90 = v18;
        ((void (*)(uint64_t, uint64_t))v18)(v15, v16);
        v21 = v99;
        v20 = v100;
        v22 = sub_10007E7A0(v98, v99);
        v23 = *(void (**)(uint64_t, uint64_t))(v20 + 16);
        v24 = v92;
        v87 = v22;
        v88 = v23;
        v23(v21, v20);
        v25 = static Date.< infix(_:_:)(v19, v24);
        v26 = *(void (**)(_BYTE *, uint64_t))(v93 + 8);
        v27 = v94;
        v26(v24, v94);
        v26(v19, v27);
        if ((v25 & 1) != 0)
        {
          sub_100068588(v98);
          sub_100068588(v101);
          v28 = v95;
        }
        else
        {
          ((void (*)(uint64_t, uint64_t))v90)(v15, v16);
          v88(v21, v20);
          v33 = static Date.> infix(_:_:)(v19, v24);
          v26(v24, v27);
          v26(v19, v27);
          if ((v33 & 1) != 0)
          {
            sub_100068588(v98);
            sub_100068588(v101);
            v28 = v95;
LABEL_17:
            v29 = v106;
            v42 = v105 + 40;
            if (v106 != v105 || v106 >= v42)
            {
              v43 = *(_OWORD *)v105;
              v44 = *((_OWORD *)v105 + 1);
              *((_QWORD *)v106 + 4) = *((_QWORD *)v105 + 4);
              *v29 = v43;
              v29[1] = v44;
            }
            v105 = v42;
            v30 = (unint64_t)v28;
            goto LABEL_22;
          }
          v34 = v102;
          v35 = v103;
          sub_10007E7A0(v101, v102);
          v36 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v35 + 8))(v97, v34, v35);
          v37 = AnyHashable.hashValue.getter(v36);
          sub_100067748((uint64_t)v97);
          v38 = v99;
          v39 = v100;
          sub_10007E7A0(v98, v99);
          v40 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v39 + 8))(v96, v38, v39);
          v41 = AnyHashable.hashValue.getter(v40);
          sub_100067748((uint64_t)v96);
          sub_100068588(v98);
          sub_100068588(v101);
          v28 = v95;
          if (v37 >= v41)
            goto LABEL_17;
        }
        v29 = v106;
        v30 = (unint64_t)(v28 + 40);
        if (v106 >= v28 && (unint64_t)v106 < v30 && v106 == v28)
        {
          v29 = v28;
        }
        else
        {
          v31 = *(_OWORD *)v28;
          v32 = *((_OWORD *)v28 + 1);
          *((_QWORD *)v106 + 4) = *((_QWORD *)v28 + 4);
          *v29 = v31;
          v29[1] = v32;
        }
LABEL_22:
        v106 = (char *)v29 + 40;
        a4 = v105;
        if ((unint64_t)v105 < v85)
        {
          a2 = (char *)v30;
          if (v30 < (unint64_t)v86)
            continue;
        }
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10044F1F8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_10006CBAC(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1000E85C4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_10044F270(uint64_t a1, uint64_t a2)
{
  char v4;
  int *v5;
  char v6;
  _OWORD v8[5];
  _BYTE v9[80];
  _BYTE v10[24];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[80];
  _BYTE v18[80];

  sub_1000271D4(a1, (uint64_t)v18, &qword_100655F30);
  sub_1000271D4(a2, (uint64_t)v17, &qword_100655F30);
  sub_1000271D4((uint64_t)v18, (uint64_t)v10, &qword_100655F30);
  sub_1000271D4((uint64_t)v17, (uint64_t)&v12, &qword_100655F30);
  if (!v11)
  {
    sub_10000CB4C((uint64_t)v17, &qword_100655F30);
    sub_10000CB4C((uint64_t)v18, &qword_100655F30);
    if (!*((_QWORD *)&v13 + 1))
    {
      sub_10000CB4C((uint64_t)v10, &qword_100655F30);
      goto LABEL_7;
    }
LABEL_12:
    sub_10000CB4C((uint64_t)v10, &qword_100655F78);
LABEL_13:
    v6 = 0;
    return v6 & 1;
  }
  sub_1000271D4((uint64_t)v10, (uint64_t)v9, &qword_100655F30);
  if (!*((_QWORD *)&v13 + 1))
  {
    sub_10000CB4C((uint64_t)v17, &qword_100655F30);
    sub_10000CB4C((uint64_t)v18, &qword_100655F30);
    sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_100655BC0);
    goto LABEL_12;
  }
  v8[2] = v14;
  v8[3] = v15;
  v8[4] = v16;
  v8[0] = v12;
  v8[1] = v13;
  v4 = static AnyHashable.== infix(_:_:)(v9, v8);
  sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100655BC0);
  sub_10000CB4C((uint64_t)v17, &qword_100655F30);
  sub_10000CB4C((uint64_t)v18, &qword_100655F30);
  sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_100655BC0);
  sub_10000CB4C((uint64_t)v10, &qword_100655F30);
  if ((v4 & 1) == 0)
    goto LABEL_13;
LABEL_7:
  if ((static AnyHashable.== infix(_:_:)(a1 + 80, a2 + 80) & 1) == 0)
    goto LABEL_13;
  v5 = (int *)type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  if ((static Date.== infix(_:_:)(a1 + v5[6], a2 + v5[6]) & 1) == 0)
    goto LABEL_13;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + v5[7]), *(_QWORD *)(a2 + v5[7])) & 1) == 0)
    goto LABEL_13;
  v6 = _s5Files37DOCProgressProvidingOperationIconTypeO21__derived_enum_equalsySbAC_ACtFZ_0(a1 + v5[8], a2 + v5[8]);
  return v6 & 1;
}

_QWORD *sub_10044F488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[5];
  _BYTE v33[80];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[80];
  _BYTE v45[80];
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  _QWORD *v49;
  _QWORD *v50;

  v49 = _swiftEmptyArrayStorage;
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v3 = a3;
    v4 = a2;
    v5 = 0;
    v30 = a1 + 32;
    v50 = (_QWORD *)v47 + 1;
    v28 = a2 + 32;
    v25 = a2 + 72;
    v26 = a3 + 32;
    v29 = _swiftEmptyArrayStorage;
LABEL_8:
    sub_1000271D4(v30 + 80 * v5, (uint64_t)v46, (uint64_t *)&unk_100655BC0);
    v7 = *((_QWORD *)&v48 + 1);
    v6 = v48;
    sub_10007E7A0(v50, v48);
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    LOBYTE(v6) = objc_msgSend(v8, "isCancelled");

    if ((v6 & 1) != 0)
      goto LABEL_6;
    v9 = v48;
    sub_10007E7A0(v50, v48);
    (*(void (**)(__int128 *__return_ptr, _QWORD, _QWORD))(*((_QWORD *)&v9 + 1) + 8))(&v34, v9, *((_QWORD *)&v9 + 1));
    v10 = *(_QWORD *)(v4 + 16);
    if (!v10)
      goto LABEL_19;
    sub_10006777C(v28, (uint64_t)v45);
    swift_bridgeObjectRetain(v4);
    v11 = static AnyHashable.== infix(_:_:)(v45, &v34);
    sub_100067748((uint64_t)v45);
    if ((v11 & 1) != 0)
    {
      swift_bridgeObjectRelease(v4);
      goto LABEL_36;
    }
    if (v10 == 1)
    {
      swift_bridgeObjectRelease(v4);
      goto LABEL_19;
    }
    v12 = v25;
    v13 = 1;
    while (1)
    {
      result = (_QWORD *)sub_10006777C(v12, (uint64_t)v45);
      v15 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      v16 = static AnyHashable.== infix(_:_:)(v45, &v34);
      sub_100067748((uint64_t)v45);
      if ((v16 & 1) != 0)
      {
        v4 = a2;
        swift_bridgeObjectRelease(a2);
        v3 = a3;
LABEL_36:
        sub_100067748((uint64_t)&v34);
        sub_1000271D4((uint64_t)v46, (uint64_t)v45, (uint64_t *)&unk_100655BC0);
LABEL_5:
        sub_10000CB4C((uint64_t)v45, (uint64_t *)&unk_100655BC0);
LABEL_6:
        sub_10000CB4C((uint64_t)v46, (uint64_t *)&unk_100655BC0);
        goto LABEL_7;
      }
      ++v13;
      v12 += 40;
      if (v15 == v10)
      {
        v4 = a2;
        swift_bridgeObjectRelease(a2);
        v3 = a3;
LABEL_19:
        sub_100067748((uint64_t)&v34);
        sub_1000271D4((uint64_t)v46, (uint64_t)v45, (uint64_t *)&unk_100655BC0);
        sub_1000271D4((uint64_t)v45, (uint64_t)v44, (uint64_t *)&unk_100655BC0);
        v17 = *(_QWORD *)(v3 + 16);
        if (!v17)
          goto LABEL_30;
        swift_bridgeObjectRetain(v3);
        v18 = v26;
        while (2)
        {
          sub_1000271D4(v18, (uint64_t)&v34, &qword_100655F30);
          sub_1000271D4((uint64_t)v44, (uint64_t)&v39, &qword_100655F30);
          if (!*((_QWORD *)&v35 + 1))
          {
            if (!*((_QWORD *)&v40 + 1))
            {
              sub_10000CB4C((uint64_t)&v34, &qword_100655F30);
LABEL_4:
              swift_bridgeObjectRelease(v3);
              sub_10000CB4C((uint64_t)v44, &qword_100655F30);
              goto LABEL_5;
            }
            goto LABEL_22;
          }
          sub_1000271D4((uint64_t)&v34, (uint64_t)v33, &qword_100655F30);
          if (!*((_QWORD *)&v40 + 1))
          {
            sub_10000CB4C((uint64_t)v33, (uint64_t *)&unk_100655BC0);
LABEL_22:
            sub_10000CB4C((uint64_t)&v34, &qword_100655F78);
            goto LABEL_23;
          }
          v32[2] = v41;
          v32[3] = v42;
          v32[4] = v43;
          v32[0] = v39;
          v32[1] = v40;
          v19 = static AnyHashable.== infix(_:_:)(v33, v32);
          sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_100655BC0);
          sub_10000CB4C((uint64_t)v33, (uint64_t *)&unk_100655BC0);
          sub_10000CB4C((uint64_t)&v34, &qword_100655F30);
          if ((v19 & 1) != 0)
            goto LABEL_4;
LABEL_23:
          v18 += 80;
          if (--v17)
            continue;
          break;
        }
        swift_bridgeObjectRelease(v3);
LABEL_30:
        sub_10000CB4C((uint64_t)v44, &qword_100655F30);
        sub_10000CB4C((uint64_t)v45, (uint64_t *)&unk_100655BC0);
        v36 = v47[0];
        v37 = v47[1];
        v38 = v48;
        v34 = v46[0];
        v35 = v46[1];
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
          sub_1001553CC(0, v29[2] + 1, 1);
        v20 = v49;
        v22 = v49[2];
        v21 = v49[3];
        if (v22 >= v21 >> 1)
        {
          sub_1001553CC(v21 > 1, v22 + 1, 1);
          v20 = v49;
        }
        v20[2] = v22 + 1;
        v29 = v20;
        v23 = &v20[10 * v22];
        v23[3] = v35;
        v23[4] = v36;
        v23[5] = v37;
        v23[6] = v38;
        v23[2] = v34;
        v4 = a2;
LABEL_7:
        if (++v5 == v31)
          return v29;
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10044F8DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044F908()
{
  uint64_t v0;

  return sub_10044BF3C(*(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_10044F930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100655F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10044F978()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10044F99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10044BBB0(a1, a2, a3, v3);
}

uint64_t sub_10044F9A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);

  v1 = sub_10006922C(&qword_100655F80);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  if (*((_QWORD *)v0 + 5))
  {
    sub_100068588((_QWORD *)v0 + 2);
    sub_100068588((_QWORD *)v0 + 7);
  }
  v5 = (v3 + 96) & ~v3;
  v6 = (v4 + v3 + v5) & ~v3;
  v7 = *(void (**)(char *, uint64_t))(v2 + 8);
  v7(&v0[v5], v1);
  v7(&v0[v6], v1);
  return swift_deallocObject(v0, v6 + v4, v3 | 7);
}

uint64_t sub_10044FA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100655F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10044FA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(sub_10006922C(&qword_100655F80) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  return sub_10044BD2C(a1, a2, a3, v3 + 16, v3 + ((v8 + 96) & ~v8), v3 + ((*(_QWORD *)(v7 + 64) + v8 + ((v8 + 96) & ~v8)) & ~v8));
}

void sub_10044FAFC(uint64_t a1)
{
  uint64_t v1;

  sub_10044B1CC(a1, v1);
}

void sub_10044FB04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_10044B6C8(a1, a2, v3, a3);
}

uint64_t sub_10044FB0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_100068588((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10044FB38(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, __n128), uint64_t a4)
{
  uint64_t v4;

  sub_10044B63C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (_QWORD *)(v4 + 24));
}

uint64_t sub_10044FB44()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10044FB68(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t, __n128), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double Current;
  uint64_t v21;
  void *v22;
  double v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  __n128 v30;
  char **v31;
  char *v32;
  Class isa;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, __n128);
  uint64_t v45;
  _BYTE v46[80];
  _QWORD v47[5];
  uint64_t v48;

  v45 = a4;
  v44 = a3;
  v42 = type metadata accessor for Date(0);
  v41 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_100655F20);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  v14 = a1[3];
  v15 = a1[4];
  sub_10007E7A0(a1, v14);
  v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  objc_msgSend(v16, "cancel");

  v17 = a1[3];
  v18 = a1[4];
  sub_10007E7A0(a1, v17);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v18 + 8))(v47, v17, v18);
  sub_100092328((uint64_t)a1, (uint64_t)&v48);
  v19 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  Current = CFAbsoluteTimeGetCurrent();
  v21 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable;
  v43 = a2;
  v22 = *(void **)(a2 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable);
  if (v22)
  {
    v23 = Current;
    v24 = v22;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v24);

    v25 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7);
    v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v13, v7);
    v27 = *(_QWORD *)(v25 + 16);
    if (!v27)
    {
LABEL_18:

      v30 = swift_bridgeObjectRelease(v25);
      goto LABEL_19;
    }
    v28 = v25 + 32;
    swift_bridgeObjectRetain(v25);
    while (1)
    {
      sub_1000271D4(v28, (uint64_t)v46, (uint64_t *)&unk_100655BC0);
      v29 = static AnyHashable.== infix(_:_:)(v46, v47);
      sub_10000CB4C((uint64_t)v46, (uint64_t *)&unk_100655BC0);
      if ((v29 & 1) != 0)
        break;
      v28 += 80;
      if (!--v27)
      {
LABEL_6:

        swift_bridgeObjectRelease_n(v25, 2);
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease_n(v25, 2);
    if (CFAbsoluteTimeGetCurrent() - v23 > 0.5)
    {
LABEL_8:

LABEL_19:
      v44(1, v30);
      sub_10000CB4C((uint64_t)v47, (uint64_t *)&unk_100655BC0);
      return;
    }
    v31 = &selRef_viewOptionsRoot;
    while (1)
    {
      v32 = v40;
      Date.init(timeIntervalSinceNow:)(0.05);
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
      objc_msgSend(v19, v31[323], isa);

      v34 = *(void **)(v43 + v21);
      if (!v34)
        break;
      v35 = v34;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v35);

      v25 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7);
      v26(v10, v7);
      v36 = *(_QWORD *)(v25 + 16);
      if (!v36)
        goto LABEL_18;
      v37 = v25 + 32;
      swift_bridgeObjectRetain(v25);
      while (1)
      {
        sub_1000271D4(v37, (uint64_t)v46, (uint64_t *)&unk_100655BC0);
        v38 = static AnyHashable.== infix(_:_:)(v46, v47);
        sub_10000CB4C((uint64_t)v46, (uint64_t *)&unk_100655BC0);
        if ((v38 & 1) != 0)
          break;
        v37 += 80;
        if (!--v36)
          goto LABEL_6;
      }
      swift_bridgeObjectRelease_n(v25, 2);
      v31 = &selRef_viewOptionsRoot;
      if (CFAbsoluteTimeGetCurrent() - v23 > 0.5)
        goto LABEL_8;
    }
  }
  else
  {
    swift_release(v45);
    __break(1u);
  }
  swift_release(v45);
  __break(1u);
}

uint64_t sub_10044FF5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10044FF80()
{
  uint64_t v0;

  sub_10044A630(*(void **)(v0 + 16));
}

uint64_t sub_10044FF88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10044FF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10044A7B8(a1, a2, v2);
}

uint64_t sub_10044FFA0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(v4 + 64) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    }
    else
    {
      v11 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v11;
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
    }
    v13 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    v14 = a3[6];
    v15 = v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[7];
    v19 = a3[8];
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)(v4 + v18) = v20;
    v21 = (_QWORD *)(v4 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    v24 = v20;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v23);
    if (EnumCaseMultiPayload == 1)
    {
      v27 = v22[1];
      *v21 = *v22;
      v21[1] = v27;
      swift_bridgeObjectRetain(v27);
      swift_storeEnumTagMultiPayload(v21, v23, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for UTType(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
      swift_storeEnumTagMultiPayload(v21, v23, 0);
    }
  }
  return v4;
}

double sub_100450154(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v10;

  if (a1[3])
  {
    sub_100068588(a1);
    sub_100068588(a1 + 5);
  }
  sub_100068588(a1 + 10);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = (char *)a1 + a2[8];
  v7 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*((_QWORD *)v6 + 1)).n128_u64[0];
  }
  else if (!EnumCaseMultiPayload)
  {
    v10 = type metadata accessor for UTType(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
  }
  return result;
}

uint64_t sub_100450230(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 80, a2 + 80);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = a3[8];
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  v22 = v18;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v21);
  if (EnumCaseMultiPayload == 1)
  {
    v25 = v20[1];
    *v19 = *v20;
    v19[1] = v25;
    swift_bridgeObjectRetain(v25);
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for UTType(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
    swift_storeEnumTagMultiPayload(v19, v21, 0);
  }
  return a1;
}

uint64_t sub_1004503B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      sub_10025C2AC((_QWORD *)a1, (_QWORD *)a2);
      sub_10025C2AC((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
    }
    else
    {
      sub_10000CB4C(a1, (uint64_t *)&unk_100655BC0);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = *(_OWORD *)(a2 + 64);
      v10 = *(_OWORD *)(a2 + 16);
      v9 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v8;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = v9;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v11 = *(_OWORD *)(a2 + 16);
    v12 = *(_OWORD *)(a2 + 32);
    v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
  }
  sub_10025C2AC((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[7];
  v19 = *(void **)(a2 + v18);
  v20 = *(void **)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  v21 = v19;

  if (a1 != a2)
  {
    v22 = a3[8];
    v23 = (_QWORD *)(a1 + v22);
    v24 = (_QWORD *)(a2 + v22);
    sub_100348714(a1 + v22);
    v25 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v25);
    if (EnumCaseMultiPayload == 1)
    {
      *v23 = *v24;
      v28 = v24[1];
      v23[1] = v28;
      swift_bridgeObjectRetain(v28);
      swift_storeEnumTagMultiPayload(v23, v25, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v27 = type metadata accessor for UTType(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v23, v24, v27);
      swift_storeEnumTagMultiPayload(v23, v25, 0);
    }
  }
  return a1;
}

uint64_t sub_1004505AC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)(a1 + 96) = v9;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  if (swift_getEnumCaseMultiPayload(v16, v17))
  {
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = type metadata accessor for UTType(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload(v15, v17, 0);
  }
  return a1;
}

uint64_t sub_1004506B0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  if (*(_QWORD *)(a1 + 24))
  {
    if (*(_QWORD *)(a2 + 24))
    {
      sub_100068588((_QWORD *)a1);
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      sub_100068588((_QWORD *)(a1 + 40));
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      goto LABEL_6;
    }
    sub_10000CB4C(a1, (uint64_t *)&unk_100655BC0);
  }
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_6:
  sub_100068588((_QWORD *)(a1 + 80));
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[7];
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  if (a1 != a2)
  {
    v16 = a3[8];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_100348714(a1 + v16);
    v19 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    if (swift_getEnumCaseMultiPayload(v18, v19))
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = type metadata accessor for UTType(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload(v17, v19, 0);
    }
  }
  return a1;
}

uint64_t sub_100450834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100450840);
}

uint64_t sub_100450840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 104);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1004508E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004508EC);
}

uint64_t sub_1004508EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 104) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100450988(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  v5[0] = "P";
  v5[1] = &unk_1004E92D8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = type metadata accessor for DOCProgressProvidingOperationIconType(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100450A2C()
{
  return sub_10005A360(&qword_100656050, type metadata accessor for DOCProgressCollectionListViewController.NullProgress, (uint64_t)&unk_1004E92F0);
}

uint64_t sub_100450A68(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)(v3 + 32);
  v14 = swift_allocObject(&unk_1005ED4A8, 24, 7);
  swift_weakInit(v14 + 16, v3);
  v15 = (_QWORD *)swift_allocObject(&unk_1005ED4D0, 48, 7);
  v15[2] = v14;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a1;
  aBlock[4] = sub_100451388;
  v26 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005ED4E8;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter(a1);
  v24 = _swiftEmptyArrayStorage;
  v17 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_10006922C((uint64_t *)&unk_100647540);
  v19 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v18, v19, v7, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v20 = v26;
  swift_release(v14);
  return swift_release(v20);
}

void sub_100450C98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  id v15;
  _QWORD aBlock[5];
  _QWORD *v17;
  char v18[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(void **)(Strong + 24);
    v11 = (_QWORD *)swift_allocObject(&unk_1005ED520, 48, 7);
    v11[2] = v9;
    v11[3] = a2;
    v11[4] = a3;
    v11[5] = a4;
    aBlock[4] = sub_100451398;
    v17 = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100087558;
    aBlock[3] = &unk_1005ED538;
    v12 = _Block_copy(aBlock);
    v13 = v17;
    v14 = v10;
    swift_retain();
    swift_retain();
    v15 = a4;
    swift_release(v13);
    objc_msgSend(v14, "domainStateWithCompletionHandler:", v12);
    _Block_release(v12);
    swift_release(v9);

  }
}

uint64_t sub_100450DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const void *v35;
  BOOL v36;
  char v37;
  BOOL v38;
  BOOL v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void **aBlock;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  void *v64;
  void *v65;
  _QWORD *v66;

  v54 = a6;
  v55 = a4;
  v56 = a5;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchTime(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v49 - v19;
  v21 = objc_msgSend(*(id *)(a3 + 24), "disconnectionState");
  v22 = objc_msgSend(*(id *)(a3 + 24), "isiCloudDriveProvider");
  if ((v22 & 1) != 0 || a1 == 2)
  {
    *(_BYTE *)(a3 + 16) = 1;
    v51 = *(_QWORD *)(a3 + 32);
    static DispatchTime.now()(v22);
    + infix(_:_:)(v18, a3 + OBJC_IVAR____TtC5Files29DOCProviderDomainStateManager_domainStatePollingInterval);
    v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    v52(v18, v14);
    v23 = (_QWORD *)swift_allocObject(&unk_1005ED5C0, 40, 7);
    v24 = v55;
    v25 = v56;
    v23[2] = a3;
    v23[3] = v24;
    v23[4] = v25;
    v65 = sub_10045140C;
    v66 = v23;
    aBlock = _NSConcreteStackBlock;
    v62 = 1107296256;
    v63 = sub_10004A82C;
    v64 = &unk_1005ED5D8;
    v26 = _Block_copy(&aBlock);
    v53 = a1;
    v27 = v26;
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter(v28);
    v60 = _swiftEmptyArrayStorage;
    v29 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v50 = v14;
    v30 = v21;
    v31 = v29;
    v32 = sub_10006922C((uint64_t *)&unk_100647540);
    v33 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    v34 = v31;
    v21 = v30;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v60, v32, v33, v8, v34);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v20, v13, v10, v27);
    v35 = v27;
    a1 = v53;
    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v58);
    v52(v20, v50);
    swift_release(v66);
  }
  v36 = a1 == 2;
  if (v36)
    v37 = 2;
  else
    v37 = 1;
  v38 = v21 == (id)1;
  v39 = v21 != (id)1;
  if (v38)
    v40 = v37;
  else
    v40 = 0;
  v41 = swift_allocObject(&unk_1005ED570, 48, 7);
  v42 = v56;
  *(_QWORD *)(v41 + 16) = v55;
  *(_QWORD *)(v41 + 24) = v42;
  *(_BYTE *)(v41 + 32) = v40;
  *(_QWORD *)(v41 + 40) = a3;
  v65 = sub_1004513D0;
  v66 = (_QWORD *)v41;
  aBlock = _NSConcreteStackBlock;
  v62 = 1107296256;
  v63 = sub_10004A82C;
  v64 = &unk_1005ED588;
  v43 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter(v44);
  v60 = _swiftEmptyArrayStorage;
  v45 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v46 = sub_10006922C((uint64_t *)&unk_100647540);
  v47 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v60, v46, v47, v8, v45);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v43);
  _Block_release(v43);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v58);
  result = swift_release(v66);
  *(_BYTE *)(a3 + 17) = v39;
  *(_BYTE *)(a3 + 18) = v36;
  return result;
}

void sub_1004511F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  id v6;

  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v5 = sub_100086BF0();
    v6 = (id)static OS_dispatch_queue.main.getter(v5);
    sub_100450A68(v6, a2, a3);

  }
}

uint64_t sub_100451274(void (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = objc_msgSend(*(id *)(a4 + 24), "localizedDisconnectionBannerText");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  a1(a3, v8, v10);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_1004512F8()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtC5Files29DOCProviderDomainStateManager_domainStatePollingInterval;
  v2 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_100451358()
{
  return type metadata accessor for DOCProviderDomainStateManager(0);
}

uint64_t sub_100451360()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100451388()
{
  uint64_t v0;

  sub_100450C98(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100451398(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_100450DB0(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1004513A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004513D0()
{
  uint64_t v0;

  return sub_100451274(*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1004513E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10045140C()
{
  uint64_t *v0;

  sub_1004511F8(v0[2], v0[3], v0[4]);
}

id sub_100451428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *v5;
  id v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[24];
  objc_super v18;

  v5 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
  v6 = objc_allocWithZone(v5);
  swift_retain();
  v7 = (char *)v6;
  UUID.init()(v7);
  v8 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
  *(_QWORD *)v8 = DOCSplitBrowserViewController.didCommitPreview(of:);
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = a2;
  swift_retain();

  v18.receiver = v7;
  v18.super_class = v5;
  v10 = objc_msgSendSuper2(&v18, "init");
  swift_release(a2);
  v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess(v11, v17, 33, 0);
  v12 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v14 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v14 >= v13 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
  v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
  specialized Array._endMutation()(v15);
  swift_endAccess(v17);
  return v12;
}

id sub_100451560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *v5;
  id v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[24];
  objc_super v18;

  v5 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
  v6 = objc_allocWithZone(v5);
  swift_retain();
  v7 = (char *)v6;
  UUID.init()(v7);
  v8 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  v9 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  swift_retain();

  v18.receiver = v7;
  v18.super_class = v5;
  v10 = objc_msgSendSuper2(&v18, "init");
  swift_release(a2);
  v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess(v11, v17, 33, 0);
  v12 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v14 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v14 >= v13 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
  v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
  specialized Array._endMutation()(v15);
  swift_endAccess(v17);
  return v12;
}

id sub_1004516BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNodeObserverSubscriber(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100451810()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  sub_1001626AC();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_100451978(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;

  v10 = _Block_copy(aBlock);
  v11 = swift_allocObject(a4, 24, 7);
  *(_QWORD *)(v11 + 16) = v10;
  v12 = a1;
  v13 = (void *)a6(a5, v11);

  swift_release(v11);
  return v13;
}

void sub_100451A00(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_10006922C((uint64_t *)&unk_1006424B0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

void sub_100451B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  char *v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = sub_10004FD50();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess(v2, v9, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v2);
    if (v4)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v8 = *v2;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  if (!v4)
    goto LABEL_15;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = (char *)*(id *)(v3 + 8 * i + 32);
      v7 = v6;
      if (*(_QWORD *)&v6[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock])
        (*(void (**)(uint64_t))&v6[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock])(v1);

    }
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_100451C54(uint64_t a1, uint64_t a2)
{
  return sub_1004531A0(a2);
}

uint64_t sub_100451C64(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t ObjectType;
  void *v13;
  char *v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  char *v18;
  uint64_t (**v19)(uint64_t);
  char *v20;
  id v21;
  char *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _BYTE v35[24];
  objc_super v36;
  _QWORD *v37;

  v4 = v3;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(double *)(v3 + 64) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(a1, 2);
    if (v7)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(a1);
    v28 = _swiftEmptyArrayStorage;
LABEL_21:
    v33 = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(v4 + 32) = v28;
    swift_bridgeObjectRelease(v33);
    return v4;
  }
  if (a1 < 0)
    v32 = a1;
  else
    v32 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(a1, 2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v32);
  if (!v7)
    goto LABEL_20;
LABEL_3:
  v37 = _swiftEmptyArrayStorage;
  result = sub_1001551C0(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v34 = a2 & 1;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      }
      else
      {
        v10 = *(_QWORD *)(a1 + 8 * v9 + 32);
        swift_unknownObjectRetain(v10);
      }
      v11 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCNodeObserver());
      ObjectType = swift_getObjectType(v10);
      v13 = (void *)swift_unknownObjectRetain(v10);
      v14 = sub_100452ED0(v13, 0, v34, v11, ObjectType);
      v15 = swift_allocObject(&unk_1005ED648, 24, 7);
      swift_weakInit(v15 + 16, v4);
      v16 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
      v17 = objc_allocWithZone(v16);
      swift_retain_n(v15, 2);
      v18 = (char *)v17;
      UUID.init()(v18);
      v19 = (uint64_t (**)(uint64_t))&v18[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
      *v19 = sub_10045347C;
      v19[1] = (uint64_t (*)(uint64_t))v15;
      v20 = &v18[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
      *(_QWORD *)v20 = 0;
      *((_QWORD *)v20 + 1) = 0;
      swift_retain();

      v36.receiver = v18;
      v36.super_class = v16;
      v21 = objc_msgSendSuper2(&v36, "init");
      swift_release(v15);
      v22 = &v14[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers];
      swift_beginAccess(&v14[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers], v35, 33, 0);
      v23 = v21;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v25 = *(_QWORD *)((*(_QWORD *)v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v24 = *(_QWORD *)((*(_QWORD *)v22 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v25 >= v24 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
      v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      specialized Array._endMutation()(v26);
      swift_endAccess(v35);
      v27 = swift_unknownObjectRelease(v10);
      swift_release_n(v15, 2, v27);
      v28 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      {
        sub_1001551C0(0, v28[2] + 1, 1);
        v28 = v37;
      }
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_1001551C0(v29 > 1, v30 + 1, 1);
        v28 = v37;
      }
      ++v9;
      v28[2] = v30 + 1;
      v31 = &v28[2 * v30];
      v31[4] = v23;
      v31[5] = v14;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease(a1);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100451F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v24;
  _BYTE v25[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  v12 = sub_100086BF0();
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_1005ED648, 24, 7);
  swift_beginAccess(v11, v25, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  swift_weakInit(v14 + 16, Strong);
  swift_release(Strong);
  aBlock[4] = sub_100453484;
  v24 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005ED660;
  v16 = _Block_copy(aBlock);
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_10008BAAC();
  v19 = sub_10006922C((uint64_t *)&unk_100647540);
  v20 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v3, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double sub_100452188(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_1004527E8();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

uint64_t DOCMultiNodeObserver.deinit()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char **v4;
  char *v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  char *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t result;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  _BYTE v41[24];
  char v42[24];

  sub_10045273C();
  v1 = v0[4];
  v38 = *(_QWORD *)(v1 + 16);
  if (!v38)
  {
LABEL_35:
    swift_bridgeObjectRelease(v0[2]);
    swift_bridgeObjectRelease(v0[3]);
    swift_bridgeObjectRelease(v0[4]);
    swift_bridgeObjectRelease(v0[6]);
    return (uint64_t)v0;
  }
  v36 = v0;
  v37 = v1 + 32;
  v35 = v0[4];
  swift_bridgeObjectRetain_n(v1, 2);
  v2 = 0;
  while (1)
  {
    v4 = (char **)(v37 + 16 * v2);
    v6 = *v4;
    v5 = v4[1];
    v7 = (uint64_t *)&v5[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers];
    swift_beginAccess(&v5[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers], v42, 0, 0);
    v8 = *v7;
    v39 = v5;
    v40 = v6;
    if ((unint64_t)*v7 >> 62)
    {
      if (v8 < 0)
        v31 = *v7;
      else
        v31 = v8 & 0xFFFFFFFFFFFFFF8;
      v32 = v6;
      v33 = v5;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (!v9)
        goto LABEL_3;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      v10 = v6;
      v11 = v5;
      swift_bridgeObjectRetain(v8);
      if (!v9)
        goto LABEL_3;
    }
    v12 = (v8 & 0xC000000000000001) != 0
        ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8)
        : (char *)*(id *)(v8 + 32);
    v13 = v12;
    v14 = v40;
    v15 = &v40[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_uuid];
    v16 = static UUID.== infix(_:_:)(&v12[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_uuid], &v40[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_uuid]);

    if ((v16 & 1) == 0)
      break;
    v17 = 0;
LABEL_21:
    swift_bridgeObjectRelease(v8);
    swift_beginAccess(v7, v41, 33, 0);
    v23 = *v7;
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v7);
    *v7 = v23;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v23 < 0 || (v23 & 0x4000000000000000) != 0)
    {
      v23 = sub_1000818A4(v23);
      *v7 = v23;
    }
    v25 = v23 & 0xFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v26)
      goto LABEL_37;
    v27 = v26 - 1;
    v28 = v26 - 1 - v17;
    if (v28 < 0)
      goto LABEL_38;
    v29 = v25 + 8 * v17;
    v3 = *(void **)(v29 + 32);
    v30 = memmove((void *)(v29 + 32), (const void *)(v29 + 40), 8 * v28);
    *(_QWORD *)(v25 + 16) = v27;
    specialized Array._endMutation()(v30);
    swift_endAccess(v41);

LABEL_4:
    ++v2;

    if (v2 == v38)
    {
      swift_bridgeObjectRelease_n(v35, 2);
      v0 = v36;
      goto LABEL_35;
    }
  }
  if (v9 == 1)
  {
LABEL_3:

    swift_bridgeObjectRelease(v8);
    v3 = v5;
    goto LABEL_4;
  }
  v18 = 5;
  while (1)
  {
    v17 = v18 - 4;
    if ((v8 & 0xC000000000000001) != 0)
      v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, v8);
    else
      v19 = (char *)*(id *)(v8 + 8 * v18);
    v20 = v19;
    v21 = static UUID.== infix(_:_:)(&v19[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_uuid], v15);

    if ((v21 & 1) != 0)
    {
      v14 = v40;
      goto LABEL_21;
    }
    v22 = v18 - 3;
    if (__OFADD__(v17, 1))
      break;
    ++v18;
    if (v22 == v9)
      goto LABEL_3;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t DOCMultiNodeObserver.__deallocating_deinit()
{
  uint64_t v0;

  DOCMultiNodeObserver.deinit();
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t sub_1004524F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t *v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE v24[24];

  v7 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v24[-v12 - 8];
  UUID.init()(v14);
  v15 = &v13[*(int *)(v7 + 20)];
  *v15 = a1;
  v15[1] = a2;
  sub_100453494((uint64_t)v13, (uint64_t)v10);
  v16 = (unint64_t *)(v3 + 48);
  swift_beginAccess(v3 + 48, v24, 33, 0);
  v17 = *(_QWORD *)(v3 + 48);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
  *(_QWORD *)(v3 + 48) = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v17 = sub_1001541BC(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
    *v16 = v17;
  }
  v20 = *(_QWORD *)(v17 + 16);
  v19 = *(_QWORD *)(v17 + 24);
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1001541BC(v19 > 1, v20 + 1, 1, v17);
    *v16 = v17;
  }
  *(_QWORD *)(v17 + 16) = v20 + 1;
  sub_1004534D8((uint64_t)v10, v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20);
  swift_endAccess(v24);
  v21 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a3, v13, v21);
  return sub_10045351C((uint64_t)v13);
}

double sub_100452690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v4;
  id v5;
  id v6;
  double result;

  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
  {
    *(_BYTE *)(v0 + 40) = 1;
    v1 = *(_QWORD *)(v0 + 32);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
      v3 = (void **)(v1 + 40);
      do
      {
        v4 = *v3;
        v5 = *(v3 - 1);
        v6 = v4;
        sub_1000B0BAC();

        v3 += 2;
        --v2;
      }
      while (v2);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
    }
  }
  return result;
}

double sub_10045273C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v4;
  id v5;
  id v6;
  double result;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    *(_BYTE *)(v0 + 40) = 0;
    v1 = *(_QWORD *)(v0 + 32);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
      v3 = (void **)(v1 + 40);
      do
      {
        v4 = *v3;
        v5 = *(v3 - 1);
        v6 = v4;
        sub_1001626AC();

        v3 += 2;
        --v2;
      }
      while (v2);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
    }
  }
  return result;
}

void sub_1004527E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  if ((*(_BYTE *)(v1 + 56) & 1) == 0)
  {
    *(_BYTE *)(v1 + 56) = 1;
    v16 = sub_100086BF0();
    v27 = v3;
    v26 = static OS_dispatch_queue.main.getter(v16);
    static DispatchTime.now()(v26);
    + infix(_:_:)(v12, *(double *)(v1 + 64));
    v17 = *(void (**)(char *, uint64_t))(v10 + 8);
    v17(v12, v9);
    v18 = swift_allocObject(&unk_1005ED648, 24, 7);
    swift_weakInit(v18 + 16, v1);
    aBlock[4] = sub_10045348C;
    v30 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005ED688;
    v19 = _Block_copy(aBlock);
    swift_release(v30);
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = _swiftEmptyArrayStorage;
    v21 = sub_10008BAAC();
    v22 = sub_10006922C((uint64_t *)&unk_100647540);
    v23 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v2, v21);
    v24 = (void *)v26;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
    v17(v15, v9);
  }
}

double sub_100452A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE v21[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    if (*(_BYTE *)(Strong + 56) == 1)
    {
      v5 = *(_QWORD *)(Strong + 32);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = _swiftEmptyArrayStorage;
      if (v6)
      {
        v20 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v5);
        specialized ContiguousArray.reserveCapacity(_:)(v6);
        v8 = 40;
        do
        {
          v9 = *(_QWORD *)(*(_QWORD *)(v5 + v8) + OBJC_IVAR____TtC5Files15DOCNodeObserver_node);
          v10 = swift_unknownObjectRetain(v9);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          v11 = v20[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
          v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
          specialized ContiguousArray._endMutation()(v12);
          v8 += 16;
          --v6;
        }
        while (v6);
        v7 = v20;
        swift_bridgeObjectRelease(v5);
      }
      v13 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v4 + 16) = v7;
      swift_bridgeObjectRelease(v13);
      swift_beginAccess(v4 + 48, &v20, 0, 0);
      v14 = *(_QWORD *)(v4 + 48);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v16 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
        v17 = *(_QWORD *)(v16 - 8);
        v18 = v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        v19 = *(_QWORD *)(v17 + 72);
        swift_bridgeObjectRetain(v14);
        do
        {
          (*(void (**)(uint64_t))(v18 + *(int *)(v16 + 20)))(v4);
          v18 += v19;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease(v14);
      }
      *(_BYTE *)(v4 + 56) = 0;
    }
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100452BE0(_QWORD *a1)
{
  return sub_1001530E4(0, a1[2], 0, a1);
}

_QWORD *sub_100452BF4(_QWORD *a1)
{
  return sub_100153AE8(0, a1[2], 0, a1);
}

uint64_t sub_100452C08()
{
  return type metadata accessor for DOCNodeObserverSubscriber(0);
}

uint64_t type metadata accessor for DOCNodeObserverSubscriber(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_1006561E8, (uint64_t)&nominal type descriptor for DOCNodeObserverSubscriber);
}

uint64_t sub_100452C24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = &unk_1004E9430;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCNodeObserver()
{
  return objc_opt_self(_TtC5Files15DOCNodeObserver);
}

uint64_t type metadata accessor for DOCMultiNodeObserver()
{
  return objc_opt_self(_TtC5Files20DOCMultiNodeObserver);
}

uint64_t sub_100452CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100452CF4);
}

uint64_t sub_100452CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100452D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100452D7C);
}

uint64_t sub_100452D7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for DOCMultiNodeObserver.Subscriber(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100656420, (uint64_t)&nominal type descriptor for DOCMultiNodeObserver.Subscriber);
}

_QWORD *sub_100452E08(_QWORD *a1)
{
  return sub_100153E40(0, a1[2], 0, a1);
}

uint64_t sub_100452E1C(unint64_t a1)
{
  return sub_100081B5C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_100452E30(_QWORD *a1)
{
  return sub_100153F60(0, a1[2], 0, a1);
}

uint64_t sub_100452E44(unint64_t a1)
{
  return sub_100081B70(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_100452E58(_QWORD *a1)
{
  return sub_100081920(0, a1[2], 0, a1);
}

_QWORD *sub_100452E6C(_QWORD *a1)
{
  return sub_1001543FC(0, a1[2], 0, a1);
}

_QWORD *sub_100452E80(_QWORD *a1)
{
  return sub_1001543E8(0, a1[2], 0, a1);
}

_QWORD *sub_100452E94(_QWORD *a1)
{
  return sub_1001547B4(0, a1[2], 0, a1);
}

_QWORD *sub_100452EA8(_QWORD *a1)
{
  return sub_1001548D4(0, a1[2], 0, a1);
}

_QWORD *sub_100452EBC(_QWORD *a1)
{
  return sub_100154B1C(0, a1[2], 0, a1);
}

char *sub_100452ED0(void *a1, void *a2, char a3, char *a4, uint64_t a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v23;
  objc_super v24;
  char v25;

  ObjectType = (objc_class *)swift_getObjectType(a4);
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers] = _swiftEmptyArrayStorage;
  v11 = OBJC_IVAR____TtC5Files15DOCNodeObserver_node;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_node] = a1;
  if ((a3 & 1) != 0 && (DOCNode.nodeType.getter(a5) & 1) != 0)
  {
    v23 = a4;
    if ((objc_msgSend((id)swift_unknownObjectRetain(a1), "isFolder") & 1) != 0)
      v13 = 1;
    else
      v13 = objc_msgSend(a1, "isPackage");
  }
  else
  {
    v12 = a4;
    swift_unknownObjectRetain(a1);
    v13 = 0;
  }
  a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_deepObserving] = v13;
  v14 = type metadata accessor for DOCNodeCollection();
  v15 = *(void **)&a4[v11];
  v16 = swift_getObjectType(v15);
  v17 = a2;
  swift_unknownObjectRetain(v15);
  v25 = v13 ^ 1;
  v18 = 4;
  if (!v13)
    v18 = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection] = sub_100163EB8(v15, 0, a2, v18 | ((unint64_t)(v13 ^ 1u) << 32), v14, v16);

  v24.receiver = a4;
  v24.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v24, "init");
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection]
      + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate;
  *(_QWORD *)(v20 + 8) = &off_1005ED600;
  swift_unknownObjectWeakAssign(v20, v19);
  v21 = v19;
  sub_1000B0BAC();

  swift_unknownObjectRelease(a1);
  return v21;
}

uint64_t sub_100453090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_uuid;
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1)
       : (char *)*(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = static UUID.== infix(_:_:)(&v6[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_uuid], a2);

    if ((v8 & 1) != 0)
      return v5;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
      return 0;
  }
}

uint64_t sub_1004531A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Files15DOCNodeObserver_node;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_node);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files15DOCNodeObserver_node) = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v4);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers, v17, 0, 0);
  v6 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*v5);
    if (v7)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v6);
  }
  if (v6 < 0)
    v16 = *v5;
  else
    v16 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  result = _CocoaArrayWrapper.endIndex.getter(v16);
  v7 = result;
  if (!result)
    return swift_bridgeObjectRelease(v6);
LABEL_3:
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
      else
        v10 = (char *)*(id *)(v6 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      v13 = *(void (**)(uint64_t))&v10[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
      v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock + 8];
      v14 = *(_QWORD *)(v2 + v3);
      swift_retain(v12);
      v15 = swift_unknownObjectRetain(v14);
      v13(v15);

      swift_release(v12);
      swift_unknownObjectRelease(v14);
    }
    while (v7 != v9);
    return swift_bridgeObjectRelease(v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004532F0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_deepObserving) == 1
    && *(_BYTE *)(result + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) == 1)
  {
    v2 = v1;
    v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
    swift_beginAccess(v3, v15, 0, 0);
    v4 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v4 < 0)
        v14 = *v3;
      else
        v14 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      result = _CocoaArrayWrapper.endIndex.getter(v14);
      v5 = result;
      if (result)
        goto LABEL_5;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(*v3);
      if (v5)
      {
LABEL_5:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        v6 = 0;
        v7 = OBJC_IVAR____TtC5Files15DOCNodeObserver_node;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
            v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
          else
            v8 = (char *)*(id *)(v4 + 8 * v6 + 32);
          v9 = v8;
          ++v6;
          v11 = *(void (**)(uint64_t))&v8[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
          v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock + 8];
          v12 = *(_QWORD *)(v2 + v7);
          swift_retain(v10);
          v13 = swift_unknownObjectRetain(v12);
          v11(v13);

          swift_release(v10);
          swift_unknownObjectRelease(v12);
        }
        while (v5 != v6);
      }
    }
    return swift_bridgeObjectRelease(v4);
  }
  return result;
}

uint64_t sub_100453458()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10045347C(uint64_t a1)
{
  uint64_t v1;

  return sub_100451F8C(a1, v1);
}

double sub_100453484()
{
  uint64_t v0;

  return sub_100452188(v0);
}

double sub_10045348C()
{
  uint64_t v0;

  return sub_100452A54(v0);
}

uint64_t sub_100453494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004534D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10045351C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100453558(uint64_t a1)
{
  uint64_t v1;

  sub_100451A00(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100453560()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double UITraitCollection.tabBarBlurAvoidanceTopOffset.getter()
{
  unint64_t v0;

  v0 = sub_1001BFEB0();
  return UITraitCollection.subscript.getter(&type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, v0);
}

BOOL UITabBarController.usingVariableBlurBottomBar.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  _BOOL8 v6;
  __objc2_prot *v8;

  v8 = &OBJC_PROTOCOL____TtP5Files31DOCVariableBlurTabBarContaining__0;
  v1 = (void *)swift_dynamicCastObjCProtocolUnconditional(v0, 1, &v8, 0, 0, 0);
  v2 = v0;
  v3 = objc_msgSend(v1, "tabBar");
  v4 = objc_msgSend(v3, "_backgroundView");

  if (!v4)
    return 0;
  v5 = type metadata accessor for DOCTabBarVariableBlurBackgroundView();
  v6 = swift_dynamicCastClass(v4, v5) != 0;

  return v6;
}

void UITabBarController.usingVariableBlurBottomBar.setter(char a1)
{
  void *v1;
  int v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __objc2_prot *v20;

  v3 = a1 & 1;
  v4 = type metadata accessor for UITraitOverrides(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v1, "usingVariableBlurBottomBar", v5) != v3)
  {
    if ((a1 & 1) == 0)
    {
      objc_msgSend(v1, "detatchVariableBlurView");
      return;
    }
    v20 = &OBJC_PROTOCOL____TtP5Files31DOCVariableBlurTabBarContaining__0;
    v8 = (void *)swift_dynamicCastObjCProtocolUnconditional(v1, 1, &v20, 0, 0, 0);
    v9 = v1;
    v10 = objc_msgSend(v8, "tabBar");
    v11 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCTabBarVariableBlurBackgroundView()), "init");
    objc_msgSend(v10, "_setBackgroundView:", v11);
    v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView];
    if (v12)
    {
      v13 = *(_QWORD *)(v12
                      + OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration);
      v14 = objc_msgSend(v9, "view", swift_retain().n128_f64[0]);
      if (v14)
      {
        v15 = v14;
        sub_10027B0F8(v14);
        swift_release(v13);

        v16 = *(double *)&v11[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics + 16];
        UIViewController.traitOverrides.getter(v17);
        v18 = sub_1001BFEB0();
        UITraitOverrides.subscript.setter(&type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, v18, v16);
        UIViewController.traitOverrides.setter(v7);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100453974()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __objc2_prot *v18;
  __objc2_prot *v19;

  v1 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &OBJC_PROTOCOL____TtP5Files31DOCVariableBlurTabBarContaining__0;
  v4 = (void *)swift_dynamicCastObjCProtocolUnconditional(v0, 1, &v19, 0, 0, 0);
  v5 = v0;
  v6 = objc_msgSend(v4, "tabBar");
  v18 = &OBJC_PROTOCOL____TtP5Files31DOCVariableBlurTabBarContaining__0;
  v7 = (void *)swift_dynamicCastObjCProtocolUnconditional(v5, 1, &v18, 0, 0, 0);
  v8 = v5;
  v9 = objc_msgSend(v7, "tabBar");
  v10 = objc_msgSend(v9, "_backgroundView");

  if (!v10)
    goto LABEL_6;
  v12 = type metadata accessor for DOCTabBarVariableBlurBackgroundView();
  v13 = swift_dynamicCastClass(v10, v12);
  if (!v13)
  {

    goto LABEL_6;
  }
  v14 = v13;
  objc_msgSend(v6, "_setBackgroundView:", 0);
  v15 = *(_QWORD *)(v14 + OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView);
  if (v15)
  {
    v16 = *(_QWORD *)(v15
                    + OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration);
    swift_retain();
    sub_10027B430();

    swift_release(v16);
LABEL_6:
    UIViewController.traitOverrides.getter(v11);
    v17 = sub_1001BFEB0();
    UITraitOverrides.subscript.setter(&type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, v17, 0.0);
    UIViewController.traitOverrides.setter(v3);

    return;
  }
  __break(1u);
}

uint64_t *UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.unsafeMutableAddressor()
{
  return &static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name;
}

uint64_t static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name, v2, 0, 0);
  v0 = static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name;
  swift_bridgeObjectRetain(off_100656460);
  return v0;
}

uint64_t static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.setter(uint64_t a1, void *a2)
{
  void *v4;
  _BYTE v6[24];

  swift_beginAccess(&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name, v6, 1, 0);
  v4 = off_100656460;
  static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name = a1;
  off_100656460 = a2;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name, a1, 33, 0);
  return j_j__swift_endAccess;
}

void sub_100453C6C()
{
  static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue = 0;
}

uint64_t *UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.unsafeMutableAddressor()
{
  if (qword_100641178 != -1)
    swift_once(&qword_100641178, sub_100453C6C);
  return &static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
}

double static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.getter()
{
  _BYTE v1[24];

  if (qword_100641178 != -1)
    swift_once(&qword_100641178, sub_100453C6C);
  swift_beginAccess(&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue, v1, 0, 0);
  return *(double *)&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
}

void static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.setter(double a1)
{
  _BYTE v2[24];

  if (qword_100641178 != -1)
    swift_once(&qword_100641178, sub_100453C6C);
  swift_beginAccess(&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue, v2, 1, 0);
  static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue = *(_QWORD *)&a1;
}

uint64_t (*static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.modify(uint64_t a1))(_QWORD)
{
  if (qword_100641178 != -1)
    swift_once(&qword_100641178, sub_100453C6C);
  swift_beginAccess(&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue, a1, 33, 0);
  return j__swift_endAccess;
}

double sub_100453E00@<D0>(_QWORD *a1@<X8>)
{
  double result;
  _BYTE v3[24];

  if (qword_100641178 != -1)
    swift_once(&qword_100641178, sub_100453C6C);
  swift_beginAccess(&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue, v3, 0, 0);
  result = *(double *)&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
  *a1 = static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
  return result;
}

double DOCAutoBarHidingTabBarController._edgeInsets(forChildViewController:insetsAreAbsolute:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  double v4;
  id v5;
  unint64_t v6;
  objc_super v8;

  v8.super_class = (Class)DOCAutoBarHidingTabBarController;
  objc_msgSendSuper2(&v8, "_edgeInsetsForChildViewController:insetsAreAbsolute:", a1, a2);
  v4 = v3;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = sub_1001BFEB0();
  UITraitCollection.subscript.getter(&type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, v6);

  return v4;
}

ValueMetadata *type metadata accessor for UITraitCollection.DOCTabBarBlurAvoidanceTrait()
{
  return &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait;
}

id sub_100454160(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC5FilesP33_D3104C987618D68A12FF2C3DB05A577232DOCGoToSuggestionsCollectionView_focusableCollectionViewDelegate];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC5FilesP33_D3104C987618D68A12FF2C3DB05A577232DOCGoToSuggestionsCollectionView_focusableCollectionViewState;
  v5 = type metadata accessor for DOCFocusableCollectionViewState(0);
  v6 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v7 = v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, 1, 1, v8);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) = 0;
  *(_QWORD *)&v1[v4] = v6;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCGoToSuggestionsCollectionView();
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

id sub_100454288()
{
  return sub_1001405E0(0, type metadata accessor for DOCGoToSuggestionsCollectionView);
}

uint64_t type metadata accessor for DOCGoToSuggestionsCollectionView()
{
  return objc_opt_self(_TtC5FilesP33_D3104C987618D68A12FF2C3DB05A577232DOCGoToSuggestionsCollectionView);
}

uint64_t sub_1004542F0()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC5FilesP33_D3104C987618D68A12FF2C3DB05A577232DOCGoToSuggestionsCollectionView_focusableCollectionViewDelegate));
}

uint64_t sub_100454320()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC5FilesP33_D3104C987618D68A12FF2C3DB05A577232DOCGoToSuggestionsCollectionView_focusableCollectionViewState));
}

uint64_t sub_100454330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  _QWORD v26[5];

  v2 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICellConfigurationState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIBackgroundConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - v14;
  static UIBackgroundConfiguration.clear()(v16);
  v26[3] = v5;
  v26[4] = &protocol witness table for UICellConfigurationState;
  v17 = (char *)sub_10006CBAC(v26);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v18(v17, a1, v5);
  UIBackgroundConfiguration.updated(for:)(v26);
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v12, v9);
  v19 = sub_100068588(v26);
  LOBYTE(v12) = UICellConfigurationState.isSelected.getter(v19);
  v20 = v18(v8, a1, v5);
  if ((v12 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_4:
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray4Color");
    UIBackgroundConfiguration.backgroundColor.setter(v22);
    goto LABEL_5;
  }
  v21 = UICellConfigurationState.isHighlighted.getter(v20);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v21 & 1) != 0)
    goto LABEL_4;
LABEL_5:
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v15, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
  UICollectionViewCell.backgroundConfiguration.setter(v4);
  return ((uint64_t (*)(char *, uint64_t))v25)(v15, v9);
}

id sub_100454608()
{
  return sub_1001405E0(0, type metadata accessor for DOCGoToSuggestionsViewController.SuggestionCell);
}

id sub_100454628(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7(0);
  return objc_msgSendSuper2(&v12, "initWithFrame:", a2, a3, a4, a5);
}

id sub_1004546A4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_1004546EC()
{
  return sub_1001405E0(0, type metadata accessor for DOCGoToSuggestionsViewController.HeaderView);
}

id sub_100454700@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v1, "collectionView", v8);
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (!v13)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_8:
      result = (id)sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100642710);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 0;
      return result;
    }
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v6);

    if (*(_QWORD *)(v14 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      v15 = 0;
    }
    else
    {
      v15 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v15, 1, v6);
    v16 = swift_bridgeObjectRelease(v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v16) == 1)
      goto LABEL_8;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_10045561C((uint64_t)v10, a1);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1004548D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v0 = type metadata accessor for UICollectionLayoutListConfiguration.ContentHuggingElements(0);
  __chkstk_darwin(v0);
  v2 = (char *)aBlock - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v8 = swift_allocBox(v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v3);
  UICollectionLayoutListConfiguration.init(appearance:)(v6);
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UICollectionLayoutListConfiguration.backgroundColor.setter(v9);
  aBlock[0] = _swiftEmptyArrayStorage;
  v10 = sub_100457818();
  v11 = sub_10006922C(&qword_100656548);
  v12 = sub_100457860();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v11, v12, v0, v10);
  UICollectionLayoutListConfiguration.contentHuggingElements.setter(v2);
  v13 = swift_allocObject(&unk_1005ED960, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter(sub_1004578D0, v13);
  v14 = swift_allocObject(&unk_1005ED960, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1005ED988, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v8;
  v16 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_100457904;
  v22 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100033024;
  aBlock[3] = &unk_1005ED9A0;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = objc_msgSend(v16, "initWithSectionProvider:", v17, swift_retain().n128_f64[0]);
  _Block_release(v17);
  v19 = v22;
  swift_release(v8);
  swift_release(v14);
  swift_release(v19);
  return v18;
}

void sub_100454B58(char *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  void (*v16)(uint64_t, char *, uint64_t);
  unsigned __int8 *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  uint64_t v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  double v36;
  double v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  void *v47;
  double v48;
  uint64_t v49;
  id v50;
  void *v51;
  char *v52;
  id v53;
  void *v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59[24];

  v6 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIListSeparatorConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v59, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v14);
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 16);
  if (!Strong)
  {
    v44 = a3;
    v45 = a1;
LABEL_19:
    v16(v44, v45, v10);
    return;
  }
  v17 = (unsigned __int8 *)Strong;
  v57 = v11;
  v58 = v10;
  v18 = ((uint64_t (*)(char *, char *, uint64_t))v16)(v13, a1, v10);
  v19 = UIListSeparatorConfiguration.topSeparatorInsets.getter(v18);
  v21 = v20;
  v23 = v22;
  v24 = UIListSeparatorConfiguration.bottomSeparatorInsets.getter();
  v26 = v25;
  v28 = v27;
  v29 = objc_msgSend(v17, "view");
  if (!v29)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v30 = v29;
  v31 = a3;
  objc_msgSend(v29, "directionalLayoutMargins");
  v33 = v32;

  v34 = objc_msgSend(v17, "view");
  if (!v34)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v35 = v34;
  objc_msgSend(v34, "directionalLayoutMargins");
  v37 = v36;

  v38 = v17[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering];
  v40 = IndexPath.row.getter(v39);
  v41 = v38 == 1;
  v42 = v57;
  v43 = v31;
  if (v41)
  {
    if (!v40)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v6);
      v40 = UIListSeparatorConfiguration.topSeparatorVisibility.setter(v9);
    }
    v10 = v58;
    goto LABEL_18;
  }
  v10 = v58;
  if (v40)
  {
LABEL_13:
    v49 = IndexPath.row.getter(v40);
    v50 = objc_msgSend(v17, "collectionView");
    if (!v50)
    {
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v51 = v50;
    v52 = (char *)objc_msgSend(v50, "numberOfItemsInSection:", IndexPath.section.getter(v50));

    if (!__OFSUB__(v52, 1))
    {
      if ((char *)v49 != v52 - 1)
      {
LABEL_18:
        UIListSeparatorConfiguration.topSeparatorInsets.setter(v40, v19, v21, v23, v33);
        UIListSeparatorConfiguration.bottomSeparatorInsets.setter(v24, v26, v28, v37);

        v16 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
        v44 = v43;
        v45 = v13;
        goto LABEL_19;
      }
      v53 = objc_msgSend(v17, "view");
      if (v53)
      {
        v54 = v53;
        objc_msgSend(v53, "directionalLayoutMargins");
        v26 = v55;

        goto LABEL_18;
      }
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_21;
  }
  v46 = objc_msgSend(v17, "view");
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v46, "directionalLayoutMargins");
    v21 = v48;

    goto LABEL_13;
  }
LABEL_25:
  __break(1u);
}

void sub_100454E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  void *v18;
  void *v19;
  _BYTE *v20;
  char v21;
  unsigned int *v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];

  v37 = a1;
  v38 = a2;
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a3 + 16;
  v15 = swift_projectBox(a4);
  swift_beginAccess(v14, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v14);
  if (Strong)
  {
    v17 = (void *)Strong;
    v19 = *(void **)(Strong + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 88);
    v18 = *(void **)(Strong + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 96);
    v36 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 104);
    v35 = v18;
    v34 = v19;

  }
  else
  {
    v34 = 0;
    v35 = 0;
    v36 = 0;
  }
  swift_beginAccess(v14, v40, 0, 0);
  v20 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v14);
  if (v20
    && (v21 = v20[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering],
        v20,
        (v21 & 1) != 0))
  {
    v22 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
  }
  else
  {
    v22 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *v22, v10);
  swift_beginAccess(v15, v39, 33, 0);
  UICollectionLayoutListConfiguration.headerMode.setter(v13);
  if (v37)
    v23 = 0;
  else
    v23 = v36;
  UICollectionLayoutListConfiguration.headerTopPadding.setter(v23, v37 != 0);
  swift_endAccess(v39);
  sub_10004F2F0(0, &qword_100646D18, NSCollectionLayoutSection_ptr);
  v24 = swift_beginAccess(v15, v39, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v15, v6, v24);
  v25 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v9, v38);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v26 = objc_msgSend(v25, "boundarySupplementaryItems");
  v27 = sub_10004F2F0(0, (unint64_t *)&unk_100646C50, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

  if (!((unint64_t)v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v28);
    if (v29)
      goto LABEL_13;
LABEL_23:

    swift_bridgeObjectRelease_n(v28, 2);
    return;
  }
  if (v28 < 0)
    v33 = v28;
  else
    v33 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v28);
  v29 = _CocoaArrayWrapper.endIndex.getter(v33);
  if (!v29)
    goto LABEL_23;
LABEL_13:
  if (v29 >= 1)
  {
    for (i = 0; i != v29; ++i)
    {
      if ((v28 & 0xC000000000000001) != 0)
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
      else
        v31 = *(id *)(v28 + 8 * i + 32);
      v32 = v31;
      objc_msgSend(v31, "setPinToVisibleBounds:", 0, v34, v35, v36);

    }
    goto LABEL_23;
  }
  __break(1u);
}

void sub_100455274()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  NSString v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString *v10;
  NSString v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  objc_super v23;

  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for DOCGoToSuggestionsViewController();
  objc_msgSendSuper2(&v23, "viewDidLoad");
  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = v1;
  v3 = type metadata accessor for DOCGoToSuggestionsViewController.SuggestionCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v5);

  v6 = objc_msgSend(v0, "collectionView");
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  v8 = type metadata accessor for DOCGoToSuggestionsViewController.HeaderView();
  v9 = swift_getObjCClassFromMetadata(v8);
  v10 = UICollectionElementKindSectionHeader;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v9, v10, v11);

  v12 = objc_msgSend(v0, "collectionView");
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = v12;
  objc_msgSend(v12, "setShowsVerticalScrollIndicator:", 0);

  v14 = objc_msgSend(v0, "collectionView");
  if (!v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = v14;
  objc_msgSend(v14, "setShowsHorizontalScrollIndicator:", 0);

  v16 = objc_msgSend(v0, "collectionView");
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  objc_msgSend(v16, "setPreservesSuperviewLayoutMargins:", 1);

  v18 = objc_msgSend(v0, "collectionView");
  if (!v18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v18;
  objc_msgSend(v18, "setAllowsSelection:", 1);

  v20 = objc_msgSend(v0, "collectionView");
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v21, "setBackgroundColor:", v22);

    return;
  }
LABEL_15:
  __break(1u);
}

void sub_10045561C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering) == 1)
  {
    v4 = IndexPath.row.getter(a1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v5 = IndexPath.row.getter(v4);
      v6 = OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions;
      if (v5 < *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions) + 16))
      {
        v7 = IndexPath.row.getter(v5);
        if ((v7 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          v8 = *(_QWORD *)(v2 + v6);
          if (v7 < *(_QWORD *)(v8 + 16))
          {
            sub_100092328(v8 + 40 * v7 + 32, a2);
            return;
          }
        }
        __break(1u);
        goto LABEL_20;
      }
    }
LABEL_17:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v9 = IndexPath.section.getter(a1);
  if (v9 < 0)
    goto LABEL_17;
  v10 = IndexPath.section.getter(v9);
  v11 = OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections;
  if (v10 >= *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections) + 16))
    goto LABEL_17;
  v12 = IndexPath.section.getter(v10);
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = *(_QWORD *)(v2 + v11);
  if (v12 >= *(_QWORD *)(v13 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v14 = *(_QWORD *)(v13 + 16 * v12 + 40);
  v15 = swift_bridgeObjectRetain(v14);
  v16 = IndexPath.row.getter(v15);
  if (v16 < 0 || (v17 = IndexPath.row.getter(v16), v17 >= *(_QWORD *)(v14 + 16)))
  {
    swift_bridgeObjectRelease(v14);
    goto LABEL_17;
  }
  v18 = IndexPath.row.getter(v17);
  if ((v18 & 0x8000000000000000) == 0)
  {
    if (v18 < *(_QWORD *)(v14 + 16))
    {
      sub_100092328(v14 + 40 * v18 + 32, a2);
      swift_bridgeObjectRelease(v14);
      return;
    }
    goto LABEL_23;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
}

void sub_100455784()
{
  int v0;
  unint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD *v29;
  int v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v0 = 0;
  v1 = 0;
  v2 = _swiftEmptyArrayStorage;
  while (v1 < 2)
  {
    v30 = v0;
    v3 = *((unsigned __int8 *)&off_1005C0110 + v1 + 32);
    v4 = *(_QWORD *)(v28 + v27[1]);
    v37 = _swiftEmptyArrayStorage;
    v5 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRetain(v4);
    if (v5)
    {
      v29 = v2;
      v6 = 0;
      v7 = v4 + 32;
      while (v6 < *(_QWORD *)(v4 + 16))
      {
        sub_100092328(v7, (uint64_t)&v34);
        v8 = v35;
        v9 = v36;
        sub_10007E7A0(&v34, v35);
        v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
        if (v10 == 2 || v3 == ((v10 & 1) == 0))
        {
          sub_100068588(&v34);
        }
        else
        {
          sub_1000E85C4(&v34, (uint64_t)v31);
          v12 = v37;
          if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
          {
            sub_1001550D8(0, v12[2] + 1, 1);
            v12 = v37;
          }
          v14 = v12[2];
          v13 = v12[3];
          if (v14 >= v13 >> 1)
            sub_1001550D8(v13 > 1, v14 + 1, 1);
          v15 = v32;
          v16 = v33;
          v17 = sub_10007E7C8((uint64_t)v31, v32);
          v18 = __chkstk_darwin(v17);
          v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v21 + 16))(v20, v18);
          sub_10044F1F8(v14, (uint64_t)v20, (uint64_t *)&v37, v15, v16);
          sub_100068588(v31);
        }
        ++v6;
        v7 += 40;
        if (v5 == v6)
        {
          v22 = v37;
          v2 = v29;
          goto LABEL_21;
        }
      }
      __break(1u);
      break;
    }
    v22 = _swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease(v4);
    if (v22[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
        v2 = sub_1001542DC(0, v2[2] + 1, 1, v2);
      v24 = v2[2];
      v23 = v2[3];
      if (v24 >= v23 >> 1)
        v2 = sub_1001542DC((_QWORD *)(v23 > 1), v24 + 1, 1, v2);
      v2[2] = v24 + 1;
      v25 = &v2[2 * v24];
      *((_BYTE *)v25 + 32) = v3;
      v25[5] = v22;
    }
    else
    {
      swift_release(v22);
    }
    v0 = 1;
    v1 = &_mh_execute_header.magic + 1;
    if ((v30 & 1) != 0)
    {
      v26 = *(_QWORD *)(v28 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections);
      *(_QWORD *)(v28 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections) = v2;
      swift_bridgeObjectRelease(v26);
      return;
    }
  }
  __break(1u);
}

void sub_100455A54(void *a1, double a2, double a3)
{
  void *v3;
  double v6;
  double v7;
  BOOL v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD aBlock[5];
  uint64_t v20;

  if ((objc_msgSend(a1, "isSymbolImage") & 1) != 0
    || ((objc_msgSend(a1, "size"), v7 == a2) ? (v8 = v6 == a3) : (v8 = 0), v8))
  {
    v17 = a1;
  }
  else
  {
    v9 = objc_msgSend(v3, "traitCollection");
    v10 = objc_msgSend((id)objc_opt_self(UIGraphicsImageRendererFormat), "formatForTraitCollection:", v9);

    v11 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v10, a2, a3);
    v12 = swift_allocObject(&unk_1005ED8E8, 40, 7);
    *(double *)(v12 + 16) = a2;
    *(double *)(v12 + 24) = a3;
    *(_QWORD *)(v12 + 32) = a1;
    v13 = swift_allocObject(&unk_1005ED910, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_100399204;
    *(_QWORD *)(v13 + 24) = v12;
    aBlock[4] = sub_1000D9F90;
    v20 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10039318C;
    aBlock[3] = &unk_1005ED928;
    v14 = _Block_copy(aBlock);
    v15 = v20;
    v16 = a1;
    swift_retain();
    objc_msgSend(v11, "imageWithActions:", v14, swift_release(v15).n128_f64[0]);

    _Block_release(v14);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v13, "", 123, 245, 31, 1);
    swift_release(v12);
    swift_release(v13);
    if ((v11 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_100455C6C(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  void *v27;
  id v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  void (*v35)(__int128 *, _QWORD);
  double *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(__int128 *, _QWORD);
  void (*v41)(__int128 *, _QWORD);
  void *v42;
  id v43;
  void (*v44)(__int128 *, _QWORD);
  void *v45;
  id v46;
  void (*v47)(__int128 *, _QWORD);
  _QWORD *v48;
  id v49;
  __int128 v51;
  uint64_t v52;
  void *v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;

  v3 = v2;
  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v10, isa);

  v13 = objc_opt_self(UICollectionViewListCell);
  v14 = swift_dynamicCastObjCClassUnconditional(v12, v13, 0, 0, 0);
  sub_10045561C(a2, (uint64_t)&v51);
  if (v52)
  {
    v15 = sub_1000E85C4(&v51, (uint64_t)v54);
    UICollectionViewListCell.defaultContentConfiguration()(v15);
    v16 = v55;
    v17 = v56;
    sub_10007E7A0(v54, v55);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    UIListContentConfiguration.attributedText.setter(v18);
    Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate]);
    if (Strong)
    {
      v21 = Strong;
      v22 = Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
      v23 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate);
      if (v23)
      {
        v24 = v23;
        v25 = *(_QWORD *)(v22 + 8);
        ObjectType = swift_getObjectType(v23);
        v27 = (void *)(*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v25 + 16))(v21, v54, ObjectType, v25);
        swift_unknownObjectRelease(v21);
        v20 = swift_unknownObjectRelease(v24).n128_u64[0];
        if (v27)
        {
          v28 = objc_msgSend(v3, "traitCollection", *(double *)&v20);
          v29 = static CGSize.doc_preferredSourceListIconSize(for:)();
          v31 = v30;

          sub_100455A54(v27, v29, v31);
          v33 = UIListContentConfiguration.image.setter(v32);
          v34 = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v33);
          v35 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v51);
          UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(v34, v34);
          v35(&v51, 0);

        }
      }
      else
      {
        v20 = swift_unknownObjectRelease(v21).n128_u64[0];
      }
    }
    v36 = (double *)&v3[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics];
    if ((v3[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 40] & 1) == 0)
      UIListContentConfiguration.imageToTextPadding.setter(Strong, v36[4]);
    if (((_BYTE)v36[10] & 1) == 0)
      UIListContentConfiguration.directionalLayoutMargins.setter(v36[6], v36[7], v36[8], v36[9]);
    v37 = objc_msgSend(v3, "traitCollection", *(double *)&v20);
    v38 = UITraitCollection.doc_preferredLayoutSizeCategory.getter();

    if (sub_1000763D0(v38, (uint64_t)&off_1005C1068))
      v39 = 2;
    else
      v39 = 1;
    v40 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.textProperties.modify(&v51);
    UIListContentConfiguration.TextProperties.numberOfLines.setter(v39);
    v40(&v51, 0);
    v41 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.textProperties.modify(&v51);
    UIListContentConfiguration.TextProperties.lineBreakMode.setter(5);
    v41(&v51, 0);
    v42 = (void *)*((_QWORD *)v36 + 11);
    if (v42)
    {
      v43 = v42;
      v44 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v51);
      UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter(v42);
      v44(&v51, 0);

    }
    v45 = (void *)*((_QWORD *)v36 + 12);
    if (v45)
    {
      v46 = v45;
      v47 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.textProperties.modify(&v51);
      UIListContentConfiguration.TextProperties.font.setter(v46);
      v47(&v51, 0);

    }
    v52 = v6;
    v53 = &protocol witness table for UIListContentConfiguration;
    v48 = sub_10006CBAC(&v51);
    (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v48, v9, v6);
    v49 = v12;
    UICollectionViewCell.contentConfiguration.setter(&v51);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_100068588(v54);
  }
  else
  {
    sub_10000CB4C((uint64_t)&v51, &qword_100649580);
  }
  return v14;
}

unint64_t sub_100456138(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  NSString v24;
  NSString v25;
  Class isa;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char *v36;
  objc_class *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  Swift::String v47;
  Swift::String_optional v48;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  uint64_t v52;
  char *v53;
  void (*v54)(_QWORD *, _QWORD);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  void *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t (**v72)();
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79;
  id v80;
  char *v81;
  char *v82;
  id v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  _QWORD v98[6];
  Swift::String v99;

  v3 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v3);
  v94 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICellAccessory.Placement(0);
  v88 = *(_QWORD *)(v5 - 8);
  v89 = v5;
  __chkstk_darwin(v5);
  v90 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0);
  v92 = *(_QWORD *)(v7 - 8);
  v93 = v7;
  __chkstk_darwin(v7);
  v91 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration(0, v9);
  v86 = *(_QWORD *)(v10 - 8);
  v87 = v10;
  __chkstk_darwin(v10);
  v84 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v85 = (char *)&v82 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v82 - v15;
  v17 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v17);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v82 - v21;
  v95 = type metadata accessor for UIListContentConfiguration(0);
  v97 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v96 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = String._bridgeToObjectiveC()();
  v25 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v24, v25, isa);

  v28 = type metadata accessor for DOCGoToSuggestionsViewController.HeaderView();
  v29 = swift_dynamicCastClassUnconditional(v27, v28, 0, 0, 0);
  result = IndexPath.section.getter(v29);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections);
  if (result >= *(_QWORD *)(v31 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v32 = v31 + 16 * result;
  v33 = *(unsigned __int8 *)(v32 + 32);
  v34 = *(_QWORD *)(v32 + 40);
  v35 = swift_bridgeObjectRetain(v34);
  v36 = v96;
  static UIListContentConfiguration.header()(v35);
  v37 = sub_1002564B0(v33);
  UIListContentConfiguration.text.setter(v37, v38);
  v39 = v95;
  v98[3] = v95;
  v98[4] = &protocol witness table for UIListContentConfiguration;
  v40 = sub_10006CBAC(v98);
  (*(void (**)(_QWORD *, char *, uint64_t))(v97 + 16))(v40, v36, v39);
  v41 = v27;
  UICollectionViewCell.contentConfiguration.setter(v98);

  v42 = v41;
  UICollectionViewCell.backgroundConfiguration.getter();
  v43 = type metadata accessor for UIBackgroundConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v22, 1, v43))
  {
    sub_1004579E8((uint64_t)v22, (uint64_t)v19);
    UICollectionViewCell.backgroundConfiguration.setter(v19);

    sub_10000CB4C((uint64_t)v22, &qword_100651B30);
    swift_bridgeObjectRelease(v34);
    if ((v33 & 1) != 0)
    {
LABEL_5:
      v45 = v42;
      UICollectionViewListCell.accessories.setter(_swiftEmptyArrayStorage);

LABEL_9:
      (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v39);
      return v29;
    }
  }
  else
  {
    UIBackgroundConfiguration.visualEffect.setter(0);
    UICollectionViewCell.backgroundConfiguration.setter(v22);
    swift_bridgeObjectRelease(v34);

    if ((v33 & 1) != 0)
      goto LABEL_5;
  }
  v83 = v42;
  result = (unint64_t)(id)_DocumentManagerBundle(v44);
  if (result)
  {
    v46 = (void *)result;
    v99._countAndFlagsBits = 0xD00000000000003ALL;
    v99._object = (void *)0x8000000100536830;
    v47._object = (void *)0x8000000100536810;
    v47._countAndFlagsBits = 0xD00000000000001ALL;
    v48.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v48.value._object = (void *)0xEB00000000656C62;
    v49._countAndFlagsBits = 0x7261656C43;
    v49._object = (void *)0xE500000000000000;
    v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v99);

    v51 = (void *)objc_opt_self(UIDevice);
    static UIButton.Configuration.borderless()(v52);
    sub_100456914((uint64_t)v16, v50._countAndFlagsBits, (uint64_t)v50._object);

    v53 = v16;
    v82 = v16;
    v54 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.contentInsets.modify(v98);
    *(_QWORD *)(v55 + 24) = 0;
    v54(v98, 0);
    swift_bridgeObjectRelease(v50._object);
    sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
    v56 = v85;
    v57 = v86;
    v58 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
    v59 = v87;
    v58(v85, v53, v87);
    v60 = swift_allocObject(&unk_1005ED960, 24, 7);
    swift_unknownObjectWeakInit(v60 + 16);
    v61 = v84;
    v58(v84, v56, v59);
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v62 = swift_allocObject(&unk_1005ED9D8, 32, 7);
    *(_QWORD *)(v62 + 16) = sub_100457A30;
    *(_QWORD *)(v62 + 24) = v60;
    v63 = swift_retain_n(v60, 2);
    v64 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v63, 0, 0, 0, sub_1000D9F90, v62);
    v65 = (void *)UIButton.init(configuration:primaryAction:)(v61, v64);
    v66 = swift_release(v60);
    v86 = *(_QWORD *)(v57 + 8);
    ((void (*)(char *, uint64_t, __n128))v86)(v56, v59, v66);
    swift_release(v60);
    v67 = sub_10006922C((uint64_t *)&unk_10064A0B0);
    v68 = type metadata accessor for UICellAccessory(0);
    v69 = swift_allocObject(v67, ((*(unsigned __int8 *)(*(_QWORD *)(v68 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v68 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v68 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v68 - 8) + 80) | 7);
    *(_OWORD *)(v69 + 16) = xmmword_1004D9670;
    v70 = sub_10006922C(&qword_10064A0A8);
    v71 = v90;
    v72 = (uint64_t (**)())&v90[*(int *)(v70 + 48)];
    v73 = enum case for UICellAccessory.DisplayedState.always(_:);
    v74 = type metadata accessor for UICellAccessory.DisplayedState(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v71, v73, v74);
    *v72 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
    v72[1] = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v71, enum case for UICellAccessory.Placement.trailing(_:), v89);
    v75 = enum case for UICellAccessory.LayoutDimension.actual(_:);
    v76 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v77 = *(_QWORD *)(v76 - 8);
    v78 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 104))(v94, v75, v76);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v76);
    v79 = v83;
    v80 = v65;
    v81 = v91;
    UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v80, v71, 2, v78, 0, 2);
    static UICellAccessory.customView(configuration:)(v81);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v81, v93);
    UICollectionViewListCell.accessories.setter(v69);

    ((void (*)(char *, uint64_t))v86)(v82, v59);
    v39 = v95;
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100456914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_BYTE *, _QWORD);
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  id v22;
  _BYTE v23[32];

  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = swift_bridgeObjectRetain(a3).n128_u64[0];
  AttributeContainer.init()(v11);
  AttributedString.init(_:attributes:)(a2, a3, v7);
  v12 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  UIButton.Configuration.attributedTitle.setter(v10);
  v14 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify(v23);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
  {
    KeyPath = swift_getKeyPath(&unk_1004E9628);
    __chkstk_darwin(KeyPath);
    *(&v21 - 2) = v17;
    v18 = swift_getKeyPath(&unk_1004E9658);
    v22 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
    v19 = sub_1002793FC();
    AttributedString.subscript.setter(&v22, v18, v19);
  }
  return v14(v23, 0);
}

void sub_100456ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100456C04();

  }
}

void sub_100456C04()
{
  char *v0;
  char *v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate]);
  if (Strong)
  {
    v3 = Strong;
    v4 = Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      ObjectType = swift_getObjectType(v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v3, ObjectType, v7);
      swift_unknownObjectRelease(v3);
      v3 = v6;
    }
    swift_unknownObjectRelease(v3);
  }
  v9 = OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions;
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions];
  v11 = _swiftEmptyArrayStorage;
  v39 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain(v10);
  if (v12)
  {
    v32 = v9;
    v13 = 0;
    v14 = v10 + 32;
    while (v13 < *(_QWORD *)(v10 + 16))
    {
      sub_100092328(v14, (uint64_t)&v36);
      v15 = v37;
      v16 = v38;
      sub_10007E7A0(&v36, v37);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 40))(v15, v16);
      if (v17 != 2 && (v17 & 1) == 0)
      {
        sub_100068588(&v36);
      }
      else
      {
        sub_1000E85C4(&v36, (uint64_t)v33);
        v19 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
        {
          sub_1001550D8(0, v19[2] + 1, 1);
          v19 = v39;
        }
        v21 = v19[2];
        v20 = v19[3];
        if (v21 >= v20 >> 1)
          sub_1001550D8(v20 > 1, v21 + 1, 1);
        v22 = v34;
        v23 = v35;
        v24 = sub_10007E7C8((uint64_t)v33, v34);
        v25 = __chkstk_darwin(v24);
        v27 = (char *)&v33[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v28 + 16))(v27, v25);
        sub_10044F1F8(v21, (uint64_t)v27, (uint64_t *)&v39, v22, v23);
        sub_100068588(v33);
      }
      ++v13;
      v14 += 40;
      if (v12 == v13)
      {
        v11 = v39;
        v9 = v32;
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease(v10);
    v29 = *(_QWORD *)&v1[v9];
    *(_QWORD *)&v1[v9] = v11;
    swift_bridgeObjectRelease(v29);
    sub_100455784();
    v30 = objc_msgSend(v1, "collectionView");
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, "reloadData");

      return;
    }
  }
  __break(1u);
}

double sub_100456F60()
{
  uint64_t v0;
  void *v1;
  double result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 96);

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections)).n128_u64[0];
  return result;
}

id sub_100456FBC(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCGoToSuggestionsViewController);
}

uint64_t type metadata accessor for DOCGoToSuggestionsViewController()
{
  return objc_opt_self(_TtC5Files32DOCGoToSuggestionsViewController);
}

uint64_t type metadata accessor for DOCGoToSuggestionsViewController.SuggestionCell()
{
  return objc_opt_self(_TtCC5Files32DOCGoToSuggestionsViewControllerP33_D3104C987618D68A12FF2C3DB05A577214SuggestionCell);
}

uint64_t type metadata accessor for DOCGoToSuggestionsViewController.HeaderView()
{
  return objc_opt_self(_TtCC5Files32DOCGoToSuggestionsViewControllerP33_D3104C987618D68A12FF2C3DB05A577210HeaderView);
}

_QWORD *sub_1004570FC()
{
  void *v0;
  void *v1;
  _QWORD *result;
  void *v3;
  uint64_t ObjectType;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  result = objc_msgSend(v0, "collectionView");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  ObjectType = swift_getObjectType(result);
  result = (_QWORD *)swift_conformsToProtocol2(ObjectType, &protocol descriptor for DOCFocusableCollectionView);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = ((uint64_t (*)(const char *, uint64_t, uint64_t, _QWORD *))result[9])("performKeyCommand:", 1, ObjectType, result);

  sub_100130620(v5);
  result = objc_msgSend(v1, "collectionView");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  v7 = swift_getObjectType(result);
  result = (_QWORD *)swift_conformsToProtocol2(v7, &protocol descriptor for DOCFocusableCollectionView);
  if (result)
  {
    v8 = ((uint64_t (*)(const char *, uint64_t, uint64_t, _QWORD *))result[10])("performKeyCommand:", 1, v7, result);

    sub_100130620(v8);
    return _swiftEmptyArrayStorage;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCGoToSuggestionsViewController.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for DOCGoToSuggestionsViewController.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for DOCGoToSuggestionsViewController.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for DOCGoToSuggestionsViewController.Section()
{
  return &type metadata for DOCGoToSuggestionsViewController.Section;
}

uint64_t sub_100457374@<X0>(id a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v6;
  id v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  if (a2 == 2)
  {
    if ((uint64_t)objc_msgSend(a1, "numberOfSections") >= 1
      && (uint64_t)objc_msgSend(a1, "numberOfItemsInSection:", 0) >= 1)
    {
      result = 0;
      v9 = 0;
      goto LABEL_11;
    }
LABEL_12:
    v10 = type metadata accessor for IndexPath(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a3;
    v13 = 1;
    return v11(v12, v13, 1, v10);
  }
  if (a2 != 1 || (uint64_t)objc_msgSend(a1, "numberOfSections") < 1)
    goto LABEL_12;
  result = (uint64_t)objc_msgSend(a1, "numberOfSections");
  v6 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = objc_msgSend(a1, "numberOfItemsInSection:", v6);
    v8 = __OFSUB__(v7, 1);
    result = (uint64_t)v7 - 1;
    if (!v8)
    {
      if ((result & 0x8000000000000000) == 0)
      {
        v9 = v6;
LABEL_11:
        IndexPath.init(item:section:)(result, v9);
        v10 = type metadata accessor for IndexPath(0);
        v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
        v12 = a3;
        v13 = 0;
        return v11(v12, v13, 1, v10);
      }
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

char *sub_100457490@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  char *v4;
  uint64_t v6;
  id v7;
  char *result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v6 = IndexPath.section.getter(a1);
  v7 = objc_msgSend(v4, "numberOfSections");
  if (v6 >= (uint64_t)v7)
    goto LABEL_24;
  result = (char *)objc_msgSend(v4, "numberOfItemsInSection:", IndexPath.section.getter(v7));
  if (a2 == 2)
  {
LABEL_8:
    v10 = result;
    result = (char *)IndexPath.item.getter(result);
    if (__OFSUB__(v10, 1))
    {
      __break(1u);
    }
    else
    {
      if (result != v10 - 1)
      {
        result = (char *)IndexPath.item.getter(result);
        v4 = result + 1;
        if (!__OFADD__(result, 1))
        {
LABEL_15:
          v12 = IndexPath.section.getter(result);
LABEL_16:
          v13 = v4;
          goto LABEL_17;
        }
        goto LABEL_28;
      }
      v11 = IndexPath.section.getter(result);
      result = (char *)objc_msgSend(v4, "numberOfSections");
      if (!__OFSUB__(result, 1))
      {
        if (v11 < (uint64_t)(result - 1))
        {
          result = (char *)IndexPath.section.getter(result);
          v12 = (uint64_t)(result + 1);
          if (!__OFADD__(result, 1))
          {
            v13 = 0;
LABEL_17:
            IndexPath.init(item:section:)(v13, v12);
            v14 = type metadata accessor for IndexPath(0);
            v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
            v16 = a3;
            v17 = 0;
            return (char *)v15(v16, v17, 1, v14);
          }
          goto LABEL_29;
        }
LABEL_24:
        v14 = type metadata accessor for IndexPath(0);
        v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
        v16 = a3;
        v17 = 1;
        return (char *)v15(v16, v17, 1, v14);
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (a2 != 1)
    goto LABEL_24;
  v9 = IndexPath.item.getter(result);
  if (v9)
  {
    result = (char *)IndexPath.item.getter(v9);
    v4 = result - 1;
    if (!__OFSUB__(result, 1))
      goto LABEL_15;
    __break(1u);
    goto LABEL_8;
  }
  v18 = IndexPath.section.getter(0);
  if (v18 < 1)
    goto LABEL_24;
  result = (char *)IndexPath.section.getter(v18);
  if (__OFSUB__(result, 1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  result = (char *)objc_msgSend(v4, "numberOfItemsInSection:", result - 1);
  v4 = result - 1;
  if (!__OFSUB__(result, 1))
  {
    v19 = IndexPath.section.getter(result);
    v12 = v19 - 1;
    if (!__OFSUB__(v19, 1))
      goto LABEL_16;
    __break(1u);
    goto LABEL_24;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100457638@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_100457374(a1, a2, a3);
}

char *sub_100457650@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_100457490(a1, a2, a3);
}

uint64_t sub_100457668(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  return 0;
}

CGFloat sub_1004576AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(row:section:)(0, 0);
  LOBYTE(a3) = static IndexPath.== infix(_:_:)(a3, v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((a3 & 1) != 0)
    return -100.0;
  else
    return UIEdgeInsetsZero.top;
}

void sub_100457768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100457770(a3);
}

void sub_100457770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  id v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_10045561C(a1, (uint64_t)v6);
  v2 = v7;
  sub_10000CB4C((uint64_t)v6, &qword_100649580);
  if (v2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate);
    if (Strong)
    {
      v4 = Strong;
      v5 = sub_100256924();
      sub_10033C46C();
      swift_unknownObjectRelease(v4);

    }
  }
}

uint64_t sub_1004577E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100457808()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100457818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100656540;
  if (!qword_100656540)
  {
    v1 = type metadata accessor for UICollectionLayoutListConfiguration.ContentHuggingElements(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UICollectionLayoutListConfiguration.ContentHuggingElements, v1);
    atomic_store(result, (unint64_t *)&qword_100656540);
  }
  return result;
}

unint64_t sub_100457860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100656550;
  if (!qword_100656550)
  {
    v1 = sub_10007E830(&qword_100656548);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100656550);
  }
  return result;
}

uint64_t sub_1004578AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004578D0(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100454B58(a1, v2, a2);
}

uint64_t sub_1004578D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100457904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100454E8C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_10045790C(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering) == 1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions;
    return *(_QWORD *)(*(_QWORD *)v2 + 16);
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections);
    if (*(_QWORD *)(v3 + 16) > result)
    {
      v2 = v3 + 16 * result + 40;
      return *(_QWORD *)(*(_QWORD *)v2 + 16);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100457968(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[5];

  sub_10045561C(a1, (uint64_t)&v5);
  if (!v6)
    return sub_10000CB4C((uint64_t)&v5, &qword_100649580);
  sub_1000E85C4(&v5, (uint64_t)v7);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate);
  if (Strong)
  {
    v3 = Strong;
    sub_100259EF8(v7);
    swift_unknownObjectRelease(v3);
  }
  return sub_100068588(v7);
}

uint64_t sub_1004579E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100651B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100457A30()
{
  uint64_t v0;

  sub_100456ACC(v0);
}

uint64_t sub_100457A38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100457A68()
{
  return 8;
}

uint64_t sub_100457A74(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100457A7C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100457A90(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100457AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Files24DOCLoadingViewController____lazy_storage___task;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCLoadingViewController____lazy_storage___task))
  {
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCLoadingViewController____lazy_storage___task);
  }
  else
  {
    aBlock[4] = sub_100457C04;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005EDA30;
    v7 = _Block_copy(aBlock);
    v15 = _swiftEmptyArrayStorage;
    v8 = sub_10008BAAC();
    v9 = sub_10006922C((uint64_t *)&unk_100647540);
    v10 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v9, v10, v2, v8);
    v11 = type metadata accessor for DispatchWorkItem(0);
    swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v6 = DispatchWorkItem.init(flags:block:)(v4, v7);
    v12 = *(_QWORD *)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v6;
    swift_retain();
    swift_release(v12);
  }
  swift_retain();
  return v6;
}

uint64_t sub_100457C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Logger.UI.unsafeMutableAddressor(v2);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v5, v0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "PERF: The empty DOCLoadingViewController is visible for more than 5 seconds", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_100457CFC(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  __n128 v18;
  objc_super v19;

  v2 = v1;
  v4 = type metadata accessor for DispatchTime(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - v9;
  v11 = (objc_class *)type metadata accessor for DOCLoadingViewController();
  v19.receiver = v2;
  v19.super_class = v11;
  objc_msgSendSuper2(&v19, "viewDidAppear:", a1 & 1);
  v12 = sub_100457AA8();
  v13 = dispatch thunk of DispatchWorkItem.isCancelled.getter();
  swift_release(v12);
  if ((v13 & 1) == 0)
  {
    v14 = sub_100086BF0();
    v15 = (void *)static OS_dispatch_queue.main.getter(v14);
    static DispatchTime.now()(v15);
    + infix(_:_:)(v7, 5.0);
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    v17 = sub_100457AA8();
    OS_dispatch_queue.asyncAfter(deadline:execute:)(v10, v17);

    v18 = swift_release(v17);
    ((void (*)(char *, uint64_t, __n128))v16)(v10, v4, v18);
  }
}

uint64_t sub_100458008()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCLoadingViewController____lazy_storage___task));
}

id sub_100458018()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCLoadingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCLoadingViewController()
{
  return objc_opt_self(_TtC5Files24DOCLoadingViewController);
}

uint64_t sub_100458078(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1005EDAC8, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain();
  v3(sub_10045BA78, v5, v6);
  swift_release(v2);
  return swift_release(v5);
}

void sub_1004580E8(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

id sub_10045814C(uint64_t a1)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "initWithBarButtonSystemItem:target:action:", 0, 0, 0);
  objc_msgSend(v3, "setPrimaryAction:", a1);
  return v3;
}

id sub_1004581A4(char a1, uint64_t a2)
{
  uint64_t v2;

  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithBarButtonSystemItem:primaryAction:", qword_1004E96C0[a1], a2);
}

_QWORD *sub_1004581F4()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;

  v1 = v0;
  v2 = objc_msgSend(v0, "leftBarButtonItems");
  if (v2)
  {
    v3 = v2;
    v4 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    v5 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  sub_1000887E8((uint64_t)v5);
  v6 = objc_msgSend(v1, "leadingItemGroups");
  v7 = sub_10004F2F0(0, &qword_100656588, UIBarButtonItemGroup_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v26 = v8;
    else
      v26 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v26);
    v9 = (uint64_t)result;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(v8);
  }
  v47 = v7;
  v48 = v1;
  if (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_54;
    }
    v11 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v8);
      else
        v12 = *(id *)(v8 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      v14 = objc_msgSend(v12, "barButtonItems", v47);
      v15 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

      sub_1000887E8(v16);
    }
    while (v9 != v11);
    swift_bridgeObjectRelease_n(v8, 2);
    v1 = v48;
    v7 = v47;
  }
  else
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  sub_1000887E8((uint64_t)_swiftEmptyArrayStorage);
  v17 = objc_msgSend(v1, "centerItemGroups");
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v7);

  if (!((unint64_t)v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(v18);
    if (v19)
      goto LABEL_17;
LABEL_32:
    swift_bridgeObjectRelease_n(v18, 2);
    goto LABEL_33;
  }
  if (v18 < 0)
    v27 = v18;
  else
    v27 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v27);
  v19 = (uint64_t)result;
  if (!result)
    goto LABEL_32;
LABEL_17:
  if (v19 < 1)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v20 = 0;
  do
  {
    if ((v18 & 0xC000000000000001) != 0)
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
    else
      v21 = *(id *)(v18 + 8 * v20 + 32);
    v22 = v21;
    ++v20;
    v23 = objc_msgSend(v21, "barButtonItems", v47);
    v24 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    sub_1000887E8(v25);
  }
  while (v19 != v20);
  swift_bridgeObjectRelease_n(v18, 2);
  v1 = v48;
  v7 = v47;
LABEL_33:
  sub_1000887E8((uint64_t)_swiftEmptyArrayStorage);
  v28 = objc_msgSend(v1, "rightBarButtonItems");
  if (v28)
  {
    v29 = v28;
    v30 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    v31 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  }
  else
  {
    v31 = _swiftEmptyArrayStorage;
  }
  sub_1000887E8((uint64_t)v31);
  v32 = objc_msgSend(v1, "trailingItemGroups");
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v7);

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v41 = v33;
    else
      v41 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v41);
    v34 = (uint64_t)result;
    if (result)
    {
LABEL_38:
      if (v34 >= 1)
      {
        v35 = 0;
        do
        {
          if ((v33 & 0xC000000000000001) != 0)
            v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
          else
            v36 = *(id *)(v33 + 8 * v35 + 32);
          v37 = v36;
          ++v35;
          v38 = objc_msgSend(v36, "barButtonItems", v47);
          v39 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
          v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

          sub_1000887E8(v40);
        }
        while (v34 != v35);
        swift_bridgeObjectRelease_n(v33, 2);
        v1 = v48;
        goto LABEL_50;
      }
LABEL_55:
      __break(1u);
      return result;
    }
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(v33);
    if (v34)
      goto LABEL_38;
  }
  swift_bridgeObjectRelease_n(v33, 2);
LABEL_50:
  sub_1000887E8((uint64_t)_swiftEmptyArrayStorage);
  v42 = objc_msgSend(v1, "_dci_fixedTrailingGroup");
  if (v42)
  {
    v43 = v42;
    v44 = objc_msgSend(v42, "barButtonItems");
    v45 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v45);

    sub_1000887E8(v46);
  }
  return _swiftEmptyArrayStorage;
}

id sub_100458778(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  _QWORD v11[3];
  uint64_t ObjectType;

  v6 = qword_1004E96C0[a1];
  ObjectType = swift_getObjectType(a2, a2);
  v11[0] = a2;
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3));
  swift_unknownObjectRetain(a2);
  v8 = _bridgeAnythingToObjectiveC<A>(_:)(v11, ObjectType);
  sub_100068588(v11);
  v9 = objc_msgSend(v7, "initWithBarButtonSystemItem:target:action:", v6, v8, a3, v11[0]);
  swift_unknownObjectRelease(v8);
  return v9;
}

uint64_t sub_100458830(void (*a1)(_QWORD *), int a2, id a3)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = objc_msgSend(a3, "menu");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "children");

    v7 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    v8 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }
  a1(v8);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_1004588E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100458908(a1, a2, a3, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
}

uint64_t sub_1004588F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100458908(a1, a2, a3, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
}

uint64_t sub_100458908(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a5;
    v8 = a4;
    v12 = a3;
    v7 = a2;
    v11 = a1;
    v10 = *v6;
    if (!((unint64_t)*v6 >> 62))
    {
      v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v10 < 0)
    v28 = v10;
  else
    v28 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v13 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v10);
  if (v13 < v7)
    goto LABEL_34;
LABEL_4:
  v13 = v7 - v11;
  if (__OFSUB__(v7, v11))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v10 = *v6;
  v36 = v8;
  if (!((unint64_t)*v6 >> 62))
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 + v5;
    if (!__OFADD__(v14, v5))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v10 < 0)
      v30 = v10;
    else
      v30 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v10);
    goto LABEL_15;
  }
LABEL_37:
  if (v10 < 0)
    v29 = v10;
  else
    v29 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v14 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v10);
  v15 = v14 + v5;
  if (__OFADD__(v14, v5))
    goto LABEL_42;
LABEL_8:
  v10 = *v6;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v6);
  *v6 = v10;
  v35 = v12;
  v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v17 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v14 = 1;
  }
  if ((unint64_t)v10 >> 62)
    goto LABEL_43;
  v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15)
    v18 = v15;
  swift_bridgeObjectRetain(v10);
  v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v10);
  swift_bridgeObjectRelease(*v6);
  *v6 = v10;
  v17 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v19 = (_QWORD *)(v17 + 32 + 8 * v11);
  v20 = sub_10004F2F0(0, v36, v9);
  v21 = (char *)swift_arrayDestroy(v19, v13, v20);
  if (!v5)
  {
LABEL_28:
    *v19 = v35;
    return specialized Array._endMutation()(v21);
  }
  if (!((unint64_t)v10 >> 62))
  {
    v22 = *(_QWORD *)(v17 + 16);
    v23 = v22 - v7;
    if (!__OFSUB__(v22, v7))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v10 < 0)
    v31 = v10;
  else
    v31 = v17;
  swift_bridgeObjectRetain(v10);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v10);
  v23 = v32 - v7;
  if (__OFSUB__(v32, v7))
    goto LABEL_52;
LABEL_21:
  if ((v23 & 0x8000000000000000) == 0)
  {
    v21 = (char *)(v19 + 1);
    v24 = (char *)(v17 + 32 + 8 * v7);
    if (v19 + 1 != (_QWORD *)v24 || v21 >= &v24[8 * v23])
      v21 = (char *)memmove(v21, v24, 8 * v23);
    if (!((unint64_t)v10 >> 62))
    {
      v25 = *(_QWORD *)(v17 + 16);
      v26 = v25 + v5;
      if (!__OFADD__(v25, v5))
      {
LABEL_27:
        *(_QWORD *)(v17 + 16) = v26;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v10 < 0)
      v33 = v10;
    else
      v33 = v17;
    swift_bridgeObjectRetain(v10);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    v21 = (char *)swift_bridgeObjectRelease(v10);
    v26 = v34 + v5;
    if (!__OFADD__(v34, v5))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100458BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v7);
  if (v9 < v5)
    goto LABEL_34;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v26 = v7;
    else
      v26 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v14 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v7);
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v25 = v7;
  else
    v25 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v7);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v7);
  v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v7);
  swift_bridgeObjectRelease(*v4);
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  v16 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v17 = (char *)swift_arrayDestroy(v15, v9, v16);
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return specialized Array._endMutation()(v17);
  }
  if (!((unint64_t)v7 >> 62))
  {
    v18 = *(_QWORD *)(v13 + 16);
    v19 = v18 - v5;
    if (!__OFSUB__(v18, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v7 < 0)
    v27 = v7;
  else
    v27 = v13;
  swift_bridgeObjectRetain(v7);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v7);
  v19 = v28 - v5;
  if (__OFSUB__(v28, v5))
    goto LABEL_52;
LABEL_21:
  if ((v19 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v15 + 1);
    v20 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v20 || v17 >= &v20[8 * v19])
      v17 = (char *)memmove(v17, v20, 8 * v19);
    if (!((unint64_t)v7 >> 62))
    {
      v21 = *(_QWORD *)(v13 + 16);
      v22 = v21 + v8;
      if (!__OFADD__(v21, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v22;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v7 < 0)
      v29 = v7;
    else
      v29 = v13;
    swift_bridgeObjectRetain(v7);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    v17 = (char *)swift_bridgeObjectRelease(v7);
    v22 = v30 + v8;
    if (!__OFADD__(v30, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100458ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100458908(a1, a2, a3, (unint64_t *)&qword_1006424C0, UIAction_ptr);
}

char *sub_100458EEC(uint64_t a1, int64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  char *result;
  int64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  size_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)result || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    result = (char *)sub_100153874(result, v13, 1, v5);
    v5 = result;
  }
  v14 = v5 + 4;
  v15 = (char *)v5 + a1 + 32;
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = v16 - a2;
  if (__OFSUB__(v16, a2))
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    result = v15 + 1;
    v18 = (char *)v14 + a2;
    if (v15 + 1 != (char *)v14 + a2 || result >= &v18[v17])
      result = (char *)memmove(result, v18, v17);
    v19 = v5[2];
    v20 = __OFADD__(v19, v9);
    v21 = v19 + v9;
    if (!v20)
    {
      v5[2] = v21;
LABEL_20:
      *v15 = a3;
      *v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v22 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v22, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100459048(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  _QWORD *v8;
  int64_t v9;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  char *result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char *v23;
  size_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v8 = *(_QWORD **)v6;
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v8);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    v8 = sub_100153AE8(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  v18 = (uint64_t)&v8[4 * a1 + 4];
  result = (char *)swift_arrayDestroy(v18, v11, &type metadata for DOCSidebarItem);
  if (!v12)
    goto LABEL_20;
  v20 = v8[2];
  v21 = __OFSUB__(v20, a2);
  v22 = v20 - a2;
  if (v21)
    goto LABEL_26;
  if ((v22 & 0x8000000000000000) == 0)
  {
    result = (char *)(v18 + 32);
    v23 = (char *)&v8[4 * a2 + 4];
    v24 = 32 * v22;
    if ((char *)(v18 + 32) != v23 || result >= &v23[v24])
      result = (char *)memmove(result, v23, v24);
    v25 = v8[2];
    v21 = __OFADD__(v25, v12);
    v26 = v25 + v12;
    if (!v21)
    {
      v8[2] = v26;
LABEL_20:
      *(_QWORD *)v18 = a3;
      *(_QWORD *)(v18 + 8) = a4;
      *(_QWORD *)(v18 + 16) = a5;
      *(_BYTE *)(v18 + 24) = a6;
      *(_QWORD *)v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v27 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v27, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004591E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100458908(a1, a2, a3, &qword_100643AC0, DOCDocumentSource_ptr);
}

uint64_t sub_1004591F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100459200(a1, a2, a3, type metadata accessor for DOCItemCollectionViewController);
}

uint64_t sub_100459200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v9 = a3;
    v5 = a2;
    v7 = a1;
    v8 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v8 < 0)
    v26 = v8;
  else
    v26 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v11 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v8);
  if (v11 < v5)
    goto LABEL_34;
LABEL_4:
  v11 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v10 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v8 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = v12 + v10;
    if (!__OFADD__(v12, v10))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v8 < 0)
      v28 = v8;
    else
      v28 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v16 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v8);
    goto LABEL_15;
  }
LABEL_37:
  if (v8 < 0)
    v27 = v8;
  else
    v27 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v12 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v8);
  v13 = v12 + v10;
  if (__OFADD__(v12, v10))
    goto LABEL_42;
LABEL_8:
  v8 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v8;
  v33 = v9;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if ((unint64_t)v8 >> 62)
    goto LABEL_43;
  v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13)
    v16 = v13;
  swift_bridgeObjectRetain(v8);
  v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v16, 1, v8);
  swift_bridgeObjectRelease(*v4);
  *v4 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v17 = (_QWORD *)(v15 + 32 + 8 * v7);
  v18 = v6(0);
  v19 = (char *)swift_arrayDestroy(v17, v11, v18);
  if (!v10)
  {
LABEL_28:
    *v17 = v33;
    return specialized Array._endMutation()(v19);
  }
  if (!((unint64_t)v8 >> 62))
  {
    v20 = *(_QWORD *)(v15 + 16);
    v21 = v20 - v5;
    if (!__OFSUB__(v20, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v8 < 0)
    v29 = v8;
  else
    v29 = v15;
  swift_bridgeObjectRetain(v8);
  v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v8);
  v21 = v30 - v5;
  if (__OFSUB__(v30, v5))
    goto LABEL_52;
LABEL_21:
  if ((v21 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v17 + 1);
    v22 = (char *)(v15 + 32 + 8 * v5);
    if (v17 + 1 != (_QWORD *)v22 || v19 >= &v22[8 * v21])
      v19 = (char *)memmove(v19, v22, 8 * v21);
    if (!((unint64_t)v8 >> 62))
    {
      v23 = *(_QWORD *)(v15 + 16);
      v24 = v23 + v10;
      if (!__OFADD__(v23, v10))
      {
LABEL_27:
        *(_QWORD *)(v15 + 16) = v24;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v8 < 0)
      v31 = v8;
    else
      v31 = v15;
    swift_bridgeObjectRetain(v8);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    v19 = (char *)swift_bridgeObjectRelease(v8);
    v24 = v32 + v10;
    if (!__OFADD__(v32, v10))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004594E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100459200(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for DOCMutableSidebarSection);
}

uint64_t sub_1004594F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100458908(a1, a2, a3, (unint64_t *)&qword_1006419B0, FPItem_ptr);
}

uint64_t sub_100459504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100458908(a1, a2, a3, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
}

char *sub_100459518(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_100153D20(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy(v16, v9, &type metadata for DOCHierarchyController.ResolvedLocationInfo);
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v24 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v24, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100459698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a3;
    v5 = a2;
    v6 = a1;
    v4 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v10 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10 >= a2)
        goto LABEL_4;
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  if (v4 < 0)
    v30 = v4;
  else
    v30 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v10 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v4);
  if (v10 < v5)
    goto LABEL_41;
LABEL_4:
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v8 = (unint64_t)v9 >> 62;
  if (!((unint64_t)v9 >> 62))
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = v11 - v7;
    if (!__OFSUB__(v11, v7))
      goto LABEL_7;
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
LABEL_43:
  if (v9 < 0)
    v31 = v9;
  else
    v31 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v11 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v9);
  v12 = v11 - v7;
  if (__OFSUB__(v11, v7))
    goto LABEL_48;
LABEL_7:
  v10 = *v3;
  v38 = v12;
  if (!((unint64_t)*v3 >> 62))
  {
    v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v12;
    if (!__OFADD__(v13, v12))
      goto LABEL_9;
LABEL_54:
    __break(1u);
LABEL_55:
    if (v10 < 0)
      v33 = v10;
    else
      v33 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v17 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v10);
    goto LABEL_16;
  }
LABEL_49:
  if (v10 < 0)
    v32 = v10;
  else
    v32 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v13 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v10);
  v14 = v13 + v38;
  if (__OFADD__(v13, v38))
    goto LABEL_54;
LABEL_9:
  v10 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v10;
  v37 = v8;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v16 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_19;
    v13 = 1;
  }
  if ((unint64_t)v10 >> 62)
    goto LABEL_55;
  v17 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v17 <= v14)
    v17 = v14;
  swift_bridgeObjectRetain(v10);
  v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v10);
  swift_bridgeObjectRelease(*v3);
  *v3 = v10;
  v16 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_19:
  v18 = v16 + 32 + 8 * v6;
  v19 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  swift_arrayDestroy(v18, v7, v19);
  v20 = v38;
  if (!v38)
    goto LABEL_30;
  if (!((unint64_t)v10 >> 62))
  {
    v21 = *(_QWORD *)(v16 + 16);
    v22 = v21 - v5;
    if (!__OFSUB__(v21, v5))
      goto LABEL_22;
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v10 < 0)
    v34 = v10;
  else
    v34 = v16;
  swift_bridgeObjectRetain(v10);
  v35 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v10);
  v20 = v38;
  v22 = v35 - v5;
  if (__OFSUB__(v35, v5))
    goto LABEL_64;
LABEL_22:
  if ((v22 & 0x8000000000000000) == 0)
  {
    v23 = (char *)(v18 + 8 * v11);
    v24 = (char *)(v16 + 32 + 8 * v5);
    if (v23 != v24 || v23 >= &v24[8 * v22])
    {
      memmove(v23, v24, 8 * v22);
      v20 = v38;
    }
    if (!((unint64_t)v10 >> 62))
    {
      v25 = *(_QWORD *)(v16 + 16);
LABEL_28:
      if (__OFADD__(v25, v20))
      {
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      *(_QWORD *)(v16 + 16) = v25 + v20;
LABEL_30:
      if (v11 < 1)
      {
LABEL_35:
        v28 = swift_bridgeObjectRelease(v9);
        return specialized Array._endMutation()(v28);
      }
      if (v37)
      {
        v26 = swift_bridgeObjectRetain(v9);
        v27 = sub_10028FA9C(v26);
        swift_bridgeObjectRelease(v9);
        sub_100459F48((uint64_t)(v27 + 4), v27[2], v11, v18);
        swift_release(v27);
        goto LABEL_35;
      }
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) == v11)
      {
        swift_arrayInitWithCopy(v18);
        goto LABEL_35;
      }
      goto LABEL_70;
    }
LABEL_65:
    if (v10 < 0)
      v36 = v10;
    else
      v36 = v16;
    swift_bridgeObjectRetain(v10);
    v25 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v10);
    v20 = v38;
    goto LABEL_28;
  }
LABEL_71:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100459A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100459200(a1, a2, a3, type metadata accessor for DOCTransitionableContext.SettingsTransaction);
}

char *sub_100459A70(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  int64_t v9;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  _QWORD *v18;
  char *result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v8 = *(_QWORD **)v6;
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v8);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    v8 = sub_1001548D4(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  v18 = &v8[4 * a1 + 4];
  result = (char *)swift_arrayDestroy(v18, v11, &type metadata for DOCMetadataKey);
  if (!v12)
    goto LABEL_20;
  v20 = v8[2];
  v21 = __OFSUB__(v20, a2);
  v22 = v20 - a2;
  if (v21)
    goto LABEL_26;
  if ((v22 & 0x8000000000000000) == 0)
  {
    result = (char *)(v18 + 4);
    v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22])
      result = (char *)memmove(result, v23, 32 * v22);
    v24 = v8[2];
    v21 = __OFADD__(v24, v12);
    v25 = v24 + v12;
    if (!v21)
    {
      v8[2] = v25;
LABEL_20:
      *v18 = a3;
      v18[1] = a4;
      v18[2] = a5;
      v18[3] = a6;
      *(_QWORD *)v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v26 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v26, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100459C00(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  char v28;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_100081B5C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = type metadata accessor for DOCBrowserHistoryItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy(v18, v8, v14);
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    v28 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v28, 1046, 0);
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack(v21, v22, v20, v14);
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront(v21);
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    sub_100144EAC(a3, v18);
  return sub_10045C068(a3);
}

char *sub_100459DC0(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_10008190C(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  v17 = sub_10006922C((uint64_t *)&unk_100644920);
  result = (char *)swift_arrayDestroy(v16, v9, v17);
  if (!v10)
    goto LABEL_20;
  v19 = v6[2];
  v20 = __OFSUB__(v19, a2);
  v21 = v19 - a2;
  if (v20)
    goto LABEL_26;
  if ((v21 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v22 = &v6[2 * a2 + 4];
    if (v16 + 2 != v22 || result >= (char *)&v22[2 * v21])
      result = (char *)memmove(result, v22, 16 * v21);
    v23 = v6[2];
    v20 = __OFADD__(v23, v10);
    v24 = v23 + v10;
    if (!v20)
    {
      v6[2] = v24;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v25 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v25, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100459F48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a3)
  {
    if (result)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      return swift_arrayInitWithCopy(a4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100459FBC(unint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;

  if (a1)
  {
    v3 = v2;
    v5 = a1;
    if (a2)
    {
      swift_bridgeObjectRetain(a1);
      swift_bridgeObjectRetain(a2);
      sub_1000887E8(v5);
      v5 = a2;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
    }
    v6 = objc_msgSend(v3, "leftBarButtonItems");
    if (!v6)
      goto LABEL_9;
    v7 = v6;
    v8 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    swift_bridgeObjectRetain(v5);
    v10 = swift_bridgeObjectRetain(v9);
    LOBYTE(v7) = sub_10023D6FC(v10, v5);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease_n(v9, 2);
    if ((v7 & 1) != 0)
    {
      swift_bridgeObjectRelease(v5);
    }
    else
    {
LABEL_9:
      sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v5);
      objc_msgSend(v3, "setLeftBarButtonItems:", isa);

    }
  }
}

uint64_t sub_10045A11C(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = a4;
    v8 = a3;
    v4 = a2;
    v7 = a1;
    v9 = *v5;
    if (!((unint64_t)*v5 >> 62))
    {
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  if (v9 < 0)
    v19 = v9;
  else
    v19 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v9);
  if (v20 < v4)
    goto LABEL_18;
LABEL_4:
  v6 = v4 - v7;
  if (__OFSUB__(v4, v7))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v7 - v4;
  if (__OFSUB__(0, v6))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    if (v9 < 0)
      v21 = v9;
    else
      v21 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v9);
    v13 = v22 + v39;
    if (!__OFADD__(v22, v39))
      goto LABEL_8;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *v5;
  v39 = v7 - v4;
  v40 = v7;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_21;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 - v6;
  if (__OFADD__(v12, v11))
    goto LABEL_26;
LABEL_8:
  v9 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v9;
  v15 = 0;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
    goto LABEL_28;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
  if (v13 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    v17 = v8;
    v18 = v10;
    goto LABEL_33;
  }
LABEL_27:
  v15 = 1;
LABEL_28:
  v17 = v8;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v23 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v23 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = v10;
  if (v23 <= v13)
    v23 = v13;
  swift_bridgeObjectRetain(v9);
  v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v15, v23, 1, v9);
  swift_bridgeObjectRelease(*v5);
  *v5 = v9;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_33:
  v24 = (char *)(v16 + 32 + 8 * v40);
  v25 = sub_10004F2F0(0, v17, v18);
  v26 = (void *)swift_arrayDestroy(v24, v6, v25);
  v27 = v39;
  if (!v39)
    return specialized Array._endMutation()(v26);
  if (!((unint64_t)v9 >> 62))
  {
    v28 = *(_QWORD *)(v16 + 16);
    v29 = v28 - v4;
    if (!__OFSUB__(v28, v4))
      goto LABEL_36;
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v9 < 0)
    v35 = v9;
  else
    v35 = v16;
  swift_bridgeObjectRetain(v9);
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  v26 = (void *)swift_bridgeObjectRelease(v9);
  v27 = v39;
  v29 = v36 - v4;
  if (__OFSUB__(v36, v4))
    goto LABEL_53;
LABEL_36:
  if ((v29 & 0x8000000000000000) == 0)
  {
    v30 = (char *)(v16 + 32 + 8 * v4);
    if (v40 != v4 || v24 >= &v30[8 * v29])
    {
      v26 = memmove(v24, v30, 8 * v29);
      v27 = v39;
    }
    if (!((unint64_t)v9 >> 62))
    {
      v31 = *(_QWORD *)(v16 + 16);
      v32 = v31 + v27;
      if (!__OFADD__(v31, v27))
      {
LABEL_42:
        *(_QWORD *)(v16 + 16) = v32;
        return specialized Array._endMutation()(v26);
      }
      goto LABEL_59;
    }
LABEL_54:
    if (v9 < 0)
      v37 = v9;
    else
      v37 = v16;
    swift_bridgeObjectRetain(v9);
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    v26 = (void *)swift_bridgeObjectRelease(v9);
    v32 = v38 + v39;
    if (!__OFADD__(v38, v39))
      goto LABEL_42;
LABEL_59:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void *sub_10045A42C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  id v24;
  id v25;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_72;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*a1, 2);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v39))
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v2)
         : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      if ((objc_msgSend(v5, "doc_isLegacyOverflowBarButtonItem") & 1) != 0)
      {
        swift_bridgeObjectRelease_n(v2, 2);
        v8 = *a1;
        if ((unint64_t)*a1 >> 62)
          goto LABEL_84;
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*a1);
        if (!v9)
        {
LABEL_20:
          swift_bridgeObjectRelease(v8);
          v14 = *a1;
          if ((unint64_t)*a1 >> 62)
            goto LABEL_94;
          v2 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          while (1)
          {
LABEL_22:
            v14 = *a1;
            if ((unint64_t)*a1 >> 62)
            {
              if (v14 < 0)
                v41 = *a1;
              else
                v41 = v14 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*a1);
              v15 = _CocoaArrayWrapper.endIndex.getter(v41);
              swift_bridgeObjectRelease(v14);
              if (v15 >= v2)
              {
LABEL_24:
                sub_10045A11C(v2, v15, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
                return v6;
              }
            }
            else
            {
              v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v15 >= v2)
                goto LABEL_24;
            }
            __break(1u);
LABEL_94:
            if (v14 < 0)
              v42 = v14;
            else
              v42 = v14 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v14);
            v2 = _CocoaArrayWrapper.endIndex.getter(v42);
            swift_bridgeObjectRelease(v14);
          }
        }
        while (2)
        {
          v2 = 0;
          while (1)
          {
            v10 = (v8 & 0xC000000000000001) != 0
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v8)
                : *(id *)(v8 + 8 * v2 + 32);
            v11 = v10;
            v12 = objc_msgSend(v10, "doc_isLegacyOverflowBarButtonItem");

            if ((v12 & 1) != 0)
              break;
            v13 = v2 + 1;
            if (__OFADD__(v2, 1))
              goto LABEL_68;
            ++v2;
            if (v13 == v9)
              goto LABEL_20;
          }
          swift_bridgeObjectRelease(v8);
          v17 = v2 + 1;
          if (__OFADD__(v2, 1))
          {
            __break(1u);
          }
          else
          {
            v8 = *a1;
            if (!((unint64_t)*a1 >> 62))
            {
              if (v17 == *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_22;
              goto LABEL_29;
            }
          }
          if (v8 < 0)
            v43 = v8;
          else
            v43 = v8 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v8);
          v44 = _CocoaArrayWrapper.endIndex.getter(v43);
          swift_bridgeObjectRelease(v8);
          if (v17 == v44)
            goto LABEL_22;
LABEL_29:
          v18 = v2 + 5;
LABEL_30:
          v8 = v18 - 4;
          v19 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, v19);
          }
          else
          {
            if (v8 < 0)
              goto LABEL_69;
            if ((unint64_t)v8 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_70;
            v20 = *(id *)(v19 + 8 * v18);
          }
          v21 = v20;
          v22 = objc_msgSend(v20, "doc_isLegacyOverflowBarButtonItem");

          if ((v22 & 1) != 0)
            goto LABEL_55;
          if (v8 == v2)
            goto LABEL_54;
          v23 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, *a1);
            v23 = *a1;
            if ((*a1 & 0xC000000000000001) == 0)
              goto LABEL_40;
          }
          else
          {
            if (v2 < 0)
              goto LABEL_78;
            if ((unint64_t)v2 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_79;
            v24 = *(id *)(v23 + 8 * v2 + 32);
            if ((v23 & 0xC000000000000001) == 0)
            {
LABEL_40:
              if (v8 < 0)
                goto LABEL_80;
              if ((unint64_t)v8 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_81;
              v25 = *(id *)(v23 + 8 * v18);
LABEL_43:
              isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v23);
              *a1 = v23;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v23 < 0 || (v23 & 0x4000000000000000) != 0)
              {
                v23 = sub_1000818A0(v23);
                *a1 = v23;
              }
              v27 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v2 + 0x20);
              *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v2 + 0x20) = v25;

              specialized Array._endMutation()(v28);
              v29 = *a1;
              v30 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
              *a1 = v29;
              if (!v30 || v29 < 0 || (v29 & 0x4000000000000000) != 0)
              {
                v29 = sub_1000818A0(v29);
                *a1 = v29;
              }
              if (v8 < 0)
                goto LABEL_82;
              v31 = v29 & 0xFFFFFFFFFFFFFF8;
              if ((unint64_t)v8 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_83;
              v32 = *(void **)(v31 + 8 * v18);
              *(_QWORD *)(v31 + 8 * v18) = v24;

              specialized Array._endMutation()(v33);
LABEL_54:
              if (__OFADD__(v2++, 1))
              {
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
LABEL_83:
                __break(1u);
LABEL_84:
                if (v8 < 0)
                  v40 = v8;
                else
                  v40 = v8 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v8);
                v9 = _CocoaArrayWrapper.endIndex.getter(v40);
                if (!v9)
                  goto LABEL_20;
                continue;
              }
LABEL_55:
              v35 = v18 - 3;
              if (__OFADD__(v8, 1))
                goto LABEL_71;
              v36 = *a1;
              if ((unint64_t)*a1 >> 62)
              {
                if (v36 < 0)
                  v38 = *a1;
                else
                  v38 = v36 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(*a1);
                v37 = _CocoaArrayWrapper.endIndex.getter(v38);
                swift_bridgeObjectRelease(v36);
              }
              else
              {
                v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
              }
              ++v18;
              if (v35 == v37)
                goto LABEL_22;
              goto LABEL_30;
            }
          }
          break;
        }
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, v23);
        v23 = *a1;
        goto LABEL_43;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_10;
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    if (v2 < 0)
      v39 = v2;
    else
      v39 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v2, 2);
  }
LABEL_10:
  swift_bridgeObjectRelease_n(v2, 2);
  return 0;
}

uint64_t sub_10045A8F4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  unint64_t v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  Class isa;
  id v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  v2 = a1;
  v91 = a1;
  if ((a2 & 1) == 0)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v86 = a1;
      else
        v86 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      if (!_CocoaArrayWrapper.endIndex.getter(v86))
        goto LABEL_25;
      swift_bridgeObjectRetain(v2);
      v3 = _CocoaArrayWrapper.endIndex.getter(v86);
      result = swift_bridgeObjectRelease(v2);
      v5 = v3 - 1;
      if (!__OFSUB__(v3, 1))
        goto LABEL_6;
    }
    else
    {
      v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(a1);
      if (!v3)
        goto LABEL_25;
      v5 = v3 - 1;
      if (!__OFSUB__(v3, 1))
      {
LABEL_6:
        if (v5 >= 1)
        {
          v2 = 0;
          v6 = v3 + 0x7FFFFFFFFFFFFFFFLL;
          do
          {
            v7 = v3 - 1;
            v8 = v91;
            if ((v91 & 0xC000000000000001) != 0)
            {
              v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v91);
              v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 1, v91);
            }
            else
            {
              v9 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v2 >= v9)
              {
LABEL_148:
                __break(1u);
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
                goto LABEL_153;
              }
              v10 = *(id *)(v91 + 8 * v2 + 32);
              if (v7 >= v9)
                goto LABEL_149;
              v11 = (uint64_t)v10;
              v12 = *(id *)(v91 + 8 * v3 + 24);
            }
            v13 = v12;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v91)
              || v91 < 0
              || (v91 & 0x4000000000000000) != 0)
            {
              v8 = sub_1000818A0(v91);
              v91 = v8;
            }
            v14 = *(void **)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v2 + 0x20);
            *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v2 + 0x20) = v13;

            specialized Array._endMutation()(v15);
            v16 = v91;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v91)
              || v91 < 0
              || (v91 & 0x4000000000000000) != 0)
            {
              v16 = sub_1000818A0(v91);
              v91 = v16;
            }
            if (v7 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_150;
            v17 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x18);
            *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x18) = v11;

            specialized Array._endMutation()(v18);
            if (v6 == v2)
              goto LABEL_151;
            ++v2;
            v19 = v3 - 2;
            --v3;
          }
          while (v2 < v19);
          v2 = v91;
        }
        goto LABEL_25;
      }
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain(a1);
LABEL_25:
  v90 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v2 >> 62)
    goto LABEL_154;
  v20 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  if (v20)
  {
    do
    {
      v87 = xmmword_1004D9B40;
      while (1)
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
        }
        else
        {
          if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
            goto LABEL_148;
          }
          v21 = *(id *)(v2 + 32);
        }
        v22 = v21;
        swift_bridgeObjectRelease(v2);
        v23 = (unint64_t)v2 >> 62;
        if ((unint64_t)v2 >> 62)
        {
          if (v2 < 0)
            v45 = v2;
          else
            v45 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v2);
          v46 = _CocoaArrayWrapper.endIndex.getter(v45);
          swift_bridgeObjectRelease(v2);
          if (!v46)
            goto LABEL_145;
          swift_bridgeObjectRetain(v2);
          v47 = _CocoaArrayWrapper.endIndex.getter(v45);
          swift_bridgeObjectRelease(v2);
          if (!v47)
            goto LABEL_146;
        }
        else if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_145;
        }
        if ((v2 & 0xC000000000000001) != 0)
        {
          v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
          if (!v23)
            goto LABEL_36;
        }
        else
        {
          if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_147;
          v24 = *(id *)(v2 + 32);
          if (!v23)
          {
LABEL_36:
            if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_152;
            goto LABEL_37;
          }
        }
        if (v2 < 0)
          v48 = v2;
        else
          v48 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v2);
        v49 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease(v2);
        if (!v49)
          goto LABEL_152;
LABEL_37:
        sub_10045A11C(0, 1, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);

        v25 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v26 = swift_allocObject(v25, 40, 7);
        *(_OWORD *)(v26 + 16) = v87;
        *(_QWORD *)(v26 + 32) = v22;
        v89 = v26;
        specialized Array._endMutation()(v26);
        v2 = v91;
        if (!((unint64_t)v91 >> 62))
          break;
        if (v91 < 0)
          v50 = v91;
        else
          v50 = v91 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v91, 2);
        v51 = v22;
        v52 = _CocoaArrayWrapper.endIndex.getter(v50);
        swift_bridgeObjectRelease(v91);
        if (!v52)
          goto LABEL_92;
        while (1)
        {
LABEL_39:
          if ((v2 & 0xC000000000000001) != 0)
          {
            v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
          }
          else
          {
            if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              goto LABEL_144;
            }
            v29 = *(id *)(v2 + 32);
          }
          v30 = v29;
          swift_bridgeObjectRelease(v2);
          if (!objc_msgSend(v30, "isSystemItem")
            || (char *)objc_msgSend(v30, "systemItem") - 5 >= (char *)2)
          {
            break;
          }
          v31 = (unint64_t)v2 >> 62;
          if ((unint64_t)v2 >> 62)
          {
            if (v2 < 0)
              v38 = v2;
            else
              v38 = v2 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v2);
            v39 = _CocoaArrayWrapper.endIndex.getter(v38);
            swift_bridgeObjectRelease(v2);
            if (!v39)
              goto LABEL_136;
            swift_bridgeObjectRetain(v2);
            v40 = _CocoaArrayWrapper.endIndex.getter(v38);
            swift_bridgeObjectRelease(v2);
            if (!v40)
              goto LABEL_137;
          }
          else if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_136;
          }
          if ((v2 & 0xC000000000000001) != 0)
          {
            v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
            if (!v31)
              goto LABEL_49;
          }
          else
          {
            if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_138;
            v32 = *(id *)(v2 + 32);
            if (!v31)
            {
LABEL_49:
              if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_143;
              goto LABEL_50;
            }
          }
          if (v2 < 0)
            v41 = v2;
          else
            v41 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v2);
          v42 = _CocoaArrayWrapper.endIndex.getter(v41);
          swift_bridgeObjectRelease(v2);
          if (!v42)
            goto LABEL_143;
LABEL_50:
          sub_10045A11C(0, 1, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);

          v33 = v30;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
          v35 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v34 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v35 >= v34 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
          v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
          specialized Array._endMutation()(v36);

          v2 = v91;
          if ((unint64_t)v91 >> 62)
          {
            if (v91 < 0)
              v43 = v91;
            else
              v43 = v91 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(v91, 2);
            v44 = _CocoaArrayWrapper.endIndex.getter(v43);
            swift_bridgeObjectRelease(v91);
            if (!v44)
              goto LABEL_92;
          }
          else
          {
            v37 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v91);
            if (!v37)
              goto LABEL_92;
          }
        }

        if ((a2 & 1) == 0)
          goto LABEL_93;
LABEL_122:
        v72 = objc_msgSend(v22, "buttonGroup", v87);
        if (v72)
        {
          v73 = v72;
          sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
          v74 = v73;
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v89);
          objc_msgSend(v74, "setBarButtonItems:", isa);

        }
        else
        {
          type metadata accessor for DOCBarButtonItemGroup();
          v74 = (id)static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v89);
          swift_bridgeObjectRelease(v89);
        }
        v76 = v74;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v76);
        v78 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v77 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v78 >= v77 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1);
        v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v76);
        specialized Array._endMutation()(v79);

        if ((unint64_t)v2 >> 62)
        {
          if (v2 < 0)
            v81 = v2;
          else
            v81 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v2, 2);
          v82 = _CocoaArrayWrapper.endIndex.getter(v81);
          swift_bridgeObjectRelease(v2);
          if (!v82)
          {
LABEL_134:
            swift_bridgeObjectRelease(v2);
            v83 = (_QWORD *)v90;
            goto LABEL_159;
          }
        }
        else
        {
          v80 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v2);
          if (!v80)
            goto LABEL_134;
        }
      }
      v27 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v91);
      v28 = v22;
      if (v27)
        goto LABEL_39;
LABEL_92:
      swift_bridgeObjectRelease(v2);
      if ((a2 & 1) != 0)
        goto LABEL_122;
LABEL_93:
      if ((unint64_t)v89 >> 62)
      {
        if (v89 < 0)
          v70 = v89;
        else
          v70 = v89 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v89);
        v71 = _CocoaArrayWrapper.endIndex.getter(v70);
        swift_bridgeObjectRelease(v89);
        if (!v71)
          goto LABEL_122;
        swift_bridgeObjectRetain(v89);
        v53 = _CocoaArrayWrapper.endIndex.getter(v70);
        swift_bridgeObjectRelease(v89);
        v54 = v53 - 1;
        if (!__OFSUB__(v53, 1))
          goto LABEL_96;
      }
      else
      {
        v53 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v53)
          goto LABEL_122;
        v54 = v53 - 1;
        if (!__OFSUB__(v53, 1))
        {
LABEL_96:
          if (v54 >= 1)
          {
            v55 = 0;
            v56 = v53 + 0x7FFFFFFFFFFFFFFFLL;
            do
            {
              v57 = v53 - 1;
              v58 = v89;
              if ((v89 & 0xC000000000000001) != 0)
              {
                v61 = specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v89);
                v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v53 - 1, v89);
              }
              else
              {
                v59 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v55 >= v59)
                  goto LABEL_139;
                v60 = *(id *)(v89 + 8 * v55 + 32);
                if (v57 >= v59)
                  goto LABEL_140;
                v61 = (uint64_t)v60;
                v62 = *(id *)(v89 + 8 * v53 + 24);
              }
              v63 = v62;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v89)
                || v89 < 0
                || (v89 & 0x4000000000000000) != 0)
              {
                v58 = sub_1000818A0(v89);
                v89 = v58;
              }
              v64 = *(void **)((v58 & 0xFFFFFFFFFFFFFF8) + 8 * v55 + 0x20);
              *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 8 * v55 + 0x20) = v63;

              specialized Array._endMutation()(v65);
              v66 = v89;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v89)
                || v89 < 0
                || (v89 & 0x4000000000000000) != 0)
              {
                v66 = sub_1000818A0(v89);
                v89 = v66;
              }
              if (v57 >= *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_141;
              v67 = *(void **)((v66 & 0xFFFFFFFFFFFFFF8) + 8 * v53 + 0x18);
              *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 8 * v53 + 0x18) = v61;

              specialized Array._endMutation()(v68);
              if (v56 == v55)
                goto LABEL_142;
              ++v55;
              v69 = v53 - 2;
              --v53;
            }
            while (v55 < v69);
          }
          goto LABEL_122;
        }
      }
LABEL_153:
      __break(1u);
LABEL_154:
      if (v2 < 0)
        v84 = v2;
      else
        v84 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v2, 2);
      v85 = _CocoaArrayWrapper.endIndex.getter(v84);
      swift_bridgeObjectRelease(v2);
    }
    while (v85);
  }
  swift_bridgeObjectRelease(v2);
  v83 = _swiftEmptyArrayStorage;
LABEL_159:
  swift_bridgeObjectRelease(v2);
  return (uint64_t)v83;
}

void sub_10045B2B8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  char v30;
  unint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;

  v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    v6 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
    {
LABEL_3:
      if (v5 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
      goto LABEL_4;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
  }
  if (a2 < 0)
    v12 = a2;
  else
    v12 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(a2);
  if (v5 != v13)
    return;
LABEL_4:
  if (v4)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
    v7 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v7)
      goto LABEL_50;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
    if (!v7)
    {
LABEL_50:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a1);
      return;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    if (!v6)
      goto LABEL_14;
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_60;
    v9 = *(id *)(a1 + 32);
    if (!v6)
    {
LABEL_14:
      v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v10)
      {
LABEL_49:
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(a1);

        return;
      }
      goto LABEL_30;
    }
  }
  if (a2 < 0)
    v14 = a2;
  else
    v14 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v10 = _CocoaArrayWrapper.endIndex.getter(v14);
  swift_bridgeObjectRelease(a2);
  if (!v10)
    goto LABEL_49;
LABEL_30:
  v15 = 0;
  v34 = v7 - 1;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a2);
    }
    else
    {
      if (v15 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_58;
      v16 = *(id *)(a2 + 32 + 8 * v15);
    }
    v17 = v16;
    v18 = v9;
    v19 = v17;
    v20 = objc_msgSend(v18, "barButtonItems");
    v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

    v23 = objc_msgSend(v19, "barButtonItems");
    v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v21);

    swift_bridgeObjectRetain(v24);
    v25 = swift_bridgeObjectRetain(v22);
    LOBYTE(v23) = sub_10023D6FC(v25, v24);
    swift_bridgeObjectRelease_n(v22, 2);
    swift_bridgeObjectRelease_n(v24, 2);
    if ((v23 & 1) == 0)
    {
      v33 = v19;
      v26 = v18;
      goto LABEL_54;
    }
    v26 = objc_msgSend(v18, "representativeItem");
    v27 = objc_msgSend(v19, "representativeItem");
    v28 = v27;
    if (!v26)
    {

      if (!v28)
      {

        goto LABEL_42;
      }
      v33 = v18;
      v26 = v28;
LABEL_54:

LABEL_55:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a1);
      return;
    }
    if (!v27)
    {

      v33 = v18;
      goto LABEL_54;
    }
    v29 = v26;
    v30 = static NSObject.== infix(_:_:)(v29, v28);

    if ((v30 & 1) == 0)
      goto LABEL_55;
LABEL_42:
    if (v34 == v15)
      goto LABEL_50;
    v31 = v15 + 1;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 + 1, a1);
    }
    else
    {
      if (v31 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_59;
      v32 = *(id *)(a1 + 40 + 8 * v15);
    }
    v9 = v32;
    if (__OFADD__(v31, 1))
      break;
    if (v10 == ++v15)
      goto LABEL_49;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

void sub_10045B6DC(uint64_t a1, unint64_t a2)
{
  void *v2;
  unint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  Class isa;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class v26;
  id v27;
  _QWORD aBlock[5];
  uint64_t v29;
  unint64_t v30;

  if (!a1)
  {
LABEL_8:
    if (!a2)
      return;
    goto LABEL_11;
  }
  v4 = a1;
  v30 = a1;
  v5 = (void *)objc_opt_self(DOCFeature);
  swift_bridgeObjectRetain(v4);
  if (objc_msgSend(v5, "_UIPTabInfrastructureEnabled"))
  {
    v6 = sub_10045A42C((uint64_t *)&v30);
    if (v6)
    {
      v7 = (void *)objc_opt_self(UIDeferredMenuElement);
      v8 = swift_allocObject(&unk_1005EDA78, 24, 7);
      *(_QWORD *)(v8 + 16) = v6;
      aBlock[4] = sub_10045BA4C;
      v29 = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100458078;
      aBlock[3] = &unk_1005EDA90;
      v9 = _Block_copy(aBlock);
      v10 = v29;
      v11 = v6;
      swift_release(v10);
      v6 = objc_msgSend(v7, "elementWithUncachedProvider:", v9);

      _Block_release(v9);
    }
    objc_msgSend(v2, "setAdditionalOverflowItems:", v6);

    v4 = v30;
  }
  v12 = sub_10028EF0C(v4);
  swift_bridgeObjectRelease(v4);
  v13 = sub_10045A8F4((uint64_t)v12, 1);
  swift_release(v12);
  v14 = objc_msgSend(v2, "trailingItemGroups");
  v15 = sub_10004F2F0(0, &qword_100656588, UIBarButtonItemGroup_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  sub_10045B2B8(v16, v13);
  LOBYTE(v14) = v17;
  swift_bridgeObjectRelease(v16);
  if ((v14 & 1) != 0)
  {
    swift_bridgeObjectRelease(v13);
    goto LABEL_8;
  }
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v2, "setTrailingItemGroups:", isa);

  if (!a2)
    return;
LABEL_11:
  swift_bridgeObjectRetain(a2);
  v19 = objc_msgSend(v2, "_dci_fixedTrailingGroup");
  if (!v19)
    goto LABEL_14;
  v20 = v19;
  v21 = objc_msgSend(v19, "barButtonItems");

  v22 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  swift_bridgeObjectRetain(a2);
  v24 = swift_bridgeObjectRetain(v23);
  LOBYTE(v21) = sub_10023D6FC(v24, a2);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease_n(v23, 2);
  if ((v21 & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
  }
  else
  {
LABEL_14:
    v25 = objc_allocWithZone((Class)UIBarButtonItemGroup);
    sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    v26 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a2);
    v27 = objc_msgSend(v25, "initWithBarButtonItems:representativeItem:", v26, 0);

    objc_msgSend(v2, "_dci_setFixedTrailingGroup:", v27);
  }
}

uint64_t sub_10045BA28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10045BA4C(void (*a1)(_QWORD *), int a2)
{
  uint64_t v2;

  return sub_100458830(a1, a2, *(id *)(v2 + 16));
}

uint64_t sub_10045BA54()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10045BA78(uint64_t a1)
{
  uint64_t v1;

  sub_1004580E8(a1, *(_QWORD *)(v1 + 16));
}

char *sub_10045BA80(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_1001530E4(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[8 * a1 + 32];
    v15 = &v4[8 * a2 + 32];
    if (a1 != a2 || result >= &v15[8 * v14])
      result = (char *)memmove(result, v15, 8 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045BBD8(uint64_t a1, uint64_t a2)
{
  return sub_10045A11C(a1, a2, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
}

uint64_t sub_10045BBEC(uint64_t a1, uint64_t a2)
{
  return sub_10045A11C(a1, a2, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
}

uint64_t sub_10045BC00(uint64_t a1, uint64_t a2)
{
  return sub_100088C5C(a1, a2, type metadata accessor for DOCSidebarCellAccessoryItem);
}

void *sub_10045BC0C(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  void *result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100153D20(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = (void *)swift_arrayDestroy(&v4[2 * a1 + 4], v7, &type metadata for DOCHierarchyController.ResolvedLocationInfo);
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v19 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v19, 1046, 0);
  __break(1u);
  return result;
}

void *sub_10045BD74(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  char *v13;
  void *result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100153AE8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = 32 * a1;
  v13 = (char *)&v4[4 * a1 + 4];
  result = (void *)swift_arrayDestroy(v13, v7, &type metadata for DOCSidebarItem);
  if (!v7)
    goto LABEL_20;
  v15 = v4[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)&v4[4 * a2 + 4];
    v19 = 32 * v17;
    if (v12 != 32 * a2 || v13 >= &v18[v19])
      result = memmove(v13, v18, v19);
    v20 = v4[2];
    v16 = __OFADD__(v20, v8);
    v21 = v20 - v7;
    if (!v16)
    {
      v4[2] = v21;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v22 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v22, 1046, 0);
  __break(1u);
  return result;
}

void *sub_10045BEE4(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100153E40(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = sub_10006922C(&qword_100644B98);
  result = (void *)swift_arrayDestroy(&v4[2 * a1 + 4], v7, v12);
  if (!v7)
    goto LABEL_20;
  v14 = v4[2];
  v15 = __OFSUB__(v14, a2);
  v16 = v14 - a2;
  if (v15)
    goto LABEL_26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v17[16 * v16])
      result = memmove(&v4[2 * a1 + 4], v17, 16 * v16);
    v18 = v4[2];
    v15 = __OFADD__(v18, v8);
    v19 = v18 - v7;
    if (!v15)
    {
      v4[2] = v19;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v20 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v20, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045C054(uint64_t a1, uint64_t a2)
{
  return sub_10045A11C(a1, a2, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
}

uint64_t sub_10045C068(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C((uint64_t *)&unk_100656590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10045C0A8(uint64_t a1, uint64_t a2)
{
  return sub_10045C3E4(a1, a2, (uint64_t (*)(void))sub_100081B70, type metadata accessor for DOCFileOperation);
}

uint64_t sub_10045C0BC(uint64_t a1, uint64_t a2)
{
  return sub_100088C5C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DOCItemCollectionView);
}

uint64_t sub_10045C0C8(uint64_t a1, uint64_t a2)
{
  return sub_100088C5C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DOCBrowserContainerController);
}

uint64_t sub_10045C0D4(uint64_t a1, uint64_t a2)
{
  return sub_100088C5C(a1, a2, type metadata accessor for DOCBrowserHistoryShiftRequest);
}

uint64_t sub_10045C0E0(uint64_t a1, uint64_t a2)
{
  return sub_10045A11C(a1, a2, (unint64_t *)&unk_100641970, FINode_ptr);
}

uint64_t sub_10045C0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v5);
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = sub_10006922C(&qword_10064B760);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain(v5);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain(v5);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045C3C4(uint64_t a1, uint64_t a2)
{
  return sub_100088C5C(a1, a2, type metadata accessor for DOCTransitionableContext.SettingsTransaction);
}

uint64_t sub_10045C3D0(uint64_t a1, uint64_t a2)
{
  return sub_10045C3E4(a1, a2, (uint64_t (*)(void))sub_100081B5C, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_10045C3E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native(*v4) || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = a4(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = v6 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v16 * a1;
  v18 = v15 + v16 * a1;
  result = swift_arrayDestroy(v18, v9, v13);
  if (!v9)
    goto LABEL_22;
  v20 = *(_QWORD *)(v6 + 16);
  v21 = v20 - a2;
  if (__OFSUB__(v20, a2))
    goto LABEL_28;
  if ((v21 & 0x8000000000000000) == 0)
  {
    v22 = v15 + v16 * a2;
    if (v17 < v16 * a2 || v18 >= v22 + v21 * v16)
    {
      result = swift_arrayInitWithTakeFrontToBack(v18, v22, v21, v13);
    }
    else if (v17 != v16 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront(v18);
    }
    v24 = *(_QWORD *)(v6 + 16);
    v25 = __OFADD__(v24, v10);
    v26 = v24 - v9;
    if (!v25)
    {
      *(_QWORD *)(v6 + 16) = v26;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  v27 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v27, 1046, 0);
  __break(1u);
  return result;
}

id sub_10045C594()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC5Files19DOCSearchController_configuration);
}

void UIViewController.doc_manuallyHiddenForSearch.setter(int a1)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  uint64_t KeyPath;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = (_QWORD *)UIViewController.associatedObjectStorage.getter();
  KeyPath = swift_getKeyPath(&unk_1004E9708);
  (*(void (**)(char *__return_ptr))((swift_isaMask & *v4) + 0x60))((char *)&v12 + 2);
  swift_release(KeyPath);

  if (BYTE2(v12) == 2)
  {
    if ((a1 & 1) == 0)
      return;
  }
  else if (((((v12 & 0x10000) == 0) ^ a1) & 1) != 0)
  {
    return;
  }
  v6 = (_QWORD *)UIViewController.associatedObjectStorage.getter();
  v7 = swift_getKeyPath(&unk_1004E9708);
  BYTE1(v12) = a1 & 1;
  (*(void (**)(char *, uint64_t))((swift_isaMask & *v6) + 0x68))((char *)&v12 + 1, v7);

  v8 = objc_msgSend(v2, "view");
  if (v8)
  {
    v9 = v8;
    v10 = (_QWORD *)UIViewController.associatedObjectStorage.getter();
    v11 = swift_getKeyPath(&unk_1004E9708);
    (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v10) + 0x60))(&v12);
    swift_release(v11);

    objc_msgSend(v9, "setHidden:", v12 & 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_10045C708(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  NSString v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[2];

  v3 = v2;
  v6 = objc_msgSend(v2, "scopeFragment");
  if (!v6)
  {
    swift_bridgeObjectRetain(a2);
    goto LABEL_5;
  }

  v7 = objc_msgSend(v2, "scopeFragment");
  v8 = v7;
  if (v7)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

    v16[0] = 539371040;
    v16[1] = 0xE400000000000000;
    v12._countAndFlagsBits = a1;
    v12._object = a2;
    String.append(_:)(v12);
    v14 = v9;
    v15 = v11;
    swift_bridgeObjectRetain(v11);
    v14 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    v15 = v13;
    String.append<A>(contentsOf:)(v16, &type metadata for String, &protocol witness table for String);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(0xE400000000000000);
    a2 = v15;
LABEL_5:
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  objc_msgSend(v3, "setScopeFragment:", v8);

}

uint64_t sub_10045C858(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1004656EC(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_10046425C(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

BOOL sub_10045C8D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  switch(v2)
  {
    case 2:
      return v3 == 2;
    case 3:
      return v3 == 3;
    case 4:
      return v3 == 4;
  }
  if ((v3 - 2) < 3)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

id sub_10045C970()
{
  return sub_1000DB3A0(type metadata accessor for DOCEverywhereSearchScope);
}

uint64_t sub_10045C990()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_displayName);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_displayName + 8));
  return v1;
}

id sub_10045C9C8()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)NSFileProviderSearchQuery), "initWithSearchScope:", 0);
  objc_msgSend(v1, "setTrashedItemsMembership:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_trashedItemsMembership));
  return v1;
}

id sub_10045CA1C()
{
  uint64_t v0;
  char **v1;
  id v2;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source + 8))
    v1 = &selRef_scopedSearchQuery;
  else
    v1 = &selRef_scopedSearchQueryUnderItem;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source), *v1));
  objc_msgSend(v2, "setShouldPerformServerSearch:", *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch));
  objc_msgSend(v2, "setTrashedItemsMembership:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership));
  return v2;
}

id sub_10045CAD8()
{
  return sub_1000DB3A0(type metadata accessor for DOCItemCollectionSearchScope);
}

uint64_t sub_10045CB20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName + 8));
  return v1;
}

id sub_10045CB5C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source + 8) == 1)
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source), "itemFilteringPredicate");
  else
    return 0;
}

id sub_10045CBA8()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)NSFileProviderSearchQuery), "initWithSearchScope:", 0);
  objc_msgSend(v1, "setProviderDomainID:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_providerDomainIdentifier));
  objc_msgSend(v1, "setShouldPerformServerSearch:", *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_shouldPerformServerSearch));
  objc_msgSend(v1, "setTrashedItemsMembership:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_trashedItemsMembership));
  return v1;
}

id sub_10045CC60()
{
  return sub_1000DB3A0(type metadata accessor for DOCFileProviderSearchScope);
}

uint64_t sub_10045CCA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_displayName);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_displayName + 8));
  return v1;
}

id sub_10045CE08()
{
  return sub_1000DB3A0(type metadata accessor for DOCPlaceholderSearchController);
}

id sub_10045CE14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController);
  }
  else
  {
    v4 = sub_10045CE74(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10045CE74(uint64_t a1)
{
  id v2;
  id result;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  void *v13;
  uint64_t v14;
  _BYTE v15[40];

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCSuggestionsTableViewController()), "init");
  result = objc_msgSend(v2, "view");
  if (result)
  {
    v4 = result;
    v5 = objc_opt_self(UITableView);
    v6 = (void *)swift_dynamicCastObjCClassUnconditional(v4, v5, 0, 0, 0);
    objc_msgSend(v6, "setAccessibilityIdentifier:", DOCItemCollectionViewSearchSuggestionsTableViewIdentifier);
    objc_msgSend(v6, "setContentInsetAdjustmentBehavior:", 2);
    v7 = objc_msgSend(v6, "widthAnchor");
    v8 = objc_msgSend(v7, "constraintEqualToConstant:", 500.0);

    v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints);
    v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v10, v15);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v8;
    v14 = inited;
    specialized Array._endMutation()(inited);
    swift_retain();
    v12 = v8;
    sub_100463970(2, v14);
    swift_bridgeObjectRelease(v14);
    swift_release(v9);
    v13 = *(void **)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint) = v12;

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10045D010()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  Class isa;
  uint64_t v64;
  void *Strong;
  void *v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  char v71;
  id v72;
  id v73;
  objc_super v74;
  char v75[48];
  uint64_t v76;
  char v77[40];

  v1 = v0;
  v2 = v0[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement];
  if ((v2 & 1) != 0)
    goto LABEL_18;
  v3 = sub_10045CE14();
  v4 = objc_msgSend(v3, "tableView");

  if (!v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v5 = objc_msgSend(v4, "superview");

  if (v5)
  {
LABEL_18:
    v72 = sub_10045CE14();
    v73 = objc_msgSend(v72, "tableView");

    if (v73)
    {
      objc_msgSend(v73, "setHidden:", v2);

      sub_1004629C8(0);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  v6 = sub_10045CE14();
  v7 = objc_msgSend(v6, "tableView");

  if (!v7)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v8 = OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = *(id *)&v1[v8];
  v10 = sub_10045CE14();
  v11 = objc_msgSend(v10, "tableView");

  if (!v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_msgSend(v9, "addSubview:", v11);

  v12 = OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints;
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints];
  v14 = *(_QWORD *)(v13 + 24);
  v15 = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 1;
  swift_retain();
  sub_100463AF0(v14, v15);
  swift_release(v13);
  v16 = *(_QWORD *)&v1[v12];
  v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v17, v77);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  swift_retain();
  v19 = sub_10045CE14();
  v20 = objc_msgSend(v19, "tableView");

  if (!v20)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v21 = objc_msgSend(v20, "centerXAnchor");

  v22 = objc_msgSend(*(id *)&v1[v8], "centerXAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(inited + 32) = v23;
  v76 = inited;
  specialized Array._endMutation()(v24);
  sub_100463970(2, inited);
  swift_bridgeObjectRelease(inited);
  swift_release(v16);
  v25 = *(_QWORD *)&v1[v12];
  v26 = swift_initStackObject(v17, v75);
  *(_OWORD *)(v26 + 16) = xmmword_1004DA350;
  swift_retain();
  v27 = sub_10045CE14();
  v28 = objc_msgSend(v27, "tableView");

  if (!v28)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v29 = objc_msgSend(v28, "leadingAnchor");

  v30 = objc_msgSend(*(id *)&v1[v8], "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v26 + 32) = v31;
  v32 = sub_10045CE14();
  v33 = objc_msgSend(v32, "tableView");

  if (!v33)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v34 = objc_msgSend(v33, "trailingAnchor");

  v35 = objc_msgSend(*(id *)&v1[v8], "trailingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v26 + 40) = v36;
  v76 = v26;
  specialized Array._endMutation()(v37);
  v38 = v76;
  sub_100463970(1, v76);
  swift_bridgeObjectRelease(v38);
  swift_release(v25);
  v39 = swift_allocObject(v17, 64, 7);
  *(_OWORD *)(v39 + 16) = xmmword_1004DAC10;
  v40 = objc_msgSend(*(id *)&v1[v8], "widthAnchor");
  v41 = sub_10045CE14();
  v42 = objc_msgSend(v41, "tableView");

  if (!v42)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v43 = objc_msgSend(v42, "widthAnchor");

  v44 = objc_msgSend(v40, "constraintGreaterThanOrEqualToAnchor:multiplier:", v43, 1.0);
  *(_QWORD *)(v39 + 32) = v44;
  v45 = objc_msgSend(*(id *)&v1[v8], "topAnchor");
  v46 = sub_10045CE14();
  v47 = objc_msgSend(v46, "tableView");

  if (!v47)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v48 = objc_msgSend(v47, "topAnchor");

  v49 = objc_msgSend(v45, "constraintGreaterThanOrEqualToAnchor:", v48);
  *(_QWORD *)(v39 + 40) = v49;
  v50 = objc_msgSend(*(id *)&v1[v8], "bottomAnchor");
  v51 = sub_10045CE14();
  v52 = objc_msgSend(v51, "tableView");

  if (!v52)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v53 = objc_msgSend(v52, "bottomAnchor");

  v54 = objc_msgSend(v50, "constraintGreaterThanOrEqualToAnchor:", v53);
  *(_QWORD *)(v39 + 48) = v54;
  v55 = objc_msgSend(*(id *)&v1[v8], "heightAnchor");
  v56 = sub_10045CE14();
  v57 = objc_msgSend(v56, "tableView");

  if (v57)
  {
    v58 = (void *)objc_opt_self(NSLayoutConstraint);
    v59 = objc_msgSend(v57, "heightAnchor");

    v60 = objc_msgSend(v55, "constraintGreaterThanOrEqualToAnchor:multiplier:", v59, 1.0);
    *(_QWORD *)(v39 + 56) = v60;
    v76 = v39;
    specialized Array._endMutation()(v61);
    v62 = v76;
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v58, "activateConstraints:", isa, swift_bridgeObjectRelease(v62).n128_f64[0]);

    if (v1[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] == 1
      && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], v64)) != 0)
    {
      v66 = Strong;
      v67 = objc_msgSend(Strong, "traitCollectionExpectedForSearchPresentation");
      swift_unknownObjectRelease(v66);
    }
    else
    {
      v74.receiver = v1;
      v74.super_class = (Class)type metadata accessor for DOCSearchController();
      v67 = objc_msgSendSuper2(&v74, "traitCollection");
    }
    v68 = *(_QWORD *)&v1[v12];
    v69 = objc_msgSend(v67, "horizontalSizeClass", swift_retain().n128_f64[0]);
    v70 = *(_QWORD *)(v68 + 24);
    v71 = *(_BYTE *)(v68 + 32);
    *(_QWORD *)(v68 + 24) = v69;
    *(_BYTE *)(v68 + 32) = 0;
    sub_100463AF0(v70, v71);

    swift_release(v68);
    goto LABEL_18;
  }
LABEL_30:
  __break(1u);
}

void sub_10045D864()
{
  char *v0;
  char *v1;
  id v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void **v11;
  void *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  v1 = v0;
  v2 = objc_msgSend(v0, "searchBar");
  v3 = objc_msgSend(v2, "isFirstResponder");

  if (v3)
    sub_100461E0C(v4, v5);
  v6 = sub_10045DB6C();
  sub_10013CD38(v6);
  v47 = v7;
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v10 = &v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
    v11 = (void **)(v7 + 40);
    do
    {
      v13 = (uint64_t)*(v11 - 1);
      v12 = *v11;
      Strong = swift_unknownObjectWeakLoadStrong(v10, v8);
      if (Strong)
      {
        v16 = Strong;
        v17 = *((_QWORD *)v10 + 1);
        ObjectType = swift_getObjectType(Strong, v15);
        v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 8);
        v20 = v12;
        v21 = v19(v1, ObjectType, v17);
        swift_unknownObjectRelease(v16);
        v22 = *(_QWORD *)(v21 + 16);
        swift_bridgeObjectRelease(v21);
        if (v22)
        {
          v24 = sub_10046073C();
          if (((unint64_t)objc_msgSend(v24, "trashedItemsMembership") & 0xFFFFFFFFFFFFFFFDLL) == 0)
          {
            v30 = v24;
            goto LABEL_18;
          }
          v25 = objc_msgSend(v24, "providerDomainID");

          if (v25)
          {
            v26 = objc_msgSend(v24, "providerDomainID");
            if (!v26)
            {
              __break(1u);
              return;
            }
            v27 = v26;
            static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
            v29 = v28;

            v30 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v29);
            if ((DOCProviderDomainIDIsExternalDevice(v30) & 1) != 0)
            {

LABEL_18:
LABEL_19:
              v37 = type metadata accessor for DOCQueryFragmentSuggestion();
              if (swift_dynamicCastClass(v12, v37))
              {
                v38 = objc_msgSend(v1, "searchBar");
                v39 = objc_msgSend(v38, "searchTextField");

                objc_msgSend(v39, "removeTokenAtIndex:", v13);
              }
              goto LABEL_5;
            }
            v40 = DOCProviderDomainIDIsSharedServerDomainID(v30);

            if ((v40 & 1) != 0)
              goto LABEL_19;
          }
          else
          {

          }
        }
      }
      else
      {
        v31 = v12;
      }
      v32 = swift_unknownObjectWeakLoadStrong(v10, v23);
      if (v32)
      {
        v34 = v32;
        v35 = *((_QWORD *)v10 + 1);
        v36 = swift_getObjectType(v32, v33);
        LOBYTE(v35) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v1, v36, v35);
        swift_unknownObjectRelease(v34);
        if ((v35 & 1) == 0)
          goto LABEL_19;
      }
LABEL_5:

      v11 += 2;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease(v47);
  sub_100460474();
  if ((v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement] & 1) == 0)
  {
    v41 = OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions;
    v42 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions];
    v43 = v1;
    v44 = swift_bridgeObjectRetain(v42);
    v45 = sub_10046573C(v44, (uint64_t)v43);
    swift_bridgeObjectRelease(v42);

    v46 = *(_QWORD *)&v1[v41];
    *(_QWORD *)&v1[v41] = v45;
    swift_bridgeObjectRelease(v46);
    sub_1004627E8();
    sub_100460474();
  }
}

uint64_t sub_10045DB6C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _OWORD v23[2];
  _BYTE v24[24];
  uint64_t v25;
  unint64_t v26;

  v1 = objc_msgSend(v0, "searchBar");
  v2 = objc_msgSend(v1, "searchTextField");

  v3 = objc_msgSend(v2, "tokens");
  v4 = sub_10004F2F0(0, (unint64_t *)&unk_100656AD8, UISearchToken_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  v26 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (v6)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(v5);
    v19 = _swiftEmptyArrayStorage;
LABEL_23:
    swift_bridgeObjectRelease(v5);
    return (uint64_t)v19;
  }
LABEL_18:
  if (v5 < 0)
    v20 = v5;
  else
    v20 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v5, 2);
  v6 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v5);
  if (!v6)
    goto LABEL_22;
LABEL_3:
  v7 = 4;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5);
    else
      v8 = *(id *)(v5 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v11 = objc_msgSend(v8, "representedObject");
    if (v11)
    {
      v12 = v11;
      _bridgeAnyObjectToAny(_:)(v23, v11);
      swift_unknownObjectRelease(v12);
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    sub_10007EBDC((uint64_t)v23, (uint64_t)v24);
    if (!v25)
      break;
    v13 = type metadata accessor for DOCSearchSuggestion();
    if ((swift_dynamicCast(&v22, v24, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
      goto LABEL_25;
    v14 = v22;

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v17 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v16 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
    specialized Array._endMutation()(v18);
    ++v7;
    if (v10 == v6)
    {
      swift_bridgeObjectRelease(v5);
      v19 = (_QWORD *)v26;
      goto LABEL_23;
    }
  }
  sub_10007EB54((uint64_t)v24);
LABEL_25:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000024, 0x8000000100537240, "Files/DOCSearchController.swift", 31, 2, 376, 0);
  __break(1u);
  return result;
}

BOOL sub_10045DE1C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, "searchBar");
  v2 = objc_msgSend(v1, "text");

  if (v2)
  {
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v2 = (id)(v3 & 0xFFFFFFFFFFFFLL);
  }
  else
  {
    v5 = 0xE000000000000000;
  }
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v5).n128_u64[0];
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = (uint64_t)v2;
  if (v7)
    return 0;
  v9 = objc_msgSend(v0, "searchBar", v6);
  v10 = objc_msgSend(v9, "searchTextField");

  v11 = objc_msgSend(v10, "tokens");
  v12 = sub_10004F2F0(0, (unint64_t *)&unk_100656AD8, UISearchToken_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v15 = v13;
    else
      v15 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v13);
  return v14 == 0;
}

uint64_t sub_10045DF98(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t result;
  objc_super v23;

  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager] = 0;
  v5 = OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView;
  v6 = objc_allocWithZone((Class)UIView);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint] = 0;
  v7[OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState] = 4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___stackedSearchLayout] = 0;
  v7[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement] = 0;
  v7[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController] = 0;
  v8 = OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints;
  v9 = type metadata accessor for DOCSizeCategoryDependantConstraints();
  v10 = swift_allocObject(v9, 33, 7);
  *(_QWORD *)(v10 + 16) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v10 + 24) = 0;
  *(_BYTE *)(v10 + 32) = 1;
  *(_QWORD *)&v7[v8] = v10;
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC5Files19DOCSearchController_defaultSearchCollectionItemPredicate]);
  v11 = &v7[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate]);
  v7[OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss] = _swiftEmptyArrayStorage;
  v7[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] = 0;
  v12 = &v7[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration];
  *(_WORD *)v12 = 0;
  v12[2] = 1;
  v7[OBJC_IVAR____TtC5Files19DOCSearchController_activationTemporilyDisabled] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_configuration] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController] = a2;
  v13 = objc_allocWithZone((Class)type metadata accessor for DOCSearchBar());
  v14 = a1;
  v15 = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController__searchBar] = sub_100391DA0(v14, v16);

  v23.receiver = v7;
  v23.super_class = (Class)type metadata accessor for DOCSearchController();
  v17 = (char *)objc_msgSendSuper2(&v23, "initWithSearchResultsController:", v15);
  objc_msgSend(v17, "setObscuresBackgroundDuringPresentation:", 0);
  objc_msgSend(v17, "_dci_setIgnoresSearchSuggestionsForStackedSearch:", 1);
  v18 = *(_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController]
                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v18)
  {
    v19 = v18 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v19 + 16) & 1) == 0)
    {
      v20 = *(id *)v19;
      v21 = objc_msgSend(v20, "itemFilteringPredicate");

      swift_unknownObjectWeakAssign(&v17[OBJC_IVAR____TtC5Files19DOCSearchController_defaultSearchCollectionItemPredicate], v21);
      sub_10000DD60();

      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000100537070, "Files/DOCSearchController.swift", 31, 2, 355, 0);
  __break(1u);
  return result;
}

void sub_10045E330()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  objc_class *v6;
  id v7;
  void *v8;
  void *v9;
  char *v10;
  char *v11;
  objc_class *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;
  objc_super v38;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (id *)((char *)&v37.receiver - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (objc_class *)type metadata accessor for DOCSearchController();
  v38.receiver = v0;
  v38.super_class = v6;
  objc_msgSendSuper2(&v38, "viewDidLoad");
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = v7;
  objc_msgSend(v7, "setAccessibilityIdentifier:", DOCSearchControllerContainerViewIdentifier);

  v9 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_configuration];
  v10 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCSuggesterManager());
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_suggesters] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_gatheredSuggestions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_searchId] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_numWaitedSuggesterResults] = 0;
  v11 = &v10[OBJC_IVAR____TtC5Files12DOCSuggester_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files12DOCSuggester_configuration] = v9;
  v12 = (objc_class *)type metadata accessor for DOCSuggester();
  v37.receiver = v10;
  v37.super_class = v12;
  v13 = v9;
  v14 = objc_msgSendSuper2(&v37, "init");
  v15 = OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager;
  v16 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager] = v14;

  v17 = *(_QWORD *)&v1[v15];
  if (!v17)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = v17 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  *(_QWORD *)(v18 + 8) = &off_1005EDE18;
  swift_unknownObjectWeakAssign(v18, v1);
  v19 = *(void **)&v1[v15];
  if (!v19)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v20 = v19;
  v21 = sub_1000DAC14(v13);

  v22 = *(void **)&v1[v15];
  if (v22)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v23 = v22;
    *v5 = static OS_dispatch_queue.main.getter(v23);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    v24 = _dispatchPreconditionTest(_:)(v5);
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v24 & 1) != 0)
    {
      v25 = OBJC_IVAR____TtC5Files19DOCSuggesterManager_suggesters;
      v26 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Files19DOCSuggesterManager_suggesters];
      *(_QWORD *)&v23[OBJC_IVAR____TtC5Files19DOCSuggesterManager_suggesters] = v21;
      swift_bridgeObjectRelease(v26);
      v24 = *(_QWORD *)&v23[v25];
      if (!((unint64_t)v24 >> 62))
      {
        v27 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v24, 2);
        if (v27)
        {
LABEL_8:
          if (v27 >= 1)
          {
            v28 = 0;
            do
            {
              if ((v24 & 0xC000000000000001) != 0)
                v29 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v24);
              else
                v29 = (char *)*(id *)(v24 + 8 * v28 + 32);
              v30 = v29;
              ++v28;
              v31 = &v29[OBJC_IVAR____TtC5Files12DOCSuggester_delegate];
              *((_QWORD *)v31 + 1) = &off_1005C26B8;
              swift_unknownObjectWeakAssign(v31, v23);

            }
            while (v27 != v28);
            goto LABEL_19;
          }
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        swift_bridgeObjectRelease_n(v24, 2);

        v33 = (char *)sub_10045CE14();
        v34 = &v33[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate];
        *((_QWORD *)v34 + 1) = &off_1005EDDF8;
        swift_unknownObjectWeakAssign(v34, v1);

        sub_10045D010();
        sub_10000CB88(v35, v36);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    if (v24 < 0)
      v32 = v24;
    else
      v32 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v24, 2);
    v27 = _CocoaArrayWrapper.endIndex.getter(v32);
    if (v27)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_24:
  __break(1u);
}

void sub_10045E6D4()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  objc_super v14;
  CGRect v15;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for DOCSearchController();
  objc_msgSendSuper2(&v14, "viewDidLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "readableContentGuide");

      objc_msgSend(v5, "layoutFrame");
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      v15.origin.x = v7;
      v15.origin.y = v9;
      v15.size.width = v11;
      v15.size.height = v13;
      objc_msgSend(v2, "setConstant:", CGRectGetWidth(v15));

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10045E964(void *a1, uint64_t a2)
{
  char *v2;
  void *Strong;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  if (v2[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] == 1
    && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], a2)) != 0)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "traitCollectionExpectedForSearchPresentation");
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v9.receiver = v2;
    v9.super_class = (Class)type metadata accessor for DOCSearchController();
    v6 = objc_msgSendSuper2(&v9, "traitCollection");
  }
  v7 = sub_10000BE74(1, a1);
  if ((v7 & 1) != 0)
    sub_10045F460(v7, v8);
  if ((sub_10000BE74(16, a1) & 1) != 0)
    sub_1004620FC();

}

id sub_10045EA44(uint64_t (*a1)(id), uint64_t a2, char a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(__n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37[3];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = (id)__chkstk_darwin(v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3[OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState] - 2 >= 3)
  {
    v12 = swift_allocObject(&unk_1005EE078, 32, 7);
    *(_QWORD *)(v12 + 16) = a1;
    *(_QWORD *)(v12 + 24) = a2;
    v13 = &v3[OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss], v37, 33, 0);
    v14 = *(_QWORD **)v13;
    sub_10008BA00((uint64_t)a1, a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    v35 = v13;
    *(_QWORD *)v13 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_10008190C(0, v14[2] + 1, 1, v14);
      *(_QWORD *)v35 = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_10008190C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)v35 = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[2 * v17];
    v18[4] = sub_100146054;
    v18[5] = v12;
    v19 = swift_endAccess(v37);
    v20 = Logger.UI.unsafeMutableAddressor(v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v20, v7);
    v21 = v3;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(28, -1);
      v33 = swift_slowAlloc(32, -1);
      v37[0] = v33;
      *(_DWORD *)v24 = 136315650;
      v36 = sub_1000544FC(0xD000000000000028, 0x8000000100537450, v37);
      v34 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37);
      *(_WORD *)(v24 + 12) = 1024;
      LODWORD(v36) = a3 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 4);
      *(_WORD *)(v24 + 18) = 2048;
      v36 = *(_QWORD *)(*(_QWORD *)v35 + 16);
      v21 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37);

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s animated: %{BOOL}d blocks to run: %ld", (uint8_t *)v24, 0x1Cu);
      v25 = v33;
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    result = objc_msgSend(v21, "setActive:", 0);
    if ((a3 & 1) == 0)
    {
      v26 = *(_QWORD *)v35;
      *(_QWORD *)v35 = _swiftEmptyArrayStorage;
      v27 = *(_QWORD *)(v26 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain(v26);
        v28 = (_QWORD *)(v26 + 40);
        do
        {
          v30 = (void (*)(__n128))*(v28 - 1);
          v29 = *v28;
          v31 = swift_retain(*v28);
          v30(v31);
          swift_release(v29);
          v28 += 2;
          --v27;
        }
        while (v27);
        return (id)swift_bridgeObjectRelease_n(v26, 2);
      }
      else
      {
        return (id)swift_bridgeObjectRelease(v26);
      }
    }
  }
  else if (a1)
  {
    return (id)a1(result);
  }
  return result;
}

double sub_10045EEA8(void *a1)
{
  void *v1;
  double result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  objc_msgSend(v1, "setActive:", 0);
  if (a1)
  {
    *((_BYTE *)v1 + OBJC_IVAR____TtC5Files19DOCSearchController_activationTemporilyDisabled) = 1;
    v4 = swift_allocObject(&unk_1005EE000, 24, 7);
    *(_QWORD *)(v4 + 16) = v1;
    v8[4] = sub_100466FA4;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100018CC0;
    v8[3] = &unk_1005EE018;
    v5 = _Block_copy(v8);
    v6 = v9;
    swift_unknownObjectRetain(a1);
    v7 = v1;
    objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);
    *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_10045EFEC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[5];
  uint64_t v45;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v40 - v14;
  if ((objc_msgSend(v1, "isActive") & 1) != 0)
  {
    v16 = *(id *)DOCLog.UI.unsafeMutableAddressor();
    v17 = static os_log_type_t.error.getter();
    v18 = sub_10006922C((uint64_t *)&unk_100644560);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v19 + 56) = type metadata accessor for DOCSearchController();
    *(_QWORD *)(v19 + 64) = sub_100062658((unint64_t *)&unk_100656B00, v20, (uint64_t (*)(uint64_t))type metadata accessor for DOCSearchController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v19 + 32) = v1;
    v21 = v1;
    os_log(_:dso:log:type:_:)("Not activating search controller, since already active: %@", 58, 2, &_mh_execute_header, v16, v17, v19);
  }
  else
  {
    v41 = v3;
    v22 = objc_msgSend(v1, "loadViewIfNeeded");
    sub_100461E0C((uint64_t)v22, v23);
    objc_msgSend(v1, "setActive:", 1);
    if (objc_msgSend(v1, "isActive"))
    {
      v24 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v40 = static OS_dispatch_queue.main.getter(v24);
      static DispatchTime.now()(v40);
      + infix(_:_:)(v13, 0.25);
      v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      v25(v13, v9);
      v26 = swift_allocObject(&unk_1005EDF60, 24, 7);
      *(_QWORD *)(v26 + 16) = v1;
      aBlock[4] = sub_100466584;
      v45 = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005EDF78;
      v27 = _Block_copy(aBlock);
      v28 = v45;
      v29 = v1;
      v30 = swift_release(v28);
      static DispatchQoS.unspecified.getter(v30);
      aBlock[0] = _swiftEmptyArrayStorage;
      v31 = sub_100062658((unint64_t *)&qword_100641260, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v32 = sub_10006922C((uint64_t *)&unk_100647540);
      v33 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v2, v31);
      v34 = (void *)v40;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v27);
      _Block_release(v27);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v43);
      return ((uint64_t (*)(char *, uint64_t))v25)(v15, v9);
    }
    v16 = *(id *)DOCLog.UI.unsafeMutableAddressor();
    v36 = static os_log_type_t.error.getter();
    v37 = sub_10006922C((uint64_t *)&unk_100644560);
    v19 = swift_allocObject(v37, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v19 + 56) = type metadata accessor for DOCSearchController();
    *(_QWORD *)(v19 + 64) = sub_100062658((unint64_t *)&unk_100656B00, v38, (uint64_t (*)(uint64_t))type metadata accessor for DOCSearchController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v19 + 32) = v1;
    v39 = v1;
    os_log(_:dso:log:type:_:)("Unable to activate search controller: %@", 40, 2, &_mh_execute_header, v16, v36, v19);
  }

  return swift_bridgeObjectRelease(v19);
}

void sub_10045F420(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "searchBar");
  objc_msgSend(v1, "becomeFirstResponder");

}

void sub_10045F460(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *Strong;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v3 = v2;
  if (v2[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] == 1
    && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], a2)) != 0)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "traitCollectionExpectedForSearchPresentation");
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v13.receiver = v2;
    v13.super_class = (Class)type metadata accessor for DOCSearchController();
    v6 = objc_msgSendSuper2(&v13, "traitCollection");
  }
  if (sub_10007B5C0(1))
  {
    v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints];
    v8 = objc_msgSend(v6, "horizontalSizeClass", swift_retain().n128_f64[0]);
    v9 = *(_QWORD *)(v7 + 24);
    v10 = *(_BYTE *)(v7 + 32);
    *(_QWORD *)(v7 + 24) = v8;
    *(_BYTE *)(v7 + 32) = 0;
    sub_100463AF0(v9, v10);
    v11 = swift_release(v7);
    sub_10000CB88(v11, v12);
  }

}

uint64_t sub_10045F560(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (a1[1] == a2[1]) & ~(*a1 ^ *a2) & (a2[2] ^ a1[2] ^ 1u);
}

double sub_10045F7E4(void *a1)
{
  _BYTE *v1;
  char v3;
  id v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  double result;

  v3 = v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus];
  v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus] = 1;
  if ((v3 & 1) == 0)
    sub_10045D010();
  v4 = objc_msgSend(v1, "searchBar");
  v5 = objc_msgSend(v4, "isFirstResponder");

  if (v5)
    sub_100461E0C(v6, v7);
  v8 = objc_msgSend(a1, "text");
  if (v8)
  {
    v9 = v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v11 = 0xE000000000000000;
  }
  sub_100465BA4(a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_10045F944(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  __n128 v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD *v21;
  os_log_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  os_log_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v49 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.UI.unsafeMutableAddressor(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = a1;
  v14 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.info.getter(v15);
  if (os_log_type_enabled(v14, v16))
  {
    v17 = swift_slowAlloc(22, -1);
    v48 = v4;
    v18 = v17;
    v44 = (_QWORD *)swift_slowAlloc(8, -1);
    v46 = swift_slowAlloc(32, -1);
    v51 = v46;
    *(_DWORD *)v18 = 136315394;
    v47 = v7;
    v50 = sub_1000544FC(0xD000000000000015, 0x80000001005371B0, &v51);
    v43 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    *(_WORD *)(v18 + 12) = 2112;
    v50 = (uint64_t)v13;
    v19 = v13;
    v45 = v8;
    v20 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    v21 = v44;
    *v44 = v13;

    v22 = v43;
    _os_log_impl((void *)&_mh_execute_header, v43, v16, "%s. searchBar: %@", (uint8_t *)v18, 0x16u);
    v23 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v21, 1, v23);
    swift_slowDealloc(v21, -1, -1);
    v24 = v46;
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    v25 = v18;
    v4 = v48;
    swift_slowDealloc(v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v47);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  v26 = objc_msgSend(v13, "text");
  if (v26)
  {
    v27 = v26;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0xE000000000000000;
  }
  if (String.count.getter(v28, v30) < 1)
  {
    swift_bridgeObjectRelease(v30);
    v41 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v41);
    sub_1004627E8();
    goto LABEL_12;
  }
  v31 = *(void **)(v2 + OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager);
  if (v31)
  {
    v32 = v31;
    v33 = String.doc_searchEscapedString.getter(v28, v30);
    v35 = v34;
    swift_bridgeObjectRelease(v30);
    v36 = sub_10045DB6C();
    v37 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v38 = static OS_dispatch_queue.main.getter(v37);
    v39 = v49;
    *v49 = v38;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v39, enum case for DispatchPredicate.onQueue(_:), v4);
    v40 = _dispatchPreconditionTest(_:)(v39);
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v39, v4);
    if ((v40 & 1) != 0)
    {
      sub_1000DB5F0(v33, v35, v36);

      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v36);
LABEL_12:
      sub_100460474();
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10045FD4C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  double v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock;
  _QWORD v31[4];
  uint64_t v32;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.UI.unsafeMutableAddressor(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v28 = swift_slowAlloc(64, -1);
    v29 = v28;
    *(_DWORD *)v10 = 136315394;
    aBlock = sub_1000544FC(0xD000000000000022, 0x8000000100537180, &v29);
    *(_QWORD *)&v11 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v31).n128_u64[0];
    *(_WORD *)(v10 + 12) = 2080;
    v12 = objc_msgSend(v7, "searchBar", v11);
    v13 = objc_msgSend(v12, "text");

    if (v13)
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    aBlock = v14;
    v31[0] = v16;
    v17 = sub_10006922C(&qword_100648C80);
    v18 = String.init<A>(describing:)(&aBlock, v17);
    v20 = v19;
    aBlock = sub_1000544FC(v18, v19, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v31);

    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s search text: %s", (uint8_t *)v10, 0x16u);
    v21 = v28;
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v22 = OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer], "invalidate");
  v23 = (void *)objc_opt_self(NSTimer);
  v24 = swift_allocObject(&unk_1005EDF10, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v31[3] = sub_100466558;
  v32 = v24;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v31[0] = 1107296256;
  v31[1] = sub_1000602CC;
  v31[2] = &unk_1005EDF28;
  v25 = _Block_copy(&aBlock);
  swift_release(v32);
  v26 = objc_msgSend(v23, "scheduledTimerWithTimeInterval:repeats:block:", 0, v25, 0.1);
  _Block_release(v25);
  v27 = *(void **)&v7[v22];
  *(_QWORD *)&v7[v22] = v26;

}

void sub_100460090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1004600E0();

  }
}

void sub_1004600E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  double v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.UI.unsafeMutableAddressor(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v27 = v24;
    *(_DWORD *)v10 = 136315394;
    v25 = sub_1000544FC(0xD000000000000020, 0x8000000100537150, &v27);
    *(_QWORD *)&v11 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26).n128_u64[0];
    *(_WORD *)(v10 + 12) = 2080;
    v12 = objc_msgSend(v7, "searchBar", v11);
    v13 = objc_msgSend(v12, "text");

    if (v13)
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    v25 = v14;
    v26 = v16;
    v17 = sub_10006922C(&qword_100648C80);
    v18 = String.init<A>(describing:)(&v25, v17);
    v20 = v19;
    v25 = sub_1000544FC(v18, v19, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);

    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s search text: %s", (uint8_t *)v10, 0x16u);
    v21 = v24;
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  v22 = *(void **)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer];
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] = 0;

  v23 = objc_msgSend(v7, "searchBar");
  sub_10045F944(v23);

}

double sub_100460474()
{
  char *v0;
  double result;
  _BOOL4 v2;
  uint64_t v3;
  void *Strong;
  double v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;

  if ((objc_msgSend(v0, "isActive") & 1) != 0
    || objc_msgSend(v0, "doc_hasAppearedOrIsAppearing"))
  {
    v2 = sub_10045DE1C();
    if (((v2 ^ objc_msgSend(v0, "showsSearchResultsController")) & 1) != 0)
    {
      objc_msgSend(v0, "setShowsSearchResultsController:", !v2);
      return result;
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], v3);
    v6 = Strong;
    if (v2)
    {
      if (Strong)
      {
        if ((objc_msgSend(Strong, "respondsToSelector:", "willDismissSearchResultsController:") & 1) != 0)
          objc_msgSend(v6, "willDismissSearchResultsController:", v0);
        *(_QWORD *)&v5 = swift_unknownObjectRelease(v6).n128_u64[0];
      }
      objc_msgSend(v0, "setShowsSearchResultsController:", !v2, v5);
      v8 = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], v7);
      if (v8)
      {
        v9 = v8;
        if ((objc_msgSend(v8, "respondsToSelector:", "didDismissSearchResultsController:") & 1) != 0)
          objc_msgSend(v9, "didDismissSearchResultsController:", v0);
LABEL_20:
        *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
      }
    }
    else
    {
      if (Strong)
      {
        if ((objc_msgSend(Strong, "respondsToSelector:", "willPresentSearchResultsController:") & 1) != 0)
          objc_msgSend(v6, "willPresentSearchResultsController:", v0);
        *(_QWORD *)&v5 = swift_unknownObjectRelease(v6).n128_u64[0];
      }
      objc_msgSend(v0, "setShowsSearchResultsController:", !v2, v5);
      v11 = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], v10);
      if (v11)
      {
        v9 = v11;
        if ((objc_msgSend(v11, "respondsToSelector:", "didPresentSearchResultsController:") & 1) != 0)
          objc_msgSend(v9, "didPresentSearchResultsController:", v0);
        goto LABEL_20;
      }
    }
  }
  return result;
}

void sub_100460640()
{
  void *v0;
  id v1;
  NSString v2;
  id v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  id v7;

  v1 = objc_msgSend(v0, "searchBar");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v2);

  v7 = objc_msgSend(v0, "searchBar");
  v3 = objc_msgSend(v0, "searchBar");
  v4 = objc_msgSend(v3, "text");

  if (v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v6 = v5;

  }
  else
  {
    v6 = 0xE000000000000000;
  }
  sub_100465BA4(v7);
  swift_bridgeObjectRelease(v6);

}

id sub_10046073C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _DWORD *v30;
  _DWORD *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate], v7);
  if (!Strong)
    return objc_msgSend(objc_allocWithZone((Class)NSFileProviderSearchQuery), "initWithSearchScope:", 0);
  v10 = Strong;
  v11 = *((_QWORD *)v6 + 1);
  ObjectType = swift_getObjectType(Strong, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 8))(v1, ObjectType, v11);
  v14 = swift_unknownObjectRelease(v10);
  v15 = *(_QWORD *)(v13 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease(v13);
    return objc_msgSend(objc_allocWithZone((Class)NSFileProviderSearchQuery), "initWithSearchScope:", 0);
  }
  v16 = OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex;
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex];
  if (v17 >= v15)
  {
    v25 = Logger.UI.unsafeMutableAddressor(v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v25, v2);
    v26 = v1;
    v27 = swift_bridgeObjectRetain(v13);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (_DWORD *)swift_slowAlloc(22, -1);
      v32 = v26;
      v31 = v30;
      *v30 = 134218240;
      v33 = *(_QWORD *)&v1[v16];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);

      *((_WORD *)v31 + 6) = 2048;
      swift_bridgeObjectRelease(v13);
      v33 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
      swift_bridgeObjectRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Tried to get out-of-bounds index %ld of searchScopes (array size is %ld", (uint8_t *)v31, 0x16u);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v13, 2);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return objc_msgSend(objc_allocWithZone((Class)NSFileProviderSearchQuery), "initWithSearchScope:", 0);
  }
  else
  {
    v18 = v13 + 16 * v17;
    v20 = *(_QWORD *)(v18 + 32);
    v19 = *(_QWORD *)(v18 + 40);
    swift_unknownObjectRetain(v20);
    swift_bridgeObjectRelease(v13);
    v22 = swift_getObjectType(v20, v21);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v22, v19);
    swift_unknownObjectRelease(v20);
    return (id)v23;
  }
}

void sub_1004609DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(void *);
  char *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  void *v56;
  double v57;
  char *v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  unsigned int v70;
  unint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  os_log_type_t v81;
  uint8_t *v82;
  void *v83;
  NSString v84;
  uint64_t v85;
  void *v86;
  void *v87;
  void *v88;
  Swift::String v89;
  Swift::String v90;
  void *v91;
  Swift::String v92;
  Swift::String v93;
  void *v94;
  Swift::String v95;
  Swift::String v96;
  void *v97;
  Swift::String v98;
  Swift::String v99;
  void *v100;
  void *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  Swift::String v105;
  Swift::String v106;
  Swift::String v107;
  Swift::String v108;
  void *object;
  Swift::String v110;
  Swift::String v111;
  void *v112;
  void *v113;
  uint64_t v114;
  Swift::String v115;
  void *v116;
  Swift::String v117;
  Swift::String v118;
  void *v119;
  Swift::String v120;
  Swift::String v121;
  void *v122;
  Swift::String v123;
  Swift::String v124;
  Swift::String v125;
  Swift::String v126;
  Swift::String v127;
  void *v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  id v135;
  id v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  NSObject *v146;
  os_log_type_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  uint8_t *v156;
  uint64_t v157;
  uint64_t (*v158)(char *, uint64_t);
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint8_t *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t inited;
  uint64_t v170;
  uint64_t v171;
  id v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  id v178;
  void *v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  void *v184;
  _QWORD *v185;
  void *v186;
  char *v187;
  char *v188;
  char *v189;
  unsigned int v190;
  uint8_t *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  void *v195;
  char v196[64];
  _QWORD *v197;
  _OWORD v198[2];
  uint64_t v199;
  void *v200;
  uint64_t v201;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v181 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v181 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v181 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v181 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v181 - v16;
  if (sub_10045DE1C())
  {
    v18 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery];
    *(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = 0;

    return;
  }
  v19 = sub_10046073C();
  v20 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController]
                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v20)
  {
    __break(1u);
    goto LABEL_79;
  }
  v186 = v14;
  v189 = v5;
  v188 = v8;
  v194 = v3;
  v21 = v20 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v21 + 16) & 1) != 0)
    goto LABEL_83;
  v22 = v19;
  v23 = *(void **)v21;
  v24 = sub_10004F2F0(0, &qword_100656AE8, FPQueryCollection_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v24);
  v26 = v23;
  v190 = objc_msgSend(v26, "isKindOfClass:", ObjCClassFromMetadata);

  v27 = *(char **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion];
  v193 = v1;
  v195 = v22;
  v192 = v2;
  v187 = v11;
  if (v27 && *(_QWORD *)&v27[OBJC_IVAR____TtC5Files13DOCSuggestion_textReplacement + 8])
  {
    v28 = v27;
    v29 = Logger.UI.unsafeMutableAddressor(v28);
    v30 = v194;
    (*(void (**)(char *, uint64_t, uint64_t))(v194 + 16))(v17, v29, v2);
    v31 = v28;
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.debug.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(22, -1);
      v185 = (_QWORD *)swift_slowAlloc(8, -1);
      v191 = (uint8_t *)swift_slowAlloc(32, -1);
      v199 = (uint64_t)v191;
      *(_DWORD *)v34 = 136315394;
      *(_QWORD *)&v198[0] = sub_1000544FC(0xD000000000000016, 0x80000001005370C0, &v199);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v198, (char *)v198 + 8);
      *(_WORD *)(v34 + 12) = 2112;
      *(_QWORD *)&v198[0] = v31;
      v35 = v31;
      v1 = v193;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v198, (char *)v198 + 8);
      v36 = v185;
      *v185 = v27;

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s suggestion: %@", (uint8_t *)v34, 0x16u);
      v37 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v36, 1, v37);
      swift_slowDealloc(v36, -1, -1);
      v38 = v191;
      swift_arrayDestroy(v191, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v194 + 8))(v17, v192);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v2);
    }
    v39 = type metadata accessor for DOCSearchSuggestion();
    v40 = (_QWORD *)swift_dynamicCastClass(v31, v39);
    LODWORD(v191) = v40 != 0;
    if (v40)
    {
      v41 = *(void (**)(void *))((swift_isaMask & *v40) + 0x1D8);
      v42 = v31;
      v41(v195);

    }
  }
  else
  {
    LODWORD(v191) = 0;
  }
  v43 = objc_msgSend(v1, "searchBar");
  v44 = objc_msgSend(v43, "searchTextField");

  v45 = objc_msgSend(v44, "tokens");
  v46 = sub_10004F2F0(0, (unint64_t *)&unk_100656AD8, UISearchToken_ptr);
  v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

  if ((unint64_t)v47 >> 62)
    goto LABEL_73;
  v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v47);
  while (v48)
  {
    v49 = 4;
    while (1)
    {
      v50 = (v47 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49 - 4, v47)
          : *(id *)(v47 + 8 * v49);
      v51 = v50;
      v52 = v49 - 3;
      if (__OFADD__(v49 - 4, 1))
        break;
      v53 = objc_msgSend(v50, "representedObject");
      if (v53)
      {
        v54 = v53;
        _bridgeAnyObjectToAny(_:)(v198, v53);
        swift_unknownObjectRelease(v54);
      }
      else
      {
        memset(v198, 0, sizeof(v198));
      }
      sub_10007EBDC((uint64_t)v198, (uint64_t)&v199);
      if (!v201)
        goto LABEL_80;
      v55 = type metadata accessor for DOCSearchSuggestion();
      if ((swift_dynamicCast(&v197, &v199, (char *)&type metadata for Any + 8, v55, 6) & 1) == 0)
        goto LABEL_81;
      v56 = v197;
      (*(void (**)(void *))((swift_isaMask & *v197) + 0x1D8))(v195);

      ++v49;
      if (v52 == v48)
        goto LABEL_27;
    }
    __break(1u);
LABEL_73:
    if (v47 < 0)
      v180 = v47;
    else
      v180 = v47 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v47, 2);
    v48 = _CocoaArrayWrapper.endIndex.getter(v180);
    swift_bridgeObjectRelease(v47);
  }
LABEL_27:
  swift_bridgeObjectRelease_n(v47, 2);
  v58 = v193;
  v59 = v195;
  v60 = v192;
  if ((v191 & 1) == 0)
  {
    v61 = objc_msgSend(v193, "searchBar");
    v62 = objc_msgSend(v61, "text");

    if (v62)
    {
      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v65 = v64;

      v66 = String.doc_searchEscapedString.getter(v63, v65);
      v68 = v67;
      swift_bridgeObjectRelease(v65);
      if (String.count.getter(v66, v68) < 1)
      {
        v83 = v68;
      }
      else
      {
        v69 = objc_msgSend((id)objc_opt_self(DOCFeature), "semanticSearch");
        v70 = objc_msgSend(v69, "isEnabled");

        v71 = (unint64_t)objc_msgSend(v59, "trashedItemsMembership") & 0xFFFFFFFFFFFFFFFDLL;
        if (v70)
        {
          if (v71)
          {
            v72 = sub_100461D50();
            if ((v72 & 1) == 0)
            {
              v73 = Logger.UI.unsafeMutableAddressor(v72);
              v74 = v194;
              v75 = v186;
              v76 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v194 + 16))(v186, v73, v60);
              v77 = Logger.logObject.getter(v76);
              v78 = static os_log_type_t.debug.getter(v77);
              if (os_log_type_enabled(v77, v78))
              {
                v79 = (uint8_t *)swift_slowAlloc(12, -1);
                v80 = swift_slowAlloc(32, -1);
                v199 = v80;
                v191 = v79;
                *(_DWORD *)v79 = 136315138;
                v59 = v195;
                *(_QWORD *)&v198[0] = sub_1000544FC(0xD000000000000016, 0x80000001005370C0, &v199);
                v58 = v193;
                v60 = v192;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(v198, (char *)v198 + 8);
                v81 = v78;
                v82 = v191;
                _os_log_impl((void *)&_mh_execute_header, v77, v81, "%s [SEMANTIC SEARCH] Semantic Search enabled", v191, 0xCu);
                swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v80, -1, -1);
                swift_slowDealloc(v82, -1, -1);

                (*(void (**)(void *, uint64_t))(v194 + 8))(v75, v60);
              }
              else
              {

                (*(void (**)(void *, uint64_t))(v74 + 8))(v75, v60);
              }
              objc_msgSend(v59, "setShouldPerformSemanticSearch:", 1);
              v84 = String._bridgeToObjectiveC()();
              objc_msgSend(v59, "setUserQueryString:", v84, swift_bridgeObjectRelease(v68).n128_f64[0]);
              goto LABEL_39;
            }
          }
LABEL_38:
          v84 = String._bridgeToObjectiveC()();
          objc_msgSend(v59, "setFilename:", v84, swift_bridgeObjectRelease(v68).n128_f64[0]);
LABEL_39:

          goto LABEL_42;
        }
        if (!v71 || (sub_100461D50() & 1) != 0)
          goto LABEL_38;
        v85 = String.doc_searchQueryValue.getter(v66, v68);
        v87 = v86;
        swift_bridgeObjectRelease(v68);
        v199 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemPhotosSceneClassificationSynonyms);
        v200 = v88;
        v89._countAndFlagsBits = 540884256;
        v89._object = (void *)0xE400000000000000;
        String.append(_:)(v89);
        v90._countAndFlagsBits = v85;
        v90._object = v87;
        String.append(_:)(v90);
        v191 = (uint8_t *)v199;
        v186 = v200;
        v199 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemPhotosSceneClassificationLabels);
        v200 = v91;
        v92._countAndFlagsBits = 540884256;
        v92._object = (void *)0xE400000000000000;
        String.append(_:)(v92);
        v93._countAndFlagsBits = v85;
        v93._object = v87;
        String.append(_:)(v93);
        v185 = (_QWORD *)v199;
        v184 = v200;
        v199 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemPhotosSeasons);
        v200 = v94;
        v95._countAndFlagsBits = 540884256;
        v95._object = (void *)0xE400000000000000;
        String.append(_:)(v95);
        v96._countAndFlagsBits = v85;
        v96._object = v87;
        String.append(_:)(v96);
        v183 = v199;
        v182 = v200;
        v199 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemTextContent);
        v200 = v97;
        v98._countAndFlagsBits = 540884256;
        v98._object = (void *)0xE400000000000000;
        String.append(_:)(v98);
        v99._countAndFlagsBits = v85;
        v99._object = v87;
        String.append(_:)(v99);
        v100 = v200;
        v181 = v199;
        v199 = 0;
        v200 = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(20);
        v101 = v200;
        v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemFilename);
        v104 = v103;
        swift_bridgeObjectRelease(v101);
        v199 = v102;
        v200 = v104;
        v105._countAndFlagsBits = 540884256;
        v105._object = (void *)0xE400000000000000;
        String.append(_:)(v105);
        v106._countAndFlagsBits = v85;
        v106._object = v87;
        String.append(_:)(v106);
        v107._countAndFlagsBits = 545029152;
        v107._object = (void *)0xE400000000000000;
        String.append(_:)(v107);
        v108._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemDisplayName);
        object = v108._object;
        String.append(_:)(v108);
        swift_bridgeObjectRelease(object);
        v110._countAndFlagsBits = 540884256;
        v110._object = (void *)0xE400000000000000;
        String.append(_:)(v110);
        v111._countAndFlagsBits = v85;
        v111._object = v87;
        String.append(_:)(v111);
        v112 = v87;
        v58 = v193;
        swift_bridgeObjectRelease(v112);
        v114 = v199;
        v113 = v200;
        v199 = 0;
        v200 = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(28);
        swift_bridgeObjectRelease(v200);
        v199 = 40;
        v200 = (void *)0xE100000000000000;
        v115._countAndFlagsBits = (uint64_t)v191;
        v116 = v186;
        v115._object = v186;
        String.append(_:)(v115);
        swift_bridgeObjectRelease(v116);
        v117._countAndFlagsBits = 545029152;
        v117._object = (void *)0xE400000000000000;
        String.append(_:)(v117);
        v118._countAndFlagsBits = (uint64_t)v185;
        v119 = v184;
        v118._object = v184;
        String.append(_:)(v118);
        swift_bridgeObjectRelease(v119);
        v120._countAndFlagsBits = 545029152;
        v120._object = (void *)0xE400000000000000;
        String.append(_:)(v120);
        v121._countAndFlagsBits = v183;
        v122 = v182;
        v121._object = v182;
        String.append(_:)(v121);
        swift_bridgeObjectRelease(v122);
        v123._countAndFlagsBits = 545029152;
        v123._object = (void *)0xE400000000000000;
        String.append(_:)(v123);
        v124._countAndFlagsBits = v181;
        v124._object = v100;
        String.append(_:)(v124);
        swift_bridgeObjectRelease(v100);
        v125._countAndFlagsBits = 545029152;
        v125._object = (void *)0xE400000000000000;
        String.append(_:)(v125);
        v126._countAndFlagsBits = v114;
        v60 = v192;
        v126._object = v113;
        String.append(_:)(v126);
        swift_bridgeObjectRelease(v113);
        v127._countAndFlagsBits = 41;
        v127._object = (void *)0xE100000000000000;
        String.append(_:)(v127);
        v128 = v200;
        sub_10045C708(v199, v200);
        v83 = v128;
      }
      *(_QWORD *)&v57 = swift_bridgeObjectRelease(v83).n128_u64[0];
    }
  }
LABEL_42:
  v129 = objc_msgSend(v59, "scopeFragment", v57);
  if (v129)
  {

    if ((sub_100461D50() & 1) == 0)
    {
      v130 = *(void **)DOCLog.UI.unsafeMutableAddressor(objc_msgSend(v59, "setShouldPerformServerSearch:", 0));
      v131 = sub_10006922C((uint64_t *)&unk_100644560);
      v132 = swift_allocObject(v131, 72, 7);
      *(_OWORD *)(v132 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v132 + 56) = sub_10004F2F0(0, &qword_100656AF0, NSFileProviderSearchQuery_ptr);
      *(_QWORD *)(v132 + 64) = sub_1004664DC();
      *(_QWORD *)(v132 + 32) = v59;
      v133 = v130;
      v134 = static os_log_type_t.default.getter(v59);
      os_log(_:dso:log:type:_:)("Not requesting server-side search, since a scope fragment is set: %@", 68, 2, &_mh_execute_header, v133, v134, v132);

      swift_bridgeObjectRelease(v132);
    }
  }
  v135 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if ((_DWORD)v135)
  {
    if (v190)
    {
      v136 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
      v137 = sub_1004662C4();
      v139 = v138;

      v141 = v194;
      if (v139)
      {
        v142 = HIBYTE(v139) & 0xF;
        if ((v139 & 0x2000000000000000) == 0)
          v142 = v137 & 0xFFFFFFFFFFFFLL;
        if (v142)
        {
          v143 = Logger.UI.unsafeMutableAddressor(v140);
          v144 = v187;
          (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v187, v143, v60);
          v145 = swift_bridgeObjectRetain_n(v139, 2);
          v146 = Logger.logObject.getter(v145);
          v147 = static os_log_type_t.debug.getter(v146);
          if (os_log_type_enabled(v146, v147))
          {
            v148 = swift_slowAlloc(22, -1);
            v149 = swift_slowAlloc(64, -1);
            v199 = v149;
            *(_DWORD *)v148 = 136315394;
            *(_QWORD *)&v198[0] = sub_1000544FC(0xD000000000000016, 0x80000001005370C0, &v199);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v198, (char *)v198 + 8);
            *(_WORD *)(v148 + 12) = 2080;
            swift_bridgeObjectRetain(v139);
            *(_QWORD *)&v198[0] = sub_1000544FC(v137, v139, &v199);
            v58 = v193;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v198, (char *)v198 + 8);
            swift_bridgeObjectRelease_n(v139, 3);
            _os_log_impl((void *)&_mh_execute_header, v146, v147, "%s [PROTECTED APPS] Filtering search results. Created filter query clause %s", (uint8_t *)v148, 0x16u);
            swift_arrayDestroy(v149, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v149, -1, -1);
            swift_slowDealloc(v148, -1, -1);

            (*(void (**)(char *, uint64_t))(v194 + 8))(v144, v192);
          }
          else
          {

            swift_bridgeObjectRelease_n(v139, 2);
            (*(void (**)(char *, uint64_t))(v141 + 8))(v144, v60);
          }
          sub_10045C708(v137, (void *)v139);
          swift_bridgeObjectRelease(v139);
          goto LABEL_61;
        }
        swift_bridgeObjectRelease(v139);
      }
      v160 = Logger.UI.unsafeMutableAddressor(v140);
      v161 = v188;
      v162 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 16))(v188, v160, v60);
      v163 = Logger.logObject.getter(v162);
      v164 = static os_log_type_t.debug.getter(v163);
      if (os_log_type_enabled(v163, v164))
      {
        v165 = (uint8_t *)swift_slowAlloc(12, -1);
        v166 = swift_slowAlloc(32, -1);
        v199 = v166;
        *(_DWORD *)v165 = 136315138;
        v59 = v195;
        *(_QWORD *)&v198[0] = sub_1000544FC(0xD000000000000016, 0x80000001005370C0, &v199);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v198, (char *)v198 + 8);
        _os_log_impl((void *)&_mh_execute_header, v163, v164, "%s [PROTECTED APPS] No hidden apps to filter search results.", v165, 0xCu);
        swift_arrayDestroy(v166, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v166, -1, -1);
        swift_slowDealloc(v165, -1, -1);

        v135 = (id)(*(uint64_t (**)(char *, uint64_t))(v194 + 8))(v161, v60);
        goto LABEL_61;
      }

      v158 = *(uint64_t (**)(char *, uint64_t))(v141 + 8);
      v159 = v161;
    }
    else
    {
      v150 = Logger.UI.unsafeMutableAddressor(v135);
      v151 = v194;
      v152 = v189;
      v153 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v194 + 16))(v189, v150, v60);
      v154 = Logger.logObject.getter(v153);
      v155 = static os_log_type_t.debug.getter(v154);
      if (os_log_type_enabled(v154, v155))
      {
        v156 = (uint8_t *)swift_slowAlloc(12, -1);
        v157 = swift_slowAlloc(32, -1);
        v199 = v157;
        *(_DWORD *)v156 = 136315138;
        v59 = v195;
        *(_QWORD *)&v198[0] = sub_1000544FC(0xD000000000000016, 0x80000001005370C0, &v199);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v198, (char *)v198 + 8);
        _os_log_impl((void *)&_mh_execute_header, v154, v155, "%s [PROTECTED APPS] Not filtering search results item collection does not support predicates.", v156, 0xCu);
        swift_arrayDestroy(v157, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v157, -1, -1);
        swift_slowDealloc(v156, -1, -1);

        v135 = (id)(*(uint64_t (**)(char *, uint64_t))(v194 + 8))(v152, v60);
        goto LABEL_61;
      }

      v158 = *(uint64_t (**)(char *, uint64_t))(v151 + 8);
      v159 = v152;
    }
    v135 = (id)v158(v159, v60);
  }
LABEL_61:
  v167 = (char *)(id)UIKeyboardGetCurrentInputMode(v135);
  if (v167)
  {
    v0 = v167;
    v168 = sub_10006922C(&qword_100643CC0);
    inited = swift_initStackObject(v168, v196);
    *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardInputMode_dictation);
    *(_QWORD *)(inited + 40) = v170;
    *(_QWORD *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardInputMode_emoji);
    *(_QWORD *)(inited + 56) = v171;
    v172 = (id)UIKeyboardInputModeGetNormalizedIdentifier(v0);
    if (v172)
    {
      v173 = v172;
      v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(v172);
      v176 = v175;

      v177 = sub_1000DFDD0(v174, v176, (_QWORD *)inited);
      swift_bridgeObjectRelease(v176);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 2, &type metadata for String);
      v178 = (id)UIKeyboardInputModeGetLanguage(v0);

      if (v178)
      {
        if ((v177 & 1) == 0)
          objc_msgSend(v59, "setKeyboardLanguage:", v178);

      }
      goto LABEL_67;
    }
LABEL_79:

    __break(1u);
LABEL_80:
    sub_10007EB54((uint64_t)&v199);
LABEL_81:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000027, 0x8000000100537090, "Files/DOCSearchController.swift", 31, 2, 932, 0);
    while (1)
    {
      __break(1u);
LABEL_83:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000100537070, "Files/DOCSearchController.swift", 31, 2, 355, 0);
    }
  }
LABEL_67:
  v179 = *(void **)&v58[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery];
  *(_QWORD *)&v58[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = v59;

}

id sub_100461D50()
{
  void *v0;
  id v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, "providerDomainID");

  if (!v1)
    return 0;
  result = objc_msgSend(v0, "providerDomainID");
  if (result)
  {
    v3 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v5 = v4;

    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    if ((DOCProviderDomainIDIsExternalDevice(v6) & 1) != 0)
      v7 = 1;
    else
      v7 = DOCProviderDomainIDIsSharedServerDomainID(v6);

    return (id)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100461E0C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  Class isa;
  id v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v4 = &v2[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  result = swift_unknownObjectWeakLoadStrong(v4, a2);
  if (result)
  {
    v7 = result;
    v8 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType(result, v6);
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 8))(v3, ObjectType, v8);
    v11 = v10;
    v12 = *(_QWORD *)(v10 + 16);
    if (v12 < 2)
    {
      swift_bridgeObjectRelease(v10);
      v26 = objc_msgSend(v3, "searchBar");
      objc_msgSend(v26, "setScopeButtonTitles:", 0);
    }
    else
    {
      v28 = v7;
      v27 = objc_msgSend(v3, "searchBar");
      sub_100081774(0, v12, 0);
      v14 = (uint64_t *)(v11 + 40);
      do
      {
        v15 = *(v14 - 1);
        v16 = *v14;
        v17 = swift_getObjectType(v15, v13);
        v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
        swift_unknownObjectRetain(v15);
        v19 = v18(v17, v16);
        v21 = v20;
        swift_unknownObjectRelease(v15);
        v23 = _swiftEmptyArrayStorage[2];
        v22 = _swiftEmptyArrayStorage[3];
        if (v23 >= v22 >> 1)
          sub_100081774(v22 > 1, v23 + 1, 1);
        _swiftEmptyArrayStorage[2] = v23 + 1;
        v24 = &_swiftEmptyArrayStorage[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
        v14 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease(v11);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      objc_msgSend(v27, "setScopeButtonTitles:", isa);

      v26 = objc_msgSend(v3, "searchBar");
      objc_msgSend(v26, "setSelectedScopeButtonIndex:", *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex]);
      v7 = v28;
    }

    return swift_unknownObjectRelease(v7);
  }
  return result;
}

void sub_1004620FC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  char *v21;
  char *v22;
  uint64_t (*v23)(__n128);
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t (*v29)(__n128);
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  void **v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  NSString v39;
  uint64_t v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void **v49;
  void *v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  Class isa;
  id v55;
  uint64_t v56;
  uint64_t v57[3];
  _OWORD v58[2];
  _BYTE v59[24];
  uint64_t v60;
  _QWORD *v61;

  v1 = objc_msgSend(v0, "searchBar");
  v2 = objc_msgSend(v1, "searchTextField");

  v3 = objc_msgSend(v2, "tokens");
  v56 = sub_10004F2F0(0, (unint64_t *)&unk_100656AD8, UISearchToken_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v56);

  v57[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        v6 = 0;
        while (1)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
          else
            v8 = *(id *)(v4 + 8 * v6 + 32);
          v9 = v8;
          v10 = objc_msgSend(v8, "representedObject");
          if (v10)
          {
            v11 = v10;
            _bridgeAnyObjectToAny(_:)(v58, v10);
            swift_unknownObjectRelease(v11);
          }
          else
          {
            memset(v58, 0, sizeof(v58));
          }
          sub_10007EBDC((uint64_t)v58, (uint64_t)v59);
          if (v60)
          {
            v12 = type metadata accessor for DOCSearchSuggestion();
            if ((swift_dynamicCast(&v61, v59, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
              goto LABEL_18;
          }
          else
          {
            sub_10007EB54((uint64_t)v59);
          }
          v61 = 0;
LABEL_18:

          v14 = v61;
          if (v61)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
            v16 = *(_QWORD *)((v57[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            v15 = *(_QWORD *)((v57[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v16 >= v15 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
            v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
            specialized Array._endMutation()(v7);
          }
          if (v5 == ++v6)
          {
            swift_bridgeObjectRelease(v4);
            v17 = v57[0];
            goto LABEL_27;
          }
        }
      }
      __break(1u);
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRelease(v4);
  v17 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_27:
  v55 = v2;
  swift_bridgeObjectRelease(v4);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v35 = v17;
    else
      v35 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v19 = _CocoaArrayWrapper.endIndex.getter(v35);
    if (!v19)
      goto LABEL_43;
  }
  else
  {
    v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v17);
    if (!v19)
      goto LABEL_43;
  }
  if (v19 < 1)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  for (i = 0; i != v19; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0)
      v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
    else
      v21 = (char *)*(id *)(v17 + 8 * i + 32);
    v22 = v21;
    v23 = *(uint64_t (**)(__n128))&v21[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
    if (v23)
    {
      v24 = *(_QWORD *)&v21[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator + 8];
      v25 = swift_retain();
      v26 = v23(v25);
      v27 = (void **)&v22[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
      swift_beginAccess(&v22[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage], v57, 1, 0);
      v28 = *v27;
      *v27 = (void *)v26;

      sub_100087534((uint64_t)v23, v24);
    }
    v29 = *(uint64_t (**)(__n128))&v22[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
    if (v29)
    {
      v30 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator + 8];
      v31 = swift_retain();
      v32 = v29(v31);
      v33 = (void **)&v22[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
      swift_beginAccess(&v22[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage], v58, 1, 0);
      v34 = *v33;
      *v33 = (void *)v32;

      sub_100087534((uint64_t)v29, v30);
    }

  }
LABEL_43:
  swift_bridgeObjectRelease(v17);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v53 = v17;
    else
      v53 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v36 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v17);
    if (v36)
      goto LABEL_45;
LABEL_58:
    swift_bridgeObjectRelease(v17);
    v52 = _swiftEmptyArrayStorage;
    goto LABEL_59;
  }
  v36 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v36)
    goto LABEL_58;
LABEL_45:
  v61 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v36);
  if (v36 < 0)
  {
LABEL_62:
    __break(1u);
    JUMPOUT(0x1004627C8);
  }
  v37 = (void *)objc_opt_self(UISearchToken);
  v38 = 0;
  do
  {
    if ((v17 & 0xC000000000000001) != 0)
      v47 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v17);
    else
      v47 = (char *)*(id *)(v17 + 8 * v38 + 32);
    v48 = v47;
    v49 = (void **)&v47[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
    swift_beginAccess(&v47[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage], v59, 0, 0);
    v50 = *v49;
    v51 = v50;
    if (!v50)
    {
      v39 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v39);

    }
    ++v38;
    v40 = *(_QWORD *)&v48[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
    v41 = v50;
    swift_bridgeObjectRetain(v40);
    v42 = String._bridgeToObjectiveC()();
    v43 = objc_msgSend(v37, "tokenWithIcon:text:", v51, v42, swift_bridgeObjectRelease(v40).n128_f64[0]);

    objc_msgSend(v43, "setRepresentedObject:", v48);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v44);
    v45 = v61[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
    v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
    specialized ContiguousArray._endMutation()(v46);
  }
  while (v36 != v38);
  v52 = v61;
  swift_bridgeObjectRelease(v17);
LABEL_59:
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "setTokens:", isa, swift_bridgeObjectRelease(v52).n128_f64[0]);

}

void sub_1004627E8()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;

  v1 = v0;
  sub_1004629C8((_BYTE *)1);
  v2 = (char *)sub_10045CE14();
  v3 = OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions];
  v5 = OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)&v2[v5];
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  sub_10041370C(1);

  v9 = *(_QWORD *)&v1[v3];
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    if (v10)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v9);
    sub_10006922C(&qword_100656AC8);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "setSearchSuggestions:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

    return;
  }
  if (v9 < 0)
    v18 = *(_QWORD *)&v1[v3];
  else
    v18 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[v3]);
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v10)
    goto LABEL_14;
LABEL_3:
  specialized ContiguousArray.reserveCapacity(_:)(v10);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
      else
        v12 = *(id *)(v9 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      v14 = sub_1000DA610();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized ContiguousArray._endMutation()(v17);
    }
    while (v10 != v11);
    goto LABEL_14;
  }
  __break(1u);
}

_BYTE *sub_1004629C8(_BYTE *result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v2 = (char)result;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions);
    else
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions));
    v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    result = (_BYTE *)swift_bridgeObjectRelease(v3);
    if (v8 < 1)
      goto LABEL_4;
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_4:
    if ((v2 & 1) != 0)
      return result;
    v4 = 1;
    goto LABEL_6;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement) & 1) != 0)
    goto LABEL_4;
  v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus);
  v4 = v6 ^ 1;
  if ((v6 & 1) != 0 || (v2 & 1) == 0)
  {
LABEL_6:
    result = *(_BYTE **)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
    v5 = result[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed];
    result[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = v4;
    if (v4 != v5)
      return objc_msgSend(result, "docSetNeedsUpdateContentUnavailableConfiguration");
  }
  return result;
}

void sub_100462AB4()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v1 = *(char **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion];
  if (v1)
  {
    v2 = v0;
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files13DOCSuggestion_textReplacement + 8];
    v22 = *(id *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion];
    if (v3)
    {
      v4 = v22;
      swift_bridgeObjectRetain(v3);
      sub_100460640();
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v5 = v1;
      v6 = objc_msgSend(v2, "searchBar");
      v7 = objc_msgSend(v6, "searchTextField");

      v8 = objc_msgSend(v2, "searchBar");
      v9 = objc_msgSend(v8, "searchTextField");

      v10 = objc_msgSend(v9, "textualRange");
      v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v5) + 0x178))();
      v12 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
      swift_bridgeObjectRetain(v12);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
      v14 = objc_msgSend((id)objc_opt_self(UISearchToken), "tokenWithIcon:text:", v11, v13);

      objc_msgSend(v14, "setRepresentedObject:", v5);
      v15 = objc_msgSend(v2, "searchBar");
      v16 = objc_msgSend(v15, "searchTextField");

      v17 = objc_msgSend(v16, "tokens");
      v18 = sub_10004F2F0(0, (unint64_t *)&unk_100656AD8, UISearchToken_ptr);
      v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

      if ((unint64_t)v19 >> 62)
      {
        if (v19 < 0)
          v21 = v19;
        else
          v21 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v19);
        v20 = _CocoaArrayWrapper.endIndex.getter(v21);
        swift_bridgeObjectRelease(v19);
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      objc_msgSend(v7, "replaceTextualPortionOfRange:withToken:atIndex:", v10, v14, v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

      sub_100460474();
    }

  }
}

id sub_100462DC4()
{
  return sub_1000DB3A0(type metadata accessor for DOCSearchController);
}

void sub_100462F08(uint64_t a1, uint64_t a2)
{
  sub_100465A08(a2);
}

void sub_100462F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BYTE *v5;
  char v6;
  int v7;
  int v8;

  v3 = OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchPresentationState;
  v4 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchPresentationState);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchPresentationState) = a1;
  switch(a1)
  {
    case 2u:
      if (v4 == 2)
        return;
      break;
    case 3u:
      if (v4 == 3)
        return;
      break;
    case 4u:
      if (v4 == 4)
        return;
      v5 = (_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
      v6 = *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible) = 0;
      if ((v6 & 1) == 0)
        return;
      sub_1004631C4();
      goto LABEL_16;
    default:
      if ((v4 - 2) >= 3 && ((((a1 & 1) == 0) ^ v4) & 1) != 0)
        return;
      break;
  }
  v5 = (_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
  v7 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
  v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_canShowAppMenuButton);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible) = v8;
  if (v7 != v8)
    sub_1004631C4();
  if (v7)
  {
LABEL_16:
    if (*v5 == 1 && (*(_BYTE *)(v2 + v3) & 0xFE) != 2)
      sub_100463014(a1, a2);
  }
}

void sub_100463014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(id, uint64_t, uint64_t);
  char *v13;
  void *v14;
  void *v15;
  id v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchController, a2);
  if (Strong)
  {
    v5 = Strong + OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate;
    v26 = (id)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate, v4);
    if (v6)
    {
      v8 = v6;
      v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton);
      if (!v9)
      {

        swift_unknownObjectRelease(v8);
        return;
      }
      v10 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType(v6, v7);
      v12 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 24);
      v13 = v9;
      v14 = (void *)v12(v26, ObjectType, v10);
      v15 = *(void **)&v13[OBJC_IVAR____TtC5Files22DOCSearchAppMenuButton_attachedMenu];
      *(_QWORD *)&v13[OBJC_IVAR____TtC5Files22DOCSearchAppMenuButton_attachedMenu] = v14;
      v16 = v14;

      sub_1000EAF74();
      v17 = v13;
      if (v14 && (v18 = objc_msgSend(v16, "accessibilityIdentifier")) != 0)
      {
        v19 = v18;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        v24 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v21);
        v22 = v24;
      }
      else
      {
        v22 = 0;
      }
      objc_msgSend(v17, "setAccessibilityIdentifier:", v22);

      swift_unknownObjectRelease(v8);
      v23 = v25;
    }
    else
    {
      v23 = v26;
    }

  }
}

void sub_1004631C4()
{
  char *v0;
  void *Strong;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __n128 v19;
  id v20;
  int v21;
  id v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;
  CGRect v26;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchController]);
  if (Strong)
  {
    v2 = OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible;
    if (v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible] == 1)
    {
      v22 = Strong;
      v3 = objc_msgSend(Strong, "searchBar");
      v4 = OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton;
      v5 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton];
      if (v5)
      {
        v6 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton];
        v7 = v6;
      }
      else
      {
        v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCSearchAppMenuButton()), "init");
        v6 = 0;
        v5 = *(void **)&v0[v4];
      }
      *(_QWORD *)&v0[v4] = v7;
      v10 = v7;
      v11 = v6;

      v12 = objc_opt_self(UIView);
      v13 = swift_allocObject(&unk_1005EDE98, 32, 7);
      *(_QWORD *)(v13 + 16) = v0;
      *(_QWORD *)(v13 + 24) = v10;
      v14 = swift_allocObject(&unk_1005EDEC0, 32, 7);
      *(_QWORD *)(v14 + 16) = sub_100465B64;
      *(_QWORD *)(v14 + 24) = v13;
      aBlock[4] = sub_10006657C;
      v25 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10006655C;
      aBlock[3] = &unk_1005EDED8;
      v15 = _Block_copy(aBlock);
      v16 = v25;
      v17 = (char *)v10;
      v18 = v0;
      swift_retain();
      objc_msgSend((id)v12, "performWithoutAnimation:", v15, swift_release(v16).n128_f64[0]);
      _Block_release(v15);
      LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v14, "", 106, 1261, 44, 1);
      v19 = swift_release(v14);
      if ((v12 & 1) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)&v17[OBJC_IVAR____TtC5Files22DOCSearchAppMenuButton_attachedMenu])
      {
        objc_msgSend(v3, "_setSearchFieldContainerLayoutCustomizationDelegate:", v18, v19.n128_f64[0]);
        v20 = v3;
        objc_msgSend(v17, "frame");
        objc_msgSend(v20, "_setAdditionalPaddingForCancelButtonAtLeadingEdge:", CGRectGetWidth(v26) + 8.0 + 24.0);
        swift_release(v13);

      }
      else
      {
        v21 = v0[v2];
        v0[v2] = 0;
        if (v21 == 1)
          sub_1004631C4(v19);
        objc_msgSend(v3, "_setSearchFieldContainerLayoutCustomizationDelegate:", 0);
        objc_msgSend(v3, "_setAdditionalPaddingForCancelButtonAtLeadingEdge:", 0.0);
        swift_release(v13);

      }
    }
    else
    {
      v8 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton];
      if (v8)
      {
        v23 = Strong;
        v9 = v8;
        objc_msgSend(v9, "removeFromSuperview");

        Strong = v23;
      }

    }
  }
}

void sub_1004634CC(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat MidY, CGFloat a9, CGFloat a10)
{
  uint64_t v10;
  void *v11;
  id v21;
  char v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double MinX;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  double v39;
  double v41;
  double v42;
  double v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v11 = *(void **)(v10 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton);
  if (!v11)
    return;
  if (!a1)
  {
    __break(1u);
    goto LABEL_16;
  }
  v21 = v11;
  v22 = UIView.doc_isRTL.getter(v21);
  objc_msgSend(v21, "frame");
  v42 = v24;
  v43 = v23;
  v41 = v25;
  v27 = v26;
  v44.origin.x = a7;
  v44.origin.y = MidY;
  v44.size.width = a9;
  v44.size.height = a10;
  if (CGRectIsEmpty(v44))
  {
    objc_msgSend(a1, "_additionalPaddingForCancelButtonAtLeadingEdge");
    v29 = v28 + -8.0;
    if ((v22 & 1) != 0)
    {
      if (!a2)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      v29 = -v29;
      objc_msgSend(a2, "bounds");
      MinX = CGRectGetMinX(v45);
    }
    else
    {
      if (!a2)
      {
LABEL_18:
        __break(1u);
        return;
      }
      objc_msgSend(a2, "bounds");
      MinX = CGRectGetMaxX(v46);
    }
    a7 = MinX + v29;
    v47.origin.x = a3;
    v47.origin.y = a4;
    v47.size.width = a5;
    v47.size.height = a6;
    MidY = CGRectGetMidY(v47);
    a9 = 0.0;
    a10 = 0.0;
  }
  v31 = v22 & 1;
  v32 = CGRect.byPositioning(leadingRelativeToRect:offset:isRTL:)(v31, a7, MidY, a9, a10, 24.0, v43, v42, v41, v27);
  CGRect.byCenteringVertically(relativeToRect:isRTL:)(v31, a7, MidY, a9, a10, v32, v33, v34, v35);
  if (!a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(a2, "bounds");
  v49.origin.x = a7;
  v49.origin.y = MidY;
  v49.size.width = a9;
  v49.size.height = a10;
  CGRectContainsRect(v48, v49);
  v36 = objc_msgSend(v21, "window");
  v37 = v36;
  if (v36)

  v38 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v39 = __chkstk_darwin(v38);
  static UIView.doc_performBlock(allowingAnimations:block:)(v37 != 0, sub_100465B28, v39);

}

void sub_100463740(void *a1, char a2, double *a3, void *a4)
{
  double v7;
  id v8;

  v7 = 0.0;
  if ((a2 & 1) != 0)
    v7 = 1.0;
  objc_msgSend(a1, "setAlpha:", v7);
  objc_msgSend(a1, "setFrame:", *a3, a3[1], a3[2], a3[3]);
  v8 = objc_msgSend(a1, "superview");

  if (!v8)
  {
    if (a4)
    {
      objc_msgSend(a4, "addSubview:", a1);
      objc_msgSend(a4, "bringSubviewToFront:", a1);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100463900()
{
  return sub_1000DB3A0(type metadata accessor for DOCSearchControllerStackedLayout);
}

void *sub_100463944()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  v2 = v1;
  return v1;
}

void sub_100463970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  Class isa;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _QWORD *v23;

  v3 = v2;
  v6 = (uint64_t *)(v2 + 16);
  swift_beginAccess(v2 + 16, v22, 0, 0);
  v7 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_100140784(a1), (v9 & 1) != 0))
  {
    v23 = *(_QWORD **)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_bridgeObjectRetain(v23);
  }
  else
  {
    v23 = _swiftEmptyArrayStorage;
  }
  v10 = swift_bridgeObjectRetain(a2);
  sub_1000887D0(v10);
  v11 = (uint64_t)v23;
  swift_beginAccess(v6, v21, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 16));
  v20 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = 0x8000000000000000;
  sub_100355A8C(v11, a1, isUniquelyReferenced_nonNull_native);
  v13 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v20;
  swift_bridgeObjectRelease(v13);
  swift_endAccess(v21);
  if ((*(_BYTE *)(v3 + 32) & 1) == 0)
  {
    v14 = *v6;
    if (*(_QWORD *)(*v6 + 16))
    {
      v15 = sub_100140784(*(_QWORD *)(v3 + 24));
      if ((v16 & 1) != 0)
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
        v18 = (void *)objc_opt_self(NSLayoutConstraint);
        sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
        swift_bridgeObjectRetain(v17);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v18, "activateConstraints:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

      }
    }
  }
}

void sub_100463AF0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  Class v17;
  uint64_t v18;
  _BYTE v19[24];

  v3 = v2;
  if ((a2 & 1) == 0)
  {
    swift_beginAccess(v2 + 16, &v18, 0, 0);
    v5 = *(_QWORD *)(v2 + 16);
    if (*(_QWORD *)(v5 + 16))
    {
      v6 = sub_100140784(a1);
      if ((v7 & 1) != 0)
      {
        v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
        v9 = (void *)objc_opt_self(NSLayoutConstraint);
        sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
        swift_bridgeObjectRetain(v8);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v9, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

      }
    }
  }
  if ((*(_BYTE *)(v3 + 32) & 1) == 0)
  {
    v11 = *(_QWORD *)(v3 + 24);
    swift_beginAccess(v3 + 16, v19, 0, 0);
    v12 = *(_QWORD *)(v3 + 16);
    if (*(_QWORD *)(v12 + 16))
    {
      v13 = sub_100140784(v11);
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
        v16 = (void *)objc_opt_self(NSLayoutConstraint);
        sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
        swift_bridgeObjectRetain(v15);
        v17 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v16, "activateConstraints:", v17, swift_bridgeObjectRelease(v15).n128_f64[0]);

      }
    }
  }
}

uint64_t sub_100463C58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t UIViewController.doc_manuallyHiddenForSearch.getter()
{
  _QWORD *v0;
  uint64_t KeyPath;
  uint64_t v3;

  v0 = (_QWORD *)UIViewController.associatedObjectStorage.getter();
  KeyPath = swift_getKeyPath(&unk_1004E9708);
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v0) + 0x60))(&v3);
  swift_release(KeyPath);

  return v3 & 1;
}

void sub_100463CE8(_BYTE *a1@<X8>)
{
  _QWORD *v2;
  uint64_t KeyPath;
  uint64_t v4;

  v2 = (_QWORD *)UIViewController.associatedObjectStorage.getter();
  KeyPath = swift_getKeyPath(&unk_1004E9708);
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v2) + 0x60))(&v4);
  swift_release(KeyPath);

  *a1 = v4 & 1;
}

void sub_100463D6C(unsigned __int8 *a1)
{
  UIViewController.doc_manuallyHiddenForSearch.setter(*a1);
}

void sub_100463D90(unsigned __int8 *a1)
{
  UIViewController.doc_manuallyHiddenForSearch.setter(*a1);
}

void (*UIViewController.doc_manuallyHiddenForSearch.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;

  *(_QWORD *)a1 = v1;
  v3 = (_QWORD *)UIViewController.associatedObjectStorage.getter(a1);
  KeyPath = swift_getKeyPath(&unk_1004E9708);
  (*(void (**)(void))((swift_isaMask & *v3) + 0x60))();

  swift_release(KeyPath);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9) & 1;
  return sub_100463E3C;
}

void sub_100463E3C(uint64_t a1)
{
  UIViewController.doc_manuallyHiddenForSearch.setter(*(unsigned __int8 *)(a1 + 8));
}

uint64_t type metadata accessor for DOCEverywhereSearchScope()
{
  return objc_opt_self(_TtC5Files24DOCEverywhereSearchScope);
}

uint64_t type metadata accessor for DOCItemCollectionSearchScope()
{
  return objc_opt_self(_TtC5Files28DOCItemCollectionSearchScope);
}

uint64_t type metadata accessor for DOCFileProviderSearchScope()
{
  return objc_opt_self(_TtC5Files26DOCFileProviderSearchScope);
}

uint64_t getEnumTagSinglePayload for DOCSearchController.LayoutConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

ValueMetadata *type metadata accessor for DOCSearchController.LayoutConfiguration()
{
  return &type metadata for DOCSearchController.LayoutConfiguration;
}

ValueMetadata *type metadata accessor for DOCSearchController.TraitSource()
{
  return &type metadata for DOCSearchController.TraitSource;
}

uint64_t _s5Files23DOCSuggestionsPlacementOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100463FC0 + 4 * byte_1004E96E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100463FF4 + 4 * byte_1004E96E0[v4]))();
}

uint64_t sub_100463FF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100463FFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100464004);
  return result;
}

uint64_t sub_100464010(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100464018);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10046401C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100464024(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCSuggestionsPlacement()
{
  return &type metadata for DOCSuggestionsPlacement;
}

ValueMetadata *type metadata accessor for DOCItemCollectionSearchScope.Source()
{
  return &type metadata for DOCItemCollectionSearchScope.Source;
}

uint64_t getEnumTagSinglePayload for DOCSearchPresentationState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 2;
      if (v7 > 2)
        return result;
    }
    return 0;
  }
  v2 = a2 + 4;
  if (a2 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1004640A0 + 4 * byte_1004E96EA[v4]))();
}

uint64_t storeEnumTagSinglePayload for DOCSearchPresentationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10046414C + 4 * byte_1004E96F4[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100464180 + 4 * byte_1004E96EF[v5]))();
}

uint64_t sub_100464180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100464188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100464190);
  return result;
}

uint64_t sub_10046419C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004641A4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1004641A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004641B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCSearchPresentationState()
{
  return &type metadata for DOCSearchPresentationState;
}

unint64_t sub_1004641D0()
{
  unint64_t result;

  result = qword_100656AB8;
  if (!qword_100656AB8)
  {
    result = swift_getWitnessTable(&unk_1004E9904, &type metadata for DOCSuggestionsPlacement);
    atomic_store(result, (unint64_t *)&qword_100656AB8);
  }
  return result;
}

unint64_t sub_100464218()
{
  unint64_t result;

  result = qword_100656AC0;
  if (!qword_100656AC0)
  {
    result = swift_getWitnessTable(&unk_1004E99AC, &type metadata for DOCSearchController.TraitSource);
    atomic_store(result, (unint64_t *)&qword_100656AC0);
  }
  return result;
}

void sub_10046425C(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t *v19;
  Swift::Int v20;
  unint64_t v21;
  Swift::Int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t *v27;
  Swift::Int v28;
  Swift::Int v29;
  uint64_t *v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t *v33;
  uint64_t v34;
  Swift::Int v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t *v122;
  Swift::Int v123;
  Swift::Int v124;
  uint64_t v125;
  Swift::Int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *__dst;
  char *v132;
  char *v133;
  unint64_t v134;
  int64_t v135;
  uint64_t v136;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
    {
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
      __break(1u);
      goto LABEL_194;
    }
    if ((unint64_t)v3 >= 2)
    {
      v10 = 0;
      v11 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v13 = *(_QWORD *)(v11 + 8 * i);
        v14 = v10;
        do
        {
          v15 = *(_QWORD *)(v11 + v14);
          if (*(unsigned __int8 *)(v13 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) >= *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category))
            break;
          if (!v11)
            goto LABEL_189;
          *(_QWORD *)(v11 + v14 + 8) = v15;
          *(_QWORD *)(v11 + v14) = v13;
          v14 -= 8;
        }
        while (v14 != -8);
        v10 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_194:
      LOBYTE(v121) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, v121, 936, 0);
      __break(1u);
      return;
    }
    v122 = a1;
    v123 = v4;
    v125 = v1;
    if (v3 >= 2)
    {
      v6 = v5 >> 1;
      v7 = type metadata accessor for DOCSearchSuggestion();
      v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      v9 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v136 = v8;
      goto LABEL_18;
    }
    v16 = (char *)_swiftEmptyArrayStorage;
    v136 = (uint64_t)_swiftEmptyArrayStorage;
    v9 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1)
    {
LABEL_18:
      v17 = 0;
      v18 = *a1;
      v127 = *a1 - 8;
      v16 = (char *)_swiftEmptyArrayStorage;
      v19 = &OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category;
      v20 = v3;
      v124 = v3;
      __dst = v9;
      v128 = v18;
      while (1)
      {
        v22 = v17 + 1;
        if (v17 + 1 < v20)
        {
          v23 = *(unsigned __int8 *)(*(_QWORD *)(v18 + 8 * v22) + *v19);
          v24 = *(unsigned __int8 *)(*(_QWORD *)(v18 + 8 * v17) + *v19);
          v22 = v17 + 2;
          if (v17 + 2 < v20)
          {
            v25 = v23;
            while (1)
            {
              v26 = *(unsigned __int8 *)(*(_QWORD *)(v18 + 8 * v22) + *v19);
              if (v23 < v24 == v26 >= v25)
                break;
              ++v22;
              v25 = v26;
              if (v20 == v22)
              {
                v22 = v20;
                break;
              }
            }
          }
          if (v23 < v24)
          {
            if (v22 < v17)
              goto LABEL_184;
            if (v17 < v22)
            {
              v27 = (uint64_t *)(v127 + 8 * v22);
              v28 = v22;
              v29 = v17;
              v30 = (uint64_t *)(v18 + 8 * v17);
              do
              {
                if (v29 != --v28)
                {
                  if (!v18)
                    goto LABEL_191;
                  v31 = *v30;
                  *v30 = *v27;
                  *v27 = v31;
                }
                ++v29;
                --v27;
                ++v30;
              }
              while (v29 < v28);
            }
          }
        }
        if (v22 < v20)
        {
          if (__OFSUB__(v22, v17))
            goto LABEL_179;
          if (v22 - v17 < v123)
          {
            v32 = v17 + v123;
            if (__OFADD__(v17, v123))
              goto LABEL_185;
            if (v32 >= v20)
              v32 = v20;
            if (v32 < v17)
              goto LABEL_186;
            if (v22 != v32)
            {
              v33 = (uint64_t *)(v127 + 8 * v22);
              do
              {
                v34 = *(_QWORD *)(v18 + 8 * v22);
                v35 = v17;
                v36 = v33;
                do
                {
                  v37 = *v36;
                  if (*(unsigned __int8 *)(v34 + *v19) >= *(unsigned __int8 *)(*v36 + *v19))
                    break;
                  if (!v18)
                    goto LABEL_187;
                  *v36 = v34;
                  v36[1] = v37;
                  --v36;
                  ++v35;
                }
                while (v22 != v35);
                ++v22;
                ++v33;
              }
              while (v22 != v32);
              v22 = v32;
            }
          }
        }
        if (v22 < v17)
          goto LABEL_178;
        v126 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_100464E4C(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
        v9 = __dst;
        v39 = *((_QWORD *)v16 + 2);
        v38 = *((_QWORD *)v16 + 3);
        v21 = v39 + 1;
        if (v39 >= v38 >> 1)
        {
          v112 = sub_100464E4C((char *)(v38 > 1), v39 + 1, 1, v16);
          v9 = __dst;
          v16 = v112;
        }
        *((_QWORD *)v16 + 2) = v21;
        v40 = v16 + 32;
        v41 = &v16[16 * v39 + 32];
        *(_QWORD *)v41 = v17;
        *((_QWORD *)v41 + 1) = v126;
        if (v39)
          break;
        v21 = 1;
LABEL_20:
        v20 = v124;
        v17 = v126;
        if (v126 >= v124)
          goto LABEL_150;
      }
      v129 = v16 + 32;
      v130 = v16;
      while (1)
      {
        v42 = v21 - 1;
        if (v21 >= 4)
        {
          v47 = &v40[16 * v21];
          v48 = *((_QWORD *)v47 - 8);
          v49 = *((_QWORD *)v47 - 7);
          v53 = __OFSUB__(v49, v48);
          v50 = v49 - v48;
          if (v53)
            goto LABEL_167;
          v52 = *((_QWORD *)v47 - 6);
          v51 = *((_QWORD *)v47 - 5);
          v53 = __OFSUB__(v51, v52);
          v45 = v51 - v52;
          v46 = v53;
          if (v53)
            goto LABEL_168;
          v54 = v21 - 2;
          v55 = &v40[16 * v21 - 32];
          v57 = *(_QWORD *)v55;
          v56 = *((_QWORD *)v55 + 1);
          v53 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v53)
            goto LABEL_170;
          v53 = __OFADD__(v45, v58);
          v59 = v45 + v58;
          if (v53)
            goto LABEL_173;
          if (v59 >= v50)
          {
            v77 = &v40[16 * v42];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v53 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v53)
              goto LABEL_177;
            v70 = v45 < v80;
            goto LABEL_90;
          }
        }
        else
        {
          if (v21 != 3)
          {
            v71 = *((_QWORD *)v16 + 4);
            v72 = *((_QWORD *)v16 + 5);
            v53 = __OFSUB__(v72, v71);
            v64 = v72 - v71;
            v65 = v53;
            goto LABEL_84;
          }
          v44 = *((_QWORD *)v16 + 4);
          v43 = *((_QWORD *)v16 + 5);
          v53 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          v46 = v53;
        }
        if ((v46 & 1) != 0)
          goto LABEL_169;
        v54 = v21 - 2;
        v60 = &v40[16 * v21 - 32];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v63 = __OFSUB__(v61, v62);
        v64 = v61 - v62;
        v65 = v63;
        if (v63)
          goto LABEL_172;
        v66 = &v40[16 * v42];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v53 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v53)
          goto LABEL_175;
        if (__OFADD__(v64, v69))
          goto LABEL_176;
        if (v64 + v69 >= v45)
        {
          v70 = v45 < v69;
LABEL_90:
          if (v70)
            v42 = v54;
          goto LABEL_92;
        }
LABEL_84:
        if ((v65 & 1) != 0)
          goto LABEL_171;
        v73 = &v40[16 * v42];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v53 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v53)
          goto LABEL_174;
        if (v76 < v64)
          goto LABEL_20;
LABEL_92:
        if (v42 - 1 >= v21)
        {
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
          goto LABEL_180;
        }
        if (!v18)
          goto LABEL_190;
        v81 = v19;
        v134 = v42 - 1;
        v135 = v42;
        v133 = &v40[16 * v42 - 16];
        v82 = *(_QWORD *)v133;
        v83 = &v40[16 * v42];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v132 = v83;
        v86 = (char *)(v18 + 8 * *(_QWORD *)v133);
        v87 = (char *)(v18 + 8 * *(_QWORD *)v83);
        v88 = v18 + 8 * v84;
        v89 = v87 - v86;
        v90 = v87 - v86 + 7;
        if (v87 - v86 >= 0)
          v90 = v87 - v86;
        v91 = v90 >> 3;
        v92 = v88 - (_QWORD)v87;
        v93 = v88 - (_QWORD)v87 + 7;
        if ((uint64_t)(v88 - (_QWORD)v87) >= 0)
          v93 = v88 - (_QWORD)v87;
        v94 = v93 >> 3;
        if (v91 >= v93 >> 3)
        {
          if (v92 < -7)
            goto LABEL_193;
          if ((unint64_t)v9 >= v88 || v9 != v87)
          {
            v100 = v84;
            memmove(v9, v87, 8 * v94);
            v84 = v100;
            v9 = __dst;
          }
          v96 = &v9[8 * v94];
          v18 = v128;
          if (v82 < v85)
          {
            v70 = v92 < 8;
            v19 = v81;
            if (v70)
            {
              v97 = v9;
              goto LABEL_138;
            }
            v101 = (char *)(v127 + 8 * v84);
            v102 = v87;
            while (2)
            {
              v103 = v101 + 8;
              v105 = *((_QWORD *)v102 - 1);
              v102 -= 8;
              v104 = v105;
              if (*(unsigned __int8 *)(*((_QWORD *)v96 - 1) + *v81) >= *(unsigned __int8 *)(v105 + *v81))
              {
                v104 = *((_QWORD *)v96 - 1);
                v102 = v87;
                if (v103 != v96)
                {
                  v96 -= 8;
                  goto LABEL_130;
                }
                v106 = v101 >= v96;
                v96 -= 8;
                if (v106)
LABEL_130:
                  *(_QWORD *)v101 = v104;
              }
              else if (v103 != v87 || v101 >= v87)
              {
                goto LABEL_130;
              }
              if (v86 >= v102 || (v101 -= 8, v87 = v102, v9 >= v96))
              {
                v97 = v9;
                v87 = v102;
                goto LABEL_138;
              }
              continue;
            }
          }
          v97 = v9;
        }
        else
        {
          if (v89 < -7)
            goto LABEL_193;
          if (v9 != v86 || v9 >= v87)
          {
            v95 = v84;
            memmove(v9, v86, 8 * v91);
            v84 = v95;
            v9 = __dst;
          }
          v96 = &v9[8 * v91];
          if (v85 < v84)
          {
            v19 = v81;
            v97 = v9;
            if (v89 < 8)
            {
LABEL_113:
              v87 = v86;
              v18 = v128;
              goto LABEL_138;
            }
            while (2)
            {
              v98 = *(_QWORD *)v87;
              if (*(unsigned __int8 *)(*(_QWORD *)v87 + *v81) >= *(unsigned __int8 *)(*(_QWORD *)v97 + *v81))
              {
                v98 = *(_QWORD *)v97;
                v99 = v86 == v97;
                v97 += 8;
                if (!v99)
                  goto LABEL_110;
              }
              else
              {
                v99 = v86 == v87;
                v87 += 8;
                if (!v99)
LABEL_110:
                  *(_QWORD *)v86 = v98;
              }
              v86 += 8;
              if (v97 >= v96 || (unint64_t)v87 >= v88)
                goto LABEL_113;
              continue;
            }
          }
          v97 = v9;
          v87 = v86;
          v18 = v128;
        }
        v19 = v81;
LABEL_138:
        v107 = v96 - v97;
        v108 = v96 - v97 + 7;
        if (v107 >= 0)
          v108 = v107;
        if (v107 <= -8)
          goto LABEL_193;
        v109 = v108 >> 3;
        if (v87 != v97 || v87 >= &v97[8 * v109])
        {
          v110 = v84;
          memmove(v87, v97, 8 * v109);
          v84 = v110;
        }
        if (v84 < v82)
          goto LABEL_164;
        v16 = v130;
        if (v135 > *((_QWORD *)v130 + 2))
          goto LABEL_165;
        *(_QWORD *)v133 = v82;
        v40 = v129;
        *(_QWORD *)&v129[16 * v134 + 8] = v84;
        v111 = *((_QWORD *)v130 + 2);
        if (v135 >= (uint64_t)v111)
          goto LABEL_166;
        v21 = v111 - 1;
        memmove(v132, v132 + 16, 16 * (v111 - 1 - v135));
        *((_QWORD *)v130 + 2) = v111 - 1;
        v9 = __dst;
        if (v111 <= 2)
          goto LABEL_20;
      }
    }
    v21 = _swiftEmptyArrayStorage[2];
LABEL_150:
    if (v21 >= 2)
    {
      v113 = *v122;
      while (1)
      {
        v114 = v21 - 2;
        if (v21 < 2)
          break;
        if (!v113)
          goto LABEL_192;
        v115 = v9;
        v116 = *(_QWORD *)&v16[16 * v114 + 32];
        v117 = *(_QWORD *)&v16[16 * v21 + 24];
        sub_100464BB8((char *)(v113 + 8 * v116), (char *)(v113 + 8 * *(_QWORD *)&v16[16 * v21 + 16]), v113 + 8 * v117, v9);
        if (v125)
          goto LABEL_161;
        if (v117 < v116)
          goto LABEL_181;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_10046564C((uint64_t)v16);
        if (v114 >= *((_QWORD *)v16 + 2))
          goto LABEL_182;
        v118 = &v16[16 * v114 + 32];
        *(_QWORD *)v118 = v116;
        *((_QWORD *)v118 + 1) = v117;
        v119 = *((_QWORD *)v16 + 2);
        if (v21 > v119)
          goto LABEL_183;
        memmove(&v16[16 * v21 + 16], &v16[16 * v21 + 32], 16 * (v119 - v21));
        *((_QWORD *)v16 + 2) = v119 - 1;
        v21 = v119 - 1;
        v9 = v115;
        if (v119 <= 2)
          goto LABEL_161;
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
      goto LABEL_188;
    }
LABEL_161:
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)((v136 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    specialized Array._endMutation()(v120);
    swift_bridgeObjectRelease(v136);
  }
}

uint64_t sub_100464BB8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(unsigned __int8 *)(*((_QWORD *)v16 - 1) + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) >= *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(unsigned __int8 *)(*(_QWORD *)v6 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) >= *(unsigned __int8 *)(*(_QWORD *)v4 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_10046532C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100464E4C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100656AD0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_100464F44(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1004650BC(a1, a2, a3, (uint64_t *)&unk_100644C10);
}

uint64_t sub_100464F50(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100465488(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

char *sub_100464F5C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

char *sub_100464FF0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -72)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
      return (char *)memmove(result, v3, 72 * v6);
  }
  return result;
}

uint64_t sub_1004650B0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1004650BC(a1, a2, a3, &qword_100644B40);
}

uint64_t sub_1004650BC(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = sub_10006922C(a4);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  v11 = v9 / v8;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v11 * v8)
    return swift_arrayInitWithTakeFrontToBack(v4, v5, v11, result);
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront(v4);
  return result;
}

char *sub_1004651C8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_100465270(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_10046532C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1004653D4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_10046547C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100465488(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

uint64_t sub_100465488(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  v11 = v9 / v8;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v11 * v8)
    return swift_arrayInitWithTakeFrontToBack(v4, v5, v11, result);
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront(v4);
  return result;
}

char *sub_100465594(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_10046564C(uint64_t a1)
{
  return sub_100464E4C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100465660(_QWORD *a1)
{
  return sub_1001555A8(0, a1[2], 0, a1);
}

uint64_t sub_100465674(_QWORD *a1)
{
  return sub_1001555BC(0, a1[2], 0, a1);
}

uint64_t sub_100465688(uint64_t a1)
{
  return sub_100155BDC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10046569C(uint64_t a1)
{
  return sub_100155ED0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1004656B0(_QWORD *a1)
{
  return sub_1001561C4(0, a1[2], 0, a1);
}

uint64_t sub_1004656C4(uint64_t a1)
{
  return sub_100156344(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1004656D8(_QWORD *a1)
{
  return sub_10015660C(0, a1[2], 0, a1);
}

uint64_t sub_1004656EC(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_100465700(_QWORD *a1)
{
  return sub_1001567B0(0, a1[2], 0, a1);
}

uint64_t sub_100465714(_QWORD *a1)
{
  return sub_1001573A0(0, a1[2], 0, a1);
}

uint64_t sub_100465728(_QWORD *a1)
{
  return sub_100155BC8(0, a1[2], 0, a1);
}

_QWORD *sub_10046573C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD *result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v2 = a1;
  if (a1 >> 62)
  {
LABEL_29:
    if (v2 < 0)
      v33 = v2;
    else
      v33 = v2 & 0xFFFFFFFFFFFFFF8;
    v3 = _CocoaArrayWrapper.endIndex.getter(v33);
    if (v3)
      goto LABEL_3;
    return _swiftEmptyArrayStorage;
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    return _swiftEmptyArrayStorage;
LABEL_3:
  v34 = v2;
  v4 = 0;
  v5 = a2 + OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate;
  v36 = v2 & 0xFFFFFFFFFFFFFF8;
  v37 = v2 & 0xC000000000000001;
  v35 = v3;
  while (1)
  {
    if (v37)
    {
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    }
    else
    {
      if (v4 >= *(_QWORD *)(v36 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v8 = *(id *)(v2 + 8 * v4 + 32);
    }
    v10 = v8;
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_28;
    Strong = swift_unknownObjectWeakLoadStrong(v5, v9);
    if (!Strong)
      goto LABEL_21;
    v14 = Strong;
    v15 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(Strong, v13);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(a2, ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v18 = *(_QWORD *)(v17 + 16);
    swift_bridgeObjectRelease(v17);
    if (!v18)
      goto LABEL_21;
    v19 = sub_10046073C();
    if (((unint64_t)objc_msgSend(v19, "trashedItemsMembership") & 0xFFFFFFFFFFFFFFFDLL) == 0)
    {
      v25 = v19;
      goto LABEL_18;
    }
    v20 = objc_msgSend(v19, "providerDomainID");

    if (!v20)
    {

LABEL_21:
      v27 = swift_unknownObjectWeakLoadStrong(v5, v13);
      if (!v27)
        goto LABEL_4;
      v29 = v27;
      v30 = *(_QWORD *)(v5 + 8);
      v31 = swift_getObjectType(v27, v28);
      LOBYTE(v30) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(a2, v31, v30);
      swift_unknownObjectRelease(v29);
      if ((v30 & 1) != 0)
        goto LABEL_4;
      goto LABEL_23;
    }
    result = objc_msgSend(v19, "providerDomainID");
    if (!result)
      break;
    v22 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v24 = v23;

    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    if ((DOCProviderDomainIDIsExternalDevice(v25) & 1) != 0)
    {

      v2 = v34;
LABEL_18:

      goto LABEL_23;
    }
    v26 = DOCProviderDomainIDIsSharedServerDomainID(v25);

    v2 = v34;
    if ((v26 & 1) == 0)
      goto LABEL_21;
LABEL_23:
    v32 = type metadata accessor for DOCQueryFragmentSuggestion();
    v27 = swift_dynamicCastClass(v10, v32);
    if (v27)
    {

      goto LABEL_5;
    }
LABEL_4:
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
    v6 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
    v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v10);
    specialized ContiguousArray._endMutation()(v7);
LABEL_5:
    ++v4;
    if (v11 == v35)
      return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

void sub_100465A08(uint64_t a1)
{
  void *v1;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  swift_bridgeObjectRetain(a1);
  v5 = (unint64_t)sub_10046573C(v4, (uint64_t)v3);
  swift_bridgeObjectRelease(a1);

  if ((v5 & 0x8000000000000000) != 0 || (v5 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v5);
    v6 = (uint64_t)sub_10028F4D0(v11);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
  }
  v14 = v6;
  sub_10045C858(&v14);
  swift_bridgeObjectRelease(v5);
  v7 = v14;
  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    v12 = type metadata accessor for DOCSuggestion();
    swift_bridgeObjectRetain(v7);
    v9 = _bridgeCocoaArray<A>(_:)(v13, v12);
    swift_release(v7);
  }
  else
  {
    swift_bridgeObjectRetain(v14);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    type metadata accessor for DOCSuggestion();
    v9 = v7;
  }
  swift_release(v7);
  v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions] = v9;
  swift_bridgeObjectRelease(v10);
  sub_1004627E8();
}

void sub_100465B28()
{
  uint64_t v0;

  sub_100463740(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(double **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100465B38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100465B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v2 + 24);
  sub_100463014(a1, a2);
  return objc_msgSend(v3, "sizeToFit");
}

uint64_t sub_100465B94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100465BA4(void *a1)
{
  char *v1;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v3 = objc_msgSend(v1, "presentingViewController");
  if (v3)
  {
    v12 = v3;
    if ((objc_msgSend(v3, "doc_hasDisappearedOrIsDisappearing") & 1) == 0)
    {
      objc_msgSend(v1, "loadViewIfNeeded");
      v4 = objc_msgSend(a1, "text");
      v5 = v4;
      if (v4)
      {
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
        v8 = v7;

        v5 = (void *)(v6 & 0xFFFFFFFFFFFFLL);
      }
      else
      {
        v8 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease(v8);
      v9 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0)
        v9 = (uint64_t)v5;
      if (v9)
      {
        sub_10045FD4C();
      }
      else
      {
        v10 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer];
        *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] = 0;

        v11 = objc_msgSend(v1, "searchBar");
        sub_10045F944(v11);

      }
    }

  }
}

void sub_100465CC0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager] = 0;
  v3 = OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint] = 0;
  v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState] = 4;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___stackedSearchLayout] = 0;
  v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement] = 0;
  v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController] = 0;
  v4 = OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints;
  v5 = type metadata accessor for DOCSizeCategoryDependantConstraints();
  v6 = swift_allocObject(v5, 33, 7);
  *(_QWORD *)(v6 + 16) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v6 + 24) = 0;
  *(_BYTE *)(v6 + 32) = 1;
  *(_QWORD *)&v1[v4] = v6;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files19DOCSearchController_defaultSearchCollectionItemPredicate]);
  v7 = &v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate]);
  v1[OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] = 0;
  v8 = &v1[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration];
  *(_WORD *)v8 = 0;
  v8[2] = 1;
  v1[OBJC_IVAR____TtC5Files19DOCSearchController_activationTemporilyDisabled] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x7070757320746F4ELL, 0xED0000646574726FLL, "Files/DOCSearchController.swift", 31, 2, a1, 0);
  __break(1u);
}

id sub_100465EB0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;

  v1 = v0;
  v2 = type metadata accessor for DOCAssertion(0);
  swift_allocObject(v2, 48, 7);
  v3 = DOCAssertion.init(traceInfo:)(0xD00000000000001BLL, 0x8000000100537350);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion] = v3;
  swift_release(v4);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], v5);
  if (Strong)
  {
    v7 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", "willDismissSearchController:") & 1) != 0)
      objc_msgSend(v7, "willDismissSearchController:", v1);
    swift_unknownObjectRelease(v7);
  }
  return objc_msgSend(v1, "setShowsSearchResultsController:", 0);
}

uint64_t sub_100465F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  _BYTE v19[24];

  v3 = v2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate, a2);
  if (Strong)
  {
    v5 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", "didDismissSearchController:") & 1) != 0)
      objc_msgSend(v5, "didDismissSearchController:", v3);
    swift_unknownObjectRelease(v5);
  }
  v6 = OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion);
  if (v7)
  {
    v8 = *(void (**)(uint64_t))(*(_QWORD *)v7 + 160);
    v9 = swift_retain(*(_QWORD *)(v3 + OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion));
    v8(v9);
    swift_release(v7);
    v10 = *(_QWORD *)(v3 + v6);
  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)(v3 + v6) = 0;
  swift_release(v10);
  v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss, v19, 1, 0);
  v12 = *v11;
  *v11 = (uint64_t)_swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain(v12);
    v14 = (_QWORD *)(v12 + 40);
    do
    {
      v16 = (void (*)(uint64_t))*(v14 - 1);
      v15 = *v14;
      v17 = swift_retain(*v14);
      v16(v17);
      swift_release(v15);
      v14 += 2;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease(v12);
  }
  return swift_bridgeObjectRelease(v12);
}

uint64_t sub_1004660AC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1005EDFB0, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_100466F6C;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EDFC8;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100062658((unint64_t *)&qword_100641260, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10006922C((uint64_t *)&unk_100647540);
  v18 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1004662C4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    return 0;
  v0 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  sub_10048561C();
  v2 = v1;

  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    sub_100081774(0, v3, 0);
    v4 = (_QWORD *)(v2 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = (void *)*v4;
      swift_bridgeObjectRetain(*v4);
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease(0xE000000000000000);
      v7._countAndFlagsBits = v5;
      v7._object = v6;
      String.append(_:)(v7);
      v8._countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      String.append(_:)(v8);
      swift_bridgeObjectRelease(v6);
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_100081774(v9 > 1, v10 + 1, 1);
      v4 += 2;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = 0xD000000000000019;
      v11[5] = 0x8000000100537130;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease(v2);
  v13 = sub_10006922C(&qword_10064F390);
  v14 = sub_100062698((unint64_t *)&qword_10064D530, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = BidirectionalCollection<>.joined(separator:)(539371040, 0xE400000000000000, v13, v14);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v12;
}

unint64_t sub_1004664DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100656AF8;
  if (!qword_100656AF8)
  {
    v1 = sub_10004F2F0(255, &qword_100656AF0, NSFileProviderSearchQuery_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100656AF8);
  }
  return result;
}

uint64_t sub_100466534()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100466558(uint64_t a1)
{
  uint64_t v1;

  sub_100460090(a1, v1);
}

uint64_t sub_100466560()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100466584()
{
  uint64_t v0;

  sub_10045F420(*(void **)(v0 + 16));
}

void sub_10046658C(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  int v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v2 = objc_msgSend(a1, "representedObject");
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v10, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_10007EBDC((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    v4 = type metadata accessor for DOCSuggestion();
    v5 = swift_dynamicCast(&v9, v11, (char *)&type metadata for Any + 8, v4, 6);
    v6 = v9;
    if (!v5)
      v6 = 0;
  }
  else
  {
    sub_10007EB54((uint64_t)v11);
    v6 = 0;
  }
  v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion) = v6;
  v8 = v6;

  sub_100462AB4();
}

double sub_100466668()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  void *Strong;
  uint64_t v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  _QWORD *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  Class isa;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery;
  v7 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = 0;

  v8 = *(void **)&v0[v6];
  if (!v8)
  {
    sub_1004609DC();
    v8 = *(void **)&v0[v6];
    if (!v8)
      return result;
  }
  v93 = v5;
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
  v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
  v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v12)
  {
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v95 = v3;
  v13 = v12 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v13 + 16) & 1) != 0)
    goto LABEL_77;
  v14 = *(void **)v13;
  v15 = v8;
  v16 = v14;
  v17 = objc_opt_self(FPSearchCollection);
  v18 = (void *)swift_dynamicCastObjCClass(v16, v17);
  if (!v18)

  v19 = *(_QWORD *)(v10 + v11);
  if (!v19)
    goto LABEL_71;
  v20 = v19 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v20 + 16) & 1) != 0)
    goto LABEL_77;
  v21 = *(id *)v20;
  v22 = objc_opt_self(FPSearchTrashCollection);
  v23 = (void *)swift_dynamicCastObjCClass(v21, v22);
  v94 = v2;
  if (v23)
  {
    if (!v18)
    {
      v96 = v23;
      v98 = v23;
      goto LABEL_15;
    }
  }
  else
  {

    if (!v18)
      goto LABEL_79;
    v23 = 0;
  }
  v96 = v23;
  v98 = v18;
LABEL_15:
  v97 = v18;
  v24 = *(void **)DOCLog.UI.unsafeMutableAddressor(v97);
  v25 = sub_10006922C((uint64_t *)&unk_100644560);
  v26 = swift_allocObject(v25, 72, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v26 + 56) = sub_10004F2F0(0, &qword_100656AF0, NSFileProviderSearchQuery_ptr);
  *(_QWORD *)(v26 + 64) = sub_1004664DC();
  *(_QWORD *)(v26 + 32) = v15;
  v27 = v15;
  v28 = v24;
  v29 = static os_log_type_t.default.getter(v28);
  os_log(_:dso:log:type:_:)("Will use search query for populating search item collection: %@", 63, 2, &_mh_execute_header, v28, v29, v26);

  swift_bridgeObjectRelease(v26);
  v100 = (uint64_t)_swiftEmptyArrayStorage;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files19DOCSearchController_defaultSearchCollectionItemPredicate]);
  if (Strong)
  {
    v31 = v10;
    v32 = Strong;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
    v34 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v33 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v34 >= v33 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
    v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
    specialized Array._endMutation()(v35);

    v10 = v31;
  }
  v36 = &v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  v37 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate]);
  if (v37)
  {
    v38 = v37;
    v39 = v10;
    v10 = *((_QWORD *)v36 + 1);
    ObjectType = swift_getObjectType(v37);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 8))(v1, ObjectType, v10);
    swift_unknownObjectRelease(v38);
    v42 = *(_QWORD *)(v41 + 16);
    if (!v42)
    {
      swift_bridgeObjectRelease(v41);
      v10 = v39;
      goto LABEL_26;
    }
    v43 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex];
    if (v43 >= v42)
    {
      __break(1u);
      goto LABEL_59;
    }
    v44 = v41 + 16 * v43;
    v45 = *(_QWORD *)(v44 + 32);
    v46 = *(_QWORD *)(v44 + 40);
    swift_unknownObjectRetain(v45);
    swift_bridgeObjectRelease(v41);
    v47 = swift_getObjectType(v45);
    v48 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v47, v46);
    swift_unknownObjectRelease(v45);
    v10 = v39;
    if (v48)
    {
      v1 = v48;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v1);
      v38 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v42 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v38 < v42 >> 1)
      {
LABEL_24:
        v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v1);
        specialized Array._endMutation()(v49);

        goto LABEL_26;
      }
LABEL_59:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v38 + 1, 1);
      goto LABEL_24;
    }
  }
LABEL_26:
  v50 = objc_msgSend(v98, "searchQuery", v93);
  if (!v50)
    goto LABEL_40;
  v51 = v50;
  v52 = v27;
  v53 = v51;
  LOBYTE(v51) = static NSObject.== infix(_:_:)(v53, v52);

  if ((v51 & 1) == 0)
    goto LABEL_40;
  v54 = *(_QWORD *)(v10 + v11);
  if (!v54)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v55 = v54 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v55 + 16) & 1) != 0)
    goto LABEL_77;
  v56 = *(id *)v55;
  v57 = objc_msgSend(v56, "itemFilteringPredicate");

  if (!v57)
  {
    v75 = v100;
    if ((unint64_t)v100 >> 62)
    {
      if (v100 < 0)
        v91 = v100;
      else
        v91 = v100 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v100);
      v92 = _CocoaArrayWrapper.endIndex.getter(v91);
      swift_bridgeObjectRelease(v75);
      if (v92)
        goto LABEL_40;
    }
    else if (*(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_40;
    }
  }
  v58 = *(_QWORD *)(v10 + v11);
  if (!v58)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v59 = v58 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v59 + 16) & 1) != 0)
    goto LABEL_77;
  v60 = *(id *)v59;
  v61 = objc_msgSend(v60, "itemFilteringPredicate");

  if (v61)
  {
    v63 = v100;
    if ((unint64_t)v100 >> 62)
    {
      if (v100 < 0)
        v89 = v100;
      else
        v89 = v100 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v100);
      v90 = _CocoaArrayWrapper.endIndex.getter(v89);
      swift_bridgeObjectRelease(v63);
      if (v90)
        goto LABEL_36;
    }
    else if (*(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_36;
    }
LABEL_40:
    v76 = *(_QWORD *)(v10 + v11);
    if (v76)
    {
      v77 = v76 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v77 + 16) & 1) != 0)
        goto LABEL_77;
      v78 = *(id *)v77;
      objc_msgSend(v78, "stopObserving");

      objc_msgSend(v98, "setSearchQuery:", v27);
      v79 = *(_QWORD *)(v10 + v11);
      if (v79)
      {
        v80 = v79 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
        if ((*(_BYTE *)(v80 + 16) & 1) != 0)
          goto LABEL_77;
        v81 = v100;
        v82 = *(id *)v80;
        if ((unint64_t)v81 >> 62)
        {
          if (v81 < 0)
            v88 = v81;
          else
            v88 = v81 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v81);
          v83 = (id)_CocoaArrayWrapper.endIndex.getter(v88);
          swift_bridgeObjectRelease(v81);
          if (!v83)
          {
LABEL_47:
            objc_msgSend(v82, "setItemFilteringPredicate:", v83);

            v85 = *(_QWORD *)(v10 + v11);
            if (v85)
            {
              v86 = v85 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
              if ((*(_BYTE *)(v86 + 16) & 1) == 0)
              {
                v87 = *(id *)v86;
                objc_msgSend(v87, "startObserving");
                swift_bridgeObjectRelease(v81);

                swift_unknownObjectRelease(v98);
                return result;
              }
LABEL_77:
              _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000100537070, "Files/DOCSearchController.swift", 31, 2, 355, 0);
              while (1)
              {
                __break(1u);
LABEL_79:
                _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000051, 0x80000001005372B0, "Files/DOCSearchController.swift", 31, 2, 1063, 0);
              }
            }
            goto LABEL_74;
          }
        }
        else
        {
          v83 = *(id *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v83)
            goto LABEL_47;
        }
        sub_10004F2F0(0, (unint64_t *)&unk_100647BD0, NSPredicate_ptr);
        swift_bridgeObjectRetain(v81);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v81);
        v83 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "andPredicateWithSubpredicates:", isa);

        goto LABEL_47;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
LABEL_36:
  v64 = Logger.UI.unsafeMutableAddressor(v62);
  v65 = v94;
  v66 = v95;
  v67 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v93, v64, v94);
  v68 = v52;
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.debug.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v71 = 138412290;
    v99 = v68;
    v73 = v68;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100);
    *v72 = v8;

    _os_log_impl((void *)&_mh_execute_header, v69, v70, "Not triggering a new observation, since search query object or predicate(s) haven't changed: %@", v71, 0xCu);
    v74 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v72, 1, v74);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);

    swift_unknownObjectRelease(v98);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v67, v94);
  }
  else
  {

    swift_unknownObjectRelease(v98);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v100).n128_u64[0];
  return result;
}

void sub_100466F6C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus) = 0;
  if (v2 == 1)
    sub_10045D010();
}

void sub_100466FA4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files19DOCSearchController_activationTemporilyDisabled) = 0;
}

uint64_t sub_100466FB8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100466FDC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t storeEnumTagSinglePayload for DOCSearchController.LayoutConfiguration.NavigationBarRelativePlacement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100467054 + 4 * byte_1004E96FE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100467088 + 4 * byte_1004E96F9[v4]))();
}

uint64_t sub_100467088(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100467090(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100467098);
  return result;
}

uint64_t sub_1004670A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004670ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004670B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004670B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCSearchController.LayoutConfiguration.NavigationBarRelativePlacement()
{
  return &type metadata for DOCSearchController.LayoutConfiguration.NavigationBarRelativePlacement;
}

unint64_t sub_1004670D8()
{
  unint64_t result;

  result = qword_100656B10;
  if (!qword_100656B10)
  {
    result = swift_getWitnessTable(&unk_1004E9AE0, &type metadata for DOCSearchController.LayoutConfiguration.NavigationBarRelativePlacement);
    atomic_store(result, (unint64_t *)&qword_100656B10);
  }
  return result;
}

void DOCFileProviderSource.appMenuIconPreferingSymbolImages.getter()
{
  _BYTE *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  double v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  NSString v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v1)
  {
    v2 = objc_msgSend(v1, "identifier");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

  }
  else
  {
    if ((v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) == 0)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010051A570, "Files/DOCFileProviderSource.swift", 33, 2, 386, 0);
      __break(1u);
      return;
    }
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type]);
    v5 = v6;
  }
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocal);
  if (v7 == v3 && v8 == v5)
  {
    swift_bridgeObjectRelease(v5);
LABEL_17:
    swift_bridgeObjectRelease(v5);
    v19 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v20 = objc_msgSend(v19, "doc_symbolName");

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24 = (void *)objc_opt_self(UIImage);
    swift_bridgeObjectRetain(v23);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v24, "_systemImageNamed:withConfiguration:", v25, 0, swift_bridgeObjectRelease(v23).n128_f64[0]);

    if (v26)
    {
      swift_bridgeObjectRelease(v23);

    }
    else
    {
      v28 = *(id *)DOCLog.UI.unsafeMutableAddressor(v27);
      v29 = static os_log_type_t.fault.getter();
      v30 = sub_10006922C((uint64_t *)&unk_100644560);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v31 + 56) = &type metadata for String;
      *(_QWORD *)(v31 + 64) = sub_10006A638();
      *(_QWORD *)(v31 + 32) = v21;
      *(_QWORD *)(v31 + 40) = v23;
      swift_bridgeObjectRetain(v23);
      os_log(_:dso:log:type:_:)("ERROR: Unable to load expected image %@", 39, 2, &_mh_execute_header, v28, v29, v31);

      swift_bridgeObjectRelease(v31);
      objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
      swift_bridgeObjectRelease(v23);
    }
    return;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v3, v5, 0);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
    goto LABEL_17;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTapToRadar);
  if (v12 == v3 && v13 == v5)
  {
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    v15 = v13;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v3, v5, 0);
    swift_bridgeObjectRelease(v5);
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v15).n128_u64[0];
    if ((v16 & 1) == 0)
    {
      v18 = objc_msgSend(v0, "iconForSize:", 0, v17);
      return;
    }
  }
  sub_1004681C4();
}

uint64_t sub_1004674AC()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for DOCSourceListInterface_Default();
  result = swift_initStaticObject(v0, &unk_100641248);
  qword_100672E30 = result;
  return result;
}

id sub_10046753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;

  swift_retain();
  v7 = sub_1004687C0(a3, a4, 0, 1);
  swift_release(a1);
  return v7;
}

uint64_t sub_100467828()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (v1)
  {
    v2 = objc_msgSend(v1, "identifier");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

  }
  else
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8) & 1) == 0)
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010051A570, "Files/DOCFileProviderSource.swift", 33, 2, 386, 0);
      __break(1u);
      return result;
    }
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v0
                                                                          + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type));
    v5 = v6;
  }
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocal);
  if (v7 == v3 && v8 == v5)
  {
    v11 = 1;
    v10 = v5;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v3, v5, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v10);
  return v11 & 1;
}

id sub_100467988()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  void *v23;
  NSString v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  objc_super v76;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v2)
  {
    v3 = objc_msgSend(v2, "identifier");
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

  }
  else
  {
    if ((v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) == 0)
    {
      result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010051A570, "Files/DOCFileProviderSource.swift", 33, 2, 386, 0);
      __break(1u);
      return result;
    }
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type]);
    v6 = v7;
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocal);
  if (v8 == v4 && v9 == v6)
  {
    swift_bridgeObjectRelease(v6);
    goto LABEL_18;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v4, v6, 0);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v6);
    v20 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v21 = objc_msgSend(v20, "doc_symbolName");

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v19 = v22;

    goto LABEL_19;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTrashedItems);
  if (v13 == v4 && v14 == v6)
    goto LABEL_38;
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v4, v6, 0);
  swift_bridgeObjectRelease(v16);
  if ((v17 & 1) != 0)
  {
LABEL_15:
    v18 = 0x6873617274;
LABEL_16:
    swift_bridgeObjectRelease(v6);
    v19 = 0xE500000000000000;
    goto LABEL_19;
  }
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierTrashedItems);
  if (v37 == v4 && v38 == v6)
  {
LABEL_38:
    v18 = 0x6873617274;
LABEL_39:
    swift_bridgeObjectRelease_n(v6, 2);
    v19 = 0xE500000000000000;
    goto LABEL_19;
  }
  v40 = v38;
  v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v4, v6, 0);
  swift_bridgeObjectRelease(v40);
  if ((v41 & 1) != 0)
    goto LABEL_15;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
  if (v42 == v4 && v43 == v6)
    goto LABEL_42;
  v45 = v43;
  v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, v4, v6, 0);
  swift_bridgeObjectRelease(v45);
  if ((v46 & 1) != 0)
  {
LABEL_37:
    v18 = 0xD000000000000018;
    swift_bridgeObjectRelease(v6);
LABEL_43:
    v19 = 0x800000010050BC50;
    goto LABEL_19;
  }
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierSharedItems);
  v49 = v48;
  if (v47 == v4 && v48 == v6)
  {
LABEL_42:
    v18 = 0xD000000000000018;
    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_43;
  }
  v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, v4, v6, 0);
  swift_bridgeObjectRelease(v49);
  if ((v50 & 1) != 0)
    goto LABEL_37;
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTapToRadar);
  v53 = v52;
  if (v51 == v4 && v52 == v6)
  {
    swift_bridgeObjectRelease(v6);
LABEL_49:
    swift_bridgeObjectRelease(v6);
    sub_100468594();
    v55 = (id)static UIImage.doc_executablesFrameworkImage(named:)(0xD000000000000020, 0x8000000100537690);
    if (!v55)
    {
      v56 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
      v57 = static os_log_type_t.fault.getter();
      v58 = sub_10006922C((uint64_t *)&unk_100644560);
      v59 = swift_allocObject(v58, 72, 7);
      *(_OWORD *)(v59 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v59 + 56) = &type metadata for String;
      *(_QWORD *)(v59 + 64) = sub_10006A638();
      *(_QWORD *)(v59 + 32) = 0xD000000000000020;
      *(_QWORD *)(v59 + 40) = 0x8000000100537690;
      os_log(_:dso:log:type:_:)("ERROR: Unable to load expected image %@", 39, 2, &_mh_execute_header, v56, v57, v59);

      swift_bridgeObjectRelease(v59);
      v55 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    }
    v25 = v55;
    goto LABEL_22;
  }
  v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v52, v4, v6, 0);
  swift_bridgeObjectRelease(v53);
  if ((v54 & 1) != 0)
    goto LABEL_49;
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
  v62 = v61;
  if (v60 == v4 && v61 == v6)
    goto LABEL_58;
  v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v61, v4, v6, 0);
  swift_bridgeObjectRelease(v62);
  if ((v63 & 1) != 0)
  {
LABEL_55:
    v18 = 0x6B636F6C63;
    goto LABEL_16;
  }
  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierRecentDocuments);
  v66 = v65;
  if (v64 == v4 && v65 == v6)
  {
LABEL_58:
    v18 = 0x6B636F6C63;
    goto LABEL_39;
  }
  v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, v4, v6, 0);
  swift_bridgeObjectRelease(v66);
  if ((v67 & 1) != 0)
    goto LABEL_55;
  v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSearch);
  v70 = v69;
  if (v68 == v4 && v69 == v6)
  {
    v18 = 0x697966696E67616DLL;
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v69, v4, v6, 0);
    swift_bridgeObjectRelease(v70);
    if ((v71 & 1) != 0)
    {
      v18 = 0x697966696E67616DLL;
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierSearch);
      v74 = v73;
      if (v72 != v4 || v73 != v6)
      {
        v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v4, v6, 0);
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v74);
        v18 = 0x697966696E67616DLL;
        v19 = 0xEF7373616C67676ELL;
        if ((v75 & 1) == 0)
        {
          v76.receiver = v1;
          v76.super_class = (Class)type metadata accessor for DOCFileProviderSource();
          return objc_msgSendSuper2(&v76, "iconPreferingSymbolImages");
        }
        goto LABEL_19;
      }
      swift_bridgeObjectRelease_n(v6, 2);
      v18 = 0x697966696E67616DLL;
    }
  }
  v19 = 0xEF7373616C67676ELL;
LABEL_19:
  v23 = (void *)objc_opt_self(UIImage);
  swift_bridgeObjectRetain(v19);
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v23, "_systemImageNamed:withConfiguration:", v24, 0, swift_bridgeObjectRelease(v19).n128_f64[0]);

  if (v25)
  {
    swift_bridgeObjectRelease(v19);

  }
  else
  {
    v27 = *(id *)DOCLog.UI.unsafeMutableAddressor(v26);
    v28 = static os_log_type_t.fault.getter();
    v29 = sub_10006922C((uint64_t *)&unk_100644560);
    v30 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    *(_QWORD *)(v30 + 64) = sub_10006A638();
    *(_QWORD *)(v30 + 32) = v18;
    *(_QWORD *)(v30 + 40) = v19;
    *(_QWORD *)&v31 = swift_bridgeObjectRetain(v19).n128_u64[0];
    os_log(_:dso:log:type:_:)("ERROR: Unable to load expected image %@", 39, 2, &_mh_execute_header, v27, v28, v30, v31);

    swift_bridgeObjectRelease(v30);
    v25 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    swift_bridgeObjectRelease(v19);
  }
LABEL_22:
  v32 = v25;
  if (objc_msgSend(v1, "iconPreferingSymbolImagesRequiresHierarchicalColors"))
  {
    v33 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v34 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v33);

    v35 = objc_msgSend(v32, "imageByApplyingSymbolConfiguration:", v34);
    if (v35)
    {

      return v35;
    }
  }
  else
  {

  }
  return v32;
}

void sub_1004681C4()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[5];
  uint64_t v20;
  id v21;

  sub_100468594();
  v0 = (id)static UIImage.doc_executablesFrameworkImage(named:)(0xD000000000000020, 0x8000000100537690);
  v21 = v0;
  if (v0
    && (v1 = (void *)objc_opt_self(UIImageSymbolConfiguration),
        v2 = v0,
        v3 = objc_msgSend(v1, "configurationWithPointSize:weight:", 5, 20.0),
        v0 = objc_msgSend(v2, "imageByApplyingSymbolConfiguration:", v3),
        v2,
        v2,
        v3,
        v0))
  {
    v4 = (void *)objc_opt_self(UIColor);
    v0 = v0;
    v5 = objc_msgSend(v4, "blackColor");
    v6 = objc_msgSend(v0, "imageWithTintColor:renderingMode:", v5, 2);

  }
  else
  {
    v6 = 0;
  }
  v21 = v6;

  v7 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
  v8 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v7, 20.0, 20.0);
  v9 = swift_allocObject(&unk_1005EE188, 40, 7);
  __asm { FMOV            V0.2D, #20.0 }
  *(_OWORD *)(v9 + 16) = _Q0;
  *(_QWORD *)(v9 + 32) = &v21;
  v15 = swift_allocObject(&unk_1005EE1B0, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100468984;
  *(_QWORD *)(v15 + 24) = v9;
  aBlock[4] = sub_1000D9F90;
  v20 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10039318C;
  aBlock[3] = &unk_1005EE1C8;
  v16 = _Block_copy(aBlock);
  v17 = v20;
  swift_retain();
  objc_msgSend(v8, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v15, "", 104, 195, 46, 1);
  swift_release(v15);
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v18 = v21;
    swift_release(v9);

  }
}

id sub_100468504()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowseStartingPointsDocumentSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCSourceListInterface()
{
  return objc_opt_self(_TtC5Files22DOCSourceListInterface);
}

uint64_t type metadata accessor for DOCSourceListInterface_Default()
{
  return objc_opt_self(_TtC5Files30DOCSourceListInterface_Default);
}

uint64_t type metadata accessor for DOCBrowseStartingPointsDocumentSource()
{
  return objc_opt_self(_TtC5Files37DOCBrowseStartingPointsDocumentSource);
}

unint64_t sub_100468594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064E0C0;
  if (!qword_10064E0C0)
  {
    v1 = objc_opt_self(UIImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10064E0C0);
  }
  return result;
}

id sub_1004685D0(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  unint64_t v9;
  id v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;

  if (!objc_msgSend(a1, "isFolder"))
    return 0;
  v2 = 0x7265646C6F66;
  v3 = sub_1003F96A4(&off_1005C0C18);
  v4 = sub_10006922C(&qword_100656CD8);
  swift_arrayDestroy(&unk_1005C0C38, 4, v4);
  v5 = objc_msgSend(a1, "doc_folderIconType");
  if (*(_QWORD *)(v3 + 16) && (v6 = sub_100140784(v5), (v7 & 1) != 0))
  {
    v8 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v6);
    v2 = *v8;
    v9 = v8[1];
    swift_bridgeObjectRetain(v9);
  }
  else
  {
    v9 = 0xE600000000000000;
  }
  swift_bridgeObjectRelease(v3);
  v11 = (void *)objc_opt_self(UIImage);
  swift_bridgeObjectRetain(v9);
  v12 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v11, "_systemImageNamed:withConfiguration:", v12, 0, swift_bridgeObjectRelease(v9).n128_f64[0]);

  if (v10)
  {
    swift_bridgeObjectRelease(v9);

  }
  else
  {
    v14 = *(id *)DOCLog.UI.unsafeMutableAddressor(v13);
    v15 = static os_log_type_t.fault.getter();
    v16 = sub_10006922C((uint64_t *)&unk_100644560);
    v17 = swift_allocObject(v16, 72, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v17 + 56) = &type metadata for String;
    *(_QWORD *)(v17 + 64) = sub_10006A638();
    *(_QWORD *)(v17 + 32) = v2;
    *(_QWORD *)(v17 + 40) = v9;
    *(_QWORD *)&v18 = swift_bridgeObjectRetain(v9).n128_u64[0];
    os_log(_:dso:log:type:_:)("ERROR: Unable to load expected image %@", 39, 2, &_mh_execute_header, v14, v15, v17, v18);

    swift_bridgeObjectRelease(v17);
    v10 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    swift_bridgeObjectRelease(v9);
  }
  return v10;
}

id sub_1004687C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;

  v8 = (void *)objc_opt_self(UIImage);
  swift_bridgeObjectRetain(a2);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "_systemImageNamed:withConfiguration:", v9, 0, swift_bridgeObjectRelease(a2).n128_f64[0]);

  if (v10)
  {

    if ((a4 & 1) == 0)
    {
LABEL_3:
      v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", a3);
      v13 = objc_msgSend(v10, "imageWithConfiguration:", v12);

      return v13;
    }
  }
  else
  {
    v15 = *(id *)DOCLog.UI.unsafeMutableAddressor(v11);
    v16 = static os_log_type_t.fault.getter();
    v17 = sub_10006922C((uint64_t *)&unk_100644560);
    v18 = swift_allocObject(v17, 72, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    *(_QWORD *)(v18 + 64) = sub_10006A638();
    *(_QWORD *)(v18 + 32) = a1;
    *(_QWORD *)(v18 + 40) = a2;
    *(_QWORD *)&v19 = swift_bridgeObjectRetain(a2).n128_u64[0];
    os_log(_:dso:log:type:_:)("ERROR: Unable to load expected image %@", 39, 2, &_mh_execute_header, v15, v16, v18, v19);

    swift_bridgeObjectRelease(v18);
    v10 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    if ((a4 & 1) == 0)
      goto LABEL_3;
  }
  return v10;
}

uint64_t sub_100468974()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_100468984()
{
  uint64_t v0;
  id result;

  result = **(id **)(v0 + 32);
  if (result)
    return objc_msgSend(result, "drawInRect:", 0.0, 0.0, *(double *)(v0 + 16), *(double *)(v0 + 24));
  __break(1u);
  return result;
}

uint64_t sub_1004689AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004689BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100086BF0();
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_10006922C((uint64_t *)&unk_100641280);
  v13 = sub_10008825C((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x8000000100537890, v9, v6, v3, 0);
  qword_100672E38 = result;
  return result;
}

id sub_100468B78(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  double v45;
  unsigned int v46;
  void *countAndFlagsBits;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  double v53;
  unsigned int v54;
  id result;
  void *v56;
  void *v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String_optional v60;
  Swift::String v61;
  Swift::String v62;
  void *object;
  char *v64;
  uint64_t v65;
  uint64_t inited;
  void *v67;
  id v68;
  unint64_t v69;
  NSURL *v70;
  void *v71;
  void *v72;
  Class isa;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  char *v86;
  void (*v87)(uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  id v94;
  Swift::String v95;
  char v96[72];
  Swift::String v97;

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v85 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v85 - v17;
  v94 = objc_msgSend(objc_allocWithZone((Class)PDFDocument), "init");
  v19 = (unint64_t)objc_msgSend(a1, "pageCount");
  if ((v19 & 0x8000000000000000) != 0)
    __break(1u);
  v20 = v19;
  v86 = v12;
  v91 = a3;
  v92 = v18;
  v87 = a2;
  v88 = v8;
  v89 = v10;
  v90 = v9;
  v93 = v15;
  if (v19)
  {
    v21 = 0;
    v22 = v94;
    do
    {
      v23 = objc_autoreleasePoolPush();
      v24 = objc_msgSend(a1, "imageOfPageAtIndex:", v21);
      v25 = objc_msgSend(objc_allocWithZone((Class)PDFPage), "initWithImage:", v24);
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v22, "insertPage:atIndex:", v25, objc_msgSend(v22, "pageCount"));

      }
      ++v21;

      objc_autoreleasePoolPop(v23);
    }
    while (v20 != v21);
  }
  v27 = (void *)objc_opt_self(NSFileManager);
  v28 = objc_msgSend(v27, "defaultManager");
  v29 = objc_msgSend(v28, "temporaryDirectory");

  v30 = v92;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

  v31 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  v32 = objc_msgSend(v31, "UUIDString");

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = v93;
  URL.appendingPathComponent(_:)(v33, v35);
  v37 = objc_msgSend(v27, "defaultManager", swift_bridgeObjectRelease(v35).n128_f64[0]);
  URL.path.getter(v37);
  v39 = v38;
  v40 = String._bridgeToObjectiveC()();
  LODWORD(v39) = objc_msgSend(v37, "fileExistsAtPath:", v40, swift_bridgeObjectRelease(v39).n128_f64[0]);

  if ((_DWORD)v39)
  {
    v41 = objc_msgSend(v27, "defaultManager");
    URL.path.getter(v41);
    v43 = v42;
    v44 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v45 = swift_bridgeObjectRelease(v43).n128_u64[0];
    v95._countAndFlagsBits = 0;
    v46 = objc_msgSend(v41, "removeItemAtPath:error:", v44, &v95, v45);

    countAndFlagsBits = (void *)v95._countAndFlagsBits;
    if (!v46)
    {
LABEL_14:
      v78 = v94;
      v79 = countAndFlagsBits;
      v80 = _convertNSErrorToError(_:)(countAndFlagsBits);

      swift_willThrow(v81);
      v83 = (uint64_t)v88;
      v82 = v89;
      v77 = v90;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v88, 1, 1, v90);
      v87(v83);

      swift_errorRelease(v80);
      sub_100157D6C(v83);
      v84 = *(void (**)(char *, uint64_t))(v82 + 8);
      v84(v36, v77);
      return (id)((uint64_t (*)(char *, uint64_t))v84)(v30, v77);
    }
    v48 = (id)v95._countAndFlagsBits;
  }
  v49 = objc_msgSend(v27, "defaultManager");
  URL.path.getter(v49);
  v51 = v50;
  v52 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v53 = swift_bridgeObjectRelease(v51).n128_u64[0];
  v95._countAndFlagsBits = 0;
  v54 = objc_msgSend(v49, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v52, 1, 0, &v95, v53);

  countAndFlagsBits = (void *)v95._countAndFlagsBits;
  if (!v54)
    goto LABEL_14;
  result = (id)_DocumentManagerBundle((id)v95._countAndFlagsBits);
  v56 = v94;
  if (result)
  {
    v57 = result;
    v58._countAndFlagsBits = 0xD000000000000019;
    v97._countAndFlagsBits = 0xD000000000000028;
    v97._object = (void *)0x8000000100537860;
    v58._object = (void *)0x8000000100537820;
    v59._object = (void *)0x8000000100537840;
    v60.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v60.value._object = (void *)0xEB00000000656C62;
    v59._countAndFlagsBits = 0xD000000000000010;
    v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v60, (NSBundle)v57, v59, v97);

    v95 = v61;
    swift_bridgeObjectRetain(v61._object);
    v62._countAndFlagsBits = 1717858350;
    v62._object = (void *)0xE400000000000000;
    String.append(_:)(v62);
    swift_bridgeObjectRelease(v61._object);
    object = v95._object;
    v64 = v86;
    URL.appendingPathComponent(_:)(v95._countAndFlagsBits, v95._object);
    swift_bridgeObjectRelease(object);
    v65 = sub_10006922C(&qword_100656D80);
    inited = swift_initStackObject(v65, v96);
    *(_OWORD *)(inited + 16) = xmmword_1004D9670;
    v67 = (void *)kCGPDFContextShouldOutputAllImagesAsJPEG;
    *(_QWORD *)(inited + 32) = kCGPDFContextShouldOutputAllImagesAsJPEG;
    *(_QWORD *)(inited + 64) = &type metadata for Bool;
    *(_BYTE *)(inited + 40) = 1;
    v68 = v67;
    v69 = sub_1003F335C(inited);
    URL._bridgeToObjectiveC()(v70);
    v72 = v71;
    type metadata accessor for PDFDocumentWriteOption(0);
    sub_10005A360(&qword_100641E60, (uint64_t (*)(uint64_t))type metadata accessor for PDFDocumentWriteOption, (uint64_t)&unk_1004D8FDC);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    LODWORD(v69) = objc_msgSend(v56, "writeToURL:withOptions:", v72, isa, swift_bridgeObjectRelease(v69).n128_f64[0]);

    v74 = v87;
    v76 = (uint64_t)v88;
    v75 = v89;
    if ((_DWORD)v69)
    {
      v77 = v90;
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v88, v64, v90);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v77);
    }
    else
    {
      v77 = v90;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v88, 1, 1, v90);
    }
    v74(v76);

    sub_100157D6C(v76);
    v84 = *(void (**)(char *, uint64_t))(v75 + 8);
    v84(v64, v77);
    v84(v36, v77);
    return (id)((uint64_t (*)(char *, uint64_t))v84)(v30, v77);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCDocumentScannerWriter()
{
  return objc_opt_self(_TtC5Files24DOCDocumentScannerWriter);
}

double sub_100469270(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100641190 != -1)
    swift_once(&qword_100641190, sub_1004689BC);
  v13 = (void *)qword_100672E38;
  v14 = (_QWORD *)swift_allocObject(&unk_1005EE200, 40, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1004694C8;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EE218;
  v15 = _Block_copy(aBlock);
  v16 = v13;
  v17 = a1;
  swift_retain();
  static DispatchQoS.unspecified.getter(v18);
  v24 = _swiftEmptyArrayStorage;
  v19 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10006922C((uint64_t *)&unk_100647540);
  v21 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_10046949C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1004694C8()
{
  uint64_t v0;

  return sub_100468B78(*(void **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

char *sub_1004694D4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer;
  v10 = objc_allocWithZone((Class)CALayer);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_layerBackgroundColor] = 0;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for DOCBackgroundColorView();
  v12 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v13 = objc_msgSend(v12, "layer");
  v14 = OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer;
  objc_msgSend(v13, "addSublayer:", *(_QWORD *)&v12[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer]);

  v15 = *(id *)&v12[v14];
  objc_msgSend(v12, "bounds");
  objc_msgSend(v15, "setFrame:");

  return v12;
}

id sub_1004696C8()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCBackgroundColorView();
  objc_msgSendSuper2(&v6, "layoutSubviews");
  v1 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v1, "begin");
  objc_msgSend(v1, "setDisableActions:", 1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer];
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_layerBackgroundColor];
  if (v3)
    v4 = objc_msgSend(v3, "CGColor");
  else
    v4 = 0;
  objc_msgSend(v2, "setBackgroundColor:", v4);

  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  return objc_msgSend(v1, "commit");
}

id sub_1004697F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBackgroundColorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCBackgroundColorView()
{
  return objc_opt_self(_TtC5Files22DOCBackgroundColorView);
}

unint64_t sub_10046987C()
{
  unint64_t result;

  result = qword_100656DC0;
  if (!qword_100656DC0)
  {
    result = swift_getWitnessTable(&unk_1004E9C60, &type metadata for QuickLookFileIntent);
    atomic_store(result, (unint64_t *)&qword_100656DC0);
  }
  return result;
}

unint64_t sub_1004698C4()
{
  unint64_t result;

  result = qword_100656DC8;
  if (!qword_100656DC8)
  {
    result = swift_getWitnessTable(&unk_1004E9C88, &type metadata for QuickLookFileIntent);
    atomic_store(result, (unint64_t *)&qword_100656DC8);
  }
  return result;
}

uint64_t sub_100469908(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100574F40, 1) + 8);
}

uint64_t sub_10046992C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100574F18, 1);
}

uint64_t sub_10046993C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672E40);
  sub_10007E788(v10, (uint64_t)qword_100672E40);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x6F4C206B63697551, 0xEF6D657449206B6FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("QUICKLOOK_DOCUMENT_TITLE", 24, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Quick Look Document intent", 40, v13);
}

uint64_t sub_100469AE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_100656DF0);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100656DF8);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10030C410();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for QuickLookFileIntent, v6);
  v7._object = (void *)0x8000000100537A50;
  v7._countAndFlagsBits = 0xD000000000000024;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E9CC8);
  v9 = sub_10006922C((uint64_t *)&unk_100656E00);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for QuickLookFileIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for QuickLookFileIntent, v6);
}

uint64_t sub_100469C60(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2[15] = a1;
  v2[16] = a2;
  v3 = type metadata accessor for OpenURLIntent(0);
  v2[17] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[18] = v4;
  v2[19] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_100643470);
  v2[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100647988);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URLComponents(0);
  v2[22] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[23] = v8;
  v2[24] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v2[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[26] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[27] = swift_task_alloc(v11);
  v2[28] = swift_task_alloc(v11);
  v2[29] = swift_task_alloc(v11);
  v2[30] = swift_task_alloc(v11);
  v12 = type metadata accessor for DOCFileEntity(0);
  v2[31] = v12;
  v2[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100469DA4, 0, 0);
}

uint64_t sub_100469DA4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v1 = v0;
  v2 = v0 + 2;
  v4 = v1[31];
  v3 = (_QWORD *)v1[32];
  v5 = v1[29];
  IntentParameter.wrappedValue.getter(v3);
  v6 = *(void **)((char *)v3 + *(int *)(v4 + 28));
  v1[33] = v6;
  v7 = v6;
  sub_1000EACF8((uint64_t)v3);
  v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v1[34] = v8;
  v1[7] = v5;
  v1[2] = v1;
  v1[3] = sub_100469EA0;
  v9 = swift_continuation_init(v2, 1);
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_10012D8FC;
  v1[3] = &unk_1005EE268;
  v1[4] = v9;
  objc_msgSend(v8, "fetchURLForItem:completionHandler:", v7, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_100469EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 280) = v1;
  if (v1)
    v2 = sub_1001FCAE4;
  else
    v2 = sub_100469F00;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100469F00()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = (void *)v0[34];
  v2 = v0[30];
  v3 = v0[22];
  v4 = v0[23];
  v5 = v0[21];
  v6 = *(void (**)(_QWORD))(v0[26] + 32);
  ((void (*)(uint64_t, _QWORD, _QWORD))v6)(v2, v0[29], v0[25]);

  URLComponents.init(url:resolvingAgainstBaseURL:)(v2, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    v7 = (void *)v0[33];
    v8 = v0[30];
    v9 = v0[25];
    v10 = v0[26];
    sub_10000CB4C(v0[21], &qword_100647988);
    v11 = sub_1001FD164();
    v12 = swift_allocError(&type metadata for DeepLinkError, v11, 0, 0);
    swift_willThrow(v12);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    v13 = v0[25];
    v14 = v0[26];
    v15 = v0[20];
    v16 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[23] + 32))(v0[24], v0[21], v0[22]);
    v17 = (uint64_t *)DeepLinkLocation.filesAppURLScheme.unsafeMutableAddressor(v16);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain(v19);
    v20 = URLComponents.scheme.setter(v18, v19);
    URLComponents.url.getter(v20);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13);
    v22 = (void *)v0[33];
    if (v21 != 1)
    {
      v53 = v0[30];
      v54 = v0[32];
      v39 = v0[28];
      v40 = v0[26];
      v41 = v0[27];
      v42 = v0[25];
      v49 = v14;
      v50 = v0[23];
      v51 = v0[22];
      v52 = v0[24];
      v57 = v0[21];
      v55 = v0[29];
      v56 = v0[20];
      v43 = v0[19];
      v48 = v0[18];
      v44 = v0[17];
      v6(v39);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v41, v39, v42);
      OpenURLIntent.init(_:)(v41);
      v45 = sub_10005A360(&qword_1006479A0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLIntent, (uint64_t)&protocol conformance descriptor for OpenURLIntent);
      static IntentResult.result<A>(opensIntent:)(v43, v44, v45);

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v43, v44);
      v46 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      v46(v39, v42);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v51);
      v46(v53, v42);
      swift_task_dealloc(v54);
      swift_task_dealloc(v53);
      swift_task_dealloc(v55);
      swift_task_dealloc(v39);
      swift_task_dealloc(v41);
      swift_task_dealloc(v52);
      swift_task_dealloc(v57);
      swift_task_dealloc(v56);
      swift_task_dealloc(v43);
      v38 = (uint64_t (*)(void))v0[1];
      return v38();
    }
    v23 = v0[30];
    v25 = v0[24];
    v24 = v0[25];
    v26 = v0[22];
    v27 = v0[23];
    sub_10000CB4C(v0[20], &qword_100643470);
    v28 = sub_1001FD164();
    v29 = swift_allocError(&type metadata for DeepLinkError, v28, 0, 0);
    swift_willThrow(v29);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v23, v24);
  }
  v31 = v0[29];
  v30 = v0[30];
  v33 = v0[27];
  v32 = v0[28];
  v34 = v0[24];
  v36 = v0[20];
  v35 = v0[21];
  v37 = v0[19];
  swift_task_dealloc(v0[32]);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_10046A254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100641198 != -1)
    swift_once(&qword_100641198, sub_10046993C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10007E788(v2, (uint64_t)qword_100672E40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10046A2C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_100656DEC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA854;
  return sub_100469C60(a1, v4);
}

uint64_t sub_10046A320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10046A3A8();
  *a1 = result;
  return result;
}

uint64_t sub_10046A344(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10030C410();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for QuickLookFileIntent()
{
  return &type metadata for QuickLookFileIntent;
}

uint64_t sub_10046A37C()
{
  return sub_100062698(&qword_100656DD8, &qword_100656DE0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10046A3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __int16 v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v45 = *(_QWORD *)(v0 - 8);
  v46 = v0;
  __chkstk_darwin(v0);
  v44 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v42 = (char *)&v40 - v5;
  v6 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v6);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10006922C((uint64_t *)&unk_1006438D0);
  v25 = String.LocalizationValue.init(stringLiteral:)(1835365449, 0xE400000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v27(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  v38 = 256;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("QUICK_LOOK_INTENT_FILE_PARAMETER_TITLE", 38, 2, v20, 0x6E65746E49707041, 0xEA00000000007374, v17, v14, 0, 0, v38);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x80000001005379C0);
  static Locale.current.getter(v28);
  v27(v14, v26, v11);
  LOWORD(v39) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("QUICK_LOOK_INTENT_FILE_PARAMETER_DESCRIPTION", 44, 2, v20, 0x6E65746E49707041, 0xEA00000000007374, v17, v14, "Description for the File to Quick Look parameter of the Quick Look Document AppIntent", 85, v39);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v29 = type metadata accessor for DOCFileEntity(0);
  v30 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v41, 1, 1);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v42;
  v32(v42, 1, 1, v31);
  v34 = v43;
  v32(v43, 1, 1, v31);
  v35 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, enum case for InputConnectionBehavior.default(_:), v46);
  v36 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v24, v10, v30, v33, v34, v35, v36);
}

uint64_t sub_10046A7E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_10046A808()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  id v6;
  void *v7;
  uint64_t v8;
  id result;
  void *v10;
  double v11;
  double v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, "effectiveFullBrowser");
  v2 = objc_msgSend(v1, "dataSource");

  v3 = sub_10005F27C();
  if ((unint64_t)v3 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    while (__OFSUB__(v4--, 1))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      if (v3 < 0)
        v15 = v3;
      else
        v15 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v4 = _CocoaArrayWrapper.endIndex.getter(v15);
      swift_bridgeObjectRelease(v3);
      if (!v4)
        goto LABEL_24;
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
      goto LABEL_11;
    }
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_18;
    if (v4 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_19;
    v6 = *(id *)(v3 + 32 + 8 * v4);
LABEL_11:
    v7 = v6;
    v8 = swift_dynamicCastObjCProtocolConditional(v6, 1);
    result = objc_msgSend(v7, "view");
    if (!result)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      return result;
    }
    v10 = result;
    objc_msgSend(result, "alpha");
    v12 = v11;

    result = objc_msgSend(v7, "view");
    if (!result)
      goto LABEL_30;
    v13 = result;
    v14 = objc_msgSend(result, "isHidden");

    if (v8 && v12 == 1.0 && !v14)
    {
      v4 = sub_10046D714(v4, v3);
      break;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease(v3);
  if (v4)
  {
    result = (id)swift_dynamicCastObjCProtocolConditional(v4, 1);
    if (result)
      return result;

  }
  return 0;
}

NSString sub_10046AA3C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100656E10 = (uint64_t)result;
  return result;
}

id DOCTabbedBrowserViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  objc_super v15;
  _QWORD v16[3];
  uint64_t v17;

  DOCTabbedBrowserViewController.canPerformKeyCommandAction(_:with:)(a1);
  if (v5 != 2)
    return (id)(v5 & 1);
  sub_1000271D4(a2, (uint64_t)v16, &qword_100642730);
  v6 = v17;
  if (v17)
  {
    v7 = sub_10007E7A0(v16, v17);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_100068588(v16);
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v2;
  v15.super_class = (Class)DOCTabbedBrowserViewController;
  v13 = objc_msgSendSuper2(&v15, "canPerformAction:withSender:", a1, v12);
  swift_unknownObjectRelease(v12);
  return v13;
}

_OWORD *DOCTabbedBrowserViewController.target(forAction:withSender:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  __int128 v29;
  uint64_t v30;
  objc_super v31;
  __int128 v32;
  __int128 v33;

  DOCTabbedBrowserViewController.canPerformKeyCommandAction(_:with:)(a1);
  if ((v6 & 1) != 0)
  {
    *(_QWORD *)(a3 + 24) = sub_10004F2F0(0, (unint64_t *)&unk_100656E20, &off_1005BCF88);
    v15 = v28;
    *(_QWORD *)a3 = v28;
    return v15;
  }
  else
  {
    v7 = objc_msgSend(v28, "presentedViewController");

    if (v7)
      goto LABEL_3;
    v17 = objc_msgSend(v28, "splitBrowserViewController");
    sub_1000271D4(a2, (uint64_t)&v29, &qword_100642730);
    v18 = v30;
    if (v30)
    {
      v19 = sub_10007E7A0(&v29, v30);
      v20 = *(_QWORD *)(v18 - 8);
      v21 = __chkstk_darwin(v19);
      v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v20 + 16))(v23, v21);
      v24 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v18);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
      sub_100068588(&v29);
    }
    else
    {
      v24 = 0;
    }
    v26 = objc_msgSend(v17, "targetForAction:withSender:", a1, v24);

    swift_unknownObjectRelease(v24);
    if (!v26)
    {
LABEL_3:
      sub_1000271D4(a2, (uint64_t)&v32, &qword_100642730);
      v8 = *((_QWORD *)&v33 + 1);
      if (*((_QWORD *)&v33 + 1))
      {
        v9 = sub_10007E7A0(&v32, *((uint64_t *)&v33 + 1));
        v10 = *(_QWORD *)(v8 - 8);
        v11 = __chkstk_darwin(v9);
        v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v10 + 16))(v13, v11);
        v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
        sub_100068588(&v32);
      }
      else
      {
        v14 = 0;
      }
      v31.receiver = v28;
      v31.super_class = (Class)DOCTabbedBrowserViewController;
      v25 = objc_msgSendSuper2(&v31, "targetForAction:withSender:", a1, v14);
      swift_unknownObjectRelease(v14);
      if (v25)
      {
        _bridgeAnyObjectToAny(_:)(&v32, v25);
        swift_unknownObjectRelease(v25);
      }
      else
      {
        v32 = 0u;
        v33 = 0u;
      }
      return (_OWORD *)sub_10007EBDC((uint64_t)&v32, a3);
    }
    else
    {
      _bridgeAnyObjectToAny(_:)(&v29, v26);
      swift_unknownObjectRelease(v26);
      sub_100079B28(&v29, &v32);
      return sub_100079B28(&v32, (_OWORD *)a3);
    }
  }
}

void DOCTabbedBrowserViewController.pressesBegan(_:with:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[24];
  objc_super v16;

  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_100083500((unint64_t *)&qword_1006490B0, &qword_1006490A8, UIPress_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v16.receiver = v2;
  v16.super_class = (Class)DOCTabbedBrowserViewController;
  objc_msgSendSuper2(&v16, "pressesBegan:withEvent:", isa, a2);

  if ((sub_10046B208() & 1) != 0)
  {
    v6 = objc_msgSend(v2, "splitBrowserViewController");
    v7 = objc_msgSend(v6, "fullDocumentManagerViewController");

    v8 = (char *)sub_100084874();
    if (v8)
    {
      v9 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v15, 0, 0);
      v10 = *v9;
      if (v10
        && (v11 = type metadata accessor for DOCItemCollectionViewController(0),
            (v12 = swift_dynamicCastClass(v10, v11)) != 0))
      {
        v13 = v12;
        v14 = v10;

        if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
          || !*(_QWORD *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
          && *(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) != 1)
        {
          (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)(v13
                                                                                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController))
                                                   + 0x128))(a1, a2);
        }
      }
      else
      {
        v14 = v8;
      }

    }
  }
}

uint64_t sub_10046B208()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  char *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  os_log_t v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  __objc2_prot *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, "splitBrowserViewController", v4);
  v8 = objc_msgSend(v7, "fullDocumentManagerViewController");

  v9 = (char *)sub_100084874();
  if (!v9)
    return 0;
  v10 = (void **)&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v52, 0, 0);
  v11 = *v10;
  if (!v11)
  {

    return 0;
  }
  v12 = type metadata accessor for DOCItemCollectionViewController(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (!v13)
  {

    return v13;
  }
  v14 = v11;

  if ((objc_msgSend((id)v13, "isFirstResponder") & 1) != 0)
    goto LABEL_6;
  v15 = objc_msgSend(v1, "presentedViewController");

  if (v15)
    goto LABEL_6;
  v17 = objc_msgSend(v1, "viewIfLoaded");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "window");

    if (v19)
    {
      v20 = objc_msgSend(v19, "firstResponder");

      if (v20)
      {
        v49 = &OBJC_PROTOCOL___UIKeyInput;
        v21 = swift_dynamicCastObjCProtocolConditional(v20, 1);

        if (v21)
        {
LABEL_6:

          return 0;
        }
      }
    }
  }
  v22 = Logger.UI.unsafeMutableAddressor(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v22, v2);
  v23 = v14;
  v24 = v1;
  v25 = v23;
  v26 = v24;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.debug.getter(v27);
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc(32, -1);
    v46 = v29;
    v31 = v30;
    v48 = (_QWORD *)swift_slowAlloc(8, -1);
    v47 = swift_slowAlloc(64, -1);
    v51 = v47;
    *(_DWORD *)v31 = 136315650;
    v50 = sub_1000544FC(0xD000000000000025, 0x8000000100537CC0, &v51);
    v44 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    *(_WORD *)(v31 + 12) = 2112;
    v50 = (uint64_t)v26;
    v32 = v26;
    v45 = v27;
    v33 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    *v48 = v26;

    *(_WORD *)(v31 + 22) = 2080;
    v34 = v44;
    v35 = objc_msgSend((id)v13, "description");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    v50 = sub_1000544FC(v36, v38, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);

    swift_bridgeObjectRelease(v38);
    v39 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v46, "%s %@ is forwarding key event for Type Ahead to: %s", (uint8_t *)v31, 0x20u);
    v40 = sub_10006922C(&qword_100643AB0);
    v13 = 1;
    v41 = v48;
    swift_arrayDestroy(v48, 1, v40);
    swift_slowDealloc(v41, -1, -1);
    v42 = v47;
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 1;
  }
  return v13;
}

void DOCTabbedBrowserViewController.pressesChanged(_:with:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[24];
  objc_super v16;

  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_100083500((unint64_t *)&qword_1006490B0, &qword_1006490A8, UIPress_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v16.receiver = v2;
  v16.super_class = (Class)DOCTabbedBrowserViewController;
  objc_msgSendSuper2(&v16, "pressesChanged:withEvent:", isa, a2);

  if ((sub_10046B208() & 1) != 0)
  {
    v6 = objc_msgSend(v2, "splitBrowserViewController");
    v7 = objc_msgSend(v6, "fullDocumentManagerViewController");

    v8 = (char *)sub_100084874();
    if (v8)
    {
      v9 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v15, 0, 0);
      v10 = *v9;
      if (v10
        && (v11 = type metadata accessor for DOCItemCollectionViewController(0),
            (v12 = swift_dynamicCastClass(v10, v11)) != 0))
      {
        v13 = v12;
        v14 = v10;

        if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
          || !*(_QWORD *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
          && *(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) != 1)
        {
          (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)(v13
                                                                                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController))
                                                   + 0x130))(a1, a2);
        }
      }
      else
      {
        v14 = v8;
      }

    }
  }
}

void DOCTabbedBrowserViewController.pressesEnded(_:with:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[24];
  objc_super v16;

  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_100083500((unint64_t *)&qword_1006490B0, &qword_1006490A8, UIPress_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v16.receiver = v2;
  v16.super_class = (Class)DOCTabbedBrowserViewController;
  objc_msgSendSuper2(&v16, "pressesEnded:withEvent:", isa, a2);

  if ((sub_10046B208() & 1) != 0)
  {
    v6 = objc_msgSend(v2, "splitBrowserViewController");
    v7 = objc_msgSend(v6, "fullDocumentManagerViewController");

    v8 = (char *)sub_100084874();
    if (v8)
    {
      v9 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v15, 0, 0);
      v10 = *v9;
      if (v10
        && (v11 = type metadata accessor for DOCItemCollectionViewController(0),
            (v12 = swift_dynamicCastClass(v10, v11)) != 0))
      {
        v13 = v12;
        v14 = v10;

        if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
          || !*(_QWORD *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
          && *(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) != 1)
        {
          (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)(v13
                                                                                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController))
                                                   + 0x138))(a1, a2);
        }
      }
      else
      {
        v14 = v8;
      }

    }
  }
}

void DOCTabbedBrowserViewController.pressesCancelled(_:with:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[24];
  objc_super v16;

  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_100083500((unint64_t *)&qword_1006490B0, &qword_1006490A8, UIPress_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v16.receiver = v2;
  v16.super_class = (Class)DOCTabbedBrowserViewController;
  objc_msgSendSuper2(&v16, "pressesCancelled:withEvent:", isa, a2);

  if ((sub_10046B208() & 1) != 0)
  {
    v6 = objc_msgSend(v2, "splitBrowserViewController");
    v7 = objc_msgSend(v6, "fullDocumentManagerViewController");

    v8 = (char *)sub_100084874();
    if (v8)
    {
      v9 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v15, 0, 0);
      v10 = *v9;
      if (v10
        && (v11 = type metadata accessor for DOCItemCollectionViewController(0),
            (v12 = swift_dynamicCastClass(v10, v11)) != 0))
      {
        v13 = v12;
        v14 = v10;

        if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
          || !*(_QWORD *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
          && *(_BYTE *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) != 1)
        {
          (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)(v13
                                                                                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController))
                                                   + 0x140))(a1, a2);
        }
      }
      else
      {
        v14 = v8;
      }

    }
  }
}

double sub_10046BC4C(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v9 = sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  v10 = sub_100083500((unint64_t *)&qword_1006490B0, &qword_1006490A8, UIPress_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  a5(v11, a4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_10046BD0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  void *object;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  NSString v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  Swift::String v48;
  Swift::String_optional v49;
  Swift::String v50;
  void *v51;
  NSString v52;
  id v53;
  uint64_t v54;
  void *v55;
  _QWORD aBlock[5];
  uint64_t v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;

  v54 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v54 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v54);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id)_DocumentManagerBundle(v5);
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  v58._countAndFlagsBits = 0xD00000000000003DLL;
  v58._object = (void *)0x8000000100537BA0;
  v8._object = (void *)0x8000000100537B60;
  v8._countAndFlagsBits = 0x1000000000000034;
  v9.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v9.value._object = (void *)0xEB00000000656C62;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v58);

  v12 = sub_10006922C((uint64_t *)&unk_100644560);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9670;
  URL._bridgeToObjectiveC()((NSURL *)&unk_1004D9000);
  v15 = v14;
  *(_QWORD *)(v13 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v13 + 64) = sub_100083500((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v13 + 32) = v15;
  String.init(format:_:)(v11._countAndFlagsBits, v11._object, v13);
  v17 = v16;
  swift_bridgeObjectRelease(v11._object);
  v19 = (id)_DocumentManagerBundle(v18);
  if (!v19)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v20 = v19;
  v59._countAndFlagsBits = 0xD00000000000003FLL;
  v59._object = (void *)0x8000000100537C00;
  v21._object = (void *)0x8000000100537BE0;
  v21._countAndFlagsBits = 0xD000000000000017;
  v22.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v22.value._object = (void *)0xEB00000000656C62;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v59)._object;

  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v27 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v25, v26, 1);

  v29 = (id)_DocumentManagerBundle(v28);
  if (!v29)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v30 = v29;
  v60._countAndFlagsBits = 0xD000000000000027;
  v60._object = (void *)0x8000000100537C40;
  v31._countAndFlagsBits = 0x7463656E6E6F43;
  v31._object = (void *)0xE700000000000000;
  v32.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v32.value._object = (void *)0xEB00000000656C62;
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v60)._object;

  v35 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v54);
  v36 = *(unsigned __int8 *)(v2 + 80);
  v37 = (v36 + 24) & ~v36;
  v38 = swift_allocObject(&unk_1005EE3F8, v37 + v3, v36 | 7);
  v39 = v55;
  *(_QWORD *)(v38 + 16) = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v38 + v37, v4, v35);
  v40 = v39;
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  aBlock[4] = sub_10046D7E0;
  v57 = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000602CC;
  aBlock[3] = &unk_1005EE410;
  v42 = _Block_copy(aBlock);
  swift_release(v57);
  v43 = (void *)objc_opt_self(UIAlertAction);
  v44 = objc_msgSend(v43, "actionWithTitle:style:handler:", v41, 0, v42);
  _Block_release(v42);

  v46 = (id)_DocumentManagerBundle(v45);
  if (v46)
  {
    v47 = v46;
    v61._countAndFlagsBits = 0xD00000000000001DLL;
    v61._object = (void *)0x8000000100537C70;
    v48._countAndFlagsBits = 0x6C65636E6143;
    v48._object = (void *)0xE600000000000000;
    v49.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v49.value._object = (void *)0xEB00000000656C62;
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v49, (NSBundle)v47, v50, v61)._object;

    v52 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend(v43, "actionWithTitle:style:handler:", v52, 1, 0, swift_bridgeObjectRelease(v51).n128_f64[0]);

    objc_msgSend(v27, "addAction:", v44);
    objc_msgSend(v27, "addAction:", v53);
    objc_msgSend(v27, "setPreferredAction:", v44);
    objc_msgSend(v40, "presentViewController:animated:completion:", v27, 1, 0);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_10046C318(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSURL *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  void *object;
  NSString v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;

  v2 = v1;
  v4 = sub_10006922C(&qword_100643470);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v2, "presentedViewController", v5);
  if (!v8
    || (v9 = v8,
        v10 = objc_opt_self(FPUIActionViewController),
        v11 = swift_dynamicCastObjCClass(v9, v10),
        v9,
        !v11))
  {
    sub_1000271D4(a1, (uint64_t)v7, &qword_100643470);
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12);
    v16 = 0;
    if ((_DWORD)v14 != 1)
    {
      URL._bridgeToObjectiveC()(v15);
      v16 = v17;
      v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v7, v12);
    }
    v18 = (id)_DocumentManagerBundle(v14);
    if (!v18)
    {
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v19 = v18;
    v20 = (void *)objc_opt_self(FPUIActionViewController);
    v42._countAndFlagsBits = 0xD000000000000037;
    v42._object = (void *)0x8000000100537B20;
    v21._object = (void *)0x800000010051C620;
    v21._countAndFlagsBits = 0xD000000000000011;
    v22.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v22.value._object = (void *)0xEB00000000656C62;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v19, v23, v42)._object;

    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    if (qword_1006411A0 != -1)
      swift_once(&qword_1006411A0, sub_10046AA3C);
    v26 = objc_msgSend(v20, "actionControllerForConnectingToServerURL:actionTitle:providerIdentifier:", v16, v25, qword_100656E10);

    v27 = objc_msgSend(v26, "view");
    if (!v27)
      goto LABEL_27;
    v28 = v27;
    v29 = objc_msgSend(v2, "view");
    if (!v29)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v30 = v29;
    v31 = objc_msgSend(v29, "tintColor");

    if (!v31)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v32 = objc_msgSend((id)objc_opt_self(UIColor), "_doc_safeTintColor:", v31);

    objc_msgSend(v28, "setTintColor:", v32);
    objc_msgSend(v26, "setDelegate:", v2);
    v33 = objc_msgSend((id)objc_opt_self(DOCKeyCommandController), "dismissingKeyCommandsWithAction:", "performDismiss:");
    v34 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);

    if ((unint64_t)v35 >> 62)
    {
      if (v35 < 0)
        v40 = v35;
      else
        v40 = v35 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v35);
      v36 = _CocoaArrayWrapper.endIndex.getter(v40);
      if (v36)
        goto LABEL_13;
    }
    else
    {
      v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v35);
      if (v36)
      {
LABEL_13:
        if (v36 >= 1)
        {
          for (i = 0; i != v36; ++i)
          {
            if ((v35 & 0xC000000000000001) != 0)
              v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v35);
            else
              v38 = *(id *)(v35 + 8 * i + 32);
            v39 = v38;
            objc_msgSend(v26, "addKeyCommand:", v38);

          }
          goto LABEL_23;
        }
        __break(1u);
        goto LABEL_26;
      }
    }
LABEL_23:
    swift_bridgeObjectRelease_n(v35, 2);
    objc_msgSend(v2, "presentViewController:animated:completion:", v26, 1, 0);

  }
}

void sub_10046C800()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  char *v7;

  v1 = objc_msgSend(v0, "effectiveFullBrowser");
  objc_msgSend(v1, "setGoToFileProviderSources:", 0);
  v2 = objc_msgSend(v1, "configuration");
  v3 = objc_msgSend(v1, "sourceObserver");
  if (v3)
  {
    v4 = v3;
    v5 = swift_allocObject(&unk_1005EE3D0, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = objc_allocWithZone((Class)type metadata accessor for DOCSourceOrderObserver());
    v7 = DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(v2, v4, (uint64_t)sub_1003A2A0C, v5);
    objc_msgSend(v1, "setSourceOrderObserver:", v7);

  }
  else
  {
    __break(1u);
  }
}

id sub_10046C938(uint64_t a1, char a2, void *a3)
{
  id v4;
  _QWORD v6[4];
  char v7;

  v6[0] = 0xD000000000000038;
  v6[1] = 0x8000000100521420;
  v6[2] = 0;
  v6[3] = 0;
  v7 = a2;
  v4 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor();
  DOCAnalyticsManager.sendConnectToServerShownEvent(_:)(v6);

  return objc_msgSend(a3, "presentConnectToServer:", 0);
}

double DOCTabbedBrowserViewController.actionControllerDidFinishAction(_:userInfo:error:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  double result;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD v35[2];
  __int128 v36;
  __int128 v37;

  v4 = v3;
  v7 = objc_msgSend(a1, "providerIdentifier");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  if (qword_1006411A0 != -1)
    swift_once(&qword_1006411A0, sub_10046AA3C);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(qword_100656E10);
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n(v10, 2);
    if (a3)
    {
LABEL_9:
      swift_errorRetain(a3);
      v17 = *(id *)DOCLog.Source.unsafeMutableAddressor();
      v18 = static os_log_type_t.error.getter(v17);
      v19 = sub_10006922C((uint64_t *)&unk_100644560);
      v20 = swift_allocObject(v19, 72, 7);
      *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
      v21 = _convertErrorToNSError(_:)(a3);
      *(_QWORD *)(v20 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v20 + 64) = sub_100083500((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v20 + 32) = v21;
      os_log(_:dso:log:type:_:)("Error when action controller did finish action: %@", 50, 2, &_mh_execute_header, v17, v18, v20);

      swift_bridgeObjectRelease(v20);
      swift_errorRelease(a3);
    }
  }
  else
  {
    v14 = v12;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
    if ((v15 & 1) == 0)
      return result;
    if (a3)
      goto LABEL_9;
  }
  if (!a2)
  {
    v36 = 0u;
    v37 = 0u;
    goto LABEL_20;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(FPUIAuthenticationProviderDomainIdentifier);
  v24 = v23;
  if (!*(_QWORD *)(a2 + 16) || (v25 = sub_10007EF08(v22, v23), (v26 & 1) == 0))
  {
    v36 = 0u;
    v37 = 0u;
    swift_bridgeObjectRelease(v24);
    goto LABEL_20;
  }
  sub_100069BD8(*(_QWORD *)(a2 + 56) + 32 * v25, (uint64_t)&v36);
  swift_bridgeObjectRelease(v24);
  if (!*((_QWORD *)&v37 + 1))
  {
LABEL_20:
    sub_10000CB4C((uint64_t)&v36, &qword_100642730);
    goto LABEL_21;
  }
  if ((swift_dynamicCast(v35, &v36, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v27 = v35[0];
    v28 = v35[1];
    v29 = objc_msgSend(v4, "splitBrowserViewController");
    v30 = objc_msgSend(v29, "sidebarViewController");

    sub_100236960(v27, v28);
    objc_msgSend(v4, "switchToTab:", 2, swift_bridgeObjectRelease(v28).n128_f64[0]);
    return result;
  }
LABEL_21:
  v31 = objc_msgSend(v4, "splitBrowserViewController");
  v32 = (char *)objc_msgSend(v31, "sidebarViewController");

  v33 = &v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier];
  v34 = *(_QWORD *)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier + 8];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v34).n128_u64[0];
  return result;
}

void DOCTabbedBrowserViewController.actionControllerDidFinishAction(_:error:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  id v5;

  if (a2)
    v4 = _convertErrorToNSError(_:)(a2);
  else
    v4 = 0;
  v5 = (id)v4;
  objc_msgSend(v2, "actionControllerDidFinishAction:userInfo:error:", a1, 0);

}

void DOCTabbedBrowserViewController.actionController(_:presentError:completion:)(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = (id)_convertErrorToNSError(_:)(a2);
  DOCPresentAlertForError(v3, a1);

}

void sub_10046CF30()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(DOCKeyboardFocusManager), "sharedManager");
  objc_msgSend(v0, "restoreCurrentlyFocused");

}

void sub_10046D024()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (objc_msgSend((id)objc_opt_self(DOCFeature), "_UIPTabInfrastructureEnabled"))
  {
    v1 = objc_msgSend(v0, "tabBarController");
    if (v1)
    {
      v13 = v1;
      v2 = objc_opt_self(DOCAutoBarHidingTabBarController);
      v3 = (void *)swift_dynamicCastObjCClass(v13, v2);
      if (v3
        && (v4 = v3,
            objc_msgSend(v3, "_uip_setPreferredSidebarMode:", 1),
            v5 = objc_msgSend(v0, "configuration"),
            v6 = objc_msgSend(v5, "canHaveFloatingTabSwitcher"),
            v5,
            v6))
      {
        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v7 = swift_allocObject(&unk_1005EE330, 24, 7);
        swift_unknownObjectWeakInit(v7 + 16);
        v8 = swift_allocObject(&unk_1005EE358, 24, 7);
        swift_unknownObjectWeakInit(v8 + 16);
        v9 = swift_allocObject(&unk_1005EE380, 32, 7);
        *(_QWORD *)(v9 + 16) = v7;
        *(_QWORD *)(v9 + 24) = v8;
        v11 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v10, 0, 0, 0, sub_10046D70C, v9);
        objc_msgSend(v4, "setFloatingTabBarSidebarToggleAction:", v11);

        v12 = (void *)v11;
      }
      else
      {
        v12 = v13;
      }

    }
  }
}

void sub_10046D218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  _BYTE v16[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4, v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a3 + 16;
    swift_beginAccess(v8, &v15, 0, 0);
    v10 = swift_unknownObjectWeakLoadStrong(v8, v9);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = objc_msgSend(v7, "splitBrowserViewController");
      v13 = objc_msgSend(v12, "doc_splitViewState");

      LODWORD(v12) = objc_msgSend(v13, "isSidebarShown");
      objc_msgSend(v11, "setNeverAllowShowingSystemTabs:", v12 ^ 1);
      v14 = objc_msgSend(v7, "splitBrowserViewController");
      objc_msgSend(v14, "toggleSidebarShown");

      v7 = v14;
    }

  }
}

void sub_10046D334()
{
  void *v0;
  void *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for UITraitOverrides(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, "traitCollection", v3);
  v7 = objc_msgSend(v1, "splitBrowserViewController");
  v8 = objc_msgSend(v7, "doc_splitViewState");

  LOBYTE(v7) = static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = objc_msgSend(v1, "configuration");
  v12 = v7 & 1;
  v13 = v6;
  v14 = static DOCTabSwitcherStyle.preferredStyle(for:traitCollection:splitState:)(v11, v6, v12, v10);

  UIViewController.traitOverrides.getter(v15);
  v20 = v14;
  v16 = sub_10046D630();
  v17 = sub_10046D674();
  dispatch thunk of UIMutableTraits.subscript.setter(&v20, &type metadata for DOCTabSwitcherStyleTrait, &type metadata for DOCTabSwitcherStyleTrait, v16, v17, v2, &protocol witness table for UITraitOverrides);
  v18 = objc_msgSend(v1, "splitBrowserViewController", UIViewController.traitOverrides.setter(v5).n128_f64[0]);
  UIViewController.traitOverrides.getter(v18);
  v20 = v14;
  dispatch thunk of UIMutableTraits.subscript.setter(&v20, &type metadata for DOCTabSwitcherStyleTrait, &type metadata for DOCTabSwitcherStyleTrait, v16, v17, v2, &protocol witness table for UITraitOverrides);
  UIViewController.traitOverrides.setter(v5);

}

unint64_t sub_10046D630()
{
  unint64_t result;

  result = qword_100656E30;
  if (!qword_100656E30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCTabSwitcherStyleTrait, &type metadata for DOCTabSwitcherStyleTrait);
    atomic_store(result, (unint64_t *)&qword_100656E30);
  }
  return result;
}

unint64_t sub_10046D674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100656E38;
  if (!qword_100656E38)
  {
    type metadata accessor for DOCTabSwitcherStyle(255);
    result = swift_getWitnessTable(&unk_1004D9260, v1);
    atomic_store(result, (unint64_t *)&qword_100656E38);
  }
  return result;
}

uint64_t sub_10046D6BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046D6E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10046D70C(uint64_t a1)
{
  uint64_t v1;

  sub_10046D218(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_10046D714(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return specialized _ArrayBuffer._getElementSlowPath(_:)(result, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_10046D76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10046D7E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v2 = *(void **)(v0 + 16);
  URL._bridgeToObjectiveC()((NSURL *)((v1 + 24) & ~v1));
  v4 = v3;
  objc_msgSend(v2, "presentConnectToServer:", v3);

}

void sub_10046D850()
{
  char *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  objc_class *v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  void *v14;
  objc_class *v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  void *Strong;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  void *object;
  id v34;
  int v35;
  objc_class *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  NSBundle v41;
  uint64_t v42;
  unint64_t v43;
  objc_class *v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  _BOOL8 v56;
  unint64_t v57;
  uint64_t v58;
  _BYTE v59[24];
  UIImage_optional v60;
  UIAction_optional v61;
  UIMenu_optional v62;
  Swift::String v63;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
  swift_beginAccess(v2 + 192, v59, 33, 0);
  v3 = *(objc_class **)(v2 + 200);
  if (v3)
  {
    v4 = v0;
    swift_retain(v2);
    v5 = v3;
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v6 = swift_allocObject(&unk_1005EE448, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v0);
    v7 = v0;
    v8 = swift_retain(v2);
    v60.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v8, 0, 0, 0, sub_10046DE70, v6);
    v60.value.super.isa = 0;
    v61.value.super.super.isa = 0;
    isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v60, v61, v62).super.super.isa;
    -[objc_class setStyle:](isa, "setStyle:", 2);
    *(_QWORD *)(v2 + 200) = isa;
    type metadata accessor for DOCBarButtonItemGroup();
    v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v11 = swift_allocObject(v10, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v11 + 32) = isa;
    v58 = v11;
    specialized Array._endMutation()(v11);
    v5 = isa;
    v12 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v58);
    swift_bridgeObjectRelease(v58);

    v3 = 0;
    *(_QWORD *)(v2 + 192) = v12;
  }
  v13 = v3;
  swift_endAccess(v59);
  swift_release(v2);

  v14 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (objc_msgSend(v14, "interactionMode") == (id)2)
  {
    v15 = (objc_class *)(id)_DocumentManagerBundle(2);
    if (!v15)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v16 = v15;
    v57 = 0x8000000100537D80;
    v17 = 1702256979;
    goto LABEL_22;
  }
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v19 = v18 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v19 + 16) & 1) != 0)
  {
    v20 = *(_QWORD *)(*(_QWORD *)v19 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v20);
  }
  else
  {
    v20 = *(_QWORD *)(v19 + 8);
    swift_unknownObjectRetain(v20);
    if (!v20)
    {
LABEL_17:
      v34 = objc_msgSend(v14, "forPickingFolders");
      v35 = (int)v34;
      v36 = (objc_class *)(id)_DocumentManagerBundle(v34);
      v16 = v36;
      if (v35)
      {
        if (!v36)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        v37 = 0xD000000000000026;
        v57 = 0x8000000100537D10;
        v17 = 1852141647;
        v38 = 0xE400000000000000;
        v39 = 0x617A696C61636F4CLL;
        v40 = 0xEB00000000656C62;
        v41.super.isa = v16;
        v42 = 0;
        v43 = 0xE000000000000000;
        goto LABEL_23;
      }
      if (!v36)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v17 = 1702260557;
      v57 = 0x8000000100537CF0;
LABEL_22:
      v38 = 0xE400000000000000;
      v39 = 0x617A696C61636F4CLL;
      v40 = 0xEB00000000656C62;
      v41.super.isa = v16;
      v42 = 0;
      v43 = 0xE000000000000000;
      v37 = 0xD00000000000001ALL;
LABEL_23:
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, *(Swift::String_optional *)&v39, v41, *(Swift::String *)&v42, *(Swift::String *)(&v57 + -8))._object;
      goto LABEL_24;
    }
  }
  ObjectType = swift_getObjectType(v20, v21);
  v16 = (objc_class *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  swift_unknownObjectRelease(v20);
  if (!v16)
    goto LABEL_17;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], v23);
  if (!Strong
    || (v25 = Strong,
        v26 = objc_msgSend(Strong, "pickerOperationFor:", v16),
        v27 = swift_unknownObjectRelease(v25),
        v26 != (id)1))
  {

    goto LABEL_17;
  }
  v28 = (id)_DocumentManagerBundle(v27);
  if (!v28)
  {
LABEL_39:
    __break(1u);
    return;
  }
  v29 = v28;
  v30._countAndFlagsBits = 0xD00000000000001BLL;
  v63._object = (void *)0x8000000100537D60;
  v30._object = (void *)0x8000000100537D40;
  v31.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v31.value._object = (void *)0xEB00000000656C62;
  v32._countAndFlagsBits = 2037411651;
  v32._object = (void *)0xE400000000000000;
  v63._countAndFlagsBits = 0xD00000000000001ALL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v63)._object;

LABEL_24:
  v44 = v5;
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  -[objc_class setTitle:](v44, "setTitle:", v45);

  v46 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v46)
  {
    __break(1u);
    goto LABEL_35;
  }
  v47 = v46 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v47 + 16) & 1) != 0)
  {
    v48 = *(_QWORD *)(*(_QWORD *)v47 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v48);
  }
  else
  {
    v48 = *(_QWORD *)(v47 + 8);
    swift_unknownObjectRetain(v48);
    if (!v48)
    {
LABEL_31:
      -[objc_class setEnabled:](v44, "setEnabled:", 0);
      return;
    }
  }
  v50 = swift_getObjectType(v48, v49);
  v51 = (void *)DOCNode.fpfs_syncFetchFPItem()(v50);
  swift_unknownObjectRelease(v48);
  if (!v51)
    goto LABEL_31;
  v53 = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], v52);
  if (v53)
  {
    v54 = v53;
    v55 = objc_msgSend(v53, "pickerOperationFor:", v51);
    swift_unknownObjectRelease(v54);
    v56 = v55 != 0;
  }
  else
  {
    v56 = 1;
  }
  -[objc_class setEnabled:](v44, "setEnabled:", v56);

}

uint64_t sub_10046DDFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10046DE20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10024BE54();

  }
}

void sub_10046DE70(uint64_t a1)
{
  uint64_t v1;

  sub_10046DE20(a1, v1);
}

SEL *NSProgress.totalUnitMb.setter(double a1)
{
  return sub_10046DE90((SEL *)&selRef_setTotalUnitCount_, a1);
}

SEL *NSProgress.completedUnitMb.setter(double a1)
{
  return sub_10046DE90((SEL *)&selRef_setCompletedUnitCount_, a1);
}

SEL *sub_10046DE90(SEL *result, double a2)
{
  void *v2;
  double v3;

  v3 = a2 * 1000000.0;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
    return (SEL *)objc_msgSend(v2, *result, (uint64_t)v3);
LABEL_7:
  __break(1u);
  return result;
}

double NSProgress.totalUnitMb.getter()
{
  void *v0;

  return (double)(uint64_t)objc_msgSend(v0, "totalUnitCount") / 1000000.0;
}

id *(*NSProgress.totalUnitMb.modify(uint64_t a1))(id *a1, char a2)
{
  void *v1;

  *(_QWORD *)(a1 + 8) = v1;
  *(double *)a1 = (double)(uint64_t)objc_msgSend(v1, "totalUnitCount") / 1000000.0;
  return sub_10046DF78;
}

id *sub_10046DF78(id *a1, char a2)
{
  return sub_10046E018(a1, a2, (SEL *)&selRef_setTotalUnitCount_);
}

double NSProgress.completedUnitMb.getter()
{
  void *v0;

  return (double)(uint64_t)objc_msgSend(v0, "completedUnitCount") / 1000000.0;
}

id *(*NSProgress.completedUnitMb.modify(uint64_t a1))(id *a1, char a2)
{
  void *v1;

  *(_QWORD *)(a1 + 8) = v1;
  *(double *)a1 = (double)(uint64_t)objc_msgSend(v1, "completedUnitCount") / 1000000.0;
  return sub_10046E00C;
}

id *sub_10046E00C(id *a1, char a2)
{
  return sub_10046E018(a1, a2, (SEL *)&selRef_setCompletedUnitCount_);
}

id *sub_10046E018(id *result, char a2, SEL *a3)
{
  double v3;
  BOOL v4;

  v3 = *(double *)result * 1000000.0;
  v4 = (*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000;
  if ((a2 & 1) == 0)
    goto LABEL_6;
  if ((*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = v3 == 9.22337204e18;
  if (v3 < 9.22337204e18)
    return (id *)objc_msgSend(result[1], *a3, (uint64_t)v3);
  __break(1u);
LABEL_6:
  if (v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 9.22337204e18)
    return (id *)objc_msgSend(result[1], *a3, (uint64_t)v3);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCProgressUI()
{
  return objc_opt_self(_TtC5Files13DOCProgressUI);
}

objc_class *sub_10046E0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  objc_class *result;
  objc_class *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  NSBundle v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t countAndFlagsBits;
  unint64_t v20;

  if (!a1)
    goto LABEL_7;
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSProgressFileOperationKindCopying);
  if (v1 == v4 && v3 == v5)
  {
    a1 = swift_bridgeObjectRelease_n(v3, 2);
  }
  else
  {
    v7 = v5;
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
    swift_bridgeObjectRelease(v3);
    a1 = swift_bridgeObjectRelease(v7);
    if ((v8 & 1) == 0)
    {
LABEL_7:
      result = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (result)
      {
        v10 = result;
        v11 = 0xD00000000000005ALL;
        v20 = 0x8000000100537DC0;
        v12 = 0x6E69726170657250;
        v13 = 0xAC000000A680E267;
        v14 = 0x617A696C61636F4CLL;
        v15 = 0xEB00000000656C62;
        v16.super.isa = v10;
        v17 = 0x6E69726170657250;
        v18 = 0xAC000000A680E267;
LABEL_12:
        countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, *(Swift::String_optional *)&v14, v16, *(Swift::String *)&v17, *(Swift::String *)&v11)._countAndFlagsBits;

        return (objc_class *)countAndFlagsBits;
      }
      __break(1u);
      goto LABEL_14;
    }
  }
  result = (objc_class *)(id)_DocumentManagerBundle(a1);
  if (result)
  {
    v10 = result;
    v20 = 0x8000000100537E40;
    v13 = 0x8000000100537E20;
    v12 = 0x1000000000000014;
    v14 = 0x617A696C61636F4CLL;
    v15 = 0xEB00000000656C62;
    v16.super.isa = v10;
    v17 = 0x1000000000000014;
    v18 = 0x8000000100537E20;
    v11 = 0xD000000000000047;
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
  return result;
}

id DOCPreviewController.__allocating_init()()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return DOCPreviewController.init()();
}

uint64_t sub_10046E2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id DOCQLItemsPreviewController.__allocating_init(previewItems:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DOCQLItemsPreviewController.init(previewItems:)(a1);
}

{
  objc_class *v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone(v1);
  sub_10006922C(&qword_10064EB80);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithPreviewItems:", isa, swift_bridgeObjectRelease(a1).n128_f64[0]);

  return v5;
}

id sub_10046E388@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "currentPreviewItemIndex");
  *a2 = result;
  return result;
}

id sub_10046E3B8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setCurrentPreviewItemIndex:", *a1);
}

void DOCDocumentManager.previewController(_:import:nextTo:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1004752C0(a2, a3, a4, a5);
}

void sub_10046E3E0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  _QWORD aBlock[5];
  uint64_t v71;
  uint64_t v72;

  v3 = v2;
  v69 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v66 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTimeInterval(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for DispatchTime(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = &v3[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  v23 = v3[OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16];
  if (v23 == 255)
    return;
  v64 = v8;
  v65 = v6;
  v24 = *(_QWORD *)v22;
  v25 = (void *)*((_QWORD *)v22 + 1);
  if ((v23 & 1) != 0)
  {
    sub_100323BA0(*(_QWORD *)v22, *((void **)v22 + 1), 1);

    swift_bridgeObjectRelease(v24);
    return;
  }
  v62 = v19;
  v63 = v11;
  v60 = v21;
  v61 = (char *)&v56 - v20;
  v72 = v24;
  sub_100323BA0(v24, v25, 0);
  sub_100323BA0(v24, v25, 0);
  v26 = sub_1001743BC(a2, v24);
  v28 = v27;
  sub_100323BCC(v24, v25, v23);
  if ((v28 & 1) != 0)
    v30 = objc_msgSend(v3, "currentPreviewItemIndex");
  else
    v30 = (id)v26;
  v31 = (uint64_t)v30 + 1;
  v32 = v63;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
  }
  else
  {
    v58 = (unint64_t)v30;
    v59 = v5;
    v29 = v24 & 0xFFFFFFFFFFFFFF8;
    if (!((unint64_t)v24 >> 62))
    {
      v33 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = (uint64_t)v69;
      v35 = v69;
      if (v33 >= v31)
        goto LABEL_10;
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
  }
  if (v24 < 0)
    v29 = v24;
  v57 = v29;
  sub_1003EF2CC((id)v24, v25, v23);
  v53 = v69;
  v54 = _CocoaArrayWrapper.endIndex.getter(v57);
  v55 = v25;
  v34 = (uint64_t)v69;
  sub_100323BCC(v24, v55, v23);
  if (v54 < v31)
    goto LABEL_20;
LABEL_10:
  if (v31 < 0)
  {
LABEL_21:
    __break(1u);
    return;
  }
  sub_1004594F0(v31, v31, v34);
  v36 = v72;
  DOCPreviewController.set(_:defaultIndex:)(v72, 0, 0, v58, 0);
  if (objc_msgSend(v3, "respondsToSelector:", "setCurrentPreviewItemIndex:animated:", swift_bridgeObjectRelease(v36).n128_f64[0]))objc_msgSend(v3, "setCurrentPreviewItemIndex:animated:", v31, 1);
  else
    objc_msgSend(v3, "setCurrentPreviewItemIndex:", v31);
  v37 = v59;
  v38 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v69 = (id)static OS_dispatch_queue.main.getter(v38);
  static DispatchTime.now()(v69);
  *v14 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchTimeInterval.seconds(_:), v32);
  v39 = v61;
  + infix(_:_:)(v17, v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v32);
  v40 = *(void (**)(char *, uint64_t))(v60 + 8);
  v41 = v62;
  v40(v17, v62);
  v42 = swift_allocObject(&unk_1005EE8D8, 24, 7);
  *(_QWORD *)(v42 + 16) = v3;
  aBlock[4] = sub_100476C30;
  v71 = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EE8F0;
  v43 = _Block_copy(aBlock);
  v44 = v71;
  v45 = v3;
  swift_release(v44);
  v46 = v66;
  static DispatchQoS.unspecified.getter(v47);
  aBlock[0] = _swiftEmptyArrayStorage;
  v48 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v49 = sub_10006922C((uint64_t *)&unk_100647540);
  v50 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v51 = v64;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v49, v50, v37, v48);
  v52 = v69;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v39, v46, v51, v43);
  _Block_release(v43);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v51, v37);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v68);
  v40(v39, v41);
}

uint64_t sub_10046E8D8(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  NSURL *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;

  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v14 = (char *)&v27 - v13;
  if ((a4 & 1) != 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      if (*(_QWORD *)(a2 + 16) > a1)
      {
        type metadata accessor for URL(0);
        v19 = objc_allocWithZone((Class)QLItem);
        URL._bridgeToObjectiveC()(v20);
        v22 = v21;
        v23 = objc_msgSend(v19, "initWithURL:", v21);

        return (uint64_t)v23;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, a2);
    goto LABEL_6;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15 = *(id *)(a2 + 8 * a1 + 32);
LABEL_6:
  v16 = v15;
  v17 = objc_msgSend(objc_allocWithZone((Class)QLItem), "initWithFPItem:", v15);
  if ((a2 & 0xC000000000000001) != 0)
    v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, a2);
  else
    v18 = *(id *)(a2 + 8 * a1 + 32);
  v24 = v18;
  v25 = objc_msgSend(v18, "contentType");

  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v25);
  static UTType.pdf.getter();
  LOBYTE(v24) = UTType.conforms(to:)(v11);
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v11, v7);
  v26(v14, v7);
  objc_msgSend(v17, "setUseFullPDFTransition:", v24 & 1);

  return (uint64_t)v17;
}

uint64_t sub_10046EAF0(uint64_t a1, void *a2, char a3)
{
  char v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  double v22;
  unsigned __int8 v23;
  id v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;

  v3 = a3;
  v4 = a2;
  if ((a3 & 1) == 0)
  {
    v6 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)a1 >> 62)
      goto LABEL_21;
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    while (v7)
    {
      v8 = DOCLocalStorageFileProviderIdentifier;
      v9 = 4;
      while (1)
      {
        v10 = (a1 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1)
            : *(id *)(a1 + 8 * v9);
        v11 = v10;
        v12 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
          break;
        v13 = objc_msgSend(v10, "providerDomainID");
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v16 = v15;

        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        if (v14 == v17 && v16 == v18)
        {
          swift_bridgeObjectRelease_n(v16, 2);
        }
        else
        {
          v20 = v18;
          v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
          swift_bridgeObjectRelease(v16);
          *(_QWORD *)&v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
          if ((v21 & 1) == 0)
          {

            goto LABEL_6;
          }
        }
        v23 = objc_msgSend(v11, "doc_isAppContainerRoot", v22);

        if ((v23 & 1) != 0)
        {
          sub_100323BE4(a1, a2, 0);
          return 0;
        }
LABEL_6:
        ++v9;
        if (v12 == v7)
          goto LABEL_25;
      }
      __break(1u);
LABEL_21:
      if (a1 >= 0)
        v25 = v6;
      else
        v25 = a1;
      swift_bridgeObjectRetain(a1);
      v7 = _CocoaArrayWrapper.endIndex.getter(v25);
    }
LABEL_25:
    v4 = a2;
    sub_100323BE4(a1, a2, 0);
    v3 = a3;
  }
  v26 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  if (!objc_msgSend(v26, "hasOpenInRestrictions"))
  {

    return 1;
  }
  if ((v3 & 1) != 0)
  {
    v28 = v4;
    v29 = objc_msgSend(v28, "providerDomain");
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v29, "topLevelBundleIdentifier");

      static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v33 = v32;

      v34 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend(v26, "canCopyfromContainingBundleIdentifer:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

      return (uint64_t)v24;
    }

    return 1;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v26, "canCopyItems:", isa);

  return (uint64_t)v24;
}

id DOCQLItemsPreviewController.init(previewItems:)(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v2 = v1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files27DOCQLItemsPreviewController__nonSourceBasedQLItems] = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = sub_10006922C(&qword_10064EB80);
    v5 = _bridgeCocoaArray<A>(_:)(v9, v10);
  }
  else
  {
    v4 = swift_bridgeObjectRetain_n(a1, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    v5 = a1;
  }
  swift_bridgeObjectRelease(a1);
  sub_10006922C(&qword_10064EB80);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for DOCQLItemsPreviewController();
  v7 = objc_msgSendSuper2(&v11, "initWithPreviewItems:", isa);

  return v7;
}

id DOCQLItemsPreviewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  NSString v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files27DOCQLItemsPreviewController__nonSourceBasedQLItems] = _swiftEmptyArrayStorage;
  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DOCQLItemsPreviewController();
  v7 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", v6, a3);

  return v7;
}

void DOCQLItemsPreviewController.init(previewItems:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCQLItemsPreviewController", 33, "init(previewItems:)", 19, 0);
  __break(1u);
}

id DOCQLItemsPreviewController.__deallocating_deinit(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCQLItemsPreviewController);
}

uint64_t DOCPreviewController.editingDelegate.getter()
{
  return sub_10046F1F4(&OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate);
}

uint64_t DOCPreviewController.editingDelegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_10046F248(a1, a2, &OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate);
}

uint64_t (*DOCPreviewController.editingDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  v8 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_10046F1E4;
}

uint64_t DOCPreviewController.visibilityDelegate.getter()
{
  return sub_10046F1F4(&OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate);
}

uint64_t sub_10046F1F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = v1 + *a1;
  swift_beginAccess(v2, v5, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v2, v3);
}

uint64_t DOCPreviewController.visibilityDelegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_10046F248(a1, a2, &OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate);
}

uint64_t sub_10046F248(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  _BYTE v8[24];

  v6 = v3 + *a3;
  swift_beginAccess(v6, v8, 1, 0);
  *(_QWORD *)(v6 + 8) = a2;
  swift_unknownObjectWeakAssign(v6, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*DOCPreviewController.visibilityDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  v8 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_10046F1E4;
}

void sub_10046F320(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t DOCPreviewController.actionManager.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager, v4, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1, v2);
}

void DOCPreviewController.actionManager.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*DOCPreviewController.actionManager.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_10046F4A0;
}

void sub_10046F4A0(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign((char *)(*a1)[5] + (_QWORD)(*a1)[4], v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);

  }
  free(v3);
}

void *DOCPreviewController.configuration.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void DOCPreviewController.configuration.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*DOCPreviewController.configuration.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration, a1, 33, 0);
  return j__swift_endAccess;
}

void DOCPreviewController.set(_:defaultIndex:)(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, int a5)
{
  char *v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v11;
  int v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  int v31;
  unint64_t v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, _QWORD *);
  char *v38;
  void (*v39)(uint64_t);
  char *v40;
  BOOL v41;
  _QWORD *v42;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  unint64_t v45;
  id v46;
  void *v47;
  char v48;
  char v49;
  void *v50;
  char v51;
  uint64_t v52;
  int v53;
  id v54;
  uint64_t v55;
  void *v56;
  unsigned __int8 v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSString v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  void *v70;
  void *v71;
  unsigned __int8 v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  int v76;
  void *v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, _QWORD *);
  void (*v85)(char *, unint64_t, _QWORD *);
  char *v86;
  uint64_t v87;
  _QWORD *v88;

  v7 = v5;
  v78 = a5;
  v80 = a4;
  v8 = a3;
  v11 = 0;
  LOBYTE(v12) = -1;
  LODWORD(v13) = ~(_BYTE)a3;
  v14 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v14);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)type metadata accessor for URL(0);
  v82 = *(v17 - 1);
  v18 = __chkstk_darwin(v17);
  v86 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v81 = (char *)&v74 - v20;
  if (!(_DWORD)v13)
  {
    v31 = 1;
    v6 = 0;
LABEL_55:
    v68 = &v7[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
    v69 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
    v70 = *(void **)&v7[OBJC_IVAR____TtC5Files20DOCPreviewController_source + 8];
    *(_QWORD *)v68 = a1;
    *((_QWORD *)v68 + 1) = a2;
    v71 = a2;
    v72 = v68[16];
    v68[16] = v12;
    sub_1003EF2CC((id)a1, v71, v12);
    sub_100323BCC(v69, v70, v72);
    objc_msgSend(v7, "setIsContentManaged:", v13 & 1);
    objc_msgSend(v7, "reloadData");
    if (v31)
      v73 = 0;
    else
      v73 = v6;
    objc_msgSend(v7, "setCurrentPreviewItemIndex:", v73, v74);
    sub_100323BCC(a1, v71, v12);
    return;
  }
  v87 = a1;
  v77 = a2;
  v21 = v8;
  if ((v8 & 1) != 0)
  {
    v88 = _swiftEmptyArrayStorage;
    v32 = *(_QWORD *)(a1 + 16);
    sub_1003EF2CC((id)a1, a2, v8);
    v33 = a2;
    swift_bridgeObjectRetain(a1);
    v74 = v32;
    if (v32)
    {
      v34 = v32;
      v76 = v8;
      v75 = v7;
      v8 = (uint64_t)v81;
      v23 = v82;
      v79 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      v35 = a1 + v79;
      v6 = *(_QWORD *)(v82 + 72);
      v85 = *(void (**)(char *, unint64_t, _QWORD *))(v82 + 16);
      v36 = v34;
      v85(v16, a1 + v79, v17);
      while (1)
      {
        v37 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v23 + 56);
        v37(v16, 0, 1, v17);
        if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v23 + 48))(v16, 1, v17) == 1)
        {
          v7 = v75;
          v21 = v76;
          goto LABEL_37;
        }
        v84 = v37;
        v38 = v16;
        v39 = *(void (**)(uint64_t))(v23 + 32);
        v40 = v38;
        v39(v8);
        v41 = sub_10046FD68(v8);
        if (v11)
          goto LABEL_65;
        if (v41)
        {
          ((void (*)(char *, uint64_t, _QWORD *))v39)(v86, v8, v17);
          v42 = v88;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v88);
          v83 = 0;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100154E04(0, v42[2] + 1, 1);
            v42 = v88;
          }
          v45 = v42[2];
          v44 = v42[3];
          if (v45 >= v44 >> 1)
          {
            sub_100154E04(v44 > 1, v45 + 1, 1);
            v42 = v88;
          }
          v42[2] = v45 + 1;
          ((void (*)(char *, char *, _QWORD *))v39)((char *)v42 + v79 + v45 * v6, v86, v17);
          v88 = v42;
          a1 = v87;
          v8 = (uint64_t)v81;
          v23 = v82;
          v11 = v83;
        }
        else
        {
          (*(void (**)(uint64_t, _QWORD *))(v23 + 8))(v8, v17);
        }
        v35 += v6;
        --v36;
        v16 = v40;
        if (!v36)
          break;
        v85(v40, v35, v17);
      }
      v7 = v75;
      v21 = v76;
      v84(v40, 1, 1, v17);
    }
    else
    {
      v23 = v82;
      (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v82 + 56))(v16, 1, 1, v17);
    }
LABEL_37:
    swift_bridgeObjectRelease(a1);
    sub_10000CB4C((uint64_t)v16, &qword_100643470);
    v8 = (uint64_t)v88;
    a2 = v77;
    if ((v78 & 1) != 0)
    {
      LODWORD(v86) = 1;
      v50 = v77;
      v6 = v80;
      goto LABEL_47;
    }
    if (v74 > v80)
    {
      v6 = sub_1001743D0(a1+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v80, (uint64_t)v88);
      LODWORD(v86) = v51 & 1;
      v50 = a2;
      goto LABEL_47;
    }
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v88 = _swiftEmptyArrayStorage;
  v22 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a1 >> 62))
  {
    v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1003EF2CC((id)a1, a2, v8);
    sub_100323BA0(a1, a2, 0);
    v6 = v80;
    if (v23)
      goto LABEL_5;
LABEL_45:
    sub_100323BCC(a1, a2, v8);
    v8 = (uint64_t)_swiftEmptyArrayStorage;
    if ((v78 & 1) == 0)
      goto LABEL_29;
    goto LABEL_46;
  }
  if (a1 >= 0)
    v52 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v52 = a1;
  sub_1003EF2CC((id)a1, a2, v8);
  sub_100323BA0(a1, a2, 0);
  v23 = _CocoaArrayWrapper.endIndex.getter(v52);
  v6 = v80;
  if (!v23)
    goto LABEL_45;
LABEL_5:
  v75 = v7;
  if (v23 < 1)
  {
    __break(1u);
    goto LABEL_61;
  }
  v24 = 0;
  v25 = a1 & 0xC000000000000001;
  do
  {
    if (v25)
      v29 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, a1);
    else
      v29 = *(id *)(a1 + 8 * v24 + 32);
    v17 = v29;
    v30 = objc_msgSend(v29, "isFolder");
    if ((v30 & 1) != 0)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
      v26 = v88[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
      v27 = v26;
      a1 = v87;
      v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v17);
      specialized ContiguousArray._endMutation()(v28);
    }
    ++v24;
  }
  while (v23 != v24);
  a2 = v77;
  v21 = v8;
  sub_100323BCC(a1, v77, v8);
  v8 = (uint64_t)v88;
  v7 = v75;
  v6 = v80;
  if ((v78 & 1) != 0)
  {
LABEL_46:
    v50 = 0;
    LODWORD(v86) = 1;
LABEL_47:
    v53 = v21;
    v12 = v21 & 1;
    v13 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
    if (objc_msgSend(v13, "hasOpenInRestrictions"))
    {
      v76 = v53;
      if (!v12)
      {
        v54 = v13;
        sub_100323BA0(v8, v50, 0);
        LOBYTE(v13) = sub_100474E50(v8, v54);

        sub_100323BCC(a1, v77, v76);
        sub_100323BE4(v8, v50, 0);
LABEL_54:
        a1 = v8;
        a2 = v50;
        v31 = (int)v86;
        goto LABEL_55;
      }
      v58 = v50;
      v59 = objc_msgSend(v58, "providerDomain");
      if (v59)
      {
        v60 = v59;
        v61 = objc_msgSend(v59, "topLevelBundleIdentifier");

        static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
        v62 = v6;
        v64 = v63;

        v65 = String._bridgeToObjectiveC()();
        v66 = v64;
        v6 = v62;
        swift_bridgeObjectRelease(v66);
        v67 = objc_msgSend(v13, "dataOwnerStateForBundleIdentifier:", v65);

        sub_100323BCC(v87, v77, v76);
        LOBYTE(v13) = v67 == (id)1;
        goto LABEL_54;
      }

      v55 = a1;
      v56 = v77;
      v57 = v76;
    }
    else
    {

      v55 = a1;
      v56 = a2;
      v57 = v53;
    }
    sub_100323BCC(v55, v56, v57);
    LOBYTE(v13) = 0;
    goto LABEL_54;
  }
LABEL_29:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_62:
    v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
    goto LABEL_33;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v22 + 16) > v6)
  {
    v46 = *(id *)(a1 + 8 * v6 + 32);
LABEL_33:
    v47 = v46;
    v6 = sub_1001743BC((uint64_t)v46, v8);
    v49 = v48;

    v50 = 0;
    LODWORD(v86) = v49 & 1;
    a2 = v77;
    goto LABEL_47;
  }
  __break(1u);
LABEL_65:
  (*(void (**)(uint64_t, _QWORD *))(v23 + 8))(v8, v17);
  swift_bridgeObjectRelease(a1);
  swift_release(v88);
  __break(1u);
}

BOOL sub_10046FD68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSURL *v11;
  void *v12;
  void *v13;
  unsigned int v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  int v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char v24;
  _BOOL8 v25;
  _QWORD v27[2];
  _BOOL4 v28;
  id v29;
  uint64_t v30;

  v2 = sub_10006922C(&qword_100643EC0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)v27 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)v27 - v9;
  v28 = URL.startAccessingSecurityScopedResource()();
  v27[1] = a1;
  URL._bridgeToObjectiveC()(v11);
  v13 = v12;
  v29 = 0;
  v30 = 0;
  v14 = objc_msgSend(v12, "getPromisedItemResourceValue:forKey:error:", &v30, NSURLContentTypeKey, &v29);

  v15 = v29;
  v16 = v30;
  if (v14)
  {
    v17 = v29;
    swift_unknownObjectRetain(v16);
    if (v16)
    {
LABEL_3:
      v30 = v16;
      v18 = type metadata accessor for UTType(0);
      swift_unknownObjectRetain(v16);
      v19 = swift_dynamicCast(v10, &v30, (char *)&type metadata for Swift.AnyObject + 8, v18, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, v19 ^ 1u, 1, v18);
      goto LABEL_6;
    }
  }
  else
  {
    v20 = v29;
    swift_unknownObjectRetain(v16);
    v21 = _convertNSErrorToError(_:)(v15);

    swift_willThrow();
    swift_errorRelease(v21);
    if (v16)
      goto LABEL_3;
  }
  v18 = type metadata accessor for UTType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
LABEL_6:
  sub_1000271D4((uint64_t)v10, (uint64_t)v8, &qword_100643EC0);
  type metadata accessor for UTType(0);
  v22 = *(_QWORD *)(v18 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v8, 1, v18) == 1)
  {
    sub_10000CB4C((uint64_t)v8, &qword_100643EC0);
    sub_1000271D4((uint64_t)v10, (uint64_t)v5, &qword_100643EC0);
LABEL_9:
    v25 = v23(v5, 1, v18) == 1;
    goto LABEL_11;
  }
  v24 = UTType.isFolderUTI.getter();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v18);
  sub_1000271D4((uint64_t)v10, (uint64_t)v5, &qword_100643EC0);
  if ((v24 & 1) != 0)
    goto LABEL_9;
  v25 = 1;
LABEL_11:
  sub_10000CB4C((uint64_t)v5, &qword_100643EC0);
  sub_10000CB4C((uint64_t)v10, &qword_100643EC0);
  swift_unknownObjectRelease(v16);
  if (v28)
    URL.stopAccessingSecurityScopedResource()();
  return v25;
}

id DOCPreviewController.delegate.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCPreviewController(0);
  return objc_msgSendSuper2(&v2, "delegate");
}

double DOCPreviewController.delegate.setter(void *a1)
{
  void *v1;
  void *v2;
  double result;
  objc_super v4;

  if (a1)
  {
    v2 = a1;
  }
  else
  {
    swift_unknownObjectRetain(v1);
    v2 = v1;
  }
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DOCPreviewController(0);
  objc_msgSendSuper2(&v4, "setDelegate:", v2);
  *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  return result;
}

id DOCPreviewController.keyCommands.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  id result;
  void *v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  unint64_t countAndFlagsBits;
  NSString v20;
  uint64_t v21;
  id v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  BOOL v36;
  objc_super v37;
  Swift::String v38;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for DOCPreviewController(0);
  v1 = objc_msgSendSuper2(&v37, "keyCommands");
  if (v1)
  {
    v2 = v1;
    v3 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = (uint64_t)_swiftEmptyArrayStorage;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = (void *)objc_opt_self(UIKeyCommand);
  v9 = objc_msgSend(v8, "keyCommandWithInput:modifierFlags:action:", v7, 0, "dismissViaKeyCommand");

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "keyCommandWithInput:modifierFlags:action:", v10, 0, "dismissViaKeyCommand");

  result = (id)_DocumentManagerBundle(v12);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v14 = result;
  v38._object = (void *)0x8000000100537EE0;
  v15._countAndFlagsBits = 0x207373696D736944;
  v15._object = (void *)0xEF77656976657250;
  v16.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v16.value._object = (void *)0xEB00000000656C62;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0xD00000000000003ALL;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v38);
  countAndFlagsBits = v18._countAndFlagsBits;

  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setDiscoverabilityTitle:", v20, swift_bridgeObjectRelease(v18._object).n128_f64[0]);

  if (!((unint64_t)v4 >> 62))
  {
    v21 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v22 = v11;
    v23 = v9;
    swift_bridgeObjectRetain(v4);
    v25 = v21 + 2;
    if (!__OFADD__(v21, 2))
      goto LABEL_7;
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v4 < 0)
    v32 = v4;
  else
    v32 = v4 & 0xFFFFFFFFFFFFFF8;
  v33 = v11;
  v34 = v9;
  swift_bridgeObjectRetain(v4);
  v35 = _CocoaArrayWrapper.endIndex.getter(v32);
  v36 = __OFADD__(v35, 2);
  v25 = v35 + 2;
  if (v36)
    goto LABEL_16;
LABEL_7:
  v26 = sub_100088994(v25, 1);
  specialized Array._endMutation()(v26);
  v11 = v11;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
  countAndFlagsBits = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v24 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (countAndFlagsBits >= v24 >> 1)
LABEL_17:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, countAndFlagsBits + 1, 1);
  v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(countAndFlagsBits, v11);
  specialized Array._endMutation()(v27);
  v28 = v9;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
  specialized Array._endMutation()(v31);
  swift_bridgeObjectRelease(v4);

  return (id)v4;
}

uint64_t DOCPreviewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void **v10;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  objc_super v20;
  _QWORD v21[3];
  uint64_t v22;

  v5 = objc_msgSend(v2, "presentedViewController");
  if (!v5
    || (v6 = v5,
        v7 = objc_opt_self(UINavigationController),
        v8 = swift_dynamicCastObjCClass(v6, v7),
        v6,
        !v8))
  {
    if ((static Selector.== infix(_:_:)("duplicate:", a1) & 1) != 0)
    {
      v10 = (void **)&FPActionCopy;
    }
    else
    {
      if ((static Selector.== infix(_:_:)("move:", a1) & 1) == 0)
      {
        sub_1000271D4(a2, (uint64_t)v21, &qword_100642730);
        v12 = v22;
        if (v22)
        {
          v13 = sub_10007E7A0(v21, v22);
          v14 = *(_QWORD *)(v12 - 8);
          v15 = __chkstk_darwin(v13);
          v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v14 + 16))(v17, v15);
          v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v12);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
          sub_100068588(v21);
        }
        else
        {
          v18 = 0;
        }
        v19 = (objc_class *)type metadata accessor for DOCPreviewController(0);
        v20.receiver = v2;
        v20.super_class = v19;
        v9 = objc_msgSendSuper2(&v20, "canPerformAction:withSender:", a1, v18);
        swift_unknownObjectRelease(v18);
        return (uint64_t)v9;
      }
      v10 = (void **)&FPActionReparent;
    }
    return sub_1003EBBBC(*v10);
  }
  return 0;
}

double DOCPreviewController.duplicate(_:)()
{
  void *v0;
  id v1;
  double result;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v1 = objc_msgSend(v0, "currentPreviewItem");
  if (v1)
  {
    v3 = v1;
    v4 = objc_opt_self(QLItem);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5 && (v6 = objc_msgSend(v5, "fpItem")) != 0)
    {
      v7 = v6;
      v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v9 = objc_msgSend(v7, "itemID");
      v10 = swift_allocObject(&unk_1005EE470, 32, 7);
      *(_QWORD *)(v10 + 16) = v7;
      *(_QWORD *)(v10 + 24) = v0;
      v15[4] = sub_1004754C8;
      v16 = v10;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 1107296256;
      v15[2] = sub_10013103C;
      v15[3] = &unk_1005EE488;
      v11 = _Block_copy(v15);
      v12 = v16;
      v13 = v7;
      v14 = v0;
      objc_msgSend(v8, "fetchParentsForItemID:recursively:completionHandler:", v9, 0, v11, swift_release(v12).n128_f64[0]);
      _Block_release(v11);
      swift_unknownObjectRelease(v3);

    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
    }
  }
  return result;
}

id sub_100470A10()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 5, 0);
  qword_100656EE0 = (uint64_t)result;
  return result;
}

void static DOCPreviewController.clearSharedController(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  if (a1)
  {
    v1 = qword_1006411A8;
    v3 = a1;
    if (v1 != -1)
      swift_once(&qword_1006411A8, sub_100470A10);
    objc_msgSend((id)qword_100656EE0, "removeObjectForKey:");
  }
  else
  {
    v3 = *(id *)DOCLog.Source.unsafeMutableAddressor();
    v2 = static os_log_type_t.debug.getter(v3);
    os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v3, v2, _swiftEmptyArrayStorage);
  }

}

id DOCPreviewController.init()()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  objc_super v9;

  v1 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v2 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = 0;
  v3 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = -1;
  v4 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction] = 0;
  v0[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity] = 0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for DOCPreviewController(0);
  v7 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v7, "setDelegate:", v7);
  objc_msgSend(v7, "setDataSource:", v7);
  objc_msgSend(v7, "setAlwaysDisplayPreviewItemTitle:", 1);

  return v7;
}

Swift::Void __swiftcall DOCPreviewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_super v8;

  v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DOCPreviewController(0);
  objc_msgSendSuper2(&v8, "viewWillAppear:", a1);
  KeyPath = swift_getKeyPath(&unk_1004E9D18);
  v5 = swift_allocObject(&unk_1005EE4C0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16);
  v6 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 7, sub_100475538, v5, &protocol witness table for NSObject);
  swift_release(v5);
  swift_release(KeyPath);
  v7 = *(void **)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_observation];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = v6;

  sub_1004713FC();
}

void sub_100470E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t Strong;
  char *v18;
  _BYTE *v19;
  double v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _BYTE v41[24];
  char v42[24];
  char v43[24];

  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v7);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for DOCFileEntity(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v41[-v15 - 8];
  a3 += 16;
  swift_beginAccess(a3, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v18 = (char *)Strong;
    v19 = (_BYTE *)(Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity);
    *(_QWORD *)&v20 = swift_beginAccess(Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity, v42, 0, 0).n128_u64[0];
    if (*v19 == 1)
    {
      v21 = objc_msgSend(v18, "currentPreviewItem", v20);
      if (v21)
      {
        v22 = v21;
        v23 = objc_opt_self(QLItem);
        v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
        if (v24 && (v25 = objc_msgSend(v24, "fpItem")) != 0)
        {
          v26 = v25;
          type metadata accessor for DOCUserActivityController(0);
          v40 = v22;
          v27 = swift_allocObject(&unk_1005EE4C0, 24, 7);
          swift_unknownObjectWeakInit(v27 + 16);
          v28 = swift_retain();
          v29.n128_f64[0] = static DOCUserActivityController.userActivityFor(item:completion:)(v26, sub_100476AB0, v27, v28);
          swift_release_n(v27, 2, v29);
          v30 = v26;
          sub_10012BCCC(v30, (uint64_t)v16);
          v31 = type metadata accessor for TaskPriority(0);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
          sub_1000EACB4((uint64_t)v16, (uint64_t)v13);
          type metadata accessor for MainActor(0);
          v32 = v18;
          v33 = static MainActor.shared.getter(v32);
          v34 = *(unsigned __int8 *)(v11 + 80);
          v35 = (v34 + 40) & ~v34;
          v36 = (_QWORD *)swift_allocObject(&unk_1005EE860, v35 + v12, v34 | 7);
          v36[2] = v33;
          v36[3] = &protocol witness table for MainActor;
          v36[4] = v32;
          sub_10011154C((uint64_t)v13, (uint64_t)v36 + v35);
          v37 = sub_100174E78((uint64_t)v9, (uint64_t)&unk_100657060, (uint64_t)v36);

          swift_release(v37);
          swift_unknownObjectRelease(v40);
          sub_1000EACF8((uint64_t)v16);
        }
        else
        {
          swift_unknownObjectRelease(v22);
        }
      }
    }
    sub_100472264();
    v38 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v6, 1, 1, v38);
    v39 = (uint64_t)&v18[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
    swift_beginAccess(&v18[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL], v41, 33, 0);
    sub_100118024((uint64_t)v6, v39);
    swift_endAccess(v41);

  }
}

Swift::Void __swiftcall DOCPreviewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];
  objc_super v11;

  v3 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (objc_class *)type metadata accessor for DOCPreviewController(0);
  v11.receiver = v1;
  v11.super_class = v6;
  objc_msgSendSuper2(&v11, "viewDidAppear:", a1);
  sub_100472264();
  v7 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (uint64_t)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL], v10, 33, 0);
  sub_100118024((uint64_t)v5, v8);
  swift_endAccess(v10);
}

void sub_1004713FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;

  v1 = v0;
  v2 = swift_allocObject(&unk_1005EE4C0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = swift_allocObject(&unk_1005EE838, 32, 7);
  *(_QWORD *)(v3 + 16) = &unk_100657038;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = objc_allocWithZone((Class)type metadata accessor for UIAppIntentInteraction(0));
  v5 = sub_10038A0EC();
  v7 = UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for NavigateQuickLookIntent, &unk_100657048, v3, &type metadata for NavigateQuickLookIntent, v5, v6);
  v8 = OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction;
  v9 = *(void **)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction] = v7;

  v10 = *(void **)&v1[v8];
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v1, "view");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "addInteraction:", v11);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100471518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[8] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100471588, v5, v6);
}

_QWORD *sub_100471588()
{
  _QWORD *v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _QWORD *result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  _QWORD *v12;

  v1 = v0[7];
  swift_release(v0[8]);
  v1 += 16;
  swift_beginAccess(v1, v0 + 2, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
  {
    v7 = sub_10021CAC4();
    v8 = swift_allocError(&type metadata for DOCLinkDeferredLocalizedError, v7, 0, 0);
    *v9 = 2;
    swift_willThrow(v8);
    v10 = (uint64_t (*)(void))v0[1];
    return (_QWORD *)v10();
  }
  v3 = Strong;
  v4 = objc_msgSend(Strong, "currentPreviewItemIndex");
  result = IntentParameter.wrappedValue.getter(v0 + 9);
  if ((v0[9] & 1) != 0)
  {
    result = objc_msgSend(v3, "numberOfPreviewItems");
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!__OFSUB__(result, 1))
    {
      if ((uint64_t)result - 1 >= (uint64_t)v4 + 1)
        v6 = (uint64_t)v4 + 1;
      else
        v6 = (uint64_t)result - 1;
LABEL_11:
      objc_msgSend(v3, "setCurrentPreviewItemIndex:", v6);
      if (v4 != objc_msgSend(v3, "currentPreviewItemIndex"))
        objc_msgSend(v3, "refreshCurrentPreviewItem");
      v11 = (_QWORD *)v0[5];
      v11[3] = sub_10006922C((uint64_t *)&unk_10064EBC0);
      v11[4] = sub_100062698(&qword_100643340, (uint64_t *)&unk_10064EBC0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
      v12 = sub_10006CBAC(v11);
      static IntentResult.result<>()(v12);

      v10 = (uint64_t (*)(void))v0[1];
      return (_QWORD *)v10();
    }
    __break(1u);
  }
  else if (!__OFSUB__(v4, 1))
  {
    v6 = ((uint64_t)v4 - 1) & ~(((uint64_t)v4 - 1) >> 63);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100471718(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v5 = *a2;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1000EA854;
  return v8(a1, v5);
}

id DOCPreviewController.modalPresentationStyle.setter(uint64_t a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DOCPreviewController(0);
  return objc_msgSendSuper2(&v4, "setModalPresentationStyle:", a1);
}

Swift::Void __swiftcall DOCPreviewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  objc_class *v7;
  void **v8;
  double v9;
  void *v10;
  char *v11;
  void *v12;
  id *v13;
  double v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void **v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  __n128 v26;
  os_log_type_t v27;
  uint8_t *v28;
  _BYTE v29[24];
  char v30[24];
  char v31[24];
  char v32[24];
  objc_super v33;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (objc_class *)type metadata accessor for DOCPreviewController(0);
  v33.receiver = v1;
  v33.super_class = v7;
  objc_msgSendSuper2(&v33, "viewWillDisappear:", a1);
  objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "reallyBecomeCurrent:", 0);
  v8 = (void **)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity];
  *(_QWORD *)&v9 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity], v32, 1, 0).n128_u64[0];
  v10 = *v8;
  *v8 = 0;
  objc_msgSend(v10, "resignCurrent", v9);

  v11 = &v1[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity], v31, 1, 0);
  *v11 = 0;
  v12 = *(void **)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_observation];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = 0;

  sub_1003ED930();
  v13 = (id *)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
  *(_QWORD *)&v14 = swift_beginAccess(v13, v30, 0, 0).n128_u64[0];
  if (*v13)
  {
    v15 = objc_msgSend(*v13, "sceneIdentifier", v14);
    v16 = v15;
    if (v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
    }
  }
  else
  {
    v16 = 0;
  }
  v19 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v16);

  v20 = (void **)&v19[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess(&v19[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v29, 1, 0);
  v21 = *v20;
  *v20 = 0;
  sub_1000AE638(v21);

  v23 = Logger.UI.unsafeMutableAddressor(v22);
  v24 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v23, v3);
  v25 = Logger.logObject.getter(v24);
  v27 = static os_log_type_t.info.getter(v26);
  if (os_log_type_enabled(v25, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v27, "[Interaction] Clearing last opened item in 'viewWillDisappear' (QL dismissing)", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_100471AE8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = objc_msgSend(v0, "childViewControllers");
  v2 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v4 = *(id *)(v3 + 32);
  }
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  v6 = objc_opt_self(UINavigationController);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (!v7)

  objc_msgSend(v7, "topViewController");
}

uint64_t DOCPreviewController.publishesUserActivity.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity, v3, 0, 0);
  return *v1;
}

uint64_t DOCPreviewController.publishesUserActivity.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*DOCPreviewController.publishesUserActivity.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *DOCPreviewController.currentUserActivity.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void DOCPreviewController.currentUserActivity.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  objc_msgSend(v4, "resignCurrent");

}

void (*DOCPreviewController.currentUserActivity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_100471E20;
}

void sub_100471E20(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v2 = *(void **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(void **)(v6 + v5);
  *(_QWORD *)(v6 + v5) = *v4;
  if ((a2 & 1) != 0)
  {
    v8 = v3;
    objc_msgSend(v7, "resignCurrent");

    v7 = *v4;
  }
  else
  {
    v9 = v3;
    objc_msgSend(v7, "resignCurrent");

  }
  free(v2);
}

void sub_100471EB4(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = swift_allocObject(&unk_1005EE888, 32, 7);
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  v8[4] = sub_100476C28;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10004A82C;
  v8[3] = &unk_1005EE8A0;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  swift_retain();
  swift_release(v6);
  DOCRunInMainThread(v5);
  _Block_release(v5);
}

void sub_100471F68(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (void **)(Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity, &v9, 1, 0);
    v7 = *v6;
    *v6 = a2;
    v8 = a2;
    objc_msgSend(v7, "resignCurrent");

    _s5Files20DOCPreviewControllerC25makeHostedActivityCurrentyyF_0();
  }
}

id _s5Files20DOCPreviewControllerC25makeHostedActivityCurrentyyF_0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  double v6;
  id v7;
  id v8;
  double v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
  v2 = v1;
  v3 = objc_allocWithZone((Class)NSUserDefaults);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "initWithSuiteName:", v4, swift_bridgeObjectRelease(v2).n128_f64[0]);

  v6 = 5.0;
  if (v5)
  {
    v7 = objc_msgSend(v5, "valueForKey:", DOCUserDefaultsKeyActivityDelay);
    if (v7)
    {
      v8 = v7;
      _bridgeAnyObjectToAny(_:)(v11, v7);

      swift_unknownObjectRelease(v8);
    }
    else
    {

      memset(v11, 0, sizeof(v11));
    }
    sub_100070EDC((uint64_t)v11, (uint64_t)v12, &qword_100642730);
    if (v13)
    {
      if ((swift_dynamicCast(&v10, v12, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
      {
        if (v10 < 0.0)
          v6 = 5.0;
        else
          v6 = v10;
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)v12, &qword_100642730);
    }
  }
  objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v0, "reallyBecomeCurrent:", 0);
  return objc_msgSend(v0, "performSelector:withObject:afterDelay:", "reallyBecomeCurrent:", 0, v6);
}

void sub_100472264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  __n128 v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  sub_100471AE8();
  if (v9)
  {
    v10 = v9;
    v11 = Logger.Rename.unsafeMutableAddressor(v9);
    v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v11, v2);
    v13 = Logger.logObject.getter(v12);
    v15 = static os_log_type_t.info.getter(v14);
    if (os_log_type_enabled(v13, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v30 = v17;
      v28 = v2;
      *(_DWORD *)v16 = 136315138;
      v29 = sub_1000544FC(0xD000000000000015, 0x8000000100538200, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
      _os_log_impl((void *)&_mh_execute_header, v13, v15, "%s: Resetting rename delegate to discard any rename operation", v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v28);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    v24 = objc_msgSend(v10, "navigationItem");
    UINavigationItem.renameDelegate.setter(0, 0);
    v25 = sub_10005A360(&qword_100657028, type metadata accessor for DOCPreviewController, (uint64_t)&protocol conformance descriptor for DOCPreviewController);
    v26 = swift_unknownObjectRetain(v1);
    UINavigationItem.renameDelegate.setter(v26, v25);

  }
  else
  {
    v18 = Logger.Rename.unsafeMutableAddressor(0);
    v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v18, v2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      v30 = v23;
      *(_DWORD *)v22 = 136315138;
      v29 = sub_1000544FC(0xD000000000000015, 0x8000000100538200, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: Could not reset rename delegate", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

Swift::Int __swiftcall DOCPreviewController.numberOfPreviewItems(in:)(QLPreviewController in)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v6;
  uint64_t v7;
  Swift::Int v8;

  v2 = v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_source;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16);
  if (v3 == 255)
    return 0;
  v4 = *(_QWORD *)v2;
  if ((v3 & 1) != 0)
    return *(_QWORD *)(v4 + 16);
  if (!((unint64_t)v4 >> 62))
    return *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6 = *(void **)(v2 + 8);
  if (v4 >= 0)
    v7 = v4 & 0xFFFFFFFFFFFFFF8;
  else
    v7 = *(_QWORD *)v2;
  sub_100323BA0(*(_QWORD *)v2, *(void **)(v2 + 8), 0);
  v8 = _CocoaArrayWrapper.endIndex.getter(v7);
  sub_100323BCC(v4, v6, v3);
  return v8;
}

id DOCPreviewController.previewController(_:previewItemAt:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  int v4;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files20DOCPreviewController_source);
  v4 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16);
  if (v4 == 255)
    return objc_msgSend(objc_allocWithZone((Class)QLItem), "init");
  v7 = *v3;
  v6 = (void *)v3[1];
  sub_100323BA0(*v3, v6, v4 & 1);
  v9 = sub_10046E8D8(a2, v7, v8, v4 & 1);
  sub_100323BCC(v7, v6, v4);
  return (id)v9;
}

uint64_t DOCPreviewController.previewController(_:editingModeFor:)(uint64_t a1, uint64_t a2)
{
  return sub_100475800(a2);
}

BOOL DOCPreviewController.previewController(_:shouldAllowKeyCommand:)(uint64_t a1, uint64_t a2)
{
  return (unint64_t)(a2 - 4) < 0xFFFFFFFFFFFFFFFELL;
}

void DOCPreviewController.previewController(_:willSaveEditedItem:)(uint64_t a1, void *a2)
{
  sub_10047597C(a2);
}

double DOCPreviewController.previewController(_:didSaveEditedCopyOf:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100475B00(a2, a3);
}

void sub_1004729EC(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  void *v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char *v24;
  char *v25;
  id v26;
  NSURL *v27;
  void *v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  double v35;
  void **v36;
  uint64_t v37;
  char *v38;
  void **v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void **v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  id v68;
  char *v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  double v79;
  id v80;
  void *v81;
  void (*v82)(char *, uint64_t);
  void **v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  id v94;
  char *v95;
  void **aBlock;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  uint64_t v101;
  char v102[24];
  char v103[24];
  uint64_t v104;

  LODWORD(v94) = a4;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v89 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v87 = (char *)&v84 - v10;
  __chkstk_darwin(v11);
  v95 = (char *)&v84 - v12;
  v13 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v13);
  v88 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v84 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v84 - v19;
  a1 += 16;
  swift_beginAccess(a1, v103, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v22 = (void *)Strong;
    v86 = v7;
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v23(v20, 1, 1, v6);
    v91 = swift_allocBox(v13);
    v92 = v6;
    v25 = v24;
    v23(v24, 1, 1, v6);
    v26 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "init");
    URL._bridgeToObjectiveC()(v27);
    v29 = v28;
    v30 = (_QWORD *)swift_allocObject(&unk_1005EE5B8, 48, 7);
    v30[2] = v22;
    v30[3] = a3;
    v30[4] = v25;
    v30[5] = v20;
    v93 = v20;
    v31 = swift_allocObject(&unk_1005EE5E0, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_100476634;
    *(_QWORD *)(v31 + 24) = v30;
    v90 = v30;
    v100 = sub_100066584;
    v101 = v31;
    aBlock = _NSConcreteStackBlock;
    v97 = 1107296256;
    v98 = sub_10046E2C4;
    v99 = &unk_1005EE5F8;
    v32 = _Block_copy(&aBlock);
    v33 = v101;
    v34 = v22;
    v85 = a3;
    swift_retain();
    *(_QWORD *)&v35 = swift_release(v33).n128_u64[0];
    aBlock = 0;
    objc_msgSend(v26, "coordinateReadingItemAtURL:options:error:byAccessor:", v29, 1, &aBlock, v32, v35);
    _Block_release(v32);

    v36 = aBlock;
    LOBYTE(v33) = swift_isEscapingClosureAtFileLocation(v31, "", 100, 561, 128, 1);
    swift_release(v31);
    if ((v33 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if ((v94 & 1) != 0)
        URL.stopAccessingSecurityScopedResource()();
      v37 = v92;
      v38 = v95;
      if (v36)
      {
        v39 = v36;
        v40 = *(id *)DOCLog.UI.unsafeMutableAddressor(v39);
        v41 = static os_log_type_t.error.getter(v40);
        v42 = sub_10006922C((uint64_t *)&unk_100644560);
        v43 = swift_allocObject(v42, 112, 7);
        *(_OWORD *)(v43 + 16) = xmmword_1004D4CE0;
        URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
        v45 = v44;
        *(_QWORD *)(v43 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
        *(_QWORD *)(v43 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
        *(_QWORD *)(v43 + 32) = v45;
        *(_QWORD *)(v43 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
        *(_QWORD *)(v43 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
        *(_QWORD *)(v43 + 72) = v39;
        v46 = v39;
        os_log(_:dso:log:type:_:)("Unable to access %@. Error: %@", 30, 2, &_mh_execute_header, v40, v41, v43);
        swift_release(v91);

        swift_bridgeObjectRelease(v43);
        sub_10000CB4C((uint64_t)v93, &qword_100643470);
LABEL_14:
        swift_release(v90);
        return;
      }
      v47 = v34;
      v48 = (uint64_t)v93;
      sub_1000271D4((uint64_t)v93, (uint64_t)v17, &qword_100643470);
      v49 = v86;
      v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
      if (v50(v17, 1, v37) == 1)
      {

        sub_10000CB4C((uint64_t)v17, &qword_100643470);
        v51 = v91;
LABEL_11:
        swift_release(v51);
        sub_10000CB4C(v48, &qword_100643470);
        goto LABEL_14;
      }
      v52 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
      v52(v38, v17, v37);
      v53 = v47;
      v54 = &v47[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
      swift_beginAccess(v54, v102, 0, 0);
      v55 = (uint64_t)v54;
      v56 = (uint64_t)v88;
      sub_1000271D4(v55, (uint64_t)v88, &qword_100643470);
      if (v50((char *)v56, 1, v37) == 1)
      {
        sub_10000CB4C(v56, &qword_100643470);
        v57 = swift_allocObject(&unk_1005EE4C0, 24, 7);
        swift_unknownObjectWeakInit(v57 + 16);
        v58 = v89;
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v89, v38, v37);
        v59 = *(unsigned __int8 *)(v49 + 80);
        v60 = (v59 + 24) & ~v59;
        v61 = (v8 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
        v62 = v53;
        v63 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
        v64 = swift_allocObject(&unk_1005EE630, v63 + 8, v59 | 7);
        *(_QWORD *)(v64 + 16) = v57;
        v52((char *)(v64 + v60), v58, v37);
        v65 = v85;
        *(_QWORD *)(v64 + v61) = v85;
        v48 = (uint64_t)v93;
        v51 = v91;
        *(_QWORD *)(v64 + v63) = v91;
        v100 = sub_1004766F0;
        v101 = v64;
        aBlock = _NSConcreteStackBlock;
        v97 = 1107296256;
        v98 = sub_10004A82C;
        v99 = &unk_1005EE648;
        v66 = _Block_copy(&aBlock);
        v67 = v101;
        v68 = v65;
        swift_retain();
        swift_release(v67);
        DOCRunInMainThread(v66);
        _Block_release(v66);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v95, v37);
        goto LABEL_11;
      }
      v94 = v53;
      v69 = v87;
      v52(v87, (char *)v56, v37);
      v88 = (char *)objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "init");
      URL._bridgeToObjectiveC()((NSURL *)&v104);
      v85 = v70;
      v71 = v89;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v89, v69, v37);
      v72 = *(unsigned __int8 *)(v49 + 80);
      v73 = (v72 + 16) & ~v72;
      v74 = swift_allocObject(&unk_1005EE680, v73 + v8, v72 | 7);
      v52((char *)(v74 + v73), v71, v37);
      v75 = v38;
      v76 = swift_allocObject(&unk_1005EE6A8, 32, 7);
      *(_QWORD *)(v76 + 16) = sub_1004767A0;
      *(_QWORD *)(v76 + 24) = v74;
      v100 = sub_10010DF60;
      v101 = v76;
      aBlock = _NSConcreteStackBlock;
      v97 = 1107296256;
      v98 = sub_10046E2C4;
      v99 = &unk_1005EE6C0;
      v77 = _Block_copy(&aBlock);
      v78 = v101;
      swift_retain();
      *(_QWORD *)&v79 = swift_release(v78).n128_u64[0];
      aBlock = 0;
      v80 = v88;
      v81 = v85;
      objc_msgSend(v88, "coordinateReadingItemAtURL:options:error:byAccessor:", v85, 1, &aBlock, v77, v79);
      _Block_release(v77);

      v82 = *(void (**)(char *, uint64_t))(v49 + 8);
      v82(v69, v37);
      v82(v75, v37);
      v83 = aBlock;
      LOBYTE(v80) = swift_isEscapingClosureAtFileLocation(v76, "", 100, 589, 133, 1);

      swift_release(v91);
      swift_release(v76);
      if ((v80 & 1) == 0)
      {
        sub_10000CB4C(v48, &qword_100643470);
        swift_release(v74);
        goto LABEL_14;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100473270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  dispatch_semaphore_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  double v29;
  __n128 v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t, __n128);
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v51 = a5;
  v48 = a4;
  v49 = a1;
  v53 = a3;
  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v50 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v47 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v46 = (char *)&v44 - v17;
  __chkstk_darwin(v18);
  v52 = (char *)&v44 - v19;
  v20 = dispatch_semaphore_create(0);
  v21 = swift_allocBox(v5);
  v23 = v22;
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v45(v22, 1, 1, v13);
  v24 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v25 = swift_allocObject(&unk_1005EE770, 32, 7);
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v21;
  aBlock[4] = sub_1004768EC;
  v55 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005EE788;
  v26 = _Block_copy(aBlock);
  v27 = v55;
  v28 = v20;
  swift_retain();
  *(_QWORD *)&v29 = swift_release(v27).n128_u64[0];
  objc_msgSend(v24, "fetchURLForItem:completionHandler:", v53, v26, v29);
  _Block_release(v26);

  OS_dispatch_semaphore.wait()();
  swift_beginAccess(v23, aBlock, 0, 0);
  sub_1000271D4(v23, (uint64_t)v12, &qword_100643470);
  v30 = swift_release(v21);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48);
  if (v31(v12, 1, v13, v30) == 1)
    return sub_10000CB4C((uint64_t)v12, &qword_100643470);
  v33 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v34 = v52;
  v33(v52, v12, v13);
  sub_100473EC0((uint64_t)v9);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v31)(v9, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v13);
    return sub_10000CB4C((uint64_t)v9, &qword_100643470);
  }
  else
  {
    v35 = v46;
    v33(v46, v9, v13);
    v36 = v48;
    sub_10000CB4C(v48, &qword_100643470);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v36, v35, v13);
    v37 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v45)(v36, 0, 1, v13);
    v38 = URL.lastPathComponent.getter(v37);
    v40 = v39;
    v41 = (uint64_t)v47;
    URL.appendingPathComponent(_:)(v38, v39);
    swift_bridgeObjectRelease(v40);
    v42 = v50;
    sub_10047414C(v41, v50);
    v43 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v43(v41, v13);
    v43((uint64_t)v35, v13);
    v43((uint64_t)v34, v13);
    return sub_100118024(v42, v51);
  }
}

void sub_100473638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::Bool v7;
  id v8;
  uint64_t v9;

  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = URL.startAccessingSecurityScopedResource()();
  v8 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  NSFileManager.replaceItemAt(_:withItemAt:backupItemName:options:)(a2, a1, 0, 0, 0);
  sub_10000CB4C((uint64_t)v6, &qword_100643470);

  if (v7)
    URL.stopAccessingSecurityScopedResource()();
}

void sub_100473800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  _BYTE v20[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate, &v19, 0, 0);
    v11 = swift_unknownObjectWeakLoadStrong(v10);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)(v10 + 8);
      ObjectType = swift_getObjectType(v11);
      v15 = swift_allocObject(&unk_1005EE4C0, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16);
      v16 = swift_allocObject(&unk_1005EE6F8, 32, 7);
      *(_QWORD *)(v16 + 16) = v15;
      *(_QWORD *)(v16 + 24) = a4;
      v17 = *(void (**)(void *, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v13 + 8);
      swift_retain();
      v18 = swift_retain();
      v17(v9, a2, a3, sub_100476818, v16, ObjectType, v13, v18);
      swift_release(v15);
      swift_release(v16);

      swift_unknownObjectRelease(v12);
    }
    else
    {

    }
  }
}

uint64_t sub_100473950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  id v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  _QWORD aBlock[5];
  uint64_t v36;
  char v37[24];
  char v38[24];

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v34 = (char *)&v33 - v11;
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - v16;
  v18 = a2 + 16;
  v19 = swift_projectBox(a3);
  swift_beginAccess(v18, v38, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v18);
  if (result)
  {
    v21 = (char *)result;
    sub_1000271D4(a1, (uint64_t)v17, &qword_100643470);
    v22 = (uint64_t)&v21[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
    swift_beginAccess(&v21[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL], aBlock, 33, 0);
    sub_100118024((uint64_t)v17, v22);
    swift_endAccess(aBlock);
    swift_beginAccess(v19, v37, 0, 0);
    sub_1000271D4(v19, (uint64_t)v14, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
    {

      return sub_10000CB4C((uint64_t)v14, &qword_100643470);
    }
    else
    {
      v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v24 = v34;
      v23(v34, v14, v6);
      v25 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
      objc_msgSend(v25, "setMaxConcurrentOperationCount:", 8);
      v26 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setName:", v26);

      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v24, v6);
      v27 = *(unsigned __int8 *)(v7 + 80);
      v28 = (v27 + 24) & ~v27;
      v29 = swift_allocObject(&unk_1005EE720, v28 + v8, v27 | 7);
      *(_QWORD *)(v29 + 16) = v21;
      v23((char *)(v29 + v28), v9, v6);
      aBlock[4] = sub_100476894;
      v36 = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005EE738;
      v30 = _Block_copy(aBlock);
      v31 = v36;
      v32 = v21;
      objc_msgSend(v25, "addOperationWithBlock:", v30, swift_release(v31).n128_f64[0]);
      _Block_release(v30);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v24, v6);
    }
  }
  return result;
}

Swift::Void __swiftcall DOCPreviewController.previewControllerWillDismiss(_:)(QLPreviewController a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v9[24];

  v2 = v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType(Strong, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v1, ObjectType, v7);
    swift_unknownObjectRelease(v6);
  }
}

Swift::Int sub_100473E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _BYTE v7[24];

  v5 = swift_projectBox(a4);
  swift_beginAccess(v5, v7, 1, 0);
  sub_1001D00A4(a1, v5);
  return OS_dispatch_semaphore.signal()();
}

void sub_100473EC0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::Bool v5;
  id v6;
  NSURL *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;

  v2 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = URL.startAccessingSecurityScopedResource()();
  v6 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v7);
  v9 = v8;
  v25 = 0;
  v10 = objc_msgSend(v6, "URLForDirectory:inDomain:appropriateForURL:create:error:", 99, 1, v8, 1, &v25);

  v11 = v25;
  if (v10)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v12 = v11;

    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 0, 1, v13);
    sub_100070EDC((uint64_t)v4, a1, &qword_100643470);
    if (!v5)
      return;
  }
  else
  {
    v14 = v25;
    v15 = _convertNSErrorToError(_:)(v11);

    v17 = swift_willThrow(v16);
    v18 = *(id *)DOCLog.UI.unsafeMutableAddressor(v17);
    v19 = static os_log_type_t.error.getter(v18);
    v20 = sub_10006922C((uint64_t *)&unk_100644560);
    v21 = swift_allocObject(v20, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1004D9670;
    v22 = _convertErrorToNSError(_:)(v15);
    *(_QWORD *)(v21 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v21 + 64) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v21 + 32) = v22;
    os_log(_:dso:log:type:_:)("Unable to create temporary directory for copying file %@.", 57, 2, &_mh_execute_header, v18, v19, v21);
    swift_errorRelease(v15);

    swift_bridgeObjectRelease(v21);
    v23 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
    if (!v5)
      return;
  }
  URL.stopAccessingSecurityScopedResource()();
}

id sub_10047414C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  id v4;
  NSURL *v5;
  void *v6;
  void *v7;
  NSURL *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSURL *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;

  v4 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v5);
  v7 = v6;
  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  v32 = 0;
  v11 = objc_msgSend(v4, "copyItemAtURL:toURL:error:", v7, v9, &v32);

  v31 = v32;
  if (v11)
  {
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, a1, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
    return v31;
  }
  else
  {
    v15 = v32;
    v16 = _convertNSErrorToError(_:)(v31);

    v18 = swift_willThrow(v17);
    v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 152, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D9880;
    URL._bridgeToObjectiveC()((NSURL *)&unk_1004D9000);
    v24 = v23;
    v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v22 + 56) = v25;
    v26 = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v22 + 64) = v26;
    *(_QWORD *)(v22 + 32) = v24;
    URL._bridgeToObjectiveC()(v27);
    *(_QWORD *)(v22 + 96) = v25;
    *(_QWORD *)(v22 + 104) = v26;
    *(_QWORD *)(v22 + 72) = v28;
    v29 = _convertErrorToNSError(_:)(v16);
    *(_QWORD *)(v22 + 136) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 144) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 112) = v29;
    os_log(_:dso:log:type:_:)("Unable to copy %@ into %@. Error: %@", 36, 2, &_mh_execute_header, v19, v20, v22);
    swift_errorRelease(v16);

    swift_bridgeObjectRelease(v22);
    v30 = type metadata accessor for URL(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a2, 1, 1, v30);
  }
}

void *DOCPreviewController.previewController(_:transitionViewFor:)(uint64_t a1, uint64_t a2)
{
  return sub_100475FA4(a2);
}

void sub_100474430(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  _BYTE v6[24];

  swift_beginAccess(a2 + 16, v6, 1, 0);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v5 = a1;

}

void DOCPreviewController.init(previewItems:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCPreviewController", 26, "init(previewItems:)", 19, 0);
  __break(1u);
}

void DOCPreviewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCPreviewController", 26, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void sub_1004745D8()
{
  uint64_t v0;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate);
  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager);

  sub_100323BCC(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source), *(void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL, &qword_100643470);
  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider);

}

id DOCPreviewController.__deallocating_deinit()
{
  return sub_1001405E0(0, (uint64_t (*)(void))type metadata accessor for DOCPreviewController);
}

void (*sub_1004747D0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DOCPreviewController.currentUserActivity.modify(v2);
  return sub_1000E10D4;
}

Swift::Void __swiftcall DOCPreviewController.navigationItem(_:didEndRenamingWith:)(UINavigationItem _, Swift::String didEndRenamingWith)
{
  sub_1004761E4(didEndRenamingWith._countAndFlagsBits, (unint64_t)didEndRenamingWith._object);
}

uint64_t DOCPreviewController.navigationItem(_:willBeginRenamingWith:selectedRange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004762E4(a2, a3);
}

void sub_100474834(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  if ((sub_1003EBBBC(FPActionRename) & 1) != 0)
  {
    sub_100471AE8();
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "navigationController");

      if (v4)
      {
        objc_msgSend(v4, "rename:", a1);

      }
    }
  }
}

void DOCDocumentManager.previewController(_:wantsToRevealItem:)(uint64_t a1, void *a2)
{
  sub_100475540(a2);
}

uint64_t sub_1004748CC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    v7 = Logger.UI.unsafeMutableAddressor(result);
    v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Move Previewed Item: unable to reveal item, since effective browser view controller can't be obtained", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

id sub_1004749CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  void *v24;
  uint64_t (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  id result;
  void *v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  void (*v57)(char *);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *);
  id v62;
  uint64_t object;
  uint64_t countAndFlagsBits;
  void (*v65)(char *, char *, uint64_t);
  id v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *);
  void *v70;
  uint64_t v71;
  char v72[24];
  Swift::String v73;

  v68 = a7;
  v69 = a4;
  v66 = a6;
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v13 = (char *)&object - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&object - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v67 = (char *)&object - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&object - v21;
  a3 += 16;
  swift_beginAccess(a3, v72, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    goto LABEL_6;
  v24 = (void *)Strong;
  sub_1000271D4(a1, (uint64_t)v16, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {

    sub_10000CB4C((uint64_t)v16, &qword_100643470);
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v13, 1, 1, v17);
    v69(v13);
    return (id)sub_10000CB4C((uint64_t)v13, &qword_100643470);
  }
  v25 = *(uint64_t (**)(char *, char *, uint64_t))(v18 + 32);
  v26 = v25(v22, v16, v17);
  if (a2)
  {

    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    goto LABEL_6;
  }
  v65 = (void (*)(char *, char *, uint64_t))v25;
  result = (id)_DocumentManagerBundle(v26);
  if (result)
  {
    v28 = result;
    v73._object = (void *)0x8000000100538220;
    v29._countAndFlagsBits = 0x79706F63204025;
    v29._object = (void *)0xE700000000000000;
    v30.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v30.value._object = (void *)0xEB00000000656C62;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v73._countAndFlagsBits = 0xD000000000000024;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v73);
    object = (uint64_t)v32._object;
    countAndFlagsBits = v32._countAndFlagsBits;

    v33 = sub_10006922C((uint64_t *)&unk_100644560);
    v34 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
    v35 = objc_msgSend(v66, "displayName");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = sub_10006A638();
    *(_QWORD *)(v34 + 32) = v36;
    *(_QWORD *)(v34 + 40) = v38;
    v39 = object;
    v40 = static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v34);
    v42 = v41;
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v34);
    v70 = (void *)v40;
    v71 = v42;
    v43._countAndFlagsBits = 46;
    v43._object = (void *)0xE100000000000000;
    String.append(_:)(v43);
    v44 = v68;
    v46._countAndFlagsBits = URL.pathExtension.getter(v45);
    v47 = v46._object;
    String.append(_:)(v46);
    swift_bridgeObjectRelease(v47);
    v66 = v70;
    countAndFlagsBits = v71;
    v48 = swift_allocObject(&unk_1005EE9A0, 32, 7);
    *(_QWORD *)(v48 + 16) = v69;
    *(_QWORD *)(v48 + 24) = a5;
    v49 = v48;
    object = v48;
    v50 = (void *)objc_opt_self(FPItemManager);
    v69 = (void (*)(char *))objc_msgSend(v50, "defaultManager", swift_retain().n128_f64[0]);
    v51 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v67, v44, v17);
    v52 = *(unsigned __int8 *)(v18 + 80);
    v53 = (v52 + 48) & ~v52;
    v54 = (v19 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
    v56 = (char *)swift_allocObject(&unk_1005EE9C8, v55 + 8, v52 | 7);
    *((_QWORD *)v56 + 2) = sub_100066584;
    *((_QWORD *)v56 + 3) = v49;
    v57 = v69;
    *((_QWORD *)v56 + 4) = v69;
    *((_QWORD *)v56 + 5) = v24;
    v65(&v56[v53], v51, v17);
    v58 = &v56[v54];
    v60 = object;
    v59 = countAndFlagsBits;
    *(_QWORD *)v58 = v66;
    *((_QWORD *)v58 + 1) = v59;
    *(_QWORD *)&v56[v55] = 2;
    swift_retain();
    v61 = v57;
    v62 = v24;
    swift_bridgeObjectRetain(v59);
    FPItemManager.doc_fetchItem(for:completionHandler:)(v22, sub_100145CC4, v56);
    swift_bridgeObjectRelease(v59);
    swift_release(v60);

    swift_release(v56);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_100474E50(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  _BOOL8 v10;
  BOOL v11;
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v12))
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(a2, "dataOwnerStateForNode:", v6);

      v11 = v9 == (id)1;
      v10 = v9 == (id)1;
      ++v5;
      v11 = v11 || v8 == v4;
      if (v11)
        goto LABEL_20;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v10 = 0;
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return v10;
}

id _s5Files20DOCPreviewControllerC06sharedC03forACSgSo8NSStringCSg_tFZ_0(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;

  if (a1)
  {
    v1 = qword_1006411A8;
    v2 = a1;
    if (v1 != -1)
      swift_once(&qword_1006411A8, sub_100470A10);
    v3 = (void *)qword_100656EE0;
    v4 = objc_msgSend((id)qword_100656EE0, "objectForKey:", v2);
    if (v4)
    {
      v5 = v4;
    }
    else
    {
      v8 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
      v5 = DOCPreviewController.init()();
      objc_msgSend(v3, "setObject:forKey:", v5, v2);
    }

  }
  else
  {
    v6 = *(id *)DOCLog.Source.unsafeMutableAddressor();
    v7 = static os_log_type_t.debug.getter(v6);
    os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v6, v7, _swiftEmptyArrayStorage);

    return 0;
  }
  return v5;
}

void sub_100475060(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;

  v2 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_opt_self(QLItem);
  v17 = swift_dynamicCastObjCClass(a1, v16);
  if (v17)
  {
    v19 = (void *)v17;
    swift_unknownObjectRetain(a1);
    v20 = objc_msgSend(v19, "fpItem");
    if (v20)
    {
      v21 = v20;
      Date.init()(v20);
      FPItem.setLastOpenDate(_:delay:)(v15, 0.0);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      swift_unknownObjectRelease(a1);

      return;
    }
    *(_QWORD *)&v18 = swift_unknownObjectRelease(a1).n128_u64[0];
  }
  v22 = objc_msgSend(a1, "previewItemURL", v18);
  if (v22)
  {
    v23 = v22;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v24(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v24(v11, v4, v5);
      URL.bumpLastOpenDate(delay:completionHandler:)(0, 0, 0.0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_10000CB4C((uint64_t)v4, &qword_100643470);
}

void sub_1004752C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  char *v16;
  _QWORD aBlock[5];
  char *v18;

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = swift_allocObject(&unk_1005EE928, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 48) & ~v12;
  v14 = (char *)swift_allocObject(&unk_1005EE950, v13 + v10, v12 | 7);
  *((_QWORD *)v14 + 2) = v11;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_100476CBC;
  v18 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005EE968;
  v15 = _Block_copy(aBlock);
  v16 = v18;
  swift_retain();
  swift_unknownObjectRetain(a2);
  objc_msgSend(a2, "fetchURL:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
}

uint64_t type metadata accessor for DOCQLItemsPreviewController()
{
  return objc_opt_self(_TtC5Files27DOCQLItemsPreviewController);
}

uint64_t type metadata accessor for DOCPreviewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100657000;
  if (!qword_100657000)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCPreviewController);
  return result;
}

uint64_t sub_10047549C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004754C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003ED268(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

id sub_1004754D0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "currentPreviewItemIndex");
  *a2 = result;
  return result;
}

id sub_100475500(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setCurrentPreviewItemIndex:", *a1);
}

uint64_t sub_100475514()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100475538(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100470E9C(a1, a2, v2);
}

void sub_100475540(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *Strong;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser);
  if (Strong)
  {
    v14 = Strong;
    DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(a1, 1, (uint64_t)sub_1004748CC, 0);

  }
  else
  {
    v8 = Logger.UI.unsafeMutableAddressor(0);
    v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Move Previewed Item: unable to reveal item, since effective browser view controller can't be obtained", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_10047569C()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;

  v1 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = 0;
  v3 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = -1;
  v4 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction] = 0;
  v0[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCPreviewController.swift", 32, 2, 321, 0);
  __break(1u);
}

uint64_t sub_100475800(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v17 - v7;
  v9 = objc_opt_self(QLItem);
  v10 = swift_dynamicCastObjCClass(a1, v9);
  if (!v10)
    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  v11 = (void *)v10;
  swift_unknownObjectRetain(a1);
  v12 = objc_msgSend(v11, "fpItem");
  if (!v12)
  {
    swift_unknownObjectRelease(a1);
    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  v13 = v12;
  if ((objc_msgSend(v12, "isWritable") & 1) == 0)
  {
    swift_unknownObjectRelease(a1);

    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  v14 = objc_msgSend(v13, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v14);

  static UTType.movie.getter();
  LOBYTE(v14) = UTType.conforms(to:)(v6);

  swift_unknownObjectRelease(a1);
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  v15(v8, v2);
  if ((v14 & 1) != 0)
    return 2;
  else
    return 1;
}

void sub_10047597C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, __n128);
  uint64_t v18;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - v7;
  v9 = objc_opt_self(QLItem);
  v10 = swift_dynamicCastObjCClass(a1, v9);
  if (!v10)
  {
LABEL_8:
    if (QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions != 1)
      return;
    goto LABEL_9;
  }
  v11 = (void *)v10;
  swift_unknownObjectRetain(a1);
  v12 = objc_msgSend(v11, "fpItem");
  if (!v12)
  {
    swift_unknownObjectRelease(a1);
    goto LABEL_8;
  }
  v13 = v12;
  if ((objc_msgSend(v12, "isWritable") & 1) == 0)
  {
    swift_unknownObjectRelease(a1);

    goto LABEL_8;
  }
  v14 = objc_msgSend(v13, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v14);

  static UTType.movie.getter(v15);
  LOBYTE(v14) = UTType.conforms(to:)(v5);

  v16 = swift_unknownObjectRelease(a1);
  v17 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v17(v5, v2, v16);
  ((void (*)(char *, uint64_t))v17)(v8, v2);
  if ((v14 & 1) == 0)
LABEL_9:
    sub_100475060(a1);
}

double sub_100475B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  void *v11;
  id v12;
  void *v13;
  id v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  _BYTE v25[12];
  _BOOL4 v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = objc_opt_self(QLItem);
  v9 = swift_dynamicCastObjCClass(a1, v8);
  if (v9)
  {
    v11 = (void *)v9;
    swift_unknownObjectRetain(a1);
    v12 = objc_msgSend(v11, "fpItem");
    if (v12)
    {
      v13 = v12;
      v26 = URL.startAccessingSecurityScopedResource()();
      v14 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
      objc_msgSend(v14, "setMaxConcurrentOperationCount:", 8);
      v15 = String._bridgeToObjectiveC()();
      objc_msgSend(v14, "setName:", v15);

      v16 = swift_allocObject(&unk_1005EE4C0, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v4);
      v17 = *(unsigned __int8 *)(v5 + 80);
      v18 = (v17 + 24) & ~v17;
      v19 = (v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
      v20 = swift_allocObject(&unk_1005EE7E8, v19 + 9, v17 | 7);
      *(_QWORD *)(v20 + 16) = v16;
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(v20 + v18, v7, v4);
      v21 = v20 + v19;
      *(_QWORD *)v21 = v13;
      *(_BYTE *)(v21 + 8) = v26;
      aBlock[4] = sub_100323B54;
      v28 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005EE800;
      v22 = _Block_copy(aBlock);
      v23 = v28;
      v24 = v13;
      objc_msgSend(v14, "addOperationWithBlock:", v22, swift_release(v23).n128_f64[0]);
      _Block_release(v22);
      swift_unknownObjectRelease(a1);

    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
    }
  }
  return result;
}

id sub_100475D78()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  v18 = 0;
  v4 = objc_msgSend(v0, "removeItemAtURL:error:", v2, &v18);

  if (v4)
    return v18;
  v17 = v18;
  v6 = v18;
  v7 = _convertNSErrorToError(_:)(v17);

  v9 = swift_willThrow(v8);
  v10 = *(id *)DOCLog.UI.unsafeMutableAddressor(v9);
  v11 = static os_log_type_t.error.getter(v10);
  v12 = sub_10006922C((uint64_t *)&unk_100644560);
  v13 = swift_allocObject(v12, 112, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D4CE0;
  URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
  v15 = v14;
  *(_QWORD *)(v13 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v13 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v13 + 32) = v15;
  v16 = _convertErrorToNSError(_:)(v7);
  *(_QWORD *)(v13 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v13 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v13 + 72) = v16;
  os_log(_:dso:log:type:_:)("Error while cleaning up %@. Error: %@", 37, 2, &_mh_execute_header, v10, v11, v13);

  swift_bridgeObjectRelease(v13);
  return (id)swift_errorRelease(v7);
}

void *sub_100475FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, void *, void (*)(void *), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v15;
  void *v16;
  id v17;
  _BYTE v19[24];

  v3 = objc_opt_self(QLItem);
  v4 = swift_dynamicCastObjCClass(a1, v3);
  if (!v4)
    return 0;
  v5 = (void *)v4;
  swift_unknownObjectRetain(a1);
  v6 = objc_msgSend(v5, "fpItem");
  if (!v6)
  {
    swift_unknownObjectRelease(a1);
    return 0;
  }
  v7 = v6;
  v8 = swift_allocObject(&unk_1005EE7C0, 24, 7);
  *(_QWORD *)(v8 + 16) = 0;
  v9 = v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider);
  if (Strong)
  {
    v11 = Strong;
    v12 = *(_QWORD *)(v9 + 8);
    ObjectType = swift_getObjectType(Strong);
    v14 = *(void (**)(uint64_t, void *, void (*)(void *), uint64_t, uint64_t, uint64_t, __n128))(v12 + 8);
    v15 = swift_retain();
    v14(v1, v7, sub_100323C28, v8, ObjectType, v12, v15);
    swift_release(v8);

    swift_unknownObjectRelease(v11);
  }
  else
  {

  }
  swift_unknownObjectRelease(a1);
  swift_beginAccess(v8 + 16, v19, 0, 0);
  v16 = *(void **)(v8 + 16);
  v17 = v16;
  swift_release(v8);
  return v16;
}

_QWORD *_s5Files20DOCPreviewControllerC21excludedActivityTypes3forSayypGSo09QLPreviewC0C_tF_0()
{
  uint64_t v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSString *v8;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source);
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16);
  if (v2 == 255)
    return _swiftEmptyArrayStorage;
  v3 = *v1;
  v4 = (void *)v1[1];
  sub_100323BA0(*v1, v4, v2 & 1);
  if ((sub_10046EAF0(v3, v4, v2 & 1) & 1) != 0)
  {
    v5 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = sub_10006922C(&qword_100644930);
    v5 = (_QWORD *)swift_allocObject(v6, 64, 7);
    *((_OWORD *)v5 + 1) = xmmword_1004D9670;
    type metadata accessor for ActivityType(0);
    v5[7] = v7;
    v5[4] = UIActivityTypeCopyToPasteboard;
    v8 = UIActivityTypeCopyToPasteboard;
  }
  sub_100323BCC(v3, v4, v2);
  return v5;
}

void sub_1004761E4(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;

  v3 = v2;
  v6 = objc_msgSend(v2, "currentPreviewItem");
  if (v6)
  {
    v7 = v6;
    v8 = objc_opt_self(QLItem);
    v9 = swift_dynamicCastObjCClass(v7, v8);
    if (v9)
    {
      v10 = *(void **)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
      if (v10)
      {
        v11 = v9;
        sub_10004F2F0(0, (unint64_t *)&unk_100657018, QLItem_ptr);
        swift_unknownObjectRetain(v7);
        v12 = v10;
        LOBYTE(v11) = static NSObject.== infix(_:_:)(v11, v12);
        swift_unknownObjectRelease(v7);

        if ((v11 & 1) != 0)
          sub_1003EBE58(a1, a2);
      }
    }
    swift_unknownObjectRelease(v7);
  }
  v13 = *(void **)&v3[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = 0;

}

uint64_t sub_1004762E4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;

  v3 = v2;
  v6 = objc_msgSend(v3, "currentPreviewItem");
  if (v6)
  {
    v7 = v6;
    v8 = objc_opt_self(QLItem);
    v6 = (id)swift_dynamicCastObjCClass(v7, v8);
    if (!v6)
    {
      swift_unknownObjectRelease(v7);
      v6 = 0;
    }
  }
  v9 = *(void **)&v3[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = v6;

  swift_bridgeObjectRetain(a2);
  return a1;
}

uint64_t _s5Files20DOCPreviewControllerC33navigationItemShouldBeginRenamingySbSo012UINavigationE0CF_0()
{
  char *v0;
  char v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;

  v1 = sub_1003EBBBC(FPActionRename);
  if ((v1 & 1) != 0)
  {
    v2 = objc_msgSend(v0, "currentPreviewItem");
    if (v2)
    {
      v3 = v2;
      v4 = objc_opt_self(QLItem);
      v2 = (id)swift_dynamicCastObjCClass(v3, v4);
      if (!v2)
      {
        swift_unknownObjectRelease(v3);
        v2 = 0;
      }
    }
    v5 = *(void **)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
    *(_QWORD *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = v2;

  }
  return v1 & 1;
}

void destroy for DOCPreviewSource(uint64_t a1)
{
  sub_100323BE4(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Files16DOCPreviewSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100323BA0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DOCPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100323BA0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_100323BE4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DOCPreviewSource(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_100323BE4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DOCPreviewSource()
{
  return &type metadata for DOCPreviewSource;
}

uint64_t sub_10047654C()
{
  return type metadata accessor for DOCPreviewController(0);
}

void sub_100476554(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  v4[0] = &unk_1004E9E98;
  v4[1] = &unk_1004E9E98;
  v4[2] = &unk_1004E9EB0;
  v4[3] = &unk_1004E9EC8;
  v4[4] = &unk_1004E9EC8;
  v4[5] = &unk_1004E9EC8;
  v4[6] = &unk_1004E9EC8;
  v4[7] = &unk_1004E9EE0;
  sub_1000B352C(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = &unk_1004E9E98;
    v4[10] = &unk_1004E9EC8;
    v4[11] = &unk_1004E9EC8;
    v4[12] = &unk_1004E9EF8;
    v4[13] = &unk_1004E9EC8;
    swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 128);
  }
}

uint64_t sub_100476608()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100476634(uint64_t a1)
{
  uint64_t *v1;

  return sub_100473270(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100476640()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100476650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_1004766F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100473800(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100476740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1004767A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_100473638(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1004767DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004767EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100476818(uint64_t a1)
{
  uint64_t v1;

  return sub_100473950(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100476820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

id sub_100476894()
{
  type metadata accessor for URL(0);
  return sub_100475D78();
}

uint64_t sub_1004768C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_1004768EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100473E64(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1004768F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100476918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 9, v5);
}

uint64_t sub_1004769A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_100657034);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1000EA854;
  return sub_100471518(a1, a2, v2);
}

uint64_t sub_100476A0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100476A30(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_100657044);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100118844;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_100657040 + dword_100657040))(a1, a2, v6);
}

void sub_100476AB0(void *a1)
{
  uint64_t v1;

  sub_100471EB4(a1, v1);
}

uint64_t sub_100476AB8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for DOCFileEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v7 = v0 + v4;
  v8 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + v1[5]));
  swift_release(*(_QWORD *)(v7 + v1[6]));

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100476B68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DOCFileEntity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_10065705C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA854;
  return sub_1002295BC(a1, v5, v6, v7, v8);
}

uint64_t sub_100476BFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100476C28()
{
  uint64_t v0;

  sub_100471F68(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100476C30()
{
  uint64_t v0;

  sub_100474834(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100476C38()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 4));
  swift_unknownObjectRelease(*((_QWORD *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

id sub_100476CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_1004749CC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(char *))(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), v2 + ((v5 + 48) & ~v5));
}

uint64_t sub_100476D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

char *sub_100476E08()
{
  _QWORD *v0;
  void *v1;
  char *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  void *v12;
  id v13;

  v1 = (void *)v0[7];
  if (v1)
  {
    v2 = (char *)v0[7];
  }
  else
  {
    v3 = v0;
    v4 = (void *)v0[2];
    v5 = v0[6];
    v6 = (void *)v3[4];
    v7 = (void *)v3[5];
    objc_allocWithZone((Class)type metadata accessor for DOCColumnInfoViewController());
    v8 = v4;
    swift_bridgeObjectRetain(v5);
    v9 = v6;
    v10 = v7;
    v11 = sub_10023DF8C(v8, v5, v6, v7);
    v12 = (void *)v3[7];
    v3[7] = v11;
    v2 = v11;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

uint64_t sub_100476EB0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  unint64_t v27;

  v5 = v4;
  v4[7] = 0;
  v10 = type metadata accessor for DOCConcreteSelectionLocation();
  v11 = swift_dynamicCastClass(a3, v10);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC5Files28DOCConcreteSelectionLocation_selectedNodes);
    swift_bridgeObjectRetain(v12);
    if ((unint64_t)v12 >> 62)
    {
LABEL_9:
      if (v12 < 0)
        v18 = v12;
      else
        v18 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease(v12);
      if (v19 < 1)
        goto LABEL_13;
LABEL_7:
      v5[2] = a1;
      v5[3] = a3;
      v5[4] = a2;
      v5[5] = a4;
      v5[6] = v12;
      return (uint64_t)v5;
    }
  }
  else
  {
    v13 = objc_msgSend(a3, "node");
    if (v13)
    {
      v14 = v13;
      v15 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v16 = swift_allocObject(v15, 40, 7);
      *(_OWORD *)(v16 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v16 + 32) = v14;
      v27 = v16;
      specialized Array._endMutation()(v16);
      v12 = v27;
      if (v27 >> 62)
        goto LABEL_9;
    }
    else
    {
      v12 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        goto LABEL_9;
    }
  }
  if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    goto LABEL_7;
LABEL_13:
  _StringGuts.grow(_:)(82);
  v20._countAndFlagsBits = 0xD00000000000003ELL;
  v20._object = (void *)0x80000001005382E0;
  String.append(_:)(v20);
  v21 = objc_msgSend(a3, "description");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25._countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v24);
  v26._object = (void *)0x8000000100538320;
  v26._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v26);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCItemInfoContainerDataSource.swift", 42, 2, 40, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004770DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for DOCItemInfoContainerDataSource()
{
  return objc_opt_self(_TtC5Files30DOCItemInfoContainerDataSource);
}

char *sub_100477148(uint64_t a1)
{
  if (a1 == 4 || a1 == 1)
    return sub_100476E08();
  else
    return 0;
}

_QWORD *sub_100477178(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);

  v58 = a2;
  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v66 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DOCOperationItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v65 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v69 = (char *)&v47 - v14;
  v15 = sub_10006922C((uint64_t *)&unk_100644AC0);
  v52 = *(_QWORD *)(v15 - 8);
  v53 = v15;
  __chkstk_darwin(v15);
  v54 = (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v51 = (char *)&v47 - v18;
  __chkstk_darwin(v19);
  v50 = (uint64_t)&v47 - v20;
  v59 = *(_QWORD *)(a1 + 16);
  if (!v59)
    return _swiftEmptyArrayStorage;
  v49 = v2;
  v64 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v63 = *(_QWORD *)(v7 + 72);
  v48 = a1;
  swift_bridgeObjectRetain(a1);
  v21 = 0;
  v55 = _swiftEmptyArrayStorage;
  v56 = v9;
  v22 = v66;
  v68 = v11;
  v23 = v69;
  v24 = v59;
  v57 = v6;
  do
  {
    sub_100303DB8(v64 + v63 * v21, (uint64_t)v9);
    if (swift_getEnumCaseMultiPayload(v9, v6) == 1)
    {
      sub_100303E08((uint64_t)v9);
    }
    else
    {
      v25 = &v9[*(int *)(sub_10006922C(&qword_10064DBA0) + 48)];
      v26 = *((_QWORD *)v25 + 1);
      v60 = *(_QWORD *)v25;
      v70 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v70(v23, v9, v10);
      v62 = v26;
      if (v26)
      {
        v27 = *v58;
        v28 = *(_QWORD *)(*v58 + 16);
        v61 = *v58;
        if (v28)
        {
          v29 = v27 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
          v30 = swift_bridgeObjectRetain(v27);
          v67 = *(_QWORD *)(v11 + 72);
          v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
          while (1)
          {
            v31(v22, v29, v10, v30);
            v11 = v68;
            v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
            v32(v22, 0, 1, v10);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v22, 1, v10) == 1)
              break;
            v33 = v65;
            v70(v65, v22, v10);
            v34 = sub_10005A360(&qword_1006418E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v35 = dispatch thunk of static Equatable.== infix(_:_:)(v33, v69, v10, v34);
            (*(void (**)(char *, uint64_t))(v11 + 8))(v33, v10);
            if ((v35 & 1) != 0)
            {
              v37 = swift_bridgeObjectRelease(v61);
              v38 = (uint64_t)v51;
              v39 = &v51[*(int *)(v53 + 48)];
              v23 = v69;
              ((void (*)(char *, char *, uint64_t, __n128))v70)(v51, v69, v10, v37);
              v40 = v62;
              *(_QWORD *)v39 = v60;
              *((_QWORD *)v39 + 1) = v40;
              v41 = v50;
              sub_100070EDC(v38, v50, (uint64_t *)&unk_100644AC0);
              sub_100070EDC(v41, v54, (uint64_t *)&unk_100644AC0);
              if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) != 0)
              {
                v9 = v56;
                v6 = v57;
                v11 = v68;
                v42 = (unint64_t)v55;
              }
              else
              {
                v42 = sub_100153AC0(0, v55[2] + 1, 1, (unint64_t)v55);
                v9 = v56;
                v6 = v57;
                v11 = v68;
              }
              v44 = *(_QWORD *)(v42 + 16);
              v43 = *(_QWORD *)(v42 + 24);
              if (v44 >= v43 >> 1)
                v42 = sub_100153AC0(v43 > 1, v44 + 1, 1, v42);
              *(_QWORD *)(v42 + 16) = v44 + 1;
              v45 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
              v55 = (_QWORD *)v42;
              sub_100070EDC(v54, v42 + v45 + *(_QWORD *)(v52 + 72) * v44, (uint64_t *)&unk_100644AC0);
              v22 = v66;
              goto LABEL_22;
            }
            v22 = v66;
            v29 += v67;
            if (!--v28)
              goto LABEL_15;
          }
        }
        else
        {
          swift_bridgeObjectRetain(v27);
          v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
LABEL_15:
          v32(v22, 1, 1, v10);
          v11 = v68;
        }
        v36 = swift_bridgeObjectRelease(v61);
        v23 = v69;
        (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v69, v10, v36);
        swift_bridgeObjectRelease(v62);
        v9 = v56;
        v6 = v57;
LABEL_22:
        v24 = v59;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v10);
      }
    }
    ++v21;
  }
  while (v21 != v24);
  swift_bridgeObjectRelease(v48);
  return v55;
}

_QWORD *sub_100477674(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  __int128 v24;
  _OWORD v25[2];
  __int128 v26;
  _BYTE v27[40];
  void *v28;
  _QWORD *v29;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v29 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    result = (_QWORD *)sub_1003754F8(a1);
    v4 = (uint64_t)result;
    v6 = v5;
    v7 = 0;
    v8 = a1 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_23;
      v22 = v7;
      sub_10006777C(*(_QWORD *)(a1 + 48) + 40 * v4, (uint64_t)v27);
      v28 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v4);
      v11 = v28;
      sub_10006777C((uint64_t)v27, (uint64_t)v25);
      *((_QWORD *)&v26 + 1) = v11;
      v23[0] = v25[0];
      v23[1] = v25[1];
      v24 = v26;
      v12 = v11;
      sub_10000CB4C((uint64_t)v27, (uint64_t *)&unk_1006572F0);
      v13 = *((id *)&v24 + 1);
      v14 = sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006572F0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = v29[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v16);
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v17 = *(_QWORD *)(v8 + 8 * v10);
      if ((v17 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_26;
      v18 = v17 & (-2 << (v4 & 0x3F));
      if (v18)
      {
        v9 = __clz(__rbit64(v18)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v19 = v10 + 1;
        v20 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v20)
        {
          v21 = *(_QWORD *)(v8 + 8 * v19);
          if (v21)
          {
LABEL_18:
            v9 = __clz(__rbit64(v21)) + (v19 << 6);
          }
          else
          {
            while (v20 - 2 != v10)
            {
              v21 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v21)
              {
                v19 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v22 + 1;
      v4 = v9;
      if (v22 + 1 == v2)
        return v29;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1004778AC(char a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
  v3 = a1 & 1;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  v8 = *(_QWORD *)(a2 + 48);
  if (((((_DWORD)v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)) & 1) != 0)
  {
    v9 = 1;
    return v9 & 1;
  }
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    v9 = 0;
    return v9 & 1;
  }
  do
  {
    v9 = ((_DWORD)v3 == 0) ^ *(_BYTE *)(v8 + v11);
    if ((v9 & 1) != 0)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

BOOL sub_1004779B4(Swift::UInt a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_100477AA0(void *a1, uint64_t a2)
{
  id v4;
  char v5;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  id v16;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v4 = a1;
    v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v7 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40)),
        v8 = -1 << *(_BYTE *)(a2 + 32),
        v9 = v7 & ~v8,
        v10 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0))
  {
LABEL_11:
    v13 = 0;
    return v13 & 1;
  }
  sub_10004F2F0(0, &qword_100647C90, UISceneSession_ptr);
  v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v9);
  v12 = static NSObject.== infix(_:_:)(v11, a1);

  if ((v12 & 1) == 0)
  {
    v14 = ~v8;
    v15 = (v9 + 1) & v14;
    if (((*(_QWORD *)(v10 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      do
      {
        v16 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v15);
        v13 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v13 & 1) != 0)
          break;
        v15 = (v15 + 1) & v14;
      }
      while (((*(_QWORD *)(v10 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
      return v13 & 1;
    }
    goto LABEL_11;
  }
  v13 = 1;
  return v13 & 1;
}

uint64_t sub_100477BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_100477D30(Swift::UInt32 a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_DWORD *)(v8 + 4 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_100477E1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _DWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  v21 = a7;
  v23 = a6;
  v22 = a5;
  v18[3] = a4;
  v28 = a3;
  v25 = a2;
  v11 = type metadata accessor for URL(0);
  v29 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v27 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v26 = (char *)v18 - v15;
  __chkstk_darwin(v14);
  v31 = (char *)v18 - v16;
  v30 = type metadata accessor for DOCOperationItem(0);
  __chkstk_darwin(v30);
  v17 = (char *)&loc_100477F4C + *((int *)qword_100479788 + a1);
  v24 = a1;
  v20 = a8;
  v19 = a9;
  __asm { BR              X10 }
}

void sub_100477F7C()
{
  uint64_t v0;
  id *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  int v26;
  uint64_t v27;
  void (*v28)(uint64_t, id *, uint64_t, __n128);
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  Class isa;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  _QWORD *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  Class v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  _QWORD *v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  _QWORD *v106;
  void *v107;
  uint64_t v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  _QWORD *v120;
  void *v121;
  uint64_t v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  Swift::String v138;
  Swift::String v139;

  v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746163696C707544, 0xE900000000000065, 1702260557, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(0xE900000000000065);
  if ((v6 & 1) == 0)
    __asm { BR              X10 }
  v7 = (uint64_t)_swiftEmptyArrayStorage;
  *(_QWORD *)(v5 - 112) = _swiftEmptyArrayStorage;
  v8 = swift_allocObject(&unk_1005EF118, 24, 7);
  *(_QWORD *)(v5 - 272) = v8;
  *(_QWORD *)(v8 + 16) = _swiftEmptyArrayStorage;
  v9 = (uint64_t *)(v8 + 16);
  v10 = *(_QWORD *)(v5 - 256);
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v5 - 216) = v4;
  v12 = *(_QWORD *)(v5 - 208);
  if (v11)
  {
    v13 = v10 + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80));
    v14 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v5 - 240) = v2 + 1;
    *(_DWORD *)(v5 - 196) = v3 & (*(_QWORD *)(v5 - 224) != 0);
    swift_bridgeObjectRetain(v10);
    v15 = *(_QWORD *)(v5 - 184);
    do
    {
      sub_100303DB8(v13, (uint64_t)v2);
      if (swift_getEnumCaseMultiPayload(v2, *(_QWORD *)(v5 - 192)) == 1)
      {
        v17 = *v2;
        if (*(_DWORD *)(v5 - 196))
        {
          v18 = (void *)objc_opt_self(DOCManagedPermission);
          v19 = *(id *)(v5 - 224);
          v20 = objc_msgSend(v18, "defaultPermission");
          v21 = objc_msgSend(v20, "canItem:performAction:item:", v17, 1, v19);

          if (v21)
          {
            v17 = v17;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
            v23 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v22 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v23 >= v22 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
            v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v17);
            specialized Array._endMutation()(v16);
          }

          v4 = *(_QWORD *)(v5 - 216);
          v12 = *(_QWORD *)(v5 - 208);
        }
        else
        {
          v41 = v17;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
          v43 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v42 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v43 >= v42 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
          v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
          specialized Array._endMutation()(v44);

        }
        v15 = *(_QWORD *)(v5 - 184);
      }
      else
      {
        v24 = sub_10006922C(&qword_10064DBA0);
        v25 = swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v5 - 240) + *(int *)(v24 + 48)));
        v26 = *((unsigned __int8 *)v2 + *(int *)(v24 + 64));
        v27 = v12;
        v28 = *(void (**)(uint64_t, id *, uint64_t, __n128))(v12 + 32);
        v28(v15, v2, v4, v25);
        if (*(_DWORD *)(v5 - 196))
        {
          if (v26)
            v29 = 1;
          else
            v29 = 2;
          v30 = (void *)objc_opt_self(DOCManagedPermission);
          v31 = *(id *)(v5 - 224);
          v32 = objc_msgSend(v30, "defaultPermission");
          v33 = objc_msgSend(v32, "canAppWithDataOwnerState:performAction:node:", v29, 1, v31);

          if (v33)
          {
            (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v5 - 208) + 16))(*(_QWORD *)(v5 - 248), *(_QWORD *)(v5 - 184), *(_QWORD *)(v5 - 216));
            v34 = *(_QWORD *)(v5 - 112);
            if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
              v34 = sub_100153AD4(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
            v36 = *(_QWORD *)(v34 + 16);
            v35 = *(_QWORD *)(v34 + 24);
            if (v36 >= v35 >> 1)
              v34 = sub_100153AD4(v35 > 1, v36 + 1, 1, v34);
            *(_QWORD *)(v34 + 16) = v36 + 1;
            v37 = *(_QWORD *)(v5 - 208);
            v38 = v34
                + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))
                + *(_QWORD *)(v37 + 72) * v36;
            v39 = *(_QWORD *)(v5 - 216);
            ((void (*)(unint64_t, _QWORD, uint64_t))v28)(v38, *(_QWORD *)(v5 - 248), v39);
            v12 = v37;

            v4 = v39;
            *(_QWORD *)(v5 - 112) = v34;
            v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
            v15 = *(_QWORD *)(v5 - 184);
            v40(v15, v39);
          }
          else
          {
            v51 = *(_QWORD *)(v5 - 216);
            v12 = *(_QWORD *)(v5 - 208);
            v15 = *(_QWORD *)(v5 - 184);
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v51);

            v4 = v51;
          }
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v27 + 16))(*(_QWORD *)(v5 - 232), v15, v4);
          v45 = *(_QWORD *)(v5 - 112);
          if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
            v45 = sub_100153AD4(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
          v47 = *(_QWORD *)(v45 + 16);
          v46 = *(_QWORD *)(v45 + 24);
          if (v47 >= v46 >> 1)
            v45 = sub_100153AD4(v46 > 1, v47 + 1, 1, v45);
          *(_QWORD *)(v45 + 16) = v47 + 1;
          v48 = *(_QWORD *)(v5 - 208);
          v49 = v45
              + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))
              + *(_QWORD *)(v48 + 72) * v47;
          v4 = *(_QWORD *)(v5 - 216);
          ((void (*)(unint64_t, _QWORD, uint64_t))v28)(v49, *(_QWORD *)(v5 - 232), v4);
          v12 = v48;
          *(_QWORD *)(v5 - 112) = v45;
          v50 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
          v15 = *(_QWORD *)(v5 - 184);
          v50(v15, v4);
        }
      }
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 - 256));
    v52 = *(_QWORD **)(v5 - 112);
    v7 = *v9;
  }
  else
  {
    v52 = _swiftEmptyArrayStorage;
  }
  v53 = *(void **)(v5 - 280);
  v54 = *(_QWORD *)(v5 - 264);
  v55 = *(void **)(v5 - 224);
  if (!v52[2])
    goto LABEL_43;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v134 = v7;
    else
      v134 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v135 = _CocoaArrayWrapper.endIndex.getter(v134);
    swift_bridgeObjectRelease(v7);
    if (!v135)
      goto LABEL_38;
  }
  else if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_38:
    if (v52[2])
    {
      if (!(_BYTE)v54)
      {
        if (v55)
        {
          v56 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
          v57 = v55;
          swift_bridgeObjectRetain(v52);
          isa = Array._bridgeToObjectiveC()().super.isa;
          v59 = (char *)objc_msgSend(v56, "initWithURLs:destinationFolder:", isa, v57, swift_bridgeObjectRelease(v52).n128_f64[0]);

          goto LABEL_51;
        }
        __break(1u);
        goto LABEL_81;
      }
      if (v54 == 1)
      {
        if (v55)
        {
          v64 = (void *)objc_opt_self(DOCUndoManager);
          v65 = v55;
          v66 = objc_msgSend(v64, "shared", swift_bridgeObjectRetain(v52).n128_f64[0]);
          v67 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
          v59 = DOCCopyOperation.init(urls:destinationFolder:undoManager:)((uint64_t)v52, v65, v66);
LABEL_51:
          v68 = objc_opt_self(FPMoveOperation);
          v69 = swift_dynamicCastObjCClass(v59, v68);
          if (v69)
          {
            v70 = (void *)v69;
            v59 = v59;
            v71 = sub_100477178(*(_QWORD *)(v5 - 256), (uint64_t *)(v5 - 112));
            v72 = v71[2];
            if (v72)
            {
              sub_10006922C((uint64_t *)&unk_10064D9F0);
              v73 = (void *)static _DictionaryStorage.allocate(capacity:)(v72);
            }
            else
            {
              v73 = &_swiftEmptyDictionarySingleton;
            }
            *(_QWORD *)(v5 - 168) = v73;
            swift_bridgeObjectRetain(v71);
            sub_1004845D0(v74, 1, (_QWORD *)(v5 - 168));
            swift_bridgeObjectRelease(v71);
            v75 = *(_QWORD *)(v5 - 168);
            sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v76 = Dictionary._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v70, "setTargetFilenamesByURL:", v76, swift_release(v75).n128_f64[0]);

          }
          v77 = *(void **)(v5 - 304);
          v78 = objc_opt_self(FPMoveOperation);
          v79 = swift_dynamicCastObjCClass(v59, v78);
          v80 = *(_QWORD *)(v5 - 272);
          if (v79)
          {
            v81 = (void *)v79;
            v82 = v59;
            if ((*(_DWORD *)(v5 - 324) & 1) != 0)
              objc_msgSend(v81, "setShouldBounceOnCollision:", 1);
            if ((*(_DWORD *)(v5 - 284) & 1) == 0)
              objc_msgSend(v81, "setLastUsageUpdatePolicy:", *(_QWORD *)(v5 - 296));

          }
          v83 = swift_allocObject(&unk_1005EEAB0, 24, 7);
          swift_unknownObjectWeakInit(v83 + 16);
          v84 = swift_allocObject(&unk_1005EEAD8, 24, 7);
          swift_unknownObjectWeakInit(v84 + 16);
          v85 = swift_allocObject(&unk_1005EF140, 32, 7);
          *(_QWORD *)(v85 + 16) = v83;
          *(_QWORD *)(v85 + 24) = v84;
          *(_QWORD *)(v5 - 136) = sub_1004889A0;
          *(_QWORD *)(v5 - 128) = v85;
          *(_QWORD *)(v5 - 168) = _NSConcreteStackBlock;
          *(_QWORD *)(v5 - 160) = 1107296256;
          *(_QWORD *)(v5 - 152) = sub_1000602CC;
          *(_QWORD *)(v5 - 144) = &unk_1005EF158;
          v86 = _Block_copy((const void *)(v5 - 168));
          objc_msgSend(v59, "setErrorRecoveryHandler:", v86, swift_release(*(_QWORD *)(v5 - 128)).n128_f64[0]);
          _Block_release(v86);
          v87 = swift_allocObject(&unk_1005EF190, 97, 7);
          v88 = v53;
          v89 = v59;
          v90 = *(_QWORD *)(v5 - 312);
          v91 = *(_QWORD *)(v5 - 320);
          *(_QWORD *)(v87 + 16) = v90;
          *(_QWORD *)(v87 + 24) = v91;
          *(_QWORD *)(v87 + 32) = v89;
          *(_QWORD *)(v87 + 40) = v55;
          *(_BYTE *)(v87 + 48) = *(_QWORD *)(v5 - 264);
          *(_QWORD *)(v87 + 56) = v88;
          *(_QWORD *)(v87 + 64) = v77;
          v92 = v55;
          v93 = *(_QWORD *)(v5 - 256);
          *(_QWORD *)(v87 + 72) = v80;
          *(_QWORD *)(v87 + 80) = v93;
          *(_QWORD *)(v87 + 88) = *(_QWORD *)(v5 - 296);
          *(_BYTE *)(v87 + 96) = *(_DWORD *)(v5 - 284) & 1;
          v94 = type metadata accessor for DOCArchiveOperation();
          *(_QWORD *)(v5 - 184) = v89;
          v95 = swift_dynamicCastClass(v89, v94);
          if (v95)
          {
            v96 = (void *)v95;
            v97 = (_QWORD *)swift_allocObject(&unk_1005EF2A8, 40, 7);
            v97[2] = v96;
            v97[3] = sub_100487980;
            v97[4] = v87;
            *(_QWORD *)(v5 - 136) = sub_100487AA4;
            *(_QWORD *)(v5 - 128) = v97;
            *(_QWORD *)(v5 - 168) = _NSConcreteStackBlock;
            *(_QWORD *)(v5 - 160) = 1107296256;
            *(_QWORD *)(v5 - 152) = sub_100083540;
            *(_QWORD *)(v5 - 144) = &unk_1005EF2C0;
            v98 = _Block_copy((const void *)(v5 - 168));
            *(_QWORD *)(v5 - 192) = *(_QWORD *)(v5 - 128);
            v99 = v92;
            v100 = v77;
            v101 = *(id *)(v5 - 184);
            swift_bridgeObjectRetain(v93);
            sub_10008BA00(v90, v91);
            v102 = v88;
            swift_retain();
            swift_retain();
            objc_msgSend(v96, "setArchiveCompletionBlock:", v98, swift_release(*(_QWORD *)(v5 - 192)).n128_f64[0]);
            _Block_release(v98);

          }
          else
          {
            v103 = type metadata accessor for DOCUnarchiveOperation();
            v104 = swift_dynamicCastClass(*(_QWORD *)(v5 - 184), v103);
            if (!v104)
            {
              v117 = type metadata accessor for DOCCopyOperation();
              v118 = swift_dynamicCastClass(*(_QWORD *)(v5 - 184), v117);
              v113 = *(_QWORD *)(v5 - 264);
              if (v118)
              {
                v119 = (void *)v118;
                v120 = (_QWORD *)swift_allocObject(&unk_1005EF208, 40, 7);
                v120[2] = v119;
                v120[3] = sub_100487980;
                v120[4] = v87;
                *(_QWORD *)(v5 - 136) = sub_100487A24;
                *(_QWORD *)(v5 - 128) = v120;
                *(_QWORD *)(v5 - 168) = _NSConcreteStackBlock;
                *(_QWORD *)(v5 - 160) = 1107296256;
                *(_QWORD *)(v5 - 152) = sub_10015936C;
                *(_QWORD *)(v5 - 144) = &unk_1005EF220;
                v121 = _Block_copy((const void *)(v5 - 168));
                v122 = *(_QWORD *)(v5 - 128);
                v123 = *(id *)(v5 - 224);
                v124 = v77;
                v125 = *(id *)(v5 - 184);
                swift_bridgeObjectRetain(*(_QWORD *)(v5 - 256));
                sub_10008BA00(v90, v91);
                v126 = *(id *)(v5 - 280);
                swift_retain();
                swift_retain();
                objc_msgSend(v119, "setActionCompletionBlock:", v121, swift_release(v122).n128_f64[0]);
                _Block_release(v121);

              }
              else
              {
                v127 = swift_allocObject(&unk_1005EF1B8, 32, 7);
                *(_QWORD *)(v127 + 16) = sub_100487980;
                *(_QWORD *)(v127 + 24) = v87;
                *(_QWORD *)(v5 - 136) = sub_1004879E8;
                *(_QWORD *)(v5 - 128) = v127;
                *(_QWORD *)(v5 - 168) = _NSConcreteStackBlock;
                *(_QWORD *)(v5 - 160) = 1107296256;
                *(_QWORD *)(v5 - 152) = sub_10015936C;
                *(_QWORD *)(v5 - 144) = &unk_1005EF1D0;
                v128 = _Block_copy((const void *)(v5 - 168));
                v129 = *(_QWORD *)(v5 - 128);
                v130 = *(id *)(v5 - 224);
                v131 = v77;
                v132 = *(id *)(v5 - 184);
                swift_bridgeObjectRetain(*(_QWORD *)(v5 - 256));
                sub_10008BA00(v90, v91);
                v133 = *(id *)(v5 - 280);
                swift_retain();
                swift_retain();
                objc_msgSend(v132, "setActionCompletionBlock:", v128, swift_release(v129).n128_f64[0]);
                _Block_release(v128);
              }
LABEL_67:
              v114 = *(id *)DOCLog.UI.unsafeMutableAddressor(objc_msgSend(*(id *)(v5 - 184), "setQualityOfService:", 25));
              static os_log_type_t.debug.getter(v114);
              v115 = sub_10006922C((uint64_t *)&unk_100644560);
              v116 = swift_allocObject(v115, 152, 7);
              *(_OWORD *)(v116 + 16) = xmmword_1004D9880;
              *(_QWORD *)(v116 + 56) = &type metadata for String;
              *(_QWORD *)(v116 + 64) = sub_10006A638();
              *(_QWORD *)(v116 + 32) = 0xD000000000000076;
              *(_QWORD *)(v116 + 40) = 0x80000001005388C0;
              __asm { BR              X11 }
            }
            v105 = (void *)v104;
            v106 = (_QWORD *)swift_allocObject(&unk_1005EF258, 40, 7);
            v106[2] = v105;
            v106[3] = sub_100487980;
            v106[4] = v87;
            *(_QWORD *)(v5 - 136) = sub_100487A70;
            *(_QWORD *)(v5 - 128) = v106;
            *(_QWORD *)(v5 - 168) = _NSConcreteStackBlock;
            *(_QWORD *)(v5 - 160) = 1107296256;
            *(_QWORD *)(v5 - 152) = sub_100083540;
            *(_QWORD *)(v5 - 144) = &unk_1005EF270;
            v107 = _Block_copy((const void *)(v5 - 168));
            v108 = *(_QWORD *)(v5 - 128);
            v109 = *(id *)(v5 - 224);
            v110 = v77;
            v111 = *(id *)(v5 - 184);
            swift_bridgeObjectRetain(*(_QWORD *)(v5 - 256));
            sub_10008BA00(v90, v91);
            v112 = *(id *)(v5 - 280);
            swift_retain();
            swift_retain();
            objc_msgSend(v105, "setUnarchiveCompletionBlock:", v107, swift_release(v108).n128_f64[0]);
            _Block_release(v107);

          }
          v113 = *(_QWORD *)(v5 - 264);
          goto LABEL_67;
        }
LABEL_81:
        __break(1u);
        JUMPOUT(0x10047968CLL);
      }
      *(_QWORD *)(v5 - 168) = 0;
      *(_QWORD *)(v5 - 160) = 0xE000000000000000;
      _StringGuts.grow(_:)(42);
      v137 = *(_QWORD *)(v5 - 160);
      *(_QWORD *)(v5 - 168) = *(_QWORD *)(v5 - 168);
      *(_QWORD *)(v5 - 160) = v137;
      v138._countAndFlagsBits = 0x7020746F6E6E6143;
      v138._object = (void *)0xEF206D726F667265;
      String.append(_:)(v138);
      *(_BYTE *)(v5 - 113) = v54;
      _print_unlocked<A, B>(_:_:)(v5 - 113, v5 - 168, &type metadata for DOCActionOperationKind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v139._countAndFlagsBits = 0xD000000000000019;
      v139._object = (void *)0x80000001005388A0;
      String.append(_:)(v139);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, *(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 160), "Files/FPItemManager+DOCExtensions.swift", 39, 2, 174, 0);
LABEL_83:
      __break(1u);
      JUMPOUT(0x100479788);
    }
    v7 = *v9;
LABEL_43:
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v136 = v7;
      else
        v136 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v60 = _CocoaArrayWrapper.endIndex.getter(v136);
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v60 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v60)
      __asm { BR              X10 }
    v61 = *(id *)DOCLog.UI.unsafeMutableAddressor(v10);
    static os_log_type_t.error.getter(v61);
    v62 = sub_10006922C((uint64_t *)&unk_100644560);
    v63 = swift_allocObject(v62, 112, 7);
    *(_OWORD *)(v63 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v63 + 56) = &type metadata for String;
    *(_QWORD *)(v63 + 64) = sub_10006A638();
    *(_QWORD *)(v63 + 32) = 0xD000000000000076;
    *(_QWORD *)(v63 + 40) = 0x80000001005388C0;
    __asm { BR              X11 }
  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000040, 0x8000000100538850, "Files/FPItemManager+DOCExtensions.swift", 39, 2, 164, 0);
  goto LABEL_83;
}

uint64_t sub_100479844(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 144) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a3;
  return swift_task_switch(sub_100479860, 0, 0);
}

uint64_t sub_100479860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t i;
  id v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class isa;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  char v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  _QWORD *v33;
  uint64_t (*v34)();
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 32);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v39 = *(_QWORD *)(v0 + 32);
    else
      v39 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
    v2 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 24) = _swiftEmptyArrayStorage;
  if (v2 < 1)
  {
    __break(1u);
LABEL_31:
    if (v1 < 0)
      v40 = v1;
    else
      v40 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v1);
    if (!v41)
      goto LABEL_35;
LABEL_23:
    v36 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain(v1);
    v37 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 72) = v37;
    *(_QWORD *)(v37 + 16) = v36;
    *(_QWORD *)(v37 + 24) = v1;
    v38 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 80) = v38;
    *v38 = v0;
    v38[1] = sub_10047A094;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  v3 = (_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32);
  v54 = v1 & 0xC000000000000001;
  v51 = (_QWORD *)(v0 + 24);
  v52 = v4 + 32;
  v5 = (void *)FPActionTrash;
  v53 = (void *)FPActionDelete;
  swift_bridgeObjectRetain(v4);
  for (i = 0; i != v2; ++i)
  {
    if (v54)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, *(_QWORD *)(v0 + 32));
    else
      v13 = *(id *)(v52 + 8 * i);
    v14 = v13;
    v15 = *(void **)(v0 + 40);
    v16 = objc_autoreleasePoolPush();
    v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v18 + 32) = v14;
    v55 = v18;
    specialized Array._endMutation()(v18);
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v19 = v14;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v21 = objc_msgSend(v15, "eligibleActionsForItems:", isa, swift_bridgeObjectRelease(v55).n128_f64[0]);

    type metadata accessor for FPAction(0);
    v23 = v22;
    v24 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
    v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, v23, v24);

    v26 = v5;
    LOBYTE(isa) = sub_100028BE0((uint64_t)v26, v25);

    if ((isa & 1) != 0)
    {
      swift_bridgeObjectRelease(v25);
      v7 = v19;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v9 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v8 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v9 >= v8 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
      v10 = v9;
      v11 = v7;
      goto LABEL_8;
    }
    v27 = v53;
    v28 = sub_100028BE0((uint64_t)v27, v25);
    swift_bridgeObjectRelease(v25);

    if ((v28 & 1) != 0)
    {
      v29 = v19;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v10 = v31;
      v11 = v29;
LABEL_8:
      v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v11);
      specialized Array._endMutation()(v12);
    }
    objc_autoreleasePoolPop(v16);

  }
  v32 = *(unsigned __int8 *)(v0 + 144);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  if (v32 == 1)
  {
    v33 = (_QWORD *)swift_task_alloc(dword_10064335C);
    *(_QWORD *)(v0 + 48) = v33;
    v34 = sub_100479DB8;
    goto LABEL_20;
  }
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  if ((unint64_t)v1 >> 62)
    goto LABEL_31;
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_23;
LABEL_35:
  v42 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 96) = v42;
  if ((unint64_t)v42 >> 62)
  {
    if (v42 < 0)
      v48 = v42;
    else
      v48 = v42 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v42);
    v49 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v42);
    if (!v49)
      goto LABEL_44;
LABEL_37:
    if ((*(_BYTE *)(v0 + 144) & 1) == 0)
    {
      v47 = dword_10064335C;
      swift_bridgeObjectRetain(v42);
      v33 = (_QWORD *)swift_task_alloc(v47);
      *(_QWORD *)(v0 + 104) = v33;
      v34 = sub_10047A100;
LABEL_20:
      *v33 = v0;
      v33[1] = v34;
      return sub_1000EA4B4();
    }
    swift_bridgeObjectRetain(v42);
    v43 = *(_QWORD *)(v0 + 96);
    v44 = *(_QWORD *)(v0 + 40);
    v45 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 120) = v45;
    *(_QWORD *)(v45 + 16) = v44;
    *(_QWORD *)(v45 + 24) = v43;
    v46 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 128) = v46;
    *v46 = v0;
    v46[1] = sub_10047A164;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_37;
LABEL_44:
  v50 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100479DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10047A058;
  else
    v3 = sub_100479E1C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100479E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v6 = v1;
    else
      v6 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v7)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v2 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain(v1);
    v3 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 72) = v3;
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 80) = v4;
    *v4 = v0;
    v4[1] = sub_10047A094;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  v8 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 96) = v8;
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v15 = v8;
    else
      v15 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v16 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v8);
    if (v16)
      goto LABEL_11;
LABEL_18:
    v17 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
    v18 = swift_bridgeObjectRelease(v17);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v18);
  }
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_18;
LABEL_11:
  if ((*(_BYTE *)(v0 + 144) & 1) != 0)
  {
    swift_bridgeObjectRetain(v8);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 40);
    v11 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 120) = v11;
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v9;
    v12 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 128) = v12;
    *v12 = v0;
    v12[1] = sub_10047A164;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  v13 = dword_10064335C;
  swift_bridgeObjectRetain(v8);
  v14 = (_QWORD *)swift_task_alloc(v13);
  *(_QWORD *)(v0 + 104) = v14;
  *v14 = v0;
  v14[1] = sub_10047A100;
  return sub_1000EA4B4();
}

uint64_t sub_10047A058()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047A094()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10047A4BC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 72));
    v4 = sub_10047A344;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047A100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10047A304;
  else
    v3 = sub_10047A260;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10047A164()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10047A218;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 120));
    v4 = sub_10047A1D0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047A1D0()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047A218()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 96), 2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047A260()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[12];
  v2 = v0[5];
  v3 = swift_task_alloc(32);
  v0[15] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_10047A164;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10047A304()
{
  uint64_t v0;

  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 96), 2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047A344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 96) = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (v10)
      goto LABEL_3;
LABEL_10:
    v11 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
    v12 = swift_bridgeObjectRelease(v11);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_3:
  if ((*(_BYTE *)(v0 + 144) & 1) != 0)
  {
    swift_bridgeObjectRetain(v1);
    v2 = *(_QWORD *)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 120) = v4;
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v2;
    v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 128) = v5;
    *v5 = v0;
    v5[1] = sub_10047A164;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  else
  {
    v7 = dword_10064335C;
    swift_bridgeObjectRetain(v1);
    v8 = (_QWORD *)swift_task_alloc(v7);
    *(_QWORD *)(v0 + 104) = v8;
    *v8 = v0;
    v8[1] = sub_10047A100;
    return sub_1000EA4B4();
  }
}

uint64_t sub_10047A4BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FPItemManager.trashOrDeleteItems(_:confirmationHandler:forceConfirmation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + 160) = a4;
  *(_QWORD *)(v5 + 48) = a3;
  *(_QWORD *)(v5 + 56) = v4;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  return swift_task_switch(sub_10047A528, 0, 0);
}

uint64_t sub_10047A528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t i;
  id v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class isa;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  char v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  int *v33;
  _QWORD *v34;
  uint64_t (*v35)();
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  unint64_t v41;
  double (*v42)(uint64_t);
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  void *v60;
  unint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;

  v1 = *(_QWORD *)(v0 + 32);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v46 = *(_QWORD *)(v0 + 32);
    else
      v46 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
    v2 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      goto LABEL_45;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      goto LABEL_45;
  }
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 24) = _swiftEmptyArrayStorage;
  if (v2 < 1)
  {
    __break(1u);
LABEL_31:
    if (v1 < 0)
      v47 = v1;
    else
      v47 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v48 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v1);
    if (!v48)
      goto LABEL_35;
LABEL_23:
    v37 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain(v1);
    v38 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 88) = v38;
    *(_QWORD *)(v38 + 16) = v37;
    *(_QWORD *)(v38 + 24) = v1;
    v39 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 96) = v39;
    *v39 = v0;
    v39[1] = sub_10047AD38;
    v40 = &type metadata for ()[8];
    v41 = 0x8000000100538340;
    v42 = sub_100484A80;
    v43 = 0xD000000000000022;
    v44 = v38;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v39, 0, 0, v43, v41, v42, v44, v40);
  }
  v3 = (_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32);
  v61 = v1 & 0xC000000000000001;
  v58 = (_QWORD *)(v0 + 24);
  v59 = v4 + 32;
  v5 = (void *)FPActionTrash;
  v60 = (void *)FPActionDelete;
  swift_bridgeObjectRetain(v4);
  for (i = 0; i != v2; ++i)
  {
    if (v61)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, *(_QWORD *)(v0 + 32));
    else
      v13 = *(id *)(v59 + 8 * i);
    v14 = v13;
    v15 = *(void **)(v0 + 56);
    v16 = objc_autoreleasePoolPush();
    v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v18 + 32) = v14;
    v63 = v18;
    specialized Array._endMutation()(v18);
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v19 = v14;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v21 = objc_msgSend(v15, "eligibleActionsForItems:", isa, swift_bridgeObjectRelease(v63).n128_f64[0]);

    type metadata accessor for FPAction(0);
    v23 = v22;
    v24 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
    v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, v23, v24);

    v26 = v5;
    LOBYTE(isa) = sub_100028BE0((uint64_t)v26, v25);

    if ((isa & 1) != 0)
    {
      swift_bridgeObjectRelease(v25);
      v7 = v19;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v9 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v8 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v9 >= v8 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
      v10 = v9;
      v11 = v7;
      goto LABEL_8;
    }
    v27 = v60;
    v28 = sub_100028BE0((uint64_t)v27, v25);
    swift_bridgeObjectRelease(v25);

    if ((v28 & 1) != 0)
    {
      v29 = v19;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((*v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((*v58 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v10 = v31;
      v11 = v29;
LABEL_8:
      v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v11);
      specialized Array._endMutation()(v12);
    }
    objc_autoreleasePoolPop(v16);

  }
  v32 = *(unsigned __int8 *)(v0 + 160);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  if (v32 == 1)
  {
    v33 = *(int **)(v0 + 40);
    v62 = (uint64_t (*)(void))((char *)v33 + *v33);
    v34 = (_QWORD *)swift_task_alloc(v33[1]);
    *(_QWORD *)(v0 + 64) = v34;
    v35 = sub_10047AA8C;
    goto LABEL_20;
  }
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 80) = v1;
  if ((unint64_t)v1 >> 62)
    goto LABEL_31;
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_23;
LABEL_35:
  v49 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 112) = v49;
  if ((unint64_t)v49 >> 62)
  {
    if (v49 < 0)
      v55 = v49;
    else
      v55 = v49 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v49);
    v56 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease(v49);
    if (!v56)
      goto LABEL_44;
LABEL_37:
    if ((*(_BYTE *)(v0 + 160) & 1) == 0)
    {
      v53 = *(int **)(v0 + 40);
      v54 = v53[1];
      v62 = (uint64_t (*)(void))((char *)v53 + *v53);
      swift_bridgeObjectRetain(v49);
      swift_retain();
      v34 = (_QWORD *)swift_task_alloc(v54);
      *(_QWORD *)(v0 + 120) = v34;
      v35 = sub_10047AF74;
LABEL_20:
      *v34 = v0;
      v34[1] = v35;
      v36 = v62;
      return v36();
    }
    swift_bridgeObjectRetain(v49);
    v50 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 56);
    v52 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 136) = v52;
    *(_QWORD *)(v52 + 16) = v51;
    *(_QWORD *)(v52 + 24) = v50;
    v39 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 144) = v39;
    *v39 = v0;
    v39[1] = sub_10047B0CC;
    v43 = 0xD000000000000023;
    v40 = &type metadata for ()[8];
    v41 = 0x8000000100538370;
    v42 = sub_100484AB0;
    v44 = v52;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v39, 0, 0, v43, v41, v42, v44, v40);
  }
  if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_37;
LABEL_44:
  v57 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(v57);
LABEL_45:
  v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_10047AA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10047B1C8;
  else
    v3 = sub_10047AAF0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10047AAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  unint64_t v6;
  double (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 80) = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v11 = v1;
    else
      v11 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v1);
    if (v12)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v2 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain(v1);
    v3 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 88) = v3;
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 96) = v4;
    *v4 = v0;
    v4[1] = sub_10047AD38;
    v5 = &type metadata for ()[8];
    v6 = 0x8000000100538340;
    v7 = sub_100484A80;
    v8 = 0xD000000000000022;
    v9 = v3;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, v8, v6, v7, v9, v5);
  }
  v13 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 112) = v13;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v21 = v13;
    else
      v21 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v13);
    if (v22)
      goto LABEL_11;
LABEL_18:
    v23 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
    swift_bridgeObjectRelease(v23);
    v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_18;
LABEL_11:
  if ((*(_BYTE *)(v0 + 160) & 1) != 0)
  {
    swift_bridgeObjectRetain(v13);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 56);
    v16 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 136) = v16;
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = v14;
    v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 144) = v4;
    *v4 = v0;
    v4[1] = sub_10047B0CC;
    v8 = 0xD000000000000023;
    v5 = &type metadata for ()[8];
    v6 = 0x8000000100538370;
    v7 = sub_100484AB0;
    v9 = v16;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, v8, v6, v7, v9, v5);
  }
  v17 = *(int **)(v0 + 40);
  v18 = v17[1];
  v24 = (uint64_t (*)(void))((char *)v17 + *v17);
  swift_bridgeObjectRetain(v13);
  swift_retain();
  v19 = (_QWORD *)swift_task_alloc(v18);
  *(_QWORD *)(v0 + 120) = v19;
  *v19 = v0;
  v19[1] = sub_10047AF74;
  v20 = v24;
  return v20();
}

uint64_t sub_10047AD38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10047AF28;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 88));
    v4 = sub_10047ADA4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047ADA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 112) = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v11 = v1;
    else
      v11 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v1);
    if (v12)
      goto LABEL_3;
LABEL_10:
    v13 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
    swift_bridgeObjectRelease(v13);
    v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_3:
  if ((*(_BYTE *)(v0 + 160) & 1) != 0)
  {
    swift_bridgeObjectRetain(v1);
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 56);
    v4 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 136) = v4;
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v2;
    v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 144) = v5;
    *v5 = v0;
    v5[1] = sub_10047B0CC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000023, 0x8000000100538370, sub_100484AB0, v4, &type metadata for ()[8]);
  }
  v7 = *(int **)(v0 + 40);
  v8 = v7[1];
  v14 = (uint64_t (*)(void))((char *)v7 + *v7);
  swift_bridgeObjectRetain(v1);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc(v8);
  *(_QWORD *)(v0 + 120) = v9;
  *v9 = v0;
  v9[1] = sub_10047AF74;
  v10 = v14;
  return v10();
}

uint64_t sub_10047AF28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047AF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10047B084;
  else
    v3 = sub_10047AFD8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10047AFD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  swift_release(v0[6]);
  v1 = v0[14];
  v2 = v0[7];
  v3 = swift_task_alloc(32);
  v0[17] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_10047B0CC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000023, 0x8000000100538370, sub_100484AB0, v3, &type metadata for ()[8]);
}

uint64_t sub_10047B084()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 112), 2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047B0CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10047B180;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 136));
    v4 = sub_10047B138;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047B138()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047B180()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 112), 2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047B1C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047B204(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Class isa;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  char v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  id v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;

  v46 = a2;
  v7 = type metadata accessor for DOCOperationItem(0);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v10)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease(a1);
    v13 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  if (a1 < 0)
    v38 = a1;
  else
    v38 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v38);
  v10 = result;
  if (!result)
    goto LABEL_24;
LABEL_3:
  if (v10 >= 1)
  {
    v44 = a3;
    v45 = a4;
    v12 = 0;
    v52 = a1 & 0xC000000000000001;
    v51 = (id)FPActionTrash;
    v47 = (id)FPActionDelete;
    v13 = _swiftEmptyArrayStorage;
    v50 = xmmword_1004D9B40;
    do
    {
      if (v52)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      else
        v14 = *(id *)(a1 + 8 * v12 + 32);
      v15 = v14;
      v16 = objc_autoreleasePoolPush();
      v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v18 = swift_allocObject(v17, 40, 7);
      *(_OWORD *)(v18 + 16) = v50;
      *(_QWORD *)(v18 + 32) = v15;
      v54 = v18;
      specialized Array._endMutation()(v18);
      v19 = v54;
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v20 = v15;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v19);
      v22 = objc_msgSend(v53, "eligibleActionsForItems:", isa);

      type metadata accessor for FPAction(0);
      v24 = v23;
      v25 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
      v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v22, v24, v25);

      v27 = v51;
      v28 = sub_100028BE0((uint64_t)v27, v26);

      if ((v28 & 1) != 0)
      {
        swift_bridgeObjectRelease(v26);
        *v9 = v20;
        swift_storeEnumTagMultiPayload(v9, v49, 1);
        v29 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (_QWORD *)sub_100153E2C(0, v13[2] + 1, 1, (unint64_t)v13);
        v31 = v13[2];
        v30 = v13[3];
        if (v31 >= v30 >> 1)
          v13 = (_QWORD *)sub_100153E2C(v30 > 1, v31 + 1, 1, (unint64_t)v13);
        v13[2] = v31 + 1;
        sub_1000E2AB4((uint64_t)v9, (uint64_t)v13+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v31);
      }
      else
      {
        v32 = v47;
        v33 = sub_100028BE0((uint64_t)v32, v26);

        swift_bridgeObjectRelease(v26);
        if ((v33 & 1) != 0)
        {
          v34 = v20;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
          v36 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v35 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v36 >= v35 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
          v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
          specialized Array._endMutation()(v37);
        }
      }
      ++v12;
      objc_autoreleasePoolPop(v16);

    }
    while (v10 != v12);
    swift_bridgeObjectRelease(a1);
    a3 = v44;
    a4 = v45;
LABEL_25:
    v39 = v46;
    if (v13[2])
    {
      swift_bridgeObjectRetain(v13);
      sub_100477E1C(3, (uint64_t)v13, 0, 0, 0, 1, (uint64_t)v39, 0, 0);
      swift_bridgeObjectRelease(v13);
    }
    v40 = v55;
    if ((unint64_t)v55 >> 62)
    {
      if (v55 < 0)
        v42 = v55;
      else
        v42 = v55 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v55);
      v43 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(v40);
      if (!v43)
        goto LABEL_30;
    }
    else if (!*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_30:
      swift_bridgeObjectRelease(v13);
      return swift_bridgeObjectRelease(v40);
    }
    v41 = swift_bridgeObjectRetain(v40);
    sub_10047B670(v41, v39, a3, a4);
    swift_bridgeObjectRelease(v40);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void sub_10047B670(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  objc_class *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(_QWORD, uint64_t);
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;

  v5 = v4;
  v10 = swift_allocObject(&unk_1005EF3E8, 24, 7);
  *(_QWORD *)(v10 + 16) = a1;
  v11 = (objc_class *)type metadata accessor for DOCBlockOperation(0);
  v12 = objc_allocWithZone(v11);
  swift_bridgeObjectRetain(a1);
  v13 = (void *)DOCBlockOperation.init(block:)(sub_100487B80, v10);
  v14 = objc_allocWithZone((Class)type metadata accessor for DOCDeletePreflightUIOperation(0));
  swift_bridgeObjectRetain(a1);
  v15 = a2;
  v16 = (void *)DOCDeletePreflightUIOperation.init(items:alertPresenting:)(a1, v15);
  v17 = (_QWORD *)swift_allocObject(&unk_1005EF410, 40, 7);
  v17[2] = a1;
  v17[3] = v5;
  v17[4] = v15;
  v18 = objc_allocWithZone(v11);
  swift_bridgeObjectRetain(a1);
  v19 = v15;
  v20 = v5;
  v21 = (void *)DOCBlockOperation.init(block:)(sub_100487BBC, v17);
  v22 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v23 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1004DA350;
  *(_QWORD *)(v23 + 32) = v13;
  *(_QWORD *)(v23 + 40) = v16;
  v36 = v23;
  specialized Array._endMutation()(v23);
  v24 = (objc_class *)type metadata accessor for DOCChainOperation(0);
  objc_allocWithZone(v24);
  v25 = v13;
  v26 = v16;
  v27 = (_QWORD *)DOCChainOperation.init(operations:)(v36);
  (*(void (**)(uint64_t))((swift_isaMask & *v27) + 0x150))(1);
  v28 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1004DA350;
  *(_QWORD *)(v28 + 32) = v27;
  *(_QWORD *)(v28 + 40) = v21;
  v37 = v28;
  specialized Array._endMutation()(v28);
  objc_allocWithZone(v24);
  v29 = v27;
  v30 = v21;
  v31 = (_QWORD *)DOCChainOperation.init(operations:)(v37);
  (*(void (**)(_QWORD))((swift_isaMask & *v31) + 0x150))(0);
  if (a3)
  {
    v32 = swift_allocObject(&unk_1005EF438, 32, 7);
    *(_QWORD *)(v32 + 16) = a3;
    *(_QWORD *)(v32 + 24) = a4;
    v33 = *(void (**)(_QWORD, uint64_t))((swift_isaMask & *v31) + 0xB0);
    sub_10008BA00(a3, a4);
    v34 = v31;
    v33(sub_100487BC8, v32);

  }
  v35 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  objc_msgSend(v35, "addOperation:", v31);

}

void sub_10047B94C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[5];
  _QWORD *v22;

  v9 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v10 = static os_log_type_t.debug.getter(v9);
  v11 = sub_10006922C((uint64_t *)&unk_100644560);
  v12 = swift_allocObject(v11, 112, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  *(_QWORD *)(v12 + 64) = sub_10006A638();
  *(_QWORD *)(v12 + 32) = 0xD000000000000032;
  *(_QWORD *)(v12 + 40) = 0x8000000100538CD0;
  *(_QWORD *)(v12 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  *(_QWORD *)(v12 + 104) = sub_100083500((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v12 + 72) = a1;
  v13 = a1;
  os_log(_:dso:log:type:_:)("%@: attempting to unarchive %@", 30, 2, &_mh_execute_header, v9, v10, v12);

  v14 = objc_msgSend(v13, "itemID", swift_bridgeObjectRelease(v12).n128_f64[0]);
  v15 = (_QWORD *)swift_allocObject(&unk_1005EFA50, 56, 7);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = v13;
  v15[5] = v4;
  v15[6] = a2;
  v21[4] = sub_1004880C4;
  v22 = v15;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_10013103C;
  v21[3] = &unk_1005EFA68;
  v16 = _Block_copy(v21);
  v17 = v22;
  v18 = v13;
  swift_retain();
  v19 = v4;
  v20 = a2;
  objc_msgSend(v19, "fetchParentsForItemID:recursively:completionHandler:", v14, 0, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);

}

void sub_10047BB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  dispatch_group_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  NSObject *v22;
  id v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  void **aBlock;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  _QWORD *v54;

  v4 = v3;
  v42 = a3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  __chkstk_darwin(v11);
  v43 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_1005EF6B8, 24, 7);
  *(_QWORD *)(v13 + 16) = _swiftEmptyArrayStorage;
  v14 = dispatch_group_create();
  if ((unint64_t)a1 >> 62)
  {
    v36 = a2;
    if (a1 < 0)
      v37 = a1;
    else
      v37 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v38 = v37;
    a2 = v36;
    v15 = _CocoaArrayWrapper.endIndex.getter(v38);
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  v46 = v10;
  v47 = v8;
  if (!v15)
  {
    swift_bridgeObjectRelease(a1);
LABEL_12:
    v24 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v25 = (void *)static OS_dispatch_queue.main.getter(v24);
    v26 = (_QWORD *)swift_allocObject(&unk_1005EF730, 40, 7);
    v27 = v42;
    v26[2] = a2;
    v26[3] = v27;
    v26[4] = v13;
    v53 = sub_100360C78;
    v54 = v26;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_10004A82C;
    v52 = &unk_1005EF748;
    v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v29 = v43;
    static DispatchQoS.unspecified.getter(v30);
    v48 = _swiftEmptyArrayStorage;
    v31 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v32 = sub_10006922C((uint64_t *)&unk_100647540);
    v33 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    v34 = v46;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v32, v33, v7, v31);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v29, v34, v25, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v7);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v45);
    v35 = v54;
    swift_release(v13);
    swift_release(v35);
    return;
  }
  if (v15 >= 1)
  {
    v40 = a2;
    v41 = v7;
    v16 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1);
      else
        v17 = *(id *)(a1 + 8 * v16 + 32);
      v18 = v17;
      ++v16;
      dispatch_group_enter(v14);
      v19 = (_QWORD *)swift_allocObject(&unk_1005EF6E0, 40, 7);
      v19[2] = v14;
      v19[3] = v18;
      v19[4] = v13;
      v53 = sub_100487C78;
      v54 = v19;
      aBlock = _NSConcreteStackBlock;
      v50 = 1107296256;
      v51 = sub_100175118;
      v52 = &unk_1005EF6F8;
      v20 = _Block_copy(&aBlock);
      v21 = v54;
      v22 = v14;
      v23 = v18;
      swift_retain();
      objc_msgSend(v4, "fetchURLForItem:completionHandler:", v23, v20, swift_release(v21).n128_f64[0]);
      _Block_release(v20);

    }
    while (v15 != v16);
    swift_bridgeObjectRelease(a1);
    a2 = v40;
    v7 = v41;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t FPItemManager.duplicateItems(_:desiredFileNames:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch(sub_10047BF44, 0, 0);
}

uint64_t sub_10047BF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 24);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v7 = *(_QWORD *)(v0 + 24);
    else
      v7 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
    v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v1);
    if (v8)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v2 = *(_QWORD *)(v0 + 40);
    v10 = *(_OWORD *)(v0 + 24);
    v3 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 48) = v3;
    *(_OWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 32) = v2;
    v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 56) = v4;
    v5 = sub_10006922C(&qword_100644580);
    *v4 = v0;
    v4[1] = sub_10047C08C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000023, 0x800000010051A270, sub_10021F528, v3, v5);
  }
  sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  v9 = static NSError.noSuchFileError.getter();
  swift_willThrow(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047C08C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10047C0F8;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 48));
    v4 = sub_100114C70;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047C0F8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10047C130(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, void **a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  void **v45;
  uint64_t v46;
  void **v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void **aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;

  v10 = v9;
  v47 = a6;
  v18 = type metadata accessor for Logger(0);
  v49 = *(_QWORD *)(v18 - 8);
  v50 = v18;
  __chkstk_darwin(v18);
  v48 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCRenameOperation(0);
  v20 = (void *)objc_opt_self(DOCUndoManager);
  v21 = a1;
  swift_bridgeObjectRetain(a3);
  v22 = (void *)DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)(v21, a2, a3, objc_msgSend(v20, "shared"));
  v23 = swift_allocObject(&unk_1005EEE98, 72, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  *(_QWORD *)(v23 + 32) = v10;
  *(_QWORD *)(v23 + 40) = a4;
  *(_BYTE *)(v23 + 48) = a5;
  *(_QWORD *)(v23 + 56) = v47;
  *(_QWORD *)(v23 + 64) = a7;
  v56 = sub_100487788;
  v57 = v23;
  aBlock = _NSConcreteStackBlock;
  v53 = 1107296256;
  v54 = sub_10015936C;
  v55 = &unk_1005EEEB0;
  v24 = _Block_copy(&aBlock);
  v25 = v57;
  swift_bridgeObjectRetain(a3);
  v26 = v22;
  v27 = v10;
  v28 = a4;
  swift_retain();
  objc_msgSend(v26, "setActionCompletionBlock:", v24, swift_release(v25).n128_f64[0]);
  _Block_release(v24);

  if (a8)
  {
    v30 = swift_allocObject(&unk_1005EEEE8, 32, 7);
    *(_QWORD *)(v30 + 16) = a8;
    *(_QWORD *)(v30 + 24) = a9;
    v56 = sub_10048779C;
    v57 = v30;
    aBlock = _NSConcreteStackBlock;
    v53 = 1107296256;
    v54 = sub_10047CFA8;
    v55 = &unk_1005EEF00;
    v31 = _Block_copy(&aBlock);
    v32 = v57;
    sub_10008BA00(a8, a9);
    v33 = v26;
    sub_10008BA00(a8, a9);
    objc_msgSend(v33, "setFinishedBlock:", v31, swift_release(v32).n128_f64[0]);
    _Block_release(v31);

    v29 = sub_100087534(a8, a9);
  }
  v34 = Logger.Rename.unsafeMutableAddressor(v29);
  v36 = v48;
  v35 = v49;
  v37 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v34, v50);
  v38 = v26;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.debug.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc(22, -1);
    v42 = (_QWORD *)swift_slowAlloc(8, -1);
    v47 = (void **)swift_slowAlloc(32, -1);
    aBlock = v47;
    *(_DWORD *)v41 = 136315394;
    v51 = sub_1000544FC(0xD000000000000063, 0x80000001005386F0, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &aBlock);
    *(_WORD *)(v41 + 12) = 2112;
    v51 = (uint64_t)v38;
    v43 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &aBlock);
    *v42 = v38;

    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s: Adding Rename Operation %@", (uint8_t *)v41, 0x16u);
    v44 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v42, 1, v44);
    swift_slowDealloc(v42, -1, -1);
    v45 = v47;
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  }
  objc_msgSend(v27, "scheduleAction:", v38);

}

void sub_10047C58C(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, void **a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  uint64_t v52;
  void **v53;
  uint64_t v54;
  void **v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **aBlock;
  uint64_t v61;
  void *v62;
  void *v63;
  void (*v64)(uint64_t);
  uint64_t v65;

  v10 = v9;
  v55 = a8;
  v18 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  __chkstk_darwin(v18);
  v56 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCRenameOperation(0);
  v20 = (void *)objc_opt_self(DOCUndoManager);
  v21 = a1;
  swift_bridgeObjectRetain(a3);
  v22 = (void *)DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)(v21, a2, a3, objc_msgSend(v20, "shared"));
  v23 = swift_allocObject(&unk_1005EEA60, 72, 7);
  *(_QWORD *)(v23 + 16) = v10;
  *(_QWORD *)(v23 + 24) = a2;
  *(_QWORD *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = a4;
  *(_BYTE *)(v23 + 48) = a5;
  *(_QWORD *)(v23 + 56) = a6;
  *(_QWORD *)(v23 + 64) = a7;
  v64 = sub_1004864AC;
  v65 = v23;
  aBlock = _NSConcreteStackBlock;
  v61 = 1107296256;
  v62 = sub_10015936C;
  v63 = &unk_1005EEA78;
  v24 = _Block_copy(&aBlock);
  v25 = v65;
  swift_bridgeObjectRetain(a3);
  v26 = v22;
  v27 = v10;
  v28 = (uint64_t)v55;
  v29 = v27;
  v30 = a4;
  swift_retain();
  swift_release(v25);
  objc_msgSend(v26, "setActionCompletionBlock:", v24);
  _Block_release(v24);

  v31 = swift_allocObject(&unk_1005EEAB0, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16);
  v32 = swift_allocObject(&unk_1005EEAD8, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16);
  v33 = swift_allocObject(&unk_1005EEB00, 32, 7);
  *(_QWORD *)(v33 + 16) = v31;
  *(_QWORD *)(v33 + 24) = v32;
  v64 = (void (*)(uint64_t))sub_1004889A0;
  v65 = v33;
  aBlock = _NSConcreteStackBlock;
  v61 = 1107296256;
  v62 = sub_1000602CC;
  v63 = &unk_1005EEB18;
  v34 = _Block_copy(&aBlock);
  v35 = v65;
  v36 = v26;
  swift_release(v35);
  objc_msgSend(v36, "setErrorRecoveryHandler:", v34);
  _Block_release(v34);

  if (v28)
  {
    v38 = swift_allocObject(&unk_1005EEB50, 32, 7);
    *(_QWORD *)(v38 + 16) = v28;
    *(_QWORD *)(v38 + 24) = a9;
    v64 = (void (*)(uint64_t))sub_10048899C;
    v65 = v38;
    aBlock = _NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_10047CFA8;
    v63 = &unk_1005EEB68;
    v39 = _Block_copy(&aBlock);
    v40 = v65;
    sub_10008BA00(v28, a9);
    v41 = v36;
    sub_10008BA00(v28, a9);
    swift_release(v40);
    objc_msgSend(v41, "setFinishedBlock:", v39);
    _Block_release(v39);

    v37 = sub_100087534(v28, a9);
  }
  v42 = Logger.Rename.unsafeMutableAddressor(v37);
  v44 = v56;
  v43 = v57;
  v45 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v42, v58);
  v46 = v36;
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc(22, -1);
    v50 = (_QWORD *)swift_slowAlloc(8, -1);
    v55 = (void **)swift_slowAlloc(32, -1);
    aBlock = v55;
    *(_DWORD *)v49 = 136315394;
    v59 = sub_1000544FC(0xD000000000000066, 0x8000000100538490, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &aBlock);
    *(_WORD *)(v49 + 12) = 2112;
    v59 = (uint64_t)v46;
    v51 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &aBlock);
    *v50 = v46;

    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s: Adding Rename Operation %@", (uint8_t *)v49, 0x16u);
    v52 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v50, 1, v52);
    swift_slowDealloc(v50, -1, -1);
    v53 = v55;
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v49, -1, -1);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  }
  objc_msgSend(v29, "scheduleAction:", v46);

}

uint64_t FPItemManager.createNewFolder(parentItem:folderName:shouldBounceOnCollision:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + 88) = a4;
  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = v4;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  return swift_task_switch(sub_10047CAD4, 0, 0);
}

uint64_t sub_10047CAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = *(unsigned __int8 *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(void **)(v0 + 48);
  v5 = *(void **)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = (void *)objc_opt_self(DOCUndoManager);
  v7 = v5;
  swift_bridgeObjectRetain(v2);
  v8 = objc_msgSend(v6, "shared");
  v9 = objc_allocWithZone((Class)type metadata accessor for DOCCreateFolderOperation(0));
  v10 = (void *)DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(v7, v4, v2, v8);
  *(_QWORD *)(v0 + 56) = v10;
  objc_msgSend(v10, "setShouldBounceOnCollision:", v1);
  objc_msgSend(v3, "scheduleAction:", v10);
  v11 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 64) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  v12 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 72) = v12;
  v13 = sub_10006922C(&qword_100647560);
  *v12 = v0;
  v12[1] = sub_10047CC2C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003FLL, 0x80000001005383A0, sub_100486468, v11, v13);
}

uint64_t sub_10047CC2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10047CCCC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 64));
    v4 = sub_10047CC98;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047CC98()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10047CCCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10047CD08(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void **v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  void *v23;
  void *v24;
  uint64_t v25;

  v3 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v4 = static os_log_type_t.debug.getter(v3);
  v5 = sub_10006922C((uint64_t *)&unk_100644560);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v6 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
  *(_QWORD *)(v6 + 64) = sub_100083500(&qword_100657300, (unint64_t *)&unk_100643460, FPProviderDomain_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v6 + 32) = a1;
  v7 = a1;
  os_log(_:dso:log:type:_:)("diconnecting domain %@", 22, 2, &_mh_execute_header, v3, v4, v6);

  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(objc_allocWithZone((Class)FPDisconnectDomainOperation), "initWithDomain:", v7);
  v9 = swift_allocObject(&unk_1005EEAB0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = swift_allocObject(&unk_1005EEAD8, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = swift_allocObject(&unk_1005EF618, 32, 7);
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v10;
  v24 = sub_100487C24;
  v25 = v11;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_1000602CC;
  v23 = &unk_1005EF630;
  v12 = _Block_copy(&v20);
  v13 = v25;
  v14 = v8;
  objc_msgSend(v14, "setErrorRecoveryHandler:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);

  v15 = swift_allocObject(&unk_1005EF668, 24, 7);
  *(_QWORD *)(v15 + 16) = v7;
  v24 = sub_100487C3C;
  v25 = v15;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_10015936C;
  v23 = &unk_1005EF680;
  v16 = _Block_copy(&v20);
  v17 = v25;
  v18 = v7;
  v19 = v14;
  objc_msgSend(v19, "setActionCompletionBlock:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);

  objc_msgSend(v1, "scheduleAction:", v19);
}

uint64_t sub_10047CFA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(__int128 *, void *);
  id v7;
  __int128 v9;
  __int128 v10;

  v6 = *(void (**)(__int128 *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    *((_QWORD *)&v10 + 1) = swift_getObjectType(a2);
    *(_QWORD *)&v9 = a2;
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(&v9, a3);
  swift_release(v5);

  return sub_10000CB4C((uint64_t)&v9, &qword_100642730);
}

uint64_t FPItemManager.rename(item:name:overwriteExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + 80) = a4;
  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = v4;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  return swift_task_switch(sub_10047D05C, 0, 0);
}

uint64_t sub_10047D05C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 80);
  v8 = *(_OWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = v8;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 40) = v2;
  *(_QWORD *)(v4 + 48) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 64) = v5;
  v6 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  *v5 = v0;
  v5[1] = sub_10047D140;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000025, 0x800000010052F960, sub_1003C99F0, v4, v6);
}

uint64_t sub_10047D140()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003245D0;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    v4 = sub_100114C70;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_10047D1AC(char *a1)
{
  sub_10039DBF0(*a1);
}

void sub_10047D1B8()
{
  char *v0;

  sub_1000E3274(0, *v0);
}

void sub_10047D1C4(uint64_t a1)
{
  char *v1;

  sub_1000E2EAC(a1, *v1);
}

void sub_10047D1CC(uint64_t a1)
{
  char *v1;

  sub_1000E3274(a1, *v1);
}

unint64_t sub_10047D1D4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1004866DC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10047D200()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10047D228 + 4 * byte_1004E9F92[*v0]))();
}

void sub_10047D228(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 2037411651;
  a1[1] = v1;
}

void sub_10047D238(_QWORD *a1@<X8>)
{
  *a1 = 0x746163696C707544;
  a1[1] = 0xE900000000000065;
}

void sub_10047D2D4(int a1, id a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  _OWORD v11[2];
  _OWORD v12[2];

  v5 = objc_msgSend(a2, "recoveryAttempter");
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v11, v5);
    swift_unknownObjectRelease(v6);
    sub_100079B28(v11, v12);
    v7 = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    swift_dynamicCast(&v10, v12, (char *)&type metadata for Any + 8, v7, 7);
    v8 = v10;
    v9 = (void *)_convertErrorToNSError(_:)(a2);
    objc_msgSend(v8, "attemptRecoveryFromError:optionIndex:", v9, a3);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10047D3AC(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  __n128 v5;
  uint64_t result;

  if (a2)
  {
    v5 = swift_retain();
    a2(v5);
    return sub_100087534((uint64_t)a2, a3);
  }
  return result;
}

void sub_10047D3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  NSString v10;
  NSString v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;

  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v11 = 0;
  }
  v27 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v16 = a5;
    else
      v16 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v12)
      goto LABEL_16;
  }
  else
  {
    v12 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a5);
    if (!v12)
      goto LABEL_16;
  }
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  for (i = 0; i != v12; ++i)
  {
    if ((a5 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a5);
    else
      v14 = *(id *)(a5 + 8 * i + 32);
    v15 = v14;
    objc_msgSend(v27, "addAction:", v14);

  }
LABEL_16:
  *(_QWORD *)&v17 = swift_bridgeObjectRelease(a5).n128_u64[0];
  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v18 = a5;
    else
      v18 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a5);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(a5).n128_u64[0];
    if (v19 != 1)
      goto LABEL_31;
  }
  else if (*(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_31;
  }
  a5 = (uint64_t)v27;
  v20 = objc_msgSend((id)a5, "actions");
  v21 = sub_10004F2F0(0, &qword_1006572A0, UIAlertAction_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  if (!((unint64_t)v12 >> 62))
  {
    v22 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
      goto LABEL_25;
LABEL_37:
    swift_bridgeObjectRelease(v12);
    __break(1u);
    goto LABEL_38;
  }
LABEL_33:
  if (v12 < 0)
    v26 = v12;
  else
    v26 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v22 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v12);
  if (!v22)
    goto LABEL_37;
LABEL_25:
  v23 = v22 - 1;
  if (__OFSUB__(v22, 1))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_39:
    v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v12);
    goto LABEL_30;
  }
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v23 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v24 = *(id *)(v12 + 8 * v23 + 32);
LABEL_30:
    v25 = v24;
    objc_msgSend((id)a5, "setPreferredAction:", v24, swift_bridgeObjectRelease(v12).n128_f64[0]);

LABEL_31:
    objc_msgSend(a6, "presentViewController:animated:completion:", v27, 1, 0, v17);

    return;
  }
  __break(1u);
}

void sub_10047D6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  __n128 v19;
  Swift::String v20;

  v7 = (void *)_convertErrorToNSError(_:)(a1);
  v8 = objc_msgSend(v7, "localizedRecoverySuggestion");

  if (v8)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v13 = (id)_DocumentManagerBundle(v12);
    if (v13)
    {
      v14 = v13;
      sub_10004F2F0(0, (unint64_t *)&unk_10064CE70, UIAlertController_ptr);
      v20._object = (void *)0xE200000000000000;
      v15._countAndFlagsBits = 19279;
      v15._object = (void *)0xE200000000000000;
      v16.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v16.value._object = (void *)0xEB00000000656C62;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v20._countAndFlagsBits = 19279;
      v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v20);

      static UIAlertController.doc_presentPassphraseInputAlert(title:message:actionTitle:alertPresenting:completionHandler:)(0, 0, v9, v11, v18._countAndFlagsBits, v18._object, a4, a2, v19, a3);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v18._object);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_10047D81C(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4;
  void (*v5)(void);
  void *v6;
  uint64_t v7;
  id v8;
  double result;

  v5 = *(void (**)(void))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_1005EF348, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain();
  v8 = a2;
  v5();
  swift_release(v4);

  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_10047D8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6;
  uint64_t v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = String._bridgeToObjectiveC()();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = _convertErrorToNSError(_:)(a3);
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);

}

void sub_10047D91C(_QWORD *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  if (!a2)
  {
    sub_10047E520(a4, a5, a1, a6, a7);
    v21 = *(id *)DOCLog.UI.unsafeMutableAddressor(v20);
    static os_log_type_t.debug.getter(v21);
    v22 = sub_10006922C((uint64_t *)&unk_100644560);
    v23 = swift_allocObject(v22, 112, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = sub_10006A638();
    *(_QWORD *)(v23 + 32) = 0xD000000000000076;
    *(_QWORD *)(v23 + 40) = 0x80000001005388C0;
    __asm { BR              X12 }
  }
  v57 = v66;
  v58 = v63;
  v56 = v65;
  v13 = v64;
  v14 = v67;
  v15 = (void *)_convertErrorToNSError(_:)(a2);
  v16 = NSError.isUserCancelledError.getter();
  if ((v16 & 1) != 0)
  {
    v17 = *(id *)DOCLog.UI.unsafeMutableAddressor(v16);
    static os_log_type_t.error.getter(v17);
    v18 = sub_10006922C((uint64_t *)&unk_100644560);
    v19 = swift_allocObject(v18, 152, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_10006A638();
    *(_QWORD *)(v19 + 32) = 0xD000000000000076;
    *(_QWORD *)(v19 + 40) = 0x80000001005388C0;
    __asm { BR              X12 }
  }
  v55 = (uint64_t)a7;
  v24 = ((uint64_t (*)(void))NSError.isFilenameCollisionError.getter)();
  if ((v24 & 1) == 0
    || (v25 = objc_opt_self(FPMoveOperation), (v24 = swift_dynamicCastObjCClass(a6, v25)) == 0))
  {
    v43 = *(id *)DOCLog.UI.unsafeMutableAddressor(v24);
    static os_log_type_t.error.getter(v43);
    v44 = sub_10006922C((uint64_t *)&unk_100644560);
    v45 = swift_allocObject(v44, 152, 7);
    *(_OWORD *)(v45 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v45 + 56) = &type metadata for String;
    *(_QWORD *)(v45 + 64) = sub_10006A638();
    *(_QWORD *)(v45 + 32) = 0xD000000000000076;
    *(_QWORD *)(v45 + 40) = 0x80000001005388C0;
    __asm { BR              X12 }
  }
  if (a3 != 1)
  {
LABEL_17:
    v46 = *(id *)DOCLog.UI.unsafeMutableAddressor(v24);
    static os_log_type_t.error.getter(v46);
    v47 = sub_10006922C((uint64_t *)&unk_100644560);
    v48 = swift_allocObject(v47, 152, 7);
    *(_OWORD *)(v48 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    *(_QWORD *)(v48 + 64) = sub_10006A638();
    *(_QWORD *)(v48 + 32) = 0xD000000000000076;
    *(_QWORD *)(v48 + 40) = 0x80000001005388C0;
    __asm { BR              X12 }
  }
  v26 = objc_msgSend(v15, "userInfo");
  v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSFileProviderErrorItemKey);
  v30 = v29;
  if (!*(_QWORD *)(v27 + 16) || (v31 = sub_10007EF08(v28, v29), (v32 & 1) == 0))
  {
    v61 = 0u;
    v62 = 0u;
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v27);
    goto LABEL_19;
  }
  sub_100069BD8(*(_QWORD *)(v27 + 56) + 32 * v31, (uint64_t)&v61);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v27);
  if (!*((_QWORD *)&v62 + 1))
  {
LABEL_19:
    sub_10000CB4C((uint64_t)&v61, &qword_100642730);
    goto LABEL_20;
  }
  v33 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  if ((swift_dynamicCast(&v60, &v61, (char *)&type metadata for Any + 8, v33, 6) & 1) == 0)
  {
LABEL_20:
    *(_QWORD *)&v61 = 0;
    *((_QWORD *)&v61 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(63);
    v49._countAndFlagsBits = 0xD00000000000003DLL;
    v49._object = (void *)0x8000000100538A10;
    String.append(_:)(v49);
    v50 = objc_msgSend(v15, "description");
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    v54._countAndFlagsBits = v51;
    v54._object = v53;
    String.append(_:)(v54);
    swift_bridgeObjectRelease(v53);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v61, *((_QWORD *)&v61 + 1), "Files/FPItemManager+DOCExtensions.swift", 39, 2, 276, 0);
    __break(1u);
    JUMPOUT(0x10047E4A0);
  }
  v34 = v60;
  v35 = objc_opt_self(FPCopyOperation);
  if (!swift_dynamicCastObjCClass(a6, v35)
    || (swift_beginAccess(v13 + 16, &v61, 0, 0),
        v36 = *(_QWORD *)(v13 + 16),
        swift_bridgeObjectRetain(v36),
        v37 = sub_1000DFC34((uint64_t)v34, v36),
        swift_bridgeObjectRelease(v36),
        (v37 & 1) == 0))
  {

    goto LABEL_17;
  }
  v39 = *(id *)DOCLog.UI.unsafeMutableAddressor(v38);
  v40 = static os_log_type_t.debug.getter(v39);
  v41 = sub_10006922C((uint64_t *)&unk_100644560);
  v42 = swift_allocObject(v41, 72, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v42 + 56) = &type metadata for String;
  *(_QWORD *)(v42 + 64) = sub_10006A638();
  *(_QWORD *)(v42 + 32) = 0xD000000000000076;
  *(_QWORD *)(v42 + 40) = 0x80000001005388C0;
  os_log(_:dso:log:type:_:)("%@: Copy and pasting within the same folder, so automatically bounce", 68, 2, &_mh_execute_header, v39, v40, v42);

  swift_bridgeObjectRelease(v42);
  sub_100477E1C(a8, v56, v55, 1, v57, v14 & 1, v58, a4, a5);

}

void sub_10047E520(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4, void *a5)
{
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD aBlock[5];
  _QWORD *v27;

  if (a1)
  {
    if (a3)
    {
      swift_retain();
      v8 = a3;
    }
    else
    {
      v14 = objc_opt_self(FPMoveOperation);
      v15 = swift_dynamicCastObjCClass(a4, v14);
      if (v15)
      {
        v16 = (void *)v15;
        sub_10008BA00(a1, a2);
        v17 = a4;
        v18 = objc_msgSend(v16, "transferResults");
        if (v18)
        {
          v19 = v18;
          v20 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
          v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, v20, &protocol witness table for AnyHashable);

          v8 = sub_100477674(v21);
          swift_bridgeObjectRelease(v21);

        }
        else
        {

          v8 = 0;
        }
      }
      else
      {
        if (a5)
        {
          v22 = sub_10006922C((uint64_t *)&unk_1006441A0);
          v23 = swift_allocObject(v22, 40, 7);
          *(_OWORD *)(v23 + 16) = xmmword_1004D9B40;
          *(_QWORD *)(v23 + 32) = a5;
          aBlock[0] = v23;
          swift_retain();
          specialized Array._endMutation()(v24);
          v8 = (_QWORD *)aBlock[0];
        }
        else
        {
          swift_retain();
          v8 = 0;
        }
        v25 = a5;
      }
    }
    v9 = (_QWORD *)swift_allocObject(&unk_1005EF398, 40, 7);
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = v8;
    aBlock[4] = sub_100093E6C;
    v27 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005EF3B0;
    v10 = _Block_copy(aBlock);
    v11 = v27;
    sub_10008BA00(a1, a2);
    swift_bridgeObjectRetain(a3);
    swift_release(v11);
    DOCRunInMainThread(v10);
    sub_100087534(a1, a2);
    _Block_release(v10);
  }
}

void sub_10047E738(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, _QWORD *a6)
{
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v9 = *(void **)(a3 + *a6);
  *(_QWORD *)(a3 + *a6) = a1;
  v10 = a1;

  if (a1)
  {
    v11 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v12 + 32) = v10;
    v14 = v12;
    specialized Array._endMutation()(v12);
    v13 = v10;
    a4(v14, a2, 1);

    swift_bridgeObjectRelease(v14);
  }
  else
  {
    a4(0, a2, 1);
  }
}

double sub_10047E820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  NSString v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  double result;

  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v13, "pathExtension");

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v18, "stringByDeletingPathExtension");

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  sub_100486F60(a1, v20, v22, v15, v17, a5, a6, a7, a8);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  return result;
}

void sub_10047E930(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE v8[24];
  uint64_t v9;

  sub_1000271D4(a1, (uint64_t)v8, &qword_100642730);
  if (v9)
  {
    v5 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    if (swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v5, 6))
      v6 = v7;
    else
      v6 = 0;
  }
  else
  {
    sub_10000CB4C((uint64_t)v8, &qword_100642730);
    v6 = 0;
  }
  a3(v6, a2);

}

void sub_10047E9E8(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  id v9;
  _QWORD v10[5];
  _QWORD *v11;

  v6 = (_QWORD *)swift_allocObject(&unk_1005EEE48, 40, 7);
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v10[4] = sub_1000AD138;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10004A82C;
  v10[3] = &unk_1005EEE60;
  v7 = _Block_copy(v10);
  v8 = v11;
  swift_retain();
  v9 = a3;
  swift_release(v8);
  DOCRunInMainThread(v7);
  _Block_release(v7);
}

id sub_10047EAA4(uint64_t a1, unint64_t a2, char a3, void (*a4)(id), uint64_t a5, void *a6, void *a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSString v15;
  id v16;
  uint64_t v17;
  id result;
  void *v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  void *object;
  uint64_t v24;
  id v25;
  NSString v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void (*v39)(id);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t aBlock[5];
  uint64_t v44;
  Swift::String v45;

  v38 = a7;
  v39 = a4;
  v12 = type metadata accessor for Logger(0);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  v37 = a1;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v16 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v15, 1);

  result = (id)_DocumentManagerBundle(v17);
  if (result)
  {
    v19 = result;
    v45._object = (void *)0xE200000000000000;
    v20._countAndFlagsBits = 19279;
    v20._object = (void *)0xE200000000000000;
    v21.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v21.value._object = (void *)0xEB00000000656C62;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v45._countAndFlagsBits = 19279;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v45)._object;

    v24 = swift_allocObject(&unk_1005EED08, 48, 7);
    *(_BYTE *)(v24 + 16) = a3 & 1;
    *(_QWORD *)(v24 + 24) = v39;
    *(_QWORD *)(v24 + 32) = a5;
    *(_QWORD *)(v24 + 40) = a6;
    swift_retain();
    v25 = a6;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = (uint64_t)sub_1004876B0;
    v44 = v24;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000602CC;
    aBlock[3] = (uint64_t)&unk_1005EED20;
    v27 = _Block_copy(aBlock);
    swift_release(v44);
    v28 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v26, 0, v27);
    _Block_release(v27);

    objc_msgSend(v16, "addAction:", v28);
    objc_msgSend(v16, "setPreferredAction:", v28);
    if ((a3 & 1) == 0)
      v39(v25);
    v29 = Logger.Rename.unsafeMutableAddressor(objc_msgSend(v38, "presentViewController:animated:completion:", v16, 1, 0));
    v31 = v40;
    v30 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v14, v29, v41);
    v32 = swift_bridgeObjectRetain_n(a2, 2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(22, -1);
      v36 = swift_slowAlloc(64, -1);
      aBlock[0] = v36;
      *(_DWORD *)v35 = 136315394;
      v42 = sub_1000544FC(0xD000000000000075, 0x8000000100538500, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, aBlock);
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain(a2);
      v42 = sub_1000544FC(v37, a2, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, aBlock);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s: prompting user with message: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v14, v41);
    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v30);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10047EECC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  _QWORD v12[5];
  _QWORD *v13;

  if ((a2 & 1) != 0)
  {
    v8 = (_QWORD *)swift_allocObject(&unk_1005EED58, 40, 7);
    v8[2] = a3;
    v8[3] = a4;
    v8[4] = a5;
    v12[4] = sub_1000AD138;
    v13 = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10004A82C;
    v12[3] = &unk_1005EED70;
    v9 = _Block_copy(v12);
    v10 = v13;
    swift_retain();
    v11 = a5;
    swift_release(v10);
    DOCRunInMainThread(v9);
    _Block_release(v9);
  }
}

void sub_10047EF8C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, uint64_t, __n128), uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;

  if (!a1)
    goto LABEL_13;
  v13 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v27 = a1;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v27))
      goto LABEL_4;
    goto LABEL_12;
  }
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v14)
  {
LABEL_12:
    swift_bridgeObjectRelease(a1);
LABEL_13:
    v28 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v29 = static os_log_type_t.debug.getter(v28);
    v30 = sub_10006922C((uint64_t *)&unk_100644560);
    v31 = swift_allocObject(v30, 112, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    v32 = sub_10006A638();
    *(_QWORD *)(v31 + 64) = v32;
    *(_QWORD *)(v31 + 32) = 0xD000000000000032;
    *(_QWORD *)(v31 + 40) = 0x8000000100538CD0;
    v37 = a2;
    swift_errorRetain(a2);
    v33 = sub_10006922C((uint64_t *)&unk_1006434A0);
    v34 = String.init<A>(describing:)(&v37, v33);
    *(_QWORD *)(v31 + 96) = &type metadata for String;
    *(_QWORD *)(v31 + 104) = v32;
    *(_QWORD *)(v31 + 72) = v34;
    *(_QWORD *)(v31 + 80) = v35;
    os_log(_:dso:log:type:_:)("%@: Failed to fetch parent item %@ - %@", 39, 2, &_mh_execute_header, v28, v29, v31);

    v36 = swift_bridgeObjectRelease(v31);
    a3(0, a2, v36);
    return;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v13 + 16))
  {
    v15 = *(id *)(a1 + 32);
LABEL_7:
    v16 = v15;
    swift_bridgeObjectRelease(a1);
    v17 = sub_10006922C(&qword_100646C60);
    v18 = type metadata accessor for DOCOperationItem(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(_QWORD *)(v19 + 72);
    v21 = *(unsigned __int8 *)(v19 + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = swift_allocObject(v17, v22 + v20, v21 | 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v23 + v22) = a5;
    swift_storeEnumTagMultiPayload(v23 + v22, v18, 1);
    v24 = (_QWORD *)swift_allocObject(&unk_1005EFAA0, 40, 7);
    v24[2] = a3;
    v24[3] = a4;
    v24[4] = a2;
    v25 = a5;
    v26 = v16;
    swift_retain();
    swift_errorRetain(a2);
    sub_100477E1C(7, v23, (uint64_t)v16, 1, 1, 0, a7, (uint64_t)sub_1004880E0, (uint64_t)v24);
    swift_bridgeObjectRelease(v23);

    swift_release(v24);
    return;
  }
  __break(1u);
}

void sub_10047F24C(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  if (!a1)
    goto LABEL_13;
  v3 = a1;
  v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v5)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease(v3);
    a1 = 0;
    goto LABEL_13;
  }
  if (a1 >= 0)
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v7 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v7))
    goto LABEL_12;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v4 + 16))
  {
    v6 = *(id *)(v3 + 32);
LABEL_7:
    v8 = v6;
    swift_bridgeObjectRelease(v3);
    a1 = (uint64_t)v8;
LABEL_13:
    v9 = (id)a1;
    a2();

    return;
  }
  __break(1u);
}

void sub_10047F328(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v4 = sub_10006922C(&qword_10064D590);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v7);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = (v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject(&unk_1005EF988, v11 + 8, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + v10, v8, v4);
  *(_QWORD *)(v12 + v11) = a2;
  aBlock[4] = sub_100487E48;
  v15 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005EF9A0;
  v13 = _Block_copy(aBlock);
  objc_msgSend(a2, "setCreateFolderCompletionBlock:", v13, swift_release(v15).n128_f64[0]);
  _Block_release(v13);
}

uint64_t sub_10047F474(void *a1, void *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  void (*v7)(void *);
  id v8;
  id v9;
  uint64_t v10;
  void *v11;

  if (a2)
  {
    v11 = a2;
    swift_errorRetain(a2);
    v4 = sub_10006922C(&qword_10064D590);
    return CheckedContinuation.resume(throwing:)(&v11, v4);
  }
  else
  {
    v7 = *(void (**)(void *))((swift_isaMask & *a4) + 0x78);
    v8 = a1;
    v7(a1);
    v11 = a1;
    v9 = v8;
    v10 = sub_10006922C(&qword_10064D590);
    return CheckedContinuation.resume(returning:)(&v11, v10);
  }
}

void sub_10047F52C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  _QWORD v22[5];
  _QWORD *v23;

  v12 = (void *)objc_opt_self(DOCUndoManager);
  v13 = a3;
  swift_bridgeObjectRetain(a5);
  v14 = objc_msgSend(v12, "shared");
  v15 = objc_allocWithZone((Class)type metadata accessor for DOCCreateFolderOperation(0));
  v16 = (void *)DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(v13, a4, a5, v14);
  objc_msgSend(v16, "setShouldBounceOnCollision:", a6 & 1);
  v17 = (_QWORD *)swift_allocObject(&unk_1005EF5C8, 40, 7);
  v17[2] = v16;
  v17[3] = a1;
  v17[4] = a2;
  v22[4] = sub_100487C14;
  v23 = v17;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100083540;
  v22[3] = &unk_1005EF5E0;
  v18 = _Block_copy(v22);
  v19 = v23;
  v20 = v16;
  swift_retain();
  objc_msgSend(v20, "setCreateFolderCompletionBlock:", v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);

  v21 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  objc_msgSend(v21, "scheduleAction:", v20);

}

uint64_t sub_10047F6D0(void *a1, uint64_t a2, _QWORD *a3, void (*a4)(__int128 *, uint64_t))
{
  void (*v7)(void *);
  id v8;
  id v9;
  __int128 v11;
  __int128 v12;

  v7 = *(void (**)(void *))((swift_isaMask & *a3) + 0x78);
  v8 = a1;
  v7(a1);
  if (a1)
  {
    *((_QWORD *)&v12 + 1) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)&v11 = v8;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  v9 = v8;
  a4(&v11, a2);
  return sub_10000CB4C((uint64_t)&v11, &qword_100642730);
}

void sub_10047F798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  _BYTE v12[32];
  _OWORD v13[2];
  __int128 aBlock;
  uint64_t (*v15)(uint64_t);
  void *v16;
  uint64_t (*v17)();
  _QWORD *v18;
  void *v19;

  sub_1000271D4(a1, (uint64_t)&aBlock, &qword_100642730);
  if (v16)
  {
    sub_100079B28(&aBlock, v13);
    sub_100069BD8((uint64_t)v13, (uint64_t)v12);
    v6 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    swift_dynamicCast(&v19, v12, (char *)&type metadata for Any + 8, v6, 7);
    sub_100068588(v13);
    v7 = v19;
  }
  else
  {
    v7 = 0;
  }
  v8 = (_QWORD *)swift_allocObject(&unk_1005EF578, 40, 7);
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = v7;
  v17 = sub_100093E6C;
  v18 = v8;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v15 = sub_10004A82C;
  v16 = &unk_1005EF590;
  v9 = _Block_copy(&aBlock);
  v10 = v18;
  v11 = v7;
  swift_retain();
  swift_release(v10);
  DOCRunInMainThread(v9);
  _Block_release(v9);

}

void sub_10047F8D4(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  void *v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  void **v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *);
  void *v28;
  void *v29;
  uint64_t v30;

  v6 = v5;
  v12 = (void *)objc_opt_self(DOCUndoManager);
  swift_bridgeObjectRetain(a1);
  v13 = a2;
  v14 = objc_msgSend(v12, "shared");
  v15 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
  v16 = sub_10015C348(a1, v13, v14);
  v17 = swift_allocObject(&unk_1005EF898, 17, 7);
  *(_BYTE *)(v17 + 16) = a3;
  v29 = sub_100487DD8;
  v30 = v17;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_1000602CC;
  v28 = &unk_1005EF8B0;
  v18 = _Block_copy(&v25);
  v19 = v30;
  v20 = v16;
  objc_msgSend(v20, "setErrorRecoveryHandler:", v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);

  v21 = swift_allocObject(&unk_1005EF8E8, 32, 7);
  *(_QWORD *)(v21 + 16) = a4;
  *(_QWORD *)(v21 + 24) = a5;
  v29 = sub_10010DF60;
  v30 = v21;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_10015936C;
  v28 = &unk_1005EF900;
  v22 = _Block_copy(&v25);
  v23 = v30;
  v24 = v20;
  swift_retain();
  objc_msgSend(v24, "setActionCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

  objc_msgSend(v6, "scheduleAction:", v24);
}

void sub_10047FAC0(uint64_t a1, char a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  _OWORD v12[2];
  _OWORD v13[2];

  v10 = (id)_convertErrorToNSError(_:)(a1);
  if (objc_msgSend(v10, "code") == (id)-1001)
  {
    v3 = objc_msgSend(v10, "recoveryAttempter");
    if (v3)
    {
      v4 = v3;
      if ((a2 & 1) != 0)
        v5 = 2;
      else
        v5 = 1;
      _bridgeAnyObjectToAny(_:)(v12, v3);
      swift_unknownObjectRelease(v4);
      sub_100079B28(v12, v13);
      v6 = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
      swift_dynamicCast(&v11, v13, (char *)&type metadata for Any + 8, v6, 7);
      v7 = v11;
      v8 = v10;
      v9 = (void *)_convertErrorToNSError(_:)(v8);

      objc_msgSend(v7, "attemptRecoveryFromError:optionIndex:", v9, v5);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {

  }
}

double sub_10047FBE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v9 = sub_10006922C((uint64_t *)&unk_100655280);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005EF870, v14 + v11, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_10047F8D4(a3, a4, a5, (uint64_t)sub_100487DC4, v15);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

void sub_10047FCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  Class isa;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void **v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void *v20;
  uint64_t v21;

  v6 = objc_allocWithZone((Class)FPDeleteOperation);
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  swift_bridgeObjectRetain(a3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a3);
  v8 = objc_msgSend(v6, "initWithItems:", isa);

  objc_msgSend(v8, "setFinishAfterPreflight:", 1);
  v9 = swift_allocObject(&unk_1005EF4B0, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v20 = sub_100487BD0;
  v21 = v9;
  v16 = _NSConcreteStackBlock;
  v17 = 1107296256;
  v18 = sub_10015936C;
  v19 = &unk_1005EF4C8;
  v10 = _Block_copy(&v16);
  v11 = v21;
  v12 = v8;
  swift_retain();
  swift_release(v11);
  objc_msgSend(v12, "setActionCompletionBlock:", v10);
  _Block_release(v10);

  v20 = sub_10047FFA8;
  v21 = 0;
  v16 = _NSConcreteStackBlock;
  v17 = 1107296256;
  v18 = sub_1000602CC;
  v19 = &unk_1005EF4F0;
  v13 = _Block_copy(&v16);
  v14 = v12;
  objc_msgSend(v14, "setErrorRecoveryHandler:", v13);
  _Block_release(v13);

  v15 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  objc_msgSend(v15, "scheduleAction:", v14);

}

uint64_t sub_10047FEC8(uint64_t a1, void (*a2)(_QWORD *, id))
{
  void *v4;
  char v5;
  id v6;
  _QWORD v8[4];

  if (!a1)
    goto LABEL_5;
  swift_errorRetain(a1);
  v4 = (void *)_convertErrorToNSError(_:)(a1);
  v5 = NSError.isUserCancelledError.getter();

  if ((v5 & 1) == 0)
  {
    swift_errorRelease(a1);
LABEL_5:
    v6 = objc_msgSend(objc_allocWithZone((Class)NSError), "init", (unsigned __int128)0, 0, 0);
    a2(v8, v6);

    return sub_10000CB4C((uint64_t)v8, &qword_100642730);
  }
  v8[3] = &type metadata for String;
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  a2(v8, 0);
  swift_errorRelease(a1);
  return sub_10000CB4C((uint64_t)v8, &qword_100642730);
}

void sub_10047FFA8(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  _OWORD v8[2];
  _OWORD v9[2];

  v2 = (void *)_convertErrorToNSError(_:)(a1);
  v3 = objc_msgSend(v2, "recoveryAttempter");

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)(v8, v3);
    swift_unknownObjectRelease(v3);
    sub_100079B28(v8, v9);
    v4 = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v4, 7);
    v5 = v7;
    v6 = (void *)_convertErrorToNSError(_:)(a1);
    objc_msgSend(v5, "attemptRecoveryFromError:optionIndex:", v6, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100480088(void (*a1)(_QWORD *, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t i;
  unint64_t v21;
  unint64_t v22;
  void **v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD v29[3];
  void (*v30)(_QWORD *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];

  v31 = a5;
  v9 = type metadata accessor for DOCOperationItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (void **)((char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v15 = (_QWORD *)((char *)v29 - v14);
  v32 = a3;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v28 = v32;
    else
      v28 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v16 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v16 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v17 = _swiftEmptyArrayStorage;
  if (!v16)
  {
LABEL_16:
    sub_100477E1C(5, (uint64_t)v17, 0, 0, 0, 1, v31, 0, 0);
    swift_bridgeObjectRelease(v17);
    v33[3] = sub_10006922C(&qword_100644580);
    v33[0] = v32;
    swift_bridgeObjectRetain(v32);
    a1(v33, 0);
    return sub_10000CB4C((uint64_t)v33, &qword_100642730);
  }
  v33[0] = _swiftEmptyArrayStorage;
  result = sub_100155054(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v29[1] = a4;
    v29[2] = a2;
    v30 = a1;
    v19 = v32;
    v17 = (_QWORD *)v33[0];
    if ((v32 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v16; ++i)
      {
        *v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
        swift_storeEnumTagMultiPayload(v15, v9, 1);
        v33[0] = v17;
        v22 = v17[2];
        v21 = v17[3];
        if (v22 >= v21 >> 1)
        {
          sub_100155054(v21 > 1, v22 + 1, 1);
          v19 = v32;
          v17 = (_QWORD *)v33[0];
        }
        v17[2] = v22 + 1;
        sub_1000E2AB4((uint64_t)v15, (uint64_t)v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v22);
      }
    }
    else
    {
      v23 = (void **)(v32 + 32);
      do
      {
        v24 = *v23;
        *v13 = *v23;
        swift_storeEnumTagMultiPayload(v13, v9, 1);
        v33[0] = v17;
        v26 = v17[2];
        v25 = v17[3];
        v27 = v24;
        if (v26 >= v25 >> 1)
        {
          sub_100155054(v25 > 1, v26 + 1, 1);
          v17 = (_QWORD *)v33[0];
        }
        v17[2] = v26 + 1;
        sub_1000E2AB4((uint64_t)v13, (uint64_t)v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v26);
        ++v23;
        --v16;
      }
      while (v16);
    }
    a1 = v30;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_100480344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  if (a2)
  {
    v9 = (id)_convertErrorToNSError(_:)(a2);
    if ((NSError.isUserCancelledError.getter() & 1) != 0)
    {
      v6 = swift_allocObject(&unk_1005EF460, 32, 7);
      *(_QWORD *)(v6 + 16) = a3;
      *(_QWORD *)(v6 + 24) = a4;
      aBlock[4] = sub_100066584;
      v11 = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005EF478;
      v7 = _Block_copy(aBlock);
      v8 = v11;
      swift_retain();
      swift_release(v8);
      DOCRunInMainThread(v7);
      _Block_release(v7);

    }
    else
    {

    }
  }
}

void sub_100480430(uint64_t a1, void **a2, uint64_t a3, void *a4, int a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::Bool v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Bool v22;
  void *v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  void *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  void **aBlock;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, void *);
  void *v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t v53;

  v47 = a6;
  HIDWORD(v42) = a5;
  v44 = a1;
  v46 = sub_10006922C(&qword_100643EB0);
  v9 = *(_QWORD *)(v46 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v45 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a4;
  v11 = objc_msgSend(a4, "filename", __chkstk_darwin(v46));
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "pathExtension");

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17 = String.isKnownExtension()();
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v18, "pathExtension");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v21 = v20;

    v22 = String.isKnownExtension()();
    swift_bridgeObjectRelease(v21);
    if (v17)
    {
      v23 = v47;
      if (v22)
      {
        if ((v42 & 0x100000000) != 0)
        {
          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRetain(a3);
LABEL_10:
          v31 = v43;
          type metadata accessor for DOCRenameOperation(0);
          v32 = (void *)objc_opt_self(DOCUndoManager);
          v33 = (void *)DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)(v31, a2, a3, objc_msgSend(v32, "shared"));
          v34 = v45;
          v35 = v46;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v45, v44, v46);
          v36 = *(unsigned __int8 *)(v9 + 80);
          v37 = (v36 + 16) & ~v36;
          v38 = swift_allocObject(&unk_1005EF938, v37 + v10, v36 | 7);
          (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v38 + v37, v34, v35);
          v52 = sub_100487DEC;
          v53 = v38;
          aBlock = _NSConcreteStackBlock;
          v49 = 1107296256;
          v50 = sub_10047CFA8;
          v51 = &unk_1005EF950;
          v39 = _Block_copy(&aBlock);
          v40 = v53;
          v41 = v33;
          objc_msgSend(v41, "setFinishedBlock:", v39, swift_release(v40).n128_f64[0]);
          _Block_release(v39);

          objc_msgSend(v23, "scheduleAction:", v41);
          return;
        }
        v24 = String._bridgeToObjectiveC()();
        v25 = objc_msgSend(v24, "stringByDeletingPathExtension");

        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        aBlock = (void **)v26;
        v49 = v28;
      }
      else
      {
        aBlock = a2;
        v49 = a3;
        swift_bridgeObjectRetain(a3);
      }
      v29._countAndFlagsBits = 46;
      v29._object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      v30._countAndFlagsBits = v14;
      v30._object = v16;
      String.append(_:)(v30);
      swift_bridgeObjectRelease(v16);
      a2 = aBlock;
      a3 = v49;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRetain(a3);
    v23 = v47;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_10048077C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (a2)
  {
    v7[0] = a2;
    swift_errorRetain(a2);
  }
  else
  {
    sub_1000271D4(a1, (uint64_t)v7, &qword_100642730);
    if (v7[3])
    {
      v2 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      if ((swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
      {
        v7[0] = v6;
        v3 = sub_10006922C(&qword_100643EB0);
        return CheckedContinuation.resume(returning:)(v7, v3);
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)v7, &qword_100642730);
    }
    v7[0] = objc_msgSend(objc_allocWithZone((Class)NSError), "init");
  }
  v5 = sub_10006922C(&qword_100643EB0);
  return CheckedContinuation.resume(throwing:)(v7, v5);
}

double sub_100480870(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  id v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v24 = a3;
  v25 = a4;
  v6 = sub_10006922C(&qword_10064CA90);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v22 = a2;
    else
      v22 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v23 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v11 = _bridgeCocoaArray<A>(_:)(v22, v23);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
    v11 = a2;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = (uint64_t *)swift_allocObject(&unk_1005EF9D8, v16 + 8, v12 | 7);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v17 + v13, v9, v6);
  *(uint64_t *)((char *)v17 + v14) = a2;
  v18 = v24;
  *(uint64_t *)((char *)v17 + v15) = v24;
  v19 = v25;
  *(uint64_t *)((char *)v17 + v16) = (uint64_t)v25;
  swift_bridgeObjectRetain(v18);
  v20 = v19;
  swift_bridgeObjectRetain(a2);
  sub_10012A298(v11, (uint64_t)sub_100487F4C, v17);
  swift_release(v17);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_100480A00(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  id v22;
  id v23;
  char *v24;
  void **v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t *v29;
  id v30;
  void *v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  Swift::String v45;
  void **v46;
  uint64_t v47;
  void *v48;
  _BOOL8 v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  void ***v53;
  uint64_t v54;
  void ***v55;
  uint64_t v56;
  char *v57;
  BOOL v58;
  void *v59;
  uint64_t *v60;
  id v61;
  Class isa;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void **v83;
  void **v84;
  unint64_t v85;
  uint64_t v86;
  void **aBlock;
  uint64_t v88;
  void (*v89)(uint64_t, void *);
  void *v90;
  double (*v91)(uint64_t);
  uint64_t v92;

  v10 = sub_10006922C(&qword_10064CA90);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || (ObjectType = swift_getObjectType(a1), (v15 = DOCNode.fpfs_syncFetchFPItem()(ObjectType)) == 0))
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    aBlock = (void **)static NSError.noSuchFileError.getter();
    CheckedContinuation.resume(throwing:)(&aBlock, v10);
    return;
  }
  v16 = (void *)v15;
  v79 = a5;
  v17 = objc_opt_self(DOCUndoManager);
  v82 = a3;
  v18 = (void *)v17;
  swift_bridgeObjectRetain(v82);
  v19 = v16;
  v20 = v18;
  isUniquelyReferenced_nonNull_native = v82;
  v22 = objc_msgSend(v20, "shared");
  v23 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
  v24 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(isUniquelyReferenced_nonNull_native, (void *)v19, 1, v22);
  objc_msgSend(v24, "setShouldBounceOnCollision:", 1);
  if (!a4)
    goto LABEL_38;
  v81 = v24;
  v73 = v12;
  v25 = (void **)sub_1003F3378((uint64_t)_swiftEmptyArrayStorage);
  if ((unint64_t)isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_42:
    if (isUniquelyReferenced_nonNull_native < 0)
      v70 = isUniquelyReferenced_nonNull_native;
    else
      v70 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(isUniquelyReferenced_nonNull_native, 2);
    v26 = _CocoaArrayWrapper.endIndex.getter(v70);
  }
  else
  {
    v26 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(isUniquelyReferenced_nonNull_native, 2);
  }
  v74 = v13;
  v75 = v11;
  v76 = a2;
  v77 = v19;
  v78 = v10;
  if (!v26)
  {
    v10 = (unint64_t)v81;
LABEL_37:
    swift_bridgeObjectRelease_n(isUniquelyReferenced_nonNull_native, 2);
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    sub_100083500((unint64_t *)&qword_100657330, (unint64_t *)&qword_1006419B0, FPItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v61 = (id)v10;
    swift_bridgeObjectRetain(v25);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v61, "setTargetFilenamesByItem:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);
    swift_bridgeObjectRelease(v25);

    v24 = (char *)v10;
    v19 = v77;
    v10 = v78;
    v11 = v75;
    a2 = v76;
    v12 = v73;
    v13 = v74;
LABEL_38:
    (*(void (**)(uint64_t, unint64_t, unint64_t))(v11 + 16))(v13, a2, v10);
    v63 = *(unsigned __int8 *)(v11 + 80);
    v64 = (v63 + 16) & ~v63;
    v65 = (v12 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    v66 = swift_allocObject(&unk_1005EFA00, v65 + 8, v63 | 7);
    (*(void (**)(uint64_t, uint64_t, unint64_t))(v11 + 32))(v66 + v64, v13, v10);
    *(_QWORD *)(v66 + v65) = v24;
    v91 = sub_100488034;
    v92 = v66;
    aBlock = _NSConcreteStackBlock;
    v88 = 1107296256;
    v89 = sub_10015936C;
    v90 = &unk_1005EFA18;
    v67 = _Block_copy(&aBlock);
    v68 = v92;
    v69 = v24;
    objc_msgSend(v69, "setActionCompletionBlock:", v67, swift_release(v68).n128_f64[0]);
    _Block_release(v67);

    objc_msgSend(v79, "scheduleAction:", v69);
    return;
  }
  v19 = v26;
  a2 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v27 = a4 + 5;
  v85 = a4[2];
  v13 = 4;
  v10 = (unint64_t)v81;
  v80 = v26;
  while (1)
  {
    v28 = v13 - 4;
    if (a2)
      v29 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, isUniquelyReferenced_nonNull_native);
    else
      v29 = (uint64_t *)*(id *)(isUniquelyReferenced_nonNull_native + 8 * v13);
    a4 = v29;
    v11 = v13 - 3;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v28 >= v85)
    {

      goto LABEL_9;
    }
    v84 = v25;
    v25 = (void **)a2;
    v30 = objc_msgSend(v29, "filename");
    if (!v30)
      break;
    v31 = v30;
    v32 = objc_msgSend(v30, "pathExtension");

    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v34 = v33;

    v35 = *v27;
    swift_bridgeObjectRetain(*v27);
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v36, "pathExtension", swift_bridgeObjectRelease(v35).n128_f64[0]);

    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v40 = v39;

    v41 = (void **)*(v27 - 1);
    v86 = *v27;
    swift_bridgeObjectRetain(v86);
    swift_bridgeObjectRelease(v40);
    v42 = HIBYTE(v40) & 0xF;
    if ((v40 & 0x2000000000000000) == 0)
      v42 = v38 & 0xFFFFFFFFFFFFLL;
    if (v42)
      goto LABEL_19;
    v43 = HIBYTE(v34) & 0xF;
    if ((v34 & 0x2000000000000000) == 0)
      v43 = v19 & 0xFFFFFFFFFFFFLL;
    if (!v43)
    {
LABEL_19:
      v83 = v41;
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      aBlock = v41;
      v88 = v86;
      v44._countAndFlagsBits = 46;
      v44._object = (void *)0xE100000000000000;
      String.append(_:)(v44);
      v45._countAndFlagsBits = v19;
      v45._object = (void *)v34;
      String.append(_:)(v45);
      swift_bridgeObjectRelease(v34);
      v83 = aBlock;
      v86 = v88;
    }
    a2 = (unint64_t)v25;
    a4 = a4;
    v46 = v84;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v84);
    aBlock = v46;
    v10 = sub_100140E34((uint64_t)a4);
    v48 = v46[2];
    v49 = (v47 & 1) == 0;
    v50 = (uint64_t)v48 + v49;
    if (__OFADD__(v48, v49))
      goto LABEL_40;
    v19 = v47;
    if ((uint64_t)v46[3] >= v50)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1002E9034();
    }
    else
    {
      sub_1002E0A90(v50, isUniquelyReferenced_nonNull_native);
      v51 = sub_100140E34((uint64_t)a4);
      if ((v19 & 1) != (v52 & 1))
        goto LABEL_47;
      v10 = v51;
    }
    isUniquelyReferenced_nonNull_native = v82;
    v25 = aBlock;
    if ((v19 & 1) != 0)
    {
      v53 = (void ***)((char *)aBlock[7] + 16 * v10);
      swift_bridgeObjectRelease(v53[1]);
      v54 = v86;
      *v53 = v83;
      v53[1] = (void **)v54;
    }
    else
    {
      aBlock[(v10 >> 6) + 8] = (void *)((unint64_t)aBlock[(v10 >> 6) + 8] | (1 << v10));
      *((_QWORD *)v25[6] + v10) = a4;
      v55 = (void ***)((char *)v25[7] + 16 * v10);
      v56 = v86;
      *v55 = v83;
      v55[1] = (void **)v56;
      v57 = (char *)v25[2];
      v58 = __OFADD__(v57, 1);
      v59 = v57 + 1;
      if (v58)
        goto LABEL_41;
      v25[2] = v59;
      v60 = a4;
    }

    swift_bridgeObjectRelease(0x8000000000000000);
    v19 = v80;
    v10 = (unint64_t)v81;
LABEL_9:
    v27 += 2;
    ++v13;
    if (v11 == v19)
      goto LABEL_37;
  }
  __break(1u);
LABEL_47:
  v71 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v71);
  __break(1u);
}

double sub_100481074(uint64_t a1, int a2, id a3)
{
  uint64_t v3;
  double result;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  if (a1)
  {
    v12 = a1;
    swift_errorRetain(a1);
LABEL_3:
    v3 = sub_10006922C(&qword_10064CA90);
    CheckedContinuation.resume(throwing:)(&v12, v3);
    return result;
  }
  v5 = objc_msgSend(a3, "transferResults");
  if (!v5)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v12 = static NSError.noSuchFileError.getter();
    goto LABEL_3;
  }
  v6 = v5;
  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, v7, &protocol witness table for AnyHashable);

  v9 = swift_bridgeObjectRetain(v8);
  v10 = sub_10028F904(v9);
  swift_bridgeObjectRelease(v8);
  v12 = (uint64_t)v10;
  swift_bridgeObjectRetain(v10);
  v11 = sub_10006922C(&qword_10064CA90);
  CheckedContinuation.resume(returning:)(&v12, v11);
  swift_release(v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

void sub_10048119C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char v45[24];

  v10 = sub_10006922C((uint64_t *)&unk_100657308);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - v15;
  a2 += 16;
  swift_beginAccess(a2, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v42 = (void *)Strong;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v18(v16, a1, v10);
    v19 = *(unsigned __int8 *)(v11 + 80);
    v43 = a3;
    v20 = (v19 + 16) & ~v19;
    v40 = a4;
    v41 = a5;
    v21 = v20 + v12;
    v22 = v19 | 7;
    v23 = swift_allocObject(&unk_1005EF780, v20 + v12, v19 | 7);
    v24 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v24(v23 + v20, v16, v10);
    v18(v13, a1, v10);
    v26 = v41;
    v25 = v42;
    v27 = v21;
    v28 = v40;
    v29 = swift_allocObject(&unk_1005EF7A8, v27, v22);
    v30 = v29 + v20;
    v31 = v43;
    v24(v30, v13, v10);
    v32 = swift_allocObject(&unk_1005EEAB0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16);
    v33 = (_QWORD *)swift_allocObject(&unk_1005EF7D0, 72, 7);
    v33[2] = v32;
    v33[3] = sub_100487CE8;
    v33[4] = v29;
    v33[5] = v31;
    v33[6] = v26;
    v33[7] = sub_100487C9C;
    v33[8] = v23;
    if (v28)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain(v31);
      swift_retain();
      v34 = v28;
      sub_100481668(v34, v32, (void (*)(char *, uint64_t))sub_100487CE8, v29, v31, v26, (uint64_t)sub_100487C9C, v23);
      swift_release(v29);

      swift_release(v23);
      swift_release(v33);
      swift_release(v32);
    }
    else
    {
      if ((unint64_t)v31 >> 62)
      {
        if (v31 < 0)
          v38 = v31;
        else
          v38 = v31 & 0xFFFFFFFFFFFFFF8;
        swift_retain();
        swift_bridgeObjectRetain(v31);
        swift_retain();
        v39 = sub_10006922C((uint64_t *)&unk_1006424B0);
        v31 = _bridgeCocoaArray<A>(_:)(v38, v39);
      }
      else
      {
        swift_bridgeObjectRetain_n(v31, 2);
        swift_retain();
        swift_retain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v35);
      }
      swift_retain();
      swift_retain();
      sub_10012933C(v31, (uint64_t)sub_100487CE8, v29, (unint64_t)sub_100487D7C, (int64_t)v33);

      swift_release(v23);
      v36 = swift_bridgeObjectRelease(v31);
      swift_release_n(v29, 2, v36);
      swift_release_n(v33, 2, v37);
    }
  }
  else
  {
    v44 = 0;
    AsyncThrowingStream.Continuation.finish(throwing:)(&v44, v10);
  }
}

uint64_t sub_1004814D0(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v8;
  char v9;

  v2 = sub_10006922C(&qword_100657318);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  v9 = 0;
  v6 = sub_10006922C((uint64_t *)&unk_100657308);
  AsyncThrowingStream.Continuation.yield(_:)(&v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100481578(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  char v13;

  v4 = sub_10006922C(&qword_100657318);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v10 = sub_10006922C((uint64_t *)&unk_100657308);
  }
  else
  {
    v13 = 1;
    v8 = a1;
    v9 = sub_10006922C((uint64_t *)&unk_100657308);
    AsyncThrowingStream.Continuation.yield(_:)(&v12, v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = 0;
    v10 = v9;
  }
  return AsyncThrowingStream.Continuation.finish(throwing:)(&v12, v10);
}

void sub_100481668(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  _QWORD *v32;
  char *v33;
  id aBlock[5];
  _QWORD *v35;
  char v36[24];

  v15 = a2 + 16;
  swift_beginAccess(a2 + 16, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v15);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = (void *)objc_opt_self(DOCUndoManager);
    swift_bridgeObjectRetain(a5);
    v19 = a1;
    v20 = objc_msgSend(v18, "shared");
    v21 = objc_allocWithZone((Class)type metadata accessor for DOCArchiveOperation());
    v22 = sub_10031A978(a5, v19, v20);
    objc_msgSend(v22, "setArchiveFormat:", a6);
    v23 = (uint64_t *)&v22[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressHandler];
    v24 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressHandler];
    v25 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressHandler + 8];
    *v23 = a7;
    v23[1] = a8;
    sub_10008BA00(a7, a8);
    sub_100087534(v24, v25);
    aBlock[0] = objc_msgSend(v22, "progress");
    KeyPath = swift_getKeyPath(&unk_1004EA018);
    v27 = swift_allocObject(&unk_1005EF7F8, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16);
    v28 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100487D94, v27, &protocol witness table for NSObject);
    swift_release(KeyPath);
    swift_release(v27);

    v29 = *(void **)&v22[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation];
    *(_QWORD *)&v22[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation] = v28;

    v30 = (_QWORD *)swift_allocObject(&unk_1005EF820, 40, 7);
    v30[2] = v22;
    v30[3] = a3;
    v30[4] = a4;
    aBlock[4] = sub_100487DAC;
    v35 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_100083540;
    aBlock[3] = &unk_1005EF838;
    v31 = _Block_copy(aBlock);
    v32 = v35;
    v33 = v22;
    swift_retain();
    objc_msgSend(v33, "setArchiveCompletionBlock:", v31, swift_release(v32).n128_f64[0]);
    _Block_release(v31);

    objc_msgSend(v17, "scheduleAction:", v33);
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v33 = (char *)static NSError.userCancelledError.getter();
    a3(v33, 1);
  }

}

void sub_100481920(void *a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  v8 = OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation;
  v9 = *(void **)(a3 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation);
  if (v9)
  {
    v10 = v9;
    dispatch thunk of NSKeyValueObservation.invalidate()();

    v9 = *(void **)(a3 + v8);
  }
  *(_QWORD *)(a3 + v8) = 0;

  v11 = *(void **)(a3 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem) = a1;
  v12 = a1;

  if (a2)
  {
    swift_errorRetain(a2);
    a4(a2, 1);
    swift_errorRelease(a2);
  }
  if (a1)
  {
    v13 = v12;
    a4(a1, 0);

  }
  else
  {
    a4(0, 0);
  }
}

void sub_100481A28(void *a1, void (*a2)(id, uint64_t), uint64_t a3, void (*a4)(void))
{
  id v6;
  id v7;

  if (a1 && (v6 = objc_msgSend(a1, "fpfs_fpItem")) != 0)
  {
    v7 = v6;
    a4();
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v7 = (id)static NSError.userCancelledError.getter();
    a2(v7, 1);
  }

}

void sub_100481ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v8;
  id v9;
  __n128 v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  v4 = v3;
  v8 = (void *)objc_opt_self(DOCUndoManager);
  v9 = objc_msgSend(v8, "shared", swift_bridgeObjectRetain(a1).n128_f64[0]);
  v11 = objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation(0, v10));
  v12 = (void *)DOCDeleteOperation.init(items:originalOperation:undoManager:)(a1, 0, v9);
  v13 = swift_allocObject(&unk_1005EFAF0, 32, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v16[4] = sub_10010DF60;
  v17 = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10015936C;
  v16[3] = &unk_1005EFB08;
  v14 = _Block_copy(v16);
  v15 = v17;
  swift_retain();
  objc_msgSend(v12, "setActionCompletionBlock:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  objc_msgSend(v4, "scheduleAction:", v12);

}

void sub_100481BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v8;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v4 = v3;
  v8 = (void *)objc_opt_self(DOCUndoManager);
  v9 = objc_msgSend(v8, "shared", swift_bridgeObjectRetain(a1).n128_f64[0]);
  v10 = objc_allocWithZone((Class)type metadata accessor for DOCTrashOperation());
  v11 = sub_1002BE708(a1, v9);
  v12 = swift_allocObject(&unk_1005EFB68, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  v15[4] = sub_100066584;
  v16 = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10015936C;
  v15[3] = &unk_1005EFB80;
  v13 = _Block_copy(v15);
  v14 = v16;
  swift_retain();
  objc_msgSend(v11, "setActionCompletionBlock:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  objc_msgSend(v4, "scheduleAction:", v11);

}

double sub_100481D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v11 = sub_10006922C((uint64_t *)&unk_100655280);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11, v14);
  v15 = *(unsigned __int8 *)(v12 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(a4, v16 + v13, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  a6(a3, a5, v17);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_100481E2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    v4 = a1;
    swift_errorRetain(a1);
    v1 = sub_10006922C((uint64_t *)&unk_100655280);
    return CheckedContinuation.resume(throwing:)(&v4, v1);
  }
  else
  {
    v3 = sub_10006922C((uint64_t *)&unk_100655280);
    return CheckedContinuation.resume(returning:)(v3, v3);
  }
}

void sub_100481E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a3 + 16;
    swift_beginAccess(v8, &v12, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v8);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = (void *)_convertErrorToNSError(_:)(a1);
      sub_100486724(v11, v10);

      v7 = v11;
    }

  }
}

double sub_100481F30(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double result;

  if (a1)
  {
    v3 = (void *)_convertErrorToNSError(_:)(a1);
    v4 = *(id *)DOCLog.UI.unsafeMutableAddressor(v3);
    v5 = static os_log_type_t.error.getter(v4);
    v6 = sub_10006922C((uint64_t *)&unk_100644560);
    v7 = swift_allocObject(v6, 112, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v7 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
    *(_QWORD *)(v7 + 64) = sub_100083500(&qword_100657300, (unint64_t *)&unk_100643460, FPProviderDomain_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v7 + 32) = a2;
    *(_QWORD *)(v7 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v7 + 104) = sub_100083500((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v7 + 72) = v3;
    v8 = a2;
    v9 = v3;
    os_log(_:dso:log:type:_:)("diconnecting domain %@ failed: %@", 33, 2, &_mh_execute_header, v4, v5, v7);

  }
  else
  {
    v4 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v10 = static os_log_type_t.debug.getter(v4);
    v11 = sub_10006922C((uint64_t *)&unk_100644560);
    v7 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v7 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
    *(_QWORD *)(v7 + 64) = sub_100083500(&qword_100657300, (unint64_t *)&unk_100643460, FPProviderDomain_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v7 + 32) = a2;
    v12 = a2;
    os_log(_:dso:log:type:_:)("diconnected domain %@ successfully", 34, 2, &_mh_execute_header, v4, v10, v7);
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_100482138(NSObject *a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  NSObject *v35;
  NSObject *v36;
  uint64_t v37;
  os_log_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  NSObject **v52;
  NSObject *v53;
  NSObject **v54;
  uint64_t v55;
  uint8_t *v56;
  unint64_t *v57;
  char *v58;
  char *v59;
  unint64_t v60;
  id v61;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  NSObject *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  os_log_t v71;
  NSObject *v72;
  id v73;
  NSObject *v74;
  _BYTE v75[16];

  v70 = a5;
  v71 = a1;
  v72 = a3;
  v73 = a4;
  v6 = sub_10006922C((uint64_t *)&unk_100644BC0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char **)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (_QWORD *)type metadata accessor for Logger(0);
  v11 = *(v10 - 1);
  __chkstk_darwin(v10);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - v15;
  v17 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v17);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v25 = swift_errorRetain(a2);
    v26 = Logger.UI.unsafeMutableAddressor(v25);
    (*(void (**)(char *, uint64_t, _QWORD *))(v11 + 16))(v16, v26, v10);
    swift_errorRetain(a2);
    v27 = v73;
    swift_errorRetain(a2);
    v28 = v27;
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(22, -1);
      v71 = v29;
      v32 = v31;
      v33 = swift_slowAlloc(16, -1);
      v69 = v11;
      v34 = (_QWORD *)v33;
      *(_DWORD *)v32 = 138412546;
      v74 = v28;
      v35 = v28;
      v73 = v10;
      v36 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75);
      *v34 = v28;

      *(_WORD *)(v32 + 12) = 2112;
      swift_errorRetain(a2);
      v37 = _swift_stdlib_bridgeErrorToNSError(a2);
      v74 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75);
      v34[1] = v37;
      v10 = v73;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      v38 = v71;
      _os_log_impl((void *)&_mh_execute_header, v71, v30, "Error fetching the url for item %@: %@", (uint8_t *)v32, 0x16u);
      v39 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v34, 2, v39);
      v11 = v69;
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v32, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);

      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    (*(void (**)(char *, _QWORD *))(v11 + 8))(v16, v10);
LABEL_16:
    v66 = v72;
    goto LABEL_17;
  }
  v67 = v13;
  v68 = v24;
  v40 = v73;
  v69 = v11;
  v41 = v22;
  v42 = v70;
  sub_1000271D4((uint64_t)v71, (uint64_t)v19, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v41) == 1)
  {
    v43 = sub_10000CB4C((uint64_t)v19, &qword_100643470);
    v44 = Logger.UI.unsafeMutableAddressor(v43);
    v45 = v69;
    v46 = v67;
    v47 = v10;
    (*(void (**)(char *, uint64_t, _QWORD *))(v69 + 16))(v67, v44, v10);
    v48 = v40;
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(12, -1);
      v52 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v51 = 138412290;
      v74 = v48;
      v53 = v48;
      v45 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75);
      *v52 = v48;
      v54 = v52;
      v47 = v10;

      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Error fetching the url for item: %@ but also did not get an error", v51, 0xCu);
      v55 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v54, 1, v55);
      swift_slowDealloc(v54, -1, -1);
      v56 = v51;
      v46 = v67;
      swift_slowDealloc(v56, -1, -1);
    }
    else
    {

      v49 = v48;
    }

    (*(void (**)(char *, _QWORD *))(v45 + 8))(v46, v47);
    goto LABEL_16;
  }
  v57 = (unint64_t *)(v42 + 16);
  v58 = v68;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v68, v19, v41);
  v59 = (char *)v9 + *(int *)(v6 + 48);
  *v9 = v40;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v59, v58, v41);
  swift_beginAccess(v57, &v74, 33, 0);
  v60 = *v57;
  v61 = v40;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v60);
  *v57 = v60;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v60 = sub_100154C50(0, *(_QWORD *)(v60 + 16) + 1, 1, v60);
    *v57 = v60;
  }
  v63 = v7;
  v65 = *(_QWORD *)(v60 + 16);
  v64 = *(_QWORD *)(v60 + 24);
  if (v65 >= v64 >> 1)
  {
    v60 = sub_100154C50(v64 > 1, v65 + 1, 1, v60);
    *v57 = v60;
  }
  v66 = v72;
  *(_QWORD *)(v60 + 16) = v65 + 1;
  sub_100070EDC((uint64_t)v9, v60+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(_QWORD *)(v63 + 72) * v65, (uint64_t *)&unk_100644BC0);
  swift_endAccess(&v74);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v68, v41);
LABEL_17:
  dispatch_group_leave(v66);
}

double sub_100482720(uint64_t a1, void (*a2)(_QWORD, __n128), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  int64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  unint64_t v22;
  unint64_t v23;
  double result;
  _QWORD v25[2];
  void (*v26)(_QWORD, __n128);
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;

  v30 = sub_10006922C((uint64_t *)&unk_100644BC0);
  v6 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v29 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v25 - v9;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13.n128_f64[0] = __chkstk_darwin(v11);
  v27 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = (char *)_swiftEmptyArrayStorage;
  if (v15)
  {
    v25[1] = a3;
    v26 = a2;
    v31 = (char *)_swiftEmptyArrayStorage;
    sub_100154E04(0, v15, 0);
    v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v28 = *(_QWORD *)(v6 + 72);
    v18 = v27;
    do
    {
      sub_1000271D4(v17, (uint64_t)v10, (uint64_t *)&unk_100644BC0);
      v19 = *(int *)(v30 + 48);
      v20 = &v29[v19];
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v29[v19], &v10[v19], v11);
      v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v21(v18, v20, v11);
      sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100644BC0);
      v16 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
      {
        sub_100154E04(0, *((_QWORD *)v16 + 2) + 1, 1);
        v18 = v27;
        v16 = v31;
      }
      v23 = *((_QWORD *)v16 + 2);
      v22 = *((_QWORD *)v16 + 3);
      if (v23 >= v22 >> 1)
      {
        sub_100154E04(v22 > 1, v23 + 1, 1);
        v18 = v27;
        v16 = v31;
      }
      *((_QWORD *)v16 + 2) = v23 + 1;
      v21(&v16[((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v23], v18, v11);
      v31 = v16;
      v17 += v28;
      --v15;
    }
    while (v15);
    a2 = v26;
  }
  a2(v16, v13);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

void sub_10048295C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  os_log_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  os_log_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if ((_DWORD)v5)
  {
    v6 = Logger.UI.unsafeMutableAddressor(v5);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
    v7 = v0;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(32, -1);
      v19 = (_QWORD *)swift_slowAlloc(8, -1);
      v20 = swift_slowAlloc(64, -1);
      v22 = v20;
      *(_DWORD *)v10 = 136315650;
      v18 = v8;
      v21 = sub_1000544FC(0xD000000000000023, 0x8000000100538C00, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      *(_WORD *)(v10 + 12) = 2080;
      v21 = sub_1000544FC(0xD000000000000023, 0x8000000100538C00, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      *(_WORD *)(v10 + 22) = 2112;
      v21 = (uint64_t)v7;
      v11 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      v12 = v19;
      *v19 = v7;

      v13 = v18;
      _os_log_impl((void *)&_mh_execute_header, v18, v9, "%s [PROTECTED APPS] %s %@", (uint8_t *)v10, 0x20u);
      v14 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v12, 1, v14);
      swift_slowDealloc(v12, -1, -1);
      v15 = v20;
      swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v16 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v16, "addObserver:selector:name:object:", v7, "updateQueryFiltersForNewApps", DOCAppProtectionStatusDidChangeNotification, 0);

  }
}

BOOL sub_100482C48(void *a1, _QWORD *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(a1, "topLevelBundleIdentifier");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  LOBYTE(a2) = sub_1000DFDD0(v4, v6, a2);
  swift_bridgeObjectRelease(v6);
  return (a2 & 1) == 0;
}

uint64_t sub_100482CB8(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

void sub_100482CF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD aBlock[5];
  uint64_t v53;
  char v54[24];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v47 - 8);
  v13 = __chkstk_darwin(v47);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v47 - v16;
  v18 = DOCSpotlightEnumeratedItemIdentifierTaggedItems;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  if (v19 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n(v21, 2);
    v28 = 0;
  }
  else
  {
    v25 = v23;
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
    swift_bridgeObjectRelease(v21);
    v27 = swift_bridgeObjectRelease(v25).n128_u64[0];
    if ((v26 & 1) != 0)
    {
      v28 = 0;
    }
    else
    {
      v27 = swift_beginAccess(a2 + 40, v54, 0, 0).n128_u64[0];
      v28 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
    }
  }
  v29 = objc_msgSend(a3, "allowedProviderIdentifiers", *(double *)&v27);
  if (v29)
  {
    v30 = v29;
    v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for String);

  }
  else
  {
    v31 = 0;
  }
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "setAllowedProviderIdentifiers:", isa);

  v33 = swift_allocObject(&unk_1005EF078, 32, 7);
  *(_QWORD *)(v33 + 16) = a3;
  *(_QWORD *)(v33 + 24) = v31;
  swift_beginAccess(a2 + 40, aBlock, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 40) + 16) < v28)
  {
    __break(1u);
  }
  else
  {
    v34 = a3;
    sub_100459DC0(v28, v28, (uint64_t)sub_1004878BC, v33);
    swift_endAccess(aBlock);
    if (*(_QWORD *)(*(_QWORD *)(a2 + 40) + 16) == 1)
    {
      v35 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v36 = (void *)static OS_dispatch_queue.main.getter(v35);
      static DispatchTime.now()(v36);
      + infix(_:_:)(v15, *(double *)(a2 + 32));
      v37 = *(void (**)(char *, uint64_t))(v12 + 8);
      v38 = v47;
      v37(v15, v47);
      aBlock[4] = sub_1004878C4;
      v53 = a2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005EF090;
      v39 = _Block_copy(aBlock);
      v40 = v53;
      swift_retain();
      v41 = swift_release(v40);
      static DispatchQoS.unspecified.getter(v41);
      aBlock[0] = _swiftEmptyArrayStorage;
      v42 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v43 = sub_10006922C((uint64_t *)&unk_100647540);
      v44 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
      v45 = v43;
      v46 = v51;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v45, v44, v51, v42);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v11, v8, v39);
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v46);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);
      v37(v17, v38);
    }
  }
}

id sub_100483104(void *a1, Class isa)
{
  objc_msgSend(a1, "stopObserving");
  if (isa)
    isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setAllowedProviderIdentifiers:", isa);

  return objc_msgSend(a1, "startObserving");
}

uint64_t sub_10048316C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t result;
  _QWORD v8[5];
  uint64_t v9;

  v2 = *(void **)(a1 + 16);
  v3 = swift_allocObject(&unk_1005EF0C8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1004878CC;
  *(_QWORD *)(v3 + 24) = a1;
  v8[4] = sub_10010DB64;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10006655C;
  v8[3] = &unk_1005EF0E0;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v2;
  swift_retain();
  swift_retain();
  swift_release(v5);
  dispatch_sync(v6, v4);

  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v3, "", 107, 1137, 20, 1);
  swift_release(a1);
  result = swift_release(v3);
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_100483284(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  _BYTE v10[24];

  *(_BYTE *)(a1 + 24) = 0;
  v2 = (uint64_t *)(a1 + 40);
  swift_beginAccess(a1 + 40, v10, 1, 0);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 40));
    v5 = (_QWORD *)(v3 + 40);
    do
    {
      v7 = (void (*)(uint64_t))*(v5 - 1);
      v6 = *v5;
      v8 = swift_retain(*v5);
      v7(v8);
      swift_release(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
    v3 = *v2;
  }
  *v2 = (uint64_t)_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_100483330()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

double sub_10048335C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  void (*v23)(char *);
  _QWORD *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  void *v34;
  id v35;
  _QWORD *v36;
  _QWORD *v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  char v43;
  int v44;
  char **v45;
  _QWORD *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  NSArray v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  id v70;
  void *v71;
  _QWORD *v72;
  char v73;
  char *v74;
  char *v75;
  _QWORD *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  void (*v85)(char *);
  void (*v86)(char *, uint64_t);
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  double v92;
  NSArray v93;
  _QWORD *v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  double v100;
  id v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  double v108;
  id v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  _QWORD *v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  void *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  char *v143;
  _QWORD *v144;
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *);
  char *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t aBlock[5];
  uint64_t v160;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v152 = *(_QWORD *)(v1 - 8);
  v153 = v1;
  __chkstk_darwin(v1);
  v151 = (char *)&v140 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v149 = *(_QWORD *)(v3 - 8);
  v150 = v3;
  __chkstk_darwin(v3);
  v148 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v155 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v140 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v140 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v140 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v140 - v18;
  v20 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if (!(_DWORD)v20)
    return v21.n128_f64[0];
  v146 = (uint64_t)v16;
  v147 = v10;
  v22 = Logger.UI.unsafeMutableAddressor(v20);
  v23 = *(void (**)(char *))(v6 + 16);
  v157 = v22;
  v23(v19);
  v24 = v0;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.debug.getter(v25);
  v27 = os_log_type_enabled(v25, v26);
  v156 = v5;
  v154 = v23;
  v143 = v13;
  if (v27)
  {
    v28 = swift_slowAlloc(32, -1);
    v142 = (_QWORD *)swift_slowAlloc(8, -1);
    v145 = (void (*)(char *, uint64_t))swift_slowAlloc(64, -1);
    aBlock[0] = (uint64_t)v145;
    *(_DWORD *)v28 = 136315650;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *(_WORD *)(v28 + 12) = 2080;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *(_WORD *)(v28 + 22) = 2112;
    v158 = v24;
    v29 = v24;
    v23 = v154;
    v5 = v156;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    v30 = v142;
    *v142 = v24;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s [PROTECTED APPS] %s %@", (uint8_t *)v28, 0x20u);
    v31 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v30, 1, v31);
    swift_slowDealloc(v30, -1, -1);
    v32 = v145;
    swift_arrayDestroy(v145, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

  }
  v33 = *(void (**)(char *, uint64_t))(v6 + 8);
  v33(v19, v5);
  v34 = (void *)objc_opt_self(DOCAppProtectionManager);
  v35 = objc_msgSend(v34, "sharedManager");
  sub_100485650((SEL *)&selRef_protectedApplications, 0xD00000000000001DLL, 0x80000001005387D0, "%s [PROTECTED APPS] getting OIDs from protectedApplications %s", (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  v37 = v36;

  v38 = objc_msgSend(v24, "excludedParentOIDs");
  v40 = v146;
  v144 = v24;
  v145 = v33;
  if (v38)
  {
    v41 = v38;
    v42 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String);

    if (v37)
    {
      v43 = sub_1000882D8(v42, v37);
      v39 = swift_bridgeObjectRelease(v42);
      if ((v43 & 1) != 0)
      {
        v39.n128_u64[0] = swift_bridgeObjectRelease(v37).n128_u64[0];
LABEL_10:
        v44 = 0;
        v45 = &selRef_objectForKey_ofClass_;
        goto LABEL_19;
      }
    }
    else
    {
      v39 = swift_bridgeObjectRelease(v42);
    }
  }
  else if (!v37)
  {
    goto LABEL_10;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v23)(v40, v157, v5, v39);
  swift_bridgeObjectRetain_n(v37, 2);
  v46 = v24;
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.debug.getter(v47);
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc(42, -1);
    v50 = swift_slowAlloc(8, -1);
    v142 = v34;
    v51 = (_QWORD *)v50;
    v141 = swift_slowAlloc(96, -1);
    aBlock[0] = v141;
    *(_DWORD *)v49 = 136315906;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *(_WORD *)(v49 + 12) = 2080;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *(_WORD *)(v49 + 22) = 2080;
    v158 = v37;
    swift_bridgeObjectRetain(v37);
    v52 = sub_10006922C(&qword_1006572A8);
    v53 = String.init<A>(describing:)(&v158, v52);
    v55 = v54;
    v158 = (_QWORD *)sub_1000544FC(v53, v54, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    swift_bridgeObjectRelease_n(v37, 2);
    swift_bridgeObjectRelease(v55);
    *(_WORD *)(v49 + 32) = 2112;
    v158 = v46;
    v56 = v46;
    v23 = v154;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *v51 = v46;

    v5 = v156;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s [PROTECTED APPS] %s setting excluded parent OIDs to: %s for collection: %@", (uint8_t *)v49, 0x2Au);
    v57 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v51, 1, v57);
    v58 = v51;
    v34 = v142;
    swift_slowDealloc(v58, -1, -1);
    v59 = v141;
    swift_arrayDestroy(v141, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    v60 = v49;
    v33 = v145;
    swift_slowDealloc(v60, -1, -1);

    v61 = v146;
  }
  else
  {

    swift_bridgeObjectRelease_n(v37, 2);
    v61 = v40;
  }
  v33((char *)v61, v5);
  v45 = &selRef_objectForKey_ofClass_;
  if (v37)
  {
    v63.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v62 = swift_bridgeObjectRelease(v37).n128_u64[0];
  }
  else
  {
    v63.super.isa = 0;
  }
  objc_msgSend(v46, "setExcludedParentOIDs:", v63.super.isa, v62);

  v44 = 1;
  v24 = v144;
LABEL_19:
  v64 = objc_msgSend(v34, v45[284], v39.n128_f64[0]);
  v65 = objc_msgSend(v64, "hostIdentifier");

  v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v68 = v67;

  v69 = (_QWORD *)sub_100484CA4(v66, v68);
  v70 = objc_msgSend(v24, "allowedProviderIdentifiers", swift_bridgeObjectRelease(v68).n128_f64[0]);
  if (v70)
  {
    v71 = v70;
    v72 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, &type metadata for String);

    if (v69)
    {
      v73 = sub_1000882D8(v72, v69);
      v21 = swift_bridgeObjectRelease(v72);
      if ((v73 & 1) != 0)
      {
        v21 = swift_bridgeObjectRelease(v69);
        goto LABEL_24;
      }
    }
    else
    {
      v21 = swift_bridgeObjectRelease(v72);
    }
  }
  else if (!v69)
  {
LABEL_24:
    v74 = v147;
    if (!v44)
      return v21.n128_f64[0];
    goto LABEL_34;
  }
  v75 = v143;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v143, v157, v5, v21);
  swift_bridgeObjectRetain_n(v69, 2);
  v76 = v24;
  v77 = Logger.logObject.getter(v76);
  v78 = static os_log_type_t.debug.getter(v77);
  if (os_log_type_enabled(v77, v78))
  {
    v79 = swift_slowAlloc(42, -1);
    v142 = (_QWORD *)swift_slowAlloc(8, -1);
    v146 = swift_slowAlloc(96, -1);
    aBlock[0] = v146;
    *(_DWORD *)v79 = 136315906;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *(_WORD *)(v79 + 12) = 2080;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *(_WORD *)(v79 + 22) = 2080;
    v158 = v69;
    swift_bridgeObjectRetain(v69);
    v80 = sub_10006922C(&qword_1006572A8);
    v81 = String.init<A>(describing:)(&v158, v80);
    v83 = v82;
    v158 = (_QWORD *)sub_1000544FC(v81, v82, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    swift_bridgeObjectRelease_n(v69, 2);
    swift_bridgeObjectRelease(v83);
    *(_WORD *)(v79 + 32) = 2112;
    v158 = v76;
    v84 = v76;
    v85 = v154;
    v5 = v156;
    v86 = v145;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    v87 = v142;
    *v142 = v76;

    v24 = v144;
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "%s [PROTECTED APPS] %s setting allowedProviderIdentifiers to: %s for collection: %@", (uint8_t *)v79, 0x2Au);
    v88 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v87, 1, v88);
    v89 = v87;
    v33 = v86;
    v23 = v85;
    swift_slowDealloc(v89, -1, -1);
    v90 = v146;
    swift_arrayDestroy(v146, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1, -1);
    swift_slowDealloc(v79, -1, -1);

    v91 = v143;
  }
  else
  {

    swift_bridgeObjectRelease_n(v69, 2);
    v91 = v75;
  }
  v33(v91, v5);
  if (v69)
  {
    v93.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v92 = swift_bridgeObjectRelease(v69).n128_u64[0];
  }
  else
  {
    v93.super.isa = 0;
  }
  objc_msgSend(v76, "setAllowedProviderIdentifiers:", v93.super.isa, v92);

  v74 = v147;
LABEL_34:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v74, v157, v5, v21);
  v94 = v24;
  v95 = Logger.logObject.getter(v94);
  v96 = static os_log_type_t.debug.getter(v95);
  if (os_log_type_enabled(v95, v96))
  {
    v97 = swift_slowAlloc(52, -1);
    v98 = (_QWORD *)swift_slowAlloc(8, -1);
    v99 = swift_slowAlloc(128, -1);
    aBlock[0] = v99;
    *(_DWORD *)v97 = 136316162;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *(_WORD *)(v97 + 12) = 2080;
    v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
    *(_QWORD *)&v100 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock).n128_u64[0];
    *(_WORD *)(v97 + 22) = 2080;
    v101 = objc_msgSend(v94, "allowedProviderIdentifiers", v100);
    v146 = v99;
    if (v101)
    {
      v102 = v101;
      v103 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v101, &type metadata for String);

    }
    else
    {
      v103 = 0;
    }
    v158 = (_QWORD *)v103;
    v104 = sub_10006922C(&qword_1006572A8);
    v105 = String.init<A>(describing:)(&v158, v104);
    v107 = v106;
    v158 = (_QWORD *)sub_1000544FC(v105, v106, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);

    *(_QWORD *)&v108 = swift_bridgeObjectRelease(v107).n128_u64[0];
    *(_WORD *)(v97 + 32) = 2080;
    v109 = objc_msgSend(v94, "excludedParentOIDs", v108);
    if (v109)
    {
      v110 = v109;
      v111 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v109, &type metadata for String);

    }
    else
    {
      v111 = 0;
    }
    v158 = (_QWORD *)v111;
    v112 = String.init<A>(describing:)(&v158, v104);
    v114 = v113;
    v158 = (_QWORD *)sub_1000544FC(v112, v113, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);

    swift_bridgeObjectRelease(v114);
    *(_WORD *)(v97 + 42) = 2112;
    v158 = v94;
    v115 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
    *v98 = v94;

    _os_log_impl((void *)&_mh_execute_header, v95, v96, "%s [PROTECTED APPS] %s restarting observation with allowedProviderIdentifiers: %s excludedParentOIDs: %s on collection: %@", (uint8_t *)v97, 0x34u);
    v116 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v98, 1, v116);
    swift_slowDealloc(v98, -1, -1);
    v117 = v146;
    swift_arrayDestroy(v146, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v117, -1, -1);
    swift_slowDealloc(v97, -1, -1);

    v5 = v156;
    v33 = v145;
    v145(v147, v156);
    v23 = v154;
  }
  else
  {

    v33(v74, v5);
  }
  if (objc_msgSend(v94, "doc_isObserving"))
  {
    v118 = v155;
    ((void (*)(char *, uint64_t, uint64_t))v23)(v155, v157, v5);
    v119 = v94;
    v120 = Logger.logObject.getter(v119);
    v121 = static os_log_type_t.debug.getter(v120);
    if (os_log_type_enabled(v120, v121))
    {
      v122 = swift_slowAlloc(32, -1);
      v123 = (_QWORD *)swift_slowAlloc(8, -1);
      v124 = swift_slowAlloc(64, -1);
      aBlock[0] = v124;
      *(_DWORD *)v122 = 136315650;
      v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
      *(_WORD *)(v122 + 12) = 2080;
      v158 = (_QWORD *)sub_1000544FC(0xD00000000000001ELL, 0x8000000100538760, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
      *(_WORD *)(v122 + 22) = 2112;
      v158 = v119;
      v125 = v119;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, aBlock);
      *v123 = v119;

      _os_log_impl((void *)&_mh_execute_header, v120, v121, "%s [PROTECTED APPS] %s restarting observation for %@", (uint8_t *)v122, 0x20u);
      v126 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v123, 1, v126);
      swift_slowDealloc(v123, -1, -1);
      swift_arrayDestroy(v124, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v124, -1, -1);
      swift_slowDealloc(v122, -1, -1);

      v145(v155, v156);
    }
    else
    {

      v33(v118, v5);
    }
    v127 = objc_msgSend(v119, "workingQueue");
    v128 = swift_allocObject(&unk_1005EEF38, 24, 7);
    swift_unknownObjectWeakInit(v128 + 16);
    aBlock[4] = (uint64_t)sub_1004877D8;
    v160 = v128;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005EEF50;
    v129 = _Block_copy(aBlock);
    swift_retain();
    v130 = v148;
    static DispatchQoS.unspecified.getter(v131);
    v158 = _swiftEmptyArrayStorage;
    v132 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v133 = sub_10006922C((uint64_t *)&unk_100647540);
    v134 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    v135 = v151;
    v136 = v133;
    v137 = v153;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v158, v136, v134, v153, v132);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v130, v135, v129);
    _Block_release(v129);

    (*(void (**)(char *, uint64_t))(v152 + 8))(v135, v137);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v130, v150);
    v138 = v160;
    swift_release(v128);
    v21.n128_u64[0] = swift_release(v138).n128_u64[0];
  }
  return v21.n128_f64[0];
}

void sub_100484544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "doc_restartObservation");

  }
}

void sub_1004845D0(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(unint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __n128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  Swift::String v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(unint64_t, char *, uint64_t);
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;

  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C((uint64_t *)&unk_100644AC0);
  __chkstk_darwin(v11);
  v15 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  LODWORD(v64) = a2;
  v61[1] = v3;
  v17 = &v15[*(int *)(v12 + 48)];
  v61[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v61[0];
  v67 = *(_QWORD *)(v13 + 72);
  v63 = a1;
  swift_bridgeObjectRetain(a1);
  sub_1000271D4(v18, (uint64_t)v15, (uint64_t *)&unk_100644AC0);
  v62 = v8;
  v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v66 = v15;
  v68 = v7;
  v69 = v19;
  v19((unint64_t)v10, v15, v7);
  v20 = *(_QWORD *)v17;
  v21 = *((_QWORD *)v17 + 1);
  v65 = v17;
  v22 = (_QWORD *)*a3;
  v24 = sub_100140624((uint64_t)v10);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_24;
  v28 = v23;
  if (v22[3] >= v27)
  {
    if ((v64 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1002E73E4();
      if ((v28 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v36 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v37 = v36[6];
    v64 = *(_QWORD *)(v62 + 72);
    v38 = v68;
    v69(v37 + v64 * v24, v10, v68);
    v39 = (uint64_t *)(v36[7] + 16 * v24);
    *v39 = v20;
    v39[1] = v21;
    v40 = v36[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v36[2] = v42;
    v20 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n(v63, 2);
      return;
    }
    v43 = v63 + v67 + v61[0];
    while (1)
    {
      v44 = (uint64_t)v66;
      sub_1000271D4(v43, (uint64_t)v66, (uint64_t *)&unk_100644AC0);
      v69((unint64_t)v10, (char *)v44, v38);
      v45 = *(_QWORD *)v65;
      v21 = *((_QWORD *)v65 + 1);
      v46 = (_QWORD *)*a3;
      v48 = sub_100140624((uint64_t)v10);
      v49 = v46[2];
      v50 = (v47 & 1) == 0;
      v51 = v49 + v50;
      if (__OFADD__(v49, v50))
        break;
      v52 = v47;
      if (v46[3] < v51)
      {
        sub_1002DE12C(v51, 1);
        v53 = sub_100140624((uint64_t)v10);
        if ((v52 & 1) != (v54 & 1))
          goto LABEL_26;
        v48 = v53;
      }
      if ((v52 & 1) != 0)
        goto LABEL_10;
      v55 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v48 >> 6) + 64) |= 1 << v48;
      v38 = v68;
      v69(v55[6] + v64 * v48, v10, v68);
      v56 = (_QWORD *)(v55[7] + 16 * v48);
      *v56 = v45;
      v56[1] = v21;
      v57 = v55[2];
      v41 = __OFADD__(v57, 1);
      v58 = v57 + 1;
      if (v41)
        goto LABEL_25;
      v55[2] = v58;
      v43 += v67;
      if (!--v20)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1002DE12C(v27, v64 & 1);
  v29 = sub_100140624((uint64_t)v10);
  if ((v28 & 1) == (v30 & 1))
  {
    v24 = v29;
    if ((v28 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v31 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v31);
    v72 = v31;
    swift_errorRetain(v31);
    v32 = sub_10006922C((uint64_t *)&unk_100643490);
    v33 = swift_dynamicCast(v32, &v72, v32, &type metadata for _MergeError, 0);
    v20 = v68;
    if ((v33 & 1) == 0)
    {
      swift_bridgeObjectRelease(v21);
      v34 = v63;
      v35 = swift_bridgeObjectRelease(v63);
      (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v10, v20, v35);
      swift_bridgeObjectRelease(v34);
      swift_errorRelease(v72);
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v68);
  __break(1u);
LABEL_27:
  v70 = 0;
  v71 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v59._object = (void *)0x8000000100522A50;
  v59._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v59);
  _print_unlocked<A, B>(_:_:)(v10, &v70, v20, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v60._countAndFlagsBits = 39;
  v60._object = (void *)0xE100000000000000;
  String.append(_:)(v60);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v70, v71, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

double sub_100484A80(uint64_t a1)
{
  uint64_t v1;

  return sub_100481D38(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1005EFB40, (uint64_t)sub_100487DC4, sub_100481BFC);
}

double sub_100484AB0(uint64_t a1)
{
  uint64_t v1;

  return sub_100481D38(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1005EFAC8, (uint64_t)sub_100487DC4, sub_100481ABC);
}

uint64_t sub_100484AE0(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v26 = result + 32;
    v24 = a2 + 7;
    v25 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v4 <= v2)
        v5 = v2;
      else
        v5 = v4;
      v27 = v5;
      while (1)
      {
        if (v4 == v27)
          goto LABEL_34;
        v6 = v4++;
        v7 = a2[2];
        if (!v7)
          goto LABEL_7;
        v8 = (_QWORD *)(v26 + 16 * v6);
        v9 = *v8;
        v10 = v8[1];
        v11 = a2[4];
        v12 = a2[5];
        if (v11 == *v8 && v12 == v10)
          break;
        result = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, *v8, v8[1], 0);
        if ((result & 1) != 0)
          break;
        if (v7 != 1)
        {
          v14 = v24;
          v15 = 1;
          while (1)
          {
            v16 = v15 + 1;
            if (__OFADD__(v15, 1))
              break;
            v17 = *(v14 - 1);
            v18 = *v14;
            if (v17 == v9 && v18 == v10)
              goto LABEL_25;
            result = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v9, v10, 0);
            if ((result & 1) != 0)
              goto LABEL_25;
            v14 += 2;
            ++v15;
            if (v16 == v7)
              goto LABEL_7;
          }
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_7:
        if (v4 == v2)
          return (uint64_t)v25;
      }
LABEL_25:
      swift_bridgeObjectRetain(v10);
      v20 = v25;
      result = swift_isUniquelyReferenced_nonNull_native(v25);
      if ((result & 1) == 0)
      {
        result = sub_100081774(0, v25[2] + 1, 1);
        v20 = v25;
      }
      v22 = v20[2];
      v21 = v20[3];
      if (v22 >= v21 >> 1)
      {
        result = sub_100081774(v21 > 1, v22 + 1, 1);
        v20 = v25;
      }
      v20[2] = v22 + 1;
      v25 = v20;
      v23 = &v20[2 * v22];
      v23[4] = v9;
      v23[5] = v10;
      if (v4 == v2)
        return (uint64_t)v25;
    }
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100484CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSString v13;
  id v14;
  void *v15;
  id v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint64_t result;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  id v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  BOOL (*v62)(void *);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  _QWORD v81[2];
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t aBlock[5];
  uint64_t v89;
  uint64_t v90;

  v86 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v86 - 8);
  v4 = __chkstk_darwin(v86);
  v6 = (char *)v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)v81 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)v81 - v10;
  v90 = 0;
  if (a2)
  {
    v12 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v12, "allowedFileProviderBundleIdentifiersForHostBundleIdentifier:", v13);

    if (v14)
    {
      a2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String);

      v90 = a2;
    }
    else
    {
      a2 = 0;
    }
  }
  v15 = (void *)objc_opt_self(DOCAppProtectionManager);
  v16 = objc_msgSend(v15, "sharedManager");
  v17 = objc_msgSend(v16, "hasAnyProtectedApps");

  if (!v17)
    goto LABEL_17;
  if (a2)
  {
    v19 = Logger.UI.unsafeMutableAddressor(v18);
    v84 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v84(v11, v19, v86);
    v20 = swift_bridgeObjectRetain_n(a2, 2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    v85 = v3;
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc(22, -1);
      v83 = v19;
      v25 = v24;
      v82 = swift_slowAlloc(64, -1);
      aBlock[0] = v82;
      *(_DWORD *)v25 = 136315394;
      v87 = sub_1000544FC(0xD000000000000020, 0x80000001005387A0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
      *(_WORD *)(v25 + 12) = 2080;
      v81[1] = v25 + 14;
      v26 = swift_bridgeObjectRetain(a2);
      v27 = v9;
      v28 = Array.description.getter(v26, &type metadata for String);
      v30 = v29;
      swift_bridgeObjectRelease(a2);
      v31 = v28;
      v9 = v27;
      v87 = sub_1000544FC(v31, v30, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v21, v23, "%s [PROTECTED APPS] existing allow list from MDM, filtering that list %s", (uint8_t *)v25, 0x16u);
      v32 = v82;
      swift_arrayDestroy(v82, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      v33 = v25;
      v19 = v83;
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    v45 = *(void (**)(char *, uint64_t))(v85 + 8);
    v45(v11, v86);
    v46 = objc_msgSend(v15, "sharedManager");
    v47 = objc_msgSend(v46, "protectedApplicationBundleIDs");

    v48 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, &type metadata for String);
    v49 = sub_100484AE0(a2, v48);
    swift_bridgeObjectRelease(a2);
    v50 = swift_bridgeObjectRelease(v48);
    v90 = v49;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v84)(v9, v19, v86, v50);
    v51 = swift_bridgeObjectRetain_n(v49, 2);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc(22, -1);
      v55 = swift_slowAlloc(64, -1);
      aBlock[0] = v55;
      *(_DWORD *)v54 = 136315394;
      v87 = sub_1000544FC(0xD000000000000020, 0x80000001005387A0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
      *(_WORD *)(v54 + 12) = 2080;
      v87 = v49;
      swift_bridgeObjectRetain(v49);
      v56 = sub_10006922C(&qword_1006572A8);
      v57 = String.init<A>(describing:)(&v87, v56);
      v58 = v9;
      v60 = v59;
      v87 = sub_1000544FC(v57, v59, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
      swift_bridgeObjectRelease_n(v49, 2);
      swift_bridgeObjectRelease(v60);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s [PROTECTED APPS] final filtered allow list from MDM and Protected Aps: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      v61 = v58;
    }
    else
    {

      swift_bridgeObjectRelease_n(v49, 2);
      v61 = v9;
    }
    v45(v61, v86);
LABEL_17:
    v62 = 0;
    v38 = 0;
LABEL_18:
    swift_beginAccess(&v90, aBlock, 0, 0);
    v63 = v90;
    sub_100087534((uint64_t)v62, v38);
    return v63;
  }
  v34 = objc_msgSend(v15, "sharedManager");
  v35 = objc_msgSend(v34, "protectedApplicationBundleIDs");

  v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, &type metadata for String);
  v37 = (void *)objc_opt_self(FPProviderDomain);
  v38 = swift_allocObject(&unk_1005EEF88, 24, 7);
  *(_QWORD *)(v38 + 16) = v36;
  v39 = swift_allocObject(&unk_1005EEFB0, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_100487804;
  *(_QWORD *)(v39 + 24) = v38;
  aBlock[4] = (uint64_t)sub_10048781C;
  v89 = v39;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100482CB8;
  aBlock[3] = (uint64_t)&unk_1005EEFC8;
  v40 = _Block_copy(aBlock);
  v41 = v89;
  swift_bridgeObjectRetain(v36);
  swift_retain();
  swift_release(v41);
  v42 = objc_msgSend(v37, "allowedFileProviderBundleIdentifiersFiltered:", v40);
  _Block_release(v40);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation(v39, "", 107, 1089, 88, 1);
  result = swift_release(v39);
  if ((v40 & 1) == 0)
  {
    if (v42)
    {
      v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, &type metadata for String);

    }
    else
    {
      v44 = 0;
    }
    v90 = v44;
    v64 = swift_bridgeObjectRetain(v44);
    v65 = Logger.UI.unsafeMutableAddressor(v64);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v65, v86);
    swift_bridgeObjectRetain(v36);
    v66 = swift_bridgeObjectRetain(v44);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.error.getter(v67);
    v69 = v68;
    if (os_log_type_enabled(v67, v68))
    {
      v70 = swift_slowAlloc(32, -1);
      v84 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc(96, -1);
      aBlock[0] = (uint64_t)v84;
      *(_DWORD *)v70 = 136315650;
      LODWORD(v83) = v69;
      v87 = sub_1000544FC(0xD000000000000020, 0x80000001005387A0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
      *(_WORD *)(v70 + 12) = 2080;
      v71 = swift_bridgeObjectRetain(v36);
      v72 = Array.description.getter(v71, &type metadata for String);
      v85 = v3;
      v73 = v72;
      v75 = v74;
      swift_bridgeObjectRelease(v36);
      v87 = sub_1000544FC(v73, v75, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
      swift_bridgeObjectRelease_n(v36, 2);
      swift_bridgeObjectRelease(v75);
      *(_WORD *)(v70 + 22) = 2080;
      v87 = v44;
      swift_bridgeObjectRetain(v44);
      v76 = sub_10006922C(&qword_1006572A8);
      v77 = String.init<A>(describing:)(&v87, v76);
      v79 = v78;
      v87 = sub_1000544FC(v77, v78, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
      swift_bridgeObjectRelease_n(v44, 2);
      swift_bridgeObjectRelease(v79);
      _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v83, "%s [PROTECTED APPS] no existing allow list. Filtered out: %s result: %s", (uint8_t *)v70, 0x20u);
      v80 = v84;
      swift_arrayDestroy(v84, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v80, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v6, v86);
    }
    else
    {

      swift_bridgeObjectRelease_n(v44, 2);
      swift_bridgeObjectRelease_n(v36, 2);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v86);
    }
    v62 = sub_100487804;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

void sub_10048561C()
{
  sub_100485650((SEL *)&selRef_applicationsWithContentHiddenFromSearch, 0xD000000000000020, 0x80000001005387F0, "%s [PROTECTED APPS] getting OIDs from applicationsWithContentHiddenFromSearch %s", (uint64_t (*)(void))&static os_log_type_t.error.getter);
}

void sub_100485650(SEL *a1, uint64_t a2, unint64_t a3, const char *a4, uint64_t (*a5)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  __n128 v51;
  char *v52;
  uint64_t v53;
  __n128 j;
  const char *v55;
  _QWORD *v56;
  __n128 v57;
  id v58;
  BOOL v59;
  const char *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  int64_t v77;
  uint64_t v78;
  char v79;
  void *v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v92;
  void (*v93)(uint64_t *, _QWORD);
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t (*v111)(void);
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  const char *v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  id v120;
  const char *v121;
  char *v122;
  id v123;
  uint64_t v124[4];
  uint64_t v125;
  uint64_t v126;
  char v127;
  _QWORD *v128;
  _QWORD *v129;

  v111 = a5;
  v121 = a4;
  v112 = a2;
  v113 = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v118 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v122 = (char *)&v108 - v10;
  v123 = (id)objc_opt_self(DOCAppProtectionManager);
  v11 = objc_msgSend(v123, "sharedManager");
  v12 = objc_msgSend(v11, *a1);

  v120 = (id)sub_10004F2F0(0, (unint64_t *)&unk_1006572B0, DOCProtectedApp_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v120);

  v124[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v34 = v13;
    else
      v34 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v13);
    v119 = v6;
    if (v14)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(v13);
    v33 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  v119 = v6;
  if (!v14)
    goto LABEL_22;
LABEL_3:
  if (v14 < 1)
  {
    __break(1u);
LABEL_76:
    __break(1u);
    return;
  }
  v117 = v7;
  for (i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
    else
      v16 = *(id *)(v13 + 8 * i + 32);
    v17 = v16;
    v18 = objc_msgSend(v16, "appContainerBundleID");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = objc_msgSend(v123, "sharedManager");
    v23 = objc_msgSend(v22, "hostIdentifier");

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    if (v19 == v24 && v21 == v26)
    {

      swift_bridgeObjectRelease_n(v21, 2);
    }
    else
    {
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v24, v26, 0);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v26);
      if ((v28 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v30 = *(_QWORD *)(v124[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
        v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v17);
        specialized ContiguousArray._endMutation()(v31);
      }
    }
  }
  swift_bridgeObjectRelease(v13);
  v33 = v124[0];
  v6 = v119;
  v7 = v117;
LABEL_23:
  v35 = Logger.UI.unsafeMutableAddressor(v32);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v37 = v122;
  v109 = v35;
  v110 = v36;
  ((void (*)(char *))v36)(v122);
  v38 = swift_retain_n(v33, 2);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc(22, -1);
    v42 = swift_slowAlloc(64, -1);
    v124[0] = v42;
    *(_DWORD *)v41 = 136315394;
    v125 = sub_1000544FC(v112, v113, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
    *(_WORD *)(v41 + 12) = 2080;
    swift_retain();
    v44 = Array.description.getter(v43, v120);
    v46 = v45;
    swift_release(v33);
    v125 = sub_1000544FC(v44, v46, v124);
    v47 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
    swift_release_n(v33, 2, v47);
    swift_bridgeObjectRelease(v46);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, v121, (uint8_t *)v41, 0x16u);
    swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    v48 = v41;
    v6 = v119;
    swift_slowDealloc(v48, -1, -1);

    v49 = *(void (**)(char *, uint64_t))(v7 + 8);
    v50 = v122;
  }
  else
  {

    swift_release_n(v33, 2, v51);
    v49 = *(void (**)(char *, uint64_t))(v7 + 8);
    v50 = v37;
  }
  v108 = v49;
  v49(v50, v6);
  v52 = v118;
  v129 = _swiftEmptyArrayStorage;
  v115 = v33;
  if (v33 < 0 || (v33 & 0x4000000000000000) != 0)
    goto LABEL_69;
  v53 = *(_QWORD *)(v33 + 16);
  for (j = swift_retain(); v53; v53 = _CocoaArrayWrapper.endIndex.getter(v96))
  {
    v55 = 0;
    v116 = (const char *)v53;
    v117 = v115 & 0xC000000000000001;
    v114 = v115 + 32;
    while (v117)
    {
      v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v115);
      v59 = __OFADD__(v55, 1);
      v60 = v55 + 1;
      if (v59)
        goto LABEL_67;
LABEL_37:
      v120 = v58;
      v121 = v60;
      v61 = objc_msgSend(v58, "oids");
      v62 = sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
      v63 = sub_100083500(&qword_1006572C0, &qword_10064C3A0, NSNumber_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      v64 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v61, v62, v63);

      v123 = (id)(v64 & 0xC000000000000001);
      if ((v64 & 0xC000000000000001) != 0)
      {
        if (v64 < 0)
          v65 = v64;
        else
          v65 = v64 & 0xFFFFFFFFFFFFFF8;
        v6 = __CocoaSet.count.getter(v65);
        if (!v6)
        {
LABEL_48:

          swift_bridgeObjectRelease(v64);
          v56 = _swiftEmptyArrayStorage;
          goto LABEL_31;
        }
      }
      else
      {
        v6 = *(_QWORD *)(v64 + 16);
        if (!v6)
          goto LABEL_48;
      }
      v128 = _swiftEmptyArrayStorage;
      sub_100081774(0, v6 & ~(v6 >> 63), 0);
      if (v123)
      {
        if (v64 < 0)
          v66 = v64;
        else
          v66 = v64 & 0xFFFFFFFFFFFFFF8;
        v67 = __CocoaSet.startIndex.getter(v66);
        v69 = 1;
      }
      else
      {
        v67 = sub_1002495C0(v64);
        v69 = v70 & 1;
      }
      v125 = v67;
      v126 = v68;
      v127 = v69;
      if (v6 < 0)
        goto LABEL_68;
      v71 = v64 & 0xFFFFFFFFFFFFFF8;
      if (v64 < 0)
        v71 = v64;
      v122 = (char *)v71;
      do
      {
        while (1)
        {
          v77 = v125;
          v78 = v126;
          v79 = v127;
          sub_100249650(v125, v126, v127, v64);
          v81 = v80;
          v82 = objc_msgSend(v80, "stringValue");
          v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
          v85 = v84;

          v86 = v128;
          if ((swift_isUniquelyReferenced_nonNull_native(v128) & 1) == 0)
          {
            sub_100081774(0, v86[2] + 1, 1);
            v86 = v128;
          }
          v88 = v86[2];
          v87 = v86[3];
          if (v88 >= v87 >> 1)
          {
            sub_100081774(v87 > 1, v88 + 1, 1);
            v86 = v128;
          }
          v86[2] = v88 + 1;
          v89 = &v86[2 * v88];
          v89[4] = v83;
          v89[5] = v85;
          if (v123)
            break;
          v72 = sub_10007AA18(v77, v78, v79, v64);
          v74 = v73;
          v76 = v75;
          sub_1001D0608(v77, v78, v79);
          v125 = v72;
          v126 = v74;
          v127 = v76 & 1;
          if (!--v6)
            goto LABEL_30;
        }
        if ((v79 & 1) == 0)
          goto LABEL_76;
        v90 = __CocoaSet.Index.handleBitPattern.getter(v77, v78);
        if (v90)
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v90);
        else
          isUniquelyReferenced_nonNull_native = 1;
        v92 = sub_10006922C((uint64_t *)&unk_1006572C8);
        v93 = (void (*)(uint64_t *, _QWORD))Set.Index._asCocoa.modify(v124, v92);
        __CocoaSet.formIndex(after:isUnique:)(v94, isUniquelyReferenced_nonNull_native, v122);
        v93(v124, 0);
        --v6;
      }
      while (v6);
LABEL_30:
      sub_1001D0608(v125, v126, v127);

      swift_bridgeObjectRelease(v64);
      v56 = v128;
LABEL_31:
      sub_10012FFAC((uint64_t)v56);
      v55 = v121;
      v52 = v118;
      v6 = v119;
      if (v121 == v116)
      {
        swift_release_n(v115, 2, v57);
        v95 = v129;
        goto LABEL_71;
      }
    }
    v58 = *(id *)(v114 + 8 * (_QWORD)v55);
    v59 = __OFADD__(v55, 1);
    v60 = v55 + 1;
    if (!v59)
      goto LABEL_37;
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_retain();
  }
  swift_release_n(v115, 2, j);
  v95 = _swiftEmptyArrayStorage;
LABEL_71:
  v110(v52, v109, v6);
  v97 = swift_bridgeObjectRetain_n(v95, 2);
  v98 = Logger.logObject.getter(v97);
  v99 = v111();
  if (os_log_type_enabled(v98, v99))
  {
    v100 = swift_slowAlloc(22, -1);
    v101 = swift_slowAlloc(64, -1);
    v124[0] = v101;
    *(_DWORD *)v100 = 136315394;
    v125 = sub_1000544FC(v112, v113, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
    *(_WORD *)(v100 + 12) = 2080;
    v102 = swift_bridgeObjectRetain(v95);
    v103 = Array.description.getter(v102, &type metadata for String);
    v105 = v104;
    swift_bridgeObjectRelease(v95);
    v125 = sub_1000544FC(v103, v105, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
    swift_bridgeObjectRelease_n(v95, 2);
    swift_bridgeObjectRelease(v105);
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "%s [PROTECTED APPS] returning OIDs: %s", (uint8_t *)v100, 0x16u);
    swift_arrayDestroy(v101, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v101, -1, -1);
    swift_slowDealloc(v100, -1, -1);

    v106 = v52;
    v107 = v119;
  }
  else
  {

    swift_bridgeObjectRelease_n(v95, 2);
    v106 = v52;
    v107 = v6;
  }
  v108(v106, v107);
}

uint64_t sub_100486038(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char *v20;
  char **v21;
  const char *v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v32 - v7;
  v9 = objc_opt_self(FPSearchCollection);
  v10 = swift_dynamicCastObjCClass(a1, v9);
  v11 = Logger.UI.unsafeMutableAddressor(v10);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  if (v10)
  {
    v13 = v12(v8, v11, v2);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v33 = v17;
      *(_DWORD *)v16 = 136315394;
      v32 = sub_1000544FC(0xD000000000000023, 0x8000000100538C30, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      *(_WORD *)(v16 + 12) = 2080;
      v32 = sub_1000544FC(0xD000000000000023, 0x8000000100538C30, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s [PROTECTED APPS] %s getting OIDs for a user search collection", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    v18 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
    v19 = 0xD000000000000020;
    v20 = "protectedAppContainersOIDList";
    v21 = &selRef_applicationsWithContentHiddenFromSearch;
    v22 = "%s [PROTECTED APPS] getting OIDs from applicationsWithContentHiddenFromSearch %s";
    v23 = (uint64_t (*)(void))&static os_log_type_t.error.getter;
  }
  else
  {
    v24 = v12(v6, v11, v2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc(22, -1);
      v28 = swift_slowAlloc(64, -1);
      v33 = v28;
      *(_DWORD *)v27 = 136315394;
      v32 = sub_1000544FC(0xD000000000000023, 0x8000000100538C30, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      *(_WORD *)(v27 + 12) = 2080;
      v32 = sub_1000544FC(0xD000000000000023, 0x8000000100538C30, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s [PROTECTED APPS] %s getting OIDs for a named search location", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v18 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
    v19 = 0xD00000000000001DLL;
    v20 = "dentifiers(for:)";
    v21 = &selRef_protectedApplications;
    v22 = "%s [PROTECTED APPS] getting OIDs from protectedApplications %s";
    v23 = (uint64_t (*)(void))&static os_log_type_t.debug.getter;
  }
  sub_100485650((SEL *)v21, v19, (unint64_t)v20 | 0x8000000000000000, v22, v23);
  v30 = v29;

  return v30;
}

void sub_100486468(uint64_t a1)
{
  uint64_t v1;

  sub_10047F328(a1, *(void **)(v1 + 16));
}

uint64_t sub_100486470()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1004864AC(uint64_t a1)
{
  uint64_t v1;

  sub_100486F60(a1, *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), 0, 0xE000000000000000, *(void **)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

void sub_1004864E8(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(void (*)(uint64_t, uint64_t), uint64_t, __n128);
  _QWORD *v28;
  __n128 v29;
  id v30;
  uint64_t v31;

  v14 = swift_allocObject(&unk_1005EF528, 41, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_BYTE *)(v14 + 40) = a4;
  v15 = objc_allocWithZone((Class)type metadata accessor for DOCBlockOperation(0));
  v16 = a1;
  swift_bridgeObjectRetain(a3);
  v17 = (void *)DOCBlockOperation.init(block:)(sub_100487BE8, v14);
  v18 = objc_allocWithZone((Class)type metadata accessor for DOCCreateNewFolderPostflightUIOperation(0));
  swift_bridgeObjectRetain(a3);
  v19 = (void *)DOCCreateNewFolderPostflightUIOperation.init(folderName:alertPresenting:)(a2, a3, a5);
  v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v21 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1004DA350;
  *(_QWORD *)(v21 + 32) = v17;
  *(_QWORD *)(v21 + 40) = v19;
  v31 = v21;
  specialized Array._endMutation()(v21);
  v22 = objc_allocWithZone((Class)type metadata accessor for DOCChainOperation(0));
  v23 = v17;
  v24 = v19;
  v25 = (_QWORD *)DOCChainOperation.init(operations:)(v31);
  v26 = swift_allocObject(&unk_1005EF550, 32, 7);
  *(_QWORD *)(v26 + 16) = a6;
  *(_QWORD *)(v26 + 24) = a7;
  v27 = *(void (**)(void (*)(uint64_t, uint64_t), uint64_t, __n128))((swift_isaMask & *v25) + 0xB0);
  v28 = v25;
  v29 = swift_retain();
  v27(sub_100487BF8, v26, v29);

  (*(void (**)(uint64_t))((swift_isaMask & *v28) + 0x150))(1);
  v30 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  objc_msgSend(v30, "addOperation:", v28);

}

unint64_t sub_1004866DC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C1090, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

void sub_100486724(void *a1, void *a2)
{
  void *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  char *__ptr32 *v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  void *v28;
  id v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  void *v46;
  _QWORD *v47;
  id v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  char v52;
  __int128 aBlock;
  __int128 v54;
  void (*v55)(int);
  _QWORD *v56;
  unint64_t v57;

  v4 = (void *)objc_opt_self(DOCErrorStore);
  v5 = (void *)_convertErrorToNSError(_:)(a1);
  v6 = objc_msgSend(v4, "augmentedErrorForError:", v5);

  if (!v6)
    v6 = a1;
  v7 = _swiftEmptyArrayStorage;
  v57 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = objc_msgSend(v6, "localizedRecoveryOptions");
  if (v8)
  {
    v9 = v8;
    v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String);

  }
  v10 = v7[2];
  v11 = &off_1004D4000;
  if (v10)
  {
    v50 = a2;
    v12 = (void *)objc_opt_self(UIAlertAction);
    v13 = 0;
    v51 = NSFileProviderDestructiveRecoveryKey;
    v49 = v7;
    v14 = v7 + 5;
    while (1)
    {
      v15 = *v14;
      v16 = *v14;
      if (v13)
      {
        swift_bridgeObjectRetain(v16);
        v17 = objc_msgSend(v6, "userInfo", v49);
        v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
        v21 = v20;
        if (*(_QWORD *)(v18 + 16) && (v22 = sub_10007EF08(v19, v20), (v23 & 1) != 0))
        {
          sub_100069BD8(*(_QWORD *)(v18 + 56) + 32 * v22, (uint64_t)&aBlock);
        }
        else
        {
          aBlock = 0u;
          v54 = 0u;
        }
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v18);
        if (!*((_QWORD *)&v54 + 1))
        {
          sub_10000CB4C((uint64_t)&aBlock, &qword_100642730);
LABEL_18:
          v24 = 0;
          goto LABEL_19;
        }
        if (!swift_dynamicCast(&v52, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)|| (v52 & 1) == 0)
        {
          goto LABEL_18;
        }
        v24 = 2;
      }
      else
      {
        swift_bridgeObjectRetain(v16);
        v24 = 1;
      }
LABEL_19:
      v25 = swift_allocObject(&unk_1005EEBA0, 32, 7);
      *(_QWORD *)(v25 + 16) = v6;
      *(_QWORD *)(v25 + 24) = v13;
      v26 = v6;
      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      v55 = sub_100486BC4;
      v56 = (_QWORD *)v25;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v54 = sub_1000602CC;
      *((_QWORD *)&v54 + 1) = &unk_1005EEBB8;
      v28 = _Block_copy(&aBlock);
      v29 = objc_msgSend(v12, "actionWithTitle:style:handler:", v27, v24, v28, swift_release(v56).n128_f64[0]);
      _Block_release(v28);

      v30 = v29;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
      v32 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v31 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v32 >= v31 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
      v14 += 2;
      ++v13;
      v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
      specialized Array._endMutation()(v33);

      if (v10 == v13)
      {
        v34 = swift_bridgeObjectRelease(v49).n128_u64[0];
        a2 = v50;
        v11 = &off_1004D4000;
        goto LABEL_24;
      }
    }
  }
  v34 = swift_bridgeObjectRelease(v7).n128_u64[0];
LABEL_24:
  v35 = objc_msgSend(v6, "localizedDescription", *(double *)&v34, v49);
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v39 = objc_msgSend(v6, "localizedRecoverySuggestion");
  if (v39)
  {
    v40 = v39;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v43 = v42;

  }
  else
  {
    v41 = 0;
    v43 = 0;
  }
  v44 = v57;
  v45 = (_QWORD *)swift_allocObject(&unk_1005EEBF0, 64, 7);
  v45[2] = v36;
  v45[3] = v38;
  v45[4] = v41;
  v45[5] = v43;
  v45[6] = v44;
  v45[7] = a2;
  v55 = (void (*)(int))sub_100486BD0;
  v56 = v45;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = *((_QWORD *)v11 + 409);
  *(_QWORD *)&v54 = sub_10004A82C;
  *((_QWORD *)&v54 + 1) = &unk_1005EEC08;
  v46 = _Block_copy(&aBlock);
  v47 = v56;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v44);
  v48 = a2;
  swift_bridgeObjectRetain(v38);
  swift_release(v47);
  DOCRunInMainThread(v46);
  _Block_release(v46);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v44);

}

uint64_t sub_100486BA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100486BC4(int a1)
{
  uint64_t v1;

  sub_10047D2D4(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100486BD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;
  id v9;
  uint64_t countAndFlagsBits;
  void *object;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  void *v29;
  uint64_t v30;
  NSString v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void **v36;
  _QWORD *v37;
  void *v38;
  _QWORD *v39;
  id v40;
  id v41;
  void *v42;
  void **aBlock;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t (*v47)(uint64_t);
  _QWORD *v48;
  Swift::String v49;
  Swift::String v50;

  v7 = (void *)_convertErrorToNSError(_:)(a1);
  v8 = objc_msgSend(v7, "localizedFailureReason");
  v42 = a2;
  if (v8)
  {

    v9 = objc_msgSend(v7, "localizedDescription");
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  }
  else
  {
    v12 = (id)_DocumentManagerBundle(0);
    if (!v12)
      goto LABEL_10;
    v9 = v12;
    v49._object = (void *)0x80000001005386D0;
    v13._object = (void *)0x80000001005386A0;
    v13._countAndFlagsBits = 0x1000000000000023;
    v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v14.value._object = (void *)0xEB00000000656C62;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v49._countAndFlagsBits = 0xD00000000000001DLL;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v9, v15, v49);
    object = v16._object;
    countAndFlagsBits = v16._countAndFlagsBits;
  }
  v17 = countAndFlagsBits;
  v18 = object;

  v19 = objc_msgSend(v7, "localizedFailureReason");
  if (!v19)
    v19 = objc_msgSend(v7, "localizedDescription");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v24 = (id)_DocumentManagerBundle(v23);
  if (v24)
  {
    v25 = v24;
    v50._object = (void *)0xE200000000000000;
    v26._countAndFlagsBits = 19279;
    v26._object = (void *)0xE200000000000000;
    v27.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v27.value._object = (void *)0xEB00000000656C62;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v50._countAndFlagsBits = 19279;
    v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v50)._object;

    v30 = swift_allocObject(&unk_1005EEDA8, 32, 7);
    *(_QWORD *)(v30 + 16) = a3;
    *(_QWORD *)(v30 + 24) = a4;
    sub_10008BA00(a3, a4);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    v47 = sub_1004876F0;
    v48 = (_QWORD *)v30;
    aBlock = _NSConcreteStackBlock;
    v44 = 1107296256;
    v45 = sub_1000602CC;
    v46 = &unk_1005EEDC0;
    v32 = _Block_copy(&aBlock);
    swift_release(v48);
    v33 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v31, 0, v32);
    _Block_release(v32);

    v34 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v35 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v35 + 32) = v33;
    aBlock = (void **)v35;
    specialized Array._endMutation()(v35);
    v36 = aBlock;
    v37 = (_QWORD *)swift_allocObject(&unk_1005EEDF8, 64, 7);
    v37[2] = v17;
    v37[3] = v18;
    v37[4] = v20;
    v37[5] = v22;
    v37[6] = v36;
    v37[7] = v42;
    v47 = (uint64_t (*)(uint64_t))sub_100486BD0;
    v48 = v37;
    aBlock = _NSConcreteStackBlock;
    v44 = 1107296256;
    v45 = sub_10004A82C;
    v46 = &unk_1005EEE10;
    v38 = _Block_copy(&aBlock);
    v39 = v48;
    v40 = v33;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v36);
    v41 = v42;
    swift_release(v39);
    DOCRunInMainThread(v38);
    _Block_release(v38);

    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v36);
    return;
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

void sub_100486F60(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, unint64_t a5, void *a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  id v33;
  double v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  const void *v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  char v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String_optional v46;
  Swift::String v47;
  Swift::String v48;
  void *object;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t countAndFlagsBits;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String_optional v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void **aBlock;
  uint64_t v97;
  uint64_t (*v98)(uint64_t);
  void *v99;
  void *v100;
  uint64_t v101;
  Swift::String v102;
  Swift::String v103;

  v91 = a5;
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v35 = swift_allocObject(&unk_1005EEC40, 32, 7);
    *(_QWORD *)(v35 + 16) = a8;
    *(_QWORD *)(v35 + 24) = a9;
    v100 = sub_10010C18C;
    v101 = v35;
    aBlock = _NSConcreteStackBlock;
    v97 = 1107296256;
    v98 = sub_10004A82C;
    v99 = &unk_1005EEC58;
    v36 = _Block_copy(&aBlock);
    v37 = v101;
    swift_retain();
    swift_release(v37);
    DOCRunInMainThread(v36);
    v38 = v36;
LABEL_24:
    _Block_release(v38);
    return;
  }
  v89 = a3;
  v90 = a2;
  v21 = v18;
  v22 = a7;
  v92 = a8;
  v93 = a6;
  v94 = a9;
  v23 = (void *)_convertErrorToNSError(_:)(a1);
  v24 = objc_msgSend(v23, "domain");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSFileProviderErrorDomain);
  if (v25 == v28 && v27 == v29)
  {
    swift_bridgeObjectRelease_n(v27, 2);
  }
  else
  {
    v31 = v29;
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v28, v29, 0);
    swift_bridgeObjectRelease(v27);
    *(_QWORD *)&v34 = swift_bridgeObjectRelease(v31).n128_u64[0];
    if ((v32 & 1) == 0)
      goto LABEL_17;
  }
  v33 = objc_msgSend(v23, "code", v34);
  if (v33 == (id)-1001)
  {
    v39 = v91;
    if ((v91 & 0x2000000000000000) != 0)
      v40 = HIBYTE(v91) & 0xF;
    else
      v40 = a4 & 0xFFFFFFFFFFFFLL;
    v41 = (id)_DocumentManagerBundle(-1001);
    v42 = v41;
    if (v40)
    {
      v43 = v22;
      v44 = v90;
      if (v41)
      {
        v45._countAndFlagsBits = 0x100000000000005CLL;
        v102._countAndFlagsBits = 0xD000000000000038;
        v102._object = (void *)0x80000001005385E0;
        v45._object = (void *)0x8000000100538580;
        v46.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v46.value._object = (void *)0xEB00000000656C62;
        v47._countAndFlagsBits = 0;
        v47._object = (void *)0xE000000000000000;
        v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v42, v47, v102);
        object = v48._object;

        v50 = sub_10006922C((uint64_t *)&unk_100644560);
        v51 = swift_allocObject(v50, 112, 7);
        *(_OWORD *)(v51 + 16) = xmmword_1004D4CE0;
        *(_QWORD *)(v51 + 56) = &type metadata for String;
        v52 = sub_10006A638();
        v53 = v89;
        *(_QWORD *)(v51 + 32) = v44;
        *(_QWORD *)(v51 + 40) = v53;
        *(_QWORD *)(v51 + 96) = &type metadata for String;
        *(_QWORD *)(v51 + 104) = v52;
        *(_QWORD *)(v51 + 64) = v52;
        *(_QWORD *)(v51 + 72) = a4;
        *(_QWORD *)(v51 + 80) = v39;
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v39);
        countAndFlagsBits = v48._countAndFlagsBits;
        v55 = v48._object;
        v56 = v51;
LABEL_23:
        v78 = String.init(format:_:)(countAndFlagsBits, v55, v56);
        v80 = v79;
        v82 = v93;
        v81 = v94;
        swift_bridgeObjectRelease(object);
        v83 = swift_allocObject(&unk_1005EECB8, 72, 7);
        *(_QWORD *)(v83 + 16) = v78;
        *(_QWORD *)(v83 + 24) = v80;
        *(_BYTE *)(v83 + 32) = v43 & 1;
        *(_QWORD *)(v83 + 40) = v92;
        *(_QWORD *)(v83 + 48) = v81;
        *(_QWORD *)(v83 + 56) = v23;
        *(_QWORD *)(v83 + 64) = v82;
        v100 = sub_100487670;
        v101 = v83;
        aBlock = _NSConcreteStackBlock;
        v97 = 1107296256;
        v98 = sub_10004A82C;
        v99 = &unk_1005EECD0;
        v84 = _Block_copy(&aBlock);
        v85 = v101;
        swift_retain();
        v86 = v23;
        v87 = v82;
        swift_release(v85);
        DOCRunInMainThread(v84);

        v38 = v84;
        goto LABEL_24;
      }
      __break(1u);
    }
    else
    {
      v70 = v90;
      if (v41)
      {
        v43 = v22;
        v103._object = (void *)0x8000000100538670;
        v71._object = (void *)0x8000000100538620;
        v71._countAndFlagsBits = 0x1000000000000043;
        v72.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v72.value._object = (void *)0xEB00000000656C62;
        v73._countAndFlagsBits = 0;
        v73._object = (void *)0xE000000000000000;
        v103._countAndFlagsBits = 0xD000000000000022;
        v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v72, (NSBundle)v42, v73, v103);
        object = v74._object;

        v75 = sub_10006922C((uint64_t *)&unk_100644560);
        v76 = swift_allocObject(v75, 72, 7);
        *(_OWORD *)(v76 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v76 + 56) = &type metadata for String;
        *(_QWORD *)(v76 + 64) = sub_10006A638();
        v77 = v89;
        *(_QWORD *)(v76 + 32) = v70;
        *(_QWORD *)(v76 + 40) = v77;
        swift_bridgeObjectRetain(v77);
        countAndFlagsBits = v74._countAndFlagsBits;
        v55 = v74._object;
        v56 = v76;
        goto LABEL_23;
      }
    }
    __break(1u);
    return;
  }
LABEL_17:
  v57 = Logger.Rename.unsafeMutableAddressor(v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v57, v21);
  v58 = v23;
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.error.getter(v59);
  if (os_log_type_enabled(v59, v60))
  {
    v61 = swift_slowAlloc(22, -1);
    v89 = (_QWORD *)swift_slowAlloc(8, -1);
    v91 = swift_slowAlloc(32, -1);
    aBlock = (void **)v91;
    *(_DWORD *)v61 = 136315394;
    v95 = sub_1000544FC(0xD000000000000075, 0x8000000100538500, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &aBlock);
    *(_WORD *)(v61 + 12) = 2112;
    v90 = v21;
    v95 = (uint64_t)v58;
    v62 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &aBlock);
    v63 = v89;
    *v89 = v58;

    _os_log_impl((void *)&_mh_execute_header, v59, v60, "%s: Rename Operation failed: %@", (uint8_t *)v61, 0x16u);
    v64 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v63, 1, v64);
    swift_slowDealloc(v63, -1, -1);
    v65 = v91;
    swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v90);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v21);
  }
  v66 = (_QWORD *)swift_allocObject(&unk_1005EEC90, 40, 7);
  v67 = v94;
  v66[2] = v92;
  v66[3] = v67;
  v66[4] = v58;
  v68 = v58;
  swift_retain();
  v69 = v68;
  sub_100486BD4((uint64_t)v69, v93, (uint64_t)sub_100487628, (uint64_t)v66);

  swift_release(v66);
}

void sub_100487628()
{
  uint64_t v0;

  sub_10047E9E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100487634()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 72, 7);
}

id sub_100487670()
{
  uint64_t v0;

  return sub_10047EAA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(void (**)(id))(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_100487684()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1004876B0(uint64_t a1)
{
  uint64_t v1;

  sub_10047EECC(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1004876C4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004876F0(uint64_t a1)
{
  uint64_t v1;

  return sub_10047D3AC(a1, *(void (**)(__n128))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1004876FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

void sub_100487738()
{
  uint64_t v0;

  sub_10047D3E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_10048774C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

double sub_100487788(uint64_t a1)
{
  uint64_t v1;

  return sub_10047E820(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

void sub_10048779C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10047E930(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1004877B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004877D8()
{
  uint64_t v0;

  sub_100484544(v0);
}

uint64_t sub_1004877E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

BOOL sub_100487804(void *a1)
{
  uint64_t v1;

  return sub_100482C48(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_10048780C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10048781C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100487840()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100487874()
{
  uint64_t v0;

  sub_100482CF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100487880()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100487890()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1004878BC()
{
  uint64_t v0;

  return sub_100483104(*(void **)(v0 + 16), *(Class *)(v0 + 24));
}

uint64_t sub_1004878C4()
{
  uint64_t v0;

  return sub_10048316C(v0);
}

uint64_t sub_1004878CC()
{
  uint64_t v0;

  return sub_100483284(v0);
}

uint64_t sub_1004878D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for DOCOperationItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1006573B0;
  if (!qword_1006573B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCOperationItem);
  return result;
}

uint64_t sub_100487924()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 97, 7);
}

void sub_100487980(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_10047D91C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(unsigned __int8 *)(v3 + 48));
}

uint64_t sub_1004879C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004879E8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 16))(0, a1, 1);
}

uint64_t sub_100487A14()
{
  return sub_10010D8F4((void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_100487A24(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1 + 24))(0, a1, *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC5Files16DOCCopyOperation_engineTypeUsed));
}

uint64_t sub_100487A60()
{
  return sub_10010D8F4((void (*)(_QWORD))&_swift_release, 40);
}

void sub_100487A70(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10047E738(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), &OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem);
}

uint64_t sub_100487A94()
{
  return sub_10010D8F4((void (*)(_QWORD))&_swift_release, 40);
}

void sub_100487AA4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10047E738(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), &OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem);
}

uint64_t sub_100487AC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100487AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10047D6D8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_100487AF4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100487B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10047D8A4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_100487B20()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 56, 7);
}

void sub_100487B64()
{
  uint64_t v0;

  sub_10047E520(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100487B74()
{
  return sub_100347438((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_100487B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10047FCE0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100487B88()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100487BBC(void (*a1)(_QWORD *, _QWORD), uint64_t a2)
{
  uint64_t *v2;

  return sub_100480088(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_100487BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100480344(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100487BD0(uint64_t a1)
{
  uint64_t v1;

  return sub_10047FEC8(a1, *(void (**)(_QWORD *, id))(v1 + 16));
}

uint64_t sub_100487BD8()
{
  return sub_10010D8F4((void (*)(_QWORD))&_swift_bridgeObjectRelease, 41);
}

void sub_100487BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10047F52C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

void sub_100487BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10047F798(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100487C04()
{
  return sub_10010D8F4((void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_100487C14(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10047F6D0(a1, a2, *(_QWORD **)(v2 + 16), *(void (**)(__int128 *, uint64_t))(v2 + 24));
}

void sub_100487C24(uint64_t a1)
{
  uint64_t v1;

  sub_100481E8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_100487C3C(uint64_t a1)
{
  uint64_t v1;

  return sub_100481F30(a1, *(void **)(v1 + 16));
}

uint64_t sub_100487C44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100487C78(NSObject *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100482138(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100487C84()
{
  return sub_100347438((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100487C90()
{
  return sub_100117F34((uint64_t *)&unk_100657308);
}

uint64_t sub_100487C9C(double a1)
{
  sub_10006922C((uint64_t *)&unk_100657308);
  return sub_1004814D0(a1);
}

uint64_t sub_100487CDC()
{
  return sub_100117F34((uint64_t *)&unk_100657308);
}

uint64_t sub_100487CE8(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_10006922C((uint64_t *)&unk_100657308);
  return sub_100481578(a1, v3);
}

uint64_t sub_100487D38()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_100487D7C(void *a1)
{
  uint64_t v1;

  sub_100481668(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

void sub_100487D94(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_10031B044(a1, a2, v2);
}

uint64_t sub_100487D9C()
{
  return sub_10010D8F4((void (*)(_QWORD))&_swift_release, 40);
}

void sub_100487DAC(void *a1, void *a2)
{
  uint64_t v2;

  sub_100481920(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24));
}

uint64_t sub_100487DB8()
{
  return sub_100117F34((uint64_t *)&unk_100655280);
}

uint64_t sub_100487DC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_100487DD8(uint64_t a1)
{
  uint64_t v1;

  sub_10047FAC0(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_100487DE0()
{
  return sub_100117F34(&qword_100643EB0);
}

uint64_t sub_100487DEC(uint64_t a1, uint64_t a2)
{
  sub_10006922C(&qword_100643EB0);
  return sub_10048077C(a1, a2);
}

uint64_t sub_100487E3C()
{
  return sub_100487FC4(&qword_10064D590);
}

uint64_t sub_100487E48(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_10006922C(&qword_10064D590) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10047F474(a1, a2, v2 + v6, *(_QWORD **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100487EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = sub_10006922C(&qword_10064CA90);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));

  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_100487F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_10006922C(&qword_10064CA90) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100480A00(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(uint64_t **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100487FB8()
{
  return sub_100487FC4(&qword_10064CA90);
}

uint64_t sub_100487FC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = sub_10006922C(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return swift_deallocObject(v1, v7 + 8, v6);
}

double sub_100488034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_10006922C(&qword_10064CA90) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100481074(a1, (int)v1 + (int)v4, *(id *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100488088()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

void sub_1004880C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10047EF8C(a1, a2, *(void (**)(_QWORD, uint64_t, __n128))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1004880D4()
{
  return sub_100347438((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_1004880E0(uint64_t a1)
{
  uint64_t v1;

  sub_10047F24C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1004880EC()
{
  return sub_100117F34((uint64_t *)&unk_100655280);
}

uint64_t sub_1004880F8(uint64_t a1)
{
  sub_10006922C((uint64_t *)&unk_100655280);
  return sub_100481E2C(a1);
}

uint64_t sub_10048813C()
{
  return sub_100117F34((uint64_t *)&unk_100655280);
}

uint64_t _s22ArchiveOperationStatusOwCP(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100329244(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s22ArchiveOperationStatusOwxx(uint64_t a1)
{
  sub_100329238(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s22ArchiveOperationStatusOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100329244(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_100329238(v5, v6);
  return a1;
}

uint64_t _s22ArchiveOperationStatusOwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_100329238(v5, v6);
  return a1;
}

ValueMetadata *_s22ArchiveOperationStatusOMa()
{
  return &_s22ArchiveOperationStatusON;
}

uint64_t storeEnumTagSinglePayload for DOCActionOperationKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100488284 + 4 * byte_1004E9F9F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1004882B8 + 4 * byte_1004E9F9A[v4]))();
}

uint64_t sub_1004882B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004882C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004882C8);
  return result;
}

uint64_t sub_1004882D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004882DCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1004882E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004882E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCActionOperationKind()
{
  return &type metadata for DOCActionOperationKind;
}

char *sub_100488304(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = sub_10006922C(&qword_10064DBA0);
      v15 = *(int *)(v14 + 48);
      v16 = &a1[v15];
      v17 = (uint64_t *)((char *)a2 + v15);
      v19 = *v17;
      v18 = v17[1];
      *(_QWORD *)v16 = v19;
      *((_QWORD *)v16 + 1) = v18;
      a1[*(int *)(v14 + 64)] = *((_BYTE *)a2 + *(int *)(v14 + 64));
      swift_bridgeObjectRetain(v18);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

double sub_1004883F4(id *a1, uint64_t a2)
{
  double result;
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v4 = type metadata accessor for URL(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = *(uint64_t *)((char *)a1 + *(int *)(sub_10006922C(&qword_10064DBA0) + 48) + 8);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  return result;
}

void **sub_100488460(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *a2;
    *a1 = *a2;
    v7 = v6;
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v12 = sub_10006922C(&qword_10064DBA0);
    v13 = *(int *)(v12 + 48);
    v14 = (void **)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v17 = *v15;
    v16 = v15[1];
    *v14 = v17;
    v14[1] = v16;
    *((_BYTE *)a1 + *(int *)(v12 + 64)) = *((_BYTE *)a2 + *(int *)(v12 + 64));
    swift_bridgeObjectRetain(v16);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void **sub_100488524(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_100303E08((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = v6;
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v11 = type metadata accessor for URL(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = sub_10006922C(&qword_10064DBA0);
      v13 = *(int *)(v12 + 48);
      v14 = (void **)((char *)a1 + v13);
      v15 = (void **)((char *)a2 + v13);
      *v14 = *v15;
      v16 = v15[1];
      v14[1] = v16;
      *((_BYTE *)a1 + *(int *)(v12 + 64)) = *((_BYTE *)a2 + *(int *)(v12 + 64));
      swift_bridgeObjectRetain(v16);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

char *sub_100488600(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_10006922C(&qword_10064DBA0);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    a1[*(int *)(v7 + 64)] = a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1004886AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100303E08((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_10006922C(&qword_10064DBA0);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      a1[*(int *)(v7 + 64)] = a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10048876C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v4, *(_QWORD *)(result - 8) + 64, &unk_1004EA098, &unk_1004EA0B0);
    v5[0] = v4;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

unint64_t sub_1004887FC()
{
  unint64_t result;

  result = qword_1006573E8;
  if (!qword_1006573E8)
  {
    result = swift_getWitnessTable(&unk_1004EA140, &type metadata for DOCActionOperationKind);
    atomic_store(result, (unint64_t *)&qword_1006573E8);
  }
  return result;
}

uint64_t sub_1004889AC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 24) == 1)
  {
    *(_BYTE *)(v0 + 24) = 0;
    sub_100489204(v0, *(_QWORD *)(v0 + 16), (uint64_t)&unk_1005EFE40, (uint64_t)sub_100489420, (uint64_t)&unk_1005EFE58);
  }
  swift_release(*(_QWORD *)(v0 + 16));
  sub_100087534(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_100087534(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

void sub_100488A14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  _QWORD v60[5];
  _QWORD *v61;

  v49 = a2;
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v57 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v56);
  v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10006922C((uint64_t *)&unk_100643900);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v48 - v12;
  v14 = type metadata accessor for DOCFileOperation(0);
  v54 = *(_QWORD *)(v14 - 8);
  v55 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v58 = (uint64_t)&v48 - v18;
  v19 = *(_QWORD *)(a1 + 16);
  v21 = *(void **)(v19 + 120);
  v20 = *(void **)(v19 + 128);
  v60[0] = _swiftEmptyArrayStorage;
  if (!v21)
  {
    v26 = v20;
    if (!v20)
      goto LABEL_10;
    goto LABEL_7;
  }
  v22 = v20;
  v53 = v21;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
  v24 = *(_QWORD *)((v60[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v23 = *(_QWORD *)((v60[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v24 >= v23 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
  v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v53);
  specialized Array._endMutation()(v25);
  if (v20)
  {
LABEL_7:
    v53 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
    v28 = *(_QWORD *)((v60[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v27 = *(_QWORD *)((v60[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v28 >= v27 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
    v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v53);
    specialized Array._endMutation()(v29);
  }
LABEL_10:
  v30 = v60[0];

  v31 = v30;
  if (!((unint64_t)v30 >> 62))
  {
    v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v32)
      goto LABEL_12;
LABEL_33:
    swift_bridgeObjectRelease(v31);
    v45 = _swiftEmptyArrayStorage;
LABEL_34:
    sub_100294CF8((uint64_t)v45, v49);
    swift_bridgeObjectRelease(v45);
    return;
  }
  if (v30 >= 0)
    v30 &= 0xFFFFFFFFFFFFFF8uLL;
  swift_bridgeObjectRetain(v31);
  v32 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v31);
  if (!v32)
    goto LABEL_33;
LABEL_12:
  v61 = _swiftEmptyArrayStorage;
  sub_100154E30(0, v32 & ~(v32 >> 63), 0);
  if ((v32 & 0x8000000000000000) == 0)
  {
    v33 = 0;
    v50 = 0x8000000100538DD0;
    v51 = v31 & 0xC000000000000001;
    v52 = v32;
    v53 = (id)v31;
    do
    {
      if (v51)
        v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v31);
      else
        v34 = *(id *)(v31 + 8 * v33 + 32);
      v35 = v34;
      v36 = NSProgress.fileTotalCount.getter(v34);
      v38 = v37;
      v59 = objc_msgSend(v35, "hash");
      v39 = AnyHashable.init<A>(_:)(&v59, &type metadata for Int, &protocol witness table for Int);
      static Date.now.getter(v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
      v40 = 2;
      if ((v38 & 1) != 0)
      {
        v42 = v57;
      }
      else
      {
        v41 = v36 < 2;
        v42 = v57;
        if (!v41)
        {
          *v7 = 0xD000000000000012;
          v7[1] = v50;
          v40 = 1;
        }
      }
      swift_storeEnumTagMultiPayload(v7, v56, v40);
      sub_10006777C((uint64_t)v60, (uint64_t)v17);
      *((_QWORD *)v17 + 5) = v35;
      sub_1001114C4((uint64_t)v13, (uint64_t)v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3) == 1)
      {
        Date.init(timeIntervalSinceNow:)(0.0);
        sub_10011150C((uint64_t)v13);
        sub_100067748((uint64_t)v60);
        sub_10011150C((uint64_t)v11);
        v43 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      }
      else
      {
        sub_10011150C((uint64_t)v13);
        sub_100067748((uint64_t)v60);
        v43 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
        v43(v42, v11, v3);
      }
      v44 = v55;
      v43(&v17[*(int *)(v55 + 24)], v42, v3);
      sub_1001D0788((uint64_t)v7, (uint64_t)&v17[*(int *)(v44 + 28)], type metadata accessor for DOCProgressProvidingOperationIconType);
      sub_1001D0788((uint64_t)v17, v58, type metadata accessor for DOCFileOperation);
      v45 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native(v61) & 1) == 0)
      {
        sub_100154E30(0, v45[2] + 1, 1);
        v45 = v61;
      }
      v47 = v45[2];
      v46 = v45[3];
      if (v47 >= v46 >> 1)
      {
        sub_100154E30(v46 > 1, v47 + 1, 1);
        v45 = v61;
      }
      ++v33;
      v45[2] = v47 + 1;
      sub_1001D0788(v58, (uint64_t)v45+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v47, type metadata accessor for DOCFileOperation);
      v31 = (uint64_t)v53;
    }
    while (v52 != v33);
    swift_bridgeObjectRelease(v53);
    goto LABEL_34;
  }
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for DOCFileProviderSyncStateProvider.ObservingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100489000 + 4 * byte_1004EA175[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100489034 + 4 * byte_1004EA170[v4]))();
}

uint64_t sub_100489034(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048903C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100489044);
  return result;
}

uint64_t sub_100489050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100489058);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10048905C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100489064(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateProvider.ObservingState()
{
  return &type metadata for DOCFileProviderSyncStateProvider.ObservingState;
}

unint64_t sub_100489084()
{
  unint64_t result;

  result = qword_100657520[0];
  if (!qword_100657520[0])
  {
    result = swift_getWitnessTable(&unk_1004EA210, &type metadata for DOCFileProviderSyncStateProvider.ObservingState);
    atomic_store(result, qword_100657520);
  }
  return result;
}

uint64_t sub_1004890C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = *v0;
  swift_beginAccess(v1 + 48, v4, 0, 0);
  v2 = *(_QWORD *)(v1 + 48);
  sub_10008BA00(v2, *(_QWORD *)(v1 + 56));
  return v2;
}

uint64_t (*sub_100489118(uint64_t a1))(_QWORD)
{
  _QWORD *v1;

  swift_beginAccess(*v1 + 48, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100489158()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = *v0;
  swift_beginAccess(v1 + 32, v4, 0, 0);
  v2 = *(_QWORD *)(v1 + 32);
  sub_10008BA00(v2, *(_QWORD *)(v1 + 40));
  return v2;
}

uint64_t (*sub_1004891A8(uint64_t a1))(_QWORD)
{
  _QWORD *v1;

  swift_beginAccess(*v1 + 32, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1004891E8(uint64_t a1, uint64_t a2)
{
  return sub_100489204(a1, a2, (uint64_t)&unk_1005EFE40, (uint64_t)sub_100489420, (uint64_t)&unk_1005EFE58);
}

uint64_t sub_100489204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a2 + 24);
  v15 = swift_allocObject(&unk_1005EFE18, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a2;
  aBlock[4] = a4;
  v29 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = a5;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter(v18);
  v27 = _swiftEmptyArrayStorage;
  v19 = sub_10008BAAC();
  v20 = sub_10006922C((uint64_t *)&unk_100647540);
  v21 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v20, v21, v9, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  v22 = v29;
  swift_release(v15);
  return swift_release(v22);
}

uint64_t sub_1004893F8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100489420()
{
  uint64_t v0;

  return sub_1003191A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100489428(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v3 = v2;
  *(_BYTE *)(v3 + 24) = 0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  if (qword_100640D18 != -1)
    swift_once(&qword_100640D18, sub_10008F150);
  v6 = qword_100672620;
  swift_retain();
  v7 = sub_1000042FC(a1);
  swift_release(v6);
  *(_QWORD *)(v3 + 16) = v7;
  if ((a2 & 1) != 0 && (*(_BYTE *)(v3 + 24) & 1) == 0)
  {
    *(_BYTE *)(v3 + 24) = 1;
    sub_100489204(v3, v7, (uint64_t)&unk_1005EFE90, (uint64_t)sub_100094A44, (uint64_t)&unk_1005EFEA8);
  }
  return v3;
}

void sub_1004894FC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t Strong;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  __int128 v58;
  uint64_t v59;
  id *v60;
  unint64_t v61;
  _QWORD aBlock[5];
  uint64_t v63;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - v9;
  v60 = (id *)DOCLog.UI.unsafeMutableAddressor(v11);
  v12 = *v60;
  v13 = static os_log_type_t.debug.getter();
  v59 = sub_10006922C((uint64_t *)&unk_100644560);
  v14 = swift_allocObject(v59, 112, 7);
  v58 = xmmword_1004D4CE0;
  *(_OWORD *)(v14 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  v61 = sub_10006A638();
  *(_QWORD *)(v14 + 64) = v61;
  v56 = (unint64_t)"createAndShowFileImportPicker()";
  *(_QWORD *)(v14 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v14 + 40) = 0x8000000100538FB0;
  v57 = 0x8000000100538FB0;
  URL._bridgeToObjectiveC()((NSURL *)0x8000000100538FB0);
  v16 = v15;
  *(_QWORD *)(v14 + 96) = sub_10048AFE0();
  *(_QWORD *)(v14 + 104) = sub_10015BD58();
  *(_QWORD *)(v14 + 72) = v16;
  os_log(_:dso:log:type:_:)("%@: %@", 6, 2, &_mh_execute_header, v12, v13, v14);

  v17 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, a1, v4, v17);
  v18 = &v2[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport], aBlock, 33, 0);
  sub_1000C8FEC((uint64_t)v10, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  swift_endAccess(aBlock);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files23DOCImportFileController_currentImportPicker]);
  if (Strong)
  {
    v20 = (id)Strong;
    v21 = *v60;
    v22 = static os_log_type_t.debug.getter();
    v23 = swift_allocObject(v59, 112, 7);
    *(_OWORD *)(v23 + 16) = v58;
    v24 = v61;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = v24;
    *(_QWORD *)(v23 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v23 + 40) = v57;
    v25 = *(_QWORD *)(*(_QWORD *)v18 + 16);
    *(_QWORD *)(v23 + 96) = &type metadata for Int;
    *(_QWORD *)(v23 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 72) = v25;
    os_log(_:dso:log:type:_:)("%@: updating existing import picker for %d urls", 47, 2, &_mh_execute_header, v21, v22, v23);

    swift_bridgeObjectRelease(v23);
    v26 = type metadata accessor for DOCDocumentPickerViewController();
    v27 = swift_dynamicCastClass(v20, v26);
    if (v27)
    {
      v28 = (void *)v27;
      v29 = *(_QWORD *)v18;
      v30 = v20;
      v31 = swift_bridgeObjectRetain(v29);
      v32 = sub_10028FBA8(v31);
      swift_bridgeObjectRelease(v29);
      v33 = objc_allocWithZone((Class)type metadata accessor for DOCPickerContext());
      v20 = DOCPickerContext.init(with:)((uint64_t)v32);
      objc_msgSend(v28, "setPickerContext:", v20);

    }
  }
  else
  {
    v34 = OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer;
    v35 = *(void **)&v2[OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer];
    v36 = v59;
    if (v35)
    {
      v37 = *v60;
      v38 = v35;
      v39 = v37;
      v40 = static os_log_type_t.debug.getter();
      v41 = swift_allocObject(v36, 72, 7);
      *(_OWORD *)(v41 + 16) = xmmword_1004D9670;
      v42 = v61;
      *(_QWORD *)(v41 + 56) = &type metadata for String;
      *(_QWORD *)(v41 + 64) = v42;
      v43 = v56 | 0x8000000000000000;
      *(_QWORD *)(v41 + 32) = 0xD00000000000001ALL;
      *(_QWORD *)(v41 + 40) = v43;
      os_log(_:dso:log:type:_:)("%@: existing timer found, killing it", 36, 2, &_mh_execute_header, v39, v40, v41);

      objc_msgSend(v38, "invalidate", swift_bridgeObjectRelease(v41).n128_f64[0]);
      v44 = *(void **)&v2[v34];
      *(_QWORD *)&v2[v34] = 0;

    }
    v45 = *v60;
    v46 = static os_log_type_t.debug.getter();
    v47 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v47 + 16) = xmmword_1004D9670;
    v48 = v61;
    *(_QWORD *)(v47 + 56) = &type metadata for String;
    *(_QWORD *)(v47 + 64) = v48;
    v49 = v56 | 0x8000000000000000;
    *(_QWORD *)(v47 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v47 + 40) = v49;
    os_log(_:dso:log:type:_:)("%@: starting a new timer", 24, 2, &_mh_execute_header, v45, v46, v47);

    swift_bridgeObjectRelease(v47);
    v50 = (void *)objc_opt_self(NSTimer);
    v51 = swift_allocObject(&unk_1005F0110, 24, 7);
    *(_QWORD *)(v51 + 16) = v2;
    aBlock[4] = sub_10048B01C;
    v63 = v51;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000602CC;
    aBlock[3] = &unk_1005F0128;
    v52 = _Block_copy(aBlock);
    v53 = v63;
    v54 = v2;
    swift_release(v53);
    v55 = objc_msgSend(v50, "scheduledTimerWithTimeInterval:repeats:block:", 0, v52, 0.15);
    _Block_release(v52);
    v20 = *(id *)&v2[v34];
    *(_QWORD *)&v2[v34] = v55;
  }

}

double sub_100489A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport;
  *(_QWORD *)&result = swift_beginAccess(a2 + OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport, v4, 0, 0).n128_u64[0];
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    return sub_100489C64();
  return result;
}

uint64_t sub_100489A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSArray *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v22;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String);

  if (v11[2])
  {
    v12 = v11[4];
    v13 = v11[5];
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRelease(v11);
    URL.init(fileURLWithPath:)(v12, v13);
    swift_bridgeObjectRelease(v13);
    URL.appendingPathComponent(_:)(0x786F626E49, 0xE500000000000000);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v14 = 0;
  }
  else
  {
    v15 = swift_bridgeObjectRelease(v11);
    v16 = Logger.Picker.unsafeMutableAddressor(v15);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not locate documents directory", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v14, 1, v2);
}

double sub_100489C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  uint64_t Strong;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  double result;
  _BYTE v41[24];
  char v42[24];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer), "invalidate", v4);
  v8 = *(void **)(v1 + v7);
  *(_QWORD *)(v1 + v7) = 0;

  v9 = (void *)objc_opt_self(DOCConfiguration);
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport, v42, 0, 0);
  v11 = *v10;
  v12 = swift_bridgeObjectRetain(*v10);
  v13 = sub_10028FBA8(v12);
  swift_bridgeObjectRelease(v11);
  type metadata accessor for URL(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_release(v13);
  v15 = objc_msgSend(v9, "configurationForExportingDocumentsToURLs:mode:", isa, 2);

  objc_msgSend(v15, "setForPickingDocuments:", 1);
  objc_msgSend(v15, "setInProcess:", 1);
  objc_msgSend(v15, "setIsContentManaged:", 0);
  v16 = UUID.init()(objc_msgSend(v15, "setSupportsRemovableFileProviders:", 1));
  UUID.uuidString.getter(v16);
  v18 = v17;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setSceneIdentifier:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v21 = *(id *)DOCLog.UI.unsafeMutableAddressor(v20);
  v22 = static os_log_type_t.debug.getter();
  v23 = sub_10006922C((uint64_t *)&unk_100644560);
  v24 = swift_allocObject(v23, 112, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  *(_QWORD *)(v24 + 64) = sub_10006A638();
  *(_QWORD *)(v24 + 32) = 0xD00000000000001FLL;
  *(_QWORD *)(v24 + 40) = 0x8000000100538F90;
  v25 = *(_QWORD *)(*v10 + 16);
  *(_QWORD *)(v24 + 96) = &type metadata for Int;
  *(_QWORD *)(v24 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v24 + 72) = v25;
  os_log(_:dso:log:type:_:)("%@: showing modal import picker for %d urls", 43, 2, &_mh_execute_header, v21, v22, v24);

  swift_bridgeObjectRelease(v24);
  v26 = *v10;
  v27 = v15;
  v28 = swift_bridgeObjectRetain(v26);
  v29 = sub_10028FBA8(v28);
  swift_bridgeObjectRelease(v26);
  v30 = objc_allocWithZone((Class)type metadata accessor for DOCPickerContext());
  v31 = DOCPickerContext.init(with:)((uint64_t)v29);
  v32 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentPickerViewController());
  v33 = (char *)DOCDocumentPickerViewController.init(configuration:context:)(v27, v31);
  v34 = &v33[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate];
  swift_beginAccess(&v33[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate], v41, 1, 0);
  swift_unknownObjectWeakAssign(v34, v1);
  objc_msgSend(v33, "setModalInPresentation:", 1);
  swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC5Files23DOCImportFileController_currentImportPicker, v33);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files23DOCImportFileController_delegate);
  if (Strong)
  {
    v36 = Strong;
    v37 = *(void **)(Strong + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v37)
    {
      v38 = v37;
      swift_unknownObjectRelease(v36);
      v39 = v38;
      objc_msgSend(v39, "presentViewController:animated:completion:", v33, 1, 0);

    }
    else
    {

      *(_QWORD *)&result = swift_unknownObjectRelease(v36).n128_u64[0];
    }
  }
  else
  {

  }
  return result;
}

double sub_10048A040(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  void *v27;
  Class isa;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  id v40;
  id v41;
  NSURL *v42;
  void *v43;
  void *v44;
  unsigned int v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  int v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  os_log_t v64;
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  void *v84;
  void *v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  __n128 v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t Strong;
  double result;
  void *v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  char *v106;
  uint64_t v107;
  os_log_t v108;
  _QWORD *v109;
  void *v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  char *v114;
  void (*v115)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  id v118;
  void (*v119)(char *, char *, uint64_t);
  char *v120;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  void (*v123)(char *, unint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  id v126[3];
  NSURL var18;

  v3 = v2;
  v113 = a2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v120 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v101 - v9;
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v122 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v101 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v114 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v101 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v101 - v23;
  sub_100489A68((uint64_t)v15);
  v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v121(v15, 1, v16) == 1)
  {
    sub_100157D6C((uint64_t)v15);
LABEL_21:
    v93 = v113;
    goto LABEL_22;
  }
  v112 = v6;
  v117 = v17;
  v119 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v119(v24, v15, v16);
  v118 = (id)objc_opt_self(NSFileManager);
  v25 = objc_msgSend(v118, "defaultManager");
  v106 = v24;
  URL._bridgeToObjectiveC()(&var18);
  v27 = v26;
  type metadata accessor for URLResourceKey(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v126[0] = 0;
  v29 = objc_msgSend(v25, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v27, isa, 0, v126);

  v30 = v126[0];
  if (!v29)
  {
    v123 = (void (*)(char *, unint64_t, uint64_t))v16;
    v74 = v126[0];
    v75 = _convertNSErrorToError(_:)(v30);

    v77 = swift_willThrow(v76);
    v78 = Logger.Picker.unsafeMutableAddressor(v77);
    v79 = v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v10, v78, v5);
    swift_errorRetain(v75);
    v80 = swift_errorRetain(v75);
    v81 = Logger.logObject.getter(v80);
    v82 = static os_log_type_t.error.getter(v81);
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc(12, -1);
      v122 = (char *)swift_slowAlloc(32, -1);
      v126[0] = v122;
      v107 = v5;
      *(_DWORD *)v83 = 136315138;
      v121 = (unsigned int (*)(char *, uint64_t, uint64_t))(v83 + 4);
      v84 = (void *)_convertErrorToNSError(_:)(v75);
      v103 = v3;
      v102 = a1;
      v85 = v84;
      v86 = objc_msgSend(v84, "localizedDescription");

      v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
      v89 = v88;

      v90 = v87;
      a1 = v102;
      v3 = v103;
      v124 = sub_1000544FC(v90, v89, (uint64_t *)v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, &v125);
      swift_bridgeObjectRelease(v89);
      swift_errorRelease(v75);
      swift_errorRelease(v75);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "Could not list Inbox. Error: %s", v83, 0xCu);
      v91 = v122;
      swift_arrayDestroy(v122, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v83, -1, -1);

      swift_errorRelease(v75);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v10, v107);
    }
    else
    {

      swift_errorRelease(v75);
      swift_errorRelease(v75);
      swift_errorRelease(v75);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v10, v5);
    }
    (*(void (**)(char *, void (*)(char *, unint64_t, uint64_t)))(v117 + 8))(v106, v123);
    goto LABEL_21;
  }
  v102 = a1;
  v103 = v3;
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v16);
  v32 = v30;

  v34 = *(_QWORD *)(v31 + 16);
  v35 = v112;
  v36 = v16;
  v101 = v31;
  if (v34)
  {
    v37 = v117;
    v38 = v31 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v116 = *(_QWORD *)(v117 + 72);
    v123 = *(void (**)(char *, unint64_t, uint64_t))(v117 + 16);
    *(_QWORD *)&v33 = 138412546;
    v105 = v33;
    v104 = (char *)&type metadata for Any + 8;
    v39 = v122;
    v107 = v5;
    v123(v122, v38, v36);
    while (1)
    {
      v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
      v115(v39, 0, 1, v36);
      if (v121(v39, 1, v36) == 1)
        break;
      v119(v21, v39, v36);
      v41 = objc_msgSend(v118, "defaultManager", v101);
      URL._bridgeToObjectiveC()(v42);
      v44 = v43;
      v126[0] = 0;
      v45 = objc_msgSend(v41, "removeItemAtURL:error:", v43, v126);

      v46 = v126[0];
      if (v45)
      {
        v40 = v126[0];
        (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v36);
      }
      else
      {
        v47 = v126[0];
        v48 = _convertNSErrorToError(_:)(v46);

        v50 = swift_willThrow(v49);
        v51 = Logger.Picker.unsafeMutableAddressor(v50);
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v120, v51, v5);
        v52 = v114;
        v123(v114, (unint64_t)v21, v36);
        swift_errorRetain(v48);
        v53 = swift_errorRetain(v48);
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.error.getter(v54);
        if (os_log_type_enabled(v54, (os_log_type_t)v55))
        {
          v56 = swift_slowAlloc(22, -1);
          v57 = (_QWORD *)swift_slowAlloc(8, -1);
          v109 = v57;
          v110 = (void *)swift_slowAlloc(32, -1);
          v126[0] = v110;
          *(_DWORD *)v56 = v105;
          v108 = v54;
          URL._bridgeToObjectiveC()((NSURL *)&var18._baseURL);
          *(_QWORD *)(v56 + 4) = v58;
          *v57 = v58;
          v111 = *(void (**)(char *, uint64_t))(v117 + 8);
          v111(v52, v36);
          *(_WORD *)(v56 + 12) = 2080;
          v59 = (void *)_convertErrorToNSError(_:)(v48);
          v60 = objc_msgSend(v59, "localizedDescription");

          v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
          v63 = v62;

          v35 = v112;
          *(_QWORD *)(v56 + 14) = sub_1000544FC(v61, v63, (uint64_t *)v126);
          swift_bridgeObjectRelease(v63);
          swift_errorRelease(v48);
          swift_errorRelease(v48);
          v64 = v108;
          _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v55, "Could not cleanup %@ in Inbox. Error: %s", (uint8_t *)v56, 0x16u);
          v65 = sub_10006922C(&qword_100643AB0);
          v66 = v109;
          swift_arrayDestroy(v109, 1, v65);
          swift_slowDealloc(v66, -1, -1);
          v67 = v110;
          swift_arrayDestroy(v110, 1, v104);
          swift_slowDealloc(v67, -1, -1);
          v68 = v56;
          v5 = v107;
          swift_slowDealloc(v68, -1, -1);

          v69 = v48;
          v37 = v117;
          swift_errorRelease(v69);
          (*(void (**)(char *, uint64_t))(v35 + 8))(v120, v5);
          v111(v21, v36);
        }
        else
        {

          swift_errorRelease(v48);
          swift_errorRelease(v48);
          v70 = v117;
          v71 = v52;
          v72 = *(void (**)(char *, uint64_t))(v117 + 8);
          v72(v71, v36);
          v73 = v48;
          v37 = v70;
          swift_errorRelease(v73);
          (*(void (**)(char *, uint64_t))(v35 + 8))(v120, v5);
          v72(v21, v36);
        }
      }
      v38 += v116;
      --v34;
      v39 = v122;
      if (!v34)
      {
        v115(v122, 1, 1, v36);
        break;
      }
      v123(v122, v38, v36);
    }
  }
  else
  {
    v37 = v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v122, 1, 1, v36);
  }
  v92 = swift_bridgeObjectRelease(v101);
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v106, v36, v92);
  v93 = v113;
  v3 = v103;
  a1 = v102;
LABEL_22:
  v94 = &v3[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport], v126, 1, 0);
  v95 = *(_QWORD *)v94;
  *(_QWORD *)v94 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v95);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files23DOCImportFileController_currentImportPicker]);
  if (Strong)
  {
    v98 = (void *)Strong;
    v99 = (_QWORD *)swift_allocObject(&unk_1005F00E8, 40, 7);
    v99[2] = v3;
    v99[3] = a1;
    v99[4] = v93;
    v100 = v3;
    swift_retain();
    UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, sub_10048AFA8, v99);

    *(_QWORD *)&result = swift_release(v99).n128_u64[0];
  }
  return result;
}

id sub_10048AA7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCImportFileController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCImportFileController()
{
  return objc_opt_self(_TtC5Files23DOCImportFileController);
}

double sub_10048AB24(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files23DOCImportFileController_delegate);
  if (Strong)
  {
    v5 = Strong;
    sub_10021A64C(a2);
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

double sub_10048ABD8(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files23DOCImportFileController_delegate);
  if (Strong)
  {
    v3 = Strong;
    sub_10021A64C((uint64_t)_swiftEmptyArrayStorage);
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

double sub_10048AC70(uint64_t a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double result;
  char v13[24];

  v3 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v4 = static os_log_type_t.debug.getter(v3);
  v5 = sub_10006922C((uint64_t *)&unk_100644560);
  v6 = swift_allocObject(v5, 112, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_10006A638();
  *(_QWORD *)(v6 + 32) = 0xD000000000000028;
  *(_QWORD *)(v6 + 40) = 0x8000000100538F30;
  v7 = &v1[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  *(_QWORD *)&v8 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport], v13, 0, 0).n128_u64[0];
  v9 = *(_QWORD *)(*(_QWORD *)v7 + 16);
  *(_QWORD *)(v6 + 96) = &type metadata for Int;
  *(_QWORD *)(v6 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 72) = v9;
  os_log(_:dso:log:type:_:)("%@: user imported %d files from AirDrop", 39, 2, &_mh_execute_header, v3, v4, v6, v8);

  swift_bridgeObjectRelease(v6);
  v10 = swift_allocObject(&unk_1005F00C0, 32, 7);
  *(_QWORD *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = a1;
  v11 = v1;
  swift_bridgeObjectRetain(a1);
  sub_10048A040((uint64_t)sub_10048AF74, v10);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

double sub_10048ADCC(uint64_t a1)
{
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double result;
  char v12[24];

  v2 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v3 = static os_log_type_t.debug.getter(v2);
  v4 = sub_10006922C((uint64_t *)&unk_100644560);
  v5 = swift_allocObject(v4, 112, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v5 + 56) = &type metadata for String;
  *(_QWORD *)(v5 + 64) = sub_10006A638();
  *(_QWORD *)(v5 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(v5 + 40) = 0x8000000100538EE0;
  v6 = &v1[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  *(_QWORD *)&v7 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport], v12, 0, 0).n128_u64[0];
  v8 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  *(_QWORD *)(v5 + 96) = &type metadata for Int;
  *(_QWORD *)(v5 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v5 + 72) = v8;
  os_log(_:dso:log:type:_:)("%@: user cancelled importing %d files from AirDrop", 50, 2, &_mh_execute_header, v2, v3, v5, v7);

  swift_bridgeObjectRelease(v5);
  v9 = swift_allocObject(&unk_1005F0098, 24, 7);
  *(_QWORD *)(v9 + 16) = v1;
  v10 = v1;
  sub_10048A040((uint64_t)sub_10048AF40, v9);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_10048AF1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10048AF40()
{
  uint64_t v0;

  return sub_10048ABD8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10048AF48()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10048AF74()
{
  uint64_t v0;

  return sub_10048AB24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10048AF7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10048AFA8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  v2 = swift_unknownObjectWeakAssign(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files23DOCImportFileController_currentImportPicker, 0);
  return v1(v2);
}

unint64_t sub_10048AFE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006533E0;
  if (!qword_1006533E0)
  {
    v1 = objc_opt_self(NSURL);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006533E0);
  }
  return result;
}

double sub_10048B01C(uint64_t a1)
{
  uint64_t v1;

  return sub_100489A14(a1, *(_QWORD *)(v1 + 16));
}

id sub_10048B0BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionGridCellSpringLoadedInteractionEffect();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10048B0EC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *Strong;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  NSString v13;
  id v14;
  Class isa;
  double v16;
  id v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files54DOCItemCollectionGridCellSpringLoadedInteractionEffect_targetCell, v7);
  if (Strong)
  {
    v25 = Strong;
    v10 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files54DOCItemCollectionGridCellSpringLoadedInteractionEffect_thumbnailView, v9);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = objc_msgSend(a1, "state");
      if (v12)
      {
        if (v12 == (id)1)
        {
          objc_msgSend(v25, "setHighlighted:", 1);
        }
        else if (v12 == (id)2)
        {
          v13 = String._bridgeToObjectiveC()();
          v14 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v13);

          isa = Double._bridgeToObjectiveC()().super.super.isa;
          objc_msgSend(v14, "setToValue:", isa);

          objc_msgSend(v14, "setDuration:", 0.1);
          objc_msgSend(v14, "setAutoreverses:", 1);
          LODWORD(v16) = 2.0;
          objc_msgSend(v14, "setRepeatCount:", v16);
          objc_msgSend(v14, "setRemovedOnCompletion:", 1);
          v17 = objc_msgSend(v11, "layer");
          v18 = String._bridgeToObjectiveC()();
          objc_msgSend(v17, "addAnimation:forKey:", v14, v18);

        }
      }
      else
      {
        objc_msgSend(v25, "setHighlighted:", 0);
      }

      return;
    }

  }
  v19 = Logger.UI.unsafeMutableAddressor(Strong);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v19, v3);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Missing targetCell or thumbnailView in DOCItemCollectionGridCellSpringLoadedInteractionEffect, ignoring", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10048B3B4()
{
  unint64_t result;

  result = qword_1006576B0;
  if (!qword_1006576B0)
  {
    result = swift_getWitnessTable(&unk_1004EA3E0, &type metadata for SearchFileShortcutsIntent);
    atomic_store(result, (unint64_t *)&qword_1006576B0);
  }
  return result;
}

uint64_t sub_10048B3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v3[11] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v3[12] = v6;
  v3[13] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v3[14] = v7;
  v3[15] = v8;
  return swift_task_switch(sub_10048B494, v7, v8);
}

uint64_t sub_10048B494()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  __n128 v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = IntentParameter.wrappedValue.getter(v0 + 2);
  v6 = v0[2];
  v5 = v0[3];
  v0[16] = v5;
  v7 = Logger.AppIntents.unsafeMutableAddressor(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  v8 = swift_bridgeObjectRetain_n(v5, 2);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.info.getter(v10);
  if (os_log_type_enabled(v9, v11))
  {
    v24 = v0[10];
    v25 = v0[9];
    v26 = v0[11];
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v27 = v13;
    *(_DWORD *)v12 = 136315394;
    v0[4] = sub_1000544FC(0xD00000000000002DLL, 0x80000001005390F0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5);
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain(v5);
    v0[5] = sub_1000544FC(v6, v5, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "%s Search action initiated from Link with search phrase %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    v16 = v0[10];
    v15 = v0[11];
    v17 = v0[9];
    swift_bridgeObjectRelease_n(v5, 2);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v18 = v0[7];
  v19 = static MainActor.shared.getter(v14);
  v0[17] = v19;
  v20 = (_QWORD *)swift_task_alloc(48);
  v0[18] = v20;
  v20[2] = v18;
  v20[3] = v6;
  v20[4] = v5;
  v21 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[19] = v21;
  v22 = sub_10006922C((uint64_t *)&unk_10064EBC0);
  *v21 = v0;
  v21[1] = sub_10048B734;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0[6], v19, &protocol witness table for MainActor, 0xD00000000000002DLL, 0x80000001005390F0, sub_10048CDA4, v20, v22);
}

uint64_t sub_10048B734()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[14];
    v5 = v2[15];
    v6 = sub_10048B7FC;
  }
  else
  {
    v7 = v2[17];
    v8 = v2[18];
    swift_bridgeObjectRelease(v2[16]);
    swift_release(v7);
    swift_task_dealloc(v8);
    v4 = v2[14];
    v5 = v2[15];
    v6 = sub_10048B7BC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10048B7BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10048B7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease(v2);
  swift_release(v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10048B864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StringSearchCriteria(0);
  v3[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[11] = v7;
  v3[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v3[13] = v8;
  v3[14] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v3[15] = v9;
  v3[16] = v10;
  return swift_task_switch(sub_10048B928, v9, v10);
}

uint64_t sub_10048B928()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  __n128 v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v0[11];
  v1 = (_QWORD *)v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[7];
  v6 = v0[8];
  v7 = IntentParameter.wrappedValue.getter(v1);
  v8 = StringSearchCriteria.term.getter(v7);
  v10 = v9;
  v0[17] = v9;
  v11 = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v1, v3);
  v12 = Logger.AppIntents.unsafeMutableAddressor(v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v12, v5);
  v13 = swift_bridgeObjectRetain_n(v10, 2);
  v14 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.info.getter(v15);
  if (os_log_type_enabled(v14, v16))
  {
    v29 = v0[8];
    v30 = v0[7];
    v31 = v0[9];
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v32 = v18;
    *(_DWORD *)v17 = 136315394;
    v0[2] = sub_1000544FC(0xD00000000000002DLL, 0x80000001005390F0, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3);
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain(v10);
    v0[3] = sub_1000544FC(v8, v10, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v16, "%s Search action initiated from Link with search phrase %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v21 = v0[8];
    v20 = v0[9];
    v22 = v0[7];
    swift_bridgeObjectRelease_n(v10, 2);

    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  v23 = v0[5];
  v24 = static MainActor.shared.getter(v19);
  v0[18] = v24;
  v25 = (_QWORD *)swift_task_alloc(48);
  v0[19] = v25;
  v25[2] = v23;
  v25[3] = v8;
  v25[4] = v10;
  v26 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[20] = v26;
  v27 = sub_10006922C((uint64_t *)&unk_10064EBC0);
  *v26 = v0;
  v26[1] = sub_10048BBEC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0[4], v24, &protocol witness table for MainActor, 0xD00000000000002DLL, 0x80000001005390F0, sub_10048CD68, v25, v27);
}

uint64_t sub_10048BBEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[15];
    v5 = v2[16];
    v6 = sub_10048BCC0;
  }
  else
  {
    v7 = v2[18];
    v8 = v2[19];
    swift_bridgeObjectRelease(v2[17]);
    swift_release(v7);
    swift_task_dealloc(v8);
    v4 = v2[15];
    v5 = v2[16];
    v6 = sub_10048BC74;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10048BC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10048BCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 144));
  swift_bridgeObjectRelease(v2);
  swift_release(v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10048BD3C(uint64_t a1)
{
  return sub_10048C420(a1, qword_100672E78, (uint64_t)"SEARCH_FILE_INTENT_TITLE", 24);
}

uint64_t sub_10048BD54()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_100657758);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100657760);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100322128();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for SearchFileShortcutsIntent, v6);
  v7._object = (void *)0x8000000100539240;
  v7._countAndFlagsBits = 0xD000000000000021;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004EA698);
  v9 = sub_10006922C(&qword_100657768);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for SearchFileShortcutsIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for SearchFileShortcutsIntent, v6);
}

uint64_t sub_10048BECC(uint64_t a1)
{
  return sub_10048C758(a1, qword_100672E90);
}

void sub_10048BED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  _QWORD *v21;

  v7 = sub_10006922C(&qword_100657720);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v10);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_1005F0250, v13 + v9, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, v11, v7);
  v15 = sub_100083AE8();
  v16 = swift_allocObject(&unk_1005F01D8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = (_QWORD *)swift_allocObject(&unk_1005F0278, 56, 7);
  v17[2] = v16;
  v17[3] = sub_10048CD78;
  v17[4] = v14;
  v17[5] = a3;
  v17[6] = a4;
  aBlock[4] = sub_10021C58C;
  v21 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005F0290;
  v18 = _Block_copy(aBlock);
  v19 = v21;
  swift_retain();
  swift_bridgeObjectRetain(a4);
  objc_msgSend(v15, "performAfterSearchInitialization:", v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);
  swift_release(v14);

}

uint64_t sub_10048C088()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10048C0B8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return IntentParameter.wrappedValue.setter(v3);
}

void (*sub_10048C0E8(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10048C130;
}

unint64_t sub_10048C13C()
{
  unint64_t result;

  result = qword_1006576B8;
  if (!qword_1006576B8)
  {
    result = swift_getWitnessTable(&unk_1004EA498, &type metadata for SearchFileShortcutsIntent);
    atomic_store(result, (unint64_t *)&qword_1006576B8);
  }
  return result;
}

unint64_t sub_10048C184()
{
  unint64_t result;

  result = qword_1006576C0;
  if (!qword_1006576C0)
  {
    result = swift_getWitnessTable(&unk_1004EA4C0, &type metadata for SearchFileShortcutsIntent);
    atomic_store(result, (unint64_t *)&qword_1006576C0);
  }
  return result;
}

uint64_t sub_10048C1C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10057588C, 1);
}

uint64_t sub_10048C1D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100575864, 1);
}

uint64_t sub_10048C1E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_1006411B8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100672E78, (uint64_t)sub_10048BD3C, a1);
}

uint64_t sub_10048C20C@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_1006411C0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100672E90, (uint64_t)sub_10048BECC, a1);
}

uint64_t sub_10048C234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter();
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10048D684, v3, v4);
}

uint64_t sub_10048C2A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10048D1B0();
  *a1 = result;
  return result;
}

uint64_t sub_10048C2C4()
{
  return 0x6946686372616553;
}

unint64_t sub_10048C2E4()
{
  unint64_t result;

  result = qword_1006576D0;
  if (!qword_1006576D0)
  {
    result = swift_getWitnessTable(&unk_1004EA534, &type metadata for SearchFileAssistantIntent);
    atomic_store(result, (unint64_t *)&qword_1006576D0);
  }
  return result;
}

unint64_t sub_10048C32C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006576D8;
  if (!qword_1006576D8)
  {
    v1 = type metadata accessor for StringSearchCriteria(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for StringSearchCriteria, v1);
    atomic_store(result, (unint64_t *)&qword_1006576D8);
  }
  return result;
}

uint64_t sub_10048C374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = sub_10006922C(&qword_100657750);
  v1 = type metadata accessor for StringSearchScope(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject(v0, v4 + *(_QWORD *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D9670;
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5 + v4, enum case for StringSearchScope.general(_:), v1);
  qword_100672EA8 = v5;
  return result;
}

uint64_t sub_10048C408(uint64_t a1)
{
  return sub_10048C420(a1, qword_100672EB0, (uint64_t)"SEARCH_FILE_ASSISTANT_INTENT_TITLE", 34);
}

uint64_t sub_10048C420(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v20;
  _BYTE v21[16];

  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v17, a2);
  sub_10007E788(v17, (uint64_t)a2);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x6920686372616553, 0xEF73656C6946206ELL);
  static Locale.current.getter(v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  v20 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)(a3, a4, 2, v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, "Title for the Search in Files AppIntent", 39, v20);
}

uint64_t sub_10048C5D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_100657738);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100657740);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1003221D0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for SearchFileAssistantIntent, v6);
  v7._object = (void *)0x8000000100539240;
  v7._countAndFlagsBits = 0xD000000000000021;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004EA670);
  v9 = sub_10006922C(&qword_100657748);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for SearchFileAssistantIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for SearchFileAssistantIntent, v6);
}

uint64_t sub_10048C74C(uint64_t a1)
{
  return sub_10048C758(a1, qword_100672EC8);
}

uint64_t sub_10048C758(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v3, a2);
  v4 = sub_10007E788(v3, (uint64_t)a2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v4, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v3);
}

void sub_10048C7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  _QWORD *v21;

  v7 = sub_10006922C(&qword_100657720);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v10);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_1005F01B0, v13 + v9, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, v11, v7);
  v15 = sub_100083AE8();
  v16 = swift_allocObject(&unk_1005F01D8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = (_QWORD *)swift_allocObject(&unk_1005F0200, 56, 7);
  v17[2] = v16;
  v17[3] = sub_10048CD78;
  v17[4] = v14;
  v17[5] = a3;
  v17[6] = a4;
  aBlock[4] = sub_10021C58C;
  v21 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005F0218;
  v18 = _Block_copy(aBlock);
  v19 = v21;
  swift_retain();
  swift_bridgeObjectRetain(a4);
  objc_msgSend(v15, "performAfterSearchInitialization:", v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);
  swift_release(v14);

}

uint64_t sub_10048C95C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_10006922C((uint64_t *)&unk_10064EBC0);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v12 = a1;
    swift_errorRetain(a1);
    v10 = sub_10006922C(&qword_100657720);
    return CheckedContinuation.resume(throwing:)(&v12, v10);
  }
  else
  {
    static IntentResult.result<>()(v5);
    v8 = sub_10006922C(&qword_100657720);
    return CheckedContinuation.resume(returning:)(v7, v8);
  }
}

double sub_10048CA14@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1006411C8 != -1)
    swift_once(&qword_1006411C8, sub_10048C374);
  v2 = qword_100672EA8;
  *a1 = qword_100672EA8;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10048CA64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for StringSearchCriteria(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

unint64_t sub_10048CB04()
{
  unint64_t result;

  result = qword_1006576E0;
  if (!qword_1006576E0)
  {
    result = swift_getWitnessTable(&unk_1004EA5EC, &type metadata for SearchFileAssistantIntent);
    atomic_store(result, (unint64_t *)&qword_1006576E0);
  }
  return result;
}

unint64_t sub_10048CB4C()
{
  unint64_t result;

  result = qword_1006576E8;
  if (!qword_1006576E8)
  {
    result = swift_getWitnessTable(&unk_1004EA614, &type metadata for SearchFileAssistantIntent);
    atomic_store(result, (unint64_t *)&qword_1006576E8);
  }
  return result;
}

uint64_t sub_10048CB90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10057583C, 1);
}

uint64_t sub_10048CBA0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100575814, 1);
}

uint64_t sub_10048CBB0@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_1006411D0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100672EB0, (uint64_t)sub_10048C408, a1);
}

uint64_t sub_10048CBD4@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_1006411D8, (uint64_t (*)(_QWORD))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100672EC8, (uint64_t)sub_10048C74C, a1);
}

uint64_t sub_10048CBFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10048CC68, v3, v4);
}

uint64_t sub_10048CC68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  static IntentResult.result<>()(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10048CCA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10048CE0C();
  *a1 = result;
  return result;
}

uint64_t sub_10048CCC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003221D0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SearchFileAssistantIntent()
{
  return &type metadata for SearchFileAssistantIntent;
}

ValueMetadata *type metadata accessor for SearchFileShortcutsIntent()
{
  return &type metadata for SearchFileShortcutsIntent;
}

uint64_t sub_10048CD10()
{
  return sub_100062698(&qword_1006576F8, &qword_100657700, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10048CD3C()
{
  return sub_100062698(&qword_100657708, &qword_100657710, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

void sub_10048CD68(uint64_t a1)
{
  uint64_t *v1;

  sub_10048C7AC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10048CD7C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10048CDA4(uint64_t a1)
{
  uint64_t *v1;

  sub_10048BED8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10048CDB4(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_10006922C(&qword_100657720);
  return sub_10048C95C(a1, v3);
}

uint64_t sub_10048CE0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int16 v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LocalizedStringResource(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10006922C(&qword_100657730);
  v21 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v21);
  v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v23(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  v29 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SEARCH_FILE_INTENT_FILE_PARAMETER_TITLE", 39, 2, v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, "Title for the Search phrases parameter of the Search in Files AppIntent", 71, v29);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x80000001005391D0);
  static Locale.current.getter(v24);
  v23(v10, v22, v7);
  LOWORD(v30) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SEARCH_FILE_INTENT_FILE_PARAMETER_DESCRIPTION", 45, 2, v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, "Description for the Search phrases parameter of the Search in Files AppIntent", 77, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v17);
  v25 = type metadata accessor for IntentDialog(0);
  v26 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v32, 1, 1, v25);
  v27 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  return IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)(v20, v6, v26, v27);
}

uint64_t sub_10048D188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10048D1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int16 v42;
  int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v56 = *(_QWORD *)(v0 - 8);
  v57 = v0;
  __chkstk_darwin(v0);
  v55 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  v3 = __chkstk_darwin(v2);
  v54 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.IntentInputOptions.CapitalizationType(0, v3);
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  v6 = __chkstk_darwin(v5);
  v51 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.IntentInputOptions.KeyboardType(0, v6);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v48 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_10064C738);
  __chkstk_darwin(v10);
  v47 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v12);
  v45 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Locale(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for LocalizedStringResource(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_10006922C(&qword_1006528F0);
  v28 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v28);
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v30(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  v42 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SEARCH_FILE_INTENT_FILE_PARAMETER_TITLE", 39, 2, v23, 0x6E65746E49707041, 0xEA00000000007374, v20, v17, "Title for the Search phrases parameter of the Search in Files AppIntent", 71, v42);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x80000001005391D0);
  static Locale.current.getter(v31);
  v30(v17, v29, v14);
  LOWORD(v43) = 2;
  v32 = v45;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SEARCH_FILE_INTENT_FILE_PARAMETER_DESCRIPTION", 45, 2, v23, 0x6E65746E49707041, 0xEA00000000007374, v20, v17, "Description for the Search phrases parameter of the Search in Files AppIntent", 77, v43);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
  v58 = xmmword_1004EA390;
  v33 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, enum case for String.IntentInputOptions.KeyboardType.default(_:), v50);
  v34 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, enum case for String.IntentInputOptions.CapitalizationType.sentences(_:), v53);
  v35 = v47;
  String.IntentInputOptions.init(keyboardType:capitalizationType:multiline:autocorrect:smartQuotes:smartDashes:)(v33, v34, 0, 1, 1, 1);
  v36 = type metadata accessor for String.IntentInputOptions(0);
  v37 = v35;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
  v38 = type metadata accessor for IntentDialog(0);
  v39 = v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v54, 1, 1, v38);
  v40 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, enum case for InputConnectionBehavior.default(_:), v57);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v27, v32, &v58, v37, v39, v40);
}

_QWORD *sub_10048D698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  __n128 v14;
  void *v16;
  _BYTE v17[24];
  _QWORD v18[4];

  v1 = sub_10006922C(&qword_100657830);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v7 = v6;
  v9 = v8;
  swift_release(v5);
  v10 = v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v10, v17, 0, 0);
  sub_1000271D4(v10, (uint64_t)v18, &qword_100642730);
  if (v18[3])
  {
    v11 = sub_10006922C((uint64_t *)&unk_1006455F0);
    if ((swift_dynamicCast(&v16, v18, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
    {
      v12 = v16;
      goto LABEL_8;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v18, &qword_100642730);
  }
  if (qword_1006411E8 != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v12 = (id)qword_100657778;
LABEL_8:
  v18[0] = v7;
  v18[1] = v9;
  UICollectionViewDiffableDataSource.snapshot(for:)(v18);

  v13 = sub_10048F488();
  v14 = swift_unknownObjectRelease(v7);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v14);
  return v13;
}

void sub_10048D840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[11];
  uint64_t v9;
  __int128 v10;

  v9 = sub_10006922C(&qword_100657830);
  __chkstk_darwin(v9);
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData) + 24);
  if (*(_QWORD *)(v7 + 16))
  {
    v8[8] = a1;
    v8[9] = a2;
    v8[10] = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    v8[7] = v6;
    swift_bridgeObjectRetain_n(v7, 2);
    swift_retain();
    v10 = *(_OWORD *)(v7 + 32);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x10048DF44);
}

id sub_10048E014@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isEjectable");
  *a2 = (_BYTE)result;
  return result;
}

id sub_10048E044(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setIsEjectable:", *a1);
}

uint64_t sub_10048E058@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  int *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  void *v36;
  uint64_t v37;
  uint64_t (*v38)(_BYTE *, uint64_t);
  id v39;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  objc_super v56;
  _QWORD v57[6];

  v55 = a1;
  v2 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v2);
  v4 = &v41[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for UIBackgroundConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for UIListContentConfiguration(0);
  v52 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for UICellConfigurationState(0);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  __chkstk_darwin(v12);
  v14 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10048EF00();
  v15 = objc_msgSend(v1, "_bridgedConfigurationState");
  v49 = v14;
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  UICollectionViewCell.contentConfiguration.getter(v57, v16);
  v17 = sub_10006922C(&qword_100651B70);
  v18 = v11;
  v54 = v9;
  swift_dynamicCast(v11, v57, v17, v9, 7);
  v19 = (objc_class *)sub_10006922C(&qword_100657820);
  v56.receiver = v1;
  v56.super_class = v19;
  v20 = objc_msgSendSuper2(&v56, "contentView");
  v21 = objc_opt_self(UIListContentView);
  v48 = swift_dynamicCastObjCClassUnconditional(v20, v21, 0, 0, 0);
  UICollectionViewCell.backgroundConfiguration.getter();
  v22 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v53 = v8;
  v46 = v6;
  v47 = v5;
  if (v22 == 1)
  {
    static UIBackgroundConfiguration.clear()();
    sub_10000CB4C((uint64_t)v4, &qword_100651B30);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  v23 = *(_QWORD *)((swift_isaMask & *v1) + 0x68);
  v45 = *((unsigned __int8 *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60));
  v24 = (char *)v1 + v23;
  swift_beginAccess(v24, v57, 0, 0);
  v25 = *(_QWORD *)v24;
  v26 = *((_QWORD *)v24 + 1);
  v27 = *((_QWORD *)v24 + 2);
  v28 = v24[24];
  v29 = *((_QWORD *)v24 + 5);
  v43 = *((_QWORD *)v24 + 4);
  v44 = v25;
  v42 = v24[48];
  v30 = (void *)*((_QWORD *)v24 + 7);
  v31 = (int *)sub_10006922C((uint64_t *)&unk_100651B48);
  v33 = v54;
  v32 = v55;
  v34 = v52;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v52 + 16))(&v55[v31[12]], v18, v54);
  v35 = &v32[v31[10]];
  *(_QWORD *)v35 = v44;
  *((_QWORD *)v35 + 1) = v26;
  *((_QWORD *)v35 + 2) = v27;
  v35[24] = v28;
  *((_QWORD *)v35 + 4) = v43;
  *((_QWORD *)v35 + 5) = v29;
  v35[48] = v42;
  *((_QWORD *)v35 + 7) = v30;
  v36 = v30;
  *v32 = v45;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 32))(&v32[v31[9]], v49, v51);
  v37 = v47;
  *(_QWORD *)&v32[v31[11]] = v48;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v46 + 32))(&v32[v31[13]], v53, v37);
  v38 = *(uint64_t (**)(_BYTE *, uint64_t))(v34 + 8);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v29);
  v39 = v36;
  return v38(v18, v33);
}

uint64_t sub_10048E3B4@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  objc_super v42;
  _QWORD v43[5];

  v3 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIBackgroundConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIListContentConfiguration(0);
  v41 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellConfigurationState(0);
  v38 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10048F0B4();
  v16 = objc_msgSend(v1, "_bridgedConfigurationState");
  v37 = v15;
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v16);

  UICollectionViewCell.contentConfiguration.getter(v43, v17);
  v18 = sub_10006922C(&qword_100651B70);
  v19 = v10;
  swift_dynamicCast(v12, v43, v18, v10, 7);
  v20 = (objc_class *)sub_10006922C(&qword_100657828);
  v42.receiver = v1;
  v42.super_class = v20;
  v21 = objc_msgSendSuper2(&v42, "contentView");
  v22 = objc_opt_self(UIListContentView);
  v36 = swift_dynamicCastObjCClassUnconditional(v21, v22, 0, 0, 0);
  UICollectionViewCell.backgroundConfiguration.getter();
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v40 = v9;
  if (v23 == 1)
  {
    static UIBackgroundConfiguration.clear()();
    sub_10000CB4C((uint64_t)v5, &qword_100651B30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  v24 = v6;
  v25 = v7;
  v26 = *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60));
  v27 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x68));
  swift_beginAccess(v27, v43, 0, 0);
  v29 = *v27;
  v28 = v27[1];
  v30 = (int *)sub_10006922C(&qword_10064C6E0);
  v31 = v41;
  (*(void (**)(_BYTE *, char *, uint64_t))(v41 + 16))(&a1[v30[12]], v12, v19);
  v32 = &a1[v30[10]];
  *v32 = v29;
  v32[1] = v28;
  *a1 = v26;
  (*(void (**)(_BYTE *, char *, uint64_t))(v38 + 32))(&a1[v30[9]], v37, v39);
  *(_QWORD *)&a1[v30[11]] = v36;
  (*(void (**)(_BYTE *, char *, uint64_t))(v25 + 32))(&a1[v30[13]], v40, v24);
  v33 = *(uint64_t (**)(char *, uint64_t))(v31 + 8);
  swift_bridgeObjectRetain(v28);
  return v33(v12, v19);
}

uint64_t sub_10048E6B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (**v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;
  char *v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  void (**v59)(char *, char *, uint64_t);
  _QWORD v60[5];
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;

  v3 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v3);
  v58 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIBackgroundConfiguration(0);
  v57 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v54 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v53 - v8;
  v56 = type metadata accessor for UIListContentConfiguration(0);
  v59 = *(void (***)(char *, char *, uint64_t))(v56 - 8);
  __chkstk_darwin(v56);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)sub_10006922C((uint64_t *)&unk_100651B48);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v53 - v17;
  __chkstk_darwin(v16);
  v20 = (void (**)(char *, char *, uint64_t))((char *)&v53 - v19);
  v55 = v1;
  sub_10048E058((_BYTE *)&v53 - v19);
  v21 = (char *)v20 + v12[9];
  v22 = type metadata accessor for UICellConfigurationState(0);
  v23 = sub_10005A360(qword_10064F108, (uint64_t (*)(uint64_t))&type metadata accessor for UICellConfigurationState, (uint64_t)&protocol conformance descriptor for UICellConfigurationState);
  LOBYTE(v22) = dispatch thunk of static Equatable.== infix(_:_:)(v21, a1, v22, v23);
  sub_1000271D4((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_100651B48);
  if ((v22 & 1) != 0)
  {
    v24 = *v18;
    v25 = sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100651B48);
    v27 = v56;
    v26 = v57;
    if ((v24 & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    v25 = sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100651B48);
    v27 = v56;
    v26 = v57;
  }
  v28 = v11;
  v29 = static UIListContentConfiguration.subtitleCell()(v25);
  static UIBackgroundConfiguration.listCell()(v29);
  v30 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v31 = v54;
  v30(v54, v9, v5);
  v30(v9, v31, v5);
  v59[5]((char *)v20 + v12[12], v28, v27);
  (*(void (**)(char *, char *, uint64_t))(v26 + 40))((char *)v20 + v12[13], v9, v5);
LABEL_6:
  v32 = (char *)v20 + v12[10];
  v33 = *((_OWORD *)v32 + 1);
  v61 = *(_OWORD *)v32;
  v62 = v33;
  v34 = *((_OWORD *)v32 + 3);
  v63 = *((_OWORD *)v32 + 2);
  v64 = v34;
  sub_100393994();
  sub_1000271D4((uint64_t)v20, (uint64_t)v15, (uint64_t *)&unk_100651B48);
  v35 = &v15[v12[12]];
  v60[3] = v27;
  v60[4] = &protocol witness table for UIListContentConfiguration;
  v36 = (char *)sub_10006CBAC(v60);
  v59[2](v36, v35, v27);
  v37 = v55;
  UICollectionViewCell.contentConfiguration.setter(v60);
  v38 = (uint64_t)v58;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 16))(v58, &v15[v12[13]], v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v5);
  UICollectionViewCell.backgroundConfiguration.setter(v38);
  *((_BYTE *)v37 + *(_QWORD *)((swift_isaMask & *v37) + 0x60)) = *v15;
  v39 = &v15[v12[10]];
  v58 = v15;
  v59 = v20;
  v41 = *(_QWORD *)v39;
  v40 = *((_QWORD *)v39 + 1);
  v42 = *((_QWORD *)v39 + 2);
  v43 = v39[24];
  v44 = *((_QWORD *)v39 + 4);
  v45 = *((_QWORD *)v39 + 5);
  v46 = v39[48];
  v47 = (void *)*((_QWORD *)v39 + 7);
  v48 = (char *)v37 + *(_QWORD *)((swift_isaMask & *v37) + 0x68);
  swift_beginAccess(v48, v60, 1, 0);
  v49 = *((_QWORD *)v48 + 5);
  v56 = *((_QWORD *)v48 + 1);
  v57 = v49;
  v50 = (void *)*((_QWORD *)v48 + 7);
  *(_QWORD *)v48 = v41;
  *((_QWORD *)v48 + 1) = v40;
  *((_QWORD *)v48 + 2) = v42;
  v48[24] = v43;
  *((_QWORD *)v48 + 4) = v44;
  *((_QWORD *)v48 + 5) = v45;
  v48[48] = v46;
  *((_QWORD *)v48 + 7) = v47;
  swift_bridgeObjectRetain(v45);
  v51 = v47;
  swift_bridgeObjectRetain(v40);

  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v57);
  sub_10000CB4C((uint64_t)v58, (uint64_t *)&unk_100651B48);
  return sub_10000CB4C((uint64_t)v59, (uint64_t *)&unk_100651B48);
}

uint64_t sub_10048EAF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[5];

  v3 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v3);
  v50 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for UIBackgroundConfiguration(0);
  v55 = *(_QWORD *)(v52 - 8);
  v5 = __chkstk_darwin(v52);
  v49 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v49 - v7;
  v9 = type metadata accessor for UIListContentConfiguration(0);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)sub_10006922C(&qword_10064C6E0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v49 - v19;
  v51 = v1;
  sub_10048E3B4((_BYTE *)&v49 - v19);
  v21 = &v20[v12[9]];
  v22 = type metadata accessor for UICellConfigurationState(0);
  v23 = sub_10005A360(qword_10064F108, (uint64_t (*)(uint64_t))&type metadata accessor for UICellConfigurationState, (uint64_t)&protocol conformance descriptor for UICellConfigurationState);
  LOBYTE(v22) = dispatch thunk of static Equatable.== infix(_:_:)(v21, a1, v22, v23);
  sub_1000271D4((uint64_t)v20, (uint64_t)v18, &qword_10064C6E0);
  if ((v22 & 1) != 0)
  {
    v24 = *v18;
    v25 = sub_10000CB4C((uint64_t)v18, &qword_10064C6E0);
    v26 = v50;
    if ((v24 & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    v25 = sub_10000CB4C((uint64_t)v18, &qword_10064C6E0);
    v26 = v50;
  }
  v27 = (void *)UICellConfigurationState.traitCollection.getter(v25);
  v28 = objc_msgSend(v27, "sourceOutlineStyle");

  if (v28 == (id)1)
    v29 = static UIListContentConfiguration.prominentInsetGroupedHeader()();
  else
    v29 = static UIListContentConfiguration.header()();
  static UIBackgroundConfiguration.listHeader()(v29);
  v30 = v55;
  v31 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v32 = v49;
  v33 = v52;
  v31(v49, v8, v52);
  v31(v8, v32, v33);
  (*(void (**)(char *, char *, uint64_t))(v53 + 40))(&v20[v12[12]], v11, v54);
  (*(void (**)(char *, char *, uint64_t))(v30 + 40))(&v20[v12[13]], v8, v33);
LABEL_9:
  v34 = &v20[v12[10]];
  v35 = *(_QWORD *)v34;
  v36 = *((_QWORD *)v34 + 1);
  swift_bridgeObjectRetain(v36);
  UIListContentConfiguration.text.setter(v35, v36);
  sub_1000271D4((uint64_t)v20, (uint64_t)v15, &qword_10064C6E0);
  v37 = &v15[v12[12]];
  v38 = v54;
  v56[3] = v54;
  v56[4] = &protocol witness table for UIListContentConfiguration;
  v39 = sub_10006CBAC(v56);
  (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v53 + 16))(v39, v37, v38);
  v40 = v51;
  UICollectionViewCell.contentConfiguration.setter(v56);
  v41 = v55;
  v42 = v52;
  (*(void (**)(char *, _BYTE *, uint64_t))(v55 + 16))(v26, &v15[v12[13]], v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v26, 0, 1, v42);
  UICollectionViewCell.backgroundConfiguration.setter(v26);
  *((_BYTE *)v40 + *(_QWORD *)((swift_isaMask & *v40) + 0x60)) = *v15;
  v43 = (uint64_t *)&v15[v12[10]];
  v44 = *v43;
  v45 = v43[1];
  v46 = (_QWORD *)((char *)v40 + *(_QWORD *)((swift_isaMask & *v40) + 0x68));
  swift_beginAccess(v46, v56, 1, 0);
  v47 = v46[1];
  *v46 = v44;
  v46[1] = v45;
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRelease(v47);
  sub_10000CB4C((uint64_t)v15, &qword_10064C6E0);
  return sub_10000CB4C((uint64_t)v20, &qword_10064C6E0);
}

uint64_t sub_10048EF00()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  id v15;
  _QWORD v17[5];

  v1 = type metadata accessor for UICellConfigurationState(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C((uint64_t *)&unk_100651B60);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.contentConfiguration.getter(v17, v6);
  v9 = sub_10006922C(&qword_100651B70);
  v10 = type metadata accessor for UIListContentConfiguration(0);
  v11 = swift_dynamicCast(v8, v17, v9, v10, 6);
  v12 = *(_QWORD *)(v10 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v11)
  {
    v13(v8, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v10) != 1)
      return sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100651B60);
  }
  else
  {
    v13(v8, 1, 1, v10);
  }
  sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100651B60);
  v15 = objc_msgSend(v0, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  v17[3] = v10;
  v17[4] = &protocol witness table for UIListContentConfiguration;
  sub_10006CBAC(v17);
  static UIListContentConfiguration.subtitleCell()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return UICollectionViewCell.contentConfiguration.setter(v17);
}

uint64_t sub_10048F0B4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  id v15;
  void *v16;
  id v17;
  _QWORD v19[5];

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_100651B60);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.contentConfiguration.getter(v19, v7);
  v10 = sub_10006922C(&qword_100651B70);
  v11 = type metadata accessor for UIListContentConfiguration(0);
  v12 = swift_dynamicCast(v9, v19, v10, v11, 6);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  if (v12)
  {
    v13(v9, 0, 1, v11);
    return sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_100651B60);
  }
  else
  {
    v13(v9, 1, 1, v11);
    sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_100651B60);
    v15 = objc_msgSend(v1, "_bridgedConfigurationState");
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v15);

    v19[3] = v11;
    v19[4] = &protocol witness table for UIListContentConfiguration;
    sub_10006CBAC(v19);
    v16 = (void *)UICellConfigurationState.traitCollection.getter();
    v17 = objc_msgSend(v16, "sourceOutlineStyle");

    if (v17 == (id)1)
      static UIListContentConfiguration.prominentInsetGroupedHeader()();
    else
      static UIListContentConfiguration.header()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return UICollectionViewCell.contentConfiguration.setter(v19);
  }
}

uint64_t sub_10048F288(void (*a1)(char *, __n128), uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  __n128 v10;
  id v11;
  _BYTE v14[24];

  v5 = type metadata accessor for UICellConfigurationState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (char *)a3 + *(_QWORD *)((swift_isaMask & *a3) + 0x68);
  v10 = swift_beginAccess(v9, v14, 33, 0);
  a1(v9, v10);
  swift_endAccess(v14);
  v11 = objc_msgSend(a3, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10048E6B8((uint64_t)v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10048F388(void (*a1)(char *, __n128), uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  __n128 v10;
  id v11;
  _BYTE v14[24];

  v5 = type metadata accessor for UICellConfigurationState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (char *)a3 + *(_QWORD *)((swift_isaMask & *a3) + 0x68);
  v10 = swift_beginAccess(v9, v14, 33, 0);
  a1(v9, v10);
  swift_endAccess(v14);
  v11 = objc_msgSend(a3, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v11);

  sub_10048EAF0((uint64_t)v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *sub_10048F488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;

  v0 = sub_10006922C(&qword_100657830);
  v1 = NSDiffableDataSourceSectionSnapshot.items.getter(v0);
  v2 = *(_QWORD *)(v1 + 16);
  v12 = v1;
  if (v2)
  {
    v3 = (unsigned __int8 *)(v1 + 72);
    do
    {
      v7 = *v3;
      if (v7 != 255)
      {
        v8 = (void *)*((_QWORD *)v3 - 3);
        v9 = *((_QWORD *)v3 - 2);
        v10 = *((_QWORD *)v3 - 1);
        v13 = *(_OWORD *)(v3 - 40);
        swift_unknownObjectRetain(*((_QWORD *)v3 - 5));
        sub_1000B1650(v8, v9, v10, v7);
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_1001551A4(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v5 = _swiftEmptyArrayStorage[2];
        v4 = _swiftEmptyArrayStorage[3];
        if (v5 >= v4 >> 1)
          sub_1001551A4(v4 > 1, v5 + 1, 1);
        _swiftEmptyArrayStorage[2] = v5 + 1;
        v6 = &_swiftEmptyArrayStorage[6 * v5];
        *((_OWORD *)v6 + 2) = v13;
        v6[6] = v8;
        v6[7] = v9;
        v6[8] = v10;
        *((_BYTE *)v6 + 72) = v7;
      }
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease(v12);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10048F5CC(uint64_t a1)
{
  _BYTE v3[40];

  type metadata accessor for DOCMutableSidebarSection();
  sub_1000E3DE0();
  AnyHashable.hash(into:)(a1);
  return sub_100067748((uint64_t)v3);
}

Swift::Int sub_10048F630(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  id v7;
  _BYTE v8[40];
  _QWORD v9[9];

  v2 = *v1;
  Hasher.init(_seed:)(v9, a1);
  v7 = *(id *)(v2 + 24);
  v3 = sub_10004F2F0(0, &qword_100642B88, NSUUID_ptr);
  v4 = sub_100066A10();
  v5 = v7;
  AnyHashable.init<A>(_:)(&v7, v3, v4);
  AnyHashable.hash(into:)(v9);
  sub_100067748((uint64_t)v8);
  return Hasher._finalize()();
}

uint64_t sub_10048F6C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v2 = *(void **)(*(_QWORD *)v0 + 40);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  return 0x6E6F6974636573;
}

uint64_t sub_10048F730()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  uint64_t v11;
  _BYTE v12[32];
  _QWORD v13[3];
  unsigned __int8 v14;

  sub_100070EDC(v0 + 16, (uint64_t)v12, &qword_10064C778);
  sub_100070EDC((uint64_t)v12, (uint64_t)v13, &qword_10064C778);
  v1 = v14;
  if (v14 == 255)
  {
    v11 = 0x203A726564616568;
    v7 = *(_QWORD *)(*(_QWORD *)v0 + 32);
    v8 = *(void **)(*(_QWORD *)v0 + 40);
    swift_bridgeObjectRetain(v8);
    v9._countAndFlagsBits = v7;
    v9._object = v8;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v2 = v13[0];
    v3 = v13[1];
    v4 = v13[2];
    v11 = 0x3A646C6968632020;
    sub_1002A8974((uint64_t)v12);
    sub_1002003C4(v2, v3, v4, v1);
    object = v5._object;
    String.append(_:)(v5);
    swift_bridgeObjectRelease(object);
    sub_1002A89CC((uint64_t)v12);
  }
  return v11;
}

Swift::Int sub_10048F82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  _BYTE v14[40];
  _QWORD v15[9];

  v1 = v0;
  Hasher.init(_seed:)(v15, 0);
  v13 = *(id *)(*(_QWORD *)v0 + 24);
  v2 = sub_10004F2F0(0, &qword_100642B88, NSUUID_ptr);
  v3 = sub_100066A10();
  v4 = v13;
  AnyHashable.init<A>(_:)(&v13, v2, v3);
  AnyHashable.hash(into:)(v15);
  sub_100067748((uint64_t)v14);
  v5 = *(unsigned __int8 *)(v1 + 40);
  if (v5 == 255)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v7 = *(_QWORD *)(v1 + 24);
    v6 = *(_QWORD *)(v1 + 32);
    v8 = *(void **)(v1 + 16);
    Hasher._combine(_:)(1u);
    sub_1000E4F7C(v8, v7, v6, v5);
    sub_1000E4F7C(v8, v7, v6, v5);
    sub_100200624((uint64_t)v8, v7, v6, v5);
    v10 = v9;
    String.hash(into:)(v15, v11, v9);
    swift_bridgeObjectRelease(v10);
    sub_1000B1664(v8, v7, v6, v5);
    sub_1000B1664(v8, v7, v6, v5);
  }
  return Hasher._finalize()();
}

void sub_10048F988(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _BYTE v14[40];

  v3 = *(void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 40);
  v13 = *(id *)(*(_QWORD *)v1 + 24);
  v7 = sub_10004F2F0(0, &qword_100642B88, NSUUID_ptr);
  v8 = sub_100066A10();
  v9 = v13;
  AnyHashable.init<A>(_:)(&v13, v7, v8);
  AnyHashable.hash(into:)(a1);
  sub_100067748((uint64_t)v14);
  if (v6 == 255)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    sub_1000E4F7C(v3, v4, v5, v6);
    sub_1000E4F7C(v3, v4, v5, v6);
    sub_100200624((uint64_t)v3, v4, v5, v6);
    v11 = v10;
    String.hash(into:)(a1, v12, v10);
    swift_bridgeObjectRelease(v11);
    sub_1000B1664(v3, v4, v5, v6);
    sub_1000B1664(v3, v4, v5, v6);
  }
}

Swift::Int sub_10048FAD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v14;
  _BYTE v15[40];
  _QWORD v16[9];

  v2 = *v1;
  v3 = (void *)v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *((unsigned __int8 *)v1 + 40);
  Hasher.init(_seed:)(v16, a1);
  v14 = *(id *)(v2 + 24);
  v7 = sub_10004F2F0(0, &qword_100642B88, NSUUID_ptr);
  v8 = sub_100066A10();
  v9 = v14;
  AnyHashable.init<A>(_:)(&v14, v7, v8);
  AnyHashable.hash(into:)(v16);
  sub_100067748((uint64_t)v15);
  if (v6 == 255)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    sub_1000E4F7C(v3, v4, v5, v6);
    sub_1000E4F7C(v3, v4, v5, v6);
    sub_100200624((uint64_t)v3, v4, v5, v6);
    v11 = v10;
    String.hash(into:)(v16, v12, v10);
    swift_bridgeObjectRelease(v11);
    sub_1000B1664(v3, v4, v5, v6);
    sub_1000B1664(v3, v4, v5, v6);
  }
  return Hasher._finalize()();
}

uint64_t sub_10048FC28()
{
  return sub_10048F730();
}

uint64_t sub_10048FC60(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a2 + 25);
  return sub_100493194((uint64_t *)&v5, (uint64_t *)&v7) & 1;
}

void sub_10048FCA8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  _BYTE v13[24];

  v5 = *(_QWORD *)a3;
  v6 = *(void **)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = a4 + 16;
  v10 = *(unsigned __int8 *)(a3 + 40);
  swift_beginAccess(a4 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v12 = (void *)Strong;
    if ((_DWORD)v10 != 255)
    {
      sub_1000E4F7C(v6, v7, v8, v10);
      sub_10048FD74(a1, (char *)v6, v7, v8, v10, v5);
      sub_1000B1664(v6, v7, v8, v10);
    }

  }
}

void sub_10048FD74(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  char v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  char *v24;
  id v25;
  uint64_t KeyPath;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  unsigned __int8 v42;
  char *v43;
  char *v44;
  void *v45;
  unsigned __int8 v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  unsigned __int8 v52;
  int v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  id v71;
  char v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  double v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char *v121;
  char *v124;
  objc_super v125;
  _BYTE v126[32];
  uint64_t v127[3];

  v7 = v6;
  v12 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (v12)
  {
    v13 = *(void **)(v12 + 24);
    if (v13)
    {
      type metadata accessor for DOCSidebarItemCell(0);
      v14 = a1;
      v15 = v13;
      v16 = static NSObject.== infix(_:_:)(v14, v15);

      if ((v16 & 1) != 0)
        return;
    }
  }
  v17 = (char *)a1 + qword_100651090;
  *((_QWORD *)v17 + 1) = &off_1005D40B8;
  swift_unknownObjectWeakAssign(v17, v7);
  v18 = (uint64_t *)a4;
  sub_100492604((uint64_t)a1, a2, a3, a4, a5);
  if (a5 == 1
    && (v19 = type metadata accessor for DOCFileProviderSource(), (v20 = swift_dynamicCastClass(a2, v19)) != 0))
  {
    v21 = v20;
    v22 = (objc_class *)type metadata accessor for DOCEjectionController();
    v23 = (char *)objc_allocWithZone(v22);
    v24 = &v23[OBJC_IVAR____TtC5Files21DOCEjectionController_alertPresentingViewController];
    swift_unknownObjectWeakInit(&v23[OBJC_IVAR____TtC5Files21DOCEjectionController_alertPresentingViewController]);
    *(_QWORD *)&v23[OBJC_IVAR____TtC5Files21DOCEjectionController_observation] = 0;
    swift_unknownObjectWeakInit(&v23[OBJC_IVAR____TtC5Files21DOCEjectionController_delegate]);
    *(_QWORD *)&v23[OBJC_IVAR____TtC5Files21DOCEjectionController____lazy_storage____button] = 0;
    *(_QWORD *)&v23[OBJC_IVAR____TtC5Files21DOCEjectionController_source] = v21;
    swift_unknownObjectWeakAssign(v24, v7);
    sub_1000E4F7C(a2, a3, a4, 1);
    sub_1000E4F7C(a2, a3, a4, 1);
    sub_1000E4F7C(a2, a3, a4, 1);
    sub_1000E4F7C(a2, a3, a4, 1);
    v125.receiver = v23;
    v125.super_class = v22;
    v121 = v7;
    v25 = objc_msgSendSuper2(&v125, "init");
    v127[0] = v21;
    KeyPath = swift_getKeyPath(&unk_1004EA708);
    v27 = swift_allocObject(&unk_1005F03E0, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16);
    v28 = (char *)v25;
    v29 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_100494158, v27, &protocol witness table for NSObject);
    swift_release(v27);
    v30 = KeyPath;
    v18 = (uint64_t *)a4;
    swift_release(v30);

    sub_1000E4FD0(a2, a3, a4, 1);
    v31 = *(void **)&v28[OBJC_IVAR____TtC5Files21DOCEjectionController_observation];
    *(_QWORD *)&v28[OBJC_IVAR____TtC5Files21DOCEjectionController_observation] = v29;

    sub_100393F0C((char *)v25);
    sub_1000E4FD0(a2, a3, a4, 1);
    sub_1000E4FD0(a2, a3, a4, 1);
  }
  else
  {
    sub_100393F0C(0);
  }
  sub_1002003C4((uint64_t)a2, a3, (uint64_t)v18, a5);
  sub_10039532C(v32, v33);
  if (a5 == 1)
  {
    v35 = objc_msgSend(a2, "domainName");
    if (v35)
    {
      v36 = v35;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;
      sub_1000E4FD0(a2, a3, (uint64_t)v18, 1);

      goto LABEL_13;
    }
    sub_1000E4FD0(a2, a3, (uint64_t)v18, 1);
  }
  v38 = 0;
LABEL_13:
  __chkstk_darwin(v34);
  v39 = objc_msgSend(a1, "window");
  v40 = v39;
  if (v39)

  v41 = __chkstk_darwin(v40 == 0);
  UIView.doc_performBlock(allowingAnimations:block:)(v41, sub_100399C34);
  swift_bridgeObjectRelease(v38);
  sub_1002000F8(*(_QWORD *)&v7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController], (uint64_t)a2, a3, (uint64_t)v18, a5);
  sub_100392FB8(v42);
  if (a5 == 2)
  {
    v43 = a2;
    v44 = a2;
  }
  else
  {
    v44 = 0;
  }
  v45 = *(void **)((char *)a1 + qword_1006510B0);
  *(_QWORD *)((char *)a1 + qword_1006510B0) = v44;

  sub_100492890((uint64_t)a2, a3, (uint64_t)v18, a5, a6);
  v47 = *((unsigned __int8 *)a1 + qword_1006510E0);
  *((_BYTE *)a1 + qword_1006510E0) = v46;
  if (v47 != v46)
  {
    v48 = sub_1003965D8(v46);
    v49 = *(_QWORD *)((char *)a1 + qword_1006510D8);
    *(_QWORD *)((char *)a1 + qword_1006510D8) = v48;
    swift_retain();
    sub_100396928(v49);
    swift_release(v49);
    swift_release(v48);
  }
  objc_msgSend(a1, "setIndentationLevel:", 0);
  v50 = a5;
  if ((_BYTE)a5)
  {
    v52 = 0;
  }
  else
  {
LABEL_21:
    v51 = a2;
    v52 = objc_msgSend(v51, "isFolder");

  }
  v53 = v50;
  *((_BYTE *)a1 + qword_100651098) = v52;
  if (a5 == 1)
  {
    v54 = type metadata accessor for DOCExternalDeviceSource();
    v55 = swift_dynamicCastClass(a2, v54) != 0;
    *((_BYTE *)a1 + qword_1006510A0) = v55;
    v56 = type metadata accessor for DOCFileProviderSource();
    v57 = swift_dynamicCastClass(a2, v56);
    if (v57)
    {
      v58 = *(void **)(v57 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      v59 = v58;
    }
    else
    {
      v58 = 0;
    }
  }
  else
  {
    v58 = 0;
    *((_BYTE *)a1 + qword_1006510A0) = 0;
  }
  v60 = *(void **)((char *)a1 + qword_1006510C8);
  *(_QWORD *)((char *)a1 + qword_1006510C8) = v58;
  v61 = v58;
  sub_100395754(v60);

  if (a5 == 4)
  {
    v62 = *(void **)&a2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    v63 = v62;
  }
  else
  {
    v62 = 0;
  }
  v64 = *(void **)((char *)a1 + qword_1006510D0);
  *(_QWORD *)((char *)a1 + qword_1006510D0) = v62;
  v65 = v62;
  sub_100395DC4(v64);

  if ((_BYTE)a5)
  {
    if (a5 != 1
      || (v66 = *(void **)&v7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext],
          v67 = type metadata accessor for DOCFileProviderSource(),
          (v68 = swift_dynamicCastClass(a2, v67)) == 0)
      || (v69 = *(void **)(v68 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0)
    {
      v72 = 1;
      goto LABEL_39;
    }
    sub_1000E4F7C(a2, a3, (uint64_t)v18, 1);
    v70 = v66;
    v71 = v69;
    v72 = sub_100087190(v71, (uint64_t)v66);

  }
  else
  {
    v73 = *(void **)&v7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
    sub_1000E4F7C(a2, a3, (uint64_t)v18, 0);
    v71 = v73;
    v72 = sub_1001E9928(a2, (uint64_t)v73);
  }

  sub_1000E4FD0(a2, a3, (uint64_t)v18, a5);
LABEL_39:
  objc_msgSend(a1, "setUserInteractionEnabled:", v72 & 1);
  v74 = sub_100172EC4((uint64_t)&off_1005BF400);
  v18 = (_QWORD *)((char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x78));
  swift_beginAccess(v18, v127, 0, 0);
  v75 = *v18;
  swift_retain();
  v76 = swift_bridgeObjectRetain(v75);
  v7 = 0;
  v77 = sub_100493AB4(v76, v74);
  swift_bridgeObjectRelease(v75);
  swift_release(v74);
  if ((v77 & 1) == 0)
  {
    swift_beginAccess(v18, v126, 33, 0);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
    v80 = *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v79 = *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v80 >= v79 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
    v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v74);
    specialized Array._endMutation()(v81);
    v82 = swift_endAccess(v126);
    sub_100393364(v82);
  }
  swift_release(v74);
  if ((*(_BYTE *)(a6 + 49) & 1) != 0)
  {
    v83 = sub_100173130();
    v84 = *v18;
    swift_retain();
    v85 = swift_bridgeObjectRetain(v84);
    v86 = sub_100493AB4(v85, v83);
    swift_bridgeObjectRelease(v84);
    swift_release(v83);
    if ((v86 & 1) == 0)
    {
      swift_beginAccess(v18, v126, 33, 0);
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
      v89 = *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v88 = *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v89 >= v88 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
      v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v83);
      specialized Array._endMutation()(v90);
      v91 = swift_endAccess(v126);
      sub_100393364(v91);
    }
    swift_release(v83);
  }
  if (*(_BYTE *)(a6 + 72) == 1)
  {
    switch(v53)
    {
      case 0:
      case 2:
        goto LABEL_51;
      case 1:
        v124 = a2;
        v101 = objc_msgSend(v124, "identifier");
        v102 = DOCDocumentSourceIdentifierTrashedItems;
        v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
        v105 = v104;
        v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
        v108 = v106;
        if (v103 == v107 && v105 == v106)
        {

          v109 = v105;
LABEL_59:
          swift_bridgeObjectRelease_n(v109, 2);
LABEL_61:
          sub_1000E4FD0(a2, a3, a4, 1);
          return;
        }
        v110 = _stringCompareWithSmolCheck(_:_:expecting:)(v103, v105, v107, v106, 0);

        swift_bridgeObjectRelease(v105);
        *(_QWORD *)&v111 = swift_bridgeObjectRelease(v108).n128_u64[0];
        if ((v110 & 1) != 0)
          goto LABEL_61;
        v112 = objc_msgSend(v124, "identifier", v111);
        v113 = DOCDocumentSourceIdentifierSharedItems;
        v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
        v116 = v115;
        v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
        v119 = v117;
        if (v114 == v118 && v116 == v117)
        {

          v109 = v116;
          goto LABEL_59;
        }
        v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v114, v116, v118, v117, 0);

        swift_bridgeObjectRelease(v116);
        swift_bridgeObjectRelease(v119);
        sub_1000E4FD0(a2, a3, a4, 1);
        if ((v120 & 1) == 0)
        {
LABEL_51:
          v92 = sub_1001733A8();
          v93 = *v18;
          swift_retain();
          v94 = swift_bridgeObjectRetain(v93);
          v95 = sub_100493AB4(v94, v92);
          swift_bridgeObjectRelease(v93);
          swift_release(v92);
          if ((v95 & 1) == 0)
          {
            swift_beginAccess(v18, v126, 33, 0);
            swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
            v98 = *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v97 = *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v98 >= v97 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
            v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v92);
            specialized Array._endMutation()(v99);
            v100 = swift_endAccess(v126);
            sub_100393364(v100);
          }
          swift_release(v92);
        }
        break;
      default:
        goto LABEL_21;
    }
  }
}

double sub_1004908F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = *a3;
  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(v4 + 32);
    v10 = *(_QWORD *)(v4 + 40);
    swift_unknownObjectRetain(v4);
    swift_bridgeObjectRetain(v10);
    sub_1002A27F8(v9, v10);

    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_100490980(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[5];
  char v20;
  __int128 v21;
  _BYTE v22[32];
  _BYTE v23[32];

  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v12 = a3[3];
  v11 = a3[4];
  v13 = *((_BYTE *)a3 + 40);
  sub_100070EDC((uint64_t)(a3 + 2), (uint64_t)v22, &qword_10064C778);
  sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_10064C778);
  v19[0] = v8;
  v19[1] = v9;
  v19[2] = v10;
  v19[3] = v12;
  v19[4] = v11;
  v20 = v13;
  v21 = *(_OWORD *)a3;
  if (v23[24] == 255)
  {
    v16 = type metadata accessor for DOCSidebarHeaderCell(0);
    swift_unknownObjectRetain(v21);
    v15 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v19, v16, &_s11OutlineItemVN);
    sub_1002A8A58(&v21);
  }
  else
  {
    sub_1002A89A4(&v21);
    sub_1002A8974((uint64_t)v22);
    v14 = type metadata accessor for DOCSidebarItemCell(0);
    v15 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a5, a2, v19, v14, &_s11OutlineItemVN);
    sub_1002A8A58(&v21);
    sub_1002A89CC((uint64_t)v22);
  }
  return v15;
}

uint64_t sub_100490AD8(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  char v9;
  _BYTE v11[24];

  v4 = *a1;
  v5 = a1[1];
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = sub_100239964(v4, v5, a3 & 1);

  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

void sub_100490B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
    swift_retain();
    sub_10002944C();
    v7 = v6;
    swift_release(v5);
    v8 = type metadata accessor for DOCMutableSidebarSection();
    *(_BYTE *)(swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0) + 48) = 1;
    sub_1000A3FE8(0, 0);
    v9 = *(_QWORD *)&v3[v4];
    swift_retain();
    sub_10012E5BC();
    swift_unknownObjectRelease(v7);
    swift_release(v9);
    sub_100233A38(0xD000000000000016, 0x800000010051C730, 0);

  }
}

uint64_t sub_100490C5C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;
  __int128 v33;
  _OWORD v34[2];
  __int128 v35;
  _BYTE v36[40];

  v28 = a5;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[1];
  v33 = *a1;
  v34[0] = v15;
  *(_OWORD *)((char *)v34 + 9) = *(__int128 *)((char *)a1 + 25);
  v16 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v35 = v33;
  sub_100070EDC((uint64_t)v34, (uint64_t)v36, &qword_10064C778);
  v18 = swift_allocObject(a3, 65, 7);
  v19 = v34[0];
  *(_OWORD *)(v18 + 24) = v33;
  *(_QWORD *)(v18 + 16) = a2;
  *(_OWORD *)(v18 + 40) = v19;
  *(_OWORD *)(v18 + 49) = *(_OWORD *)((char *)v34 + 9);
  aBlock[4] = a4;
  v32 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = v28;
  v20 = _Block_copy(aBlock);
  v21 = v32;
  swift_retain();
  sub_1002A89A4(&v35);
  sub_1002A8974((uint64_t)v36);
  v22 = swift_release(v21);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10006922C((uint64_t *)&unk_100647540);
  v25 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v9, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v29);
}

void sub_100490EB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
    swift_retain();
    sub_10002944C();
    v7 = v6;
    swift_release(v5);
    v8 = type metadata accessor for DOCMutableSidebarSection();
    *(_BYTE *)(swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0) + 48) = 0;
    v9 = *(_QWORD *)&v3[v4];
    swift_retain();
    sub_10012E5BC();
    swift_unknownObjectRelease(v7);
    swift_release(v9);
    sub_100233A38(0xD000000000000016, 0x800000010051C730, 0);

  }
}

uint64_t sub_100490FA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  char v12;
  _BYTE v14[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = (void *)a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a2 + 16;
  v8 = *((unsigned __int8 *)a1 + 40);
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v10 = (void *)Strong;
    if (v8 == 255)
    {
      v12 = 0;
    }
    else
    {
      sub_1000B1650(v4, v5, v6, v8);
      v11 = swift_unknownObjectRetain(v2);
      v12 = sub_100169260(v11, v3, (uint64_t)v4, v5, v6, v8);
      swift_unknownObjectRelease(v2);
      sub_1000B1664(v4, v5, v6, v8);
    }

  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void sub_10049108C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char *Strong;
  _BYTE v19[24];

  v3 = sub_10006922C(&qword_100657860);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100657868);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = sub_10006922C(&qword_100657870);
    v11 = NSDiffableDataSourceTransaction.sectionTransactions.getter(v10);
    v12 = *(_QWORD *)(v11 + 16);
    v17 = v11;
    if (v12)
    {
      v13 = v11 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v14 = *(_QWORD *)(v4 + 72);
      v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain(v11);
      while (1)
      {
        v15(v9, v13, v3);
        v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
        v16(v9, 0, 1, v3);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
        sub_100491270((uint64_t)v6, Strong);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v13 += v14;
        if (!--v12)
          goto LABEL_8;
      }
    }
    else
    {
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      swift_bridgeObjectRetain(v11);
LABEL_8:
      v16(v9, 1, 1, v3);
    }
    swift_bridgeObjectRelease_n(v17, 2);

  }
}

void sub_100491270(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;

  v36 = a2;
  v2 = sub_10006922C(&qword_100657830);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100657860);
  NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter(v38);
  v7 = v38[0];
  NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v6);
  v8 = NSDiffableDataSourceSectionSnapshot.items.getter(v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v39 = v8;
  v9 = *(_QWORD *)(v8 + 16);
  v37 = v7;
  if (v9)
  {
    v10 = (char *)(swift_bridgeObjectRetain(v39) + 72);
    v11 = _swiftEmptyArrayStorage;
    do
    {
      v13 = *v10;
      if (v13 != 255)
      {
        v14 = (void *)*((_QWORD *)v10 - 3);
        v15 = *((_QWORD *)v10 - 2);
        v16 = *((_QWORD *)v10 - 1);
        sub_1000E4F7C(v14, v15, v16, *v10);
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_100153AE8(0, v11[2] + 1, 1, v11);
        v18 = v11[2];
        v17 = v11[3];
        if (v18 >= v17 >> 1)
          v11 = sub_100153AE8((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
        v11[2] = v18 + 1;
        v12 = &v11[4 * v18];
        v12[4] = v14;
        v12[5] = v15;
        v12[6] = v16;
        *((_BYTE *)v12 + 56) = v13;
      }
      v10 += 48;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v39);
    v7 = v37;
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v39);
  v19 = *(void **)&v36[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver];
  if (!v19)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v32 = (char *)static OS_os_log.default.getter();
    v33 = static os_log_type_t.default.getter(v32);
    os_log(_:dso:log:type:_:)("Unexpected nil value for source observer", 40, 2, &_mh_execute_header, v32, v33, _swiftEmptyArrayStorage);
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
LABEL_21:

    return;
  }
  v20 = v36;
  v21 = swift_allocObject(&unk_1005F04A8, 24, 7);
  *(_QWORD *)(v21 + 16) = 0;
  v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData];
  v23 = v20;
  swift_bridgeObjectRetain(v11);
  v24 = v19;
  swift_retain();
  sub_10002944C();
  v26 = v25;
  swift_release(v22);
  v27 = type metadata accessor for DOCMutableSidebarSection();
  v28 = swift_dynamicCastClassUnconditional(v26, v27, 0, 0, 0);
  swift_beginAccess(v21 + 16, v38, 1, 0);
  v29 = *(_QWORD *)(v21 + 16) + 1;
  if (!__OFADD__(*(_QWORD *)(v21 + 16), 1))
  {
    *(_QWORD *)(v21 + 16) = v29;
    if (v29 == 1)
      sub_10023380C(0x655274696D6D6F63, 0xED0000726564726FLL);
    v30 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
    if (v30)
      v31 = *(_BYTE *)(v30 + 17);
    else
      v31 = 0;
    v32 = v23;
    swift_retain();
    sub_1000E3E98((uint64_t)v11, v31, (uint64_t)v24, v28, v21, v32);
    swift_unknownObjectRelease(v37);

    swift_bridgeObjectRelease_n(v11, 2);
    v34 = swift_unknownObjectRelease(v26);
    swift_release_n(v21, 2, v34);

    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_100491610(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v11 = Logger.UI.unsafeMutableAddressor(result);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
    v12 = swift_bridgeObjectRetain_n(a2, 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      v19 = a1;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc(32, -1);
      v21 = v17;
      *(_DWORD *)v16 = 136315138;
      swift_bridgeObjectRetain(a2);
      v20 = sub_1000544FC(v19, a2, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "ERROR: %s", v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_1004917E0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  Swift::OpaquePointer v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v30;
  _OWORD v31[3];
  _BYTE v32[48];
  _QWORD v33[5];
  char v34;
  _QWORD v35[5];
  char v36;
  _QWORD v37[6];
  __int128 v38;
  _BYTE v39[25];
  _QWORD v40[6];
  _QWORD v41[6];
  __int128 v42;
  _OWORD v43[2];
  uint64_t v44[5];
  char v45;
  _BYTE v46[32];
  __int128 v47;

  sub_100070EDC(a1, (uint64_t)v35, &qword_100652EC0);
  v23 = v35[1];
  v24 = v35[0];
  v27 = v35[3];
  v28 = (void *)v35[2];
  v26 = v35[4];
  v25 = v36;
  sub_100070EDC(a1, (uint64_t)v32, &qword_100652EC0);
  sub_100491C14((uint64_t)v33);
  v5 = v33[0];
  v6 = v33[1];
  v8 = (void *)v33[2];
  v7 = v33[3];
  v9 = v33[4];
  v10 = v34;
  sub_100070EDC(a1, (uint64_t)v41, &qword_100652EC0);
  v30 = a2;
  if (v41[0])
  {
    sub_100070EDC(a1, (uint64_t)&v38, &qword_100652EC0);
    sub_100070EDC((uint64_t)v33, (uint64_t)v40, &qword_100652EC0);
    if (v40[0])
    {
      v44[0] = v5;
      v44[1] = v6;
      v44[2] = (uint64_t)v8;
      v44[3] = v7;
      v44[4] = v9;
      v45 = v10;
      v42 = v38;
      v43[0] = *(_OWORD *)v39;
      *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)&v39[9];
      v47 = v38;
      sub_100070EDC((uint64_t)v43, (uint64_t)v46, &qword_10064C778);
      sub_100494230(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004941E4);
      sub_100494230(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004941E4);
      sub_100494230((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004941E4);
      v11 = sub_100493194((uint64_t *)&v42, v44);
      swift_unknownObjectRelease(v5);
      sub_1000B1664(v8, v7, v9, v10);
      sub_1002A8A58(&v47);
      sub_1002A89CC((uint64_t)v46);
      sub_100494230(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003E6D3C);
    }
    else
    {
      v12 = v38;
      sub_100494230(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004941E4);
      swift_unknownObjectRetain(v24);
      sub_1000B1650(v28, v27, v26, v25);
      swift_unknownObjectRelease(v12);
      sub_1000B1664(*(void **)v39, *(uint64_t *)&v39[8], *(uint64_t *)&v39[16], v39[24]);
      sub_100494230(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003E6D3C);
      v11 = 0;
    }
  }
  else
  {
    sub_100070EDC((uint64_t)v33, (uint64_t)v44, &qword_100652EC0);
    v11 = v44[0] == 0;
  }
  v13 = sub_10048F488();
  v14 = v13[2];
  swift_bridgeObjectRelease(v13);
  if (v14)
  {
    v15 = sub_10048F488();
    sub_10006922C(&qword_100657830);
    NSDiffableDataSourceSectionSnapshot.delete(_:)((Swift::OpaquePointer)v15);
    swift_bridgeObjectRelease(v15);
  }
  if ((v11 & 1) == 0)
  {
    sub_100070EDC((uint64_t)v33, (uint64_t)&v38, &qword_100652EC0);
    if ((_QWORD)v38)
    {
      v16 = sub_10006922C(&qword_100644CD0);
      v17._rawValue = (void *)swift_allocObject(v16, 80, 7);
      *((_OWORD *)v17._rawValue + 1) = xmmword_1004D9670;
      *((_QWORD *)v17._rawValue + 4) = v5;
      *((_QWORD *)v17._rawValue + 5) = v6;
      *((_QWORD *)v17._rawValue + 6) = v8;
      *((_QWORD *)v17._rawValue + 7) = v7;
      *((_QWORD *)v17._rawValue + 8) = v9;
      *((_BYTE *)v17._rawValue + 72) = v10;
      sub_100494230((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004941E4);
      swift_unknownObjectRetain(v5);
      sub_1000B1650(v8, v7, v9, v10);
      sub_10006922C(&qword_100657830);
      NSDiffableDataSourceSectionSnapshot.delete(_:)(v17);
      swift_unknownObjectRelease(v5);
      swift_bridgeObjectRelease(v17._rawValue);
      sub_1000B1664(v8, v7, v9, v10);
    }
    sub_100070EDC(a1, (uint64_t)v37, &qword_100652EC0);
    if (v37[0])
    {
      v18 = sub_10006922C(&qword_100644CD0);
      v19 = swift_allocObject(v18, 80, 7);
      *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v19 + 32) = v24;
      *(_QWORD *)(v19 + 40) = v23;
      *(_QWORD *)(v19 + 48) = v28;
      *(_QWORD *)(v19 + 56) = v27;
      *(_QWORD *)(v19 + 64) = v26;
      *(_BYTE *)(v19 + 72) = v25;
      memset(v31, 0, 41);
      sub_100494230(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004941E4);
      swift_unknownObjectRetain(v24);
      sub_1000B1650(v28, v27, v26, v25);
      v20 = sub_10006922C(&qword_100657830);
      NSDiffableDataSourceSectionSnapshot.append(_:to:)(v19, v31, v20);
      swift_unknownObjectRelease(v24);
      swift_bridgeObjectRelease(v19);
      sub_1000B1664(v28, v27, v26, v25);
    }
  }
  v21 = sub_10006922C(&qword_100657830);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(a3, v32, v21);
  sub_100493024(v30 & 1);
  return sub_100494230((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003E6D3C);
}

void sub_100491C14(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  __int128 v12;

  v2 = sub_10006922C(&qword_100657830);
  v3 = NSDiffableDataSourceSectionSnapshot.items.getter(v2);
  v4 = v3;
  if (*(_QWORD *)(v3 + 16))
  {
    v5 = *(void **)(v3 + 48);
    v6 = *(_QWORD *)(v3 + 56);
    v7 = *(_QWORD *)(v3 + 64);
    v8 = *(unsigned __int8 *)(v3 + 72);
    v12 = *(_OWORD *)(v3 + 32);
    v9 = *(_QWORD *)(v3 + 32);
    swift_unknownObjectRetain(v9);
    sub_1000B1650(v5, v6, v7, v8);
    swift_bridgeObjectRelease(v4);
    if (v8 == 255)
    {
      v10 = -1;
      v11 = v12;
      goto LABEL_7;
    }
    swift_unknownObjectRelease(v9);
    sub_1000B1664(v5, v6, v7, v8);
  }
  else
  {
    swift_bridgeObjectRelease(v3);
  }
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v10 = 0;
  v11 = 0uLL;
LABEL_7:
  *(_OWORD *)a1 = v11;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v10;
}

uint64_t sub_100491D08(uint64_t a1, void *a2, __int128 *a3, uint64_t *a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;
  _QWORD v46[5];
  unsigned __int8 v47;
  __int128 v48;
  _OWORD v49[2];
  __int128 v50;
  _OWORD v51[2];
  _QWORD v52[2];
  _QWORD v53[6];

  sub_100070EDC(a7, (uint64_t)v46, &qword_100652EC0);
  v34 = v46[0];
  v35 = (id)v46[2];
  v36 = v46[3];
  v37 = v46[4];
  v38 = v47;
  v14 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v39 = *(_QWORD *)(v14 - 8);
  v40 = v14;
  __chkstk_darwin(v14);
  v41 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t *)(a1 + 88);
  swift_beginAccess(a1 + 88, &v50, 33, 0);
  sub_1000E4F7C(a2, (uint64_t)a3, (uint64_t)a4, a5);
  sub_100494588(a1 + 88, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4, a5);
  v18 = v17;
  sub_1000E4FD0(a2, (uint64_t)a3, (uint64_t)a4, a5);
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16);
  if (v19 < v18)
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_10045BD74(v18, v19);
  swift_endAccess(&v50);
  sub_100070EDC(a7, (uint64_t)&v48, &qword_100652EC0);
  if ((_QWORD)v48)
  {
    a3 = &v48;
    v50 = v48;
    v51[0] = v49[0];
    *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)((char *)v49 + 9);
    v18 = a6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
    swift_beginAccess(a6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, &v43, 0, 0);
    sub_1000271D4(v18, (uint64_t)v44, &qword_100642730);
    v16 = &qword_100657000;
    if (v45)
    {
      swift_unknownObjectRetain(v34);
      sub_1000B1650(v35, v36, v37, v38);
      v20 = sub_10006922C((uint64_t *)&unk_1006455F0);
      v21 = swift_dynamicCast(v53, v44, (char *)&type metadata for Any + 8, v20, 6);
      a6 = v40;
      if ((v21 & 1) != 0)
      {
        a4 = &qword_100641000;
        v22 = &qword_100657000;
        v23 = (void *)v53[0];
        goto LABEL_9;
      }
    }
    else
    {
      swift_unknownObjectRetain(v34);
      sub_1000B1650(v35, v36, v37, v38);
      sub_10000CB4C((uint64_t)v44, &qword_100642730);
      a6 = v40;
    }
    a4 = &qword_100641000;
    if (qword_1006411E8 == -1)
    {
LABEL_8:
      v22 = v16;
      v21 = (uint64_t)(id)v16[239];
      v23 = (void *)v21;
LABEL_9:
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v21);

      v24 = sub_10006922C(&qword_100644CD0);
      v25 = (_OWORD *)swift_allocObject(v24, 80, 7);
      v25[1] = xmmword_1004D9670;
      a3[6] = a3[3];
      sub_100070EDC((uint64_t)v51, (uint64_t)v53, &qword_10064C778);
      v26 = a3[4];
      v25[2] = a3[3];
      v25[3] = v26;
      *(_OWORD *)((char *)v25 + 57) = *(__int128 *)((char *)a3 + 73);
      sub_1002A89A4(v52);
      sub_1002A8974((uint64_t)v53);
      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v25);
      swift_bridgeObjectRelease(v25);
      sub_1000271D4(v18, (uint64_t)v44, &qword_100642730);
      if (v45)
      {
        v27 = sub_10006922C((uint64_t *)&unk_1006455F0);
        v28 = swift_dynamicCast(&v42, v44, (char *)&type metadata for Any + 8, v27, 6);
        v29 = v39;
        if ((v28 & 1) != 0)
        {
          v30 = v42;
LABEL_16:
          v31 = v41;
          dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v41, 1, 0, 0);

          sub_1002A8A58(v52);
          sub_1002A89CC((uint64_t)v53);
          (*(void (**)(char *, uint64_t))(v29 + 8))(v31, a6);
          goto LABEL_17;
        }
      }
      else
      {
        sub_10000CB4C((uint64_t)v44, &qword_100642730);
        v29 = v39;
      }
      if (a4[61] != -1)
        swift_once(&qword_1006411E8, sub_1000A3F70);
      v30 = (id)v22[239];
      goto LABEL_16;
    }
LABEL_19:
    swift_once(&qword_1006411E8, sub_1000A3F70);
    goto LABEL_8;
  }
LABEL_17:
  sub_100020920();
  return 0;
}

id DOCSidebarViewController.collectionViewLayout.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  result = objc_msgSendSuper2(&v5, "collectionView");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "collectionViewLayout");

    v4 = objc_opt_self(UICollectionViewCompositionalLayout);
    return (id)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100492250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Class isa;
  id v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[48];
  __int128 v29;
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _BYTE v33[32];
  __int128 v34;
  _BYTE v35[48];

  v4 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  v8 = objc_msgSend(objc_allocWithZone((Class)UISwipeActionsConfiguration), "init");
  swift_beginAccess(a2, &v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return v8;
  v10 = (void *)Strong;
  v11 = Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, &v26, 0, 0);
  sub_1000271D4(v11, (uint64_t)&v31, &qword_100642730);
  if (*((_QWORD *)&v32[0] + 1))
  {
    v12 = sub_10006922C((uint64_t *)&unk_1006455F0);
    v13 = swift_dynamicCast(&v29, &v31, (char *)&type metadata for Any + 8, v12, 6);
    if ((v13 & 1) != 0)
    {
      v14 = (void *)v29;
      goto LABEL_9;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)&v31, &qword_100642730);
  }
  if (qword_1006411E8 != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v13 = (uint64_t)(id)qword_100657778;
  v14 = (void *)v13;
LABEL_9:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v13);

  sub_1003E57D8(a1, (uint64_t)v28);
  sub_100070EDC((uint64_t)v28, (uint64_t)&v29, &qword_100652EC0);
  if (!(_QWORD)v29)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_18:

    return v8;
  }
  v31 = v29;
  v32[0] = v30[0];
  *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v30 + 9);
  sub_100070EDC((uint64_t)v32, (uint64_t)v33, &qword_10064C778);
  sub_100070EDC((uint64_t)v33, (uint64_t)v35, &qword_10064C778);
  if (v35[24] == 255)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v34 = v31;
    sub_1002A8A58(&v34);
    goto LABEL_18;
  }
  v15 = _swiftEmptyArrayStorage;
  v25 = (unint64_t)_swiftEmptyArrayStorage;
  v16 = sub_1002A4D24(&v31);
  if (v16)
  {
    v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v18 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v18 >= v19 >> 1)
    {
      v24 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v18 + 1, 1);
      v18 = v24;
    }
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v17);
    specialized Array._endMutation()(v20);

    v15 = (_QWORD *)v25;
  }
  sub_10004F2F0(0, (unint64_t *)&unk_100655FA0, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  v22 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  v34 = v31;
  sub_1002A8A58(&v34);
  sub_1002A89CC((uint64_t)v33);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v22;
}

void sub_1004925B0(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a2();

  }
}

uint64_t sub_100492604(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  char v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25[2];
  __int128 v26;
  ValueMetadata *v27;
  _UNKNOWN **v28;
  _QWORD v29[5];

  v6 = v5;
  if (a5 && a5 != 3)
  {
    if (a5 == 2)
    {
      v12 = type metadata accessor for DOCSidebarItemCell.TagIconProvider();
      v13 = swift_allocObject(v12, 25, 7);
      *(_QWORD *)(v13 + 16) = a2;
      *(_BYTE *)(v13 + 24) = objc_msgSend(a2, "labelIndex") == 0;
      v29[3] = v12;
      v29[4] = &off_1005E3F20;
      v29[0] = v13;
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  v14 = a2;
  v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v6
                                                              + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration), "sourceListUI"));
  v16 = objc_msgSend(v15, "nonThumbnailedIconForItem:", v14);

  swift_unknownObjectRelease(v15);
  if (!v16)
  {
LABEL_7:
    sub_1002010A0((uint64_t)a2, a3, a4, a5);
    v16 = v18;
    v17 = v19 & 1;
    goto LABEL_8;
  }
  v17 = 0;
LABEL_8:
  v20 = type metadata accessor for DOCSidebarItemCell.RawImageIconProvider();
  v21 = swift_allocObject(v20, 25, 7);
  if (!v16)
  {
    if (qword_1006410B0 != -1)
      swift_once(&qword_1006410B0, sub_10039395C);
    v17 = byte_100672D28;
    v16 = (id)qword_100672D20;
  }
  *(_QWORD *)(v21 + 16) = v16;
  *(_BYTE *)(v21 + 24) = v17;
  v27 = (ValueMetadata *)v20;
  v28 = &off_1005E3F30;
  *(_QWORD *)&v26 = v21;
  sub_1000E85C4(&v26, (uint64_t)v29);
LABEL_13:
  sub_100092328((uint64_t)v29, (uint64_t)v25);
  v27 = &_s21CacheableIconProviderVN;
  v28 = &off_1005F0738;
  v22 = swift_allocObject(&unk_1005F0408, 96, 7);
  *(_QWORD *)&v26 = v22;
  swift_unknownObjectWeakInit(v22 + 16);
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a3;
  *(_QWORD *)(v22 + 40) = a4;
  *(_BYTE *)(v22 + 48) = a5;
  sub_1000E85C4(v25, v22 + 56);
  v23 = a1 + qword_1006510A8;
  swift_beginAccess(a1 + qword_1006510A8, v25, 33, 0);
  sub_1000E4F7C(a2, a3, a4, a5);
  sub_10049419C((uint64_t)&v26, v23);
  swift_endAccess(v25);
  sub_100394218();
  sub_10000CB4C((uint64_t)&v26, &qword_100651B58);
  return sub_100068588(v29);
}

void sub_100492890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

uint64_t sub_1004928E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  double v12;
  id v13;

  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x796C746E65636572, 0xEC00000064657355, 0x6E6F697461636F6CLL, 0xE900000000000073, 0);
  swift_bridgeObjectRelease(0xEC00000064657355);
  v6 = 0;
  if ((v5 & 1) != 0)
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
    if (v7 && *(_BYTE *)(v7 + 16) == 1)
    {
      if (v4 == 1)
      {
        swift_retain();
        sub_1000E4F7C(v3, v2, v0, 1);
        sub_1003DBE60();
        v9 = v8;
        v10 = objc_msgSend(v3, "identifier");
        v11 = sub_100028BE0((uint64_t)v10, v9);

        *(_QWORD *)&v12 = swift_bridgeObjectRelease(v9).n128_u64[0];
        if ((v11 & 1) != 0 || !objc_msgSend(v3, "status", v12))
        {
          sub_1000E4FD0(v3, v2, v0, 1);
          swift_release(v7);
        }
        else
        {
          v13 = objc_msgSend(v3, "status");
          v6 = 1;
          sub_1000E4FD0(v3, v2, v0, 1);
          swift_release(v7);
          if (v13 != (id)2)
            return v6;
        }
      }
      return 2;
    }
    else
    {
      return 0;
    }
  }
  return v6;
}

id sub_100492ACC(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v7 = v6;
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = *(void **)(v7 + 8);
    v17 = *(_QWORD *)(v7 + 16);
    v18 = *(_QWORD *)(v7 + 24);
    v19 = *(_BYTE *)(v7 + 32);
    v20 = sub_100492C50(a3, v16, v17, v18, v19, a4, a5);
    if (v20)
    {
      v21 = v20;
    }
    else
    {
      v22 = (_QWORD *)(v7 + 40);
      v24 = *(_QWORD *)(v7 + 64);
      v23 = *(_QWORD *)(v7 + 72);
      sub_10007E7A0(v22, v24);
      v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, double, double, double))(v23 + 8))(a1, a2, a3, v24, v23, a4, a5, a6);
      sub_100492DD4(v21, v25 & 1, a3, v16, v17, v18, v19, a4, a5);
    }

  }
  else
  {
    if (qword_1006410B0 != -1)
      swift_once(&qword_1006410B0, sub_10039395C);
    return (id)qword_100672D20;
  }
  return v21;
}

id sub_100492C50(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  double v25;
  double v26;
  id v27;
  _BYTE v29[24];

  v15 = (uint64_t *)(v7 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon);
  swift_beginAccess(v15, v29, 0, 0);
  v16 = *v15;
  v17 = *(_QWORD *)(*v15 + 16);
  sub_1000E4F7C(a2, a3, a4, a5);
  v18 = a1;
  swift_bridgeObjectRetain(v16);
  if (v17 && (v19 = sub_100140CE4((uint64_t)a2, a3, a4, a5), (v20 & 1) != 0))
  {
    v21 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v19);
    swift_bridgeObjectRetain(v21);
  }
  else
  {
    v21 = sub_1003F1DC0((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease(v16);
  sub_1000E4FD0(a2, a3, a4, a5);
  if (!*(_QWORD *)(v21 + 16) || (v22 = sub_100140C98((uint64_t)v18), (v23 & 1) == 0))
  {

    swift_bridgeObjectRelease(v21);
    return 0;
  }
  v24 = *(_QWORD *)(v21 + 56) + 32 * v22;
  v26 = *(double *)v24;
  v25 = *(double *)(v24 + 8);
  v27 = *(id *)(v24 + 16);

  swift_bridgeObjectRelease(v21);
  if (v26 != a6 || v25 != a7)
  {

    return 0;
  }
  return v27;
}

void sub_100492DD4(void *a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char a7, double a8, double a9)
{
  uint64_t v9;
  _QWORD *v18;
  id v19;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v18 = (_QWORD *)(v9 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon);
  swift_beginAccess(v9 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon, v39, 33, 0);
  sub_1000E4F7C(a4, a5, a6, a7);
  v19 = a3;
  v35 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v18);
  v21 = *v18;
  v37 = *v18;
  *v18 = 0x8000000000000000;
  v23 = sub_100140CE4((uint64_t)a4, a5, a6, a7);
  v24 = *(_QWORD *)(v21 + 16);
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_10;
  }
  LOBYTE(a3) = v22;
  if (*(_QWORD *)(v21 + 24) >= v26)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
LABEL_10:
    sub_1002E8678();
    v21 = v37;
    goto LABEL_6;
  }
  sub_1002DFD40(v26, isUniquelyReferenced_nonNull_native);
  v21 = v37;
  v27 = sub_100140CE4((uint64_t)a4, a5, a6, a7);
  if ((a3 & 1) != (v28 & 1))
  {
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCSidebarItem);
    __break(1u);
    return;
  }
  v23 = v27;
LABEL_6:
  v29 = *v18;
  *v18 = v21;
  swift_bridgeObjectRelease(v29);
  v30 = (_QWORD *)*v18;
  swift_bridgeObjectRetain(*v18);
  if ((a3 & 1) == 0)
  {
    v31 = sub_1003F1DC0((uint64_t)_swiftEmptyArrayStorage);
    sub_1003588B0(v23, (uint64_t)a4, a5, a6, a7, v31, v30);
    sub_1000E4F7C(a4, a5, a6, a7);
  }
  v32 = v30[7];
  swift_bridgeObjectRelease(v30);
  v33 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v32 + 8 * v23));
  v38 = *(_QWORD *)(v32 + 8 * v23);
  *(_QWORD *)(v32 + 8 * v23) = 0x8000000000000000;
  sub_100356FBC((uint64_t)v35, a2 & 1, v19, v33, a8, a9);
  v34 = *(_QWORD *)(v32 + 8 * v23);
  *(_QWORD *)(v32 + 8 * v23) = v38;

  swift_bridgeObjectRelease(v34);
  swift_endAccess(v39);
  sub_1000E4FD0(a4, a5, a6, a7);
}

void sub_100493024(int a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::OpaquePointer v10;
  _QWORD v11[5];
  char v12;
  _QWORD v13[5];
  char v14;
  _QWORD v15[6];

  sub_100491C14((uint64_t)v13);
  v2 = v13[0];
  v3 = v13[1];
  v4 = (void *)v13[2];
  v5 = v13[3];
  v6 = v13[4];
  v7 = v14;
  sub_100070EDC((uint64_t)v13, (uint64_t)v15, &qword_100652EC0);
  if (v15[0])
  {
    v11[0] = v2;
    v11[1] = v3;
    v11[2] = v4;
    v11[3] = v5;
    v11[4] = v6;
    v12 = v7;
    v8 = sub_10006922C(&qword_100657830);
    if (((NSDiffableDataSourceSectionSnapshot.isExpanded(_:)(v11, v8) ^ a1) & 1) != 0)
    {
      v9 = sub_10006922C(&qword_100644CD0);
      v10._rawValue = (void *)swift_allocObject(v9, 80, 7);
      *((_OWORD *)v10._rawValue + 1) = xmmword_1004D9670;
      *((_QWORD *)v10._rawValue + 4) = v2;
      *((_QWORD *)v10._rawValue + 5) = v3;
      *((_QWORD *)v10._rawValue + 6) = v4;
      *((_QWORD *)v10._rawValue + 7) = v5;
      *((_QWORD *)v10._rawValue + 8) = v6;
      *((_BYTE *)v10._rawValue + 72) = v7;
      swift_unknownObjectRetain(v2);
      sub_1000B1650(v4, v5, v6, v7);
      if ((a1 & 1) != 0)
        NSDiffableDataSourceSectionSnapshot.expand(_:)(v10);
      else
        NSDiffableDataSourceSectionSnapshot.collapse(_:)(v10);
      swift_unknownObjectRelease(v2);
      swift_bridgeObjectRelease(v10._rawValue);
    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
    sub_1000B1664(v4, v5, v6, v7);
  }
}

uint64_t _s6XCTestCMa()
{
  return objc_opt_self(_TtCC5Files24DOCSidebarViewController6XCTest);
}

uint64_t sub_10049318C(uint64_t a1)
{
  uint64_t v1;

  return sub_1003956F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100493194(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  int v8;
  int v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v25;

  v4 = *a1;
  v5 = *a2;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(id *)(v5 + 24);
  LOBYTE(v6) = static NSObject.== infix(_:_:)(v6, v7);

  if ((v6 & 1) != 0)
  {
    v8 = *((unsigned __int8 *)a1 + 40);
    v9 = *((unsigned __int8 *)a2 + 40);
    v10 = (v8 & v9) == 255;
    if (v8 != 255 && v9 != 255)
    {
      v11 = (void *)a1[2];
      v12 = a1[3];
      v13 = a1[4];
      v15 = (void *)a2[2];
      v14 = a2[3];
      v16 = a2[4];
      sub_1000B1650(v11, v12, v13, v8);
      sub_1000B1650(v11, v12, v13, v8);
      sub_1000B1650(v15, v14, v16, v9);
      sub_100200624((uint64_t)v11, v12, v13, v8);
      v18 = v17;
      v20 = v19;
      v25 = v15;
      sub_100200624((uint64_t)v15, v14, v16, v9);
      v23 = v22;
      if (v18 == v21 && v20 == v22)
      {
        v10 = 1;
        v23 = v20;
      }
      else
      {
        v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
      }
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v23);
      sub_1000B1664(v25, v14, v16, v9);
      sub_1000B1664(v11, v12, v13, v8);
      sub_1000B1664(v11, v12, v13, v8);
    }
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

void sub_100493360(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  __int128 *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unsigned __int8 *v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  __int128 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return;
  v3 = a2;
  v4 = 0;
  v38 = a1 + 32;
  v5 = _swiftEmptyArrayStorage;
  v36 = (unsigned __int8 *)(a2 + 72);
  v34 = *(_QWORD *)(a1 + 16);
  while (1)
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v39 = v5;
    v37 = v6;
LABEL_7:
    if (v4 == v6)
    {
      __break(1u);
      return;
    }
    v7 = (__int128 *)(v38 + 48 * v4);
    v9 = (void *)*((_QWORD *)v7 + 2);
    v8 = *((_QWORD *)v7 + 3);
    v10 = *((_QWORD *)v7 + 4);
    v11 = *((unsigned __int8 *)v7 + 40);
    v40 = v4 + 1;
    v12 = *(_QWORD *)(v3 + 16);
    v43 = v8;
    v44 = v10;
    v41 = *v7;
    if (v12)
      break;
    swift_unknownObjectRetain(*(_QWORD *)v7);
    sub_1000B1650(v9, v8, v10, v11);
    v4 = v40;
LABEL_27:
    if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      sub_1001551A4(0, v5[2] + 1, 1);
    v30 = v41;
    v32 = v5[2];
    v31 = v5[3];
    if (v32 >= v31 >> 1)
    {
      sub_1001551A4(v31 > 1, v32 + 1, 1);
      v30 = v41;
    }
    v5[2] = v32 + 1;
    v33 = &v5[6 * v32];
    *((_OWORD *)v33 + 2) = v30;
    v33[6] = v9;
    v33[7] = v43;
    v33[8] = v44;
    *((_BYTE *)v33 + 72) = v11;
    if (v4 == v2)
      return;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v48 = *(void **)(v41 + 24);
  swift_unknownObjectRetain(v41);
  v42 = v9;
  v45 = v11;
  sub_1000B1650(v9, v8, v10, v11);
  swift_bridgeObjectRetain(v3);
  v13 = v36;
  while (1)
  {
    v49 = v12;
    v15 = *((_QWORD *)v13 - 5);
    v16 = (void *)*((_QWORD *)v13 - 3);
    v17 = *((_QWORD *)v13 - 2);
    v18 = *((_QWORD *)v13 - 1);
    v19 = *v13;
    v20 = *(_QWORD *)(v15 + 24);
    swift_unknownObjectRetain(v15);
    sub_1000B1650(v16, v17, v18, v19);
    v21 = v48;
    LOBYTE(v20) = static NSObject.== infix(_:_:)(v20, v21);

    if ((v20 & 1) == 0)
    {
LABEL_18:
      swift_unknownObjectRelease(v15);
      sub_1000B1664(v16, v17, v18, v19);
      goto LABEL_11;
    }
    v46 = v16;
    v47 = v18;
    if (v19 == 255)
      break;
    if (v45 == 255)
      goto LABEL_18;
    sub_1000B1650(v16, v17, v18, v19);
    sub_1000B1650(v42, v43, v44, v45);
    sub_1000B1650(v16, v17, v18, v19);
    sub_100200624((uint64_t)v16, v17, v18, v19);
    v23 = v22;
    v25 = v24;
    sub_100200624((uint64_t)v42, v43, v44, v45);
    v28 = v27;
    if (v23 == v26 && v25 == v27)
    {
      swift_bridgeObjectRelease_n(v25, 2);
      sub_1000B1664(v42, v43, v44, v45);
      sub_1000B1664(v46, v17, v47, v19);
      sub_1000B1664(v46, v17, v47, v19);
      swift_unknownObjectRelease(v15);
      sub_1000B1664(v46, v17, v47, v19);
LABEL_22:
      swift_unknownObjectRelease(v41);
      v3 = a2;
      swift_bridgeObjectRelease(a2);
      v29 = v45;
      goto LABEL_24;
    }
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v26, v27, 0);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v28);
    sub_1000B1664(v42, v43, v44, v45);
    sub_1000B1664(v46, v17, v47, v19);
    sub_1000B1664(v46, v17, v47, v19);
    swift_unknownObjectRelease(v15);
    sub_1000B1664(v46, v17, v47, v19);
    if ((v14 & 1) != 0)
      goto LABEL_22;
LABEL_11:
    v13 += 48;
    v12 = v49 - 1;
    if (v49 == 1)
    {
      v3 = a2;
      swift_bridgeObjectRelease(a2);
      v2 = v34;
      v5 = v39;
      v4 = v40;
      LOBYTE(v11) = v45;
      v9 = v42;
      goto LABEL_27;
    }
  }
  v29 = v45;
  if (v45 != 255)
  {
    swift_unknownObjectRelease(v15);
    goto LABEL_11;
  }
  swift_unknownObjectRelease(v41);
  v3 = a2;
  swift_bridgeObjectRelease(a2);
  swift_unknownObjectRelease(v15);
LABEL_24:
  sub_1000B1664(v42, v43, v44, v29);
  v2 = v34;
  v5 = v39;
  v4 = v40;
  v6 = v37;
  if (v40 != v34)
    goto LABEL_7;
}

_QWORD *sub_100493828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v5)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1001551A4(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
      break;
    v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      swift_unknownObjectRetain(a2);
      if (v11 >= v10 >> 1)
        sub_1001551A4(v10 > 1, v11 + 1, 1);
      ++v7;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[6 * v11];
      v12[4] = a2;
      v12[5] = a3;
      v12[7] = 0;
      v12[8] = 0;
      v12[6] = v9;
      *((_BYTE *)v12 + 72) = 0;
      if (v5 == v7)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

_QWORD *sub_100493994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  int64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1001551A4(0, v3, 0);
    v6 = (char *)(a1 + 56);
    do
    {
      v7 = (void *)*((_QWORD *)v6 - 3);
      v8 = *((_QWORD *)v6 - 2);
      v9 = *((_QWORD *)v6 - 1);
      v10 = *v6;
      sub_1000E4F7C(v7, v8, v9, *v6);
      v11 = a2;
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      v17 = v13 + 1;
      swift_unknownObjectRetain(v11);
      if (v13 >= v12 >> 1)
        sub_1001551A4(v12 > 1, v17, 1);
      v6 += 32;
      _swiftEmptyArrayStorage[2] = v17;
      v14 = &_swiftEmptyArrayStorage[6 * v13];
      v14[4] = v11;
      v14[5] = a3;
      v14[6] = v7;
      v14[7] = v8;
      v14[8] = v9;
      *((_BYTE *)v14 + 72) = v10;
      --v3;
      a2 = v11;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100493AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    a2 = *(_QWORD *)(a2 + 24);
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_19;
LABEL_9:
      v10 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v10 == v5 && v11 == a2)
      {
        swift_bridgeObjectRelease(a1);
        swift_release(v8);
        return 1;
      }
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v5, a2, 0);
      swift_release(v8);
      if ((v13 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return 1;
      }
      ++v6;
      if (v9 == v4)
        goto LABEL_24;
    }
    v8 = *(_QWORD *)(a1 + 8 * v6);
    swift_retain(v8);
    v9 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_9;
LABEL_19:
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
LABEL_24:
  swift_bridgeObjectRelease(a1);
  return 0;
}

double sub_100493C0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  void *v19;
  char v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  id v35;
  double result;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[24];
  void *v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  _QWORD v50[5];
  char v51;

  v42 = sub_10006922C(&qword_100657830);
  v41 = *(_QWORD *)(v42 - 8);
  v8 = __chkstk_darwin(v42);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v12 = &v37[-v11];
  v39 = a3;
  v13 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v13 && *(_BYTE *)(v13 + 17) == 2)
  {
    swift_beginAccess(a1 + 88, v49, 0, 0);
    v14 = *(_QWORD **)(a1 + 88);
    swift_unknownObjectRetain(a1);
    swift_bridgeObjectRetain(v14);
  }
  else
  {
    swift_beginAccess(a1 + 88, v49, 0, 0);
    v15 = *(_QWORD *)(a1 + 88);
    swift_unknownObjectRetain(a1);
    v16 = swift_bridgeObjectRetain(v15);
    v14 = sub_10023B9F8(v16);
    swift_bridgeObjectRelease(v15);
  }
  swift_unknownObjectRetain(a1);
  v17 = sub_100493994((uint64_t)v14, a1, a2);
  swift_bridgeObjectRelease(v14);
  swift_unknownObjectRelease(a1);
  v18 = *(_BYTE *)(a1 + 73) == 1;
  v40 = a2;
  if (v18)
  {
    v21 = *(unsigned __int8 *)(a1 + 48);
    swift_unknownObjectRetain(a1);
    v20 = -1;
    v19 = (void *)a1;
  }
  else
  {
    v19 = 0;
    a2 = 0;
    v20 = 0;
    v21 = 1;
  }
  v50[0] = v19;
  v50[1] = a2;
  memset(&v50[2], 0, 24);
  v51 = v20;
  v22 = sub_1000A6A40();
  NSDiffableDataSourceSectionSnapshot.init()(&_s11OutlineItemVN, v22);
  if (!v17[2])
  {
    swift_bridgeObjectRelease(v17);
    goto LABEL_18;
  }
  v38 = v21;
  v23 = v39 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v39 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, v43, 0, 0);
  sub_1000271D4(v23, (uint64_t)&v46, &qword_100642730);
  if (!v48)
  {
    sub_10000CB4C((uint64_t)&v46, &qword_100642730);
    goto LABEL_14;
  }
  v24 = sub_10006922C((uint64_t *)&unk_1006455F0);
  if ((swift_dynamicCast(v45, &v46, (char *)&type metadata for Any + 8, v24, 6) & 1) == 0)
  {
LABEL_14:
    if (qword_1006411E8 != -1)
      swift_once(&qword_1006411E8, sub_1000A3F70);
    v25 = a4;
    v26 = (id)qword_100657778;
    goto LABEL_17;
  }
  v25 = a4;
  v26 = (id)v45[0];
LABEL_17:
  v46 = a1;
  v47 = v40;
  UICollectionViewDiffableDataSource.snapshot(for:)(&v46);

  v27 = v41;
  v28 = v42;
  (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v12, v42);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 32))(v12, v10, v28);
  sub_1004941E4(v19, a2, 0, 0, 0, v20);
  sub_1004917E0((uint64_t)v50, v38, (uint64_t)v17);
  swift_bridgeObjectRelease(v17);
  sub_1003E6D3C((uint64_t)v19, a2, 0, 0, 0, v20);
  a4 = v25;
LABEL_18:
  v29 = v39;
  v30 = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v39 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, &v46, 33, 0);
  sub_100445028(v30);
  swift_endAccess(&v46);
  v31 = v29 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v29 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, v45, 0, 0);
  sub_1000271D4(v31, (uint64_t)&v46, &qword_100642730);
  if (v48)
  {
    v32 = sub_10006922C((uint64_t *)&unk_1006455F0);
    v33 = swift_dynamicCast(&v44, &v46, (char *)&type metadata for Any + 8, v32, 6);
    v34 = &qword_100641000;
    if ((v33 & 1) != 0)
    {
      v35 = v44;
      goto LABEL_25;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)&v46, &qword_100642730);
    v34 = &qword_100641000;
  }
  if (v34[61] != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v35 = (id)qword_100657778;
LABEL_25:
  v46 = a1;
  v47 = v40;
  UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)(v12, &v46, a4 & 1, 0, 0);

  sub_1003E6D3C((uint64_t)v19, a2, 0, 0, 0, v20);
  (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v12, v42);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

id sub_1004940F0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isEjectable");
  *a2 = (_BYTE)result;
  return result;
}

id sub_100494120(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setIsEjectable:", *a1);
}

uint64_t sub_100494134()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100494158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100260F98(a1, a2, v2);
}

uint64_t sub_100494160()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  sub_1000E4FD0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  sub_100068588((_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10049419C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100651B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_1004941E4(id result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result)
  {
    swift_unknownObjectRetain(result);
    return sub_1000B1650(a3, a4, a5, a6);
  }
  return result;
}

uint64_t sub_100494230(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

void sub_100494268(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10048FCA8(a1, a2, a3, v3);
}

double sub_100494270(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1004908F4(a1, a2, a3, v3);
}

uint64_t sub_100494278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_10006922C(&qword_100657840);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_10006922C(&qword_100657848);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100494334(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(sub_10006922C(&qword_100657840) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_10006922C(&qword_100657848) - 8) + 80);
  return sub_100490980(a1, a2, a3, v3 + v8, v3 + ((v8 + v9 + v10) & ~v10));
}

uint64_t sub_1004943BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004943E0(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, __int128 *);
  __int128 v5;
  __int128 v7;
  _OWORD v8[2];

  v4 = *(uint64_t (**)(uint64_t, uint64_t, __int128 *))(v3 + 16);
  v5 = a3[1];
  v7 = *a3;
  v8[0] = v5;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a3 + 25);
  return v4(a1, a2, &v7);
}

uint64_t sub_10049441C(uint64_t *a1)
{
  uint64_t v1;

  return sub_100490AD8(a1, v1, 1) & 1;
}

uint64_t sub_10049443C(uint64_t *a1)
{
  uint64_t v1;

  return sub_100490AD8(a1, v1, 0) & 1;
}

uint64_t sub_10049445C(__int128 *a1)
{
  uint64_t v1;

  return sub_100490C5C(a1, v1, (uint64_t)&unk_1005F0520, (uint64_t)sub_100494534, (uint64_t)&unk_1005F0538);
}

uint64_t sub_10049448C(__int128 *a1)
{
  uint64_t v1;

  return sub_100490C5C(a1, v1, (uint64_t)&unk_1005F04D0, (uint64_t)sub_1004944E0, (uint64_t)&unk_1005F04E8);
}

uint64_t sub_1004944BC(uint64_t *a1)
{
  uint64_t v1;

  return sub_100490FA8(a1, v1);
}

void sub_1004944C4(uint64_t a1)
{
  uint64_t v1;

  sub_10049108C(a1, v1);
}

uint64_t sub_1004944CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004944E0()
{
  uint64_t v0;

  sub_100490EB8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004944F0()
{
  uint64_t v0;
  int v1;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 != 255)
    sub_1000E4FD0(*(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v1);
  return swift_deallocObject(v0, 65, 7);
}

void sub_100494534()
{
  uint64_t v0;

  sub_100490B58(*(_QWORD *)(v0 + 16));
}

id sub_100494540(uint64_t a1)
{
  uint64_t v1;

  return sub_100492250(a1, v1);
}

void sub_100494548()
{
  uint64_t v0;

  sub_1004925B0(v0, sub_1002A4AD8);
}

void sub_100494568()
{
  uint64_t v0;

  sub_1004925B0(v0, sub_1002A4BC4);
}

void sub_100494588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  _QWORD *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  BOOL v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v73;

  v5 = *(_QWORD **)a1;
  v67 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v67)
  {
    swift_bridgeObjectRetain(v5);
    v6 = 0;
    v7 = 0;
    while (1)
    {
      v73 = v7;
      v8 = v5;
      v9 = &v5[v6];
      v10 = (void *)v5[v6 + 4];
      v11 = v9[5];
      v12 = v9[6];
      v13 = *((_BYTE *)v9 + 56);
      sub_1000E4F7C(v10, v11, v12, v13);
      sub_100200624((uint64_t)v10, v11, v12, v13);
      v15 = v14;
      v17 = v16;
      sub_100200624(a2, a3, a4, a5);
      if (v15 == v18 && v17 == v19)
        break;
      v21 = v19;
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v21);
      sub_1000E4FD0(v10, v11, v12, v13);
      if ((v22 & 1) != 0)
        goto LABEL_12;
      v7 = v73 + 1;
      v6 += 4;
      v5 = v8;
      if (v67 == v73 + 1)
      {
        swift_bridgeObjectRelease(v8);
        return;
      }
    }
    swift_bridgeObjectRelease_n(v17, 2);
    sub_1000E4FD0(v10, v11, v12, v13);
LABEL_12:
    v23 = v8;
    swift_bridgeObjectRelease(v8);
    v24 = v73 + 1;
    if (!__OFADD__(v73, 1))
    {
      v25 = v8[2];
      while (1)
      {
        if (v24 == v25)
          return;
        if (v24 >= v25)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        v66 = v24;
        v68 = v23;
        v27 = &v23[v6];
        v28 = (void *)v23[v6 + 8];
        v29 = v23[v6 + 9];
        v30 = v23[v6 + 10];
        v31 = v23[v6 + 11];
        sub_1000E4F7C(v28, v29, v30, v31);
        sub_100200624((uint64_t)v28, v29, v30, v31);
        v33 = v32;
        v35 = v34;
        sub_100200624(a2, a3, a4, a5);
        if (v33 == v36 && v35 == v37)
          break;
        v39 = v37;
        v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, v36, v37, 0);
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v39);
        sub_1000E4FD0(v28, v29, v30, v31);
        if ((v40 & 1) != 0)
          goto LABEL_15;
        v41 = v73;
        v26 = v66;
        v23 = v68;
        if (v66 != v73)
        {
          if ((v73 & 0x8000000000000000) != 0)
            goto LABEL_36;
          v42 = v68[2];
          if (v73 >= v42)
            goto LABEL_37;
          if (v66 >= v42)
            goto LABEL_38;
          v43 = 4 * v73;
          v44 = (uint64_t)&v68[4 * v73 + 4];
          v45 = (void *)v27[8];
          v46 = v27[9];
          v47 = v27[10];
          v48 = *((_BYTE *)v27 + 88);
          v49 = *(_BYTE *)(v44 + 24);
          v63 = *(_QWORD *)(v44 + 8);
          v64 = *(id *)v44;
          v62 = *(_QWORD *)(v44 + 16);
          sub_1000E4F7C(*(id *)v44, v63, v62, v49);
          sub_1000E4F7C(v45, v46, v47, v48);
          if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
            v23 = sub_100452BF4(v68);
          v50 = &v23[v43];
          v51 = (void *)v23[v43 + 4];
          v52 = v23[v43 + 5];
          v53 = v23[v43 + 6];
          v50[4] = v45;
          v50[5] = v46;
          v50[6] = v47;
          v54 = v23[v43 + 7];
          *((_BYTE *)v50 + 56) = v48;
          sub_1000E4FD0(v51, v52, v53, v54);
          if (v66 >= v23[2])
            goto LABEL_39;
          v55 = &v23[v6];
          v56 = (void *)v23[v6 + 8];
          v57 = v23[v6 + 9];
          v58 = v23[v6 + 10];
          v55[8] = v64;
          v55[9] = v63;
          v55[10] = v62;
          v59 = v23[v6 + 11];
          *((_BYTE *)v55 + 88) = v49;
          sub_1000E4FD0(v56, v57, v58, v59);
          *(_QWORD *)a1 = v23;
          v41 = v73;
        }
        v60 = __OFADD__(v41, 1);
        v61 = v41 + 1;
        if (v60)
          goto LABEL_35;
        v73 = v61;
LABEL_16:
        v24 = v26 + 1;
        v25 = v23[2];
        v6 += 4;
      }
      swift_bridgeObjectRelease_n(v35, 2);
      sub_1000E4FD0(v28, v29, v30, v31);
LABEL_15:
      v26 = v66;
      v23 = v68;
      goto LABEL_16;
    }
LABEL_40:
    __break(1u);
  }
}

void _s11OutlineItemVwxx(uint64_t a1)
{
  int v2;

  swift_unknownObjectRelease(*(_QWORD *)a1);
  v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 != 255)
    sub_1000E4FD0(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), v2);
}

uint64_t _s11OutlineItemVwcp(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  _OWORD *v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  v5 = (_OWORD *)(a1 + 16);
  v6 = *((unsigned __int8 *)a2 + 40);
  swift_unknownObjectRetain(v4);
  if (v6 == 255)
  {
    *v5 = a2[1];
    *(_OWORD *)((char *)v5 + 9) = *(__int128 *)((char *)a2 + 25);
  }
  else
  {
    v7 = (void *)*((_QWORD *)a2 + 2);
    v8 = *((_QWORD *)a2 + 3);
    v9 = *((_QWORD *)a2 + 4);
    sub_1000E4F7C(v7, v8, v9, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t *_s11OutlineItemVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = (__int128 *)(a1 + 2);
  v8 = (__int128 *)(a2 + 2);
  v9 = *((unsigned __int8 *)a2 + 40);
  if (*((unsigned __int8 *)a1 + 40) == 255)
  {
    if (v9 == 255)
    {
      v21 = *v8;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      *v7 = v21;
    }
    else
    {
      v17 = (void *)a2[2];
      v18 = a2[3];
      v19 = a2[4];
      sub_1000E4F7C(v17, v18, v19, v9);
      a1[2] = (uint64_t)v17;
      a1[3] = v18;
      a1[4] = v19;
      *((_BYTE *)a1 + 40) = v9;
    }
  }
  else if (v9 == 255)
  {
    sub_100494B14((uint64_t)(a1 + 2));
    v20 = *(_OWORD *)((char *)a2 + 25);
    *v7 = *v8;
    *(_OWORD *)((char *)a1 + 25) = v20;
  }
  else
  {
    v10 = (void *)a2[2];
    v11 = a2[3];
    v12 = a2[4];
    sub_1000E4F7C(v10, v11, v12, v9);
    v13 = (void *)a1[2];
    v14 = a1[3];
    v15 = a1[4];
    a1[2] = (uint64_t)v10;
    a1[3] = v11;
    a1[4] = v12;
    v16 = *((_BYTE *)a1 + 40);
    *((_BYTE *)a1 + 40) = v9;
    sub_1000E4FD0(v13, v14, v15, v16);
  }
  return a1;
}

uint64_t sub_100494B14(uint64_t a1)
{
  destroy for DOCSidebarItem(a1);
  return a1;
}

uint64_t *_s11OutlineItemVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  v6 = *((unsigned __int8 *)a1 + 40);
  if (v6 == 255)
    goto LABEL_5;
  v7 = *((unsigned __int8 *)a2 + 40);
  if (v7 == 255)
  {
    sub_100494B14((uint64_t)(a1 + 2));
LABEL_5:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
    return a1;
  }
  v8 = a2[4];
  v9 = (void *)a1[2];
  v10 = a1[3];
  v11 = a1[4];
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  a1[4] = v8;
  *((_BYTE *)a1 + 40) = v7;
  sub_1000E4FD0(v9, v10, v11, v6);
  return a1;
}

uint64_t _s11OutlineItemVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11OutlineItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t *_s14OutlineSectionVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  return a1;
}

_QWORD *_s14OutlineSectionVwta(_QWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *a2;
  return a1;
}

uint64_t _s21CacheableIconProviderVwxx(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  sub_1000E4FD0(*(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return sub_100068588((_QWORD *)(a1 + 40));
}

uint64_t _s21CacheableIconProviderVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  swift_unknownObjectWeakCopyInit();
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1000E4F7C(v4, v5, v6, v7);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t _s21CacheableIconProviderVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  swift_unknownObjectWeakCopyAssign(a1, a2);
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1000E4F7C(v4, v5, v6, v7);
  v8 = *(void **)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v11 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1000E4FD0(v8, v9, v10, v11);
  sub_10025C2AC((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  return a1;
}

__n128 _s21CacheableIconProviderVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;

  v3 = swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  result = *(__n128 *)(a2 + 56);
  *(__n128 *)(v3 + 56) = result;
  *(_QWORD *)(v3 + 72) = *(_QWORD *)(a2 + 72);
  return result;
}

uint64_t _s21CacheableIconProviderVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(void **)(v4 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_1000E4FD0(v7, v8, v9, v10);
  sub_100068588((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

ValueMetadata *_s21CacheableIconProviderVMa()
{
  return &_s21CacheableIconProviderVN;
}

_QWORD *Array<A>.orderedChronologically(oldestFirst:)(char a1, uint64_t a2)
{
  return sub_100494F98(a2, a1);
}

uint64_t Array<A>.orderedChronologically(oldestFirst:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = sub_10006922C((uint64_t *)&unk_100644350);
  v7 = _arrayForceCast<A, B>(_:)(a2, a3, v6);
  v8 = sub_100494F98(v7, a1);
  swift_bridgeObjectRelease(v7);
  v9 = _arrayForceCast<A, B>(_:)(v8, v6, a3);
  swift_bridgeObjectRelease(v8);
  return v9;
}

_QWORD *sub_100494F98(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v10;
  __int128 v11[3];

  *(_QWORD *)&v11[0] = a1;
  swift_bridgeObjectRetain(a1);
  sub_1004499E4(v11);
  v3 = *(_QWORD **)&v11[0];
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(*(_QWORD *)&v11[0] + 16);
    if (v4)
    {
      v5 = v4 - 1;
      if (v4 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v11[0]) & 1) == 0)
          goto LABEL_17;
        while (1)
        {
          v7 = v3 + 4;
          v4 = (uint64_t)&v3[5 * v4 - 1];
          v8 = 1;
          while (1)
          {
            if (v8 - 1 == v5)
              goto LABEL_7;
            v10 = v3[2];
            if (v8 - 1 >= v10)
              break;
            sub_100092328((uint64_t)v7, (uint64_t)v11);
            if (v5 >= v10)
              goto LABEL_15;
            sub_10025C2AC(v7, (_QWORD *)v4);
            if (v5 >= v3[2])
              goto LABEL_16;
            sub_100068588((_QWORD *)v4);
            sub_1000E85C4(v11, v4);
LABEL_7:
            --v5;
            v4 -= 40;
            v7 += 5;
            if (v8++ >= (uint64_t)v5)
              return v3;
          }
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
LABEL_17:
          v3 = sub_100452EBC(v3);
        }
      }
    }
  }
  return v3;
}

uint64_t sub_1004950C4(uint64_t result)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v3 = result;
  if (!((unint64_t)result >> 62))
  {
    if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  if (result < 0)
    v11 = result;
  else
    v11 = result & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(result);
  v12 = _CocoaArrayWrapper.endIndex.getter(v11);
  result = swift_bridgeObjectRelease(v3);
  if (!v12)
    goto LABEL_14;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(_QWORD *)(v3 + 32);
    swift_unknownObjectRetain(v4);
LABEL_6:
    ObjectType = swift_getObjectType(v4, v5);
    v7 = (void *)DOCNode.sourceIdentifier.getter(ObjectType);
    if ((v3 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(v3);
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v8 = *(_QWORD *)(v3 + 32);
      swift_unknownObjectRetain(v8);
    }
    v9 = (char *)objc_msgSend(objc_allocWithZone(v2), "initWithSourceIdentifier:node:", v7, v8);
    swift_unknownObjectRelease(v8);
    swift_unknownObjectRelease(v4);

    v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCConcreteSelectionLocation_selectedNodes];
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCConcreteSelectionLocation_selectedNodes] = v3;
    swift_bridgeObjectRelease(v10);
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

id sub_100495418()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCConcreteSelectionLocation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCConcreteSelectionLocation()
{
  return objc_opt_self(_TtC5Files28DOCConcreteSelectionLocation);
}

void UITableView.doc_scrollToItemIfNeeded(at:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  Class isa;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  CGFloat v46;
  CGFloat v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = IndexPath.section.getter(v8);
  v10 = objc_msgSend(v2, "numberOfSections");
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v9 >= (uint64_t)v10)
  {
    v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_6;
  }
  v12 = IndexPath.item.getter(v11);
  v13 = objc_msgSend(v2, "numberOfRowsInSection:", IndexPath.section.getter(v12));
  v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v12 >= (uint64_t)v13)
  {
LABEL_6:
    v37 = static os_log_type_t.error.getter(v14);
    v38 = sub_10006922C((uint64_t *)&unk_100644560);
    v39 = swift_allocObject(v38, 72, 7);
    *(_OWORD *)(v39 + 16) = xmmword_1004D9670;
    v40 = sub_1000E9B60();
    v41 = dispatch thunk of CustomStringConvertible.description.getter(v4, v40);
    v43 = v42;
    *(_QWORD *)(v39 + 56) = &type metadata for String;
    *(_QWORD *)(v39 + 64) = sub_10006A638();
    *(_QWORD *)(v39 + 32) = v41;
    *(_QWORD *)(v39 + 40) = v43;
    v44 = sub_10015E0B8();
    v45 = (void *)static OS_os_log.default.getter(v44);
    os_log(_:dso:log:type:_:)("Unable to determine frame of row for item at index beyond bounds: %@", 68, 2, &_mh_execute_header, v45, v37, v39);
    swift_bridgeObjectRelease(v39);

    return;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "rectForRowAtIndexPath:", isa);
  v46 = v17;
  v47 = v16;
  v19 = v18;
  v21 = v20;

  objc_msgSend(v2, "_effectiveContentInset");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  objc_msgSend(v2, "contentOffset");
  v31 = v25 + v30;
  objc_msgSend(v2, "contentOffset");
  v33 = v23 + v32;
  objc_msgSend(v2, "bounds");
  v34 = CGRectGetWidth(v48) - v25 - v29;
  objc_msgSend(v2, "bounds");
  v50.size.height = CGRectGetHeight(v49) - v23 - v27;
  v50.origin.x = v31;
  v50.origin.y = v33;
  v36 = v46;
  v35 = v47;
  v50.size.width = v34;
  v51.origin.x = v47;
  v51.origin.y = v46;
  v51.size.width = v19;
  v51.size.height = v21;
  if (!CGRectContainsRect(v50, v51))
    objc_msgSend(v2, "scrollRectToVisible:animated:", 0, v35, v36, v19, v21);
}

void DOCProgressProvidingOperationIconType.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100348154(v2, (uint64_t)v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v12 = *v10;
      v13 = v10[1];
      Hasher._combine(_:)(2uLL);
      String.hash(into:)(a1, v12, v13);
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    v14 = sub_10005A360((unint64_t *)&unk_10064D9C0, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int DOCProgressProvidingOperationIconType.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  DOCProgressProvidingOperationIconType.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1004958E4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  DOCProgressProvidingOperationIconType.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t _s5Files37DOCProgressProvidingOperationIconTypeO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - v12;
  v14 = sub_10006922C((uint64_t *)&unk_100657970);
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v16[*(int *)(v17 + 48)];
  sub_100348154(a1, (uint64_t)v16);
  sub_100348154(a2, (uint64_t)v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v8);
  if (!EnumCaseMultiPayload)
  {
    sub_100348154((uint64_t)v16, (uint64_t)v13);
    if (!swift_getEnumCaseMultiPayload(v18, v8))
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
      v25 = static UTType.== infix(_:_:)(v13, v7);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v7, v4);
      v26(v13, v4);
      sub_100348714((uint64_t)v16);
      return v25 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload(v18, v8) == 2)
      goto LABEL_19;
LABEL_15:
    sub_100495F8C((uint64_t)v16);
    goto LABEL_16;
  }
  sub_100348154((uint64_t)v16, (uint64_t)v10);
  v21 = *v10;
  v20 = v10[1];
  if (swift_getEnumCaseMultiPayload(v18, v8) != 1)
  {
    swift_bridgeObjectRelease(v20);
    goto LABEL_15;
  }
  v22 = *((_QWORD *)v18 + 1);
  if (v21 == *(_QWORD *)v18 && v20 == v22)
  {
    swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_19;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, *(_QWORD *)v18, *((_QWORD *)v18 + 1), 0);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v20);
  if ((v24 & 1) != 0)
  {
LABEL_19:
    sub_100348714((uint64_t)v16);
    v25 = 1;
    return v25 & 1;
  }
  sub_100348714((uint64_t)v16);
LABEL_16:
  v25 = 0;
  return v25 & 1;
}

uint64_t sub_100495B90()
{
  return sub_10005A360(&qword_1006578C0, type metadata accessor for DOCProgressProvidingOperationIconType, (uint64_t)&protocol conformance descriptor for DOCProgressProvidingOperationIconType);
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCProgressProvidingOperationIconType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain(v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for UTType(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t destroy for DOCProgressProvidingOperationIconType(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for UTType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for DOCProgressProvidingOperationIconType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain(v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for UTType(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_QWORD *assignWithCopy for DOCProgressProvidingOperationIconType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_100348714((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v8 = a2[1];
      a1[1] = v8;
      swift_bridgeObjectRetain(v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for UTType(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *initializeWithTake for DOCProgressProvidingOperationIconType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for UTType(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *assignWithTake for DOCProgressProvidingOperationIconType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_100348714((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for UTType(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100495F8C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C((uint64_t *)&unk_100657970);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_100495FCC(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v11;
  uint64_t v12;

  v11 = objc_allocWithZone(v5);
  return sub_100497280(a1, v12, a2, a3, a4, a5);
}

void sub_10049602C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[5];
  uint64_t v9;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1005F0A90, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_1005F0AB8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10049E5A8;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_10010DB64;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10006655C;
  v8[3] = &unk_1005F0AD0;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 131, 27, 40, 1);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

id sub_100496160(char *a1)
{
  id result;
  char *v3;
  void (*v4)(__n128);
  uint64_t v5;
  __n128 v6;
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for DOCNotifyingStackView();
  result = objc_msgSendSuper2(&v7, "layoutSubviews");
  v3 = &a1[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews];
  v4 = *(void (**)(__n128))&a1[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews];
  if (v4)
  {
    v5 = *((_QWORD *)v3 + 1);
    v6 = swift_retain();
    v4(v6);
    return (id)sub_100087534((uint64_t)v4, v5);
  }
  return result;
}

id sub_1004962E4()
{
  return sub_1001405E0(0, type metadata accessor for DOCNotifyingStackView);
}

uint64_t type metadata accessor for DOCNotifyingStackView()
{
  return objc_opt_self(_TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView);
}

void *sub_100496328()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  v2 = v1;
  return v1;
}

void sub_100496354(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden) = a1;
  v3 = sub_10049639C();
  objc_msgSend(v3, "setHidden:", *(unsigned __int8 *)(v1 + v2));

}

id sub_10049639C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
    objc_msgSend(v4, "setAccessibilityIgnoresInvertColors:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1004964E4()
{
  char *v0;
  char *v1;
  void **v2;
  void *v3;
  uint64_t result;
  double v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  _BYTE v17[184];
  uint64_t v18[7];
  double v19;
  char v20[24];

  v1 = v0;
  v2 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v2, v20, 0, 0);
  v3 = *v2;
  if (v3 && !sub_10007BAFC())
  {
    v5 = *(double *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics + 16];
    v6 = (void *)objc_opt_self(UIFontMetrics);
    v7 = v3;
    v8 = objc_msgSend(v6, "defaultMetrics");
    v9 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v8, "scaledValueForValue:compatibleWithTraitCollection:", v9, v5);
    v11 = v10;

    sub_100070EDC((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v17, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v17, (uint64_t)v18, (uint64_t *)&unk_100641300);
    *(double *)&result = COERCE_DOUBLE(sub_1000A849C(v18));
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v12 = v19 / 3.0;
      if (v11 < v19 / 3.0)
        v12 = v11;
      if (v5 > v12)
        v13 = v5;
      else
        v13 = v12;
      v14 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v14, "displayScale");
      v16 = v15;

      *(double *)&result = floor(v13 * v16) / v16;
    }
  }
  else
  {
    *(double *)&result = 0.0;
  }
  return result;
}

void sub_10049668C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Class isa;
  objc_class *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  char *v27;
  void *v28;
  id v29;
  char *v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  id v34;
  void *v35;
  Class v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  void *v46;
  objc_super v47;

  v2 = v1;
  v4 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v4);
  v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - v7;
  v9 = type metadata accessor for UIBackgroundConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v39 = (char *)&v37 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - v15;
  v17 = sub_10006922C((uint64_t *)&unk_10064A090);
  __chkstk_darwin(v17);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v21 = (objc_class *)type metadata accessor for DOCItemCollectionGridCell();
  v47.receiver = v2;
  v47.super_class = v21;
  objc_msgSendSuper2(&v47, "_bridgedUpdateConfigurationUsingState:", isa);

  v22 = type metadata accessor for UICellConfigurationState(0);
  v23 = *(_QWORD *)(v22 - 8);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v37(v19, a1, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
  sub_10049AB98((uint64_t)v19);
  sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_10064A090);
  sub_1000271D4((uint64_t)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider], (uint64_t)v44, &qword_100657AE8);
  if (v45)
  {
    sub_100092328((uint64_t)v44, (uint64_t)v41);
    sub_10000CB4C((uint64_t)v44, &qword_100657AE8);
    v24 = v42;
    v25 = v43;
    sub_10007E7A0(v41, v42);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 8))(v2, a1, v24, v25);
    v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56);
    v26(v8, 0, 1, v9);
    sub_100068588(v41);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v8, v9);
      v27 = v40;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v16, v9);
      v26(v27, 0, 1, v9);
      UICollectionViewCell.backgroundConfiguration.setter(v27);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
      return;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v44, &qword_100657AE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_10000CB4C((uint64_t)v8, &qword_100651B30);
  v28 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
  if (v28)
  {
    v29 = v28;
    if ((sub_10006D164() & 1) != 0)
    {
      objc_msgSend(v29, "setHidden:", 1);
    }
    else
    {
      v29 = v29;
      v30 = v38;
      static UIBackgroundConfiguration.listCell()(v29);
      v45 = v22;
      v46 = &protocol witness table for UICellConfigurationState;
      v31 = (char *)sub_10006CBAC(v44);
      v37(v31, a1, v22);
      v32 = v39;
      UIBackgroundConfiguration.updated(for:)(v44);
      v33 = *(void (**)(char *, uint64_t))(v10 + 8);
      v33(v30, v9);
      sub_100068588(v44);
      v34 = objc_msgSend(v2, "tintColor");
      if (!v34)
      {
        __break(1u);
        return;
      }
      v35 = v34;
      v36 = UIBackgroundConfiguration.resolvedBackgroundColor(for:)((UIColor)v34).super.isa;

      v33(v32, v9);
      objc_msgSend(v29, "setBackgroundColor:", v36);

    }
  }
}

uint64_t sub_100496B40()
{
  char *v0;
  void *v1;
  char **v2;
  char *v3;
  void *v4;
  id v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  void *v14;
  id v15;
  NSArray v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  void **aBlock;
  uint64_t v29;
  id (*v30)(uint64_t);
  void *v31;
  void (*v32)();
  _QWORD *v33;
  char v34[24];

  v1 = v0;
  v2 = (char **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v34, 0, 0);
  v3 = *v2;
  if (!*v2)
    return (uint64_t)v3;
  if (sub_10007BAFC())
    return 0;
  v4 = *(void **)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
  if (!v4)
    return 0;
  v5 = v4;
  result = sub_1004964E4();
  if ((v7 & 1) == 0)
  {
    v8 = result;
    v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, 3, *(double *)&result);
    if (objc_msgSend(v1, "isSelected"))
    {
      v10 = objc_msgSend(v1, "tintColor");
      if (!v10)
        v10 = objc_msgSend((id)objc_opt_self(UIColor), "linkColor");
      v11 = sub_10006922C(&qword_100644930);
      v12 = swift_allocObject(v11, 160, 7);
      *(_QWORD *)(v12 + 32) = 0xD000000000000029;
      *(_QWORD *)(v12 + 40) = 0x8000000100539AB0;
      *(_OWORD *)(v12 + 16) = xmmword_1004D9B50;
      *(_QWORD *)(v12 + 88) = &type metadata for CGFloat;
      *(_QWORD *)(v12 + 56) = &type metadata for String;
      *(_QWORD *)(v12 + 64) = v8;
      v13 = objc_msgSend(v5, "userInterfaceStyle") == (id)2;
      *(_QWORD *)(v12 + 120) = &type metadata for Bool;
      *(_BYTE *)(v12 + 96) = v13;
      *(_QWORD *)(v12 + 152) = sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
      *(_QWORD *)(v12 + 128) = v10;
      v14 = (void *)objc_opt_self(UIImage);
      v15 = v10;
      v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v12);
      v17 = (_QWORD *)swift_allocObject(&unk_1005F0A40, 40, 7);
      v17[2] = v5;
      v17[3] = v15;
      v17[4] = v9;
      v32 = sub_10049E490;
      v33 = v17;
      aBlock = _NSConcreteStackBlock;
      v29 = 1107296256;
      v30 = sub_10049714C;
      v31 = &unk_1005F0A58;
      v18 = _Block_copy(&aBlock);
      v19 = v33;
      v20 = v5;
      v21 = v15;
      v5 = v9;
      v3 = (char *)objc_msgSend(v14, "_cachedImageForKey:fromBlock:", v16.super.isa, v18, swift_release(v19).n128_f64[0]);
      _Block_release(v18);

    }
    else
    {
      v22 = sub_10006922C(&qword_100644930);
      v23 = swift_allocObject(v22, 96, 7);
      *(_QWORD *)(v23 + 32) = 0xD00000000000002CLL;
      *(_QWORD *)(v23 + 40) = 0x8000000100539A70;
      *(_OWORD *)(v23 + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(v23 + 88) = &type metadata for CGFloat;
      *(_QWORD *)(v23 + 56) = &type metadata for String;
      *(_QWORD *)(v23 + 64) = v8;
      v24 = (void *)objc_opt_self(UIImage);
      v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v23);
      v25 = swift_allocObject(&unk_1005F09F0, 24, 7);
      *(_QWORD *)(v25 + 16) = v9;
      v32 = sub_10049E454;
      v33 = (_QWORD *)v25;
      aBlock = _NSConcreteStackBlock;
      v29 = 1107296256;
      v30 = sub_10049714C;
      v31 = &unk_1005F0A08;
      v26 = _Block_copy(&aBlock);
      v27 = v33;
      v21 = v9;
      v3 = (char *)objc_msgSend(v24, "_cachedImageForKey:fromBlock:", v16.super.isa, v26, swift_release(v27).n128_f64[0]);
      _Block_release(v26);
    }

    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void sub_100496F40(void *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  Class isa;
  id v12;
  id v13;
  void *v14;
  NSString v15;
  id v16;
  id v17;

  if (objc_msgSend(a1, "userInterfaceStyle") == (id)2)
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "linkColor");
  else
    v5 = a2;
  v6 = v5;
  v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004DA350;
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v6;
  specialized Array._endMutation()(v9);
  sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  v10 = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPaletteColors:", isa);

  v13 = objc_msgSend(a3, "configurationByApplyingConfiguration:", v12);
  v14 = (void *)objc_opt_self(UIImage);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "_systemImageNamed:withConfiguration:", v15, 0);

  if (v16)
  {

    v17 = objc_msgSend(v16, "imageWithConfiguration:", v13);
    sub_1002436C8(0.25);

  }
  else
  {
    __break(1u);
  }
}

id sub_10049714C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

void sub_100497184(uint64_t a1)
{
  NSString v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v2);

  if (v3)
  {
    v4 = objc_msgSend(v3, "imageWithConfiguration:", a1);

    v5 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v6 = objc_msgSend(v4, "imageWithTintColor:renderingMode:", v5, 2);

    sub_1002436C8(0.5);
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_100497280(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t ObjectType;

  v7 = v6;
  ObjectType = swift_getObjectType(v7, a2);
  v13 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView;
  v14 = type metadata accessor for DOCNotifyingStackView();
  v15 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14));
  v16 = v7;
  *(_QWORD *)&v7[v13] = objc_msgSend(v15, "init");
  v17 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel;
  v18 = type metadata accessor for DOCFastLabel();
  *(_QWORD *)&v16[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
  v19 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel;
  v20 = objc_msgSend(objc_allocWithZone((Class)DOCLabel), "init");
  v21 = (void *)objc_opt_self(UIColor);
  v22 = v20;
  v23 = objc_msgSend(v21, "secondaryLabelColor");
  objc_msgSend(v22, "setTextColor:", v23);

  objc_msgSend(v22, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v16[v19] = v22;
  v24 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel;
  v25 = objc_msgSend(objc_allocWithZone((Class)DOCLabel), "init");
  v26 = objc_msgSend(v21, "secondaryLabelColor");
  objc_msgSend(v25, "setTextColor:", v26);

  objc_msgSend(v25, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v16[v24] = v25;
  v27 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView;
  v28 = type metadata accessor for DOCImageViewContainerView();
  *(_QWORD *)&v16[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v28)), "init");
  v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView] = 0;
  v29 = &v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *((_QWORD *)v29 + 4) = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant] = 0;
  v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFolderActivated] = 1;
  v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFileActivated] = 1;
  v30 = &v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics];
  *(_QWORD *)v30 = 0xBFF0000000000000;
  *((_WORD *)v30 + 4) = 257;
  *((_OWORD *)v30 + 1) = xmmword_1004EA9B0;
  *((_OWORD *)v30 + 2) = xmmword_1004EA9C0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding] = 0x4041800000000000;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints] = _swiftEmptyArrayStorage;

  v31 = a1;
  v33 = sub_10004CC6C(a1, v32, a3, a4, a5, a6);
  v34 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v35 = swift_allocObject(v34, 48, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1004D9670;
  v36 = sub_1001463A0();
  *(_QWORD *)(v35 + 32) = &type metadata for DOCBrowserLayoutConfiguration.Trait;
  *(_QWORD *)(v35 + 40) = v36;
  v37 = v33;
  v38 = UIView.registerForTraitChanges<A>(_:handler:)(v35, sub_100273AF0, 0, ObjectType);
  swift_unknownObjectRelease(v38);

  swift_bridgeObjectRelease(v35);
  sub_100497870();

  return v37;
}

void sub_100497684(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;

  v2 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView);
  if (v3)
    objc_msgSend(v3, "setHidden:", 1);
  v4 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView;
  v5 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView);
  if (v5)
    objc_msgSend(v5, "setHidden:", 1);
  v6 = *(void **)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
  objc_msgSend(v6, "setThumbnail:", 0);
  objc_msgSend(v6, "setImage:", 0);
  v7 = *(void **)(a1 + v2);
  if (v7)
    objc_msgSend(v7, "setHidden:", 0);
  v8 = *(void **)(a1 + v4);
  if (v8)
    objc_msgSend(v8, "setHidden:", 1);
  v9 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden) = 0;
  v10 = sub_10049639C();
  objc_msgSend(v10, "setHidden:", *(unsigned __int8 *)(a1 + v9));

}

void sub_100497810(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for DOCItemCollectionGridCell();
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_100497870()
{
  char *v0;
  char *v1;
  id v2;
  objc_class *v3;
  id v4;
  id v5;
  _BYTE *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _BYTE *v11;
  id v12;
  void *v13;
  id v14;
  objc_super v15;
  objc_super v16;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = (objc_class *)_s19BackgroundStateViewCMa(0);
  v4 = objc_allocWithZone(v3);
  v5 = objc_allocWithZone((Class)UITraitCollection);
  v6 = v4;
  UICellConfigurationState.init(traitCollection:)(objc_msgSend(v5, "init"));
  v6[OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_style] = 0;

  v16.receiver = v6;
  v16.super_class = v3;
  v7 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10000AA50();
  objc_msgSend(v7, "setAutoresizingMask:", 18);
  objc_msgSend(v7, "setHidden:", 1);
  objc_msgSend(v2, "addSubview:", v7);
  v8 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView] = v7;

  v9 = objc_allocWithZone(v3);
  v10 = objc_allocWithZone((Class)UITraitCollection);
  v11 = v9;
  UICellConfigurationState.init(traitCollection:)(objc_msgSend(v10, "init"));
  v11[OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_style] = 1;

  v15.receiver = v11;
  v15.super_class = v3;
  v12 = objc_msgSendSuper2(&v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10000AA50();
  objc_msgSend(v12, "setAutoresizingMask:", 18);
  objc_msgSend(v12, "setHidden:", 1);
  objc_msgSend(v2, "addSubview:", v12);
  v13 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView] = v12;

  v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v1, "setSelectedBackgroundView:", v14);

  objc_msgSend(v1, "setBackgroundView:", v2);
}

id sub_100497AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  double *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  Class isa;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  CGFloat v41;
  _BYTE v42[200];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[11];
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  uint64_t v52;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView);
  if (!v5)
    return 0;
  v6 = *(char **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  v7 = v5;
  v8 = objc_msgSend(v6, "attributedText");

  if (!v8)
  {
LABEL_7:
    v13 = Logger.UI.unsafeMutableAddressor(v9);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v13, v1);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v39 = v7;
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v45[0] = v18;
      *(_DWORD *)v17 = 136315138;
      v43 = sub_1000544FC(0xD000000000000013, 0x8000000100539A50, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s gridTitleLabel is empty.", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  result = objc_msgSend(v6, "attributedText");
  if (result)
  {
    v11 = result;
    v12 = (uint64_t)objc_msgSend(result, "length");

    if (v12 >= 1)
    {
      objc_msgSend(v6, "setNeedsLayout");
      objc_msgSend(v6, "layoutIfNeeded");
      sub_100070EDC(*(_QWORD *)&v6[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer]+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)&v43, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)&v43, (uint64_t)v45, (uint64_t *)&unk_100641310);
      if (sub_1000A849C(v45) != 1)
      {
        sub_100070EDC((uint64_t)&v43, (uint64_t)v42, (uint64_t *)&unk_100641310);
        sub_1000B2740((uint64_t)v42);
        objc_msgSend(v7, "bounds");
        v21 = v20;
        v22 = v46;
        if (v49)
          v23 = v48;
        else
          v23 = 0.0;
        if (v49)
          v24 = v47;
        else
          v24 = 0.0;
        if (v52)
          v25 = v51;
        else
          v25 = 0.0;
        if (v52)
          v26 = v50;
        else
          v26 = 0.0;
        v27 = *(_QWORD *)(v46 + 16);
        v41 = 2.0;
        v28 = swift_bridgeObjectRetain(v46);
        v29 = sub_10049E1E0(v28, v22, v27, &v41, v24, v23, 2.0, v26, v25, v21);
        swift_bridgeObjectRelease(v22);
        v30 = v29[2];
        if (v30)
        {
          v40 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)(v30);
          v31 = (void *)objc_opt_self(NSValue);
          v32 = (double *)(v29 + 7);
          do
          {
            v33 = objc_msgSend(v31, "valueWithRect:", *(v32 - 3), *(v32 - 2), *(v32 - 1), *v32);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v33);
            v34 = v40[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v34);
            v35 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v33);
            specialized ContiguousArray._endMutation()(v35);
            v32 += 4;
            --v30;
          }
          while (v30);
          v36 = v40;
          swift_bridgeObjectRelease(v29);
        }
        else
        {
          swift_bridgeObjectRelease(v29);
          v36 = _swiftEmptyArrayStorage;
        }
        sub_10004F2F0(0, &qword_100651D50, NSValue_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v36);
        v19 = (id)_UIPreviewParametersGenerateTextPlatter(isa, 0.0, -5.0, 0.0, -5.0, 3.0);

        sub_1001BF860((uint64_t)&v43);
        return v19;
      }

      return 0;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_100497F7C(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void **v8;
  double v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27[24];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  *(_QWORD *)&v9 = swift_beginAccess(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v27, 0, 0).n128_u64[0];
  v10 = *v8;
  if (*v8 && (*((_BYTE *)v10 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing) & 1) == 0)
  {
    v11 = v10;
    v12 = Logger.UI.unsafeMutableAddressor(v11);
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Laying out a focus view of a cell that has no focus.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v17 = *(void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
  v18 = objc_msgSend(v17, "superview", v9);

  if (v18)
  {
    v19 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView];
    objc_msgSend(v19, "bounds");
    objc_msgSend(v2, "convertRect:fromCoordinateSpace:", v19);
    v21 = v20;
    objc_msgSend(v17, "bounds");
    objc_msgSend(v2, "convertRect:fromCoordinateSpace:", v17);
    v22 = sub_10007EB38(v21);
  }
  else
  {
    v22 = 0.0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
  }
  *(double *)a1 = v22;
  *(_QWORD *)(a1 + 8) = v23;
  *(_QWORD *)(a1 + 16) = v24;
  *(_QWORD *)(a1 + 24) = v25;
  *(_BYTE *)(a1 + 32) = v18 == 0;
}

void sub_1004981A0(void *a1)
{
  char *v1;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  CGFloat x;
  double v15;
  CGFloat y;
  double v17;
  double width;
  double v19;
  CGFloat height;
  double v21;
  double v22;
  CGFloat v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
  objc_msgSend(v3, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v3, "convertRect:toCoordinateSpace:", v12, v5, v7, v9, v11);
  x = v13;
  y = v15;
  width = v17;
  height = v19;

  objc_msgSend(v3, "doc_effectiveContentSize");
  if (width < v21)
  {
    objc_msgSend(v3, "doc_effectiveContentSize");
    v23 = -(v22 - width);
    v29.origin.x = x;
    v29.origin.y = y;
    v29.size.width = width;
    v29.size.height = height;
    v30 = CGRectInset(v29, v23, 0.0);
    x = v30.origin.x;
    y = v30.origin.y;
    width = v30.size.width;
    height = v30.size.height;
  }
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = width;
  v31.size.height = height;
  v32 = CGRectInset(v31, -5.0, 0.0);
  objc_msgSend(a1, "setFrame:", v32.origin.x, v32.origin.y, v32.size.width, v32.size.height);
  v24 = sub_100497AD0();
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v27 = objc_msgSend(v25, "CGPath");
    objc_msgSend(v26, "setPath:", v27);

    v28 = objc_msgSend(a1, "layer");
    objc_msgSend(v28, "setMask:", v26);

  }
  else
  {
    v28 = objc_msgSend(a1, "layer");
    objc_msgSend(v28, "setMask:", 0);
  }

}

void *sub_10049850C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_100498658(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v4[184];
  uint64_t v5[23];
  _BYTE v6[24];

  sub_100062A70(a1);
  if (qword_1006411F8 != -1)
    swift_once(&qword_1006411F8, sub_10049DF40);
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v3, v6, 0, 0);
  if (*v3)
  {
    sub_100070EDC(*v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v4, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v4, (uint64_t)v5, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v5) != 1)
    {
      qword_100657980 = v5[6];
      qword_100657988 = v5[8];
      qword_100657990 = v5[5];
    }
  }

}

void (*sub_10049873C(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x198uLL);
  *a1 = v3;
  v3[49] = v1;
  v3[50] = DOCItemCollectionCell.cellContent.modify(v3);
  return sub_100498784;
}

void sub_100498784(uint64_t **a1, char a2)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  ((void (*)(uint64_t *, _QWORD))(*a1)[50])(*a1, 0);
  if ((a2 & 1) == 0)
  {
    if (qword_1006411F8 != -1)
      swift_once(&qword_1006411F8, sub_10049DF40);
    v4 = (_QWORD *)(v3[49] + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
    swift_beginAccess(v4, v3 + 46, 0, 0);
    if (*v4)
    {
      sub_100070EDC(*v4 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)(v3 + 23), (uint64_t *)&unk_100641300);
      sub_100070EDC((uint64_t)(v3 + 23), (uint64_t)v3, (uint64_t *)&unk_100641300);
      if (sub_1000A849C(v3) != 1)
      {
        v5 = v3[8];
        v6 = v3[5];
        qword_100657980 = v3[6];
        qword_100657988 = v5;
        qword_100657990 = v6;
      }
    }
  }
  free(v3);
}

void sub_100498880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10049BB48();

  }
}

void sub_100498914(char a1)
{
  char *v1;
  char *v2;
  objc_class *v4;
  unsigned int v5;
  char *v6;
  char v7[24];
  objc_super v8;
  objc_super v9;

  v2 = v1;
  v4 = (objc_class *)type metadata accessor for DOCItemCollectionGridCell();
  v9.receiver = v2;
  v9.super_class = v4;
  v5 = objc_msgSendSuper2(&v9, "isHighlighted");
  v8.receiver = v2;
  v8.super_class = v4;
  objc_msgSendSuper2(&v8, "setHighlighted:", a1 & 1);
  if (v5 != objc_msgSend(v2, "isHighlighted"))
  {
    v6 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v7, 0, 0);
    if (*(_QWORD *)v6)
    {
      if (!sub_10007BAFC())
        sub_10049B868();
    }
  }
}

BOOL sub_100498B20(CGFloat a1, CGFloat a2)
{
  char *v2;
  char *v3;

  v2 = sub_100498B54(1, a1, a2);
  v3 = v2;
  if (v2)

  return v3 != 0;
}

char *sub_100498B54(char a1, CGFloat a2, CGFloat a3)
{
  char *v3;
  char *v4;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  BOOL v16;
  char *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  char *result;
  CGFloat v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  CGPoint v42;
  CGPoint v43;
  CGPoint v44;
  CGPoint v45;
  CGPoint v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v4 = v3;
  if ((objc_msgSend(v4, "isHidden") & 1) != 0)
    return 0;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v4, "bounds");
    v42.x = a2;
    v42.y = a3;
    if (!CGRectContainsPoint(v47, v42))
      return 0;
  }
  v8 = *(char **)&v4[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
  if (v8)
  {
    v9 = v8;
    v10 = (char *)objc_msgSend(v9, "superview");
    if (v10)
    {
      v11 = v10;
      if ((objc_msgSend(v9, "isHidden") & 1) != 0)
      {

        v9 = v11;
      }
      else
      {
        objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v11, a2, a3);
        v13 = v12;
        v15 = v14;
        objc_msgSend(v9, "frame");
        v43.x = v13;
        v43.y = v15;
        v16 = CGRectContainsPoint(v48, v43);

        if (v16)
          return v8;
      }
    }

  }
  v8 = *(char **)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
  if (v8)
  {
    v17 = v8;
    if ((objc_msgSend(v17, "isHidden") & 1) == 0)
    {
      objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v17, a2, a3);
      v19 = v18;
      v21 = v20;
      objc_msgSend(v17, "bounds");
      v44.x = v19;
      v44.y = v21;
      if (CGRectContainsPoint(v49, v44))
        return v8;
    }

  }
  v8 = *(char **)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView];
  objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v8, a2, a3);
  result = *(char **)&v8[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  if (result)
  {
    v25 = v22;
    v26 = v23;
    objc_msgSend(result, "frame");
    v45.x = v25;
    v45.y = v26;
    if (CGRectContainsPoint(v50, v45)
      || (v8 = *(char **)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView],
          objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v8, a2, a3),
          v28 = v27,
          v30 = v29,
          objc_msgSend(v8, "bounds"),
          v46.x = v28,
          v46.y = v30,
          CGRectContainsPoint(v51, v46)))
    {
      v31 = v8;
      return v8;
    }
    sub_1000271D4((uint64_t)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider], (uint64_t)&v37, &qword_100657AE8);
    if (v38)
    {
      sub_1000E85C4(&v37, (uint64_t)v39);
      v32 = v40;
      v33 = v41;
      sub_10007E7A0(v39, v40);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33) & 1) != 0)
      {
        v34 = v40;
        v35 = v41;
        sub_10007E7A0(v39, v40);
        if (((*(uint64_t (**)(char *, uint64_t, uint64_t, CGFloat, CGFloat))(v35 + 16))(v4, v34, v35, a2, a3) & 1) != 0)
        {
          sub_100068588(v39);
          v36 = v4;
          return v4;
        }
      }
      sub_100068588(v39);
    }
    else
    {
      sub_10000CB4C((uint64_t)&v37, &qword_100657AE8);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_100498E6C()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  _BYTE *v3;
  uint64_t v4;
  int v5;
  id *v6;
  double v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  __int128 v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  int v26;
  void *v27;
  uint64_t v28;
  int v29;
  int v30;
  _OWORD v31[12];
  uint64_t v32;
  _BYTE v33[200];
  _BYTE v34[200];
  uint64_t v35[25];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[200];
  _OWORD v39[3];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v1 = v0;
  sub_10049C65C();
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v37, 0, 0);
  if (!*v2)
    return;
  v3 = *v2;
  sub_10049B650();
  sub_100015B40();
  sub_10049B868();
  v4 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
  v5 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder];
  if (v5 == 2)
  {
    v6 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
    *(_QWORD *)&v7 = swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v36, 0, 0).n128_u64[0];
    if (*v6)
    {
      v8 = objc_msgSend(*v6, "isFolder", v7);
      v3[v4] = v8;
      if ((v8 & 1) == 0)
        goto LABEL_9;
LABEL_7:
      v9 = 0;
      v10 = 1;
      goto LABEL_10;
    }
    v3[v4] = 0;
  }
  else if ((v5 & 1) != 0)
  {
    goto LABEL_7;
  }
LABEL_9:
  v10 = 0;
  v9 = 1;
LABEL_10:
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFileActivated) = v9;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile), "setActive:");
  *(_BYTE *)(v1
           + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFolderActivated) = v10;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder), "setActive:", v10);
  if (*v2)
  {
    v11 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    v12 = *v2;
    sub_10005914C((uint64_t)v38);
    v31[10] = *(_OWORD *)&v38[160];
    v31[11] = *(_OWORD *)&v38[176];
    v32 = *(_QWORD *)&v38[192];
    v31[6] = *(_OWORD *)&v38[96];
    v31[7] = *(_OWORD *)&v38[112];
    v31[8] = *(_OWORD *)&v38[128];
    v31[9] = *(_OWORD *)&v38[144];
    v31[2] = *(_OWORD *)&v38[32];
    v31[3] = *(_OWORD *)&v38[48];
    v31[4] = *(_OWORD *)&v38[64];
    v31[5] = *(_OWORD *)&v38[80];
    v31[0] = *(_OWORD *)v38;
    v31[1] = *(_OWORD *)&v38[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v31);
    v13 = *(void **)&v11[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    v14 = (uint64_t)v13
        + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_100070EDC((uint64_t)v13+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v33, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v31, v14, (uint64_t *)&unk_100641310);
    sub_1000B2740((uint64_t)v38);
    sub_1000B2740((uint64_t)v38);
    sub_1001BF860((uint64_t)v33);
    objc_msgSend(v13, "setNeedsDisplay");
    sub_100058CC0((uint64_t)v38);
    sub_100070EDC(v14, (uint64_t)v34, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v34, (uint64_t)v35, (uint64_t *)&unk_100641310);
    if (sub_1000A849C(v35) != 1)
      objc_msgSend(v11, "setFont:", v35[0]);
    v45 = *(_OWORD *)&v38[136];
    v46 = *(_OWORD *)&v38[152];
    v47 = *(_OWORD *)&v38[168];
    v48 = *(_OWORD *)&v38[184];
    v41 = *(_OWORD *)&v38[72];
    v42 = *(_OWORD *)&v38[88];
    v43 = *(_OWORD *)&v38[104];
    v44 = *(_OWORD *)&v38[120];
    v39[0] = *(_OWORD *)&v38[8];
    v39[1] = *(_OWORD *)&v38[24];
    v39[2] = *(_OWORD *)&v38[40];
    v40 = *(_OWORD *)&v38[56];
    sub_1000B2454((uint64_t)v39);
    objc_msgSend(v11, "bounds");
    v16 = v15;
    v18 = v17;
    v19 = objc_msgSend(v11, "contentScaleFactor");
    v20 = v40;
    v22 = UIPointRoundToScale(v19, (v16 - *(double *)&v40) * 0.5, (v18 - *((double *)&v40 + 1)) * 0.5, v21);
    v24 = v23;
    sub_1000B2398(v39);
    objc_msgSend(v13, "setFrame:", v22, v24, v20);
    objc_msgSend(v11, "invalidateIntrinsicContentSize");
    sub_100058CC0((uint64_t)v38);
    sub_10049BB48();

  }
  v25 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode;
  v26 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
  if (v26 == 2)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  if ((v26 & 1) != 0)
  {
    v27 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    objc_msgSend(v27, "setAddDecoration:", 1);
    objc_msgSend(v27, "setThumbnail:", 0);
    v26 = v3[v25];
  }
  if (v26 == 2)
    goto LABEL_23;
  v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView);
  v29 = v26 & 1;
  v30 = *(unsigned __int8 *)(v28 + OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode);
  *(_BYTE *)(v28 + OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode) = v29;
  if ((((v29 == 0) ^ v30) & 1) == 0)
    sub_10004D4AC(0);
  sub_10049BF5C();

}

void sub_10049929C()
{
  char *v0;
  char *v1;
  id *v2;
  id v3;
  uint64_t v4;
  char v5[24];

  v1 = v0;
  sub_10049C65C();
  v2 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v2, v5, 0, 0);
  if (*v2)
  {
    v3 = *v2;
    if (objc_msgSend(v1, "isHighlighted")
      && v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics + 9] == 1)
    {
      v4 = 2;
    }
    else if ((sub_1004AF9D0() & 1) != 0)
    {
      v4 = 3;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView], "setDrawMode:", v4);

  }
  sub_10049BF5C();
}

void sub_100499364()
{
  uint64_t v0;
  id *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  __int128 v11;
  double v12;
  double v13;
  double v14;
  double v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  double v21;
  id v22;
  double v23;
  double v24;
  id v25;
  _OWORD v26[12];
  uint64_t v27;
  _BYTE v28[200];
  _BYTE v29[200];
  uint64_t v30[25];
  _BYTE v31[24];
  _BYTE v32[200];
  _OWORD v33[3];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  sub_10049B650();
  v1 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v31, 0, 0);
  if (*v1)
  {
    v2 = *(char **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    v3 = *v1;
    sub_10005914C((uint64_t)v32);
    v26[10] = *(_OWORD *)&v32[160];
    v26[11] = *(_OWORD *)&v32[176];
    v27 = *(_QWORD *)&v32[192];
    v26[6] = *(_OWORD *)&v32[96];
    v26[7] = *(_OWORD *)&v32[112];
    v26[8] = *(_OWORD *)&v32[128];
    v26[9] = *(_OWORD *)&v32[144];
    v26[2] = *(_OWORD *)&v32[32];
    v26[3] = *(_OWORD *)&v32[48];
    v26[4] = *(_OWORD *)&v32[64];
    v26[5] = *(_OWORD *)&v32[80];
    v26[0] = *(_OWORD *)v32;
    v26[1] = *(_OWORD *)&v32[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v26);
    v4 = *(void **)&v2[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    v5 = (uint64_t)v4
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_100070EDC((uint64_t)v4+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v28, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v26, v5, (uint64_t *)&unk_100641310);
    sub_1000B2740((uint64_t)v32);
    sub_1000B2740((uint64_t)v32);
    sub_1001BF860((uint64_t)v28);
    objc_msgSend(v4, "setNeedsDisplay");
    sub_100058CC0((uint64_t)v32);
    sub_100070EDC(v5, (uint64_t)v29, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v29, (uint64_t)v30, (uint64_t *)&unk_100641310);
    if (sub_1000A849C(v30) != 1)
      objc_msgSend(v2, "setFont:", v30[0]);
    v39 = *(_OWORD *)&v32[136];
    v40 = *(_OWORD *)&v32[152];
    v41 = *(_OWORD *)&v32[168];
    v42 = *(_OWORD *)&v32[184];
    v35 = *(_OWORD *)&v32[72];
    v36 = *(_OWORD *)&v32[88];
    v37 = *(_OWORD *)&v32[104];
    v38 = *(_OWORD *)&v32[120];
    v33[0] = *(_OWORD *)&v32[8];
    v33[1] = *(_OWORD *)&v32[24];
    v33[2] = *(_OWORD *)&v32[40];
    v34 = *(_OWORD *)&v32[56];
    sub_1000B2454((uint64_t)v33);
    objc_msgSend(v2, "bounds");
    v7 = v6;
    v9 = v8;
    v10 = objc_msgSend(v2, "contentScaleFactor");
    v11 = v34;
    v13 = UIPointRoundToScale(v10, (v7 - *(double *)&v34) * 0.5, (v9 - *((double *)&v34 + 1)) * 0.5, v12);
    v15 = v14;
    sub_1000B2398(v33);
    objc_msgSend(v4, "setFrame:", v13, v15, v11);
    objc_msgSend(v2, "invalidateIntrinsicContentSize");
    sub_100058CC0((uint64_t)v32);
    sub_10049BB48();

  }
  sub_10049B2D8();
  sub_10049B868();
  v16 = (unsigned __int8 *)*v1;
  if (!*v1)
    goto LABEL_14;
  v17 = v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable];
  if (v17 == 2)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((v17 & 1) == 0)
    goto LABEL_14;
  v18 = v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting];
  if (v18 == 2)
    goto LABEL_19;
  if ((v18 & 1) == 0)
    goto LABEL_14;
  v19 = v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable];
  if (v19 == 2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v19 & 1) != 0)
  {
    v20 = v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
    if (v20 != 2)
    {
      v21 = 1.0;
      if ((v20 & 1) == 0)
        goto LABEL_15;
      goto LABEL_14;
    }
LABEL_21:
    __break(1u);
    return;
  }
LABEL_14:
  v21 = 0.0;
LABEL_15:
  v22 = sub_10049639C();
  objc_msgSend(v22, "alpha");
  v24 = v23;

  if (v24 != v21)
  {
    v25 = sub_10049639C();
    objc_msgSend(v25, "setAlpha:", v21);

  }
}

void sub_1004996EC()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  __int128 v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _OWORD v17[12];
  uint64_t v18;
  _BYTE v19[200];
  _BYTE v20[200];
  uint64_t v21[25];
  _BYTE v22[24];
  _BYTE v23[200];
  _OWORD v24[3];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v1 = v0;
  sub_10049B650();
  sub_10049BB48();
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v2, v22, 0, 0);
  if (*v2)
  {
    v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    v4 = *v2;
    sub_10005914C((uint64_t)v23);
    v17[10] = *(_OWORD *)&v23[160];
    v17[11] = *(_OWORD *)&v23[176];
    v18 = *(_QWORD *)&v23[192];
    v17[6] = *(_OWORD *)&v23[96];
    v17[7] = *(_OWORD *)&v23[112];
    v17[8] = *(_OWORD *)&v23[128];
    v17[9] = *(_OWORD *)&v23[144];
    v17[2] = *(_OWORD *)&v23[32];
    v17[3] = *(_OWORD *)&v23[48];
    v17[4] = *(_OWORD *)&v23[64];
    v17[5] = *(_OWORD *)&v23[80];
    v17[0] = *(_OWORD *)v23;
    v17[1] = *(_OWORD *)&v23[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v17);
    v5 = *(void **)&v3[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_100070EDC((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v19, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v17, v6, (uint64_t *)&unk_100641310);
    sub_1000B2740((uint64_t)v23);
    sub_1000B2740((uint64_t)v23);
    sub_1001BF860((uint64_t)v19);
    objc_msgSend(v5, "setNeedsDisplay");
    sub_100058CC0((uint64_t)v23);
    sub_100070EDC(v6, (uint64_t)v20, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v20, (uint64_t)v21, (uint64_t *)&unk_100641310);
    if (sub_1000A849C(v21) != 1)
      objc_msgSend(v3, "setFont:", v21[0]);
    v30 = *(_OWORD *)&v23[136];
    v31 = *(_OWORD *)&v23[152];
    v32 = *(_OWORD *)&v23[168];
    v33 = *(_OWORD *)&v23[184];
    v26 = *(_OWORD *)&v23[72];
    v27 = *(_OWORD *)&v23[88];
    v28 = *(_OWORD *)&v23[104];
    v29 = *(_OWORD *)&v23[120];
    v24[0] = *(_OWORD *)&v23[8];
    v24[1] = *(_OWORD *)&v23[24];
    v24[2] = *(_OWORD *)&v23[40];
    v25 = *(_OWORD *)&v23[56];
    sub_1000B2454((uint64_t)v24);
    objc_msgSend(v3, "bounds");
    v8 = v7;
    v10 = v9;
    v11 = objc_msgSend(v3, "contentScaleFactor");
    v12 = v25;
    v14 = UIPointRoundToScale(v11, (v8 - *(double *)&v25) * 0.5, (v10 - *((double *)&v25 + 1)) * 0.5, v13);
    v16 = v15;
    sub_1000B2398(v24);
    objc_msgSend(v5, "setFrame:", v14, v16, v12);
    objc_msgSend(v3, "invalidateIntrinsicContentSize");
    sub_100058CC0((uint64_t)v23);
    sub_10049BB48();

  }
  sub_10049B2D8();
  sub_10049B868();
}

void sub_100499998()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  __int128 v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _OWORD v17[12];
  uint64_t v18;
  _BYTE v19[200];
  _BYTE v20[200];
  uint64_t v21[25];
  _BYTE v22[24];
  _BYTE v23[200];
  _OWORD v24[3];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v1 = v0;
  sub_10049B650();
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v2, v22, 0, 0);
  if (*v2)
  {
    v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    v4 = *v2;
    sub_10005914C((uint64_t)v23);
    v17[10] = *(_OWORD *)&v23[160];
    v17[11] = *(_OWORD *)&v23[176];
    v18 = *(_QWORD *)&v23[192];
    v17[6] = *(_OWORD *)&v23[96];
    v17[7] = *(_OWORD *)&v23[112];
    v17[8] = *(_OWORD *)&v23[128];
    v17[9] = *(_OWORD *)&v23[144];
    v17[2] = *(_OWORD *)&v23[32];
    v17[3] = *(_OWORD *)&v23[48];
    v17[4] = *(_OWORD *)&v23[64];
    v17[5] = *(_OWORD *)&v23[80];
    v17[0] = *(_OWORD *)v23;
    v17[1] = *(_OWORD *)&v23[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v17);
    v5 = *(void **)&v3[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_100070EDC((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v19, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v17, v6, (uint64_t *)&unk_100641310);
    sub_1000B2740((uint64_t)v23);
    sub_1000B2740((uint64_t)v23);
    sub_1001BF860((uint64_t)v19);
    objc_msgSend(v5, "setNeedsDisplay");
    sub_100058CC0((uint64_t)v23);
    sub_100070EDC(v6, (uint64_t)v20, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v20, (uint64_t)v21, (uint64_t *)&unk_100641310);
    if (sub_1000A849C(v21) != 1)
      objc_msgSend(v3, "setFont:", v21[0]);
    v30 = *(_OWORD *)&v23[136];
    v31 = *(_OWORD *)&v23[152];
    v32 = *(_OWORD *)&v23[168];
    v33 = *(_OWORD *)&v23[184];
    v26 = *(_OWORD *)&v23[72];
    v27 = *(_OWORD *)&v23[88];
    v28 = *(_OWORD *)&v23[104];
    v29 = *(_OWORD *)&v23[120];
    v24[0] = *(_OWORD *)&v23[8];
    v24[1] = *(_OWORD *)&v23[24];
    v24[2] = *(_OWORD *)&v23[40];
    v25 = *(_OWORD *)&v23[56];
    sub_1000B2454((uint64_t)v24);
    objc_msgSend(v3, "bounds");
    v8 = v7;
    v10 = v9;
    v11 = objc_msgSend(v3, "contentScaleFactor");
    v12 = v25;
    v14 = UIPointRoundToScale(v11, (v8 - *(double *)&v25) * 0.5, (v10 - *((double *)&v25 + 1)) * 0.5, v13);
    v16 = v15;
    sub_1000B2398(v24);
    objc_msgSend(v5, "setFrame:", v14, v16, v12);
    objc_msgSend(v3, "invalidateIntrinsicContentSize");
    sub_100058CC0((uint64_t)v23);
    sub_10049BB48();

  }
  sub_10049B2D8();
}

void sub_100499C40()
{
  uint64_t v0;
  void *v1;

  v1 = objc_autoreleasePoolPush();
  sub_1000179D0(v0);
  objc_autoreleasePoolPop(v1);
}

void sub_100499C80()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;
  char v31[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v10, v31, 0, 0);
  if (*v10)
  {
    v11 = (char *)*v10;
    sub_10006DD34();
    v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    v28 = v6;
    if (v12)
    {
      v13 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
      swift_unknownObjectRetain(v12);
      objc_msgSend(v13, "updateImage:addDecoration:", v12, (unint64_t)sub_10006DF10() & 1);
      swift_unknownObjectRelease(v12);
    }
    else
    {
      v14 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
      if (v14 == 2)
      {
        __break(1u);
        return;
      }
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView], "setThumbnail:", 0);
      if ((v14 & 1) != 0)
        sub_10004D4AC(0);
    }
    if ((sub_10049B944() & 1) != 0)
    {
      v15 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v27 = static OS_dispatch_queue.main.getter(v15);
      v16 = swift_allocObject(&unk_1005F08D8, 24, 7);
      *(_QWORD *)(v16 + 16) = v1;
      aBlock[4] = sub_10049E1A0;
      v30 = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005F08F0;
      v17 = _Block_copy(aBlock);
      v18 = v30;
      v19 = v1;
      swift_release(v18);
      static DispatchQoS.unspecified.getter(v20);
      aBlock[0] = _swiftEmptyArrayStorage;
      v21 = sub_10008BAAC();
      v22 = v3;
      v23 = sub_10006922C((uint64_t *)&unk_100647540);
      v24 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v21);
      v25 = (void *)v27;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v17);
      _Block_release(v17);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
    }
    else
    {

    }
  }
}

void sub_100499F74()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  __int128 v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _OWORD v17[12];
  uint64_t v18;
  _BYTE v19[200];
  _BYTE v20[200];
  uint64_t v21[25];
  _BYTE v22[24];
  _BYTE v23[200];
  _OWORD v24[3];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v1 = v0;
  sub_10049B650();
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v2, v22, 0, 0);
  if (*v2)
  {
    v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    v4 = *v2;
    sub_10005914C((uint64_t)v23);
    v17[10] = *(_OWORD *)&v23[160];
    v17[11] = *(_OWORD *)&v23[176];
    v18 = *(_QWORD *)&v23[192];
    v17[6] = *(_OWORD *)&v23[96];
    v17[7] = *(_OWORD *)&v23[112];
    v17[8] = *(_OWORD *)&v23[128];
    v17[9] = *(_OWORD *)&v23[144];
    v17[2] = *(_OWORD *)&v23[32];
    v17[3] = *(_OWORD *)&v23[48];
    v17[4] = *(_OWORD *)&v23[64];
    v17[5] = *(_OWORD *)&v23[80];
    v17[0] = *(_OWORD *)v23;
    v17[1] = *(_OWORD *)&v23[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v17);
    v5 = *(void **)&v3[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_100070EDC((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v19, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v17, v6, (uint64_t *)&unk_100641310);
    sub_1000B2740((uint64_t)v23);
    sub_1000B2740((uint64_t)v23);
    sub_1001BF860((uint64_t)v19);
    objc_msgSend(v5, "setNeedsDisplay");
    sub_100058CC0((uint64_t)v23);
    sub_100070EDC(v6, (uint64_t)v20, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v20, (uint64_t)v21, (uint64_t *)&unk_100641310);
    if (sub_1000A849C(v21) != 1)
      objc_msgSend(v3, "setFont:", v21[0]);
    v30 = *(_OWORD *)&v23[136];
    v31 = *(_OWORD *)&v23[152];
    v32 = *(_OWORD *)&v23[168];
    v33 = *(_OWORD *)&v23[184];
    v26 = *(_OWORD *)&v23[72];
    v27 = *(_OWORD *)&v23[88];
    v28 = *(_OWORD *)&v23[104];
    v29 = *(_OWORD *)&v23[120];
    v24[0] = *(_OWORD *)&v23[8];
    v24[1] = *(_OWORD *)&v23[24];
    v24[2] = *(_OWORD *)&v23[40];
    v25 = *(_OWORD *)&v23[56];
    sub_1000B2454((uint64_t)v24);
    objc_msgSend(v3, "bounds");
    v8 = v7;
    v10 = v9;
    v11 = objc_msgSend(v3, "contentScaleFactor");
    v12 = v25;
    v14 = UIPointRoundToScale(v11, (v8 - *(double *)&v25) * 0.5, (v10 - *((double *)&v25 + 1)) * 0.5, v13);
    v16 = v15;
    sub_1000B2398(v24);
    objc_msgSend(v5, "setFrame:", v14, v16, v12);
    objc_msgSend(v3, "invalidateIntrinsicContentSize");
    sub_100058CC0((uint64_t)v23);
    sub_10049BB48();

  }
}

id sub_10049A210()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  unint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  _BYTE v11[200];
  _BYTE v12[200];
  _BYTE v13[200];
  uint64_t v14[25];
  char v15[24];

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  v3 = swift_beginAccess(v2, v15, 0, 0).n128_u64[0];
  v4 = (char *)*v2;
  if (*v2)
  {
    v5 = *(void **)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail] = 0;
    v6 = v4;
    sub_100078678(v5);

    v3 = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setThumbnail:", 0, *(double *)&v3);
  v7 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  sub_1000D07FC((uint64_t)v11);
  v8 = *(void **)&v7[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
  v9 = (uint64_t)v8
     + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
  sub_100070EDC((uint64_t)v8+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v12, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v11, v9, (uint64_t *)&unk_100641310);
  sub_1001BF860((uint64_t)v12);
  objc_msgSend(v8, "setNeedsDisplay");
  sub_100070EDC(v9, (uint64_t)v13, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_100641310);
  if (sub_1000A849C(v14) != 1)
    objc_msgSend(v7, "setFont:", v14[0]);
  objc_msgSend(v8, "setFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "invalidateIntrinsicContentSize");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel), "setText:", 0);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel), "setText:", 0);
}

void sub_10049A3D0()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  __int128 v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  void *v20;
  _OWORD v21[12];
  uint64_t v22;
  _BYTE v23[200];
  _BYTE v24[200];
  uint64_t v25[25];
  _BYTE v26[200];
  uint64_t v27[25];
  _BYTE v28[24];
  _BYTE v29[200];
  _OWORD v30[3];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v1 = v0;
  sub_10004FB98();
  v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v2, v28, 0, 0);
  v3 = *v2;
  if (*v2 && !sub_10007BAFC())
  {
    v4 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    v5 = *(void **)&v4[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_100070EDC((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v26, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_100641310);
    if (sub_1000A849C(v27) == 1)
    {
      v7 = v3;
      sub_10005914C((uint64_t)v29);
      v21[10] = *(_OWORD *)&v29[160];
      v21[11] = *(_OWORD *)&v29[176];
      v22 = *(_QWORD *)&v29[192];
      v21[6] = *(_OWORD *)&v29[96];
      v21[7] = *(_OWORD *)&v29[112];
      v21[8] = *(_OWORD *)&v29[128];
      v21[9] = *(_OWORD *)&v29[144];
      v21[2] = *(_OWORD *)&v29[32];
      v21[3] = *(_OWORD *)&v29[48];
      v21[4] = *(_OWORD *)&v29[64];
      v21[5] = *(_OWORD *)&v29[80];
      v21[0] = *(_OWORD *)v29;
      v21[1] = *(_OWORD *)&v29[16];
      DOCSplitBrowserViewController.didCommitPreview(of:)(v21);
      sub_100070EDC(v6, (uint64_t)v23, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)v21, v6, (uint64_t *)&unk_100641310);
      sub_1000B2740((uint64_t)v29);
      sub_1000B2740((uint64_t)v29);
      sub_1001BF860((uint64_t)v23);
      objc_msgSend(v5, "setNeedsDisplay");
      sub_100058CC0((uint64_t)v29);
      sub_100070EDC(v6, (uint64_t)v24, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_100641310);
      if (sub_1000A849C(v25) != 1)
        objc_msgSend(v4, "setFont:", v25[0]);
      v36 = *(_OWORD *)&v29[136];
      v37 = *(_OWORD *)&v29[152];
      v38 = *(_OWORD *)&v29[168];
      v39 = *(_OWORD *)&v29[184];
      v32 = *(_OWORD *)&v29[72];
      v33 = *(_OWORD *)&v29[88];
      v34 = *(_OWORD *)&v29[104];
      v35 = *(_OWORD *)&v29[120];
      v30[0] = *(_OWORD *)&v29[8];
      v30[1] = *(_OWORD *)&v29[24];
      v30[2] = *(_OWORD *)&v29[40];
      v31 = *(_OWORD *)&v29[56];
      sub_1000B2454((uint64_t)v30);
      objc_msgSend(v4, "bounds");
      v9 = v8;
      v11 = v10;
      v12 = objc_msgSend(v4, "contentScaleFactor");
      v13 = v31;
      v15 = UIPointRoundToScale(v12, (v9 - *(double *)&v31) * 0.5, (v11 - *((double *)&v31 + 1)) * 0.5, v14);
      v17 = v16;
      sub_1000B2398(v30);
      objc_msgSend(v5, "setFrame:", v15, v17, v13);
      objc_msgSend(v4, "invalidateIntrinsicContentSize");
      sub_100058CC0((uint64_t)v29);
      sub_10049BB48();
    }
    else
    {
      v18 = v3;
    }
    v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel), "text"));
    if (v19
      || (v19 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel), "text")) != 0)
    {
      v20 = v19;

    }
    else
    {
      sub_100015B40();

    }
  }
}

uint64_t sub_10049A710(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  id *v3;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[24];

  v2 = (_BYTE *)(a1 + 16);
  LODWORD(v3) = *(unsigned __int8 *)(a1 + 16);
  if ((_DWORD)v3 == 2)
  {
    v5 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
    LODWORD(v3) = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
    if ((_DWORD)v3 == 2)
    {
      v3 = (id *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v8, 0, 0);
      if (*v3)
        LOBYTE(v3) = objc_msgSend(*v3, "isFolder");
      else
        LOBYTE(v3) = 0;
      *(_BYTE *)(a2 + v5) = (_BYTE)v3;
    }
    swift_beginAccess(v2, &v7, 1, 0);
    *v2 = (_BYTE)v3;
  }
  return v3 & 1;
}

uint64_t sub_10049A7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v4 = (uint64_t *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v5)
  {
    v6 = *v4;
  }
  else
  {
    if ((sub_10049A710(a2, a3) & 1) != 0)
    {
      v6 = 0;
      v7 = 0xE000000000000000;
    }
    else
    {
      sub_10006E6E0();
      v6 = v8;
      v7 = v9;
      swift_bridgeObjectRetain(v9);
    }
    swift_beginAccess(v4, v12, 1, 0);
    v10 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRelease(v10);
    v5 = 0;
  }
  swift_bridgeObjectRetain(v5);
  return v6;
}

uint64_t sub_10049A878(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[88];
  _QWORD v16[9];
  unint64_t v17;

  v3 = (uint64_t *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (v4)
  {
    v5 = *v3;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8);
    if (v6)
    {
      v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName);
      v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8);
      swift_bridgeObjectRetain(v6);
    }
    else
    {
      v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v13, 0, 0);
      v9 = *v8;
      if (!v9)
        goto LABEL_9;
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      sub_10006FA3C(ObjectType, (uint64_t)v15);
      swift_unknownObjectRelease(v9);
      sub_100070EDC((uint64_t)v15, (uint64_t)v16, (uint64_t *)&unk_10064A070);
      if (v16[0] == 1)
        goto LABEL_9;
      v5 = v16[8];
      v7 = v17;
      swift_bridgeObjectRetain(v17);
      sub_1002617E4((uint64_t)v15);
      if (v7)
      {
        swift_bridgeObjectRetain(0);
      }
      else
      {
LABEL_9:
        swift_bridgeObjectRelease(0);
        v5 = 0;
        v7 = 0xE000000000000000;
      }
    }
    swift_beginAccess(v3, v14, 1, 0);
    v11 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRelease(v11);
    v4 = 0;
  }
  swift_bridgeObjectRetain(v4);
  return v5;
}

uint64_t sub_10049A9CC(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v2 = (uint64_t *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v4 = *v2;
  }
  else
  {
    sub_100076A5C();
    v4 = v5;
    v7 = v6;
    swift_beginAccess(v2, v10, 1, 0);
    v8 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v7;
    swift_bridgeObjectRetain_n(v7, 2);
    swift_bridgeObjectRelease(v8);
    v3 = 0;
  }
  swift_bridgeObjectRetain(v3);
  return v4;
}

uint64_t sub_10049AA60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v4 = (uint64_t *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v5)
  {
    v6 = *v4;
  }
  else
  {
    v6 = a3();
    v8 = v7;
    swift_beginAccess(v4, v11, 1, 0);
    v9 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRelease(v9);
    v5 = 0;
  }
  swift_bridgeObjectRetain(v5);
  return v6;
}

uint64_t sub_10049AAF0(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v2 = (uint64_t *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v4 = *v2;
  }
  else
  {
    v5 = (id)DOCLocalizedMetadataStringForUnavailablePropertyValue();
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v7 = v6;

    swift_beginAccess(v2, v10, 1, 0);
    v8 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v7;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRelease(v8);
    v3 = 0;
  }
  swift_bridgeObjectRetain(v3);
  return v4;
}

void sub_10049AB98(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  id v19;
  char *v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(_QWORD *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  id v29;
  id v30;
  void *v31;
  Class isa;
  objc_class *v33;
  id v34;
  void *v35;
  objc_class *v36;
  char v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  char *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  id v59;
  char v60;
  id v61;
  char *v62;
  id v63;
  void *v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  double v69;
  id v70;
  __int128 v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  char *v79;
  char *v80;
  uint64_t v81;
  _OWORD v82[12];
  uint64_t v83;
  _BYTE v84[200];
  _BYTE v85[200];
  uint64_t v86[25];
  uint64_t v87;
  _BYTE v88[200];
  _OWORD v89[3];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;

  v2 = v1;
  v4 = type metadata accessor for UIBackgroundConfiguration(0);
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v76 - v8;
  v10 = sub_10006922C((uint64_t *)&unk_10064A090);
  __chkstk_darwin(v10);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellConfigurationState(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v12, (uint64_t *)&unk_10064A090);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v18 = v14;
  v81 = v13;
  if (v17 == 1)
  {
    v19 = objc_msgSend(v2, "_bridgedConfigurationState");
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v19);

    sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_10064A090);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  }
  v20 = v16;
  v80 = v2;
  v21 = (id *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], &v87, 0, 0);
  v23 = v77;
  if (*v21)
  {
    v24 = *v21;
    v78 = sub_10006CB98();

  }
  else
  {
    v78 = 0;
  }
  v25 = v81;
  static UIBackgroundConfiguration.listCell()(v22);
  *(_QWORD *)&v88[24] = v25;
  *(_QWORD *)&v88[32] = &protocol witness table for UICellConfigurationState;
  v26 = sub_10006CBAC(v88);
  v27 = *(void (**)(_QWORD *, char *, uint64_t))(v18 + 16);
  v79 = v20;
  v27(v26, v20, v25);
  UIBackgroundConfiguration.updated(for:)(v88);
  v28 = *(void (**)(char *, uint64_t))(v76 + 8);
  v28(v6, v23);
  sub_100068588(v88);
  v29 = v80;
  v30 = objc_msgSend(v80, "tintColor");
  if (v30)
  {
    v31 = v30;
    isa = UIBackgroundConfiguration.resolvedBackgroundColor(for:)((UIColor)v30).super.isa;

    v28(v9, v23);
    v33 = isa;
    v34 = objc_msgSend(v29, "tintColor");
    if (v34)
    {
      v35 = v34;
      sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
      v36 = v33;
      v37 = static NSObject.== infix(_:_:)(v36, v35);

      v38 = v18;
      if ((v37 & 1) != 0)
      {
        v39 = *v21;
        if (*v21)
        {
          v40 = (void *)objc_opt_self(UIColor);
          v41 = v39;
          v42 = objc_msgSend(v40, "whiteColor");
          sub_10006D2C8(v42);

          v43 = *v21;
          if (*v21)
          {
            v44 = (void *)objc_opt_self(UIColor);
            v45 = (char *)v43;
            v46 = objc_msgSend(v44, "whiteColor");
LABEL_17:
            v53 = v46;
            v54 = *(void **)&v45[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor];
            *(_QWORD *)&v45[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor] = v53;
            v36 = (objc_class *)v53;
            sub_1004AE9E0((uint64_t)v54);

            goto LABEL_19;
          }
        }
        goto LABEL_19;
      }
    }
    else
    {

      v38 = v18;
    }
    v47 = *v21;
    if (*v21)
    {
      v48 = (void *)objc_opt_self(UIColor);
      v49 = v47;
      v50 = objc_msgSend(v48, "labelColor");
      sub_10006D2C8(v50);

      v51 = *v21;
      if (*v21)
      {
        v52 = (void *)objc_opt_self(UIColor);
        v45 = (char *)v51;
        v46 = objc_msgSend(v52, "secondaryLabelColor");
        goto LABEL_17;
      }
    }
    v36 = v33;
LABEL_19:

    if (*v21)
    {
      v55 = *v21;
      v56 = sub_10006CB98();

      v58 = v78;
      v57 = v79;
      if (v78)
      {
        if (!v56
          || (sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr),
              v59 = v58,
              v60 = static NSObject.== infix(_:_:)(v59, v56),
              v59,
              v59,
              v56,
              (v60 & 1) == 0))
        {
          v61 = *v21;
          if (!*v21)
            goto LABEL_26;
LABEL_29:
          v62 = *(char **)&v80[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
          v63 = v61;
          sub_10005914C((uint64_t)v88);
          v82[10] = *(_OWORD *)&v88[160];
          v82[11] = *(_OWORD *)&v88[176];
          v83 = *(_QWORD *)&v88[192];
          v82[6] = *(_OWORD *)&v88[96];
          v82[7] = *(_OWORD *)&v88[112];
          v82[8] = *(_OWORD *)&v88[128];
          v82[9] = *(_OWORD *)&v88[144];
          v82[2] = *(_OWORD *)&v88[32];
          v82[3] = *(_OWORD *)&v88[48];
          v82[4] = *(_OWORD *)&v88[64];
          v82[5] = *(_OWORD *)&v88[80];
          v82[0] = *(_OWORD *)v88;
          v82[1] = *(_OWORD *)&v88[16];
          DOCSplitBrowserViewController.didCommitPreview(of:)(v82);
          v64 = *(void **)&v62[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
          v65 = (uint64_t)v64
              + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
          sub_100070EDC((uint64_t)v64+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v84, (uint64_t *)&unk_100641310);
          sub_100070EDC((uint64_t)v82, v65, (uint64_t *)&unk_100641310);
          sub_1000B2740((uint64_t)v88);
          sub_1000B2740((uint64_t)v88);
          sub_1001BF860((uint64_t)v84);
          objc_msgSend(v64, "setNeedsDisplay");
          sub_100058CC0((uint64_t)v88);
          sub_100070EDC(v65, (uint64_t)v85, (uint64_t *)&unk_100641310);
          sub_100070EDC((uint64_t)v85, (uint64_t)v86, (uint64_t *)&unk_100641310);
          if (sub_1000A849C(v86) != 1)
            objc_msgSend(v62, "setFont:", v86[0]);
          v95 = *(_OWORD *)&v88[136];
          v96 = *(_OWORD *)&v88[152];
          v97 = *(_OWORD *)&v88[168];
          v98 = *(_OWORD *)&v88[184];
          v91 = *(_OWORD *)&v88[72];
          v92 = *(_OWORD *)&v88[88];
          v93 = *(_OWORD *)&v88[104];
          v94 = *(_OWORD *)&v88[120];
          v89[0] = *(_OWORD *)&v88[8];
          v89[1] = *(_OWORD *)&v88[24];
          v89[2] = *(_OWORD *)&v88[40];
          v90 = *(_OWORD *)&v88[56];
          sub_1000B2454((uint64_t)v89);
          objc_msgSend(v62, "bounds");
          v67 = v66;
          v69 = v68;
          v70 = objc_msgSend(v62, "contentScaleFactor");
          v71 = v90;
          v73 = UIPointRoundToScale(v70, (v67 - *(double *)&v90) * 0.5, (v69 - *((double *)&v90 + 1)) * 0.5, v72);
          v75 = v74;
          sub_1000B2398(v89);
          objc_msgSend(v64, "setFrame:", v73, v75, v71);
          objc_msgSend(v62, "invalidateIntrinsicContentSize");
          sub_100058CC0((uint64_t)v88);
          sub_10049BB48();

          v57 = v79;
          goto LABEL_32;
        }
        goto LABEL_33;
      }
      if (v56)
      {

        v61 = *v21;
        if (*v21)
          goto LABEL_29;
LABEL_26:

LABEL_32:
        (*(void (**)(char *, uint64_t))(v38 + 8))(v57, v81);
        return;
      }
    }
    else
    {
      v58 = v78;
      v57 = v79;
      if (v78)
        goto LABEL_26;
    }
LABEL_33:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v57, v81);

    return;
  }
  __break(1u);
}

void sub_10049B2D8()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  char v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  _BYTE v17[24];

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v17, 0, 0);
  v3 = *v2;
  if (*v2)
  {
    v4 = sub_10006F62C();
    v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
    v6 = (void *)objc_opt_self(UIColor);
    v7 = v3;
    if ((v4 & 1) != 0)
    {
      v8 = objc_msgSend(v6, "quaternaryLabelColor");
      objc_msgSend(v5, "setTextColor:", v8);

      v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
      v10 = objc_msgSend(v6, "quaternaryLabelColor");
      objc_msgSend(v9, "setTextColor:", v10);

      v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "superview"));
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v11, "setAlpha:", 0.35);
LABEL_7:

      }
    }
    else
    {
      v13 = objc_msgSend(v6, "secondaryLabelColor");
      objc_msgSend(v5, "setTextColor:", v13);

      v14 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
      v15 = objc_msgSend(v6, "secondaryLabelColor");
      objc_msgSend(v14, "setTextColor:", v15);

      v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "superview"));
      if (v16)
      {
        v12 = v16;
        objc_msgSend(v16, "setAlpha:", 1.0);
        goto LABEL_7;
      }
    }

  }
}

BOOL sub_10049B4D4()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void **v6;
  void *v7;
  uint64_t v8;
  int v10;
  unsigned __int8 *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  char v17[24];

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v6, v17, 0, 0);
  v7 = *v6;
  if (!v7 || sub_10007BAFC())
    return 0;
  v10 = v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];
  v11 = v7;
  if (v10 == 1)
  {
    v12 = objc_msgSend(v1, "traitCollection");
    v13 = objc_msgSend(v12, "userInterfaceIdiom");

    return v13 == (id)6;
  }
  else
  {
    v14 = objc_msgSend(v1, "_bridgedConfigurationState");
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v14);

    LOBYTE(v14) = UICellConfigurationState.isSelected.getter(v15);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v14 & 1) != 0)
    {

      return 1;
    }
    else
    {
      v8 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing];

    }
  }
  return v8;
}

void sub_10049B650()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void **v5;
  void *v6;
  id v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  char *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  id v24;
  uint64_t v25;
  char v27[24];

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v5, v27, 0, 0);
  v6 = *v5;
  if (v6 && !sub_10007BAFC())
  {
    v7 = v6;
    v8 = sub_10049B4D4();
    v9 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView;
    v10 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v1, "_bridgedConfigurationState");
      static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v12);

      sub_100429674(v4);
      v13 = *(void **)&v1[v9];
      if (v13)
        objc_msgSend(v13, "setHidden:", !v8);
    }
    v14 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView;
    v15 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v1, "_bridgedConfigurationState");
      static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v17);

      sub_100429674(v4);
      v18 = *(void **)&v1[v14];
      if (v18)
        objc_msgSend(v18, "setHidden:", !v8);
    }
    objc_msgSend(v1, "setNeedsLayout");
    v19 = &v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate]);
    if (Strong)
    {
      v21 = Strong;
      v22 = *((_QWORD *)v19 + 1);
      ObjectType = swift_getObjectType(Strong);
      LOBYTE(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v1, ObjectType, v22);
      swift_unknownObjectRelease(v21);
      if ((v22 & 1) != 0)
      {
        v24 = sub_10049639C();
        v25 = sub_100496B40();
        objc_msgSend(v24, "setImage:", v25);

        v7 = (id)v25;
      }
    }

  }
}

void sub_10049B868()
{
  char *v0;
  char *v1;
  id *v2;
  id v3;
  uint64_t v4;
  char v5[24];

  v1 = v0;
  v2 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v2, v5, 0, 0);
  if (*v2)
  {
    v3 = *v2;
    if (objc_msgSend(v1, "isHighlighted")
      && v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics + 9] == 1)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView], "setDrawMode:", 2);
    }
    else
    {
      if ((sub_1004AF9D0() & 1) != 0)
        v4 = 3;
      else
        v4 = 0;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView], "setDrawMode:", v4);
    }

  }
}

uint64_t sub_10049B944()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v26[24];

  v1 = type metadata accessor for UICellConfigurationState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __chkstk_darwin(v3);
  v8 = &v26[-v7 - 8];
  v9 = __chkstk_darwin(v6);
  v11 = &v26[-v10 - 8];
  __chkstk_darwin(v9);
  v13 = &v26[-v12 - 8];
  v14 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v26, 0, 0);
  if (*(_QWORD *)v14)
  {
    v15 = objc_msgSend(v0, "_bridgedConfigurationState");
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v15) = UICellConfigurationState.isFocused.getter();
    v16 = *(uint64_t (**)(char *, char *, uint64_t))(v2 + 16);
    v17 = v16(v11, v13, v1);
    if ((v15 & 1) != 0)
      v18 = 1;
    else
      v18 = UICellConfigurationState.isHighlighted.getter(v17);
    v20 = *(void (**)(char *, uint64_t))(v2 + 8);
    v20(v11, v1);
    v21 = v16(v8, v13, v1);
    if ((v18 & 1) != 0)
    {
      v20(v8, v1);
      v16(v5, v13, v1);
      v19 = 1;
    }
    else
    {
      v22 = UICellConfigurationState.isSelected.getter(v21);
      v20(v8, v1);
      v23 = v16(v5, v13, v1);
      if ((v22 & 1) != 0)
        v19 = 1;
      else
        v19 = UICellConfigurationState.isEditing.getter(v23);
    }
    v20(v5, v1);
    v20(v13, v1);
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

void sub_10049BB48()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  double v16;
  id v17;
  uint64_t (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  char isEscapingClosureAtFileLocation;
  char v32;
  _QWORD aBlock[5];
  uint64_t v35;
  char v36[24];

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&aBlock[-1] - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&aBlock[-1] - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&aBlock[-1] - v13;
  v15 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  *(_QWORD *)&v16 = swift_beginAccess(v15, v36, 0, 0).n128_u64[0];
  if (*(_QWORD *)v15)
  {
    v17 = objc_msgSend(v1, "_bridgedConfigurationState", v16);
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v17) = UICellConfigurationState.isFocused.getter();
    v18 = *(uint64_t (**)(char *, char *, uint64_t))(v3 + 16);
    v19 = v18(v12, v14, v2);
    if ((v17 & 1) != 0)
      v20 = 1;
    else
      v20 = UICellConfigurationState.isHighlighted.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v21(v12, v2);
    v22 = v18(v9, v14, v2);
    if ((v20 & 1) != 0)
    {
      v21(v9, v2);
      v18(v6, v14, v2);
    }
    else
    {
      v23 = UICellConfigurationState.isSelected.getter(v22);
      v21(v9, v2);
      v24 = v18(v6, v14, v2);
      if ((v23 & 1) == 0)
      {
        v32 = UICellConfigurationState.isEditing.getter(v24);
        v21(v6, v2);
        v21(v14, v2);
        if ((v32 & 1) == 0)
          return;
        goto LABEL_9;
      }
    }
    v21(v6, v2);
    v21(v14, v2);
LABEL_9:
    v25 = (void *)objc_opt_self(UIView);
    v26 = swift_allocObject(&unk_1005F0928, 24, 7);
    *(_QWORD *)(v26 + 16) = v1;
    v27 = swift_allocObject(&unk_1005F0950, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_10049E1C8;
    *(_QWORD *)(v27 + 24) = v26;
    aBlock[4] = sub_10006657C;
    v35 = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005F0968;
    v28 = _Block_copy(aBlock);
    v29 = v35;
    v30 = v1;
    swift_retain();
    swift_release(v29);
    objc_msgSend(v25, "performWithoutAnimation:", v28);
    _Block_release(v28);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v27, "", 131, 1247, 44, 1);
    swift_release(v26);
    swift_release(v27);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_10049BE5C(char *a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  _BYTE v12[40];
  _QWORD v13[4];
  char v14;

  v2 = *(void **)&a1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
  if (v2)
  {
    v3 = v2;
    sub_1004981A0(v3);

  }
  v4 = *(void **)&a1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
  if (v4)
  {
    v5 = v4;
    sub_100497F7C((uint64_t)v12);
    sub_100070EDC((uint64_t)v12, (uint64_t)v13, &qword_10064A6C0);
    if ((v14 & 1) == 0)
    {
      v6 = *(double *)v13;
      v7 = *(double *)&v13[1];
      v8 = *(double *)&v13[2];
      v9 = *(double *)&v13[3];
      v10 = objc_msgSend(v5, "superview");
      if (v10)
      {
        v11 = v10;
        objc_msgSend(a1, "convertRect:toCoordinateSpace:", v10, v6, v7, v8, v9);
        objc_msgSend(v5, "setFrame:");

        v5 = v11;
      }
    }

  }
}

void sub_10049BF5C()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id *v37;
  double v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t ObjectType;
  void *v43;
  id v44;
  id v45;
  void *v46;
  char v47[24];
  char v48[24];
  char v49[24];
  char v50[24];
  _BYTE v51[88];
  uint64_t v52[12];

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v50, 0, 0);
  if (*v2)
  {
    v3 = (char *)*v2;
    if ((sub_10006D9D0() & 1) == 0)
    {
      v32 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView;
      v33 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView);
      if (v33)
      {
        v34 = v33;
        objc_msgSend(v34, "removeFromSuperview");
        v35 = *(void **)(v1 + v32);
        *(_QWORD *)(v1 + v32) = 0;

      }
      v36 = *(void **)(v1
                     + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder) = 0;

      v28 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile) = 0;
      goto LABEL_27;
    }
    if (*v2)
    {
      v4 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView;
      if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView))
      {
        v5 = (char *)*v2;
        if ((sub_10006D9D0() & 1) != 0)
        {
          v6 = *(void **)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
          if (v6)
          {
            v7 = objc_msgSend(v6, "isFinished");

            if ((v7 & 1) != 0)
              goto LABEL_10;
            v8 = objc_msgSend(objc_allocWithZone((Class)DOCDownloadProgressView), "init");
            v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
            objc_msgSend(v9, "addSubview:", v8);
            objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v10 = objc_msgSend(v9, "bottomAnchor");
            v11 = objc_msgSend(v8, "centerYAnchor");
            v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

            v13 = objc_msgSend(v8, "centerYAnchor");
            v14 = objc_msgSend(v9, "centerYAnchor");
            v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

            v46 = v12;
            objc_msgSend(v12, "setActive:", *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFolderActivated));
            objc_msgSend(v15, "setActive:", *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFileActivated));
            objc_msgSend(v12, "setConstant:", *(double *)(v1+ OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant));
            v45 = (id)objc_opt_self(NSLayoutConstraint);
            v16 = sub_10006922C((uint64_t *)&unk_1006441A0);
            v17 = swift_allocObject(v16, 40, 7);
            *(_OWORD *)(v17 + 16) = xmmword_1004D9B40;
            v18 = objc_msgSend(v8, "centerXAnchor");
            v19 = objc_msgSend(v9, "centerXAnchor");
            v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

            *(_QWORD *)(v17 + 32) = v20;
            v52[0] = v17;
            specialized Array._endMutation()(v21);
            v22 = v52[0];
            sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v45, "activateConstraints:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

            v24 = *(void **)(v1
                           + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder);
            *(_QWORD *)(v1
                      + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder) = v46;
            v25 = v46;

            v26 = *(void **)(v1
                           + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile);
            *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile) = v15;
            v27 = v15;

            v5 = *(char **)(v1 + v4);
            *(_QWORD *)(v1 + v4) = v8;

          }
        }

      }
    }
LABEL_10:
    v28 = *(void **)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
    if (v28
      && (objc_msgSend(v28, "isFinished") & 1) == 0
      && (v29 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node],
          *(_QWORD *)&v30 = swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v47, 0, 0).n128_u64[0], *v29)&& ((objc_msgSend(*v29, "isDownloading", v30) & 1) != 0|| *v29 && (objc_msgSend(*v29, "isExternalDownloadPlaceholder") & 1) != 0))
    {
      v31 = 1;
    }
    else
    {
      v37 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
      *(_QWORD *)&v38 = swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v49, 0, 0).n128_u64[0];
      if (*v37)
        v31 = (uint64_t)objc_msgSend(*v37, "isCopying", v38);
      else
        v31 = 0;
    }
    v39 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView), "setObservedProgress:", v28);
    objc_msgSend(*(id *)(v1 + v39), "setCanShowStopButton:", v31);
    v40 = &v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v48, 0, 0);
    v41 = *(_QWORD *)v40;
    if (v41)
    {
      ObjectType = swift_getObjectType(v41);
      swift_unknownObjectRetain(v41);
      sub_10006FA3C(ObjectType, (uint64_t)v51);
      swift_unknownObjectRelease(v41);
      sub_1002617E4((uint64_t)v51);
      sub_100070EDC((uint64_t)v51, (uint64_t)v52, (uint64_t *)&unk_10064A070);
      if (v52[0] != 1)
      {
        v43 = *(void **)(v1 + v39);
        if (v43)
        {
          v44 = v43;
          objc_msgSend(v44, "setCanShowStopButton:", 1);

        }
      }
    }
LABEL_27:

  }
}

uint64_t sub_10049C4B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  unsigned int v4;
  id *v6;
  char *v7;
  id v8;
  NSString v9;
  unsigned __int8 v10;
  id v11;
  char v12;
  void *v13;
  unsigned int v14;
  _BYTE v15[24];

  v1 = (void *)objc_opt_self(NSUserDefaults);
  v2 = objc_msgSend(v1, "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "BOOLForKey:", v3);

  if (v4)
    return *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView) == 0;
  v6 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v15, 0, 0);
  if (*v6 && !*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView))
  {
    v7 = (char *)*v6;
    v8 = objc_msgSend(v1, "standardUserDefaults");
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "BOOLForKey:", v9);

    if ((v10 & 1) != 0 || *v6 && (v11 = *v6, v12 = sub_10006F328(), v11, (v12 & 1) != 0))
    {
      v13 = *(void **)&v7[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
      if (v13)
      {
        v14 = objc_msgSend(v13, "isFinished");

        return v14 ^ 1;
      }
    }

  }
  return 0;
}

void sub_10049C65C()
{
  char *v0;
  char *v1;
  id *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  NSString v10;
  unsigned __int8 v11;
  id v12;
  char v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  __n128 v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t inited;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  uint64_t v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  void *v89;
  id v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  id v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void *v114;
  Class isa;
  void *v116;
  id v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  char *v130;
  _QWORD *v131;
  char v132[80];
  char v133[32];

  v1 = v0;
  v2 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v2, v133, 0, 0);
  v3 = (char *)*v2;
  if (*v2)
  {
    v4 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView;
    v5 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView];
    if (v5)
    {
      v6 = (void *)objc_opt_self(NSUserDefaults);
      v7 = v3;
      v8 = v5;
      v9 = objc_msgSend(v6, "standardUserDefaults");
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(v9, "BOOLForKey:", v10);

      if ((v11 & 1) == 0)
      {
        if (!*v2 || (v12 = *v2, v13 = sub_10006F328(), v12, (v13 & 1) == 0))
        {
          objc_msgSend(v8, "removeFromSuperview");
          v73 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton;
          v74 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
          if (v74)
            objc_msgSend(v74, "removeFromSuperview");
          objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView], "setClipsToBounds:", 1);
          v75 = *(void **)&v1[v4];
          *(_QWORD *)&v1[v4] = 0;

          v76 = *(void **)&v1[v73];
          *(_QWORD *)&v1[v73] = 0;

          v77 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint];
          *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint] = 0;

          v78 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint];
          *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint] = 0;

          v79 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint];
          *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint] = 0;

          v80 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint];
          *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint] = 0;

          v81 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint;
          v82 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint];
          *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint] = 0;

          v3 = *(char **)&v1[v81];
          *(_QWORD *)&v1[v81] = 0;

          goto LABEL_42;
        }
      }

    }
    else
    {
      v14 = v3;
    }
    if ((sub_10049C4B8() & 1) != 0)
    {
      v130 = v3;
      v15 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "init");
      v16 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
      objc_msgSend(v16, "addSubview:", v15);
      v17 = *(void **)&v1[v4];
      v129 = v4;
      *(_QWORD *)&v1[v4] = v15;
      v18 = v15;

      objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v19 = objc_msgSend(v18, "bottomAnchor");
      v20 = objc_msgSend(v16, "bottomAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v20, -12.0);

      v22 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint];
      v127 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint;
      *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint] = v21;

      v23 = objc_msgSend(v18, "heightAnchor");
      v24 = objc_msgSend(v23, "constraintEqualToConstant:", 4.0);

      v25 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint];
      v126 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint;
      *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint] = v24;

      v26 = objc_msgSend(v18, "leadingAnchor");
      v27 = objc_msgSend(v16, "leadingAnchor");
      v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, 12.0);

      v29 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint;
      v30 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint];
      *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint] = v28;

      v128 = v18;
      v31 = objc_msgSend(v18, "trailingAnchor");
      v32 = objc_msgSend(v16, "trailingAnchor");
      v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, -12.0);

      v34 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint];
      v125 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint;
      *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint] = v33;

      v35 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton;
      v36 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
      if (!v36)
      {
        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v37 = swift_allocObject(&unk_1005F08B0, 24, 7);
        swift_unknownObjectWeakInit(v37 + 16);
        v39 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v38, 0, 0, 0, sub_10049E174, v37);
        v40 = objc_allocWithZone((Class)type metadata accessor for DOCCircularCancelButton());
        v41 = sub_100372114(v39);
        v42 = *(void **)&v1[v35];
        *(_QWORD *)&v1[v35] = v41;

        v36 = *(void **)&v1[v35];
        if (!v36)
        {
          __break(1u);
          return;
        }
      }
      v43 = v36;
      v44 = objc_msgSend(v1, "contentView");
      objc_msgSend(v44, "addSubview:", v43);

      objc_msgSend(v16, "setClipsToBounds:", 0);
      v45 = objc_msgSend(v43, "centerXAnchor");
      v46 = objc_msgSend(v16, "leadingAnchor");
      v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

      v48 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint;
      v49 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint];
      *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint] = v47;

      v124 = v43;
      v50 = objc_msgSend(v43, "centerYAnchor");
      v51 = objc_msgSend(v16, "topAnchor");
      v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

      v53 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint;
      v54 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint];
      *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint] = v52;

      v55 = sub_10006922C((uint64_t *)&unk_100657AF0);
      inited = swift_initStackObject(v55, v132);
      *(_OWORD *)(inited + 16) = xmmword_1004E1E40;
      v57 = *(void **)&v1[v127];
      *(_QWORD *)(inited + 32) = v57;
      v58 = *(void **)&v1[v126];
      *(_QWORD *)(inited + 40) = v58;
      v59 = *(void **)&v1[v29];
      *(_QWORD *)(inited + 48) = v59;
      v60 = *(void **)&v1[v125];
      *(_QWORD *)(inited + 56) = v60;
      v61 = *(void **)&v1[v48];
      *(_QWORD *)(inited + 64) = v61;
      v62 = *(void **)&v1[v53];
      *(_QWORD *)(inited + 72) = v62;
      v131 = (_QWORD *)inited;
      specialized Array._endMutation()(inited);
      v63 = (void *)v131[4];
      if (v63)
      {
        v64 = v63;
        v65 = v57;
        v66 = v58;
        v67 = v59;
        v68 = v60;
        v69 = v61;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
        v70 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v71 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v70 >= v71 >> 1)
        {
          v118 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v70 + 1, 1);
          v70 = v118;
        }
        v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v64);
        specialized Array._endMutation()(v72);
      }
      else
      {
        v83 = v62;
        v84 = v57;
        v85 = v58;
        v86 = v59;
        v87 = v60;
        v88 = v61;
      }
      v4 = v129;
      v3 = v130;
      v89 = (void *)v131[5];
      if (v89)
      {
        v90 = v89;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v90);
        v91 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v92 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v91 >= v92 >> 1)
        {
          v119 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v91 + 1, 1);
          v91 = v119;
        }
        v93 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v90);
        specialized Array._endMutation()(v93);
      }
      v94 = (void *)v131[6];
      if (v94)
      {
        v95 = v94;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v95);
        v96 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v97 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v96 >= v97 >> 1)
        {
          v120 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v96 + 1, 1);
          v96 = v120;
        }
        v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v96, v95);
        specialized Array._endMutation()(v98);
      }
      v99 = (void *)v131[7];
      if (v99)
      {
        v100 = v99;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v100);
        v101 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v102 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v101 >= v102 >> 1)
        {
          v121 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v102 > 1, v101 + 1, 1);
          v101 = v121;
        }
        v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v100);
        specialized Array._endMutation()(v103);
      }
      v104 = (void *)v131[8];
      if (v104)
      {
        v105 = v104;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v105);
        v106 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v107 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v106 >= v107 >> 1)
        {
          v122 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v107 > 1, v106 + 1, 1);
          v106 = v122;
        }
        v108 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v105);
        specialized Array._endMutation()(v108);
      }
      v109 = (void *)v131[9];
      if (v109)
      {
        v110 = v109;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v110);
        v111 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v112 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v111 >= v112 >> 1)
        {
          v123 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v112 > 1, v111 + 1, 1);
          v111 = v123;
        }
        v113 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v111, v110);
        specialized Array._endMutation()(v113);
      }
      swift_bridgeObjectRelease(v131);
      v114 = (void *)objc_opt_self(NSLayoutConstraint);
      sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v114, "activateConstraints:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

    }
    v116 = *(void **)&v1[v4];
    if (!v116)
      goto LABEL_43;
    v117 = *(id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
    v8 = v116;
    objc_msgSend(v8, "setObservedProgress:", v117);

LABEL_42:
LABEL_43:

  }
}

void sub_10049D060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, &v7, 0, 0);
    if (*v6)
      objc_msgSend(*(id *)(*v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress), "cancel");

  }
}

void sub_10049D0F4(int a1)
{
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  char v4;
  char v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[184];
  uint64_t v9[4];
  uint64_t v10;
  _BYTE v11[32];

  sub_10026E97C(a1);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel), "setAlpha:", 1.0);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v11, 0, 0);
  v4 = 1;
  if (!*v3)
    goto LABEL_5;
  sub_100070EDC(*v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v8, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v9) == 1)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 >= 1)
    v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
  else
LABEL_5:
    v5 = 1;
  LOBYTE(v9[0]) = 1;
  sub_10049DF9C(v2, v5, 0, 0x100000000);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
  if (!*v3)
  {
LABEL_11:
    LOBYTE(v9[0]) = 1;
    sub_10049DF9C(v6, v4, 0, 0x100000000);
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v7);
    sub_10049B650();
    return;
  }
  sub_100070EDC(*v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v8, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v9) != 1)
  {
    if (v10 < 2)
      v4 = 1;
    else
      v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
}

void sub_10049D2BC()
{
  _BYTE *v0;
  _BYTE *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;
  void *v7;
  _QWORD *v8;
  char v9;
  void *v10;
  _BYTE v11[184];
  uint64_t v12[4];
  uint64_t v13;
  char v14[24];

  v1 = v0;
  sub_10026EC50();
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  if (v2)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
    v4 = v2;
    v5 = objc_msgSend(v3, "font");
    objc_msgSend(v4, "setFont:", v5);

    v6 = 1;
    objc_msgSend(v4, "setTextAlignment:", 1);
    *((_BYTE *)v4 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle) = v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics
                                                                                      + 8];
    sub_100253180();
    objc_msgSend(v4, "setTextContainerInset:", 1.5, *(double *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding], 1.0, *(double *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding]);
    objc_msgSend(v4, "verticalScrollIndicatorInsets");
    objc_msgSend(v4, "setVerticalScrollIndicatorInsets:");
    sub_10049D594(v4);
    objc_msgSend(v3, "setAlpha:", 0.0);
    v7 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel];
    v8 = &v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v14, 0, 0);
    if (!*v8)
      goto LABEL_6;
    sub_100070EDC(*v8 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v11, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v12) == 1)
    {
      __break(1u);
      goto LABEL_15;
    }
    if (v13 >= 1)
      v9 = v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];
    else
LABEL_6:
      v9 = 1;
    LOBYTE(v12[0]) = 1;
    sub_10049DF9C(v7, v9, 0, 0x100000000);
    v10 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel];
    if (!*v8)
    {
LABEL_12:
      LOBYTE(v12[0]) = 1;
      sub_10049DF9C(v10, v6, 0, 0x100000000);
      objc_msgSend(v1, "setNeedsUpdateConfiguration");
      objc_msgSend(v1, "layoutBelowIfNeeded");
      objc_msgSend(v4, "becomeFirstResponder");
      sub_10049B650();

      return;
    }
    sub_100070EDC(*v8 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v11, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v12) != 1)
    {
      if (v13 < 2)
        v6 = 1;
      else
        v6 = v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];
      goto LABEL_12;
    }
LABEL_15:
    __break(1u);
  }
}

void sub_10049D594(void *a1)
{
  char *v1;
  id v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  unint64_t v6;
  void *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _BOOL8 v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  double v30;
  uint64_t v31;
  id v32;
  void *v33;
  unint64_t v34;
  NSString v35;
  double v36;
  double v37;
  double v38;
  NSString v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  double v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  double v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  Class isa;
  unint64_t v64;
  objc_super v65;
  objc_super v66;
  objc_super v67;
  _BYTE v68[184];
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char v72[32];

  v5 = v1;
  v6 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
  v7 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView] = a1;
  v8 = a1;

  v9 = *(_QWORD *)&v5[v6];
  if (v9)
  {
    v10 = v9 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate;
    *(_QWORD *)(v10 + 8) = &protocol witness table for DOCItemCollectionCell;
    swift_unknownObjectWeakAssign(v10, v5);
  }
  v11 = objc_msgSend(v5, "contentView");
  objc_msgSend(v11, "addSubview:", v8);

  v8[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] = v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics
                                                                       + 8];
  sub_100253180();
  v14 = v8[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton];
  v8[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton] = 0;
  if ((v14 & 1) != 0)
  {
    v15 = sub_100253CE8(v12, v13);
    objc_msgSend(v15, "removeFromSuperview");

  }
  v16 = &v5[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v5[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v72, 0, 0);
  v17 = *(_QWORD *)v16;
  if (!*(_QWORD *)v16)
  {
    v22 = 2;
LABEL_9:
    v64 = v6;
    v23 = sub_10049DB78(19722, 0xE200000000000000, v22);
    v69 = (uint64_t)v23;
    v24 = sub_10006922C(&qword_10064F390);
    v25 = sub_100062698((unint64_t *)&qword_10064D530, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
    v6 = 0xE000000000000000;
    v26 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v24, v25);
    v28 = v27;
    swift_bridgeObjectRelease(v23);
    v69 = 77;
    v70 = 0xE100000000000000;
    v29._countAndFlagsBits = v26;
    v29._object = v28;
    String.append(_:)(v29);
    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v28).n128_u64[0];
    v18 = (void *)v70;
    v2 = objc_msgSend(v8, "selectedRange", v30);
    v3 = v31;
    v4 = (objc_class *)type metadata accessor for DOCItemRenameTextView();
    v67.receiver = v8;
    v67.super_class = v4;
    v32 = objc_msgSendSuper2(&v67, "text");
    if (v32)
    {
      v33 = v32;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v6 = v34;

    }
    goto LABEL_13;
  }
  v18 = &unk_100641300;
  sub_100070EDC(v17 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v68, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v68, (uint64_t)&v69, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(&v69) == 1)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v19 = v71 > 0;
  v20 = __OFADD__(v70, v19);
  v21 = v70 + v19;
  if (v20)
  {
    __break(1u);
    goto LABEL_21;
  }
  v22 = v21 - 1;
  if (!__OFSUB__(v21, 1))
    goto LABEL_9;
  __break(1u);
LABEL_13:
  swift_bridgeObjectRetain(v18);
  v35 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v18).n128_u64[0];
  v66.receiver = v8;
  v66.super_class = v4;
  objc_msgSendSuper2(&v66, "setText:", v35, v36);

  objc_msgSend(v8, "setNeedsLayout");
  objc_msgSend(v8, "layoutIfNeeded");
  objc_msgSend(v8, "contentSize");
  v38 = v37;
  v39 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v40 = swift_bridgeObjectRelease(v6).n128_u64[0];
  v65.receiver = v8;
  v65.super_class = v4;
  objc_msgSendSuper2(&v65, "setText:", v39, v40);

  objc_msgSend(v8, "setSelectedRange:", v2, v3);
  swift_bridgeObjectRelease(v18);
  v41 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v42 = swift_allocObject(v41, 64, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1004DAC10;
  v43 = objc_msgSend(v8, "topAnchor");
  v44 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel], "topAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v42 + 32) = v45;
  v46 = objc_msgSend(v8, "heightAnchor");
  v47 = objc_msgSend(v46, "constraintEqualToConstant:", v38);

  *(_QWORD *)(v42 + 40) = v47;
  v48 = objc_msgSend(v8, "leadingAnchor");
  v49 = *(void **)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView];
  v50 = objc_msgSend(v49, "leadingAnchor");
  if (*(_QWORD *)&v5[v64])
    v51 = 5.0;
  else
    v51 = 0.0;
  v52 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding;
  v53 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v50, -(v51 + *(double *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding]));

  *(_QWORD *)(v42 + 48) = v53;
  v54 = objc_msgSend(v8, "trailingAnchor");
  v55 = objc_msgSend(v49, "trailingAnchor");
  if (*(_QWORD *)&v5[v64])
    v56 = 5.0;
  else
    v56 = 0.0;
  v57 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, *(double *)&v5[v52] + v56);

  *(_QWORD *)(v42 + 56) = v57;
  v69 = v42;
  specialized Array._endMutation()(v58);
  v59 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints;
  v60 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints];
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints] = v69;
  swift_bridgeObjectRelease(v60);
  v61 = (void *)objc_opt_self(NSLayoutConstraint);
  v62 = *(_QWORD *)&v5[v59];
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v62);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v61, "activateConstraints:", isa, swift_bridgeObjectRelease(v62).n128_f64[0]);

}

_QWORD *sub_10049DB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *result;

  if (a3 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a3, &type metadata for String);
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            swift_bridgeObjectRetain(a2);
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain(a2);
      }
    }
    else
    {
      swift_bridgeObjectRelease(a2);
      return _swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

double sub_10049DC90()
{
  uint64_t v0;
  double result;

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider, &qword_100657AE8);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder));

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints)).n128_u64[0];
  return result;
}

id sub_10049DE34(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCItemCollectionGridCell);
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionGridCell.Metrics(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionGridCell.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionGridCell.Metrics()
{
  return &type metadata for DOCItemCollectionGridCell.Metrics;
}

double sub_10049DF40()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _OWORD v3[4];
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  sub_1002D6F6C(v3);
  v0 = *(_QWORD *)&v3[0];
  sub_1002D6F6C(&v4);
  v1 = v5;
  sub_1002D6F6C(&v6);
  result = *(double *)&v6 + *((double *)&v6 + 1) + *((double *)&v6 + 1);
  qword_100657980 = v0;
  qword_100657988 = v1;
  *(double *)&qword_100657990 = result;
  return result;
}

void sub_10049DF9C(id a1, char a2, void *a3, uint64_t a4)
{
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;
  float v14;
  float v15;
  double v16;
  id v17;

  if (a2 == 2)
    v7 = objc_msgSend(a1, "isHidden");
  else
    v7 = (id)(a2 & 1);
  v8 = v7 ^ objc_msgSend(a1, "isHidden");
  if (v8 == 1)
    objc_msgSend(a1, "setHidden:", v7);
  v9 = a3;
  if (!a3)
    v9 = objc_msgSend(a1, "font");
  v17 = v9;
  v10 = a3;
  v11 = objc_msgSend(a1, "font");
  if (v17)
  {
    if (v11)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      v12 = v17;
      v13 = static NSObject.== infix(_:_:)(v12, v11);

      if ((v13 & 1) != 0)
        goto LABEL_15;
    }
  }
  else
  {
    if (!v11)
      goto LABEL_15;

  }
  objc_msgSend(a1, "setFont:", v17);
  v8 = 1;
LABEL_15:
  if ((a4 & 0x100000000) != 0)
  {
    objc_msgSend(a1, "_hyphenationFactor");
    v14 = v15;
  }
  else
  {
    v14 = *(float *)&a4;
  }
  objc_msgSend(a1, "_hyphenationFactor");
  if (v14 == *(float *)&v16)
  {
    if (!v8)
      goto LABEL_23;
  }
  else
  {
    *(float *)&v16 = v14;
    objc_msgSend(a1, "_setHyphenationFactor:", v16);
  }
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
LABEL_23:

}

uint64_t sub_10049E150()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10049E174(uint64_t a1)
{
  uint64_t v1;

  sub_10049D060(a1, v1);
}

uint64_t sub_10049E17C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10049E1A0()
{
  sub_10049BB48();
}

void sub_10049E1C0()
{
  uint64_t v0;

  sub_100498880(v0);
}

void sub_10049E1C8()
{
  uint64_t v0;

  sub_10049BE5C(*(char **)(v0 + 16));
}

uint64_t sub_10049E1D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_10049E1E0(uint64_t a1, uint64_t a2, uint64_t a3, CGFloat *a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int64_t v10;
  CGFloat *v20;
  CGFloat v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double Height;
  BOOL v26;
  double v27;
  double v28;
  _BOOL4 v29;
  double v30;
  double v31;
  double v32;
  CGFloat v33;
  unint64_t v34;
  unint64_t v35;
  double *v36;
  double v38;
  double v39;
  uint64_t v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    sub_100155404(0, v10, 0);
    v39 = a5 + a6;
    v41 = *(_QWORD *)(a2 + 16);
    v38 = a8 + a9;
    v20 = (CGFloat *)(a1 + 56);
    do
    {
      v21 = *(v20 - 3);
      v22 = *(v20 - 2);
      v23 = *(v20 - 1);
      v24 = *v20;
      v42.origin.x = v21;
      v42.origin.y = v22;
      v42.size.width = v23;
      v42.size.height = *v20;
      Height = CGRectGetHeight(v42);
      if (v41)
      {
        v43.origin.x = v21;
        v43.origin.y = v22;
        v43.size.width = v23;
        v43.size.height = v24;
        v26 = CGRectEqualToRect(v43, *(CGRect *)(a2 + 32));
        v27 = Height + -1.0;
        if (a3 == 1)
          v27 = Height - a7;
        if (v26)
        {
          Height = v27;
          v28 = v39;
        }
        else
        {
          v28 = 0.0;
        }
        v44.origin.x = v21;
        v44.origin.y = v22;
        v44.size.width = v23;
        v44.size.height = v24;
        v29 = CGRectEqualToRect(v44, *(CGRect *)(a2 + 32 * v41));
        v30 = 1.0;
        if (!v29 || a3 != 2)
          v30 = 0.0;
        Height = Height - v30;
        v31 = v38;
        if (!v29)
          v31 = 0.0;
      }
      else
      {
        v31 = 0.0;
        v28 = 0.0;
      }
      v32 = v31 + v23 + v28;
      v33 = *a4;
      v45.origin.x = (a10 - v32) * 0.5;
      v45.origin.y = *a4;
      v45.size.width = v32;
      v45.size.height = Height;
      *a4 = CGRectGetHeight(v45) + *a4;
      v35 = _swiftEmptyArrayStorage[2];
      v34 = _swiftEmptyArrayStorage[3];
      if (v35 >= v34 >> 1)
        sub_100155404(v34 > 1, v35 + 1, 1);
      _swiftEmptyArrayStorage[2] = v35 + 1;
      v36 = (double *)&_swiftEmptyArrayStorage[4 * v35];
      v36[4] = (a10 - v32) * 0.5;
      v36[5] = v33;
      v36[6] = v32;
      v36[7] = Height;
      v20 += 4;
      --v10;
    }
    while (v10);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10049E420()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10049E430()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10049E454()
{
  uint64_t v0;

  sub_100497184(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10049E45C()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10049E490()
{
  void **v0;

  sub_100496F40(v0[2], v0[3], v0[4]);
}

BOOL sub_10049E49C(double a1, CGFloat a2)
{
  uint64_t v2;
  id v3;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  double v12;
  double MinY;
  double v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v3 = *(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  objc_msgSend(v3, "bounds");
  objc_msgSend(v3, "convertRect:toCoordinateSpace:", v2);
  x = v20.origin.x;
  y = v20.origin.y;
  width = v20.size.width;
  height = v20.size.height;
  v21 = CGRectInset(v20, 0.0, -5.0);
  v22 = CGRectOffset(v21, 0.0, 10.0);
  v8 = v22.origin.x;
  v9 = v22.origin.y;
  v10 = v22.size.width;
  v11 = v22.size.height;
  v22.origin.x = x;
  v22.origin.y = y;
  v22.size.width = width;
  v22.size.height = height;
  v12 = CGRectGetMidY(v22) + -2.0;
  v23.origin.x = v8;
  v23.origin.y = v9;
  v23.size.width = v10;
  v23.size.height = v11;
  MinY = CGRectGetMinY(v23);

  if (MinY >= v12)
    v14 = v12;
  else
    v14 = MinY;
  v15 = v8;
  v16 = v10;
  v17 = v11;
  return CGRectGetMaxY(*(CGRect *)(&v14 - 1)) < a2;
}

id sub_10049E5A8()
{
  uint64_t v0;

  return sub_100496160(*(char **)(v0 + 16));
}

uint64_t sub_10049E5B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for DOCItemCollectionGridCell.Metrics.Spacing()
{
  return &type metadata for DOCItemCollectionGridCell.Metrics.Spacing;
}

double sub_10049E5F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  double result;

  v13 = v12;
  v18 = *(_QWORD *)(v12 + 32);
  if (v18)
  {
    swift_retain();
    DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(1.0);
    swift_release(v18);
  }
  v19 = swift_allocObject(&unk_1005F0DF0, 64, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  *(_BYTE *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 33) = BYTE1(a4) & 1;
  *(_QWORD *)(v19 + 40) = a9;
  *(_QWORD *)(v19 + 48) = a10;
  *(_QWORD *)(v19 + 56) = v13;
  v20 = (void *)objc_opt_self(FPItemManager);
  sub_1004A0284(a2, a3, a4, BYTE1(a4) & 1);
  swift_retain();
  v21 = objc_msgSend(v20, "defaultManager", swift_retain().n128_f64[0]);
  if ((a7 & 1) != 0)
    sub_10047C130(a1, a5, a6, a8, 0, (void **)sub_1004A0318, v19, (uint64_t)a11, a12);
  else
    sub_10047C58C(a1, a5, a6, a8, 0, (uint64_t)sub_1004A0318, v19, a11, a12);

  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_10049E758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v14 = (a4 >> 8) & 1;
  v32 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v31 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v16 - 8);
  v35 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v33 = static OS_dispatch_queue.main.getter(v19);
  v20 = swift_allocObject(&unk_1005F0E18, 72, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_BYTE *)(v20 + 40) = a4;
  *(_BYTE *)(v20 + 41) = v14;
  *(_QWORD *)(v20 + 48) = a5;
  *(_QWORD *)(v20 + 56) = a6;
  *(_QWORD *)(v20 + 64) = a7;
  aBlock[4] = sub_1004A0360;
  v38 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005F0E30;
  v21 = _Block_copy(aBlock);
  v22 = v38;
  swift_errorRetain(a1);
  sub_1004A0284(a2, a3, a4, v14);
  swift_retain();
  swift_retain();
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_10008BAAC();
  v25 = sub_10006922C((uint64_t *)&unk_100647540);
  v26 = sub_1000791AC();
  v28 = v31;
  v27 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v32, v24);
  v29 = (void *)v33;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v28, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v35);
}

uint64_t sub_10049E99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, _QWORD), uint64_t a6, uint64_t a7)
{
  id *v13;
  void (*v14)(void);
  id v15;
  unsigned int v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v13 = (id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(a1);
  v14 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v13) + 0xA0);
  v15 = *v13;
  v14();

  if (a1)
  {
    a3 = 0;
    a4 = 0;
    v16 = 1;
    a2 = a1;
  }
  else
  {
    v16 = (a4 >> 8) & 1;
    sub_1004A0284(a2, a3, a4, BYTE1(a4) & 1);
  }
  swift_errorRetain(a1);
  a5(a2, a3, a4 | (v16 << 8));
  v17 = *(_QWORD *)(a7 + 32);
  if (v17)
  {
    if (v16)
      v18 = 0;
    else
      v18 = (void *)a3;
    if (v16)
      v19 = 0;
    else
      v19 = a2;
    swift_retain();
    sub_10040CB9C(v19, v18);
    swift_release(v17);
  }
  return sub_1002A8744(a2, a3, a4, v16);
}

id sub_10049EAB8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19;
  uint64_t v20;
  id result;
  void *v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  NSString v43;
  id v44;
  uint64_t v45;
  void *v46;
  Swift::String v47;
  Swift::String_optional v48;
  Swift::String v49;
  void *object;
  _QWORD *v51;
  id v52;
  id v53;
  NSString v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  int v59;
  Swift::String v60;
  Swift::String_optional v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  id v72;
  void *v73;
  NSString v74;
  void *v75;
  double v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  int v92;
  void *v93;
  uint64_t countAndFlagsBits;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  char *v104;
  uint64_t v105;
  id v106;
  __int128 v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  void **aBlock;
  uint64_t v112;
  void (*v113)(uint64_t, void *);
  void *v114;
  uint64_t (*v115)();
  _QWORD *v116;
  Swift::String v117;
  Swift::String v118;
  Swift::String v119;
  Swift::String v120;

  v101 = a6;
  v103 = a8;
  v102 = a7;
  v106 = a5;
  v108 = a3;
  v109 = type metadata accessor for Logger(0);
  v105 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v104 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)_DocumentManagerBundle(v20);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v22 = result;
  v117._countAndFlagsBits = 0xD000000000000031;
  v117._object = (void *)0x8000000100539DE0;
  v23._object = (void *)0x8000000100539DA0;
  v23._countAndFlagsBits = 0x1000000000000038;
  v24.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v24.value._object = (void *)0xEB00000000656C62;
  v25._countAndFlagsBits = 0x1000000000000038;
  v25._object = (void *)0x8000000100539DA0;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v117);

  v27 = sub_10006922C((uint64_t *)&unk_100644560);
  v28 = swift_allocObject(v27, 72, 7);
  v107 = xmmword_1004D9670;
  *(_OWORD *)(v28 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v28 + 56) = &type metadata for String;
  v29 = sub_10006A638();
  *(_QWORD *)(v28 + 64) = v29;
  *(_QWORD *)(v28 + 32) = a1;
  *(_QWORD *)(v28 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v30 = String.init(format:_:)(v26._countAndFlagsBits, v26._object, v28);
  v32 = v31;
  swift_bridgeObjectRelease(v26._object);
  result = (id)_DocumentManagerBundle(v33);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v34 = result;
  v35._countAndFlagsBits = 0x1000000000000054;
  v118._countAndFlagsBits = 0xD000000000000043;
  v118._object = (void *)0x8000000100539C40;
  v35._object = (void *)0x8000000100539BE0;
  v36.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v36.value._object = (void *)0xEB00000000656C62;
  v37._countAndFlagsBits = 0x1000000000000054;
  v37._object = (void *)0x8000000100539BE0;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v118);

  v39 = swift_allocObject(v27, 72, 7);
  *(_OWORD *)(v39 + 16) = v107;
  *(_QWORD *)(v39 + 56) = &type metadata for String;
  *(_QWORD *)(v39 + 64) = v29;
  *(_QWORD *)(v39 + 32) = v108;
  *(_QWORD *)(v39 + 40) = a4;
  swift_bridgeObjectRetain(a4);
  String.init(format:_:)(v38._countAndFlagsBits, v38._object, v39);
  v41 = v40;
  swift_bridgeObjectRelease(v38._object);
  swift_bridgeObjectRetain(v32);
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  v44 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v42, v43, 1);

  result = (id)_DocumentManagerBundle(v45);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v46 = result;
  v89 = v30;
  *(_QWORD *)&v107 = v32;
  v119._object = (void *)0x8000000100519410;
  v47._countAndFlagsBits = 0x6C65636E6143;
  v47._object = (void *)0xE600000000000000;
  v48.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v48.value._object = (void *)0xEB00000000656C62;
  v49._countAndFlagsBits = 0x6C65636E6143;
  v49._object = (void *)0xE600000000000000;
  v119._countAndFlagsBits = 0xD00000000000001BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v119)._object;

  v51 = (_QWORD *)swift_allocObject(&unk_1005F0D50, 56, 7);
  v97 = a13;
  v51[2] = a13;
  v51[3] = a14;
  v98 = a15;
  v51[4] = a15;
  v51[5] = a16;
  v52 = v106;
  v51[6] = v106;
  v99 = a14;
  swift_retain();
  v96 = a16;
  swift_retain();
  v53 = v52;
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v115 = sub_1004A0254;
  v116 = v51;
  aBlock = _NSConcreteStackBlock;
  v112 = 1107296256;
  v113 = sub_1000602CC;
  v114 = &unk_1005F0D68;
  v55 = _Block_copy(&aBlock);
  swift_release(v116);
  v106 = (id)objc_opt_self(UIAlertAction);
  v56 = objc_msgSend(v106, "actionWithTitle:style:handler:", v54, 1, v55);
  _Block_release(v55);

  v108 = v44;
  v95 = v56;
  result = (id)_DocumentManagerBundle(objc_msgSend(v44, "addAction:", v56));
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v57 = result;
  v91 = a12;
  v92 = a11;
  v58 = v103;
  v59 = (v103 >> 8) & 1;
  v120._countAndFlagsBits = 0xD000000000000032;
  v90 = a10;
  v120._object = (void *)0x8000000100539E20;
  v60._countAndFlagsBits = 0x65766F6D6552;
  v60._object = (void *)0xE600000000000000;
  v61.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v61.value._object = (void *)0xEB00000000656C62;
  v62._countAndFlagsBits = 0x65766F6D6552;
  v62._object = (void *)0xE600000000000000;
  v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v57, v62, v120);
  countAndFlagsBits = v63._countAndFlagsBits;
  v93 = v63._object;

  v64 = swift_allocObject(&unk_1005F0CD8, 24, 7);
  swift_weakInit(v64 + 16, v100);
  v65 = swift_allocObject(&unk_1005F0DA0, 120, 7);
  *(_QWORD *)(v65 + 16) = v64;
  *(_QWORD *)(v65 + 24) = v53;
  v67 = v101;
  v66 = v102;
  *(_QWORD *)(v65 + 32) = v101;
  *(_QWORD *)(v65 + 40) = v66;
  *(_BYTE *)(v65 + 48) = v58;
  *(_BYTE *)(v65 + 49) = v59;
  *(_QWORD *)(v65 + 56) = a9;
  *(_QWORD *)(v65 + 64) = a10;
  *(_BYTE *)(v65 + 72) = v92 & 1;
  v68 = v97;
  *(_QWORD *)(v65 + 80) = a12;
  *(_QWORD *)(v65 + 88) = v68;
  v69 = v98;
  *(_QWORD *)(v65 + 96) = v99;
  *(_QWORD *)(v65 + 104) = v69;
  *(_QWORD *)(v65 + 112) = v96;
  swift_retain();
  swift_retain();
  v70 = v53;
  v71 = v64;
  swift_retain();
  sub_1004A0284(v67, v66, v58, BYTE1(v58) & 1);
  sub_1004A0294(a9, v90);
  v72 = v91;
  v73 = v93;
  v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v73);
  v115 = sub_1004A0280;
  v116 = (_QWORD *)v65;
  aBlock = _NSConcreteStackBlock;
  v112 = 1107296256;
  v113 = sub_1000602CC;
  v114 = &unk_1005F0DB8;
  v75 = _Block_copy(&aBlock);
  *(_QWORD *)&v76 = swift_release(v116).n128_u64[0];
  v77 = objc_msgSend(v106, "actionWithTitle:style:handler:", v74, 0, v75, v76);
  _Block_release(v75);
  swift_release(v71);

  v78 = v108;
  objc_msgSend(v108, "addAction:", v77);
  objc_msgSend(v78, "setPreferredAction:", v77);
  v79 = Logger.Rename.unsafeMutableAddressor(objc_msgSend(v72, "presentViewController:animated:completion:", v78, 1, 0));
  v81 = v104;
  v80 = v105;
  v82 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v104, v79, v109);
  v83 = v107;
  v84 = swift_bridgeObjectRetain(v107);
  v85 = Logger.logObject.getter(v84);
  v86 = static os_log_type_t.debug.getter(v85);
  if (os_log_type_enabled(v85, v86))
  {
    v87 = swift_slowAlloc(22, -1);
    v88 = (void **)swift_slowAlloc(64, -1);
    aBlock = v88;
    *(_DWORD *)v87 = 136315394;
    v110 = sub_1000544FC(0xD00000000000009ALL, 0x8000000100539E60, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &aBlock);
    *(_WORD *)(v87 + 12) = 2080;
    swift_bridgeObjectRetain(v83);
    v110 = sub_1000544FC(v89, v83, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &aBlock);
    swift_bridgeObjectRelease_n(v83, 3);
    _os_log_impl((void *)&_mh_execute_header, v85, v86, "%s: prompting user for file extension removal confirmation with message: %s", (uint8_t *)v87, 0x16u);
    swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v88, -1, -1);
    swift_slowDealloc(v87, -1, -1);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v81, v109);
  }
  else
  {

    swift_bridgeObjectRelease_n(v83, 2);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v81, v82);
  }
}

id sub_10049F3D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id result;
  void *v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  Swift::String v36;
  Swift::String_optional v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  NSString v44;
  id v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  Swift::String_optional v49;
  Swift::String v50;
  void *object;
  _QWORD *v52;
  id v53;
  NSString v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  int v59;
  Swift::String v60;
  Swift::String_optional v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  void *v73;
  NSString v74;
  void *v75;
  double v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  int v92;
  void *v93;
  uint64_t countAndFlagsBits;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  __int128 v109;
  id v110;
  uint64_t v111;
  void **aBlock;
  uint64_t v113;
  void (*v114)(uint64_t, void *);
  void *v115;
  uint64_t (*v116)();
  _QWORD *v117;
  Swift::String v118;
  Swift::String v119;
  Swift::String v120;
  Swift::String v121;

  v102 = a6;
  v104 = a8;
  v103 = a7;
  v108 = a5;
  v110 = a3;
  v19 = type metadata accessor for Logger(0);
  v106 = *(_QWORD *)(v19 - 8);
  v107 = v19;
  __chkstk_darwin(v19);
  v105 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)_DocumentManagerBundle(v21);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v23 = result;
  v118._countAndFlagsBits = 0xD000000000000035;
  v118._object = (void *)0x8000000100539BA0;
  v24._object = (void *)0x8000000100539B50;
  v24._countAndFlagsBits = 0x100000000000004CLL;
  v25.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v25.value._object = (void *)0xEB00000000656C62;
  v26._countAndFlagsBits = 0x100000000000004CLL;
  v26._object = (void *)0x8000000100539B50;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v118);

  v28 = sub_10006922C((uint64_t *)&unk_100644560);
  v29 = swift_allocObject(v28, 72, 7);
  v109 = xmmword_1004D9670;
  *(_OWORD *)(v29 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  v30 = sub_10006A638();
  *(_QWORD *)(v29 + 64) = v30;
  *(_QWORD *)(v29 + 32) = a1;
  *(_QWORD *)(v29 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v31 = String.init(format:_:)(v27._countAndFlagsBits, v27._object, v29);
  v33 = v32;
  swift_bridgeObjectRelease(v27._object);
  result = (id)_DocumentManagerBundle(v34);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v35 = result;
  v36._countAndFlagsBits = 0x1000000000000054;
  v119._countAndFlagsBits = 0xD000000000000043;
  v119._object = (void *)0x8000000100539C40;
  v36._object = (void *)0x8000000100539BE0;
  v37.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v37.value._object = (void *)0xEB00000000656C62;
  v38._countAndFlagsBits = 0x1000000000000054;
  v38._object = (void *)0x8000000100539BE0;
  v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v35, v38, v119);

  v40 = swift_allocObject(v28, 72, 7);
  *(_OWORD *)(v40 + 16) = v109;
  *(_QWORD *)(v40 + 56) = &type metadata for String;
  *(_QWORD *)(v40 + 64) = v30;
  *(_QWORD *)(v40 + 32) = v110;
  *(_QWORD *)(v40 + 40) = a4;
  swift_bridgeObjectRetain(a4);
  String.init(format:_:)(v39._countAndFlagsBits, v39._object, v40);
  v42 = v41;
  swift_bridgeObjectRelease(v39._object);
  swift_bridgeObjectRetain(v33);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v45 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v43, v44, 1);

  result = (id)_DocumentManagerBundle(v46);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v47 = result;
  v89 = v31;
  v100 = v33;
  v120._countAndFlagsBits = 0xD000000000000032;
  v120._object = (void *)0x8000000100539C90;
  v48._countAndFlagsBits = 0x20749980E26E6F44;
  v48._object = (void *)0xAB00000000646441;
  v49.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v49.value._object = (void *)0xEB00000000656C62;
  v50._countAndFlagsBits = 0x20749980E26E6F44;
  v50._object = (void *)0xAB00000000646441;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v49, (NSBundle)v47, v50, v120)._object;

  v52 = (_QWORD *)swift_allocObject(&unk_1005F0C88, 56, 7);
  v97 = a13;
  v52[2] = a13;
  v52[3] = a14;
  v99 = a15;
  v52[4] = a15;
  v52[5] = a16;
  v53 = v108;
  v52[6] = v108;
  v98 = a14;
  swift_retain();
  v96 = a16;
  swift_retain();
  v95 = v53;
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v116 = sub_1004A0254;
  v117 = v52;
  aBlock = _NSConcreteStackBlock;
  v113 = 1107296256;
  v114 = sub_1000602CC;
  v115 = &unk_1005F0CA0;
  v55 = _Block_copy(&aBlock);
  swift_release(v117);
  v108 = (id)objc_opt_self(UIAlertAction);
  v56 = objc_msgSend(v108, "actionWithTitle:style:handler:", v54, 1, v55);
  _Block_release(v55);

  *(_QWORD *)&v109 = v45;
  v110 = v56;
  result = (id)_DocumentManagerBundle(objc_msgSend(v45, "addAction:", v56));
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v57 = result;
  v91 = a12;
  v92 = a11;
  v58 = v104;
  v59 = (v104 >> 8) & 1;
  v90 = a10;
  v121._object = (void *)0x8000000100539CD0;
  v60._countAndFlagsBits = 6579265;
  v60._object = (void *)0xE300000000000000;
  v61.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v61.value._object = (void *)0xEB00000000656C62;
  v62._countAndFlagsBits = 6579265;
  v62._object = (void *)0xE300000000000000;
  v121._countAndFlagsBits = 0xD00000000000002ELL;
  v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v57, v62, v121);
  countAndFlagsBits = v63._countAndFlagsBits;
  v93 = v63._object;

  v64 = swift_allocObject(&unk_1005F0CD8, 24, 7);
  swift_weakInit(v64 + 16, v101);
  v65 = swift_allocObject(&unk_1005F0D00, 120, 7);
  v66 = v95;
  *(_QWORD *)(v65 + 16) = v64;
  *(_QWORD *)(v65 + 24) = v66;
  v68 = v102;
  v67 = v103;
  *(_QWORD *)(v65 + 32) = v102;
  *(_QWORD *)(v65 + 40) = v67;
  *(_BYTE *)(v65 + 48) = v58;
  *(_BYTE *)(v65 + 49) = v59;
  *(_QWORD *)(v65 + 56) = a9;
  *(_QWORD *)(v65 + 64) = a10;
  *(_BYTE *)(v65 + 72) = v92 & 1;
  v69 = v97;
  *(_QWORD *)(v65 + 80) = a12;
  *(_QWORD *)(v65 + 88) = v69;
  v70 = v99;
  *(_QWORD *)(v65 + 96) = v98;
  *(_QWORD *)(v65 + 104) = v70;
  *(_QWORD *)(v65 + 112) = v96;
  swift_retain();
  swift_retain();
  v71 = v66;
  swift_retain();
  sub_1004A0284(v68, v67, v58, BYTE1(v58) & 1);
  sub_1004A0294(a9, v90);
  v72 = v91;
  v73 = v93;
  v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v73);
  v116 = sub_1004A0280;
  v117 = (_QWORD *)v65;
  aBlock = _NSConcreteStackBlock;
  v113 = 1107296256;
  v114 = sub_1000602CC;
  v115 = &unk_1005F0D18;
  v75 = _Block_copy(&aBlock);
  *(_QWORD *)&v76 = swift_release(v117).n128_u64[0];
  v77 = objc_msgSend(v108, "actionWithTitle:style:handler:", v74, 0, v75, v76);
  _Block_release(v75);
  swift_release(v64);

  v78 = (void *)v109;
  objc_msgSend((id)v109, "addAction:", v77);
  objc_msgSend(v78, "setPreferredAction:", v110);
  v79 = Logger.Rename.unsafeMutableAddressor(objc_msgSend(v72, "presentViewController:animated:completion:", v78, 1, 0));
  v81 = v105;
  v80 = v106;
  v82 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v105, v79, v107);
  v83 = v100;
  v84 = swift_bridgeObjectRetain(v100);
  v85 = Logger.logObject.getter(v84);
  v86 = static os_log_type_t.debug.getter(v85);
  if (os_log_type_enabled(v85, v86))
  {
    v87 = swift_slowAlloc(22, -1);
    v88 = (void **)swift_slowAlloc(64, -1);
    aBlock = v88;
    *(_DWORD *)v87 = 136315394;
    v108 = v77;
    v111 = sub_1000544FC(0xD000000000000096, 0x8000000100539D00, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &aBlock);
    *(_WORD *)(v87 + 12) = 2080;
    swift_bridgeObjectRetain(v83);
    v111 = sub_1000544FC(v89, v83, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &aBlock);
    swift_bridgeObjectRelease_n(v83, 3);
    _os_log_impl((void *)&_mh_execute_header, v85, v86, "%s: prompting user for file extension addition confirmation with message: %s", (uint8_t *)v87, 0x16u);
    swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v88, -1, -1);
    swift_slowDealloc(v87, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v83, 2);
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v81, v82);
}

uint64_t sub_10049FCFC(uint64_t a1, void (*a2)(uint64_t, _QWORD, uint64_t), uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;

  v9 = sub_10028A0E8();
  v10 = swift_allocError(&type metadata for FilenameValidationError, v9, 0, 0);
  *v11 = 5;
  a2(v10, 0, 256);
  swift_errorRelease(v10);
  v12 = swift_allocError(&type metadata for FilenameValidationError, v9, 0, 0);
  *v13 = 5;
  a4(a6, v12);
  return swift_errorRelease(v12);
}

double sub_10049FDC4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, uint64_t a8, char a9, void *a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14)
{
  uint64_t v20;
  uint64_t Strong;
  double result;
  uint64_t v23;
  _BYTE v24[24];

  v20 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_weakLoadStrong(v20);
  if (Strong)
  {
    v23 = Strong;
    sub_10049E5F4(a3, a4, a5, a6 & 0x1FF, a7, a8, a9 & 1, a10, a11, a12, a13, a14);
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  }
  return result;
}

double sub_10049FE80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, _QWORD, uint64_t), uint64_t a6, void **a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int16 a12, void *a13)
{
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  double result;
  char v39;
  uint64_t Strong;
  uint64_t v41;
  int v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v48[24];

  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v17, "stringByDeletingPathExtension");

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = objc_msgSend(a4, "displayName");
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  if (v19 == v23 && v21 == v25)
    goto LABEL_8;
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v25, 0);
  *(_QWORD *)&v28 = swift_bridgeObjectRelease(v25).n128_u64[0];
  if ((v27 & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease(v21);
    v33 = sub_10028A0E8();
    v34 = swift_allocError(&type metadata for FilenameValidationError, v33, 0, 0);
    *v35 = 5;
    a5(v34, 0, 256);
    swift_errorRelease(v34);
    v36 = swift_allocError(&type metadata for FilenameValidationError, v33, 0, 0);
    *v37 = 5;
    ((void (*)(void *, uint64_t))a7)(a4, v36);
    swift_errorRelease(v36);
    return result;
  }
  v29 = objc_msgSend(a4, "filename", v28);
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  if (v19 == v30 && v21 == v32)
  {
LABEL_8:
    swift_bridgeObjectRelease(v21);
    goto LABEL_9;
  }
  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v30, v32, 0);
  swift_bridgeObjectRelease(v32);
  if ((v39 & 1) != 0)
    goto LABEL_9;
  swift_beginAccess(a9 + 16, v48, 0, 0);
  Strong = swift_weakLoadStrong(a9 + 16);
  if (Strong)
  {
    v46 = Strong;
    v41 = *(_QWORD *)(Strong + 32);
    if (v41)
    {
      swift_retain();
      DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(1.0);
      swift_release(v41);
    }
    v42 = HIBYTE(a12) & 1;
    v45 = swift_allocObject(&unk_1005F0F58, 64, 7);
    *(_QWORD *)(v45 + 16) = a10;
    *(_QWORD *)(v45 + 24) = a11;
    *(_BYTE *)(v45 + 32) = a12;
    *(_BYTE *)(v45 + 33) = v42;
    *(_QWORD *)(v45 + 40) = a5;
    *(_QWORD *)(v45 + 48) = a6;
    *(_QWORD *)(v45 + 56) = v46;
    v44 = (id)objc_opt_self(FPItemManager);
    sub_1004A0284(a10, a11, a12, v42);
    swift_retain();
    v43 = objc_msgSend(v44, "defaultManager", swift_retain().n128_f64[0]);
    sub_10047C58C(a4, v19, v21, a13, 0, (uint64_t)sub_1004A0318, v45, a7, a8);
    swift_release(v46);
    swift_bridgeObjectRelease(v21);

    *(_QWORD *)&result = swift_release(v45).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  }
  return result;
}

uint64_t DOCItemRenameOperation.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t DOCItemRenameOperation.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for DOCItemRenameOperation()
{
  return objc_opt_self(_TtC5Files22DOCItemRenameOperation);
}

uint64_t sub_1004A0258()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A0284(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_errorRetain(a1);
  else
    return sub_1004A0294(a1, a2);
}

uint64_t sub_1004A0294(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1004A02A0(uint64_t a1)
{
  uint64_t v1;

  return sub_10049FCFC(a1, *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

double sub_1004A02C4(uint64_t a1)
{
  uint64_t v1;

  return sub_10049FDC4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 49) << 8), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72), *(void **)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(void ***)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_1004A031C()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  sub_1002A8744(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004A0360()
{
  uint64_t v0;

  return sub_10049E99C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40) | (*(unsigned __int8 *)(v0 + 41) << 8), *(void (**)(uint64_t, uint64_t, _QWORD))(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

void sub_1004A0388(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9, unsigned __int16 a10, uint64_t a11, uint64_t a12, char a13, void *a14, void (*a15)(_QWORD *, uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(_QWORD, _QWORD, _QWORD, __n128), uint64_t a20)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  id v31;
  void *v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  Swift::String v49;
  Swift::String_optional v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  NSString v58;
  uint64_t v59;
  id v60;
  void *v61;
  char v62;
  int v63;
  Swift::String v64;
  Swift::String_optional v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void (*v79)(_QWORD, _QWORD);
  char v80;
  uint64_t v81;
  NSString v82;
  void *v83;
  id v84;
  id v85;
  void *v86;
  Swift::String v87;
  Swift::String_optional v88;
  Swift::String v89;
  Swift::String v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  uint64_t v106;
  NSString v107;
  void *v108;
  double v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint64_t v120;
  void **v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(_QWORD, _QWORD);
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  id v148;
  id v149;
  _QWORD *v150;
  unsigned int v151;
  uint64_t v152;
  void **aBlock;
  uint64_t v154;
  void (*v155)(uint64_t, void *);
  void *v156;
  double (*v157)(uint64_t);
  uint64_t v158;
  Swift::String v159;
  Swift::String v160;
  Swift::String v161;
  Swift::String v162;

  v149 = a4;
  v150 = a7;
  v144 = a5;
  v145 = a6;
  v147 = a2;
  v148 = a3;
  v146 = a1;
  v142 = a17;
  v138 = a14;
  v140 = a12;
  v139 = a11;
  v151 = a10;
  v143 = a9;
  v137 = type metadata accessor for Logger(0);
  v21 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v23 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (_QWORD *)swift_allocObject(&unk_1005F0E90, 40, 7);
  v24[2] = a18;
  v24[3] = a19;
  v24[4] = a20;
  if ((a13 & 1) == 0)
  {
    v25 = sub_10028A0E8();
    v26 = swift_allocError(&type metadata for FilenameValidationError, v25, 0, 0);
    *v27 = 5;
    swift_retain();
    swift_retain();
    sub_10038F74C(v26, 0, 256, a18, a19, a20);
    swift_errorRelease(v26);
    v28 = swift_allocError(&type metadata for FilenameValidationError, v25, 0, 0);
    *v29 = 5;
    a15(v150, v28);
    swift_errorRelease(v28);
    swift_release(v24);
    return;
  }
  v134 = a8;
  v135 = (void (*)(_QWORD, _QWORD))a15;
  v136 = a16;
  v130 = v23;
  v131 = v21;
  v124 = a18;
  swift_retain();
  swift_retain();
  v31 = (id)_DocumentManagerBundle(v30);
  if (!v31)
  {
    swift_release(a20);
    swift_release(v124);
    __break(1u);
    goto LABEL_12;
  }
  v32 = v31;
  v159._countAndFlagsBits = 0xD00000000000002CLL;
  v159._object = (void *)0x8000000100539F90;
  v33._object = (void *)0x8000000100539F50;
  v33._countAndFlagsBits = 0x1000000000000032;
  v34.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v34.value._object = (void *)0xEB00000000656C62;
  v35._countAndFlagsBits = 0x1000000000000032;
  v35._object = (void *)0x8000000100539F50;
  v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v159);

  v37 = sub_10006922C((uint64_t *)&unk_100644560);
  v38 = swift_allocObject(v37, 112, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v38 + 56) = &type metadata for String;
  v39 = sub_10006A638();
  v40 = v147;
  *(_QWORD *)(v38 + 32) = v146;
  *(_QWORD *)(v38 + 40) = v40;
  *(_QWORD *)(v38 + 96) = &type metadata for String;
  *(_QWORD *)(v38 + 104) = v39;
  v41 = v148;
  v42 = v149;
  *(_QWORD *)(v38 + 64) = v39;
  *(_QWORD *)(v38 + 72) = v41;
  *(_QWORD *)(v38 + 80) = v42;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v42);
  v43 = String.init(format:_:)(v36._countAndFlagsBits, v36._object, v38);
  v45 = v44;
  swift_bridgeObjectRelease(v36._object);
  v47 = (id)_DocumentManagerBundle(v46);
  if (!v47)
  {
LABEL_12:
    swift_release(a20);
    swift_release(v124);
    __break(1u);
    goto LABEL_13;
  }
  v48 = v47;
  v123 = a20;
  v49._countAndFlagsBits = 0x1000000000000054;
  v160._countAndFlagsBits = 0xD000000000000043;
  v160._object = (void *)0x8000000100539C40;
  v49._object = (void *)0x8000000100539BE0;
  v50.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v50.value._object = (void *)0xEB00000000656C62;
  v51._countAndFlagsBits = 0x1000000000000054;
  v51._object = (void *)0x8000000100539BE0;
  v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v160);

  v133 = v37;
  v53 = swift_allocObject(v37, 72, 7);
  v132 = xmmword_1004D9670;
  *(_OWORD *)(v53 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v53 + 56) = &type metadata for String;
  *(_QWORD *)(v53 + 64) = v39;
  *(_QWORD *)(v53 + 32) = v144;
  v54 = v145;
  *(_QWORD *)(v53 + 40) = v145;
  swift_bridgeObjectRetain(v54);
  String.init(format:_:)(v52._countAndFlagsBits, v52._object, v53);
  v56 = v55;
  swift_bridgeObjectRelease(v52._object);
  swift_bridgeObjectRetain(v45);
  v125 = v43;
  v57 = String._bridgeToObjectiveC()();
  v129 = v45;
  swift_bridgeObjectRelease(v45);
  v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v56);
  v141 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v57, v58, 1);

  v60 = (id)_DocumentManagerBundle(v59);
  if (!v60)
  {
LABEL_13:
    swift_release(v123);
    swift_release(v124);
    __break(1u);
    goto LABEL_14;
  }
  v61 = v60;
  v62 = v151;
  v63 = (v151 >> 8) & 1;
  v161._countAndFlagsBits = 0xD000000000000028;
  v161._object = (void *)0x8000000100539FC0;
  v64._countAndFlagsBits = 0x2E9C80E220657355;
  v64._object = (void *)0xAD00009D80E24025;
  v65.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v65.value._object = (void *)0xEB00000000656C62;
  v66._countAndFlagsBits = 0x2E9C80E220657355;
  v66._object = (void *)0xAD00009D80E24025;
  v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, v65, (NSBundle)v61, v66, v161);

  v68 = swift_allocObject(v133, 72, 7);
  *(_OWORD *)(v68 + 16) = v132;
  *(_QWORD *)(v68 + 56) = &type metadata for String;
  *(_QWORD *)(v68 + 64) = v39;
  v127 = v39;
  *(_QWORD *)(v68 + 32) = v148;
  v69 = v149;
  *(_QWORD *)(v68 + 40) = v149;
  swift_bridgeObjectRetain(v69);
  v148 = (id)String.init(format:_:)(v67._countAndFlagsBits, v67._object, v68);
  v128 = v70;
  swift_bridgeObjectRelease(v67._object);
  v71 = (char *)swift_allocObject(&unk_1005F0CD8, 24, 7);
  swift_weakInit(v71 + 16, v142);
  v72 = swift_allocObject(&unk_1005F0EB8, 120, 7);
  v149 = v71;
  v73 = v150;
  *(_QWORD *)(v72 + 16) = v71;
  *(_QWORD *)(v72 + 24) = v73;
  v74 = v134;
  v75 = v143;
  *(_QWORD *)(v72 + 32) = v134;
  *(_QWORD *)(v72 + 40) = v75;
  *(_BYTE *)(v72 + 48) = v62;
  *(_BYTE *)(v72 + 49) = v63;
  *(_BYTE *)(v72 + 72) = 1;
  v76 = v139;
  v77 = v140;
  *(_QWORD *)(v72 + 56) = v139;
  *(_QWORD *)(v72 + 64) = v77;
  v78 = v138;
  *(_QWORD *)(v72 + 80) = v138;
  *(_QWORD *)(v72 + 88) = sub_1004A1CB0;
  v79 = v135;
  *(_QWORD *)(v72 + 96) = v24;
  *(_QWORD *)(v72 + 104) = v79;
  *(_QWORD *)(v72 + 112) = v136;
  swift_retain();
  v126 = v73;
  v138 = v78;
  v150 = v24;
  swift_retain();
  swift_retain();
  v80 = v63;
  sub_1004A0284(v74, v75, v151, v63);
  sub_1004A0294(v76, v77);
  v81 = v128;
  v82 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v81);
  v157 = (double (*)(uint64_t))sub_1004A0280;
  v158 = v72;
  aBlock = _NSConcreteStackBlock;
  v154 = 1107296256;
  v155 = sub_1000602CC;
  v156 = &unk_1005F0ED0;
  v83 = _Block_copy(&aBlock);
  swift_release(v158);
  v148 = (id)objc_opt_self(UIAlertAction);
  v84 = objc_msgSend(v148, "actionWithTitle:style:handler:", v82, 1, v83);
  _Block_release(v83);
  swift_release(v149);

  v149 = v84;
  v85 = (id)_DocumentManagerBundle(objc_msgSend(v141, "addAction:", v84));
  if (!v85)
  {
LABEL_14:
    swift_release(v123);
    swift_release(v124);
    __break(1u);
    return;
  }
  v86 = v85;
  v162._object = (void *)0x8000000100539FF0;
  v87._countAndFlagsBits = 0x9C80E2207065654BLL;
  v87._object = (void *)0xAE009C80E240252ELL;
  v88.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v88.value._object = (void *)0xEB00000000656C62;
  v89._countAndFlagsBits = 0x9C80E2207065654BLL;
  v89._object = (void *)0xAE009C80E240252ELL;
  v162._countAndFlagsBits = 0xD000000000000027;
  v90 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, v88, (NSBundle)v86, v89, v162);

  v91 = swift_allocObject(v133, 72, 7);
  *(_OWORD *)(v91 + 16) = v132;
  v92 = v127;
  *(_QWORD *)(v91 + 56) = &type metadata for String;
  *(_QWORD *)(v91 + 64) = v92;
  *(_QWORD *)(v91 + 32) = v146;
  v93 = v147;
  *(_QWORD *)(v91 + 40) = v147;
  swift_bridgeObjectRetain(v93);
  v146 = String.init(format:_:)(v90._countAndFlagsBits, v90._object, v91);
  v140 = v94;
  swift_bridgeObjectRelease(v90._object);
  v95 = swift_allocObject(&unk_1005F0CD8, 24, 7);
  swift_weakInit(v95 + 16, v142);
  v96 = swift_allocObject(&unk_1005F0F08, 112, 7);
  *(_QWORD *)(v96 + 16) = v144;
  v97 = v145;
  v98 = v126;
  *(_QWORD *)(v96 + 24) = v145;
  *(_QWORD *)(v96 + 32) = v98;
  v99 = v150;
  *(_QWORD *)(v96 + 40) = sub_1004A1CB0;
  *(_QWORD *)(v96 + 48) = v99;
  v100 = v136;
  *(_QWORD *)(v96 + 56) = v135;
  *(_QWORD *)(v96 + 64) = v100;
  v101 = v134;
  *(_QWORD *)(v96 + 72) = v95;
  *(_QWORD *)(v96 + 80) = v101;
  v102 = v143;
  *(_QWORD *)(v96 + 88) = v143;
  v103 = v151;
  *(_BYTE *)(v96 + 96) = v151;
  *(_BYTE *)(v96 + 97) = v80;
  v104 = v138;
  *(_QWORD *)(v96 + 104) = v138;
  swift_bridgeObjectRetain(v97);
  v105 = v98;
  v147 = v104;
  swift_retain();
  swift_retain();
  sub_1004A0284(v101, v102, v103, v80);
  swift_retain();
  v106 = v140;
  v107 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v106);
  v157 = sub_1004A1D90;
  v158 = v96;
  aBlock = _NSConcreteStackBlock;
  v154 = 1107296256;
  v155 = sub_1000602CC;
  v156 = &unk_1005F0F20;
  v108 = _Block_copy(&aBlock);
  *(_QWORD *)&v109 = swift_release(v158).n128_u64[0];
  v110 = objc_msgSend(v148, "actionWithTitle:style:handler:", v107, 0, v108, v109);
  _Block_release(v108);
  swift_release(v95);

  v111 = v141;
  objc_msgSend(v141, "addAction:", v110);
  objc_msgSend(v111, "setPreferredAction:", v110);
  v112 = Logger.Rename.unsafeMutableAddressor(objc_msgSend(v147, "presentViewController:animated:completion:", v111, 1, 0));
  v113 = v131;
  v114 = v130;
  v115 = v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v112, v137);
  v116 = v129;
  v117 = swift_bridgeObjectRetain(v129);
  v118 = Logger.logObject.getter(v117);
  v119 = static os_log_type_t.debug.getter(v118);
  if (os_log_type_enabled(v118, v119))
  {
    v120 = swift_slowAlloc(22, -1);
    v121 = (void **)swift_slowAlloc(64, -1);
    aBlock = v121;
    *(_DWORD *)v120 = 136315394;
    v152 = sub_1000544FC(0xD0000000000000A6, 0x800000010053A020, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &aBlock);
    *(_WORD *)(v120 + 12) = 2080;
    swift_bridgeObjectRetain(v116);
    v152 = sub_1000544FC(v125, v116, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &aBlock);
    swift_bridgeObjectRelease_n(v116, 3);
    _os_log_impl((void *)&_mh_execute_header, v118, v119, "%s: prompting user for file extension change confirmation with message: %s", (uint8_t *)v120, 0x16u);
    swift_arrayDestroy(v121, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v121, -1, -1);
    swift_slowDealloc(v120, -1, -1);

    (*(void (**)(char *, uint64_t))(v131 + 8))(v114, v115);
  }
  else
  {

    swift_bridgeObjectRelease_n(v116, 2);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
  }
  swift_release(v150);
}

void sub_1004A1034(_QWORD *a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, char a7, void *a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(_QWORD, _QWORD, _QWORD, __n128), uint64_t a14)
{
  _QWORD *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v20 = (_QWORD *)swift_allocObject(&unk_1005F0E68, 40, 7);
  v20[2] = a12;
  v20[3] = a13;
  v20[4] = a14;
  if ((a7 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    goto LABEL_20;
  }
  v38 = a3;
  v39 = a2;
  v40 = (void *)a5;
  swift_retain();
  v37 = a1;
  v21 = objc_msgSend(a1, "filename", swift_retain().n128_f64[0]);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "pathExtension");

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v36 = a6;
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v27, "pathExtension");

    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    v32 = v29 & 0xFFFFFFFFFFFFLL;
    if ((v31 & 0x2000000000000000) != 0)
      v32 = HIBYTE(v31) & 0xF;
    v33 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0)
      v33 = v24 & 0xFFFFFFFFFFFFLL;
    if (v32)
    {
      if (!v33)
      {
        swift_bridgeObjectRelease(v26);
        sub_10049F3D0(v29, v31, v40, v36, v37, v39, v38, a4 & 0x1FF, (uint64_t)v40, v36, 1u, a8, (uint64_t)sub_1004A1CB0, (uint64_t)v20, (uint64_t)a9, a10);
        swift_release(v20);
        v34 = v31;
LABEL_13:
        swift_bridgeObjectRelease(v34);
        return;
      }
    }
    else if (v33)
    {
      swift_bridgeObjectRelease(v31);
      sub_10049EAB8(v24, v26, v40, v36, v37, v39, v38, a4 & 0x1FF, (uint64_t)v40, v36, 1u, a8, (uint64_t)sub_1004A1CB0, (uint64_t)v20, (uint64_t)a9, a10);
      swift_release(v20);
      v34 = v26;
      goto LABEL_13;
    }
    if (v24 == v29 && v26 == v31)
    {
      swift_bridgeObjectRelease_n(v26, 2);
    }
    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v29, v31, 0) & 1) == 0)
      {
        swift_retain();
        swift_retain();
        sub_1004A0388(v24, (void *)v26, (void *)v29, (void *)v31, (uint64_t)v40, v36, v37, v39, v38, a4 & 0x1FF, (uint64_t)v40, v36, 1, a8, (void (*)(_QWORD *, uint64_t))a9, a10, a11, a12, a13,
          a14);
        swift_release(v20);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v31);
        swift_release(a12);
        v35 = (_QWORD *)a14;
        goto LABEL_21;
      }
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v31);
    }
    a6 = v36;
    a1 = v37;
    a2 = v39;
    a5 = (uint64_t)v40;
    a3 = v38;
LABEL_20:
    sub_10049E5F4(a1, a2, a3, a4 & 0x1FF, a5, a6, a7 & 1, a8, (uint64_t)sub_1004A1CB0, (uint64_t)v20, a9, a10);
    v35 = v20;
LABEL_21:
    swift_release(v35);
    return;
  }
  swift_release(a14);
  swift_release(a12);
  __break(1u);
}

void sub_1004A13FC(uint64_t a1, uint64_t a2, char a3, void **a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t (*a8)(_QWORD, _QWORD, _QWORD, __n128), uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  double v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  _QWORD *v28;
  Swift::String v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _BYTE *v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  NSString v49;
  id v50;
  uint64_t v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  void *v55;
  Swift::String v56;
  Swift::String_optional v57;
  Swift::String v58;
  void *object;
  NSString v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  uint64_t v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void **v82;
  uint64_t (*v83)(_QWORD, _QWORD, _QWORD, __n128);
  void *v84;
  id v85;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  void *v89;
  __n128 v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  __n128 v94;
  __n128 v95;
  id v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t (*v102)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v103;
  void **v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[3];
  char v110[16];
  uint64_t v111[3];
  Swift::String v112;

  v102 = a8;
  v103 = a5;
  v104 = a4;
  v99 = type metadata accessor for Logger(0);
  v101 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v100 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CharacterSet(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = a7;
  v106 = a6;
  v19 = (void *)a6[2];
  swift_retain();
  *(_QWORD *)&v20 = swift_retain().n128_u64[0];
  if ((a3 & 1) != 0)
    v21 = objc_msgSend(v19, "filename", v20);
  else
    v21 = objc_msgSend(v19, "displayName", v20);
  v22 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  if (v23 == a1 && v25 == a2)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_12;
  }
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v23, v25, 0);
  swift_bridgeObjectRelease(v25);
  if ((v27 & 1) != 0)
  {
LABEL_12:
    v33 = sub_10028A0E8();
    v34 = swift_allocError(&type metadata for FilenameValidationError, v33, 0, 0);
    *v35 = 4;
    v36 = v105;
    sub_10038F74C(v34, 0, 256, v105, v102, a9);
    swift_errorRelease(v34);
    v37 = (void *)*((_QWORD *)v106 + 2);
    v38 = swift_allocError(&type metadata for FilenameValidationError, v33, 0, 0);
    *v39 = 4;
    v106 = v37;
    ((void (*)(void *, uint64_t))v104)(v37, v38);
    swift_errorRelease(v38);
    swift_release(a9);
    swift_release(v36);

    return;
  }
  v28 = v106;
  v98 = *((id *)v106 + 3);
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  if (String.hasPrefix(_:)(v29))
  {
    v30 = sub_10028A0E8();
    v31 = swift_allocError(&type metadata for FilenameValidationError, v30, 0, 0);
    *v32 = 2;
  }
  else
  {
    CharacterSet.init(charactersIn:)(58, 0xE100000000000000);
    v111[0] = a1;
    v111[1] = a2;
    v40 = sub_10008B9BC();
    StringProtocol.rangeOfCharacter(from:options:range:)(v18, 0, 0, 0, 1, &type metadata for String, v40);
    if ((v41 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v86 = (void *)v28[2];
      v87 = v105;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain(a2);
      v88 = v86;
      v89 = v98;
      sub_1004A1034(v88, a1, a2, a3 & 1, a1, a2, a3 & 1, v98, v104, v103, (uint64_t)v28, v87, v102, a9);
      swift_bridgeObjectRelease(a2);

      swift_release_n(v87, 2, v90);
      swift_release_n(a9, 2, v91);
      return;
    }
    v42 = sub_10028A0E8();
    v31 = swift_allocError(&type metadata for FilenameValidationError, v42, 0, 0);
    *v43 = 3;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  swift_getErrorValue(v31, v110, v109);
  v44 = v109[1];
  v45 = v109[2];
  swift_errorRetain(v31);
  v46 = Error.localizedDescription.getter(v44, v45);
  v48 = v47;
  swift_bridgeObjectRetain(v47);
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  v50 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v49, 1);

  v52 = (id)_DocumentManagerBundle(v51);
  v54 = v99;
  if (!v52)
  {
LABEL_38:
    swift_release_n(a9, 2, v53);
    swift_release_n(v105, 2, v95);
    __break(1u);
    return;
  }
  v55 = v52;
  v112._object = (void *)0xE200000000000000;
  v56._countAndFlagsBits = 19279;
  v56._object = (void *)0xE200000000000000;
  v57.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v57.value._object = (void *)0xEB00000000656C62;
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  v112._countAndFlagsBits = 19279;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, v57, (NSBundle)v55, v58, v112)._object;

  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v61 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v60, 0, 0);

  objc_msgSend(v50, "addAction:", v61);
  v62 = v50;
  v63 = objc_msgSend(v62, "actions");
  v64 = sub_10004F2F0(0, &qword_1006572A0, UIAlertAction_ptr);
  v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v63, v64);

  if (!((unint64_t)v65 >> 62))
  {
    v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v66)
      goto LABEL_18;
LABEL_33:
    v93 = swift_bridgeObjectRelease(v65);
    swift_release_n(a9, 2, v93);
    v67 = swift_release_n(v105, 2, v94);
    __break(1u);
    goto LABEL_34;
  }
  if (v65 < 0)
    v92 = v65;
  else
    v92 = v65 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v65);
  v66 = _CocoaArrayWrapper.endIndex.getter(v92);
  v53 = swift_bridgeObjectRelease(v65);
  if (!v66)
    goto LABEL_33;
LABEL_18:
  v67 = v66 - 1;
  if (__OFSUB__(v66, 1))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v97 = v46;
  if ((v65 & 0xC000000000000001) != 0)
  {
LABEL_35:
    v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v67, v65);
    goto LABEL_23;
  }
  if ((v67 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v67 >= *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v68 = *(id *)(v65 + 8 * v67 + 32);
LABEL_23:
  v69 = v68;
  objc_msgSend(v62, "setPreferredAction:", v68, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v70 = Logger.Rename.unsafeMutableAddressor(objc_msgSend(v98, "presentViewController:animated:completion:", v62, 1, 0));
  v72 = v100;
  v71 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v70, v54);
  v73 = swift_bridgeObjectRetain(v48);
  v74 = Logger.logObject.getter(v73);
  v75 = v54;
  v76 = static os_log_type_t.debug.getter(v74);
  if (os_log_type_enabled(v74, v76))
  {
    v77 = swift_slowAlloc(22, -1);
    v96 = v62;
    v78 = v77;
    v79 = swift_slowAlloc(64, -1);
    v111[0] = v79;
    *(_DWORD *)v78 = 136315394;
    v107 = sub_1000544FC(0xD000000000000047, 0x8000000100539F00, v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108);
    *(_WORD *)(v78 + 12) = 2080;
    swift_bridgeObjectRetain(v48);
    v107 = sub_1000544FC(v97, v48, v111);
    v28 = v106;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108);
    swift_bridgeObjectRelease_n(v48, 3);
    _os_log_impl((void *)&_mh_execute_header, v74, v76, "%s: prompting user with message: %s", (uint8_t *)v78, 0x16u);
    swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v79, -1, -1);
    v80 = v78;
    v62 = v96;
    swift_slowDealloc(v80, -1, -1);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v75);
  }
  else
  {

    swift_bridgeObjectRelease_n(v48, 2);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v75);
  }
  v82 = v104;
  v81 = v105;
  v83 = v102;
  swift_errorRetain(v31);
  sub_10038F74C(v31, 0, 256, v81, v83, a9);
  swift_errorRelease(v31);
  v84 = (void *)v28[2];
  swift_errorRetain(v31);
  v85 = v84;
  ((void (*)(void *, uint64_t))v82)(v84, v31);

  sub_1002A8744(v31, 0, 0, 1);
  swift_errorRelease(v31);

  swift_errorRelease(v31);
  swift_release(a9);
  swift_release(v81);
}

uint64_t sub_1004A1CB8(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;

  return sub_10038F74C(a1, a2, a3 & 0x1FF, *(_QWORD *)(v3 + 16), *(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128))(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1004A1CD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  sub_1002A8744(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_BYTE *)(v0 + 49));
  sub_10028A890(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));

  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1004A1D34()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  sub_1002A8744(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(unsigned __int8 *)(v0 + 96), *(_BYTE *)(v0 + 97));

  return swift_deallocObject(v0, 112, 7);
}

double sub_1004A1D90(uint64_t a1)
{
  uint64_t v1;

  return sub_10049FE80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(void ***)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(unsigned __int8 *)(v1 + 96) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 97) << 8), *(void **)(v1 + 104));
}

uint64_t sub_1004A1DE8()
{
  uint64_t v0;

  sub_1002A8744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_BYTE *)(v0 + 33));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004A1E24(uint64_t a1)
{
  uint64_t v1;

  return sub_10049E758(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32) | (*(unsigned __int8 *)(v1 + 33) << 8), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

id sub_1004A1E68(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor] = 0;
  v3 = &v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties];
  v4 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___errorImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___finishedImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation] = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem(0);
  v5 = a1;
  v6 = objc_msgSendSuper2(&v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1004A28D8();

  return v6;
}

void sub_1004A1F68(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor) = a1;
  v12 = a1;
  if (!a1)
  {
    if (!v5)
    {
      v6 = 0;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!v5
    || (sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr),
        v6 = v5,
        v7 = v12,
        v8 = static NSObject.== infix(_:_:)(v7, v6),
        v7,
        v6,
        (v8 & 1) == 0))
  {
LABEL_6:
    v7 = sub_1004A2B54();
    v9 = type metadata accessor for DOCProgressIndicatorView();
    if (swift_dynamicCastClass(v7, v9))
    {
      v10 = *(void **)(v2 + v4);
      v11 = v10;
      sub_1002AE0D0(v10);
    }

    v6 = v12;
  }
  v12 = v7;
LABEL_10:

}

id sub_1004A2064(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  id result;
  char *v26;
  void *v27;
  Class isa;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  char *v33;
  char v34[24];

  v3 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  v9 = sub_10006922C(&qword_10064B4F8);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = sub_10006922C(&qword_10064B500);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v1;
  v18 = (uint64_t)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties], v34, 0, 0);
  v19 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_1002932C0(v18, (uint64_t)v17);
  sub_1002932C0(a1, v19);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v17, 1, v3) == 1)
  {
    if (v20(v19, 1, v3) == 1)
    {
      v21 = (uint64_t)v17;
      return (id)sub_10000CB4C(v21, &qword_10064B4F8);
    }
  }
  else
  {
    sub_1002932C0((uint64_t)v17, (uint64_t)v14);
    if (v20(v19, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v8, v19, v3);
      v22 = sub_100293308();
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v8, v3, v22);
      v24 = *(void (**)(char *, uint64_t))(v4 + 8);
      v24(v8, v3);
      v24(v14, v3);
      result = (id)sub_10000CB4C((uint64_t)v17, &qword_10064B4F8);
      if ((v23 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
  }
  sub_10000CB4C((uint64_t)v17, &qword_10064B500);
LABEL_8:
  sub_1002932C0(v18, (uint64_t)v11);
  if (v20((uint64_t)v11, 1, v3) == 1)
  {
    v21 = (uint64_t)v11;
    return (id)sub_10000CB4C(v21, &qword_10064B4F8);
  }
  v26 = v33;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v33, v11, v3);
  result = objc_msgSend(v32, "tintColor");
  if (result)
  {
    v27 = result;
    isa = UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)((UIColor)result).super.isa;

    v29 = sub_1004A2BE8();
    objc_msgSend(v29, "setTintColor:", isa);

    v30 = sub_1004A2BFC();
    objc_msgSend(v30, "setTintColor:", isa);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v26, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004A239C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t aBlock[5];
  uint64_t v35;
  char v36[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3, v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = Logger.Rename.unsafeMutableAddressor(Strong);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
    v12 = v10;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v32 = v15;
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v31 = v17;
      *(_DWORD *)v16 = 136315138;
      aBlock[0] = v17;
      v29 = v16 + 4;
      v30 = v16;
      v18 = *(id *)&v12[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation];
      v19 = objc_msgSend(v18, "description");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v33 = sub_1000544FC(v20, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, aBlock);

      swift_bridgeObjectRelease(v22);
      v23 = v30;
      _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v32, "ERASE: Formatting operation state changed %s", v30, 0xCu);
      v24 = v31;
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v25 = swift_allocObject(&unk_1005F0FD8, 24, 7);
    *(_QWORD *)(v25 + 16) = v12;
    aBlock[4] = (uint64_t)sub_1004A2F5C;
    v35 = v25;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005F0FF0;
    v26 = _Block_copy(aBlock);
    v27 = v35;
    v28 = v12;
    swift_release(v27);
    DOCRunInMainThread(v26);
    _Block_release(v26);

  }
}

void sub_1004A26C0(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  v2 = sub_1004A2C10();
  v3 = objc_msgSend(v2, "arrangedSubviews");

  v4 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v11 = v5;
    else
      v11 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  v7 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    else
      v8 = *(id *)(v5 + 8 * v7 + 32);
    v9 = v8;
    ++v7;
    v10 = sub_1004A2C10();
    objc_msgSend(v10, "removeArrangedSubview:", v9);

    objc_msgSend(v9, "removeFromSuperview");
  }
  while (v6 != v7);
LABEL_13:
  swift_bridgeObjectRelease_n(v5, 2);
  switch(a1)
  {
    case 0:
      v12 = sub_1004A2C10();
      v13 = sub_1004A2B54();
      goto LABEL_17;
    case 1:
      v12 = sub_1004A2C10();
      v13 = sub_1004A2BFC();
      goto LABEL_17;
    case 2:
      return;
    case 3:
      v12 = sub_1004A2C10();
      v13 = sub_1004A2BE8();
LABEL_17:
      objc_msgSend(v12, "addArrangedSubview:", v13);

      return;
    default:
      break;
  }
LABEL_19:
  v15 = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCUSBEraseOperation.State, &v15, &type metadata for DOCUSBEraseOperation.State, &type metadata for Int);
  __break(1u);
  JUMPOUT(0x1004A28C8);
}

void sub_1004A28D8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v1 = sub_1004A2C10();
  objc_msgSend(v0, "addSubview:", v1);

  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004DAC10;
  v5 = sub_1004A2C10();
  v6 = objc_msgSend(v5, "leadingAnchor");

  v7 = objc_msgSend(v0, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = sub_1004A2C10();
  v10 = objc_msgSend(v9, "trailingAnchor");

  v11 = objc_msgSend(v0, "trailingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v4 + 40) = v12;
  v13 = sub_1004A2C10();
  v14 = objc_msgSend(v13, "topAnchor");

  v15 = objc_msgSend(v0, "topAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 48) = v16;
  v17 = sub_1004A2C10();
  v18 = objc_msgSend(v17, "bottomAnchor");

  v19 = objc_msgSend(v0, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v4 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

id sub_1004A2B54()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for DOCProgressIndicatorView());
    sub_1000A6FF8(1, 0.5);
    v7 = v6;
    v8 = *(void **)(v4 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor);
    v9 = v8;
    sub_1002AE0D0(v8);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1004A2BE8()
{
  return sub_100292C9C(&OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___errorImageView, (SEL *)&selRef_iconForSyncError);
}

id sub_1004A2BFC()
{
  return sub_100292C9C(&OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___finishedImageView, (SEL *)&selRef_iconForCompletedSync);
}

id sub_1004A2C10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setDistribution:", 0);
    objc_msgSend(v4, "setAlignment:", 3);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1004A2CFC()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver));

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties, &qword_10064B4F8);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___errorImageView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___finishedImageView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer));
}

id sub_1004A2D90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004A2E64()
{
  return type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem(0);
}

uint64_t type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem(uint64_t a1)
{
  uint64_t result;

  result = qword_100657CA0;
  if (!qword_100657CA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCRemovableMediaStateSidebarCellAccessoryItem);
  return result;
}

void sub_1004A2EA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "\b";
  sub_10029326C(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = "\b";
    v4[5] = "\b";
    v4[6] = "\b";
    v4[7] = "\b";
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

uint64_t sub_1004A2F38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004A2F5C()
{
  uint64_t v0;

  sub_1004A26C0((uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation), "operationState"));
}

uint64_t sub_1004A2F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BYTE v29[24];

  v1 = v0;
  v2 = 1701736302;
  v3 = _s23FolderMenuConfigurationVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100658208);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  sub_1000271D4(v1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration, (uint64_t)&v26 - v11, &qword_100658208);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v13(v12, 1, v3))
  {
    sub_10000CB4C((uint64_t)v12, &qword_100658208);
    v14 = (void *)0xE400000000000000;
    v15 = 1701736302;
  }
  else
  {
    sub_1004A7714((uint64_t)v12, (uint64_t)v6);
    sub_10000CB4C((uint64_t)v12, &qword_100658208);
    v15 = sub_1004A3208();
    v14 = v16;
    sub_1004A7758((uint64_t)v6);
  }
  v17 = v1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
  swift_beginAccess(v17, v29, 0, 0);
  sub_1000271D4(v17, (uint64_t)v10, &qword_100658208);
  if (v13(v10, 1, v3))
  {
    sub_10000CB4C((uint64_t)v10, &qword_100658208);
    v18 = (void *)0xE400000000000000;
  }
  else
  {
    sub_1004A7714((uint64_t)v10, (uint64_t)v6);
    sub_10000CB4C((uint64_t)v10, &qword_100658208);
    v2 = sub_1004A3208();
    v18 = v19;
    sub_1004A7758((uint64_t)v6);
  }
  v27 = 0;
  v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v20._countAndFlagsBits = 0xD000000000000024;
  v20._object = (void *)0x800000010053A3F0;
  String.append(_:)(v20);
  v21._countAndFlagsBits = v15;
  v21._object = v14;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v14);
  v22._object = (void *)0x800000010053A420;
  v22._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v22);
  v23._countAndFlagsBits = v2;
  v23._object = v18;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v18);
  v24._countAndFlagsBits = 32032;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  return v27;
}

uint64_t sub_1004A3208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id (*v6)();
  uint64_t (*v7)(uint64_t);
  id v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;

  v1 = v0;
  v2 = _s23FolderMenuConfigurationVMa(0);
  v3 = *(_QWORD **)(v0 + *(int *)(v2 + 28));
  if (v3)
  {
    v4 = objc_msgSend(v3, "activityViewControllerProvider");
    if (v4)
    {
      v5 = swift_allocObject(&unk_1005F10A8, 24, 7);
      *(_QWORD *)(v5 + 16) = v4;
      v6 = sub_1004A7664;
    }
    else
    {
      v6 = 0;
      v5 = 0;
    }
    v8 = objc_msgSend(v3, "dragItemsProvider");
    if (v8)
    {
      v9 = v8;
      v3 = (_QWORD *)swift_allocObject(&unk_1005F1080, 24, 7);
      v3[2] = v9;
      if (v4)
      {
        v10._countAndFlagsBits = 0x6572616873202CLL;
        v10._object = (void *)0xE700000000000000;
        String.append(_:)(v10);
      }
      v11._countAndFlagsBits = 0x67617264202CLL;
      v11._object = (void *)0xE600000000000000;
      String.append(_:)(v11);
      v7 = sub_1004A765C;
    }
    else
    {
      if (v4)
      {
        v12._countAndFlagsBits = 0x6572616873202CLL;
        v12._object = (void *)0xE700000000000000;
        String.append(_:)(v12);
      }
      v7 = 0;
      v3 = 0;
    }
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
  }
  _StringGuts.grow(_:)(54);
  v13._object = (void *)0x800000010053A3C0;
  v13._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v13);
  v14 = objc_msgSend(*(id *)(v1 + *(int *)(v2 + 20)), "displayName");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19._countAndFlagsBits = 0x6469766F7270202CLL;
  v19._object = (void *)0xEE00203D20737265;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 1970169197;
  v20._object = (void *)0xE400000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(0xE400000000000000);
  v21._countAndFlagsBits = 32032;
  v21._object = (void *)0xE200000000000000;
  String.append(_:)(v21);
  sub_100087534((uint64_t)v7, (uint64_t)v3);
  sub_100087534((uint64_t)v6, v5);
  return 0;
}

uint64_t sub_1004A3464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v14;
  uint64_t (**v15)();
  uint64_t v16;
  _BYTE v19[24];

  v1 = sub_10006922C(&qword_100658208);
  v2 = __chkstk_darwin(v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v19[-v5 - 8];
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node);
  v8 = _s16TitleMenuContextCMa(0);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v10 = swift_unknownObjectRetain(v7);
  UUID.init()(v10);
  v11 = v9 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration;
  v12 = (int *)_s23FolderMenuConfigurationVMa(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 56);
  v13(v11, 1, 1, v12);
  v13(v9 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, 1, 1, v12);
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node) = v7;
  v14 = swift_unknownObjectRetain(v7);
  UUID.init()(v14);
  *(_QWORD *)&v6[v12[5]] = v7;
  v15 = (uint64_t (**)())&v6[v12[6]];
  *v15 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v15[1] = 0;
  *(_QWORD *)&v6[v12[7]] = 0;
  *(_QWORD *)&v6[v12[8]] = 0;
  v13((uint64_t)v6, 0, 1, v12);
  sub_1004A7684((uint64_t)v6, (uint64_t)v4);
  v16 = v9 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
  swift_beginAccess(v9 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, v19, 33, 0);
  sub_1004A76CC((uint64_t)v4, v16);
  swift_endAccess(v19);
  return v9;
}

uint64_t sub_1004A3618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_requestID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node));
  sub_10000CB4C(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration, &qword_100658208);
  sub_10000CB4C(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, &qword_100658208);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004A36A8(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_requestID, *a2 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_requestID);
}

uint64_t sub_1004A36C4()
{
  return sub_1004A2F94();
}

uint64_t sub_1004A36E4(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_1004A3750()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 24);
  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t sub_1004A377C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_unknownObjectWeakLoadStrong(v2 + 16, a2);
}

uint64_t sub_1004A3784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_unknownObjectWeakLoadStrong(v2 + 24, a2);
}

uint64_t sub_1004A378C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

void sub_1004A3794(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  char *Strong;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.Rename.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  v14 = swift_bridgeObjectRetain_n(a2, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v27 = a4;
    v17 = swift_slowAlloc(12, -1);
    v26 = a3;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v29 = v19;
    v25 = v8;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain(a2);
    v28 = sub_1000544FC(a1, a2, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[NavRename]: failed to change name to %s", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    v20 = v18;
    a3 = v26;
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v22 = &Strong[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
    v23 = *(_QWORD *)&Strong[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename
                           + 8];
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;

    swift_bridgeObjectRelease(v23);
  }
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
}

void sub_1004A39BC(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_1004A3794(a6, a7, a4, a5);
  }
  else
  {
    v17 = Logger.Rename.unsafeMutableAddressor(v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
    v18 = swift_bridgeObjectRetain_n(a7, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.debug.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v25 = v22;
      *(_DWORD *)v21 = 136315138;
      v23[1] = v21 + 4;
      swift_bridgeObjectRetain(a7);
      v24 = sub_1000544FC(a6, a7, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      swift_bridgeObjectRelease_n(a7, 3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[NavRename]: did commit rename with success: newName = %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a7, 2);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
}

uint64_t sub_1004A3BC4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 41, 7);
}

double sub_1004A3BF8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1004A66DC(a2, a3);
}

uint64_t sub_1004A3C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004A65F8(a2, a3);
}

void sub_1004A3C14(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  NSObject *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  NSObject *v40;
  id v41;
  void *v42;
  unsigned int v43;
  char v44;
  id v45;
  id v46;
  id v47;
  char v48;
  void *v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  NSObject *v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  int *v57;
  uint64_t (**v58)(uint64_t);
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  int *v69;
  char *v70;
  NSObject *v71;
  Class isa;
  NSObject *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[24];
  char v79[24];

  v74 = a6;
  v75 = a7;
  v77 = a4;
  v11 = type metadata accessor for UTType(0);
  isa = v11[-1].isa;
  v73 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C(&qword_100658208);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v66 - v18;
  v20 = _s23FolderMenuConfigurationVMa(0);
  v76 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a3 + 16, v79, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 16, v23);
  if (Strong)
  {
    v25 = (void *)Strong;
    v70 = v17;
    v26 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext);
    if (v26)
    {
      v69 = (int *)v20;
      v27 = a5;
      v28 = v22;
      v29 = v19;
      v30 = v77;
      v31 = v77 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_requestID;
      v71 = a2;
      v32 = v26 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_requestID;
      swift_retain();
      swift_retain();
      v33 = v32;
      a2 = v71;
      LOBYTE(v31) = static UUID.== infix(_:_:)(v31, v33);
      v34 = v30;
      v35 = (uint64_t)v29;
      v36 = (uint64_t)v28;
      swift_release(v34);
      swift_release(v26);
      if ((v31 & 1) != 0)
      {
        if ((unint64_t)a1 >> 62)
        {
          if (a1 < 0)
            v65 = a1;
          else
            v65 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          if (_CocoaArrayWrapper.endIndex.getter(v65))
          {
LABEL_6:
            if ((a1 & 0xC000000000000001) != 0)
            {
              v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
            }
            else
            {
              if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_26;
              }
              v38 = *(id *)(a1 + 32);
            }
            v39 = v38;
            swift_bridgeObjectRelease(a1);
            v40 = objc_msgSend(v39, "fileProviderItem");
            if (!v40)
            {

              goto LABEL_14;
            }
            a2 = v40;
            v67 = v39;
            v41 = objc_msgSend(v25, "effectiveAppearance");
            v68 = v35;
            if (v41)
            {
              v42 = v41;
              v43 = objc_msgSend(v41, "shouldShowFileExtensions");

              if (v43)
              {
                v44 = 1;
LABEL_17:
                v46 = sub_1001F8D80(v27);
                v47 = objc_allocWithZone((Class)_s16FolderMenuHeaderCMa());
                swift_unknownObjectRetain(v27);
                swift_unknownObjectRetain(v46);
                v48 = v44 & 1;
                v49 = sub_1001F7FA8(v27, (uint64_t)v46, v44 & 1);
                v50 = swift_allocObject(&unk_1005F10F8, 24, 7);
                swift_unknownObjectWeakInit(v50 + 16);
                v51 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_1005F1170, 64, 7);
                *((_QWORD *)v51 + 2) = v50;
                *((_QWORD *)v51 + 3) = a2;
                v52 = a2;
                v53 = v67;
                *((_QWORD *)v51 + 4) = v67;
                *((_QWORD *)v51 + 5) = v49;
                v54 = v75;
                *((_QWORD *)v51 + 6) = v74;
                *((_QWORD *)v51 + 7) = v54;
                swift_unknownObjectRetain(v27);
                v73 = v52;
                v74 = v53;
                v55 = v49;
                swift_retain();
                swift_retain();
                UUID.init()(v56);
                v57 = v69;
                *(_QWORD *)(v36 + v69[5]) = v27;
                v58 = (uint64_t (**)(uint64_t))(v36 + v57[6]);
                *v58 = sub_1004A7830;
                v58[1] = v51;
                v59 = v57[8];
                *(_QWORD *)(v36 + v57[7]) = v55;
                v60 = v55;
                v61 = sub_1004A6440((uint64_t)v25, (uint64_t)v27, v48);

                swift_release(v51);
                swift_unknownObjectRelease(v46);

                *(_QWORD *)(v36 + v59) = v61;
                v62 = v68;
                sub_1004A7714(v36, v68);
                (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v76 + 56))(v62, 0, 1, v57);
                v63 = (uint64_t)v70;
                sub_1004A7684(v62, (uint64_t)v70);
                v64 = v77
                    + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
                swift_beginAccess(v77+ OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, v78, 33, 0);
                sub_1004A76CC(v63, v64);
                swift_endAccess(v78);
                sub_1004A7758(v36);
                a2 = v71;
                goto LABEL_14;
              }
            }
            if (qword_1006410A8 == -1)
            {
LABEL_16:
              v45 = objc_msgSend(v27, "contentType");
              static UTType._unconditionallyBridgeFromObjectiveC(_:)(v45);

              v44 = sub_10007693C((uint64_t)v13);
              (*((void (**)(char *, NSObject *))isa + 1))(v13, v73);
              goto LABEL_17;
            }
LABEL_26:
            swift_once(&qword_1006410A8, sub_1000AA544);
            goto LABEL_16;
          }
        }
        else
        {
          v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(a1);
          if (v37)
            goto LABEL_6;
        }

        swift_bridgeObjectRelease(a1);
        goto LABEL_14;
      }
    }

  }
LABEL_14:
  dispatch_group_leave(a2);
}

uint64_t sub_1004A4124(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t inited;
  unint64_t v26;
  Class isa;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v52;
  void *v53;
  uint64_t aBlock;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  char v60[56];
  char v61[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v61, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11, v12);
  if (Strong)
  {
    v14 = (char *)Strong;
    if ((objc_msgSend(a3, "doc_isAppContainerRoot") & 1) == 0)
    {
      v52 = a4;
      v15 = *(void **)&v14[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
      v16 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v17 = swift_allocObject(v16, 40, 7);
      *(_OWORD *)(v17 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v17 + 32) = a3;
      aBlock = v17;
      specialized Array._endMutation()(v17);
      v18 = aBlock;
      if ((unint64_t)aBlock >> 62)
      {
        if (aBlock < 0)
          v47 = aBlock;
        else
          v47 = aBlock & 0xFFFFFFFFFFFFFF8;
        v48 = v15;
        v49 = a3;
        swift_bridgeObjectRetain(aBlock);
        v50 = _CocoaArrayWrapper.endIndex.getter(v47);
        swift_bridgeObjectRelease(aBlock);
        if (v50 >= 1)
        {
LABEL_5:
          v22 = sub_100351F3C();
          v23 = objc_msgSend(v22, "filteringPredicate");

          v24 = sub_10006922C((uint64_t *)&unk_10064FDE0);
          inited = swift_initStackObject(v24, v60);
          *(_OWORD *)(inited + 16) = xmmword_1004D9670;
          *(_QWORD *)(inited + 32) = 0x7365646F4E636F64;
          *(_QWORD *)(inited + 40) = 0xE800000000000000;
          *(_QWORD *)(inited + 48) = v18;
          swift_bridgeObjectRetain(v18);
          v26 = sub_1003F0958(inited);
          sub_10006922C((uint64_t *)&unk_100643CB0);
          v53 = a5;
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v26);
          LOBYTE(v26) = objc_msgSend(v23, "evaluateWithObject:", isa);

          swift_bridgeObjectRelease(v18);
          v29 = v53;
          if ((v26 & 1) != 0)
          {
            v30 = &v14[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
            v31 = swift_unknownObjectWeakLoadStrong(&v14[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate], v28);
            if (v31)
            {
              v33 = v31;
              v34 = *((_QWORD *)v30 + 1);
              ObjectType = swift_getObjectType(v31, v32);
              v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 + 8) + 8))(v52, ObjectType);
              swift_unknownObjectRelease(v33);
              if (v36)
              {
                v37 = swift_allocObject(&unk_1005F11E8, 24, 7);
                *(_QWORD *)(v37 + 16) = v36;
                v58 = sub_1000EB2FC;
                v59 = v37;
                aBlock = (uint64_t)_NSConcreteStackBlock;
                v55 = 1107296256;
                v56 = sub_10049714C;
                v57 = &unk_1005F1200;
                v38 = _Block_copy(&aBlock);
                v39 = v59;
                v40 = v36;
                v41 = v39;
                v29 = v53;
                swift_release(v41);
                objc_msgSend(v53, "setActivityViewControllerProvider:", v38);
                _Block_release(v38);

              }
            }
            v42 = swift_allocObject(&unk_1005F1198, 24, 7);
            *(_QWORD *)(v42 + 16) = a3;
            v58 = sub_1004A7864;
            v59 = v42;
            aBlock = (uint64_t)_NSConcreteStackBlock;
            v55 = 1107296256;
            v56 = sub_1004A45AC;
            v57 = &unk_1005F11B0;
            v43 = _Block_copy(&aBlock);
            v44 = v59;
            v45 = a3;
            swift_release(v44);
            objc_msgSend(v29, "setDragItemsProvider:", v43);
            _Block_release(v43);
          }
          goto LABEL_16;
        }
      }
      else
      {
        v19 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
        v20 = v15;
        v21 = a3;
        if (v19 >= 1)
          goto LABEL_5;
      }

      swift_bridgeObjectRelease(aBlock);
    }
LABEL_16:
    v46 = a6(a1);

    return v46;
  }
  return 0;
}

uint64_t sub_1004A44DC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(a2, 2, 0, 0);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v3);
  objc_msgSend(v4, "setLocalObject:", a2);
  v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v6 + 32) = v4;
  v8 = v6;
  specialized Array._endMutation()(v6);

  return v8;
}

Class sub_1004A45AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  Class isa;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain();
  v5 = swift_unknownObjectRetain(a2);
  v6 = v4(v5);
  swift_release(v3);
  swift_unknownObjectRelease(a2);
  sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  return isa;
}

Class sub_1004A4630(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  UIMenu v19;
  Swift::OpaquePointer aBlock[5];
  uint64_t v22;
  char v23[24];
  UIImage_optional v24;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4, v5);
  if (!Strong)
    return 0;
  v7 = (void *)Strong;
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v8 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D9B40;
  v10 = swift_allocObject(&unk_1005F10F8, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = swift_allocObject(&unk_1005F1288, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a3;
  aBlock[4]._rawValue = sub_1004A78C8;
  v22 = v11;
  aBlock[0]._rawValue = _NSConcreteStackBlock;
  aBlock[1]._rawValue = (void *)1107296256;
  aBlock[2]._rawValue = sub_100458078;
  aBlock[3]._rawValue = &unk_1005F12A0;
  v12 = _Block_copy(aBlock);
  v13 = (void *)objc_opt_self(UIDeferredMenuElement);
  swift_retain();
  v14 = a3;
  v15 = objc_msgSend(v13, "elementWithProvider:", v12);
  _Block_release(v12);
  v16 = v22;
  swift_release(v10);
  v17 = swift_release(v16);
  *(_QWORD *)(v9 + 32) = v15;
  aBlock[0]._rawValue = (void *)v9;
  specialized Array._endMutation()(v17);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v24.value.super.isa = 0;
  v24.is_nil = 0;
  v19.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v18, (Swift::String_optional)0, v24, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock[0]._rawValue, aBlock[0]).super.super.isa;

  return v19.super.super.isa;
}

uint64_t sub_1004A4804(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void *a4)
{
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  id v27;
  void *v28;
  NSObject *v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  const void *v33;
  _QWORD *v34;
  NSObject *v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  void (*v38)(char *, void (*)(uint64_t));
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  uint8_t *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  _QWORD aBlock[5];
  _QWORD *v60;
  char v61[24];

  v8 = (void (*)(uint64_t))type metadata accessor for DispatchTime(0);
  v57 = *((_QWORD *)v8 - 1);
  v58 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v54 - v12;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v54 - v19;
  a3 += 16;
  swift_beginAccess(a3, v61, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3, v21);
  if (Strong)
  {
    v23 = (void *)Strong;
    v24 = swift_allocObject(&unk_1005F10F8, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    v25 = (_QWORD *)swift_allocObject(&unk_1005F12D8, 40, 7);
    v56 = v23;
    v26 = v25;
    v25[2] = v24;
    v25[3] = a1;
    v25[4] = a2;
    swift_retain_n(v24, 2);
    swift_retain_n(a2, 2);
    v27 = objc_msgSend(a4, "node");
    if (v27)
    {
      v28 = v27;
      v29 = dispatch_group_create();
      dispatch_group_enter(v29);
      v30 = (_QWORD *)swift_allocObject(&unk_1005F1300, 40, 7);
      v30[2] = sub_1004A78DC;
      v30[3] = v26;
      v30[4] = v29;
      v31 = (_QWORD *)swift_allocObject(&unk_1005F1328, 40, 7);
      v31[2] = v28;
      v31[3] = sub_1004A7914;
      v31[4] = v30;
      aBlock[4] = sub_1004A797C;
      v60 = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100438428;
      aBlock[3] = &unk_1005F1340;
      v32 = _Block_copy(aBlock);
      v55 = a2;
      v33 = v32;
      v34 = v60;
      swift_retain();
      v35 = v29;
      swift_retain();
      swift_unknownObjectRetain(v28);
      swift_release(v34);
      objc_msgSend(v28, "fetchParents:", v33);
      _Block_release(v33);
      static DispatchTime.now()(v36);
      + infix(_:_:)(v11, 0.1);
      v37 = v58;
      v38 = *(void (**)(char *, void (*)(uint64_t)))(v57 + 8);
      v38(v11, v58);
      OS_dispatch_group.wait(timeout:)(v13);

      swift_unknownObjectRelease(v28);
      swift_release(v30);
      v38(v13, v37);

      v39 = v55;
    }
    else
    {
      v58 = a1;
      v46 = Logger.UI.unsafeMutableAddressor(0);
      v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v46, v14);
      v48 = Logger.logObject.getter(v47);
      v49 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = a2;
        v51 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "Cannot load parents: referenceLocation has no fileProviderItem", v51, 2u);
        v52 = v51;
        a2 = v50;
        swift_slowDealloc(v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      sub_1004A4C88(0, v24, v58);

      v39 = a2;
    }
    swift_release(v39);
    swift_release_n(v24, 2, v53);
    return swift_release(v26);
  }
  else
  {
    v40 = Logger.UI.unsafeMutableAddressor(0);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v40, v14);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[LocationHierarchyMenu] skipping fetch: weak self is null", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    return ((uint64_t (*)(_QWORD *))a1)(_swiftEmptyArrayStorage);
  }
}

void sub_1004A4C88(int64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *Strong;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  _BYTE v63[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v61 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v61 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v61 - v17;
  a2 += 16;
  swift_beginAccess(a2, v63, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2, v19);
  if (Strong)
  {
    v22 = Strong;
    if (a1)
    {
      v23 = *(_QWORD *)&Strong[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
      if (v23)
      {
        Strong = (char *)swift_unknownObjectWeakLoadStrong(v23 + OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser, v21);
        if (Strong)
        {
          v24 = Strong;
          v25 = objc_msgSend(Strong, "sourceObserver");
          if (v25)
          {
            v26 = v25;
            v27 = objc_msgSend(v24, "hierarchyController");
            v28 = v26;
            v29 = v27;
            v30 = (uint64_t)sub_1004A60D4(a1, v28, v29);
            v62 = v28;

            v61 = v29;
            v32 = *(id *)DOCLog.UI.unsafeMutableAddressor(v31);
            static os_log_type_t.info.getter();
            v33 = sub_10006922C((uint64_t *)&unk_100644560);
            v34 = swift_allocObject(v33, 72, 7);
            *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
            if ((unint64_t)a1 >> 62)
            {
              if (a1 >= 0)
                v58 = a1 & 0xFFFFFFFFFFFFFF8;
              else
                v58 = a1;
              swift_bridgeObjectRetain(a1);
              v35 = _CocoaArrayWrapper.endIndex.getter(v58);
              swift_bridgeObjectRelease(a1);
            }
            else
            {
              v35 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            *(_QWORD *)(v34 + 56) = &type metadata for Int;
            *(_QWORD *)(v34 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v34 + 32) = v35;
            os_log(_:dso:log:type:_:)("[LocationHierarchyMenu] loadDeferred - loaded %d items", (_DWORD)v61);

            swift_bridgeObjectRelease(v34);
            if ((unint64_t)v30 >> 62)
            {
              if (v30 < 0)
                v59 = v30;
              else
                v59 = v30 & 0xFFFFFFFFFFFFFF8;
              v60 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
              swift_bridgeObjectRetain(v30);
              v37 = _bridgeCocoaArray<A>(_:)(v59, v60);
              swift_bridgeObjectRelease(v30);
            }
            else
            {
              v36 = swift_bridgeObjectRetain(v30);
              dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v36);
              sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
              v37 = v30;
            }
            swift_bridgeObjectRelease(v30);
            a3(v37);

            swift_bridgeObjectRelease(v37);
          }
          else
          {
            v53 = Logger.UI.unsafeMutableAddressor(0);
            v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v53, v6);
            v55 = Logger.logObject.getter(v54);
            v56 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v55, v56))
            {
              v57 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v57 = 0;
              _os_log_impl((void *)&_mh_execute_header, v55, v56, "[LocationHierarchyMenu] loadDeferred failed to locate sourceObserver", v57, 2u);
              swift_slowDealloc(v57, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
            a3((uint64_t)_swiftEmptyArrayStorage);

          }
          return;
        }
      }
      v43 = Logger.UI.unsafeMutableAddressor(Strong);
      v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v43, v6);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "[LocationHierarchyMenu] loadDeferred failed to locate browser", v47, 2u);
        swift_slowDealloc(v47, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
    else
    {
      v48 = Logger.UI.unsafeMutableAddressor(Strong);
      v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v48, v6);
      v50 = Logger.logObject.getter(v49);
      v51 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v52 = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "[LocationHierarchyMenu] loadDeferred failed to fetch any parentLocations", v52, 2u);
        swift_slowDealloc(v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    }
    a3((uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  v38 = Logger.UI.unsafeMutableAddressor(0);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v18, v38, v6);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[LocationHierarchyMenu] bailing after fetch: weak self is null", v42, 2u);
    swift_slowDealloc(v42, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  a3((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1004A524C(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  char v5;

  v4 = sub_1001D5A88();
  v5 = sub_10008979C((uint64_t)a3, (uint64_t)v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
    return sub_1001DBC98(a3, 1, 0, 0);
  else
    return sub_1001D4F4C(a3, a3, 1, 1, 0, 0, 0);
}

Class sub_1004A52D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  Swift::String v13;
  UIMenu v14;
  uint64_t v15;
  uint64_t inited;
  void *v17;
  id v18;
  objc_class *v19;
  __n128 v20;
  id v21;
  id v22;
  uint64_t v23;
  UIMenuElementSize preferredElementSize;
  Swift::String v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  Class v34;
  objc_class *v35;
  Swift::OpaquePointer v37;
  uint64_t v38;
  char v39[24];
  UIImage_optional v40;
  UIImage_optional v41;

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v39, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9, v10);
  if (!Strong)
    return 0;
  v12 = (char *)Strong;
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v40.value.super.isa = 0;
  v40.is_nil = 0;
  v14.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v40, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v37).super.super.isa;
  if ((a3 & 1) != 0)
  {
    v15 = type metadata accessor for DOCSystemMenuItemCollection();
    inited = swift_initStackObject(v15, &v37);
    *(_QWORD *)(inited + 16) = a1;
    v17 = *(void **)&v12[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    swift_bridgeObjectRetain(a1);
    v18 = v17;
    swift_retain();
    v19 = sub_100151B44(a4, (uint64_t (*)(_QWORD, __n128))sub_1004A78B0, inited);
    swift_release_n(inited, 2, v20);

    v14.super.super.isa = v19;
  }
  if (a5)
  {
    v21 = a5;
    v22 = objc_msgSend(v21, "children");
    v23 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    preferredElementSize = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v41.value.super.isa = 0;
    v41.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v41, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v37).super.super.isa;
    v27 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v28 = swift_allocObject(v27, 40, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v28 + 32) = isa;
    v38 = v28;
    specialized Array._endMutation()(v28);
    v29 = v38;
    v30 = isa;
    v31 = -[objc_class children](v14.super.super.isa, "children");
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v23);

    v38 = v29;
    sub_10013030C(v32);
    v33 = v38;
    v34 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v33);
    v35 = (objc_class *)-[objc_class menuByReplacingChildren:](v14.super.super.isa, "menuByReplacingChildren:", v34);

    v14.super.super.isa = v35;
  }

  return v14.super.super.isa;
}

void *sub_1004A5570(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  id v21;

  v2 = objc_msgSend(a1, "identifier");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierRename);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    return sub_1004A5750((uint64_t)"rename:");
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
    return sub_1004A5750((uint64_t)"rename:");
  v11 = objc_msgSend(a1, "identifier");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierUnpin);
  if (v12 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease_n(v14, 2);
  }
  else
  {
    v18 = v16;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v18);
    if ((v19 & 1) == 0)
      goto LABEL_16;
  }
  objc_msgSend(a1, "setState:", 1);
LABEL_16:
  v21 = a1;
  return a1;
}

void DOCItemCollectionViewController.navigationItem(_:willBeginRenamingWith:selectedRange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1004A6D4C(a2, a3);
}

Swift::Void __swiftcall DOCItemCollectionViewController.navigationItem(_:didEndRenamingWith:)(UINavigationItem _, Swift::String didEndRenamingWith)
{
  sub_1004A6F6C(didEndRenamingWith._countAndFlagsBits, (unint64_t)didEndRenamingWith._object);
}

void *sub_1004A5750(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (unint64_t)sub_1004A5858();
  v3 = v2;
  if (v2 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    v5 = 4;
    while (1)
    {
      v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3)
         : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if ((static Selector.== infix(_:_:)(objc_msgSend(v6, "action"), a1) & 1) != 0)
      {
        swift_bridgeObjectRelease_n(v3, 2);
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    if (v3 < 0)
      v10 = v3;
    else
      v10 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
LABEL_10:
  swift_bridgeObjectRelease_n(v3, 2);
  return 0;
}

_QWORD *sub_1004A5858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t i;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v12 = *(_QWORD *)(v0 + 16);
    else
      v12 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v1, 2);
    result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v12);
    v2 = (uint64_t)result;
    if (!result)
      goto LABEL_17;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain_n(v1, 2);
    if (!v2)
      goto LABEL_17;
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
    else
      v9 = *(id *)(v1 + 8 * i + 32);
    v8 = v9;
    v10 = objc_opt_self(UIMenu);
    v11 = (void *)swift_dynamicCastObjCClass(v8, v10);
    if (v11)
    {
      v5 = objc_msgSend(v11, "children");
      v6 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

      v8 = v5;
    }
    else
    {
      v7 = _swiftEmptyArrayStorage;
    }

    sub_10013030C((uint64_t)v7);
  }
LABEL_17:
  swift_bridgeObjectRelease_n(v1, 2);
  swift_bridgeObjectRetain(v1);
  sub_10013030C((uint64_t)_swiftEmptyArrayStorage);
  if (!((unint64_t)v1 >> 62))
  {
    v13 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(v1);
    if (v13)
      goto LABEL_19;
LABEL_35:
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v1);
    return _swiftEmptyArrayStorage;
  }
  if (v1 < 0)
    v23 = v1;
  else
    v23 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v23);
  v13 = (uint64_t)result;
  if (!result)
    goto LABEL_35;
LABEL_19:
  if (v13 >= 1)
  {
    for (j = 0; j != v13; ++j)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v1);
      else
        v15 = *(id *)(v1 + 8 * j + 32);
      v16 = v15;
      v17 = objc_opt_self(UICommand);
      v18 = swift_dynamicCastObjCClass(v16, v17);
      if (v18)
      {
        v19 = v18;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
        specialized Array._endMutation()(v22);
      }
      else
      {

      }
    }
    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1004A5B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  _QWORD v13[5];
  _QWORD *v14;

  v10 = (_QWORD *)swift_allocObject(&unk_1005F1378, 56, 7);
  v10[2] = a1;
  v10[3] = a3;
  v10[4] = a2;
  v10[5] = a4;
  v10[6] = a5;
  v13[4] = sub_1004A79C4;
  v14 = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004A82C;
  v13[3] = &unk_1005F1390;
  v11 = _Block_copy(v13);
  v12 = v14;
  swift_bridgeObjectRetain(a1);
  swift_unknownObjectRetain(a3);
  swift_errorRetain(a2);
  swift_retain();
  swift_release(v12);
  DOCRunInMainThread(v11);
  _Block_release(v11);
}

uint64_t sub_1004A5C20(unint64_t a1, char *a2, _QWORD *a3, uint64_t i, void (*a5)(_QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD);
  unint64_t v59;

  if (!a1)
  {
    v24 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v25 = static os_log_type_t.error.getter(v24);
    v26 = sub_10006922C((uint64_t *)&unk_100644560);
    v27 = swift_allocObject(v26, 112, 7);
    *(_OWORD *)(v27 + 16) = xmmword_1004D4CE0;
    v59 = (unint64_t)a2;
    swift_unknownObjectRetain(a2);
    v28 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v29 = String.init<A>(describing:)(&v59, v28);
    v31 = v30;
    *(_QWORD *)(v27 + 56) = &type metadata for String;
    v32 = sub_10006A638();
    *(_QWORD *)(v27 + 64) = v32;
    *(_QWORD *)(v27 + 32) = v29;
    *(_QWORD *)(v27 + 40) = v31;
    v59 = (unint64_t)a3;
    swift_errorRetain(a3);
    v33 = sub_10006922C((uint64_t *)&unk_1006434A0);
    v34 = String.init<A>(describing:)(&v59, v33);
    *(_QWORD *)(v27 + 96) = &type metadata for String;
    *(_QWORD *)(v27 + 104) = v32;
    *(_QWORD *)(v27 + 72) = v34;
    *(_QWORD *)(v27 + 80) = v35;
    os_log(_:dso:log:type:_:)("Cannot load parents: Error fetching parents of node %@ error %@", 63, 2, &_mh_execute_header, v24, v25, v27);

    swift_bridgeObjectRelease(v27);
    return ((uint64_t (*)(_QWORD))i)(0);
  }
  v8 = a1;
  v9 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_44;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  v11 = (uint64_t)_swiftEmptyArrayStorage;
  v58 = a5;
  if (v10)
  {
    v59 = (unint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    if (v10 < 0)
    {
      __break(1u);
      goto LABEL_49;
    }
    v13 = i;
    if ((v8 & 0xC000000000000001) != 0)
    {
      v14 = 0;
      do
      {
        v15 = v14 + 1;
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v8);
        ObjectType = swift_getObjectType(v16, v17);
        v19 = DOCNode.representedLocation.getter(ObjectType);
        v20 = swift_unknownObjectRelease(v16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v21 = *(_QWORD *)(v59 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
        v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
        specialized ContiguousArray._endMutation()(v22);
        v14 = v15;
      }
      while (v10 != v15);
    }
    else
    {
      v37 = (uint64_t *)(v8 + 32);
      do
      {
        v38 = *v37++;
        v39 = swift_getObjectType(v38, v12);
        swift_unknownObjectRetain(v38);
        v40 = DOCNode.representedLocation.getter(v39);
        v41 = swift_unknownObjectRelease(v38);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v41);
        v42 = *(_QWORD *)(v59 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v42);
        v43 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
        specialized ContiguousArray._endMutation()(v43);
        --v10;
      }
      while (v10);
    }
    i = v13;
    v11 = v59;
  }
  if ((objc_msgSend(a2, "isTrashed", v58) & 1) == 0)
  {
    if (v9)
    {
      if (v8 < 0)
        v48 = v8;
      else
        v48 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v44 = _CocoaArrayWrapper.endIndex.getter(v48);
      if (v44)
        goto LABEL_17;
    }
    else
    {
      v44 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v8);
      if (v44)
      {
LABEL_17:
        a5 = (void (*)(_QWORD))i;
        v9 = v8 & 0xC000000000000001;
        for (i = 4; ; ++i)
        {
          v45 = i - 4;
          if (v9)
          {
            a2 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v8);
            v46 = i - 3;
            if (__OFADD__(v45, 1))
              goto LABEL_43;
          }
          else
          {
            a2 = *(char **)(v8 + 8 * i);
            swift_unknownObjectRetain(a2);
            v46 = i - 3;
            if (__OFADD__(v45, 1))
            {
LABEL_43:
              __break(1u);
LABEL_44:
              if (v8 < 0)
                v55 = v8;
              else
                v55 = v8 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v8);
              v10 = _CocoaArrayWrapper.endIndex.getter(v55);
              swift_bridgeObjectRelease(v8);
              goto LABEL_4;
            }
          }
          v47 = objc_msgSend(a2, "isTrashed");
          swift_unknownObjectRelease(a2);
          if (v47)
          {
            swift_bridgeObjectRelease(v8);
            i = (uint64_t)a5;
            goto LABEL_32;
          }
          if (v46 == v44)
          {
            swift_bridgeObjectRelease(v8);
            a5(v11);
            return swift_bridgeObjectRelease(v11);
          }
        }
      }
    }
    swift_bridgeObjectRelease(v8);
    goto LABEL_41;
  }
LABEL_32:
  if ((unint64_t)v11 >> 62)
  {
LABEL_49:
    if (v11 < 0)
      v56 = v11;
    else
      v56 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v57 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v11);
    if (v57)
      goto LABEL_34;
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v49 = v11 & 0xFFFFFFFFFFFFF8;
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_53;
LABEL_34:
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
  v59 = v11;
  if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v11 < 0 || (v11 & 0x4000000000000000) != 0)
  {
    isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(v11);
    v11 = isUniquelyReferenced_nonNull_bridgeObject;
    v59 = isUniquelyReferenced_nonNull_bridgeObject;
  }
  v49 = v11 & 0xFFFFFFFFFFFFFF8;
  v51 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v51)
    goto LABEL_54;
  v52 = v51 - 1;
  v53 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v52 + 0x20);
  *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v52;
  specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);

  v8 = (uint64_t)objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "trashedItemsLocation");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  a2 = *(char **)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v49 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)a2 >= v49 >> 1)
LABEL_55:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, a2 + 1, 1);
  v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a2, v8);
  specialized Array._endMutation()(v54);
  v11 = v59;
LABEL_41:
  ((void (*)(uint64_t))i)(v11);
  return swift_bridgeObjectRelease(v11);
}

_QWORD *sub_1004A60D4(unint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;
  uint64_t v40;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v35 = v4;
    v38 = v3 & 0xC000000000000001;
    v5 = 4;
    v36 = v3;
    while (1)
    {
      v6 = v38 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, "sourceIdentifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v11 = v10;

      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
      v13 = objc_msgSend(a2, "sourceForIdentifier:", v12);

      if (v13)
      {
        v14 = v7;
        v15 = v13;
        v16 = objc_msgSend(v14, "representedTag");
        if (!v16)
        {
          if ((objc_msgSend(v14, "isRoot") & 1) != 0)
          {
            v17 = objc_msgSend(v14, "sourceIdentifier");
            v18 = objc_msgSend(v15, "displayName");
            v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
            v20 = v19;

            goto LABEL_17;
          }
          v16 = objc_msgSend(v14, "fileProviderItem");
        }

        v21 = objc_msgSend(v14, "displayName");
        if (v21)
        {
          v18 = v21;
          v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
          v20 = v22;
LABEL_17:

        }
        else
        {
          v40 = 0;
          v20 = 0xE000000000000000;
        }
        v23 = sub_100269C3C(v14, (uint64_t)v15);
        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v24 = swift_allocObject(&unk_1005F13C8, 32, 7);
        *(_QWORD *)(v24 + 16) = a3;
        *(_QWORD *)(v24 + 24) = v14;
        v25 = v14;
        v26 = a3;
        v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v40, v20, 0, 0, v23, 0, 0, 0, v27, 0, 0, 0, sub_1004A7A00, v24);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v31 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v31 >= v30 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
        v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v28);
        specialized Array._endMutation()(v32);
        v4 = v35;
        v3 = v36;
        v8 = v5 - 3;
        goto LABEL_5;
      }

LABEL_5:
      ++v5;
      if (v8 == v4)
        goto LABEL_28;
    }
    __break(1u);
LABEL_24:
    if (v3 < 0)
      v33 = v3;
    else
      v33 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v33);
  }
LABEL_28:
  swift_bridgeObjectRelease(v3);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1004A6440(uint64_t a1, uint64_t a2, char a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[40];

  v6 = *(void **)(a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager);
  v7 = (void *)FPActionRename;
  v8 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v8, v16);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = a2;
  v15 = inited;
  specialized Array._endMutation()(inited);
  v10 = v6;
  swift_unknownObjectRetain(a2);
  LOBYTE(v7) = sub_1003598CC(v7, v15);
  swift_bridgeObjectRelease(v15);
  if ((v7 & 1) != 0)
  {
    v11 = type metadata accessor for DOCNavigationItemRenameHandler();
    v12 = swift_allocObject(v11, 41, 7);
    v13 = swift_unknownObjectWeakInit(v12 + 16);
    swift_unknownObjectWeakAssign(v13, a1);
    *(_QWORD *)(v12 + 24) = v10;
    *(_QWORD *)(v12 + 32) = a2;
    *(_BYTE *)(v12 + 40) = a3 & 1;
    swift_unknownObjectRetain(a2);
  }
  else
  {

    return 0;
  }
  return v12;
}

uint64_t sub_1004A6550()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v8;
  _BYTE v9[40];

  v2 = *(void **)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = (void *)FPActionRename;
  v4 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v4, v9);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = v1;
  v8 = inited;
  specialized Array._endMutation()(inited);
  swift_unknownObjectRetain_n(v1, 2);
  v6 = v2;
  LOBYTE(v3) = sub_1003598CC(v3, v8);
  swift_bridgeObjectRelease(v8);
  swift_unknownObjectRelease(v1);

  return v3 & 1;
}

uint64_t sub_1004A65F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t countAndFlagsBits;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16, a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename);
    v9 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename
                   + 8);
    *v8 = a1;
    v8[1] = a2;
    swift_bridgeObjectRetain(a2);

    swift_bridgeObjectRelease(v9);
  }
  v10 = *(_QWORD *)(v2 + 32);
  swift_getObjectType(v10, v6);
  v11 = *(_BYTE *)(v2 + 40);
  swift_unknownObjectRetain(v10);
  countAndFlagsBits = DOCNode.displayName(withHiddenPathExtension:)((v11 & 1) == 0)._countAndFlagsBits;
  swift_unknownObjectRelease(v10);
  return countAndFlagsBits;
}

double sub_1004A66DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v47 = Strong;
    v12 = String.count.getter(a1, a2);
    if (v12 < 1)
    {
      sub_1004A3794(0xD000000000000010, 0x800000010053A3A0, v3, (uint64_t)v47);

    }
    else
    {
      v46 = a1;
      v13 = Logger.Rename.unsafeMutableAddressor(v12);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
      v14 = swift_bridgeObjectRetain_n(a2, 2);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.debug.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(12, -1);
        v18 = swift_slowAlloc(32, -1);
        v49 = v18;
        v45 = v3;
        *(_DWORD *)v17 = 136315138;
        swift_bridgeObjectRetain(a2);
        v48 = sub_1000544FC(v46, a2, &v49);
        v3 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
        swift_bridgeObjectRelease_n(a2, 3);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "[NavRename]: will change name to %s", v17, 0xCu);
        swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v18, -1, -1);
        swift_slowDealloc(v17, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v19 = type metadata accessor for RenameControllerDelegate();
      v20 = swift_allocObject(v19, 33, 7);
      swift_unknownObjectWeakInit(v20 + 16);
      v21 = swift_unknownObjectWeakInit(v20 + 24);
      *(_BYTE *)(v20 + 32) = 0;
      swift_unknownObjectWeakAssign(v21, v47);
      v22 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionGridCell());
      v24 = sub_100497280(0, v23, 0.0, 0.0, 0.0, 0.0);
      v25 = *(_QWORD *)(v3 + 32);
      v26 = type metadata accessor for DOCInlineRenameController();
      v27 = swift_allocObject(v26, 160, 7);
      swift_getObjectType(v25);
      swift_retain();
      swift_unknownObjectRetain(v25);
      v28 = sub_100390B40(v20, (uint64_t)v24, v25, v27);
      swift_release(v20);
      swift_unknownObjectRelease(v25);
      v29 = *(_QWORD *)(v3 + 32);
      ObjectType = swift_getObjectType(v29);
      swift_unknownObjectRetain(v29);
      v31 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
      swift_unknownObjectRelease(v29);
      if (v31)
      {
        v32 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
        v33 = *(void **)&v47[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
        v34 = v31;
        v35 = objc_msgSend(v33, "sceneIdentifier");
        v36 = objc_msgSend(v32, "globalTabbedBrowserControllerForIdentifier:", v35);

        if (v36)
        {
          v37 = objc_msgSend(v36, "effectiveFullBrowser");

          v36 = (id)sub_10040E510();
        }
        v38 = v46;
        v39 = *(_QWORD *)(v28 + 144);
        *(_QWORD *)(v28 + 144) = v36;
        swift_release(v39);
        v40 = *(_BYTE *)(v3 + 40);
        v41 = (_QWORD *)swift_allocObject(&unk_1005F1058, 64, 7);
        v41[2] = v3;
        v41[3] = v47;
        v41[4] = v38;
        v41[5] = a2;
        v41[6] = v20;
        v41[7] = v28;
        swift_bridgeObjectRetain(a2);
        swift_retain();
        swift_retain();
        v42 = v47;
        swift_retain();
        sub_10038F4F4(v34, v38, a2, v40, (void (*)(uint64_t, _QWORD, uint64_t))sub_1004A7608, (uint64_t)v41, (void **)DOCSplitBrowserViewController.didCommitPreview(of:), 0);

        swift_release(v20);
        swift_release(v28);

        v43 = v41;
      }
      else
      {
        sub_1004A3794(v46, a2, v3, (uint64_t)v47);

        swift_release(v20);
        v43 = (_QWORD *)v28;
      }
      *(_QWORD *)&result = swift_release(v43).n128_u64[0];
    }
  }
  return result;
}

uint64_t _s5Files31DOCItemCollectionViewControllerC33navigationItemShouldBeginRenamingySbSo012UINavigationG0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  _BYTE v20[24];

  v1 = sub_10006922C(&qword_100658208);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext);
  if (v4)
  {
    v5 = v4 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
    swift_beginAccess(v4 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, v20, 0, 0);
    sub_1000271D4(v5, (uint64_t)v3, &qword_100658208);
    v6 = _s23FolderMenuConfigurationVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6))
    {
      sub_10000CB4C((uint64_t)v3, &qword_100658208);
    }
    else
    {
      v9 = *(_QWORD *)&v3[*(int *)(v6 + 32)];
      swift_retain();
      sub_10000CB4C((uint64_t)v3, &qword_100658208);
      if (v9)
      {
        v11 = *(void **)(v9 + 24);
        v10 = *(_QWORD *)(v9 + 32);
        v12 = (void *)FPActionRename;
        v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
        inited = swift_initStackObject(v13, v19);
        *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
        *(_QWORD *)(inited + 32) = v10;
        v18 = inited;
        specialized Array._endMutation()(inited);
        v15 = v18;
        swift_unknownObjectRetain_n(v10, 2);
        v16 = v11;
        v7 = sub_1003598CC(v12, v15);
        swift_bridgeObjectRelease(v15);
        swift_release(v9);
        swift_unknownObjectRelease(v10);

        return v7 & 1;
      }
    }
  }
  v7 = 0;
  return v7 & 1;
}

void sub_1004A6D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v24[24];

  v5 = sub_10006922C(&qword_10064B370);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100658208);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext);
  if (v11)
  {
    v12 = v11
        + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
    swift_beginAccess(v11 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, v24, 0, 0);
    sub_1000271D4(v12, (uint64_t)v10, &qword_100658208);
    v13 = _s23FolderMenuConfigurationVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_10000CB4C((uint64_t)v10, &qword_100658208);
    }
    else
    {
      v18 = *(_QWORD *)&v10[*(int *)(v13 + 32)];
      swift_retain();
      sub_10000CB4C((uint64_t)v10, &qword_100658208);
      if (v18)
      {
        sub_1004A65F8(a1, a2);
        swift_release(v18);
        return;
      }
    }
  }
  v22 = 0;
  v23 = 0xE000000000000000;
  v20 = 0;
  v21 = 0xE000000000000000;
  v14 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  v15 = sub_10008B9BC();
  StringProtocol.range<A>(of:options:range:locale:)(&v20, 0, 0, 0, 1, v7, &type metadata for String, &type metadata for String, v15, v15);
  v17 = v16;
  sub_10000CB4C((uint64_t)v7, &qword_10064B370);
  swift_bridgeObjectRelease(v21);
  if ((v17 & 1) != 0)
    __break(1u);
}

double sub_1004A6F6C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  double result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v5 = sub_10006922C(&qword_100658208);
  result = __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext);
  if (v9)
  {
    v10 = v9 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
    swift_beginAccess(v9 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, v14, 0, 0);
    sub_1000271D4(v10, (uint64_t)v8, &qword_100658208);
    v11 = _s23FolderMenuConfigurationVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11))
    {
      sub_10000CB4C((uint64_t)v8, &qword_100658208);
    }
    else
    {
      v12 = *(_QWORD *)&v8[*(int *)(v11 + 32)];
      swift_retain();
      sub_10000CB4C((uint64_t)v8, &qword_100658208);
      if (v12)
      {
        sub_1004A66DC(a1, a2);
        *(_QWORD *)&result = swift_release(v12).n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_1004A709C()
{
  return _s16TitleMenuContextCMa(0);
}

uint64_t type metadata accessor for RenameControllerDelegate()
{
  return objc_opt_self(_TtC5Files24RenameControllerDelegate);
}

uint64_t type metadata accessor for DOCNavigationItemRenameHandler()
{
  return objc_opt_self(_TtC5FilesP33_D3C21A6B876BDB8BE004EB70C361162130DOCNavigationItemRenameHandler);
}

uint64_t type metadata accessor for DOCSystemMenuItemCollection()
{
  return objc_opt_self(_TtC5FilesP33_D3C21A6B876BDB8BE004EB70C361162127DOCSystemMenuItemCollection);
}

uint64_t type metadata accessor for DOCNavigationTitleBehavior()
{
  return objc_opt_self(_TtC5Files26DOCNavigationTitleBehavior);
}

uint64_t *sub_1004A7124(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = v10;
    v11 = (uint64_t *)((char *)v4 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = a3[7];
    v15 = a3[8];
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = (uint64_t)v16;
    v17 = *(uint64_t *)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = v17;
    swift_unknownObjectRetain(v10);
    swift_retain(v13);
    v18 = v16;
  }
  swift_retain(v17);
  return v4;
}

uint64_t sub_1004A71E4(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));

  return swift_release(*(_QWORD *)(a1 + a2[8]));
}

uint64_t sub_1004A7250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a3[7];
  v14 = a3[8];
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v16;
  swift_unknownObjectRetain(v9);
  swift_retain(v12);
  v17 = v15;
  swift_retain(v16);
  return a1;
}

uint64_t sub_1004A72F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v9);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[7];
  v16 = *(void **)(a1 + v15);
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = v17;

  v19 = a3[8];
  v20 = *(_QWORD *)(a1 + v19);
  v21 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  swift_retain(v21);
  swift_release(v20);
  return a1;
}

uint64_t sub_1004A73B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1004A742C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_unknownObjectRelease(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[8];
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release(v14);
  return a1;
}

uint64_t sub_1004A74D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1004A754C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1004A75C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1004A7608(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;

  sub_1004A39BC(a1, a2, a3 & 0x1FF, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1004A7638()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A765C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004A36E4(a1, *(_QWORD *)(v1 + 16));
}

id sub_1004A7664()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1004A7684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100658208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004A76CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100658208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004A7714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s23FolderMenuConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004A7758(uint64_t a1)
{
  uint64_t v2;

  v2 = _s23FolderMenuConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004A7794()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A77B8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004A77EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004A7830(uint64_t a1)
{
  uint64_t v1;

  return sub_1004A4124(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48));
}

uint64_t sub_1004A7840()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A7864(uint64_t a1)
{
  uint64_t v1;

  return sub_1004A44DC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1004A786C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

Class sub_1004A78A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1004A52D0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

void *sub_1004A78B0(void *a1)
{
  return sub_1004A5570(a1);
}

Class sub_1004A78BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1004A4630(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1004A78C8(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_1004A4804(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1004A78D0()
{
  return sub_1004A794C((void (*)(_QWORD))&_swift_release);
}

void sub_1004A78DC(int64_t a1)
{
  uint64_t v1;

  sub_1004A4C88(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1004A78E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1004A7914()
{
  uint64_t v0;
  NSObject *v1;

  v1 = *(NSObject **)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  dispatch_group_leave(v1);
}

uint64_t sub_1004A7940()
{
  return sub_1004A794C((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1004A794C(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 40, 7);
}

void sub_1004A797C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1004A5B3C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1004A7988()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_errorRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004A79C4()
{
  uint64_t v0;

  return sub_1004A5C20(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(_QWORD))(v0 + 48));
}

uint64_t sub_1004A79D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004A7A00(uint64_t a1)
{
  uint64_t v1;

  return sub_1004A524C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

BOOL DOCButton.invalidateIntrinsicSizeWhenContentSizeCategoryChanges.getter()
{
  if (qword_100641208 != -1)
    swift_once(&qword_100641208, sub_10009EFFC);
  return (byte_100658218 & 1) == 0;
}

BOOL UITraitCollection.preferredNavigationBarStyle.getter()
{
  void *v0;

  return DOCUsePadIdiomForTraits(v0) && objc_msgSend(v0, "horizontalSizeClass") == (id)2;
}

uint64_t sub_1004A7AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors);
  }
  else
  {
    v3 = type metadata accessor for DOCOffsetAdjustmentBehaviors();
    v2 = swift_allocObject(v3, 32, 7);
    v4 = swift_unknownObjectWeakInit(v2 + 16);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakAssign(v4, v0);
    v5 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release(v5);
  }
  swift_retain();
  return v2;
}

void sub_1004A7B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v6;

  v0 = sub_1004A7AB4();
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v4 = v0;
    *(_QWORD *)(v0 + 24) = v3;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16, v1);
    if (v3 < 1)
    {
      if (Strong)
      {
        v6 = Strong;
        objc_msgSend(Strong, "_setAutomaticContentOffsetAdjustmentEnabled:", 1);
        goto LABEL_7;
      }
    }
    else if (Strong)
    {
      v6 = Strong;
      objc_msgSend(Strong, "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
LABEL_7:
      swift_release(v4);

      return;
    }
    swift_release(v4);
  }
}

void sub_1004A7BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v6;

  v0 = sub_1004A7AB4();
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v4 = v0;
    *(_QWORD *)(v0 + 24) = v3;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16, v1);
    if (v3 < 1)
    {
      if (Strong)
      {
        v6 = Strong;
        objc_msgSend(Strong, "_setAutomaticContentOffsetAdjustmentEnabled:", 1);
        goto LABEL_7;
      }
    }
    else if (Strong)
    {
      v6 = Strong;
      objc_msgSend(Strong, "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
LABEL_7:
      swift_release(v4);

      return;
    }
    swift_release(v4);
  }
}

id DOCViewController.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCViewController);
}

void DOCCollectionViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCCollectionViewController", 33, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id DOCCollectionViewController.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCCollectionViewController);
}

id DOCCollectionView.contentSize.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCollectionView();
  return objc_msgSendSuper2(&v2, "contentSize");
}

id DOCCollectionView.contentSize.setter(double a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  objc_super v10;

  v5 = sub_1004A7AB4();
  v6 = *(_QWORD *)(v5 + 24);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
  v8 = Strong;
  if (v6 < 1)
  {
    if (Strong)
    {
      objc_msgSend(Strong, "_setAutomaticContentOffsetAdjustmentEnabled:", 1);
      goto LABEL_6;
    }
LABEL_7:
    swift_release(v5);
    goto LABEL_8;
  }
  if (!Strong)
    goto LABEL_7;
  objc_msgSend(Strong, "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
LABEL_6:
  swift_release(v5);

LABEL_8:
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for DOCCollectionView();
  return objc_msgSendSuper2(&v10, "setContentSize:", a1, a2);
}

id DOCCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  id v11;
  objc_super v13;

  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors] = 0;
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for DOCCollectionView();
  v11 = objc_msgSendSuper2(&v13, "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);

  return v11;
}

id DOCCollectionView.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCCollectionView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id DOCCollectionView.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCCollectionView);
}

id sub_1004A81B4(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  Class isa;
  uint64_t v12;
  objc_super v13;

  v3 = type metadata accessor for DOCNavigationBar();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for DOCNavigationController();
  v5 = objc_msgSendSuper2(&v13, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, 0);
  v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v7 + 32) = a1;
  v12 = v7;
  specialized Array._endMutation()(v7);
  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v8 = v5;
  v9 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setViewControllers:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  return v8;
}

id DOCNavigationController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a1);
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata(v3);
  return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

void DOCNavigationController.init(navigationBarClass:toolbarClass:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCNavigationController", 29, "init(navigationBarClass:toolbarClass:)", 38, 0);
  __break(1u);
}

id DOCNavigationController.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCNavigationController);
}

Files::DOCNavigationBar::Style_optional __swiftcall DOCNavigationBar.Style.init(rawValue:)(Swift::Int rawValue)
{
  Files::DOCNavigationBar::Style_optional v1;

  if (rawValue == 1)
    v1.value = Files_DOCNavigationBar_Style_desktopStyle;
  else
    v1.value = Files_DOCNavigationBar_Style_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

uint64_t DOCNavigationBar.Style.rawValue.getter(char a1)
{
  return a1 & 1;
}

id sub_1004A83F8()
{
  return sub_1000DB3A0(type metadata accessor for DOCNavigationBarStyle);
}

double DOCNavigationBar.titlePositionAdjustment.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment, v3, 0, 0);
  return *(double *)v1;
}

void DOCNavigationBar.titlePositionAdjustment.setter(double a1)
{
  char *v1;
  double *v3;
  id v4;
  _BYTE v5[24];

  v3 = (double *)&v1[OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment], v5, 1, 0);
  *v3 = a1;
  v4 = objc_msgSend(v1, "standardAppearance");
  objc_msgSend(v4, "setTitlePositionAdjustment:", *v3, 0.0);

}

void (*DOCNavigationBar.titlePositionAdjustment.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1004A8644;
}

void sub_1004A8644(_QWORD *a1, char a2)
{
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  id v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (char *)v3[3];
    v5 = v3[4];
    v6 = objc_msgSend(v4, "standardAppearance");
    objc_msgSend(v6, "setTitlePositionAdjustment:", *(double *)&v4[v5], 0.0);

  }
  free(v3);
}

Swift::Void __swiftcall DOCNavigationBar.layoutSubviews()()
{
  void *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNavigationBar();
  objc_msgSendSuper2(&v2, "layoutSubviews");
  v1 = objc_msgSend(v0, "doc_nearestAncestorViewController");
  objc_msgSend(v1, "doc_updateBarButtonTrackingViewsIfNecessary");

}

uint64_t DOCNavigationBar.chromelessAppearanceDisabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled, v3, 0, 0);
  return *v1;
}

void DOCNavigationBar.chromelessAppearanceDisabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  id v4;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled, v5, 1, 0);
  v4 = 0;
  *v3 = a1;
  if ((a1 & 1) != 0)
    v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  sub_1000B1284(v4);
}

void (*DOCNavigationBar.chromelessAppearanceDisabled.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1004A88A0;
}

void sub_1004A88A0(_QWORD *a1, char a2)
{
  _QWORD *v3;
  id v4;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    if (*(_BYTE *)(v3[3] + v3[4]) == 1)
      v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
    else
      v4 = 0;
    sub_1000B1284(v4);
  }
  free(v3);
}

id DOCNavigationBar.scrollEdgeAppearance.getter()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v5;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCNavigationBar_overrideScrollEdgeAppearance];
  v2 = v1;
  if (!v1)
  {
    v5.receiver = v0;
    v5.super_class = (Class)type metadata accessor for DOCNavigationBar();
    v2 = objc_msgSendSuper2(&v5, "scrollEdgeAppearance");
  }
  v3 = v1;
  return v2;
}

void DOCNavigationBar.scrollEdgeAppearance.setter(void *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCNavigationBar();
  objc_msgSendSuper2(&v3, "setScrollEdgeAppearance:", a1);

}

id DOCNavigationBar.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCNavigationBar);
}

id DOCView.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCView);
}

id DOCStackView.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCStackView);
}

id sub_1004A8B4C()
{
  return sub_1000DB3A0(type metadata accessor for DOCTableView);
}

id DOCButton.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCButton);
}

uint64_t type metadata accessor for DOCCollectionView()
{
  return objc_opt_self(_TtC5Files17DOCCollectionView);
}

unint64_t sub_1004A8C0C()
{
  unint64_t result;

  result = qword_100658240;
  if (!qword_100658240)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCNavigationBar.Style, &type metadata for DOCNavigationBar.Style);
    atomic_store(result, (unint64_t *)&qword_100658240);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCNavigationBar.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004A8C9C + 4 * byte_1004EAD95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004A8CD0 + 4 * byte_1004EAD90[v4]))();
}

uint64_t sub_1004A8CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A8CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004A8CE0);
  return result;
}

uint64_t sub_1004A8CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004A8CF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004A8CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A8D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCNavigationBar.Style()
{
  return &type metadata for DOCNavigationBar.Style;
}

uint64_t type metadata accessor for DOCNavigationBarStyle()
{
  return objc_opt_self(_TtC5Files21DOCNavigationBarStyle);
}

uint64_t type metadata accessor for DOCTableView()
{
  return objc_opt_self(_TtC5Files12DOCTableView);
}

_QWORD *sub_1004A8D6C(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *);
  uint64_t v19;
  _QWORD v20[2];
  _QWORD *v21;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v17 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v21 = _swiftEmptyArrayStorage;
    sub_100154E04(0, v9, 0);
    v10 = v21;
    v11 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v12 = *v11;
      v20[0] = *(v11 - 1);
      v20[1] = v12;
      swift_bridgeObjectRetain(v12);
      v18(v20);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease(v12);
      v21 = v10;
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_100154E04(v13 > 1, v14 + 1, 1);
        v10 = v21;
      }
      v11 += 2;
      v10[2] = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, v8, v17);
      if (!--v9)
        return v10;
    }
    swift_release(v10);
    swift_bridgeObjectRelease(v12);
  }
  return v10;
}

_QWORD *sub_1004A8EE0(void (*a1)(_QWORD *__return_ptr, _QWORD *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD *v20;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v20 = _swiftEmptyArrayStorage;
    sub_100081774(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v9 = *v8;
      v18[0] = *(v8 - 1);
      v18[1] = v9;
      v10 = swift_bridgeObjectRetain(v9);
      a1(v19, v18, v10);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease(v9);
      v12 = v19[0];
      v11 = v19[1];
      v20 = v6;
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_100081774(v13 > 1, v14 + 1, 1);
        v6 = v20;
      }
      v8 += 2;
      v6[2] = v14 + 1;
      v15 = &v6[2 * v14];
      v15[4] = v12;
      v15[5] = v11;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
    swift_bridgeObjectRelease(v9);
  }
  return v6;
}

_QWORD *sub_1004A9000(void (*a1)(__int128 *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t *i;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(__int128 *, __n128);
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v4 = v3;
  v20 = a1;
  v21 = a2;
  v19 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v25 = _swiftEmptyArrayStorage;
    sub_100154E04(0, v9, 0);
    v10 = v25;
    for (i = (uint64_t *)(a3 + 56); ; i += 4)
    {
      v12 = *(i - 1);
      v13 = *i;
      v22 = *(_OWORD *)(i - 3);
      v23 = v12;
      v24 = v13;
      v14 = swift_bridgeObjectRetain(v13);
      v20(&v22, v14);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease(v13);
      v25 = v10;
      v16 = v10[2];
      v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_100154E04(v15 > 1, v16 + 1, 1);
        v10 = v25;
      }
      v10[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v16, v8, v19);
      if (!--v9)
        return v10;
    }
    swift_release(v10);
    swift_bridgeObjectRelease(v13);
  }
  return v10;
}

double sub_1004A917C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment + 8);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  sub_10045C708(40, (void *)0xE100000000000000);
  *(_QWORD *)&result = swift_bridgeObjectRelease(0xE100000000000000).n128_u64[0];
  return result;
}

uint64_t sub_1004A9208()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment
                                             + 8));
}

id sub_1004A921C()
{
  return sub_1000DB3A0(type metadata accessor for DOCQueryFragmentSuggestion);
}

uint64_t type metadata accessor for DOCQueryFragmentSuggestion()
{
  return objc_opt_self(_TtC5Files26DOCQueryFragmentSuggestion);
}

uint64_t sub_1004A925C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  _QWORD **v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _BYTE v16[24];

  if (a2)
  {
    v9 = result;
    v10 = (_QWORD **)(a8 + 16);
    swift_beginAccess(a8 + 16, v16, 33, 0);
    v11 = *v10;
    swift_bridgeObjectRetain(a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    *v10 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_100081A50(0, v11[2] + 1, 1, v11);
      *v10 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_100081A50((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *v10 = v11;
    }
    v11[2] = v14 + 1;
    v15 = &v11[2 * v14];
    v15[4] = v9;
    v15[5] = a2;
    return swift_endAccess(v16);
  }
  return result;
}

uint64_t sub_1004A9338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_10006922C(&qword_100643CC0);
  v1 = swift_allocObject(v0, 80, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemLastUsedDate);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemContentModificationDate);
  *(_QWORD *)(v1 + 56) = v3;
  result = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemContentCreationDate);
  *(_QWORD *)(v1 + 64) = result;
  *(_QWORD *)(v1 + 72) = v5;
  qword_100672F00 = v1;
  return result;
}

void sub_1004A93BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  NSString v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, _BYTE *);
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v20;
  id v21;
  uint64_t v22;
  id Strong;
  _QWORD aBlock[5];
  uint64_t v25;
  _QWORD *v26;

  Strong = (id)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files16DOCDateSuggester_dateParser);
  if (Strong)
  {
    v7 = v3 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
    v8 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate);
    if (!v8)
    {

      return;
    }
    v9 = v8;
    v22 = a3;
    v10 = *(_QWORD *)(v7 + 8);
    v11 = _swiftEmptyArrayStorage;
    v26 = _swiftEmptyArrayStorage;
    v12 = String._bridgeToObjectiveC()();
    v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))objc_msgSend(Strong, "parse:", v12);

    if (!v13)
    {
      v14 = 0;
      goto LABEL_8;
    }
    v21 = objc_msgSend(v13, "length");
    v14 = (_QWORD *)swift_allocObject(&unk_1005F16C0, 40, 7);
    v14[2] = a1;
    v14[3] = a2;
    v14[4] = &v26;
    v15 = swift_allocObject(&unk_1005F16E8, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_1004ADA0C;
    *(_QWORD *)(v15 + 24) = v14;
    aBlock[4] = sub_100066584;
    v25 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004A9C14;
    aBlock[3] = &unk_1005F1700;
    v16 = _Block_copy(aBlock);
    v17 = v25;
    swift_bridgeObjectRetain(a2);
    swift_retain();
    objc_msgSend(v13, "enumerateAttributesInRange:options:usingBlock:", 0, v21, 2, v16, swift_release(v17).n128_f64[0]);

    _Block_release(v16);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v15, "", 111, 115, 133, 1);
    swift_release(v15);
    if ((v16 & 1) == 0)
    {
      v13 = sub_1004ADA0C;
      v11 = v26;
LABEL_8:
      ObjectType = swift_getObjectType(v9);
      v19 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v10 + 8);
      v20 = swift_bridgeObjectRetain(v11);
      v19(v3, v11, v22, a1, a2, ObjectType, v10, v20);
      swift_bridgeObjectRelease(v11);
      swift_unknownObjectRelease(v9);

      swift_bridgeObjectRelease(v26);
      sub_100087534((uint64_t)v13, (uint64_t)v14);
      return;
    }
    __break(1u);
  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x800000010053AD60, "Files/DOCQueryStringSuggesters.swift", 36, 2, 108, 0);
  __break(1u);
}

uint64_t sub_1004A9694(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  NSString v12;
  void *v13;
  uint64_t v14;
  char v15;
  NSString v16;
  void *v17;
  uint64_t v18;
  char v19;
  __int128 *v20;
  _OWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t *v31;
  _QWORD *v32;
  objc_class *v33;
  double v34;
  _BYTE *v35;
  NSString v36;
  void *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _QWORD v56[4];
  _QWORD v57[2];
  objc_super v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _OWORD v63[2];

  v12 = String._bridgeToObjectiveC()();
  v13 = v12;
  if (!*(_QWORD *)(a1 + 16) || (v14 = sub_100079D38(v12), (v15 & 1) == 0))
  {
    v61 = 0u;
    v62 = 0u;

    goto LABEL_8;
  }
  sub_100069BD8(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v61);

  if (!*((_QWORD *)&v62 + 1))
  {
LABEL_8:
    v20 = &v61;
    return sub_10007EB54((uint64_t)v20);
  }
  sub_100079B28(&v61, v63);
  v16 = String._bridgeToObjectiveC()();
  v17 = v16;
  if (*(_QWORD *)(a1 + 16) && (v18 = sub_100079D38(v16), (v19 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(a1 + 56) + 32 * v18, (uint64_t)&v59);
  }
  else
  {
    v59 = 0u;
    v60 = 0u;
  }

  if (!*((_QWORD *)&v60 + 1))
  {
    sub_100068588(v63);
    v20 = &v59;
    return sub_10007EB54((uint64_t)v20);
  }
  v22 = sub_100079B28(&v59, &v61);
  if (qword_100641210 != -1)
    v22 = (_OWORD *)swift_once(&qword_100641210, sub_1004A9338);
  v23 = qword_100672F00;
  __chkstk_darwin(v22);
  v56[2] = v63;
  v56[3] = &v61;
  swift_bridgeObjectRetain(v23);
  v24 = sub_1004A8EE0((void (*)(_QWORD *__return_ptr, _QWORD *, __n128))sub_1004ADA28, (uint64_t)v56, v23);
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)&v59 = v24;
  v25 = sub_10006922C(&qword_10064F390);
  v26 = sub_100062698((unint64_t *)&qword_10064D530, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = BidirectionalCollection<>.joined(separator:)(545029152, 0xE400000000000000, v25, v26);
  v29 = v28;
  swift_bridgeObjectRelease(v24);
  v30 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  v31 = (uint64_t *)&v30[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  *v31 = v27;
  v31[1] = v29;
  v30[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  v32 = &v30[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *v32 = a5;
  v32[1] = a6;
  v33 = (objc_class *)type metadata accessor for DOCSearchSuggestion();
  v58.receiver = v30;
  v58.super_class = v33;
  *(_QWORD *)&v34 = swift_bridgeObjectRetain(a6).n128_u64[0];
  v35 = objc_msgSendSuper2(&v58, "init", v34);
  v35[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 1;
  v36 = String._bridgeToObjectiveC()();
  v37 = v36;
  if (*(_QWORD *)(a1 + 16) && (v38 = sub_100079D38(v36), (v39 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(a1 + 56) + 32 * v38, (uint64_t)&v59);
  }
  else
  {
    v59 = 0u;
    v60 = 0u;
  }

  if (!*((_QWORD *)&v60 + 1))
  {
    sub_10007EB54((uint64_t)&v59);
    goto LABEL_23;
  }
  if ((swift_dynamicCast(v57, &v59, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_23:
    v47 = &v35[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    v48 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
    *v47 = a5;
    v47[1] = a6;
    swift_bridgeObjectRetain(a6);
    v49 = v35;
    swift_bridgeObjectRelease(v48);
    sub_1000DA8F8();

    v50 = v47[1];
    v51 = &v49[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    v46 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
    *(_QWORD *)v51 = *v47;
    *((_QWORD *)v51 + 1) = v50;
    swift_bridgeObjectRetain(v50);
    goto LABEL_24;
  }
  v41 = v57[0];
  v40 = v57[1];
  v42 = &v35[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
  v43 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
  *v42 = v57[0];
  v42[1] = v40;
  v44 = v35;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v43);
  sub_1000DA8F8();

  v45 = &v44[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
  v46 = *(_QWORD *)&v44[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
  *(_QWORD *)v45 = v41;
  *((_QWORD *)v45 + 1) = v40;
LABEL_24:
  swift_bridgeObjectRelease(v46);
  v52 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v53 = swift_allocObject(v52, 40, 7);
  *(_OWORD *)(v53 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v53 + 32) = v35;
  *(_QWORD *)&v59 = v53;
  specialized Array._endMutation()(v53);
  v54 = *a7;
  *a7 = v59;
  v55 = v35;
  swift_bridgeObjectRelease(v54);
  *a4 = 1;

  sub_100068588(&v61);
  return sub_100068588(v63);
}

void sub_1004A9AF8(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7 = *a1;
  v8 = (void *)a1[1];
  v15 = 0;
  v16 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v9._countAndFlagsBits = 0x2865676E61526E49;
  v9._object = (void *)0xE800000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = v7;
  v10._object = v8;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  _print_unlocked<A, B>(_:_:)(a2, &v15, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12._countAndFlagsBits = 8236;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  _print_unlocked<A, B>(_:_:)(a3, &v15, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14 = v16;
  *a4 = v15;
  a4[1] = v14;
}

double sub_1004A9C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  v11 = v10;
  v12 = sub_10005A360((unint64_t *)&qword_1006424E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1004D93A8);
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, v11, (char *)&type metadata for Any + 8, v12);
  v9(v13, a3, a4, a5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

uint64_t sub_1004A9CB4()
{
  uint64_t v0;

  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files16DOCDateSuggester_dateParser);
}

id sub_1004A9CC4()
{
  return sub_1000DB3A0(type metadata accessor for DOCDateSuggester);
}

uint64_t type metadata accessor for DOCDateSuggester()
{
  return objc_opt_self(_TtC5Files16DOCDateSuggester);
}

void sub_1004A9D00()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x800000010053AD40, "Files/DOCQueryStringSuggesters.swift", 36, 2, 148, 0);
  __break(1u);
}

void sub_1004A9D58()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x800000010053AD40, "Files/DOCQueryStringSuggesters.swift", 36, 2, 152, 0);
  __break(1u);
}

double sub_1004A9DB0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  Swift::String v25;
  Swift::Bool v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  double result;
  uint64_t v39;

  v5 = v4;
  v9 = String.doc_sanitizedForComparison.getter(a1, a2, a4);
  v11 = v10;
  v12 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x98);
  v13 = v12();
  v15 = v14;
  v16 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(v13, v14);
  v17 = swift_bridgeObjectRelease(v15);
  v18 = ((uint64_t (*)(__n128))v12)(v17);
  v20 = v19;
  swift_bridgeObjectRelease(v19);
  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = v18 & 0xFFFFFFFFFFFFLL;
  if (v21)
  {
    v22 = *(_QWORD *)(v16 + 16);
    if (v22)
    {
      v39 = a3;
      swift_bridgeObjectRetain(v16);
      v23 = (_QWORD *)(v16 + 40);
      while (1)
      {
        v24 = *v23;
        swift_bridgeObjectRetain(*v23);
        v25._countAndFlagsBits = v9;
        v25._object = v11;
        v26 = String.hasPrefix(_:)(v25);
        swift_bridgeObjectRelease(v24);
        if (v26)
          break;
        v23 += 2;
        if (!--v22)
        {
          swift_bridgeObjectRelease_n(v16, 2);
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease_n(v16, 2);
      LODWORD(v22) = 1;
LABEL_12:
      a3 = v39;
    }
    else
    {
      swift_bridgeObjectRelease(v16);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    LODWORD(v22) = 1;
  }
  v27 = String.count.getter(a1, a2);
  if (v27 >= (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x88))() && (_DWORD)v22)
  {
    v28 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v29 = swift_allocObject(v28, 40, 7);
    *(_OWORD *)(v29 + 16) = xmmword_1004D9B40;
    v30 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))((swift_isaMask & *v5) + 0xA0))(v9, v11, a1, a2);
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)(v29 + 32) = v30;
    specialized Array._endMutation()(v31);
    v32 = (_QWORD *)v29;
  }
  else
  {
    swift_bridgeObjectRelease(v11);
    v32 = _swiftEmptyArrayStorage;
  }
  v33 = (char *)v5 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v5 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate);
  if (Strong)
  {
    v35 = Strong;
    v36 = *((_QWORD *)v33 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8))(v5, v32, a3, a1, a2, ObjectType, v36);
    swift_bridgeObjectRelease(v32);
    *(_QWORD *)&result = swift_unknownObjectRelease(v35).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v32).n128_u64[0];
  }
  return result;
}

id sub_1004AA038()
{
  return sub_1000DB3A0(type metadata accessor for DOCHasTraitSuggester);
}

uint64_t type metadata accessor for DOCHasTraitSuggester()
{
  return objc_opt_self(_TtC5Files20DOCHasTraitSuggester);
}

id sub_1004AA064(uint64_t a1)
{
  id result;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String_optional v5;
  uint64_t countAndFlagsBits;
  Swift::String v7;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v2 = result;
    v3._countAndFlagsBits = 0xD000000000000013;
    v7._countAndFlagsBits = 0xD000000000000069;
    v7._object = (void *)0x800000010053ACD0;
    v3._object = (void *)0x800000010053AC90;
    v4._object = (void *)0x800000010053ACB0;
    v5.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v5.value._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0xD000000000000010;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v5, (NSBundle)v2, v4, v7)._countAndFlagsBits;

    return (id)countAndFlagsBits;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1004AA128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t *v8;
  _QWORD *v9;
  char *v10;
  char *result;
  char *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  objc_super v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemIsShared);
  v27 = v4;
  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = 0x31203D3D20;
  v5._object = (void *)0xE500000000000000;
  String.append(_:)(v5);
  v6 = v27;
  v7 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  v8 = (uint64_t *)&v7[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  *v8 = v26;
  v8[1] = v6;
  v7[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  v9 = &v7[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *v9 = a1;
  v9[1] = a2;
  v25.receiver = v7;
  v25.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  v10 = (char *)objc_msgSendSuper2(&v25, "init");
  result = (char *)(id)_DocumentManagerBundle(v10);
  if (result)
  {
    v12 = result;
    v28._countAndFlagsBits = 0xD000000000000033;
    v28._object = (void *)0x800000010053AC00;
    v13._object = (void *)0x800000010053ABE0;
    v13._countAndFlagsBits = 0xD000000000000015;
    v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v14.value._object = (void *)0xEB00000000656C62;
    v15._countAndFlagsBits = 0xD000000000000015;
    v15._object = (void *)0x800000010053ABE0;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v28);

    v17 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
    *(Swift::String *)&v10[OBJC_IVAR____TtC5Files13DOCSuggestion_title] = v16;
    swift_bridgeObjectRelease(v17);
    sub_1000DA8F8();
    result = (char *)(id)_DocumentManagerBundle(v18);
    if (result)
    {
      v19 = result;
      v29._countAndFlagsBits = 0xD000000000000040;
      v29._object = (void *)0x800000010053AC40;
      v20._countAndFlagsBits = 0x6572616853207349;
      v20._object = (void *)0xE900000000000064;
      v21.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v21.value._object = (void *)0xEB00000000656C62;
      v22._countAndFlagsBits = 0x6572616853207349;
      v22._object = (void *)0xE900000000000064;
      v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v29);

      v24 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
      *(Swift::String *)&v10[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle] = v23;

      swift_bridgeObjectRelease(v24);
      v10[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 6;
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1004AA368()
{
  return sub_1000DB3A0(type metadata accessor for DOCIsSharedSuggester);
}

uint64_t type metadata accessor for DOCIsSharedSuggester()
{
  return objc_opt_self(_TtC5Files20DOCIsSharedSuggester);
}

char *sub_1004AA394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *v14;
  _QWORD *v15;
  id v16;
  char *result;
  void *v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  objc_super v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemFilename);
  v38 = v8;
  swift_bridgeObjectRetain(a2);
  v9._countAndFlagsBits = 540884256;
  v9._object = (void *)0xE400000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = String.doc_searchQueryValue.getter(a1, a2);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12 = v38;
  v13 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  v14 = (uint64_t *)&v13[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  *v14 = v37;
  v14[1] = v12;
  v13[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  v15 = &v13[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *v15 = a1;
  v15[1] = a2;
  v36.receiver = v13;
  v36.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  v16 = objc_msgSendSuper2(&v36, "init");
  result = (char *)(id)_DocumentManagerBundle(v16);
  if (result)
  {
    v18 = result;
    v39._countAndFlagsBits = 0xD000000000000037;
    v39._object = (void *)0x800000010053ABA0;
    v19._object = (void *)0x800000010053AB80;
    v19._countAndFlagsBits = 0xD000000000000010;
    v20.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v20.value._object = (void *)0xEB00000000656C62;
    v21._countAndFlagsBits = 0xD000000000000010;
    v21._object = (void *)0x800000010053AB80;
    v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v39);

    v23 = sub_10006922C((uint64_t *)&unk_100644560);
    v24 = swift_allocObject(v23, 72, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1004D9670;
    v25 = (char *)v16;
    v26 = String.doc_localizedQuotedString.getter(a3, a4);
    v28 = v27;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    *(_QWORD *)(v24 + 64) = sub_10006A638();
    *(_QWORD *)(v24 + 32) = v26;
    *(_QWORD *)(v24 + 40) = v28;
    v29 = String.init(format:_:)(v22._countAndFlagsBits, v22._object, v24);
    v31 = v30;
    swift_bridgeObjectRelease(v22._object);
    v32 = (uint64_t *)&v25[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    v33 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
    *v32 = v29;
    v32[1] = v31;
    swift_bridgeObjectRelease(v33);
    sub_1000DA8F8();

    v34 = &v25[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    v35 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
    *(_QWORD *)v34 = a3;
    *((_QWORD *)v34 + 1) = a4;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRelease(v35);
    v25[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 4;
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1004AA5FC()
{
  return sub_1000DB3A0(type metadata accessor for DOCFilenameSuggester);
}

uint64_t type metadata accessor for DOCFilenameSuggester()
{
  return objc_opt_self(_TtC5Files20DOCFilenameSuggester);
}

void sub_1004AA628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _QWORD v38[2];

  v4 = v3;
  v7 = v4 + OBJC_IVAR____TtC5Files15DOCTagSuggester_dataSource;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files15DOCTagSuggester_dataSource);
  if (!Strong)
    goto LABEL_19;
  v9 = Strong;
  v10 = *(_QWORD *)(v7 + 8);
  v38[1] = a2;
  v11 = sub_10008B9BC();
  v12 = StringProtocol.localizedLowercase.getter(&type metadata for String, v11);
  v14 = v13;
  v38[0] = _swiftEmptyArrayStorage;
  v15 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
  v16 = objc_msgSend(v15, "userTags");

  v17 = v16;
  sub_1004ACA38(v17);
  v19 = v18;

  v20 = sub_10001F54C(v19);
  swift_release(v19);
  swift_bridgeObjectRetain(v14);
  v21 = (uint64_t)sub_1004ACF34((unint64_t)v20, v12, v14);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v14);
  v35 = a3;
  v36 = v4;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v26 = v21;
    else
      v26 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v22 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (v22)
      goto LABEL_4;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v21);
    if (v22)
    {
LABEL_4:
      if (v22 >= 1)
      {
        v23 = 0;
        do
        {
          if ((v21 & 0xC000000000000001) != 0)
            v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v21);
          else
            v24 = *(id *)(v21 + 8 * v23 + 32);
          v25 = v24;
          ++v23;
          v37 = v24;
          sub_1004AA90C(&v37, v12, (uint64_t)v14, v9, v10, v38);

        }
        while (v22 != v23);
        goto LABEL_14;
      }
      __break(1u);
LABEL_19:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ALL, 0x800000010053AB50, "Files/DOCQueryStringSuggesters.swift", 36, 2, 237, 0);
      __break(1u);
      return;
    }
  }
LABEL_14:
  swift_bridgeObjectRelease_n(v21, 2);
  v27 = v36 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  v28 = swift_unknownObjectWeakLoadStrong(v36 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)(v27 + 8);
    ObjectType = swift_getObjectType(v28);
    v32 = v38[0];
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, __n128))(v30 + 8);
    v34 = swift_bridgeObjectRetain(v38[0]);
    v33(v36, v32, v35, v12, v14, ObjectType, v30, v34);
    swift_bridgeObjectRelease(v32);
    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease(v14);
    swift_unknownObjectRelease(v29);
  }
  else
  {
    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease(v14);
  }
  swift_bridgeObjectRelease(v38[0]);
}

void sub_1004AA90C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t *v27;
  _QWORD *v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t (**v44)();
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t (*v49)();
  uint64_t (**v50)();
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  objc_super v62;
  uint64_t v63;
  uint64_t v64;

  v8 = *a1;
  v9 = (void *)objc_opt_self(UIFont);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v9, "defaultFontForTextStyle:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  if (v13)
  {
    objc_msgSend(v13, "pointSize");
    v15 = v14;

    v16 = swift_allocObject(&unk_1005F1648, 24, 7);
    *(double *)(v16 + 16) = v15 + -2.0;
    v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemUserTags);
    v64 = v17;
    swift_bridgeObjectRetain(a3);
    v18._countAndFlagsBits = 0x22203D3D20;
    v18._object = (void *)0xE500000000000000;
    String.append(_:)(v18);
    v19 = objc_msgSend(v8, "displayName");
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    v23._countAndFlagsBits = v20;
    v23._object = v22;
    String.append(_:)(v23);
    swift_bridgeObjectRelease(v22);
    v24._countAndFlagsBits = 34;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    v25 = v64;
    v26 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
    v27 = (uint64_t *)&v26[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
    *v27 = v63;
    v27[1] = v25;
    v26[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
    v28 = &v26[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    *v28 = a2;
    v28[1] = a3;
    v62.receiver = v26;
    v62.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
    v29 = (char *)objc_msgSendSuper2(&v62, "init");
    v30 = objc_msgSend(v8, "displayName");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    v34 = (uint64_t *)&v29[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    v35 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
    *v34 = v31;
    v34[1] = v33;
    swift_bridgeObjectRelease(v35);
    sub_1000DA8F8();

    v36 = v29;
    v37 = objc_msgSend(v8, "displayName");
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v40 = v39;

    v41 = (uint64_t *)&v36[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    v42 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
    *v41 = v38;
    v41[1] = v40;

    swift_bridgeObjectRelease(v42);
    v36[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 7;
    v43 = (uint64_t (*)())swift_allocObject(&unk_1005F1670, 56, 7);
    *((_QWORD *)v43 + 2) = a4;
    *((_QWORD *)v43 + 3) = a5;
    *((_QWORD *)v43 + 4) = v8;
    *((_QWORD *)v43 + 5) = sub_1004AD9C0;
    *((_QWORD *)v43 + 6) = v16;
    v44 = (uint64_t (**)())&v36[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
    v45 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
    v46 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator + 8];
    *v44 = sub_1004AD9CC;
    v44[1] = v43;
    v47 = v36;
    swift_unknownObjectRetain(a4);
    v48 = v8;
    swift_retain();
    sub_10008BA00(v45, v46);
    swift_retain();
    sub_100087534(v45, v46);
    sub_1000DA308(v45, v46);
    swift_release(v43);
    sub_100087534(v45, v46);

    v49 = (uint64_t (*)())swift_allocObject(&unk_1005F1698, 56, 7);
    *((_QWORD *)v49 + 2) = a4;
    *((_QWORD *)v49 + 3) = a5;
    *((_QWORD *)v49 + 4) = v48;
    *((_QWORD *)v49 + 5) = sub_1004AD9C0;
    *((_QWORD *)v49 + 6) = v16;
    v50 = (uint64_t (**)())&v47[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
    v51 = *(_QWORD *)&v47[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
    v52 = *(_QWORD *)&v47[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator + 8];
    *v50 = sub_1004AD9DC;
    v50[1] = v49;
    v53 = v47;
    swift_unknownObjectRetain(a4);
    v54 = v48;
    swift_retain();
    sub_10008BA00(v51, v52);
    swift_retain();
    sub_100087534(v51, v52);
    sub_1000DA31C(v51, v52);
    swift_release(v49);
    sub_100087534(v51, v52);

    v55 = v53;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
    v57 = *(_QWORD *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v56 = *(_QWORD *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v57 >= v56 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
    v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
    specialized Array._endMutation()(v58);
    swift_release(v16);

  }
  else
  {
    __break(1u);
  }
}

double sub_1004AAD5C(double a1)
{
  id v2;
  double v3;
  double v4;

  v2 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v2, "scaledValueForValue:", a1);
  v4 = v3;

  return v4;
}

id sub_1004AADC0(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  id v6;
  double v7;
  id v8;
  id v9;
  id v10;

  v6 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
  v7 = a4();
  v8 = objc_msgSend((id)objc_opt_self(DOCTagRenderingRequest), "requestForTag:tagDimension:", a3, v7);
  objc_msgSend(v8, "setAllowUnsizedSymbolImages:", 1);
  objc_msgSend(v8, "setSelectionOutlineColor:", 0);
  objc_msgSend(v8, "setRingColor:", v6);
  v9 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
  v10 = objc_msgSend(v9, "renderImageWithRequest:", v8);

  return v10;
}

id sub_1004AAED4(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  void *v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id v11;
  id v12;

  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "whiteColor");
  v8 = objc_msgSend(v6, "systemBackgroundColor");
  v9 = a4();
  v10 = objc_msgSend((id)objc_opt_self(DOCTagRenderingRequest), "requestForTag:tagDimension:", a3, v9);
  objc_msgSend(v10, "setAllowUnsizedSymbolImages:", 1);
  objc_msgSend(v10, "setSelectionOutlineColor:", v7);
  objc_msgSend(v10, "setRingColor:", v8);
  v11 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
  v12 = objc_msgSend(v11, "renderImageWithRequest:", v10);

  return v12;
}

uint64_t sub_1004AB014()
{
  uint64_t v0;

  return sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files15DOCTagSuggester_dataSource);
}

id sub_1004AB024()
{
  return sub_1000DB3A0(type metadata accessor for DOCTagSuggester);
}

uint64_t type metadata accessor for DOCTagSuggester()
{
  return objc_opt_self(_TtC5Files15DOCTagSuggester);
}

Swift::Int sub_1004AB060()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v5, 0);
  v3 = String.hashValue.getter(v1, v2);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_1004AB0AC()
{
  _QWORD *v0;
  Swift::UInt v1;

  v1 = String.hashValue.getter(*v0, v0[1]);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_1004AB0D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v6, a1);
  v4 = String.hashValue.getter(v2, v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_1004AB120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  void **aBlock;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD *v35;

  v3 = v2;
  v5 = OBJC_IVAR____TtC5Files18DOCPersonSuggester_currentQuery;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files18DOCPersonSuggester_currentQuery), "cancel");
  v6 = swift_allocObject(&unk_1005F1580, 24, 7);
  *(_QWORD *)(v6 + 16) = &_swiftEmptySetSingleton;
  sub_1004AD92C();
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemFileProviderID);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 0x2620292A203D3D20;
  v9._object = (void *)0xEB00000000282026;
  String.append(_:)(v9);
  v10 = MDItemOwnerName;
  v11._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemOwnerName);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13._countAndFlagsBits = 0x7C7C202A203D3D20;
  v13._object = (void *)0xE900000000000020;
  String.append(_:)(v13);
  v14 = MDItemLastEditorName;
  v15._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemLastEditorName);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17._countAndFlagsBits = 0x292A203D3D20;
  v17._object = (void *)0xE600000000000000;
  String.append(_:)(v17);
  v18 = sub_10006922C(&qword_100643CC0);
  v19 = swift_allocObject(v18, 64, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v19 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  *(_QWORD *)(v19 + 40) = v20;
  *(_QWORD *)(v19 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  *(_QWORD *)(v19 + 56) = v21;
  v22 = (void *)static CSSearchQuery.withString(_:fetchedAttributes:)(40, 0xE100000000000000, v19);
  swift_bridgeObjectRelease(0xE100000000000000);
  swift_bridgeObjectRelease(v19);
  v34 = sub_1004AD968;
  v35 = (_QWORD *)v6;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = sub_10015B08C;
  v33 = &unk_1005F1598;
  v23 = _Block_copy(&aBlock);
  v24 = v35;
  swift_retain();
  objc_msgSend(v22, "setFoundItemsHandler:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1005F15D0, 40, 7);
  v25[2] = a1;
  v25[3] = a2;
  v25[4] = v6;
  v34 = sub_1004AD99C;
  v35 = v25;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = sub_10015936C;
  v33 = &unk_1005F15E8;
  v26 = _Block_copy(&aBlock);
  v27 = v35;
  swift_retain();
  swift_retain();
  objc_msgSend(v22, "setCompletionHandler:", v26, swift_release(v27).n128_f64[0]);
  _Block_release(v26);
  objc_msgSend(v22, "start");
  v28 = *(void **)(v3 + v5);
  *(_QWORD *)(v3 + v5) = v22;
  swift_release(v6);

}

double sub_1004AB444(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char **v7;
  _QWORD *v8;
  id v9;
  uint64_t v11;
  uint64_t inited;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double result;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  id v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];
  char v61[72];

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_36;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = 0;
    v6 = a2 + 2;
    v50 = v3 & 0xC000000000000001;
    v48 = v3 + 32;
    v7 = &selRef_viewOptionsRoot;
    v8 = _swiftEmptyArrayStorage;
    v52 = v3;
    v49 = v4;
    while (1)
    {
      v9 = v50 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3) : *(id *)(v48 + 8 * v5);
      v53 = v9;
      if (__OFADD__(v5++, 1))
        break;
      v11 = sub_10006922C((uint64_t *)&unk_100644950);
      inited = swift_initStackObject(v11, v61);
      *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
      v13 = objc_msgSend(v53, v7[279]);
      v14 = objc_msgSend(v13, "lastEditorName");

      if (v14)
      {
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      *(_QWORD *)(inited + 32) = v15;
      *(_QWORD *)(inited + 40) = v17;
      v18 = objc_msgSend(v53, v7[279], v48);
      v19 = objc_msgSend(v18, "ownerName");

      if (v19)
      {
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v22 = v21;

        *(_QWORD *)(inited + 48) = v20;
        *(_QWORD *)(inited + 56) = v22;
        if (v17)
          goto LABEL_17;
      }
      else
      {
        v20 = 0;
        v22 = 0;
        *(_QWORD *)(inited + 48) = 0;
        *(_QWORD *)(inited + 56) = 0;
        if (v17)
        {
LABEL_17:
          swift_bridgeObjectRetain(v17);
          v8 = sub_100081A50(0, 1, 1, _swiftEmptyArrayStorage);
          v24 = v8[2];
          v23 = v8[3];
          if (v24 >= v23 >> 1)
            v8 = sub_100081A50((_QWORD *)(v23 > 1), v24 + 1, 1, v8);
          v8[2] = v24 + 1;
          v25 = &v8[2 * v24];
          v25[4] = v15;
          v25[5] = v17;
        }
      }
      if (v22)
      {
        swift_bridgeObjectRetain(v22);
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_100081A50(0, v8[2] + 1, 1, v8);
        v27 = v8[2];
        v26 = v8[3];
        if (v27 >= v26 >> 1)
          v8 = sub_100081A50((_QWORD *)(v26 > 1), v27 + 1, 1, v8);
        v8[2] = v27 + 1;
        v28 = &v8[2 * v27];
        v28[4] = v20;
        v28[5] = v22;
      }
      swift_release(inited);
      a2 = v8;
      v29 = v8[2];
      v3 = v52;
      if (v29)
      {
        swift_bridgeObjectRetain(a2);
        v54 = sub_10008B9BC();
        v51 = a2;
        v30 = a2 + 5;
        do
        {
          v31 = *v30;
          v55 = *(v30 - 1);
          v57 = v55;
          v58 = v31;
          swift_bridgeObjectRetain_n(v31, 2);
          v32 = StringProtocol.localizedLowercase.getter(&type metadata for String, v54);
          v34 = v32;
          v35 = v33;
          v36 = HIBYTE(v33) & 0xF;
          if ((v33 & 0x2000000000000000) == 0)
            v36 = v32;
          v37 = 7;
          if (((v33 >> 60) & ((v32 & 0x800000000000000) == 0)) != 0)
            v37 = 11;
          v38 = v6;
          v39 = v37 | (v36 << 16);
          v40 = swift_allocObject(&unk_1005F1620, 24, 7);
          *(_QWORD *)(v40 + 16) = _swiftEmptyArrayStorage;
          v57 = v34;
          v58 = v35;
          v56[0] = 15;
          v56[1] = v39;
          swift_retain();
          v41 = sub_10006922C(&qword_100658538);
          v42 = sub_100062698(&qword_100658540, &qword_100658538, (uint64_t)&protocol conformance descriptor for Range<A>);
          v43 = v41;
          v6 = v38;
          StringProtocol.enumerateSubstrings<A>(in:options:_:)(v56, 3, sub_1004AD9A8, v40, &type metadata for String, v43, v54, v42);
          swift_release(v40);
          swift_beginAccess(v40 + 16, v60, 0, 0);
          v44 = *(_QWORD *)(v40 + 16);
          swift_bridgeObjectRetain(v44);
          swift_bridgeObjectRelease(v35);
          swift_release(v40);
          swift_beginAccess(v38, v56, 33, 0);
          sub_1000C9564(&v57, v55, v31, v44);
          swift_endAccess(v56);
          swift_bridgeObjectRelease(v58);
          v45 = v59;
          swift_bridgeObjectRelease(v31);
          swift_bridgeObjectRelease(v45);
          v30 += 2;
          --v29;
        }
        while (v29);

        a2 = v51;
        swift_bridgeObjectRelease(v51);
        v3 = v52;
      }
      else
      {

      }
      swift_bridgeObjectRelease(a2);
      v7 = &selRef_viewOptionsRoot;
      v8 = _swiftEmptyArrayStorage;
      if (v5 == v49)
        goto LABEL_40;
    }
    __break(1u);
LABEL_36:
    if (v3 < 0)
      v46 = v3;
    else
      v46 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v46);
  }
LABEL_40:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

uint64_t sub_1004AB928(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  swift_beginAccess(a4 + 16, v10, 0, 0);
  v7 = *(_QWORD *)(a4 + 16);
  v8 = swift_bridgeObjectRetain(v7);
  a2(v8, a1);
  return swift_bridgeObjectRelease(v7);
}

double sub_1004AB990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  char *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;

  v4 = v3;
  v6 = &v3[OBJC_IVAR____TtC5Files12DOCSuggester_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files12DOCSuggester_delegate]);
  if (Strong)
  {
    v9 = Strong;
    v10 = *((_QWORD *)v6 + 1);
    v11 = sub_10008B9BC();
    v12 = StringProtocol.localizedLowercase.getter(&type metadata for String, v11);
    v14 = v13;
    v15 = swift_allocObject(&unk_1005F1530, 24, 7);
    *(_QWORD *)(v15 + 16) = _swiftEmptyArrayStorage;
    v16 = (_QWORD *)swift_allocObject(&unk_1005F1558, 72, 7);
    v16[2] = v9;
    v16[3] = v10;
    v16[4] = v4;
    v16[5] = a3;
    v16[6] = v12;
    v16[7] = v14;
    v16[8] = v15;
    swift_unknownObjectRetain(v9);
    v17 = v4;
    swift_retain();
    sub_1004AB120((uint64_t)sub_1004AC254, (uint64_t)v16);
    swift_unknownObjectRelease(v9);
    swift_release(v15);
    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

double sub_1004ABAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint8_t *v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v46;
  double result;
  uint8_t *v48;
  uint64_t *v49;
  int v50;
  os_log_t v51;
  uint8_t *v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a6;
  v16 = a9;
  v17 = type metadata accessor for Logger(0);
  __chkstk_darwin(v17);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v54 = v19;
    v55 = v18;
    v56 = a9;
    v57 = a5;
    v60 = a2;
    swift_errorRetain(a2);
    swift_errorRetain(a2);
    v22 = sub_10006922C((uint64_t *)&unk_100643490);
    type metadata accessor for CSSearchQueryError(0);
    v24 = v23;
    if ((swift_dynamicCast(&v59, &v60, v22, v23, 6) & 1) != 0)
    {
      v25 = v59;
      v26 = sub_10005A360(&qword_100641E50, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_1004D9298);
      v27 = _BridgedStoredNSError.code.getter(&v60, v24, v26);
      if (v60 == -2003)
      {

      }
      else
      {
        v28 = Logger.UI.unsafeMutableAddressor(v27);
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v21, v28, v55);
        v29 = v25;
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.error.getter(v30);
        v32 = v31;
        if (os_log_type_enabled(v30, v31))
        {
          v51 = v30;
          v33 = swift_slowAlloc(12, -1);
          v50 = v32;
          v34 = (uint8_t *)v33;
          v49 = (uint64_t *)swift_slowAlloc(8, -1);
          v52 = v34;
          v53 = v29;
          *(_DWORD *)v34 = 138412290;
          v48 = v34 + 4;
          v35 = v29;
          v36 = _swift_stdlib_bridgeErrorToNSError(v35);
          v60 = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
          v37 = v49;
          *v49 = v36;

          v38 = v51;
          _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v50, "An error occurred while querying for all available persons: %@", v52, 0xCu);
          v39 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v37, 1, v39);
          swift_slowDealloc(v37, -1, -1);
          v29 = v53;
          swift_slowDealloc(v52, -1, -1);
        }
        else
        {

          v38 = v29;
        }

        (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v55);
      }
    }
    v16 = v56;
    a5 = v57;
    ObjectType = swift_getObjectType(a3);
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a5, _swiftEmptyArrayStorage, v58, a7, a8, ObjectType, a4);
    swift_errorRelease(a2);
  }
  swift_bridgeObjectRetain(a8);
  swift_bridgeObjectRetain(a1);
  v42 = sub_1004AD75C(v41, a7, a8);
  swift_bridgeObjectRelease(a8);
  swift_bridgeObjectRetain(a8);
  sub_1004ACD1C(v42, a7, a8, (_QWORD *)(v16 + 16));
  swift_release(v42);
  swift_bridgeObjectRelease(a8);
  v43 = swift_getObjectType(a3);
  swift_beginAccess(v16 + 16, &v60, 0, 0);
  v44 = *(_QWORD *)(v16 + 16);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(a4 + 8);
  v46 = swift_bridgeObjectRetain(v44);
  v45(a5, v44, v58, a7, a8, v43, a4, v46);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v44).n128_u64[0];
  return result;
}

void sub_1004ABE34(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  void *object;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  _BYTE *v21;
  _QWORD *v22;
  _QWORD *v23;
  id v24;
  id v25;
  void *v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  objc_super v46;
  Swift::String v47;

  v8 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain(a3);
  _StringGuts.grow(_:)(20);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemOwnerName);
  v11 = v10;
  swift_bridgeObjectRelease(0xE000000000000000);
  v45[0] = v9;
  v45[1] = v11;
  v12._countAndFlagsBits = 540884256;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = String.doc_searchQueryValue.getter(v8, v7);
  object = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(object);
  v15._countAndFlagsBits = 545029152;
  v15._object = (void *)0xE400000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemLastEditorName);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 540884256;
  v18._object = (void *)0xE400000000000000;
  String.append(_:)(v18);
  v19._countAndFlagsBits = String.doc_searchQueryValue.getter(v8, v7);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  v22 = &v21[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  *v22 = v45[0];
  v22[1] = v11;
  v21[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  v23 = &v21[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *v23 = a2;
  v23[1] = a3;
  v46.receiver = v21;
  v46.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  v24 = objc_msgSendSuper2(&v46, "init");
  v25 = (id)_DocumentManagerBundle(v24);
  if (v25)
  {
    v26 = v25;
    v47._object = (void *)0x800000010053AAE0;
    v27._countAndFlagsBits = 0x6220646572616853;
    v27._object = (void *)0xEC00000040252079;
    v28.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v28.value._object = (void *)0xEB00000000656C62;
    v29._countAndFlagsBits = 0x6220646572616853;
    v29._object = (void *)0xEC00000040252079;
    v47._countAndFlagsBits = 0xD00000000000003BLL;
    v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v47);

    v31 = sub_10006922C((uint64_t *)&unk_100644560);
    v32 = swift_allocObject(v31, 72, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v32 + 56) = &type metadata for String;
    *(_QWORD *)(v32 + 64) = sub_10006A638();
    *(_QWORD *)(v32 + 32) = v8;
    *(_QWORD *)(v32 + 40) = v7;
    v33 = (char *)v24;
    swift_bridgeObjectRetain(v7);
    v34 = String.init(format:_:)(v30._countAndFlagsBits, v30._object, v32);
    v36 = v35;
    swift_bridgeObjectRelease(v30._object);
    v37 = (uint64_t *)&v33[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    v38 = *(_QWORD *)&v33[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
    *v37 = v34;
    v37[1] = v36;
    swift_bridgeObjectRelease(v38);
    sub_1000DA8F8();
    v39 = &v33[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    v40 = *(_QWORD *)&v33[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
    *(_QWORD *)v39 = v8;
    *((_QWORD *)v39 + 1) = v7;
    swift_bridgeObjectRetain(v7);

    swift_bridgeObjectRelease(v40);
    v33[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 8;
    swift_beginAccess(a4, v45, 33, 0);
    v41 = v33;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
    v43 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v42 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v43 >= v42 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
    v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
    specialized Array._endMutation()(v44);
    swift_endAccess(v45);

  }
  else
  {
    __break(1u);
  }
}

void sub_1004AC1A8()
{
  uint64_t v0;

}

id sub_1004AC1B8()
{
  return sub_1000DB3A0(type metadata accessor for DOCPersonSuggester);
}

uint64_t type metadata accessor for DOCPersonSuggester()
{
  return objc_opt_self(_TtC5Files18DOCPersonSuggester);
}

uint64_t sub_1004AC1F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004AC218()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

double sub_1004AC254(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1004ABAAC(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1004AC284(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t *v34;
  uint64_t v35;
  _QWORD v36[9];

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (uint64_t)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10006922C(&qword_1006419A0);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v34 = a1;
  v35 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v35)
      goto LABEL_36;
    v16 = v34[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v35)
        goto LABEL_36;
      v16 = v34[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v35)
          goto LABEL_36;
        v16 = v34[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(void **)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v19 = v9[5];
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;
    Hasher.init(_seed:)(v36, v19);
    v23 = v18;
    String.hash(into:)(v36, v20, v22);
    v24 = Hasher._finalize()();
    result = swift_bridgeObjectRelease(v22);
    v25 = -1 << *((_BYTE *)v9 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(_QWORD *)(v9[6] + 8 * v28) = v23;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= v35)
    goto LABEL_36;
  v16 = v34[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v35)
      goto LABEL_36;
    v16 = v34[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_1004AC51C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10006922C(&qword_100655C30);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = v9[5];
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *((_BYTE *)v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_1004AC778(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::UInt v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  __int128 v32;
  uint64_t v33[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10006922C((uint64_t *)&unk_1006418D0);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v4 + 48) + 24 * v13;
    v18 = *(_QWORD *)v17;
    v32 = *(_OWORD *)(v17 + 8);
    Hasher.init(_seed:)(v33, v8[5]);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(*((_QWORD *)&v32 + 1));
    v19 = String.hashValue.getter(v18, v32);
    Hasher._combine(_:)(v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = v8[6] + 24 * v23;
    *(_QWORD *)v28 = v18;
    *(_OWORD *)(v28 + 8) = v32;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1004ACA38(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v2 = type metadata accessor for NSFastEnumerationIterator(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)objc_msgSend(a1, "count", v4);
  if (v7 <= 0)
  {
    v9 = _swiftEmptyArrayStorage;
    v12 = _swiftEmptyArrayStorage[3];
  }
  else
  {
    v8 = sub_10006922C(&qword_100644930);
    v9 = (_QWORD *)swift_allocObject(v8, 32 * v7 + 32, 7);
    v10 = j__malloc_size(v9);
    v11 = v10 - 32;
    if (v10 < 32)
      v11 = v10 - 1;
    v12 = 2 * (v11 >> 5);
    v9[2] = v7;
    v9[3] = v12;
  }
  v13 = a1;
  NSOrderedSet.makeIterator()();

  if (v7 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v14 = v12 >> 1;
  v15 = v9 + 4;
  if (v7)
  {
    v14 -= v7;
    v16 = sub_10005A360(&qword_100658548, (uint64_t (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator, (uint64_t)&protocol conformance descriptor for NSFastEnumerationIterator);
    do
    {
      dispatch thunk of IteratorProtocol.next()(&v37, v2, v16);
      if (!v38)
        goto LABEL_38;
      sub_100079B28(&v37, v15);
      v15 += 2;
    }
    while (--v7);
  }
  v34 = v3;
  v17 = sub_10005A360(&qword_100658548, (uint64_t (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator, (uint64_t)&protocol conformance descriptor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()(&v35, v2, v17);
  if (v36)
  {
    while (1)
    {
      sub_100079B28(&v35, &v37);
      if (!v14)
      {
        v18 = v9[3];
        if ((uint64_t)((v18 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v19 = v18 & 0xFFFFFFFFFFFFFFFELL;
        if (v19 <= 1)
          v20 = 1;
        else
          v20 = v19;
        v21 = sub_10006922C(&qword_100644930);
        v22 = (_QWORD *)swift_allocObject(v21, 32 * v20 + 32, 7);
        v23 = j__malloc_size(v22);
        v24 = v23 - 32;
        if (v23 < 32)
          v24 = v23 - 1;
        v25 = v24 >> 5;
        v22[2] = v20;
        v22[3] = 2 * (v24 >> 5);
        v26 = (unint64_t)(v22 + 4);
        v27 = v9[3] >> 1;
        if (v9[2])
        {
          if (v22 != v9 || v26 >= (unint64_t)&v9[4 * v27 + 4])
            memmove(v22 + 4, v9 + 4, 32 * v27);
          v9[2] = 0;
        }
        v15 = (_OWORD *)(v26 + 32 * v27);
        v14 = (v25 & 0x7FFFFFFFFFFFFFFFLL) - v27;
        swift_release(v9);
        v9 = v22;
      }
      v29 = __OFSUB__(v14--, 1);
      if (v29)
        break;
      sub_100079B28(&v37, v15);
      v15 += 2;
      dispatch thunk of IteratorProtocol.next()(&v35, v2, v17);
      if (!v36)
        goto LABEL_30;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v2);
  sub_10007EB54((uint64_t)&v35);
  v30 = v9[3];
  if (v30 >= 2)
  {
    v31 = v30 >> 1;
    v29 = __OFSUB__(v31, v14);
    v32 = v31 - v14;
    if (v29)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    v9[2] = v32;
  }
}

void sub_1004ACD1C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23[3];
  int64_t v24;

  v22 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v12 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * i);
    v19 = v18[1];
    v20 = v18[2];
    v23[0] = *v18;
    v23[1] = v19;
    v23[2] = v20;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    sub_1004ABE34(v23, a2, a3, a4);
    if (v4)
    {
      swift_release(a1);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v19);
      return;
    }
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v19);
    if (v11)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v24)
      goto LABEL_26;
    v16 = *(_QWORD *)(v22 + 8 * v12);
    if (!v16)
    {
      v17 = v12 + 1;
      if (v12 + 1 >= v24)
        goto LABEL_26;
      v16 = *(_QWORD *)(v22 + 8 * v17);
      if (v16)
        goto LABEL_14;
      v17 = v12 + 2;
      if (v12 + 2 >= v24)
        goto LABEL_26;
      v16 = *(_QWORD *)(v22 + 8 * v17);
      if (v16)
        goto LABEL_14;
      v17 = v12 + 3;
      if (v12 + 3 >= v24)
        goto LABEL_26;
      v16 = *(_QWORD *)(v22 + 8 * v17);
      if (v16)
      {
LABEL_14:
        v12 = v17;
        goto LABEL_15;
      }
      v21 = v12 + 4;
      if (v12 + 4 >= v24)
      {
LABEL_26:
        swift_release(a1);
        return;
      }
      v16 = *(_QWORD *)(v22 + 8 * v21);
      v12 += 4;
      if (!v16)
        break;
    }
LABEL_15:
    v11 = (v16 - 1) & v16;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v24)
      goto LABEL_26;
    v16 = *(_QWORD *)(v22 + 8 * v12);
    ++v21;
    if (v16)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

_QWORD *sub_1004ACF34(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::Bool v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::Int v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_25;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      v46 = v5 & 0xFFFFFFFFFFFFFF8;
      v47 = v5 & 0xC000000000000001;
      v43 = v5;
      v44 = a2;
      v45 = v6;
      while (v47)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
LABEL_9:
        v9 = v8;
        v10 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_24;
        v11 = objc_msgSend(v8, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v13 = v12;

        v14 = sub_10008B9BC();
        v15 = StringProtocol.localizedLowercase.getter(&type metadata for String, v14);
        v17 = v16;
        swift_bridgeObjectRelease(v13);
        if (String.count.getter(a2, a3) < 4)
        {
          v19._countAndFlagsBits = a2;
          v19._object = a3;
          v20 = String.hasPrefix(_:)(v19);
          swift_bridgeObjectRelease(v17);
          if (v20)
            goto LABEL_20;
        }
        else
        {
          v18 = String.count.getter(a2, a3);
          if (String.count.getter(v15, v17) < v18)
          {

            swift_bridgeObjectRelease(v17);
            goto LABEL_5;
          }
          swift_bridgeObjectRetain(v17);
          v22 = String.count.getter(a2, a3);
          v23 = sub_100087794(v22, v15, v17);
          v25 = v24;
          v27 = v26;
          v28 = a3;
          v30 = v29;
          swift_bridgeObjectRelease(v17);
          static String._fromSubstring(_:)(v23, v25, v27, v30);
          v32 = v31;
          v33 = v30;
          a3 = v28;
          a2 = v44;
          swift_bridgeObjectRelease(v33);
          v34._countAndFlagsBits = v44;
          v34._object = a3;
          v35 = String.doc_editDistance(from:)(v34);
          swift_bridgeObjectRelease(v32);
          if (v35 <= 3)
          {
            v37 = (double)v35 * 100.0;
            v38 = String.count.getter(v44, a3);
            swift_bridgeObjectRelease(v17);
            v36 = 100.0 - v37 / (double)v38;
            if (v36 <= 0.0)
              v36 = 0.0;
          }
          else
          {
            swift_bridgeObjectRelease(v17);
            v36 = 0.0;
          }
          v5 = v43;
          if (v36 * 0.98 >= 70.0)
          {
LABEL_20:
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
            v39 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
            v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v9);
            specialized ContiguousArray._endMutation()(v40);
            goto LABEL_5;
          }
        }

LABEL_5:
        ++v7;
        if (v10 == v45)
          return _swiftEmptyArrayStorage;
      }
      if (v7 < *(_QWORD *)(v46 + 16))
        break;
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      if (v5 < 0)
        v42 = v5;
      else
        v42 = v5 & 0xFFFFFFFFFFFFFF8;
      v6 = _CocoaArrayWrapper.endIndex.getter(v42);
      if (!v6)
        return _swiftEmptyArrayStorage;
    }
    v8 = *(id *)(v5 + 8 * v7 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1004AD258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  Swift::Bool v11;
  uint64_t v12;
  Swift::String v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::Int v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;

  v4 = sub_10008B9BC();
  v5 = StringProtocol.localizedLowercase.getter(&type metadata for String, v4);
  v7 = v6;
  v8 = *(_QWORD *)(a3 + 16);
  if (v8)
  {
    v9 = v5;
    v10 = (unint64_t *)(a3 + 40);
    v39 = a3;
    swift_bridgeObjectRetain_n(a3, 2);
    v11 = 0;
    v12 = 1;
    do
    {
      if (v11)
      {
        if (v8 == v12)
          goto LABEL_28;
        v11 = 1;
      }
      else
      {
        v16 = *(v10 - 1);
        v15 = *v10;
        swift_bridgeObjectRetain(*v10);
        if (String.count.getter(v9, v7) < 4)
        {
          v13._countAndFlagsBits = v9;
          v13._object = v7;
          v11 = String.hasPrefix(_:)(v13);
          swift_bridgeObjectRelease(v15);
          if (v8 == v12)
            goto LABEL_28;
        }
        else
        {
          v17 = String.count.getter(v9, v7);
          if (String.count.getter(v16, v15) >= v17)
          {
            swift_bridgeObjectRetain(v15);
            v18 = String.count.getter(v9, v7);
            if (v18 < 0)
              goto LABEL_32;
            v19 = HIBYTE(v15) & 0xF;
            if ((v15 & 0x2000000000000000) == 0)
              v19 = v16;
            v20 = 7;
            if (((v15 >> 60) & ((v16 & 0x800000000000000) == 0)) != 0)
              v20 = 11;
            v21 = v20 | (v19 << 16);
            v22 = String.index(_:offsetBy:limitedBy:)(15, v18, v21, v16, v15);
            if ((v23 & 1) != 0)
              v24 = v21;
            else
              v24 = v22;
            v25 = String.subscript.getter(15, v24, v16, v15);
            v27 = v26;
            v29 = v28;
            v31 = v30;
            swift_bridgeObjectRelease(v15);
            static String._fromSubstring(_:)(v25, v27, v29, v31);
            v33 = v32;
            swift_bridgeObjectRelease(v31);
            v34._countAndFlagsBits = v9;
            v34._object = v7;
            v35 = String.doc_editDistance(from:)(v34);
            swift_bridgeObjectRelease(v33);
            if (v35 < 4)
            {
              v37 = (double)v35 * 100.0;
              v38 = String.count.getter(v9, v7);
              swift_bridgeObjectRelease(v15);
              v36 = 100.0 - v37 / (double)v38;
              if (v36 <= 0.0)
                v36 = 0.0;
            }
            else
            {
              swift_bridgeObjectRelease(v15);
              v36 = 0.0;
            }
            v11 = v36 * 0.98 >= 70.0;
            if (v8 == v12)
            {
LABEL_28:
              swift_bridgeObjectRelease(v7);
              swift_bridgeObjectRelease_n(v39, 2);
              return;
            }
          }
          else
          {
            swift_bridgeObjectRelease(v15);
            if (v8 == v12)
              goto LABEL_28;
            v11 = 0;
          }
        }
      }
      v10 += 2;
    }
    while (!__OFADD__(v12++, 1));
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
  }
}

void sub_1004AD558(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v25 = 0;
  v8 = 0;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v27 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v8 << 6);
      goto LABEL_5;
    }
    v19 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v27)
      goto LABEL_24;
    v20 = *(_QWORD *)(v26 + 8 * v19);
    ++v8;
    if (!v20)
    {
      v8 = v19 + 1;
      if (v19 + 1 >= v27)
        goto LABEL_24;
      v20 = *(_QWORD *)(v26 + 8 * v8);
      if (!v20)
      {
        v8 = v19 + 2;
        if (v19 + 2 >= v27)
          goto LABEL_24;
        v20 = *(_QWORD *)(v26 + 8 * v8);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v11 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v8 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a3 + 48) + 24 * v13;
    v15 = *(_QWORD *)(v14 + 8);
    v16 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    sub_1004AD258(a4, a5, v16);
    v18 = v17;
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v15);
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1004AC778(a1, a2, v25, a3);
        return;
      }
    }
  }
  v21 = v19 + 3;
  if (v21 >= v27)
    goto LABEL_24;
  v20 = *(_QWORD *)(v26 + 8 * v21);
  if (v20)
  {
    v8 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v8 >= v27)
      goto LABEL_24;
    v20 = *(_QWORD *)(v26 + 8 * v8);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1004AD75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a3, 2);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v10, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain(a3);
    sub_1004AD558((unint64_t *)((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    v13 = v12;
    swift_release(a1);
    swift_bridgeObjectRelease(a3);
    if (v3)
      swift_willThrow(v14);
    swift_bridgeObjectRelease_n(a3, 2);
  }
  else
  {
    v15 = (void *)swift_slowAlloc(v10, -1);
    bzero(v15, v10);
    swift_bridgeObjectRetain(a3);
    sub_1004AD558((unint64_t *)v15, v9, a1, a2, a3);
    v13 = v16;
    swift_release(a1);
    swift_bridgeObjectRelease(a3);
    swift_slowDealloc(v15, -1, -1);
    swift_bridgeObjectRelease_n(a3, 2);
  }
  return v13;
}

unint64_t sub_1004AD92C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100645050;
  if (!qword_100645050)
  {
    v1 = objc_opt_self(CSSearchQuery);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100645050);
  }
  return result;
}

double sub_1004AD968(unint64_t a1)
{
  _QWORD *v1;

  return sub_1004AB444(a1, v1);
}

uint64_t sub_1004AD970()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004AD99C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004AB928(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1004AD9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_1004A925C(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t sub_1004AD9B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1004AD9C0()
{
  uint64_t v0;

  return sub_1004AAD5C(*(double *)(v0 + 16));
}

uint64_t sub_1004AD9CC()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004AADC0);
}

uint64_t sub_1004AD9DC()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004AAED4);
}

uint64_t sub_1004AD9E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004ADA0C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;

  return sub_1004A9694(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(uint64_t **)(v4 + 32));
}

uint64_t sub_1004ADA18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004ADA28(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1004A9AF8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t destroy for DOCPersonSuggester.DOCPerson(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s5Files18DOCPersonSuggesterC9DOCPersonVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for DOCPersonSuggester.DOCPerson(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for DOCPersonSuggester.DOCPerson(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for DOCPersonSuggester.DOCPerson()
{
  return &type metadata for DOCPersonSuggester.DOCPerson;
}

unint64_t sub_1004ADB68()
{
  unint64_t result;

  result = qword_100658550;
  if (!qword_100658550)
  {
    result = swift_getWitnessTable(&unk_1004EB060, &type metadata for DOCPersonSuggester.DOCPerson);
    atomic_store(result, (unint64_t *)&qword_100658550);
  }
  return result;
}

void sub_1004ADBC4(void *a1, void *a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;

  if ((sub_1002CB12C(a2) & 1) == 0)
  {
    v5 = sub_100389394(a2, *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration));
    if (v5[2])
      goto LABEL_3;
LABEL_5:
    v9 = objc_msgSend(a2, "displayName", swift_bridgeObjectRelease(v5).n128_f64[0]);
    objc_msgSend(a1, "setLargeTitleDisplayMode:", 2);
    objc_msgSend(a1, "set_alternateLargeTitles:", 0);
    goto LABEL_6;
  }
  v5 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_5;
LABEL_3:
  v6 = v5[4];
  v7 = v5[5];
  swift_bridgeObjectRetain(v7);
  objc_msgSend(a1, "setLargeTitleDisplayMode:", 1);
  swift_bridgeObjectRetain(v7);
  sub_100086C88(v5, v6, v7);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  v9 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v7).n128_u64[0];
LABEL_6:
  objc_msgSend(a1, "setTitle:", v9, v8);

}

void sub_1004ADD68()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5FilesP33_A5A64235B1E100244B7B9EBD6441597E28DOCPlaceHolderViewController_location));
}

id sub_1004ADE58()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFakeFPItemDecoration();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1004ADEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  Class isa;
  uint64_t v6;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v4, "setNumberStyle:", 3);
  objc_msgSend(v4, "setMaximumFractionDigits:", 0);
  static Locale.current.getter(objc_msgSend(v4, "setMinimumFractionDigits:", 0));
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, "setLocale:", isa);

  qword_100672F10 = (uint64_t)v4;
}

uint64_t DOCItemCollectionCellContent.node.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

double DOCItemCollectionCellContent.node.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v4);
  sub_10007804C();
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*DOCItemCollectionCellContent.node.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, a1, 33, 0);
  return sub_1004AE098;
}

void sub_1004AE098(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_10007804C();
}

id DOCItemCollectionCellContent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  sub_10009FBA0();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionCellContent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void DOCItemCollectionCellContent.observeValue(forKeyPath:of:change:context:)(uint64_t a1, uint64_t a2, uint64_t a3, Class isa, void *a5)
{
  void *v5;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSString v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  objc_class *v21;
  _QWORD aBlock[3];
  _QWORD *v23;
  void (*v24)();
  uint64_t v25;
  _BYTE v26[32];
  objc_super v27;

  if (a5 && a5 == &unk_100658630)
  {
    sub_1000685A8(a3, (uint64_t)v26);
    v9 = swift_allocObject(&unk_1005F18A8, 56, 7);
    sub_100070EDC((uint64_t)v26, v9 + 16, &qword_100642730);
    *(_QWORD *)(v9 + 48) = v5;
    v24 = sub_1004AE50C;
    v25 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    v23 = &unk_1005F18C0;
    v10 = _Block_copy(aBlock);
    v11 = v25;
    v12 = v5;
    swift_release(v11);
    DOCRunInMainThread(v10);
    _Block_release(v10);
    return;
  }
  if (a2)
    v13 = String._bridgeToObjectiveC()();
  else
    v13 = 0;
  sub_1000685A8(a3, (uint64_t)aBlock);
  v14 = v23;
  if (!v23)
  {
    v20 = 0;
    if (!isa)
      goto LABEL_10;
    goto LABEL_9;
  }
  v15 = sub_10007E7A0(aBlock, (uint64_t)v23);
  v16 = *(v14 - 1);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)aBlock - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v16 + 16))(v19, v17);
  v20 = _bridgeAnythingToObjectiveC<A>(_:)(v19, v14);
  (*(void (**)(char *, _QWORD *))(v16 + 8))(v19, v14);
  sub_100068588(aBlock);
  if (isa)
  {
LABEL_9:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_10005A360(&qword_100641860, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1004D6948);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
LABEL_10:
  v21 = (objc_class *)type metadata accessor for DOCItemCollectionCellContent();
  v27.receiver = v5;
  v27.super_class = v21;
  objc_msgSendSuper2(&v27, "observeValueForKeyPath:ofObject:change:context:", v13, v20, isa, a5);

  swift_unknownObjectRelease(v20);
}

void sub_1004AE334(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19[2];
  _BYTE v20[24];
  uint64_t v21;

  sub_1000685A8(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_10007EB54((uint64_t)v20);
    goto LABEL_8;
  }
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
  if ((swift_dynamicCast(v19, v20, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
LABEL_8:
    v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
LABEL_9:
    if (!v5)
      return;
    goto LABEL_10;
  }
  v4 = v19[0];
  v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
  if (!v19[0])
    goto LABEL_9;
  if (v5)
  {
    v6 = v5;
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
      return;
  }
  else
  {

  }
LABEL_10:
  v9 = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

  v10 = (_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
  v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8);
  *v10 = 0;
  v10[1] = 0;
  swift_bridgeObjectRelease(v11);
  v12 = (_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle + 8);
  *v12 = 0;
  v12[1] = 0;
  swift_bridgeObjectRelease(v13);
  v14 = (_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
  v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle + 8);
  *v14 = 0;
  v14[1] = 0;
  swift_bridgeObjectRelease(v15);
  v16 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x84;
  if ((~*(_DWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x84) != 0)
    *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v17;
  if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_10007BAFC())
  {
    *(_QWORD *)(a2 + v16) = 0;
    v18 = objc_autoreleasePoolPush();
    sub_10006D2D4(v17, a2);
    objc_autoreleasePoolPop(v18);
  }
}

uint64_t sub_1004AE4D8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_100068588((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

void sub_1004AE50C()
{
  uint64_t v0;

  sub_1004AE334(v0 + 16, *(_QWORD *)(v0 + 48));
}

void DOCItemCollectionCellContent.thumbnailLoaded(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = swift_allocObject(&unk_1005F18F8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = swift_allocObject(&unk_1005F1920, 32, 7);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  v6[4] = sub_10009FDF8;
  v7 = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10004A82C;
  v6[3] = &unk_1005F1938;
  v4 = _Block_copy(v6);
  v5 = v7;
  swift_unknownObjectRetain(a1);
  swift_release(v5);
  DOCRunInMainThread(v4);
  _Block_release(v4);
}

uint64_t sub_1004AE710()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004AE738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE v15[200];
  _QWORD v16[26];

  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8);
  if (v5)
  {
    if (a2)
    {
      v6 = *v4 == a1 && v5 == a2;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v4, v5, a1, a2, 0) & 1) != 0)
        return;
    }
  }
  else if (!a2)
  {
    return;
  }
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8);
  *v7 = 0;
  v7[1] = 0;
  swift_bridgeObjectRelease(v8);
  sub_1000D07FC((uint64_t)v15);
  v9 = v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
  sub_100070EDC(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v16, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v15, v9, (uint64_t *)&unk_100641310);
  sub_10044930C(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
  v10 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

  v11 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

  v12 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
  if ((v13 & 1) == 0)
  {
    v13 |= 1uLL;
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v13;
  }
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_10007BAFC())
  {
    *(_QWORD *)(v2 + v12) = 0;
    v14 = objc_autoreleasePoolPush();
    sub_10006D2D4(v13, v2);
    objc_autoreleasePoolPop(v14);
  }
}

double sub_1004AE884(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unsigned __int8 v7;
  void *v8;
  double v9;
  id v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  uint64_t v19;

  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006926C();
  v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  v9 = 4.0;
  if (v7 - 3 < 3 || v7 == 1)
  {
    if (!v8)
    {
LABEL_10:
      v14 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v14, "scale");
      v13 = v15;

      v11 = 0;
      goto LABEL_11;
    }
LABEL_7:
    v11 = v8;
    objc_msgSend(v11, "displayScale");
    v13 = v12;
LABEL_11:
    objc_msgSend(a1, "capHeight");
    v17 = -v16 / v9;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for FloatingPointRoundingRule.down(_:), v3);
    CGFloat.init(_:roundedBy:inScale:)(v6, v17, v13);

    return 4.0;
  }
  if (v7 != 8)
  {
    v9 = 10.0;
    if (!v8)
      goto LABEL_10;
    goto LABEL_7;
  }
  return 4.0;
}

void sub_1004AE9E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[200];
  _QWORD v12[25];

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor);
  sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  v5 = v4;
  LOBYTE(a1) = static NSObject.== infix(_:_:)(v5, a1);

  if ((a1 & 1) == 0)
  {
    v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8);
    *v6 = 0;
    v6[1] = 0;
    swift_bridgeObjectRelease(v7);
    v8 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000D07FC((uint64_t)v11);
    v9 = v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_100070EDC(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v12, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v11, v9, (uint64_t *)&unk_100641310);
    sub_10044930C(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
    v10 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

  }
}

id sub_1004AEAEC()
{
  return sub_10006CAEC((SEL *)&selRef_quaternaryLabelColor, &OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__suffixColor);
}

void sub_1004AEB00(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
  v6 = objc_msgSend(v3, "renderImageWithRequest:", a2);

  v4 = objc_msgSend(v6, "CGImage");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v6, "size");
    CGContextRef.draw(_:in:byTiling:)(v5, 0);

  }
}

void sub_1004AEBC8(CGContext *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  CGColor *v15;
  _BYTE v16[24];
  CGRect v17;

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = objc_msgSend(a3, "CGImage");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(a3, "size");
      v12 = v11;
      v14 = v13;
      CGContextRef.draw(_:in:byTiling:)(v10, 0);
      CGContextSetBlendMode(a1, kCGBlendModeSourceIn);
      v15 = (CGColor *)objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor], "CGColor");
      CGContextSetFillColorWithColor(a1, v15);

      v17.origin.x = 0.0;
      v17.origin.y = 0.0;
      v17.size.width = v12;
      v17.size.height = v14;
      CGContextFillRect(a1, v17);

    }
  }
}

void sub_1004AECDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  unsigned __int8 v22;
  id v23;
  id v24;
  id v25;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  CGContext *v30;
  CGContext *v31;
  id v32;
  UIImage *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  void *v41;
  uint64_t inited;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  double v48;
  double v49;
  id v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSString *v61;
  NSString *v62;
  id v63;
  NSString *v64;
  NSString *v65;
  id v66;
  unint64_t v67;
  Class isa;
  NSString v69;
  Class v70;
  Class v71;
  void *v72;
  objc_class *v73;
  _BOOL8 v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  NSString v78;
  unint64_t v79;
  id v80;
  id v81;
  char **v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  NSString *v95;
  NSString *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  unint64_t v100;
  id v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[128];
  uint64_t v108[17];
  CGSize v109;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
  if (v7)
    goto LABEL_31;
  sub_100070EDC(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v107, &qword_100658670);
  sub_100070EDC((uint64_t)v107, (uint64_t)v108, &qword_100658670);
  if (sub_1000A849C(v108) == 1)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v8 = (void *)v108[0];
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v106, 0, 0);
  v10 = *v9;
  v11 = v8;
  if (v10)
  {
    sub_10006DD34();
    v12 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    if (v12)
    {
      v13 = objc_msgSend(v12, "thumbnail");
      v14 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
      objc_msgSend(v13, "size");
      v16 = v15;
      objc_msgSend(v13, "size");
      v18 = v16 / v17;
      objc_msgSend(v11, "lineHeight");
      v20 = v19;
      objc_msgSend(v11, "descender");
      objc_msgSend(v14, "setBounds:", 0.0, v21, v18 * v20, v20);
      v22 = sub_10006DF10();
      v103 = v14;
      v101 = v13;
      if ((v22 & 1) != 0)
      {
        v23 = objc_msgSend(objc_allocWithZone((Class)DOCBorderedFittingImageView), "initWithImage:", v13);
        objc_msgSend(v23, "setAddDecoration:", 1);
        v24 = v23;
        objc_msgSend(v14, "bounds");
        objc_msgSend(v24, "setFrame:", 0.0, 0.0);

        v25 = v24;
        objc_msgSend(v14, "bounds");
        objc_msgSend(v25, "setFittingSize:", v26, v27);

        objc_msgSend(v25, "bounds");
        v109.width = v28;
        v109.height = v29;
        UIGraphicsBeginImageContextWithOptions(v109, 0, 0.0);
        v30 = UIGraphicsGetCurrentContext();
        if (v30)
        {
          v31 = v30;
          v32 = objc_msgSend(v25, "layer");
          objc_msgSend(v32, "renderInContext:", v31);

          v14 = v103;
        }
        v33 = UIGraphicsGetImageFromCurrentImageContext();
        UIGraphicsEndImageContext();
        objc_msgSend(v14, "setImage:", v33);

      }
      else
      {
        objc_msgSend(v14, "setImage:", v13);
      }
      v99 = sub_10006922C((uint64_t *)&unk_1006424D0);
      inited = swift_initStackObject(v99, &v105);
      v98 = xmmword_1004D4CE0;
      *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      v43 = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v11;
      v97 = v43;
      *(_QWORD *)(inited + 64) = v43;
      *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
      v94 = v11;
      v44 = v11;
      v96 = NSFontAttributeName;
      v95 = NSForegroundColorAttributeName;
      v45 = sub_10006CB98();
      v46 = sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
      *(_QWORD *)(inited + 104) = v46;
      *(_QWORD *)(inited + 80) = v45;
      v100 = sub_100076434(inited);
      v102 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection;
      v47 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
      v93 = v6;
      if (v47)
      {
        objc_msgSend(v47, "displayScale");
        v49 = v48;
      }
      else
      {
        v50 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        objc_msgSend(v50, "scale");
        v49 = v51;

      }
      objc_msgSend(v44, "capHeight");
      v53 = v52 * 0.5;
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.down(_:), v2);
      v54 = CGFloat.init(_:roundedBy:inScale:)(v5, v53, v49);
      if (v54 < 5.0)
        v55 = 10.0;
      else
        v55 = v54 + v54;
      v56 = sub_10006F894();
      swift_bridgeObjectRetain(v56);
      sub_100076450();
      v58 = v57;
      v59 = swift_initStackObject(v99, &v104);
      *(_OWORD *)(v59 + 16) = v98;
      v61 = v96;
      v60 = v97;
      *(_QWORD *)(v59 + 32) = v96;
      *(_QWORD *)(v59 + 40) = v44;
      v62 = v95;
      *(_QWORD *)(v59 + 64) = v60;
      *(_QWORD *)(v59 + 72) = v62;
      v63 = v44;
      swift_bridgeObjectRetain(v58);
      v64 = v61;
      v65 = v62;
      v66 = sub_10006CB98();
      *(_QWORD *)(v59 + 104) = v46;
      *(_QWORD *)(v59 + 80) = v66;
      v67 = sub_100076434(v59);
      sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v56);
      v69 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v58);
      type metadata accessor for Key(0);
      sub_10005A360((unint64_t *)&qword_1006424E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1004D93A8);
      v70 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v67);
      v71 = (Class)objc_msgSend((id)objc_opt_self(DOCTagStringRenderingRequest), "requestForChainedTags:tagDimension:text:textAttributes:", isa, v69, v70, v55);

      if (v71)
      {
        swift_bridgeObjectRelease(v100);
        -[objc_class setTagToTitleSpacing:](v71, "setTagToTitleSpacing:", 8.0);
        -[objc_class setTagBaselineAdjustment:](v71, "setTagBaselineAdjustment:", 0.0);
        v72 = *(void **)(v1 + v102);
        v73 = v71;
        if (v72)
          v74 = objc_msgSend(v72, "layoutDirection") == (id)1;
        else
          v74 = 0;
        v6 = v93;
        v11 = v94;
        v81 = v103;
        v82 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
        -[objc_class setLayoutDirection:](v71, "setLayoutDirection:", v74);

        v78 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
        v80 = objc_msgSend(v78, "renderAttributedStringWithRequest:", v71);
      }
      else
      {
        sub_100076450();
        v76 = v75;
        v77 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain(v76);
        v78 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v76);
        v79 = v100;
        v71 = Dictionary._bridgeToObjectiveC()().super.isa;
        v80 = objc_msgSend(v77, "initWithString:attributes:", v78, v71, swift_bridgeObjectRelease(v79).n128_f64[0]);
        v6 = v93;
        v11 = v94;
        v81 = v103;
        v82 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
      }

      v83 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v81);
      v84 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), v82[384]);
      v85 = *(id *)DOCUnicode.nonBreakingSpace_zeroWidth.unsafeMutableAddressor();
      NSMutableAttributedString.append(_:)();

      v86 = *(id *)DOCUnicode.nonBreakingSpace.unsafeMutableAddressor(objc_msgSend(v84, "appendAttributedString:", v83));
      NSMutableAttributedString.append(_:)();

      v87 = objc_msgSend(v80, "wrappedInDirectionalIsolation:", 0);
      objc_msgSend(v84, "appendAttributedString:", v87);

      v88 = *(void **)(v1 + v102);
      if (v88 && objc_msgSend(v88, "layoutDirection") == (id)1)
        v89 = 2;
      else
        v89 = 1;
      objc_msgSend(v84, "wrapInDirectionalIsolation:", v89);
      v41 = *(void **)(v1 + v6);
      *(_QWORD *)(v1 + v6) = v84;

LABEL_29:
      v90 = *(void **)(v1 + v6);
      if (v90)
      {
        v90;

        v7 = 0;
LABEL_31:
        v91 = v7;
        return;
      }
      goto LABEL_33;
    }
  }
  v34 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  if (v34)
  {
    v35 = objc_msgSend(v34, "collectionCreateButtonTitle");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v37 = v36;

    v38 = objc_allocWithZone((Class)NSAttributedString);
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v38, "initWithString:", v39, swift_bridgeObjectRelease(v37).n128_f64[0]);

    v41 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v40;
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1004AF5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v32, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3, v14);
  if (result)
  {
    v16 = (char *)result;
    v17 = *(id *)(result + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sizeLock);
    v29 = v7;
    v18 = v17;
    objc_msgSend(v17, "lock");
    v19 = &v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size];
    v20 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size + 8];
    *(_QWORD *)v19 = a1;
    *((_QWORD *)v19 + 1) = a2;
    swift_bridgeObjectRetain(a2);
    objc_msgSend(v18, "unlock", swift_bridgeObjectRelease(v20).n128_f64[0]);

    v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v22 = (void *)static OS_dispatch_queue.main.getter(v21);
    v23 = swift_allocObject(&unk_1005F18F8, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16);
    aBlock[4] = sub_1004B06C8;
    v31 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005F1A18;
    v24 = _Block_copy(aBlock);
    v25 = swift_release(v31);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_10006922C((uint64_t *)&unk_100647540);
    v28 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v6, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return result;
}

void sub_1004AF884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v6 & 0x80) == 0)
    {
      v6 |= 0x80uLL;
      *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v6;
    }
    if (!*(_QWORD *)(Strong + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)&v4[v5] = 0;
      v7 = objc_autoreleasePoolPush();
      sub_10006D2D4(v6, (uint64_t)v4);
      objc_autoreleasePoolPop(v7);
    }

  }
}

uint64_t sub_1004AF92C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  double v7;

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress + 8) & 1) != 0)
    goto LABEL_9;
  v4 = *v3;
  v5 = result - *v3;
  if (__OFSUB__(result, *v3))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < 0)
  {
    v6 = __OFSUB__(0, v5);
    v5 = *v3 - result;
    if (v6)
      goto LABEL_15;
  }
  v7 = (double)a2 * 0.05;
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
    goto LABEL_12;
  if (v7 > -9.22337204e18)
  {
    if (v7 < 9.22337204e18)
    {
      if (v5 <= (uint64_t)v7)
        return v4;
LABEL_9:
      *v3 = result;
      *((_BYTE *)v3 + 8) = 0;
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1004AF9D0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void **v3;
  void *v4;
  uint64_t result;
  id v6;
  void *v7;
  id v8;
  unsigned int v9;
  _BYTE v10[24];

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail);
  if (v2 != 2)
    return v2 & 1;
  v3 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v10, 0, 0);
  v4 = *v3;
  if (!v4)
  {
    result = *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) & 1;
    goto LABEL_8;
  }
  if (!objc_msgSend((id)swift_unknownObjectRetain(v4), "isActionable")
    || objc_msgSend(v4, "isCopying"))
  {
    goto LABEL_5;
  }
  if (objc_msgSend(v4, "isDownloading"))
  {
    v6 = objc_msgSend(v4, "downloadingError");
    if (!v6)
    {
LABEL_5:
      swift_unknownObjectRelease(v4);
      result = 1;
      goto LABEL_8;
    }

  }
  v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
  if (!v7)
  {
    swift_unknownObjectRelease(v4);
    result = 0;
    *(_BYTE *)(v0 + v1) = 0;
    return result;
  }
  v8 = v7;
  v9 = objc_msgSend(v8, "isFinished");

  swift_unknownObjectRelease(v4);
  result = v9 ^ 1;
LABEL_8:
  *(_BYTE *)(v0 + v1) = result;
  return result;
}

id sub_1004AFB18()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  double v12;
  id v13;
  _QWORD v15[23];
  uint64_t v16[23];
  _BYTE v17[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v17, 0, 0);
  if (!*v1)
    return 0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (!v2)
    return 0;
  sub_100070EDC(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v15, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v15, (uint64_t)v16, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v16) == 1)
    return 0;
  v3 = v2;
  sub_1000716DC(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  sub_100070070();
  if (!v4)
  {
    sub_1000716DC(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);

    return 0;
  }
  v5 = v4;
  v6 = *(double *)&v16[19];
  v7 = *(double *)&v16[20];
  v8 = objc_msgSend(v4, "imageType");
  if (!v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v10 = v9;
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  v11 = (void *)objc_opt_self(DOCItemDecorationImageLoader);
  objc_msgSend(v3, "displayScale");
  v13 = objc_msgSend(v11, "vendorBadgeDecorationForType:size:scale:", v8, v6, v7, v12);

  sub_1000716DC(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
  return v13;
}

id sub_1004AFCAC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  _QWORD v13[23];
  uint64_t v14[23];
  _BYTE v15[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v15, 0, 0);
  v2 = *v1;
  if (!v2)
    return 0;
  v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (v3)
  {
    sub_100070EDC(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v13, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v14) != 1)
    {
      v4 = v3;
      swift_unknownObjectRetain(v2);
      sub_1000716DC(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
      v5 = sub_1004AFE20(v2);
      if ((v6 & 1) == 0)
      {
        v7 = v5;
        v8 = *(double *)&v14[19];
        v9 = *(double *)&v14[20];
        v10 = (void *)objc_opt_self(DOCItemDecorationImageLoader);
        objc_msgSend(v4, "displayScale");
        v3 = objc_msgSend(v10, "itemAccessDecorationForType:size:scale:", v7, v8, v9, v11);
        swift_unknownObjectRelease(v2);

        sub_1000716DC(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
        return v3;
      }
      sub_1000716DC(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
      swift_unknownObjectRelease(v2);

    }
    return 0;
  }
  return v3;
}

uint64_t sub_1004AFE20(void *a1)
{
  if ((objc_msgSend(a1, "isReadable") & 1) == 0
    && (objc_msgSend(a1, "isWritable") & 1) != 0)
  {
    return 1;
  }
  if ((objc_msgSend(a1, "isReadable") & 1) != 0 || objc_msgSend(a1, "isWritable"))
    return 0;
  return 2;
}

uint64_t DOCItemCollectionCellContent.thumbnail.getter()
{
  uint64_t v0;

  sub_10006DD34();
  return swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail));
}

uint64_t sub_1004AFEC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v4 = (uint64_t *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v5)
  {
    v6 = *v4;
  }
  else
  {
    v6 = a3();
    v8 = v7;
    swift_beginAccess(v4, v11, 1, 0);
    v9 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain_n(v8, 2);
    swift_bridgeObjectRelease(v9);
    v5 = 0;
  }
  swift_bridgeObjectRetain(v5);
  return v6;
}

uint64_t sub_1004AFF58(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[88];
  _QWORD v17[9];
  unint64_t v18;

  v3 = (uint64_t *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (v4)
  {
    v5 = *v3;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8);
    if (v6)
    {
      v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName);
      v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8);
      swift_bridgeObjectRetain(v6);
    }
    else
    {
      v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v14, 0, 0);
      v10 = *v8;
      if (!v10)
        goto LABEL_9;
      ObjectType = swift_getObjectType(v10, v9);
      swift_unknownObjectRetain(v10);
      sub_10006FA3C(ObjectType, (uint64_t)v16);
      swift_unknownObjectRelease(v10);
      sub_100070EDC((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_10064A070);
      if (v17[0] == 1)
        goto LABEL_9;
      v5 = v17[8];
      v7 = v18;
      swift_bridgeObjectRetain(v18);
      sub_1002617E4((uint64_t)v16);
      if (v7)
      {
        swift_bridgeObjectRetain(0);
      }
      else
      {
LABEL_9:
        swift_bridgeObjectRelease(0);
        v5 = 0;
        v7 = 0xE000000000000000;
      }
    }
    swift_beginAccess(v3, v15, 1, 0);
    v12 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRelease(v12);
    v4 = 0;
  }
  swift_bridgeObjectRetain(v4);
  return v5;
}

uint64_t sub_1004B00A8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id *v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  char v37[24];
  uint64_t v38;
  unint64_t v39;
  _BYTE v40[128];
  uint64_t v41[2];
  uint64_t v42;

  sub_100070EDC(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v40, &qword_100658670);
  sub_100070EDC((uint64_t)v40, (uint64_t)v41, &qword_100658670);
  result = sub_1000A849C(v41);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v5 = v42;
    sub_100076A5C();
    v7 = v6;
    v9 = v8;
    swift_bridgeObjectRetain(v8);
    v10 = sub_10006E8BC();
    v12 = v11;
    v13 = (uint64_t)sub_100076C48();
    v15 = v14;
    v16 = (id *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    *(_QWORD *)&v17 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v37, 0, 0).n128_u64[0];
    if (*v16 && objc_msgSend(*v16, "isExternalDownloadPlaceholder", v17))
    {
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v9);
      v38 = v13;
      v39 = v15;
    }
    else if ((v5 & 8) != 0)
    {
      swift_bridgeObjectRelease(v12);
      v24 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0)
        v24 = v7 & 0xFFFFFFFFFFFFLL;
      if (v24)
        v25 = v15;
      else
        v25 = v9;
      if (v24)
        v26 = v7;
      else
        v26 = v13;
      if (v24)
        v27 = v9;
      else
        v27 = v15;
      swift_bridgeObjectRelease(v25);
      v38 = v26;
      v39 = v27;
    }
    else
    {
      sub_10006E6E0();
      v38 = v18;
      v39 = v19;
      v20 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v20 = v10 & 0xFFFFFFFFFFFFLL;
      if (v20)
      {
        if ((v19 & 0x2000000000000000) != 0)
          v21 = HIBYTE(v19) & 0xF;
        else
          v21 = v18 & 0xFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain(v19);
        if (v21)
        {
          v22._countAndFlagsBits = 0x209380E220;
          v22._object = (void *)0xA500000000000000;
          String.append(_:)(v22);
        }
        v23._countAndFlagsBits = v10;
        v23._object = (void *)v12;
        String.append(_:)(v23);
      }
      else
      {
        swift_bridgeObjectRetain(v19);
      }
      swift_bridgeObjectRelease(v12);
      v28 = v15 & 0x2000000000000000;
      v29 = HIBYTE(v15) & 0xF;
      v30 = v13 & 0xFFFFFFFFFFFFLL;
      if ((v15 & 0x2000000000000000) != 0)
        v31 = HIBYTE(v15) & 0xF;
      else
        v31 = v13 & 0xFFFFFFFFFFFFLL;
      if (v31)
      {
        swift_bridgeObjectRelease(v9);
      }
      else
      {
        swift_bridgeObjectRelease(v15);
        v28 = v9 & 0x2000000000000000;
        v29 = HIBYTE(v9) & 0xF;
        v30 = v7 & 0xFFFFFFFFFFFFLL;
        v13 = v7;
        v15 = v9;
      }
      if (v28)
        v32 = v29;
      else
        v32 = v30;
      if (v32)
      {
        v33 = v38 & 0xFFFFFFFFFFFFLL;
        if ((v39 & 0x2000000000000000) != 0)
          v33 = HIBYTE(v39) & 0xF;
        if (v33)
        {
          v34._countAndFlagsBits = a1;
          v34._object = a2;
          String.append(_:)(v34);
        }
        v35._countAndFlagsBits = v13;
        v35._object = (void *)v15;
        String.append(_:)(v35);
      }
      swift_bridgeObjectRelease(v15);
    }
    return v38;
  }
  return result;
}

id sub_1004B0348()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  id *v3;
  id result;
  _BYTE v5[24];

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
  if (v2 != 2)
    return (id)(v2 & 1);
  v3 = (id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v5, 0, 0);
  result = *v3;
  if (*v3)
  {
    result = objc_msgSend(result, "isFolder");
    *(_BYTE *)(v0 + v1) = (_BYTE)result;
  }
  else
  {
    *(_BYTE *)(v0 + v1) = 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCFakeFPItemDecoration()
{
  return objc_opt_self(_TtC5FilesP33_0D3D84D98814A1E39FA4FAA1E54BDD7A23DOCFakeFPItemDecoration);
}

uint64_t storeEnumTagSinglePayload for DOCListAccessoryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004B048C + 4 * byte_1004EB115[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004B04C0 + 4 * byte_1004EB110[v4]))();
}

uint64_t sub_1004B04C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B04C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004B04D0);
  return result;
}

uint64_t sub_1004B04DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004B04E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004B04E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B04F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCListAccessoryType()
{
  return &type metadata for DOCListAccessoryType;
}

ValueMetadata *type metadata accessor for DOCItemCollectionCellContent.PendingNotifications()
{
  return &type metadata for DOCItemCollectionCellContent.PendingNotifications;
}

unint64_t sub_1004B0520()
{
  unint64_t result;

  result = qword_100658890;
  if (!qword_100658890)
  {
    result = swift_getWitnessTable(&unk_1004EB208, &type metadata for DOCItemCollectionCellContent.PendingNotifications);
    atomic_store(result, (unint64_t *)&qword_100658890);
  }
  return result;
}

unint64_t sub_1004B0568()
{
  unint64_t result;

  result = qword_100658898;
  if (!qword_100658898)
  {
    result = swift_getWitnessTable(&unk_1004EB1D8, &type metadata for DOCItemCollectionCellContent.PendingNotifications);
    atomic_store(result, (unint64_t *)&qword_100658898);
  }
  return result;
}

unint64_t sub_1004B05B0()
{
  unint64_t result;

  result = qword_1006588A0;
  if (!qword_1006588A0)
  {
    result = swift_getWitnessTable(&unk_1004EB230, &type metadata for DOCItemCollectionCellContent.PendingNotifications);
    atomic_store(result, (unint64_t *)&qword_1006588A0);
  }
  return result;
}

unint64_t sub_1004B05F8()
{
  unint64_t result;

  result = qword_1006588A8;
  if (!qword_1006588A8)
  {
    result = swift_getWitnessTable(&unk_1004EB268, &type metadata for DOCItemCollectionCellContent.PendingNotifications);
    atomic_store(result, (unint64_t *)&qword_1006588A8);
  }
  return result;
}

unint64_t sub_1004B0640()
{
  unint64_t result;

  result = qword_1006588B0;
  if (!qword_1006588B0)
  {
    result = swift_getWitnessTable(&unk_1004EB3A8, &type metadata for DOCListAccessoryType);
    atomic_store(result, (unint64_t *)&qword_1006588B0);
  }
  return result;
}

uint64_t sub_1004B0688(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1004B06C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1004AF5FC(a1, a2, v2);
}

void sub_1004B06C8()
{
  uint64_t v0;

  sub_1004AF884(v0);
}

uint64_t sub_1004B06D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004B06FC(CGContext *a1)
{
  uint64_t v1;

  sub_1004AEBC8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1004B0704()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004B0728(uint64_t a1)
{
  uint64_t v1;

  sub_1004AEB00(a1, *(_QWORD *)(v1 + 16));
}

void sub_1004B0734(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, char *a5, int a6, float64x2_t *a7, void *a8, char a9, unsigned __int8 a10, unsigned __int8 a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  int v40;
  _QWORD *v41;
  _QWORD *v42;
  char *v43;
  float64x2_t *v44;
  void *v45;
  uint64_t v46;
  int v47;

  v47 = a6;
  v46 = a2;
  v22 = type metadata accessor for DispatchPredicate(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (void **)((char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v25 = static OS_dispatch_queue.main.getter(v26);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  v27 = _dispatchPreconditionTest(_:)(v25);
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v28 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount;
  v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount);
  v30 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  v41 = a3;
  v42 = a4;
  v43 = a5;
  v44 = a7;
  v45 = a8;
  v31 = a11;
  v32 = a10;
  if (v29)
    v33 = v30 == 0;
  else
    v33 = 0;
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount) = v30;
  if (v33)
  {
    v39 = a11;
    v40 = a10;
    if (!sub_10007BAFC())
    {
      v34 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
      *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = 0;
      v38 = objc_autoreleasePoolPush();
      sub_10006D2D4(v34, a1);
      objc_autoreleasePoolPop(v38);
    }
    v31 = v39;
    v32 = v40;
  }
  sub_100070F20(v46, v41, v42, v43, v47 & 1, v44, v45, a9 & 1, v32 & 1, v31 & 1, a12 & 1, a13, a14 & 1, a15, a16);
  v35 = *(_QWORD *)(a1 + v28);
  if (__OFSUB__(v35, 1))
    goto LABEL_18;
  *(_QWORD *)(a1 + v28) = v35 - 1;
  if (v35 == 1 && !sub_10007BAFC())
  {
    v36 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = 0;
    v37 = objc_autoreleasePoolPush();
    sub_10006D2D4(v36, a1);
    objc_autoreleasePoolPop(v37);
  }
}

double sub_1004B0974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, void *a6)
{
  uint64_t (*v12)();
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  void *v45;

  v12 = (uint64_t (*)())swift_allocObject(&unk_1005F1B18, 56, 7);
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  *((_QWORD *)v12 + 5) = a5;
  *((_QWORD *)v12 + 6) = a6;
  v13 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
  v14 = *(void **)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
  swift_unknownObjectRetain(a2);
  swift_retain();
  swift_retain();
  v15 = a6;
  sub_100078678(v14);
  swift_unknownObjectRelease(v14);
  sub_10006DD34();
  v17 = *(void **)(a1 + v13);
  if (v17)
  {
    v40 = (uint64_t)v15;
    objc_msgSend((id)swift_unknownObjectRetain(v17), "scheduleUpdateIfNeeded");
    v42 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock;
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock), "lock");
    v18 = objc_msgSend(v17, "hasFinishedTryingToFetchCorrectThumbnail");
    v19 = (char)v18;
    v20 = *(id *)DOCLog.UI.unsafeMutableAddressor(v18);
    v41 = static os_log_type_t.debug.getter(v20);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    if ((v19 & 1) != 0)
    {
      v22 = swift_allocObject(v21, 112, 7);
      *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
      v39 = a4;
      v45 = v17;
      swift_unknownObjectRetain(v17);
      v23 = sub_10006922C(&qword_100658920);
      v24 = sub_10006922C((uint64_t *)&unk_10064D520);
      swift_dynamicCast(v22 + 32, &v45, v23, v24, 7);
      v25 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v44, 0, 0);
      v43 = *v25;
      swift_unknownObjectRetain(v43);
      v26 = sub_10006922C(&qword_100652EB0);
      v27 = String.init<A>(describing:)(&v43, v26);
      v29 = v28;
      *(_QWORD *)(v22 + 96) = &type metadata for String;
      *(_QWORD *)(v22 + 104) = sub_10006A638();
      *(_QWORD *)(v22 + 72) = v27;
      *(_QWORD *)(v22 + 80) = v29;
      os_log(_:dso:log:type:_:)("thumbnail %@ for item %@ is already up to date", 46, 2, &_mh_execute_header, v20, v41, v22);

      swift_bridgeObjectRelease(v22);
      sub_10019489C(a2, a3, v39, a5, v40);
    }
    else
    {
      v33 = swift_allocObject(v21, 72, 7);
      *(_OWORD *)(v33 + 16) = xmmword_1004D9670;
      v44[0] = v17;
      swift_unknownObjectRetain(v17);
      v34 = sub_10006922C(&qword_100658920);
      v35 = sub_10006922C((uint64_t *)&unk_10064D520);
      swift_dynamicCast(v33 + 32, v44, v34, v35, 7);
      os_log(_:dso:log:type:_:)("waiting for thumbnail %@ to update", 34, 2, &_mh_execute_header, v20, v41, v33);

      swift_bridgeObjectRelease(v33);
      v36 = (uint64_t (**)())(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
      v37 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
      v38 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock + 8);
      *v36 = sub_1004B0EC0;
      v36[1] = v12;
      swift_retain();
      sub_100087534(v37, v38);
    }
    objc_msgSend(*(id *)(a1 + v42), "unlock");
    swift_release(v12);
    *(_QWORD *)&result = swift_unknownObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v30 = *(id *)DOCLog.UI.unsafeMutableAddressor(v16);
    v31 = static os_log_type_t.default.getter(v30);
    os_log(_:dso:log:type:_:)("updateThumbnail failed: fetchThumbnailIfNeeded did not set _thumbnail, calling the completion block right away", 110, 2, &_mh_execute_header, v30, v31, _swiftEmptyArrayStorage);

    sub_10019489C(a2, a3, a4, a5, (uint64_t)v15);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004B0D28(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *(void **)(a1 + 184);
  v3 = *(_QWORD *)(a1 + 192);
  v4 = *(void **)(a1 + 200);
  v5 = *(void **)(a1 + 208);
  sub_100071784(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24));
  sub_100071784(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_1004B0E60()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B0E84()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004B0EC0()
{
  uint64_t v0;

  return sub_10019489C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

Swift::Bool __swiftcall DOCGridLayoutDebuggingEnabled()()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return v2;
}

Swift::Bool *DOCGridLayoutAssertsInvalidTypeRequests.unsafeMutableAddressor()
{
  return &DOCGridLayoutAssertsInvalidTypeRequests;
}

Class DOCSidebarViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2)
{
  return sub_1004B77C4(a2);
}

Class sub_1004B0F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  Class isa;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  UIMenuElementSize v42;
  UIMenuElementSize v43;
  Swift::String v44;
  objc_class *v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  Swift::String v49;
  Swift::OpaquePointer v51;
  uint64_t v52;
  uint64_t i;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  id v60;
  id v61;
  unint64_t v62;
  UIImage_optional v63;
  UIImage_optional v64;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter(v7) < 1)
    return 0;
  v55 = (void *)sub_1003E1E24(a1, 1);
  v56 = v8;
  v57 = v9;
  v58 = v10;
  if ((_BYTE)v10 == 0xFF)
    return 0;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v6, a1, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  v13 = sub_1003E22D4((uint64_t)v6);
  sub_1000E9F38((uint64_t)v6);
  v54 = v13;
  if (!v13)
  {
    sub_1000B1664(v55, v56, v57, v58);
    return 0;
  }
  v14 = sub_10034EEA4();
  v15 = v14;
  if (v14 >> 62)
    goto LABEL_24;
  v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v14);
  for (i = v2; v16; i = v2)
  {
    v17 = UIDocumentBrowserActionIdentifierNewWindow;
    v2 = 4;
    while (1)
    {
      v18 = (v15 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2 - 4, v15)
          : *(id *)(v15 + 8 * v2);
      v61 = v18;
      v19 = v2 - 3;
      if (__OFADD__(v2 - 4, 1))
        break;
      v20 = objc_msgSend(v61, "identifier");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      if (v21 == v24 && v23 == v25)
      {
        swift_bridgeObjectRelease_n(v15, 2);
LABEL_22:
        swift_bridgeObjectRelease_n(v23, 2);
        v2 = i;
        goto LABEL_29;
      }
      v27 = v25;
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v24, v25, 0);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v27);
      if ((v28 & 1) != 0)
      {
        v23 = v15;
        goto LABEL_22;
      }

      ++v2;
      if (v19 == v16)
      {
        swift_bridgeObjectRelease_n(v15, 2);
        v61 = 0;
        v2 = i;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_24:
    if (v15 < 0)
      v30 = v15;
    else
      v30 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v16 = _CocoaArrayWrapper.endIndex.getter(v30);
  }
  swift_bridgeObjectRelease_n(v15, 2);
  v61 = 0;
LABEL_29:
  v62 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1004B14F0((uint64_t)v55, v56, v57, v58);
  v59 = *(_QWORD *)(v31 + 16);
  if (v59)
  {
    v32 = 0;
    v52 = v31;
    v33 = v56;
    v34 = v57;
    v35 = v58;
    do
    {
      v37 = *(_QWORD *)(v31 + 8 * v32 + 32);
      if (*(_QWORD *)(v37 + 16))
      {
        v60 = v61;
        v38 = v55;
        sub_1000B1650(v55, v33, v34, v35);
        v39 = (id)v2;
        v40 = v54;
        swift_bridgeObjectRetain(v37);
        sub_1004B7684(v41);
        v43 = v42;

        sub_1000B1664(v38, v33, v34, v35);
        swift_bridgeObjectRelease(v37);

        sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
        v44._countAndFlagsBits = 0;
        v44._object = (void *)0xE000000000000000;
        v63.value.super.isa = 0;
        v63.is_nil = 0;
        v45 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v63, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v43, v51).super.super.isa;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
        v47 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v46 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v47 >= v46 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
        v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47);
        specialized Array._endMutation()(v36);

        v31 = v52;
        v2 = i;
      }
      ++v32;
    }
    while (v59 != v32);
    swift_bridgeObjectRelease(v31);
    v48 = (_QWORD *)v62;
  }
  else
  {
    swift_bridgeObjectRelease(v31);
    v48 = _swiftEmptyArrayStorage;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v64.value.super.isa = 0;
  v64.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v49, (Swift::String_optional)0, v64, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v48, v51).super.super.isa;

  sub_1000B1664(v55, v56, v57, v58);
  return isa;
}

void sub_1004B14F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

_QWORD *sub_1004B1530()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v0 = sub_100154D90(0, 1, 1, _swiftEmptyArrayStorage);
  v2 = v0[2];
  v1 = v0[3];
  v3 = v1 >> 1;
  v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    v0 = sub_100154D90((_QWORD *)(v1 > 1), v2 + 1, 1, v0);
    v1 = v0[3];
    v3 = v1 >> 1;
  }
  v0[2] = v4;
  *((_BYTE *)v0 + v2 + 32) = 0;
  v5 = v2 + 2;
  if (v3 < v5)
    v0 = sub_100154D90((_QWORD *)(v1 > 1), v5, 1, v0);
  v0[2] = v5;
  *((_BYTE *)v0 + v4 + 32) = 1;
  v6 = sub_100154D90(0, 1, 1, _swiftEmptyArrayStorage);
  v8 = v6[2];
  v7 = v6[3];
  v9 = v7 >> 1;
  v10 = v8 + 1;
  if (v7 >> 1 <= v8)
  {
    v6 = sub_100154D90((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v7 = v6[3];
    v9 = v7 >> 1;
  }
  v6[2] = v10;
  *((_BYTE *)v6 + v8 + 32) = 2;
  v11 = v8 + 2;
  if (v9 < v11)
    v6 = sub_100154D90((_QWORD *)(v7 > 1), v11, 1, v6);
  v6[2] = v11;
  *((_BYTE *)v6 + v10 + 32) = 3;
  v12 = sub_100154D90(0, 1, 1, _swiftEmptyArrayStorage);
  v13 = v12;
  v15 = v12[2];
  v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    v13 = sub_100154D90((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    v16 = v13;
  }
  else
  {
    v16 = v12;
  }
  v13[2] = v15 + 1;
  *((_BYTE *)v13 + v15 + 32) = 8;
  if (v0[2])
  {
    v17 = sub_100154C64(0, 1, 1, _swiftEmptyArrayStorage);
    v19 = v17[2];
    v18 = v17[3];
    if (v19 >= v18 >> 1)
      v17 = sub_100154C64((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
    v17[2] = v19 + 1;
    v17[v19 + 4] = v0;
    if (v6[2])
    {
LABEL_16:
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = sub_100154C64(0, v17[2] + 1, 1, v17);
      v21 = v17[2];
      v20 = v17[3];
      if (v21 >= v20 >> 1)
        v17 = sub_100154C64((_QWORD *)(v20 > 1), v21 + 1, 1, v17);
      v17[2] = v21 + 1;
      v17[v21 + 4] = v6;
      if (v16[2])
        goto LABEL_21;
LABEL_28:
      swift_bridgeObjectRelease(v16);
      return v17;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v0);
    v17 = _swiftEmptyArrayStorage;
    if (v6[2])
      goto LABEL_16;
  }
  swift_bridgeObjectRelease(v6);
  if (!v16[2])
    goto LABEL_28;
LABEL_21:
  if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
    v17 = sub_100154C64(0, v17[2] + 1, 1, v17);
  v23 = v17[2];
  v22 = v17[3];
  if (v23 >= v22 >> 1)
    v17 = sub_100154C64((_QWORD *)(v22 > 1), v23 + 1, 1, v17);
  v17[2] = v23 + 1;
  v17[v23 + 4] = v16;
  return v17;
}

void sub_1004B1BD0(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1004B1C2C(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t aBlock, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;

  if (a2)
  {
    *(_QWORD *)(v39 - 72) = v36;
    __asm { BR              X10 }
  }
  *v37 = 0;
}

id sub_1004B2BF8(void *a1, id a2, uint64_t a3, uint64_t a4, char a5)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  void *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t countAndFlagsBits;
  void *v24;
  void *object;
  void *v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  NSString v31;
  id v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  void *v36;
  Swift::String v37;
  Swift::String v38;

  if (a5 == 2)
  {
    v10 = objc_msgSend(a2, "displayName");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    result = (id)_DocumentManagerBundle(v14);
    if (result)
    {
      v16 = result;
      v37._object = (void *)0x800000010053BE10;
      v17._object = (void *)0x800000010053BDF0;
      v17._countAndFlagsBits = 0x1000000000000013;
      v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v18.value._object = (void *)0xEB00000000656C62;
      v19._countAndFlagsBits = 0x1000000000000013;
      v19._object = (void *)0x800000010053BDF0;
      v37._countAndFlagsBits = 0xD000000000000050;
      v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v37);

      v21 = sub_10006922C((uint64_t *)&unk_100644560);
      v22 = swift_allocObject(v21, 72, 7);
      *(_OWORD *)(v22 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v22 + 56) = &type metadata for String;
      *(_QWORD *)(v22 + 64) = sub_10006A638();
      *(_QWORD *)(v22 + 32) = v11;
      *(_QWORD *)(v22 + 40) = v13;
      countAndFlagsBits = String.init(format:_:)(v20._countAndFlagsBits, v20._object, v22);
      object = v24;
      swift_bridgeObjectRelease(v20._object);
LABEL_6:
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v31);

      v33 = swift_allocObject(&unk_1005F1FA0, 56, 7);
      *(_QWORD *)(v33 + 16) = a2;
      *(_QWORD *)(v33 + 24) = a3;
      *(_QWORD *)(v33 + 32) = a4;
      *(_BYTE *)(v33 + 40) = a5;
      *(_QWORD *)(v33 + 48) = a1;
      sub_1000E4F7C(a2, a3, a4, a5);
      v34 = a1;
      v36 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v32, 0, 0, 0, v35, 0, 0, 0, sub_1004B9390, v33);
      objc_msgSend(v36, "setAttributes:", 2);
      return v36;
    }
    __break(1u);
  }
  else
  {
    result = (id)_DocumentManagerBundle(a1);
    if (result)
    {
      v26 = result;
      v38._countAndFlagsBits = 0xD000000000000053;
      v38._object = (void *)0x800000010053BD90;
      v27._countAndFlagsBits = 0x54206574656C6544;
      v27._object = (void *)0xEA00000000006761;
      v28.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v28.value._object = (void *)0xEB00000000656C62;
      v29._countAndFlagsBits = 0x54206574656C6544;
      v29._object = (void *)0xEA00000000006761;
      v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v38);
      countAndFlagsBits = v30._countAndFlagsBits;
      object = v30._object;

      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B2EFC(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t countAndFlagsBits;
  void *v36;
  void *object;
  NSString v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  __n128 v43;
  id v45;
  void *v46;
  Swift::String v47;
  Swift::String_optional v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v52;
  Swift::String v53;

  switch(a6)
  {
    case 0:
      v11 = objc_msgSend(a3, "displayName");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      v15 = a3;
      v16 = a4;
      v17 = a5;
      v18 = 0;
      goto LABEL_5;
    case 1:
      v19 = objc_msgSend(a3, "displayName");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v14 = v20;

      v15 = a3;
      v16 = a4;
      v17 = a5;
      v18 = 1;
      goto LABEL_5;
    case 2:
      v21 = objc_msgSend(a3, "displayName");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v14 = v22;

      v15 = a3;
      v16 = a4;
      v17 = a5;
      v18 = 2;
LABEL_5:
      sub_1000E4FD0(v15, v16, v17, v18);
      goto LABEL_7;
    case 3:
      v24 = a3;
      v25 = objc_msgSend(v24, "displayName");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v14 = v26;

LABEL_7:
      v27 = (id)_DocumentManagerBundle(v23);
      if (!v27)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x1004B32F8);
      }
      v28 = v27;
      v52._object = (void *)0x800000010053BF10;
      v29._object = (void *)0x800000010053BEF0;
      v29._countAndFlagsBits = 0x1000000000000016;
      v30.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v30.value._object = (void *)0xEB00000000656C62;
      v31._countAndFlagsBits = 0xE220656D616E6552;
      v31._object = (void *)0xAF9D80E240259C80;
      v52._countAndFlagsBits = 0xD000000000000052;
      v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v52);

      v33 = sub_10006922C((uint64_t *)&unk_100644560);
      v34 = swift_allocObject(v33, 72, 7);
      *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v34 + 56) = &type metadata for String;
      *(_QWORD *)(v34 + 64) = sub_10006A638();
      *(_QWORD *)(v34 + 32) = v12;
      *(_QWORD *)(v34 + 40) = v14;
      countAndFlagsBits = String.init(format:_:)(v32._countAndFlagsBits, v32._object, v34);
      object = v36;
      swift_bridgeObjectRelease(v32._object);
      break;
    default:
      v45 = (id)_DocumentManagerBundle(a1);
      if (!v45)
        goto LABEL_13;
      v46 = v45;
      v53._countAndFlagsBits = 0xD000000000000055;
      v53._object = (void *)0x800000010053BE90;
      v47._countAndFlagsBits = 0x5B20656D616E6552;
      v47._object = (void *)0xED00005D6D657449;
      v48.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v48.value._object = (void *)0xEB00000000656C62;
      v49._countAndFlagsBits = 0x656D616E6552;
      v49._object = (void *)0xE600000000000000;
      v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v53);
      countAndFlagsBits = v50._countAndFlagsBits;
      object = v50._object;

      break;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v38);

  v40 = swift_allocObject(&unk_1005F2068, 64, 7);
  *(_QWORD *)(v40 + 16) = a3;
  *(_QWORD *)(v40 + 24) = a4;
  *(_QWORD *)(v40 + 32) = a5;
  *(_BYTE *)(v40 + 40) = a6;
  *(_QWORD *)(v40 + 48) = a1;
  *(_QWORD *)(v40 + 56) = a2;
  sub_1000E4F7C(a3, a4, a5, a6);
  v41 = a1;
  v42 = a2;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v39, 0, 0, 0, v43, 0, 0, 0, sub_1004B944C, v40);
}

uint64_t sub_1004B3308(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;

  if (a4 && a4 != 3)
  {
    if (a4 == 1)
    {
      v6 = type metadata accessor for DOCFileProviderSource();
      v7 = swift_dynamicCastClass(a1, v6);
      if (v7)
        v8 = a1;
      return v7;
    }
    return 0;
  }
  v9 = a1;
  v10 = v9;
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver);
  if (!v11)
  {

    return 0;
  }
  v12 = *(id *)(v11 + OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver);
  v13 = objc_msgSend(v10, "providerDomainID");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v12, "sourceForIdentifier:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  if (!v17)
    return 0;
  v18 = type metadata accessor for DOCFileProviderSource();
  v7 = swift_dynamicCastClass(v17, v18);
  if (!v7)

  return v7;
}

void sub_1004B3448(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  id v14;
  _QWORD v15[5];
  _QWORD *v16;

  v10 = (_QWORD *)swift_allocObject(&unk_1005F21A8, 56, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v10[6] = a5;
  v15[4] = sub_1004B95F8;
  v16 = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10004A82C;
  v15[3] = &unk_1005F21C0;
  v11 = _Block_copy(v15);
  v12 = v16;
  swift_retain();
  v13 = a1;
  swift_errorRetain(a2);
  v14 = a5;
  swift_release(v12);
  DOCRunInMainThread(v11);
  _Block_release(v11);
}

uint64_t sub_1004B3524(uint64_t (*a1)(uint64_t, uint64_t, double), uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = a1(a3, a4, v11);
  if (!a3)
  {
    v15 = Logger.UI.unsafeMutableAddressor(result);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15, v9);
    v16 = a5;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc(22, -1);
      v29 = v19;
      v21 = v20;
      v30 = swift_slowAlloc(64, -1);
      v32 = v30;
      *(_DWORD *)v21 = 136315394;
      v31 = sub_1000544FC(0xD000000000000021, 0x800000010053BFC0, &v32);
      *(_QWORD *)&v22 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32).n128_u64[0];
      *(_WORD *)(v21 + 12) = 2080;
      v28[1] = v21 + 14;
      v23 = objc_msgSend(v16, "providerDisplayName", v22);
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      v31 = sub_1000544FC(v24, v26, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);

      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v29, "%s: can't fetch root item for : %s.", (uint8_t *)v21, 0x16u);
      v27 = v30;
      swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return result;
}

void sub_1004B377C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver);
    if (v6)
    {
      if (*(_QWORD *)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber])
      {
        objc_msgSend(v6, "removeSubscriber:");
        v6 = *(void **)&v4[v5];
      }
    }
    *(_QWORD *)&v4[v5] = 0;

    v7 = *(void **)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber];
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber] = 0;

  }
}

id sub_1004B3820(void *a1, void *a2, void *a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;

  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
  v6 = objc_msgSend(a1, "popoverPresentationController");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setSourceView:", a2);

  }
  v8 = objc_msgSend(a1, "popoverPresentationController");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(a2, "bounds");
    objc_msgSend(v9, "setSourceRect:");

  }
  return objc_msgSend(a3, "presentViewController:animated:completion:", a1, 1, 0);
}

void sub_1004B38E8(char *a1, uint64_t a2, void *a3, char *a4, void *a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  NSString v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  char *v45;
  objc_class *v46;
  char *v47;
  char *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  char v61;
  NSObject *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  id v81;
  id v82;
  char *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[3];
  char v92[8];
  uint64_t v93;
  uint64_t v94;
  objc_super v95;

  v87 = a8;
  v85 = a6;
  v86 = a7;
  v83 = a4;
  v12 = type metadata accessor for Logger(0);
  v89 = *(_QWORD *)(v12 - 8);
  v90 = v12;
  __chkstk_darwin(v12);
  v88 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_actionManager];
  v15 = *(id *)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  v16 = v14;
  swift_errorRetain(a2);
  v17 = a3;
  v18 = objc_msgSend(v17, "identifier");
  v19 = objc_msgSend(v17, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  v22 = objc_allocWithZone((Class)DOCConcreteLocation);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "initWithSourceIdentifier:title:", v18, v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v25 = objc_opt_self(DOCPickerSource);
  objc_msgSend(v24, "setIsFPV2:", swift_dynamicCastObjCClass(v17, v25) == 0);
  v26 = objc_msgSend(v17, "promptText");
  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v29 = v28;
    v26 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  v84 = a5;
  objc_msgSend(v24, "setPromptText:", v26, v27);

  v30 = objc_allocWithZone((Class)type metadata accessor for DOCErrorViewController());
  v31 = (char *)sub_1002BC6B8(v15, 0, v16, a2, v17, v24, 0);

  swift_errorRelease(a2);
  v82 = a1;
  v32 = objc_msgSend(a1, "view");
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v32, "window");

    v35 = v88;
    v36 = v89;
    v37 = v87;
    v39 = v85;
    v38 = v86;
    if (v34)
    {
      v40 = objc_msgSend(v34, "rootViewController");

      if (v40)
      {
        v41 = objc_opt_self(DOCTabbedBrowserViewController);
        v42 = (void *)swift_dynamicCastObjCClass(v40, v41);
        if (v42)
        {
          v43 = objc_msgSend(v42, "effectiveBrowserViewController");
          if (v43)
          {
            v44 = v43;
            v45 = &v31[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
            *((_QWORD *)v45 + 1) = &off_1005DA140;
            swift_unknownObjectWeakAssign(v45, v44);

            v40 = v44;
          }
        }

      }
    }
    v46 = (objc_class *)type metadata accessor for DOCGetInfoErrorPresentingViewController();
    v47 = (char *)objc_allocWithZone(v46);
    *(_QWORD *)&v47[OBJC_IVAR____TtC5Files39DOCGetInfoErrorPresentingViewController_errorViewController] = v31;
    v95.receiver = v47;
    v95.super_class = v46;
    v48 = v31;
    v49 = objc_msgSendSuper2(&v95, "init");
    UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
    v50 = objc_msgSend(v49, "popoverPresentationController");
    if (v50)
    {
      v51 = v50;
      objc_msgSend(v50, "setSourceView:", v83);

    }
    v52 = objc_msgSend(v49, "popoverPresentationController");
    if (v52)
    {
      v53 = v52;
      objc_msgSend(v83, "bounds");
      objc_msgSend(v53, "setSourceRect:");

    }
    v54 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v48, "doc_dismissViewController");
    v83 = v48;
    v55 = objc_msgSend(v48, "navigationItem");
    v81 = v54;
    objc_msgSend(v55, "setRightBarButtonItem:", v54);

    v57 = Logger.Sidebar.unsafeMutableAddressor(v56);
    v58 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v57, v90);
    swift_errorRetain(a2);
    v59 = v84;
    sub_1000E4F7C(v84, v39, v38, v37);
    swift_errorRetain(a2);
    v60 = sub_1000E4F7C(v59, v39, v38, v37);
    v61 = v37;
    v62 = Logger.logObject.getter(v60);
    v80 = static os_log_type_t.error.getter(v62);
    if (os_log_type_enabled(v62, (os_log_type_t)v80))
    {
      v63 = swift_slowAlloc(32, -1);
      v79 = swift_slowAlloc(96, -1);
      v94 = v79;
      *(_DWORD *)v63 = 136315650;
      v93 = sub_1000544FC(0xD000000000000032, 0x800000010053BFF0, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94);
      *(_WORD *)(v63 + 12) = 2080;
      sub_100201260((uint64_t)v59, v39, v38, v61);
      v65 = v64;
      v66 = objc_msgSend(v64, "displayName");

      if (v66)
      {
        v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
        v69 = v68;

      }
      else
      {
        v67 = 0;
        v69 = 0xE000000000000000;
      }
      v93 = sub_1000544FC(v67, v69, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94);
      swift_bridgeObjectRelease(v69);
      v71 = v84;
      v70 = v85;
      v72 = v86;
      v73 = v87;
      sub_1000E4FD0(v84, v85, v86, v87);
      sub_1000E4FD0(v71, v70, v72, v73);
      *(_WORD *)(v63 + 22) = 2080;
      swift_getErrorValue(a2, v92, v91);
      v74 = Error.localizedDescription.getter(v91[1], v91[2]);
      v76 = v75;
      v93 = sub_1000544FC(v74, v75, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94);
      swift_bridgeObjectRelease(v76);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v80, "%s: Showing error controller for location: %s and error: %s.", (uint8_t *)v63, 0x20u);
      v77 = v79;
      swift_arrayDestroy(v79, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1, -1);
      swift_slowDealloc(v63, -1, -1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v90);
    }
    else
    {
      sub_1000E4FD0(v59, v39, v38, v61);
      sub_1000E4FD0(v59, v39, v38, v61);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v58);
    }
    objc_msgSend(v82, "presentViewController:animated:completion:", v49, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1004B4034(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  objc_class *v11;
  unsigned int v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  double v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  objc_super v24;
  objc_super v25;
  objc_super v26;

  v11 = (objc_class *)type metadata accessor for DOCSidebarItemCell(0);
  v26.receiver = a1;
  v26.super_class = v11;
  v12 = objc_msgSendSuper2(&v26, "isSelected");
  v25.receiver = a1;
  v25.super_class = v11;
  objc_msgSendSuper2(&v25, "setSelected:", 0);
  v24.receiver = a1;
  v24.super_class = v11;
  if (v12 != objc_msgSendSuper2(&v24, "isSelected"))
    objc_msgSend(a1, "setNeedsUpdateConfiguration");
  if (a6)
  {
    if (a6 == 3)
    {
      v22 = a3;
      v23 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v22);
      DOCSmartFolderManager.delete(hotFolder:for:)(v22, a4, a5);

    }
    else if (a6 == 1)
    {
      v13 = a3;
      sub_1003DBE60();
      v15 = v14;
      v16 = objc_msgSend(v13, "identifier");
      v17 = sub_100028BE0((uint64_t)v16, v15);

      *(_QWORD *)&v18 = swift_bridgeObjectRelease(v15).n128_u64[0];
      if ((v17 & 1) == 0 && objc_msgSend(v13, "status", v18) && objc_msgSend(v13, "status") != (id)2)
        sub_1003DBB08(v13);
      sub_10020157C(1, v13);
      sub_1000E4FD0(a3, a4, a5, 1);
      sub_1000E4FD0(a3, a4, a5, 1);
    }
  }
  else
  {
    v19 = (void *)objc_opt_self(DOCFavoritesManager);
    v20 = a3;
    v21 = objc_msgSend(v19, "sharedManager");
    objc_msgSend(v21, "removeFavorite:completion:", v20, 0);

    sub_1000E4FD0(a3, a4, a5, 0);
  }
}

void sub_1004B4250(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  id v9;
  id v10;
  _QWORD v11[5];
  _QWORD *v12;

  v6 = (_QWORD *)swift_allocObject(&unk_1005F1E38, 40, 7);
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v11[4] = sub_1004B91BC;
  v12 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10004A82C;
  v11[3] = &unk_1005F1E50;
  v7 = _Block_copy(v11);
  v8 = v12;
  swift_errorRetain(a1);
  v9 = a2;
  v10 = a3;
  swift_release(v8);
  DOCRunInMainThread(v7);
  _Block_release(v7);
}

double sub_1004B4318(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  void (*v39)(char *, NSObject *, uint64_t);
  NSObject *v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint8_t *v51;
  void *v52;
  double result;
  void (*v54)(char *, uint64_t);
  NSObject *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  NSObject **v60;
  NSObject *v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(__n128);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  __n128 v71;
  _QWORD *v72;
  os_log_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  NSObject *v79;
  _BYTE v80[16];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v72 - v11;
  __chkstk_darwin(v13);
  v16 = (char *)&v72 - v15;
  if (a1)
  {
    v17 = swift_errorRetain(a1);
    v18 = Logger.Rename.unsafeMutableAddressor(v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v18, v6);
    v19 = a2;
    swift_errorRetain(a1);
    v20 = v19;
    v21 = swift_errorRetain(a1);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc(22, -1);
      LODWORD(v74) = v24;
      v26 = v25;
      v27 = (_QWORD *)swift_slowAlloc(8, -1);
      v75 = swift_slowAlloc(32, -1);
      v78 = (uint64_t)v20;
      v79 = v75;
      *(_DWORD *)v26 = 138412546;
      v76 = v7;
      v77 = (void (*)(char *, uint64_t))v6;
      v28 = v20;
      v73 = v22;
      v29 = a3;
      v30 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
      *v27 = v20;

      a3 = v29;
      *(_WORD *)(v26 + 12) = 2080;
      v78 = a1;
      swift_errorRetain(a1);
      v31 = sub_10006922C((uint64_t *)&unk_100643490);
      v32 = String.init<A>(describing:)(&v78, v31);
      v34 = v33;
      v78 = sub_1000544FC(v32, v33, (uint64_t *)&v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
      swift_bridgeObjectRelease(v34);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      v35 = v73;
      _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v74, "[Erase] Source: %@ failed with error: %s ", (uint8_t *)v26, 0x16u);
      v36 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v27, 1, v36);
      swift_slowDealloc(v27, -1, -1);
      v37 = v75;
      swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      (*(void (**)(char *, _QWORD))(v76 + 8))(v12, v77);
    }
    else
    {

      swift_errorRelease(a1);
      swift_errorRelease(a1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    v52 = (void *)_convertErrorToNSError(_:)(a1);
    DOCPresentAlertForError(v52, a3);

    swift_errorRelease(a1);
  }
  else
  {
    v75 = a3;
    v38 = Logger.Rename.unsafeMutableAddressor(v14);
    v39 = *(void (**)(char *, NSObject *, uint64_t))(v7 + 16);
    v39(v16, v38, v6);
    v40 = a2;
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.debug.getter(v41);
    v43 = os_log_type_enabled(v41, v42);
    v74 = v9;
    if (v43)
    {
      v44 = swift_slowAlloc(12, -1);
      v73 = v38;
      v45 = (uint8_t *)v44;
      v46 = swift_slowAlloc(8, -1);
      v76 = v7;
      v72 = (_QWORD *)v46;
      v77 = (void (*)(char *, uint64_t))v6;
      *(_DWORD *)v45 = 138412290;
      v79 = v40;
      v47 = v40;
      v6 = (uint64_t)v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);
      v48 = v72;
      *v72 = v40;

      v9 = v74;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "[Erase] Source: %@ succeeded.", v45, 0xCu);
      v49 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v48, 1, v49);
      v50 = v48;
      v7 = v76;
      swift_slowDealloc(v50, -1, -1);
      v51 = v45;
      v38 = v73;
      swift_slowDealloc(v51, -1, -1);
    }
    else
    {

      v41 = v40;
    }

    v54 = *(void (**)(char *, uint64_t))(v7 + 8);
    v54(v16, v6);
    v39(v9, v38, v6);
    v55 = v40;
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.debug.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc(12, -1);
      v77 = v54;
      v59 = (uint8_t *)v58;
      v60 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v59 = 138412290;
      v79 = v55;
      v61 = v55;
      v9 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);
      *v60 = v55;

      _os_log_impl((void *)&_mh_execute_header, v56, v57, "[Erase] Source: %@ finished. Invoking sidebar update block to refresh items.", v59, 0xCu);
      v62 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v60, 1, v62);
      swift_slowDealloc(v60, -1, -1);
      v63 = v59;
      v54 = v77;
      swift_slowDealloc(v63, -1, -1);
    }
    else
    {

      v56 = v55;
    }
    v64 = v75;

    v54(v9, v6);
    v65 = *(char **)(v64 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver);
    if (v65)
    {
      v67 = *(void (**)(__n128))&v65[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock];
      v66 = *(_QWORD *)&v65[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock + 8];
      v68 = *(_QWORD *)&v65[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_strategy];
      swift_beginAccess(v68 + 16, &v79, 0, 0);
      v69 = *(_QWORD *)(v68 + 16);
      v70 = v65;
      swift_retain();
      v71 = swift_bridgeObjectRetain(v69);
      v67(v71);

      swift_release(v66);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v69).n128_u64[0];
    }
  }
  return result;
}

void sub_1004B4954(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v20[5];
  uint64_t v21;

  if (a6 > 3u)
    return;
  v8 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v8, "begin");
  v9 = swift_allocObject(&unk_1005F2090, 24, 7);
  *(_QWORD *)(v9 + 16) = a2;
  v20[4] = sub_1004B94AC;
  v21 = v9;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_10004A82C;
  v20[3] = &unk_1005F20A8;
  v10 = _Block_copy(v20);
  v11 = v21;
  v12 = a2;
  objc_msgSend(v8, "setCompletionBlock:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  v13 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount) = v16;
  sub_1002A4394(1u, 1);
  v17 = *(_QWORD *)(a1 + v13);
  v15 = __OFSUB__(v17, 1);
  v18 = v17 - 1;
  if (v15)
  {
LABEL_10:
    __break(1u);
    return;
  }
  *(_QWORD *)(a1 + v13) = v18;
  if (!v18 && *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1)
  {
    v19 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    sub_100013B5C(v19, 1);
  }
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_shouldStopEditingOnFinishedEdit) = 1;
  objc_msgSend(v8, "commit");
}

id sub_1004B4ADC(char *a1)
{
  objc_class *ObjectType;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id result;
  objc_super v11;
  objc_super v12;
  objc_super v13;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType(a1);
  v14.receiver = a1;
  v14.super_class = ObjectType;
  if (objc_msgSendSuper2(&v14, "isSelected"))
  {
    a1[qword_100651110] = 1;
    v13.receiver = a1;
    v13.super_class = ObjectType;
    v4 = objc_msgSendSuper2(&v13, "isSelected");
    v12.receiver = a1;
    v12.super_class = ObjectType;
    objc_msgSendSuper2(&v12, "setSelected:", 0);
    v11.receiver = a1;
    v11.super_class = ObjectType;
    if (v4 != objc_msgSendSuper2(&v11, "isSelected"))
      objc_msgSend(a1, "setNeedsUpdateConfiguration");
  }
  sub_10039742C(1, v3);
  sub_10039742C(0, v5);
  v7 = qword_1006510B8;
  v8 = *(void **)&a1[qword_1006510B8];
  if (v8)
    objc_msgSend(v8, "setUserInteractionEnabled:", 1);
  sub_100397170(1, v6);
  sub_10039742C(0, v9);
  result = *(id *)&a1[v7];
  if (result)
    return objc_msgSend(result, "becomeFirstResponder");
  return result;
}

void sub_1004B4BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char *a6, void *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  __n128 v19;
  int v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  unsigned __int8 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  objc_super *v33;
  NSObject *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  unint64_t v44;
  objc_class *v45;
  char *v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  unint64_t v51;
  objc_class *v52;
  char *v53;
  char *v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  id v67;
  unint64_t v68;
  id v69;
  void *v70;
  objc_class *v71;
  char *v72;
  id v73;
  char *v74;
  id v75;
  id v76;
  id v77;
  void (**v78)(_QWORD, _QWORD, _QWORD);
  Class isa;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void (**v88)(_QWORD, _QWORD, _QWORD);
  Class v89;
  uint64_t v90;
  objc_super *v91;
  NSObject *v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  objc_super v102;
  uint64_t v103;
  objc_super v104;
  char v105[80];
  uint64_t v106;
  objc_super v107;

  v98 = a7;
  v100 = a6;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Sidebar.unsafeMutableAddressor(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  sub_1000E4F7C((id)a2, a3, a4, a5);
  v17 = sub_1000E4F7C((id)a2, a3, a4, a5);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.info.getter(v19);
  v21 = os_log_type_enabled(v18, (os_log_type_t)v20);
  v99 = a2;
  if (v21)
  {
    v92 = v18;
    v93 = v20;
    v94 = v12;
    v95 = v11;
    v22 = swift_slowAlloc(22, -1);
    v23 = swift_slowAlloc(64, -1);
    v106 = v23;
    *(_DWORD *)v22 = 136315394;
    v101 = sub_1000544FC(0xD000000000000020, 0x800000010053BC50, &v106);
    v91 = &v102;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
    *(_WORD *)(v22 + 12) = 2080;
    v97 = a4;
    sub_100201260(a2, a3, a4, a5);
    v25 = v24;
    v26 = objc_msgSend(v24, "displayName");

    v27 = a5;
    v96 = a3;
    if (v26)
    {
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0xE000000000000000;
    }
    v33 = v91;
    v34 = v92;
    v101 = sub_1000544FC(v28, v30, &v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, v33);
    swift_bridgeObjectRelease(v30);
    a2 = v99;
    a3 = v96;
    v31 = v97;
    sub_1000E4FD0((void *)v99, v96, v97, v27);
    sub_1000E4FD0((void *)a2, a3, v31, v27);
    _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v93, "%s: Performing context menu action for location: %s.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v94 + 8))(v14, v95);
    v32 = v100;
  }
  else
  {
    sub_1000E4FD0((void *)a2, a3, a4, a5);
    sub_1000E4FD0((void *)a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v31 = a4;
    v27 = a5;
    v32 = v100;
  }
  if (v27 == 1)
    goto LABEL_13;
  if (v27 == 2)
  {
    v55 = (id)a2;
    sub_100201260(a2, a3, v31, 2);
    v57 = v56;
    v58 = objc_msgSend(v55, "displayName");
    v59 = (void *)a2;
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v61 = a3;
    v63 = v62;

    v64 = sub_10006922C(&qword_100641A70);
    inited = swift_initStackObject(v64, &v103);
    *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(inited + 32) = 0xD000000000000036;
    *(_QWORD *)(inited + 40) = 0x8000000100519820;
    v66 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    *(_QWORD *)(inited + 48) = v57;
    *(_QWORD *)(inited + 72) = v66;
    *(_QWORD *)(inited + 80) = 0xD000000000000035;
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 88) = 0x8000000100519860;
    *(_QWORD *)(inited + 96) = v60;
    *(_QWORD *)(inited + 104) = v63;
    v67 = v57;
    v68 = sub_10008B1F0(inited);
    v69 = objc_msgSend(v32, "effectiveAppearance");
    v70 = *(void **)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    v71 = (objc_class *)type metadata accessor for DOCActionContext();
    v72 = (char *)objc_allocWithZone(v71);
    *(_QWORD *)&v72[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(_QWORD *)&v72[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v69;
    *(_QWORD *)&v72[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v70;
    *(_QWORD *)&v72[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v32;
    *(_QWORD *)&v72[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(_QWORD *)&v72[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(_QWORD *)&v72[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v68;
    v102.receiver = v72;
    v102.super_class = v71;
    v73 = v70;
    v74 = v32;
    v48 = objc_msgSendSuper2(&v102, "init");

    sub_1000E4FD0(v59, v61, v31, 2);
LABEL_23:
    v75 = v98;
    if (objc_msgSend(v98, "requiresResolvedItems"))
    {
      v76 = v75;
      v48 = v48;
      sub_10035E100((uint64_t)_swiftEmptyArrayStorage, v76, v48);

    }
    else
    {
      v77 = objc_msgSend(v75, "unresolvedHandler");
      if (v77)
      {
        v78 = (void (**)(_QWORD, _QWORD, _QWORD))v77;
        v48 = v48;
        _Block_copy(v78);
        sub_10006922C((uint64_t *)&unk_1006424B0);
        isa = Array._bridgeToObjectiveC()().super.isa;
        ((void (**)(_QWORD, Class, id))v78)[2](v78, isa, v48);

        _Block_release(v78);
        _Block_release(v78);

      }
    }
    goto LABEL_33;
  }
  if (v27 == 5 && (!(v31 | a3 | a2) || a2 == 1 && !(v31 | a3)))
  {
LABEL_13:
    v35 = a3;
    sub_100201260(a2, a3, v31, v27);
    v37 = v36;
    v38 = objc_msgSend(v32, "effectiveAppearance");
    v39 = *(void **)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    v40 = sub_10006922C(&qword_100641A70);
    v41 = swift_initStackObject(v40, v105);
    *(_OWORD *)(v41 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v41 + 32) = 0xD000000000000036;
    *(_QWORD *)(v41 + 40) = 0x8000000100519820;
    *(_QWORD *)(v41 + 72) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    *(_QWORD *)(v41 + 48) = v37;
    v42 = v39;
    v43 = v37;
    v44 = sub_10008B1F0(v41);
    v45 = (objc_class *)type metadata accessor for DOCActionContext();
    v46 = (char *)objc_allocWithZone(v45);
    *(_QWORD *)&v46[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v38;
    *(_QWORD *)&v46[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v42;
    *(_QWORD *)&v46[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v32;
    *(_QWORD *)&v46[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v44;
    v104.receiver = v46;
    v104.super_class = v45;
    v47 = v32;
    v48 = objc_msgSendSuper2(&v104, "init");

  }
  else
  {
    v35 = a3;
    v49 = objc_msgSend(v32, "effectiveAppearance");
    v50 = *(id *)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    v51 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
    v52 = (objc_class *)type metadata accessor for DOCActionContext();
    v53 = (char *)objc_allocWithZone(v52);
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v49;
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v50;
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v32;
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v51;
    v107.receiver = v53;
    v107.super_class = v52;
    v54 = v32;
    v48 = objc_msgSendSuper2(&v107, "init");
  }
  if (v27 - 1 < 2)
    goto LABEL_23;
  if (v27)
  {
    if (v27 != 5 || v31 | v35 | v99 && (v99 != 1 || v31 | v35))
      goto LABEL_33;
    goto LABEL_23;
  }
  v80 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v81 = swift_allocObject(v80, 40, 7);
  *(_OWORD *)(v81 + 16) = xmmword_1004D9B40;
  v82 = (void *)v99;
  *(_QWORD *)(v81 + 32) = v99;
  v106 = v81;
  specialized Array._endMutation()(v81);
  v83 = v106;
  sub_1000E4F7C(v82, v35, v31, 0);
  v84 = v82;
  v85 = v98;
  if (objc_msgSend(v98, "requiresResolvedItems"))
  {
    v86 = v85;
    v48 = v48;
    sub_10035E100(v83, v86, v48);
    swift_bridgeObjectRelease(v83);

  }
  else
  {
    v87 = objc_msgSend(v85, "unresolvedHandler");
    if (v87)
    {
      v88 = (void (**)(_QWORD, _QWORD, _QWORD))v87;
      v48 = v48;
      _Block_copy(v88);
      sub_10006922C((uint64_t *)&unk_1006424B0);
      v89 = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(_QWORD, Class, id))v88)[2](v88, v89, v48);

      _Block_release(v88);
      _Block_release(v88);
      swift_bridgeObjectRelease(v83);

    }
    else
    {
      swift_bridgeObjectRelease(v83);
    }
  }
  sub_1000E4FD0(v82, v35, v31, 0);
LABEL_33:

}

double sub_1004B55A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  __n128 v19;
  int v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  double result;
  void *v31;
  void *v32;
  void *v33;
  uint64_t *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Sidebar.unsafeMutableAddressor(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  sub_1000E4F7C(a2, a3, a4, a5);
  v17 = sub_1000E4F7C(a2, a3, a4, a5);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v18, (os_log_type_t)v20))
  {
    v36 = v20;
    v37 = v12;
    v38 = v11;
    v39 = a6;
    v21 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(64, -1);
    v41 = v35;
    *(_DWORD *)v21 = 136315394;
    v40 = sub_1000544FC(0xD000000000000020, 0x800000010053BC80, &v41);
    v34 = &v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    *(_WORD *)(v21 + 12) = 2080;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v23 = v22;
    v24 = objc_msgSend(v22, "displayName");

    if (v24)
    {
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

    }
    else
    {
      v25 = 0;
      v27 = 0xE000000000000000;
    }
    v40 = sub_1000544FC(v25, v27, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v34);
    swift_bridgeObjectRelease(v27);
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v36, "%s: Performing context menu action for location: %s.", (uint8_t *)v21, 0x16u);
    v28 = v35;
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v38);
    a6 = v39;
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  Strong = swift_unknownObjectWeakLoadStrong(a6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate);
  if (Strong)
  {
    v31 = (void *)Strong;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v33 = v32;
    objc_msgSend(v31, "sidebarViewController:wantsToReveal:", a6, v32);

    *(_QWORD *)&result = swift_unknownObjectRelease(v31).n128_u64[0];
  }
  return result;
}

void sub_1004B58E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  __n128 v19;
  int v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Sidebar.unsafeMutableAddressor(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  sub_1000E4F7C(a2, a3, a4, a5);
  v17 = sub_1000E4F7C(a2, a3, a4, a5);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v18, (os_log_type_t)v20))
  {
    v33 = v20;
    v34 = v12;
    v35 = v11;
    v36 = a6;
    v21 = swift_slowAlloc(22, -1);
    v32 = swift_slowAlloc(64, -1);
    v38 = v32;
    *(_DWORD *)v21 = 136315394;
    v37 = sub_1000544FC(0xD000000000000014, 0x800000010053BD00, &v38);
    v31 = &v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v21 + 12) = 2080;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v23 = v22;
    v24 = objc_msgSend(v22, "displayName");

    if (v24)
    {
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

    }
    else
    {
      v25 = 0;
      v27 = 0xE000000000000000;
    }
    v37 = sub_1000544FC(v25, v27, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v31);
    swift_bridgeObjectRelease(v27);
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v33, "%s: Performing context menu action for location: %s.", (uint8_t *)v21, 0x16u);
    v28 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
    a6 = v36;
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v29 = *(void **)(a6 + qword_1006510E8);
  if (v29)
  {
    v30 = v29;
    sub_1002611FC();

  }
}

double sub_1004B5BE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char *a6, void *a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  char *v32;
  id v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  char *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  _QWORD *v47;
  void *v48;
  _QWORD *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  id v56;
  id v57;
  char *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t aBlock[5];
  _QWORD *v71;

  v68 = a6;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = Logger.Sidebar.unsafeMutableAddressor(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
  sub_1000E4F7C(a2, a3, a4, a5);
  v20 = sub_1000E4F7C(a2, a3, a4, a5);
  v21 = Logger.logObject.getter(v20);
  v67 = static os_log_type_t.info.getter(v22);
  if (os_log_type_enabled(v21, (os_log_type_t)v67))
  {
    v61 = v15;
    v62 = v14;
    v63 = a7;
    v64 = a8;
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v69 = sub_1000544FC(0xD000000000000021, 0x800000010053BF90, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock);
    *(_WORD *)(v23 + 12) = 2080;
    v65 = a3;
    v66 = a4;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v26 = v25;
    v27 = objc_msgSend(v25, "displayName");

    if (v27)
    {
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0xE000000000000000;
    }
    v69 = sub_1000544FC(v28, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock);
    swift_bridgeObjectRelease(v30);
    a3 = v65;
    a4 = v66;
    sub_1000E4FD0(a2, v65, v66, a5);
    sub_1000E4FD0(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v67, "%s: Performing context menu action for location: %s.", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v17, v62);
    a7 = v63;
    v31 = v64;
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v31 = a8;
  }
  v32 = v68;
  if (!a5 || a5 == 3)
  {
    v33 = a2;
    sub_1004B7C28(v32, v33, a7);

    return result;
  }
  v35 = swift_allocObject(&unk_1005F20E0, 72, 7);
  *(_QWORD *)(v35 + 16) = a2;
  *(_QWORD *)(v35 + 24) = a3;
  *(_QWORD *)(v35 + 32) = a4;
  *(_BYTE *)(v35 + 40) = a5;
  *(_QWORD *)(v35 + 48) = v32;
  *(_QWORD *)(v35 + 56) = a7;
  *(_QWORD *)(v35 + 64) = v31;
  if (a5 != 1)
  {
    v51 = a2;
    v52 = a3;
    v53 = a4;
    v54 = a5;
LABEL_16:
    sub_1000E4F7C(v51, v52, v53, v54);
    v55 = v32;
    v56 = a7;
LABEL_17:
    v57 = v31;
    goto LABEL_18;
  }
  v36 = type metadata accessor for DOCFileProviderSource();
  v37 = swift_dynamicCastClass(a2, v36);
  if (!v37)
  {
    v51 = a2;
    v52 = a3;
    v53 = a4;
    v54 = 1;
    goto LABEL_16;
  }
  v38 = a7;
  v39 = a3;
  v40 = *(void **)(v37 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (!v40)
  {
    sub_1000E4F7C(a2, v39, a4, 1);
    v58 = v32;
    v59 = v38;
    goto LABEL_17;
  }
  v41 = (void *)objc_opt_self(FPItemManager);
  sub_1000E4F7C(a2, v39, a4, 1);
  sub_1000E4F7C(a2, v39, a4, 1);
  sub_1000E4F7C(a2, v39, a4, 1);
  v42 = v32;
  v43 = v38;
  v44 = v31;
  v45 = v40;
  v46 = objc_msgSend(v41, "defaultManager");
  v47 = (_QWORD *)swift_allocObject(&unk_1005F2108, 40, 7);
  v47[2] = sub_1004B94FC;
  v47[3] = v35;
  v47[4] = v45;
  aBlock[4] = (uint64_t)sub_1004B956C;
  v71 = v47;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100083540;
  aBlock[3] = (uint64_t)&unk_1005F2120;
  v48 = _Block_copy(aBlock);
  v49 = v71;
  v50 = v45;
  swift_retain();
  objc_msgSend(v46, "doc_fetchRootItemForProviderDomain:completionHandler:", v50, v48, swift_release(v49).n128_f64[0]);
  _Block_release(v48);

  sub_1000E4FD0(a2, v39, a4, 1);
  sub_1000E4FD0(a2, v39, a4, 1);
LABEL_18:
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

void sub_1004B6128(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, void *a8, void *a9)
{
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v17 = swift_allocObject(&unk_1005F21F8, 88, 7);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 40) = a5;
  *(_BYTE *)(v17 + 48) = a6;
  *(_QWORD *)(v17 + 56) = a7;
  *(_QWORD *)(v17 + 64) = a8;
  *(_QWORD *)(v17 + 72) = a2;
  *(_QWORD *)(v17 + 80) = a9;
  aBlock[4] = sub_1004B965C;
  v25 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005F2210;
  v18 = _Block_copy(aBlock);
  v19 = v25;
  v20 = a1;
  sub_1000E4F7C(a3, a4, a5, a6);
  v21 = a7;
  v22 = a8;
  swift_errorRetain(a2);
  v23 = a9;
  swift_release(v19);
  DOCRunInMainThread(v18);
  _Block_release(v18);
}

void sub_1004B6248(void *a1, void *a2, uint64_t a3, uint64_t a4, int a5, char *a6, void *a7, uint64_t a8, void *a9)
{
  id v16;

  if (a1)
  {
    v16 = a1;
    sub_1004B7C28(a6, v16, a7);

  }
  else if (a8)
  {
    swift_errorRetain(a8);
    sub_1004B38E8(a6, a8, a9, (char *)a7, a2, a3, a4, a5);
    swift_errorRelease(a8);
  }
}

id sub_1004B632C(uint64_t a1, uint64_t a2)
{
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  NSString v10;
  id v11;
  __n128 v12;
  Swift::String v13;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v5 = result;
    v13._object = (void *)0x800000010053BD40;
    v6._countAndFlagsBits = 0x41206574656C6544;
    v6._object = (void *)0xEA00000000006C6CLL;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 0xD000000000000042;
    v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v13);

    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

    v12 = swift_retain();
    return (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v9._countAndFlagsBits, v9._object, 0, 0, v11, 0, 0, 0, v12, 0, 0, 0, a1, a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1004B648C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  double result;

  v17 = swift_allocObject(&unk_1005F1E88, 88, 7);
  *(_QWORD *)(v17 + 16) = a8;
  *(_QWORD *)(v17 + 24) = a9;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  *(_BYTE *)(v17 + 56) = a6;
  *(_QWORD *)(v17 + 64) = a1;
  *(_QWORD *)(v17 + 72) = a2;
  *(_QWORD *)(v17 + 80) = a7;
  swift_retain();
  sub_1000E4F7C(a3, a4, a5, a6);
  swift_retain();
  sub_1004B7A78((uint64_t)a7, (uint64_t)sub_1004B920C, v17);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

double sub_1004B6554(uint64_t a1, uint64_t (*a2)(uint64_t (*)(uint64_t a1), uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double result;
  void (*v27)(uint64_t);
  uint64_t v28;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
    if (v20)
      goto LABEL_3;
LABEL_8:
    v21 = swift_allocObject(&unk_1005F1F50, 41, 7);
    *(_QWORD *)(v21 + 16) = a4;
    *(_QWORD *)(v21 + 24) = a5;
    *(_QWORD *)(v21 + 32) = a6;
    *(_BYTE *)(v21 + 40) = a7;
    sub_1000E4F7C(a4, a5, a6, a7);
    v18 = (void *)a2(sub_1004B9348, v21);
    objc_msgSend(v18, "setAttributes:", 1, swift_release(v21).n128_f64[0], a8);
    goto LABEL_9;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  v16 = swift_allocObject(&unk_1005F1F28, 64, 7);
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  *(_QWORD *)(v16 + 32) = a6;
  *(_BYTE *)(v16 + 40) = a7;
  *(_QWORD *)(v16 + 48) = a1;
  *(_QWORD *)(v16 + 56) = a10;
  swift_bridgeObjectRetain(a1);
  sub_1000E4F7C(a4, a5, a6, a7);
  v17 = a10;
  v18 = (void *)a2(sub_1004B9310, v16);
  objc_msgSend(v18, "setAttributes:", 2, swift_release(v16).n128_f64[0], a8);
LABEL_9:
  v22 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v23 + 32) = v18;
  v28 = v23;
  specialized Array._endMutation()(v23);
  v24 = v18;
  v27(v28);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  return result;
}

uint64_t sub_1004B6730(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  __n128 v17;
  int v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = Logger.Sidebar.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  sub_1000E4F7C(a2, a3, a4, a5);
  v15 = sub_1000E4F7C(a2, a3, a4, a5);
  v16 = Logger.logObject.getter(v15);
  v18 = static os_log_type_t.info.getter(v17);
  if (os_log_type_enabled(v16, (os_log_type_t)v18))
  {
    v31 = v18;
    v32 = v10;
    v33 = v9;
    v19 = swift_slowAlloc(22, -1);
    v30 = swift_slowAlloc(64, -1);
    v35 = v30;
    *(_DWORD *)v19 = 136315394;
    v34 = sub_1000544FC(0xD000000000000016, 0x800000010053BD20, &v35);
    v29 = &v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *(_WORD *)(v19 + 12) = 2080;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v21 = v20;
    v22 = objc_msgSend(v20, "displayName");

    if (v22)
    {
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

    }
    else
    {
      v23 = 0;
      v25 = 0xE000000000000000;
    }
    v34 = sub_1000544FC(v23, v25, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v29);
    swift_bridgeObjectRelease(v25);
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v31, "%s: No items, disabling context menu action for location: %s.", (uint8_t *)v19, 0x16u);
    v27 = v30;
    swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_1004B6A04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = Logger.Sidebar.unsafeMutableAddressor(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
  sub_1000E4F7C(a2, a3, a4, a5);
  v19 = sub_1000E4F7C(a2, a3, a4, a5);
  v20 = Logger.logObject.getter(v19);
  v37 = static os_log_type_t.info.getter(v21);
  if (os_log_type_enabled(v20, (os_log_type_t)v37))
  {
    v33 = v14;
    v34 = v13;
    v35 = a6;
    v36 = a7;
    v22 = swift_slowAlloc(22, -1);
    v32 = swift_slowAlloc(64, -1);
    v39 = v32;
    *(_DWORD *)v22 = 136315394;
    v38 = sub_1000544FC(0xD000000000000016, 0x800000010053BD20, &v39);
    v31 = &v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    *(_WORD *)(v22 + 12) = 2080;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v24 = v23;
    v25 = objc_msgSend(v23, "displayName");

    if (v25)
    {
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0xE000000000000000;
    }
    v38 = sub_1000544FC(v26, v28, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v31);
    swift_bridgeObjectRelease(v28);
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v37, "%s: Performing context menu action for location: %s.", (uint8_t *)v22, 0x16u);
    v29 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
    a6 = v35;
    a7 = v36;
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_1004B81EC(a6, a7);
}

void sub_1004B6CF4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  __n128 v19;
  os_log_type_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void (*v44)(void *, _QWORD, _QWORD, void (*)(uint64_t, uint64_t), _QWORD *);
  _QWORD *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock[5];
  uint64_t v56;

  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Sidebar.unsafeMutableAddressor(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  sub_1000E4F7C(a2, a3, a4, a5);
  v17 = sub_1000E4F7C(a2, a3, a4, a5);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v18, v20))
  {
    v49 = v12;
    v50 = v11;
    v51 = a6;
    v21 = swift_slowAlloc(22, -1);
    v48 = swift_slowAlloc(64, -1);
    aBlock[0] = v48;
    *(_DWORD *)v21 = 136315394;
    v54 = sub_1000544FC(0xD000000000000016, 0x800000010053BE70, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
    *(_WORD *)(v21 + 12) = 2080;
    v52 = a3;
    v53 = a4;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v23 = v22;
    v24 = objc_msgSend(v22, "displayName");

    if (v24)
    {
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

    }
    else
    {
      v25 = 0;
      v27 = 0xE000000000000000;
    }
    v54 = sub_1000544FC(v25, v27, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
    swift_bridgeObjectRelease(v27);
    a3 = v52;
    a4 = v53;
    sub_1000E4FD0(a2, v52, v53, a5);
    sub_1000E4FD0(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "%s: Performing context menu action for location: %s.", (uint8_t *)v21, 0x16u);
    v28 = v48;
    swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v50);
    a6 = v51;
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (a5 == 3)
  {
    v38 = a2;
    v39 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v38);
    DOCSmartFolderManager.delete(hotFolder:for:)(v38, a3, a4);

  }
  else
  {
    if (a5 == 2)
    {
      v40 = *(_QWORD **)DOCTagManager.shared.unsafeMutableAddressor(a2);
      v41 = a3;
      v42 = swift_allocObject(&unk_1005F1FC8, 24, 7);
      swift_unknownObjectWeakInit(v42 + 16);
      v43 = (_QWORD *)swift_allocObject(&unk_1005F1FF0, 48, 7);
      v43[2] = v42;
      v43[3] = DOCSplitBrowserViewController.didCommitPreview(of:);
      v43[4] = 0;
      v43[5] = a6;
      v44 = *(void (**)(void *, _QWORD, _QWORD, void (*)(uint64_t, uint64_t), _QWORD *))((swift_isaMask & *v40) + 0x60);
      v45 = v40;
      swift_retain();
      v46 = a6;
      v44(a2, 0, 0, sub_1002A8AB4, v43);

      swift_release(v42);
      swift_release(v43);
      v34 = a2;
      v35 = v41;
      v36 = a4;
      v37 = 2;
    }
    else
    {
      if (a5)
        return;
      v29 = (void *)objc_opt_self(DOCFavoritesManager);
      v30 = a2;
      v31 = objc_msgSend(v29, "sharedManager");
      v32 = swift_allocObject(&unk_1005F2018, 32, 7);
      *(_QWORD *)(v32 + 16) = DOCSplitBrowserViewController.didCommitPreview(of:);
      *(_QWORD *)(v32 + 24) = 0;
      aBlock[4] = (uint64_t)sub_1002A8AE4;
      v56 = v32;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10016C02C;
      aBlock[3] = (uint64_t)&unk_1005F2030;
      v33 = _Block_copy(aBlock);
      objc_msgSend(v31, "removeFavorite:completion:", v30, v33, swift_release(v56).n128_f64[0]);
      _Block_release(v33);

      v34 = a2;
      v35 = a3;
      v36 = a4;
      v37 = 0;
    }
    sub_1000E4FD0(v34, v35, v36, v37);
  }
}

uint64_t sub_1004B71CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t (*v15)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  NSObject *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a8;
  v46 = a7;
  v15 = a10;
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = Logger.Sidebar.unsafeMutableAddressor(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v21, v16);
  sub_1000E4F7C(a2, a3, a4, a5);
  v22 = sub_1000E4F7C(a2, a3, a4, a5);
  v23 = Logger.logObject.getter(v22);
  v45 = static os_log_type_t.info.getter(v24);
  if (os_log_type_enabled(v23, (os_log_type_t)v45))
  {
    v39 = v19;
    v40 = v17;
    v37 = v23;
    v41 = v16;
    v42 = a6;
    v43 = a10;
    v25 = swift_slowAlloc(22, -1);
    v38 = swift_slowAlloc(64, -1);
    v48 = v38;
    *(_DWORD *)v25 = 136315394;
    v47 = sub_1000544FC(v44, a9, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    *(_WORD *)(v25 + 12) = 2080;
    sub_100201260((uint64_t)a2, a3, a4, a5);
    v27 = v26;
    v28 = objc_msgSend(v26, "displayName");

    v29 = a2;
    if (v28)
    {
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v32 = v31;

    }
    else
    {
      v30 = 0;
      v32 = 0xE000000000000000;
    }
    v34 = v37;
    v47 = sub_1000544FC(v30, v32, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    swift_bridgeObjectRelease(v32);
    sub_1000E4FD0(v29, a3, a4, a5);
    sub_1000E4FD0(v29, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v45, "%s: Performing context menu action for location: %s.", (uint8_t *)v25, 0x16u);
    v35 = v38;
    swift_arrayDestroy(v38, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    v33 = v46;
    a6 = v42;
    v15 = v43;
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, a5);
    sub_1000E4FD0(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v29 = a2;
    v33 = v46;
  }
  return v15(a6, v33, v29, a3, a4, a5);
}

void sub_1004B74E0()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  objc_super v6;

  v1 = v0;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCGetInfoErrorPresentingViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files39DOCGetInfoErrorPresentingViewController_errorViewController];
  v3 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v2);
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v2, "doc_dismissViewController");
  v5 = objc_msgSend(v2, "navigationItem");
  objc_msgSend(v5, "setRightBarButtonItem:", v4);

  objc_msgSend(v1, "doc_addChildWithEqualAutoresizingFrame:", v3);
}

void sub_1004B7634()
{
  uint64_t v0;

}

id sub_1004B7644()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCGetInfoErrorPresentingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1004B7684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;

  v11 = (unint64_t)_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v3; ++i)
    {
      v10 = *(_BYTE *)(a1 + i + 32);
      sub_1004B1BD0((uint64_t)&v10);
      if (v1)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v11);
        return;
      }
      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
        v8 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v7 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v8 >= v7 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
        v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8);
        specialized Array._endMutation()(v5);
      }
    }
    swift_bridgeObjectRelease(a1);
  }
}

Class sub_1004B77C4(uint64_t a1)
{
  char *v1;
  Class v3;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  objc_class *v9;
  _QWORD v10[5];
  uint64_t v11;

  if ((objc_msgSend(v1, "isEditing") & 1) != 0
    || objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration], "browserViewContext"))
  {
    return 0;
  }
  v3 = sub_1004B0F80(a1);
  if (v3)
  {
    v5 = swift_allocObject(&unk_1005F1C80, 24, 7);
    *(_QWORD *)(v5 + 16) = v3;
    v6 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v10[4] = sub_1000A71D8;
    v11 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1001B1644;
    v10[3] = &unk_1005F1C98;
    v7 = _Block_copy(v10);
    v8 = v11;
    v9 = v3;
    swift_retain();
    v3 = (Class)objc_msgSend(v6, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v7, swift_release(v8).n128_f64[0]);
    swift_release(v5);
    _Block_release(v7);

  }
  return v3;
}

uint64_t type metadata accessor for DOCGetInfoErrorPresentingViewController()
{
  return objc_opt_self(_TtC5Files39DOCGetInfoErrorPresentingViewController);
}

uint64_t sub_1004B7930()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1004B7958(uint64_t a1)
{
  uint64_t v1;

  return sub_1004B5BE8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(char **)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1004B7970()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004B79AC(uint64_t a1, uint64_t a2)
{
  return sub_1004B9508(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004B648C);
}

void sub_1004B79BC()
{
  uint64_t v0;

  sub_1004B8674(*(void **)(v0 + 48), *(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1004B79D4(uint64_t a1)
{
  return sub_1004B939C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004B58E0);
}

uint64_t sub_1004B79E0()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004B7A1C(uint64_t a1)
{
  return sub_1004B9470(a1, 0xD000000000000040, 0x800000010053BCB0, (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))sub_1004B4034);
}

uint64_t sub_1004B7A44(uint64_t a1)
{
  return sub_1004B939C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004B55A4);
}

uint64_t sub_1004B7A54(uint64_t a1)
{
  return sub_1004B7A60(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004B4BE4);
}

uint64_t sub_1004B7A60(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

void sub_1004B7A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;
  _QWORD v17[5];
  _QWORD *v18;

  v6 = swift_allocObject(&unk_1005F1EB0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v8 = objc_msgSend(v7, "newTrashCollection");

  v9 = objc_msgSend(objc_allocWithZone((Class)DOCItemCollectionObserver), "initWithItemCollection:", v8);
  v10 = *(void **)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver) = v9;
  v11 = v9;

  v12 = (_QWORD *)swift_allocObject(&unk_1005F1ED8, 48, 7);
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = sub_1004B9268;
  v12[5] = v6;
  v17[4] = sub_1004B929C;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100088118;
  v17[3] = &unk_1005F1EF0;
  v13 = _Block_copy(v17);
  v14 = v18;
  swift_retain();
  swift_retain();
  v15 = objc_msgSend(v11, "addSubscriber:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  v16 = *(void **)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber) = v15;
  swift_release(v6);

}

void sub_1004B7C28(char *a1, void *a2, void *a3)
{
  id v6;
  void *v7;
  uint64_t Strong;
  id v9;
  unint64_t v10;
  objc_class *v11;
  char *v12;
  char *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  _BYTE *v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  Class isa;
  id v28;
  id v29;
  id v30;
  _QWORD *v31;
  char *v32;
  id v33;
  id v34;
  char *v35;
  id v36;
  id v37;
  char *v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  void *v62;
  _QWORD v63[3];
  objc_super v64;
  objc_super v65;

  v6 = objc_msgSend(a1, "effectiveAppearance");
  v7 = *(void **)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
  v9 = v7;
  v10 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
  v11 = (objc_class *)type metadata accessor for DOCActionContext();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v6;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v9;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = a1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v10;
  v65.receiver = v12;
  v65.super_class = v11;
  v13 = a1;
  v14 = (char *)objc_msgSendSuper2(&v65, "init");
  v15 = *(void **)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
  v62 = v14;
  v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting];
  v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v18 = swift_allocObject(v17, 40, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v18 + 32) = a2;
  v63[0] = v18;
  specialized Array._endMutation()(v18);
  v19 = v63[0];
  v20 = (objc_class *)type metadata accessor for DOCServiceInfoViewController();
  v21 = objc_allocWithZone(v20);
  v21[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_configuration] = v15;
  v22 = objc_allocWithZone((Class)DOCItemInfoViewController);
  swift_unknownObjectRetain_n(v16, 2);
  v23 = v15;
  v24 = a2;
  v25 = v21;
  v26 = v23;
  sub_10006922C((uint64_t *)&unk_1006424B0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v22, "initWithNodes:configuration:actionReporting:", isa, v26, v16, swift_bridgeObjectRelease(v19).n128_f64[0]);

  swift_unknownObjectRelease(v16);
  *(_QWORD *)&v25[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] = v28;
  v29 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v28);
  *(_QWORD *)&v25[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController] = v29;
  objc_msgSend(v29, "_setBuiltinTransitionStyle:", 1);

  v64.receiver = v25;
  v64.super_class = v20;
  v30 = objc_msgSendSuper2(&v64, "init");

  swift_unknownObjectRelease(v16);
  v31 = (_QWORD *)swift_allocObject(&unk_1005F2158, 40, 7);
  v31[2] = v30;
  v31[3] = a3;
  v31[4] = v13;
  v32 = v13;
  v33 = v30;
  v34 = a3;
  v35 = v32;
  v36 = v33;
  v37 = v34;
  v38 = v35;
  v39 = v36;
  v40 = v37;
  v41 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v40);
  KeyPath = swift_getKeyPath(&unk_1004EB430);
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v41) + 0x78))(v63);
  swift_release(KeyPath);

  v43 = v63[0];
  swift_release(v63[0]);
  if (!v43)
  {
    v44 = swift_dynamicCastObjCProtocolConditional(v39, 1);
    if (v44)
    {
      v45 = v44;
      v46 = v39;
      v47 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v46);
      v48 = swift_getKeyPath(&unk_1004EB430);
      v49 = type metadata accessor for DOCPresentationPreheatController();
      v50 = swift_allocObject(v49, 41, 7);
      *(_QWORD *)(v50 + 16) = 0x3FE0000000000000;
      v51 = swift_unknownObjectWeakInit(v50 + 24);
      *(_QWORD *)(v50 + 32) = _swiftEmptyArrayStorage;
      *(_BYTE *)(v50 + 40) = 0;
      swift_unknownObjectWeakAssign(v51, v45);
      v63[0] = v50;
      (*(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v47) + 0x80))(v63, v48);

    }
  }
  v52 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v44);
  v53 = swift_getKeyPath(&unk_1004EB430);
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v52) + 0x78))(v63);
  swift_release(v53);

  v54 = (_QWORD *)v63[0];
  if (v63[0])
  {
    if (*(_BYTE *)(v63[0] + 40) == 2)
    {
      sub_1004B3820(v39, v40, v38);
    }
    else
    {
      v55 = swift_allocObject(&unk_1005F2180, 32, 7);
      *(_QWORD *)(v55 + 16) = sub_1004B95AC;
      *(_QWORD *)(v55 + 24) = v31;
      v56 = v54 + 4;
      swift_beginAccess(v54 + 4, v63, 33, 0);
      v57 = (_QWORD *)v54[4];
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v57);
      v54[4] = v57;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v57 = sub_10008190C(0, v57[2] + 1, 1, v57);
        *v56 = v57;
      }
      v60 = v57[2];
      v59 = v57[3];
      if (v60 >= v59 >> 1)
      {
        v57 = sub_10008190C((_QWORD *)(v59 > 1), v60 + 1, 1, v57);
        *v56 = v57;
      }
      v57[2] = v60 + 1;
      v61 = &v57[2 * v60];
      v61[4] = sub_10006657C;
      v61[5] = v55;
      swift_endAccess(v63);
      sub_1000E5CDC();
    }

    swift_release(v31);
    v31 = v54;
  }
  else
  {
    sub_1004B3820(v39, v40, v38);

  }
  swift_release(v31);

}

void sub_1004B81EC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *object;
  id v13;
  NSString v14;
  NSString v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  id v20;
  void *v21;
  uint64_t Strong;
  id v23;
  unint64_t v24;
  objc_class *v25;
  char *v26;
  char *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void (**v33)(_QWORD, _QWORD, _QWORD);
  Class isa;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;
  _QWORD aBlock[5];
  uint64_t v40;
  Swift::String v41;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDelete);
  v6 = v5;
  v7 = (id)_DocumentManagerBundle(v4);
  if (v7)
  {
    v8 = v7;
    v41._object = (void *)0x800000010052A1C0;
    v9._countAndFlagsBits = 0x41206574656C6544;
    v9._object = (void *)0xEA00000000006C6CLL;
    v10.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v10.value._object = (void *)0xEB00000000656C62;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v41._countAndFlagsBits = 0xD00000000000002FLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v41)._object;

    v13 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = sub_10011D0E4;
    v40 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100120C10;
    aBlock[3] = &unk_1005F1F68;
    v16 = _Block_copy(aBlock);
    v17 = objc_msgSend(v13, "initWithIdentifier:localizedTitle:unresolvedHandler:", v14, v15, v16);

    _Block_release(v16);
    swift_release(v40);
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v18);

    objc_msgSend(v17, "setImage:", v19);
    objc_msgSend(v17, "setAvailability:", 1);
    objc_msgSend(v17, "setNavigationSide:", 1);
    objc_msgSend(v17, "setMenuSortOrder:", 27);
    objc_msgSend(v17, "setActionStyle:", 1);
    objc_msgSend(v17, "setRequiresFullyFormedItems:", 0);
    v20 = objc_msgSend(a2, "effectiveAppearance");
    v21 = *(void **)&a2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
    v23 = v21;
    v24 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
    v25 = (objc_class *)type metadata accessor for DOCActionContext();
    v26 = (char *)objc_allocWithZone(v25);
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v20;
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v23;
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = a2;
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v24;
    v38.receiver = v26;
    v38.super_class = v25;
    v27 = a2;
    v28 = objc_msgSendSuper2(&v38, "init");
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v35 = a1;
      else
        v35 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v36 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v37 = _bridgeCocoaArray<A>(_:)(v35, v36);
      swift_bridgeObjectRelease(a1);
      a1 = v37;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v29);
    }
    if (objc_msgSend(v17, "requiresResolvedItems"))
    {
      v30 = v17;
      v31 = v28;
      sub_10035E100(a1, v30, v31);
      swift_bridgeObjectRelease(a1);

    }
    else
    {
      v32 = objc_msgSend(v17, "unresolvedHandler");
      if (!v32)
      {

        swift_bridgeObjectRelease(a1);
        goto LABEL_9;
      }
      v33 = (void (**)(_QWORD, _QWORD, _QWORD))v32;
      v31 = v28;
      _Block_copy(v33);
      sub_10006922C((uint64_t *)&unk_1006424B0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(_QWORD, Class, id))v33)[2](v33, isa, v31);

      _Block_release(v33);
      _Block_release(v33);
      swift_bridgeObjectRelease(a1);
    }

LABEL_9:
    return;
  }
  __break(1u);
}

void sub_1004B8674(void *a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void (*v20)(char *);
  id v21;
  NSObject *v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  id v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(id, _QWORD, _QWORD, char *, _QWORD, void (*)(uint64_t), char *, _QWORD, __n128, _QWORD);
  __n128 v50;
  __n128 v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint8_t *, uint64_t, __n128);
  char v69;
  id v70;
  uint64_t v71;
  id v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  id v83;
  char *v84;
  uint64_t v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  char *v94;
  char *v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  void (*v111)(uint64_t, uint8_t *, uint64_t, __n128);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  _QWORD *v116;
  uint64_t v117;
  int v118;
  char *v119;
  id v120;
  uint64_t v121;
  os_log_t v122;
  char *v123;
  uint8_t *v124;
  void (*v125)(uint64_t, uint8_t *, uint64_t, __n128);
  id v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  id v130;
  _QWORD v131[2];
  char v132;
  id v133;
  uint64_t v134;

  v9 = a5;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v17 = (char *)&v114 - v16;
  if (v9 != 1)
    return;
  v120 = v15;
  v121 = v14;
  v18 = a2;
  v19 = Logger.Rename.unsafeMutableAddressor(v18);
  v20 = *(void (**)(char *))(v11 + 16);
  v124 = (uint8_t *)v19;
  v20(v17);
  sub_1000E4F7C(a2, a3, a4, 1);
  sub_1000E4F7C(a2, a3, a4, 1);
  sub_1000E4F7C(a2, a3, a4, 1);
  v21 = a1;
  sub_1000E4F7C(a2, a3, a4, 1);
  v123 = (char *)v21;
  v22 = Logger.logObject.getter(v123);
  v23 = static os_log_type_t.error.getter(v22);
  v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  v128 = a2;
  v129 = a3;
  v126 = v18;
  v127 = v10;
  v125 = (void (*)(uint64_t, uint8_t *, uint64_t, __n128))v20;
  if (v24)
  {
    v117 = v11;
    v118 = v23;
    v122 = v22;
    v25 = swift_slowAlloc(32, -1);
    v26 = (_QWORD *)swift_slowAlloc(8, -1);
    v119 = (char *)swift_slowAlloc(64, -1);
    v130 = v119;
    *(_DWORD *)v25 = 138412802;
    v133 = v18;
    v115 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134);
    v116 = v26;
    *v26 = a2;
    sub_1000E4FD0(a2, a3, a4, 1);
    v27 = a4;
    sub_1000E4FD0(a2, a3, a4, 1);
    *(_WORD *)(v25 + 12) = 2080;
    v28 = v123;
    v29 = *(id *)(*(_QWORD *)&v123[OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection] + 16);
    if (v29)
      v29 = objc_msgSend(v29, "sourceIdentifier");
    v30 = v115;
    v133 = v29;
    v31 = sub_10006922C((uint64_t *)&unk_10064D870);
    v32 = String.init<A>(describing:)(&v133, v31);
    v34 = v33;
    v133 = (id)sub_1000544FC(v32, v33, (uint64_t *)&v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134);

    *(_QWORD *)&v35 = swift_bridgeObjectRelease(v34).n128_u64[0];
    *(_WORD *)(v25 + 22) = 2080;
    v133 = objc_msgSend(v30, "identifier", v35);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v37 = String.init<A>(describing:)(&v133, v36);
    v39 = v38;
    v133 = (id)sub_1000544FC(v37, v38, (uint64_t *)&v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134);
    swift_bridgeObjectRelease(v39);
    a2 = v128;
    a3 = v129;
    sub_1000E4FD0(v128, v129, v27, 1);
    sub_1000E4FD0(a2, a3, v27, 1);
    v40 = v122;
    _os_log_impl((void *)&_mh_execute_header, v122, (os_log_type_t)v118, "[Erase] Source: %@ current sidebar selection: %s source location: %s ", (uint8_t *)v25, 0x20u);
    v41 = sub_10006922C(&qword_100643AB0);
    v42 = v116;
    swift_arrayDestroy(v116, 1, v41);
    swift_slowDealloc(v42, -1, -1);
    v43 = v119;
    swift_arrayDestroy(v119, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    v10 = v127;
    v122 = *(os_log_t *)(v117 + 8);
    ((void (*)(char *, uint64_t))v122)(v17, v127);
    v18 = v126;
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, 1);
    sub_1000E4FD0(a2, a3, a4, 1);
    v44 = v123;

    sub_1000E4FD0(a2, a3, a4, 1);
    sub_1000E4FD0(a2, a3, a4, 1);

    v122 = *(os_log_t *)(v11 + 8);
    ((void (*)(char *, uint64_t))v122)(v17, v10);
    v27 = a4;
    v28 = v44;
  }
  v45 = (char *)swift_allocObject(&unk_1005F1E10, 32, 7);
  *((_QWORD *)v45 + 2) = v18;
  *((_QWORD *)v45 + 3) = v28;
  sub_1000E4F7C(a2, a3, v27, 1);
  v46 = (char *)v28;
  v47 = DOCUSBFormatting.shared.unsafeMutableAddressor(v46);
  v48 = *(_QWORD *)v47;
  v49 = *(void (**)(id, _QWORD, _QWORD, char *, _QWORD, void (*)(uint64_t), char *, _QWORD, __n128, _QWORD))(**(_QWORD **)v47 + 104);
  v50 = swift_retain();
  v49(v18, 0, 0, v46, 0, sub_1004B9180, v45, 0, v50, 0);
  v51 = swift_release(v48);
  v52 = &v46[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem];
  v53 = v46[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24];
  v123 = v45;
  if (v53 == 255)
  {
    v120 = 0;
    v68 = v125;
  }
  else
  {
    v119 = v46;
    v55 = *((_QWORD *)v52 + 1);
    v54 = *((_QWORD *)v52 + 2);
    v56 = *(id *)v52;
    sub_1000E4F7C(*(id *)v52, v55, v54, v53);
    sub_100201260((uint64_t)v56, v55, v54, v53);
    v58 = v57;
    sub_1000B1664(v56, v55, v54, v53);
    v59 = objc_msgSend(v58, "sourceIdentifier");

    v60 = v59;
    v61 = objc_msgSend(v18, "identifier");
    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    v64 = v63;
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v67 = v65;
    if (v62 == v66 && v64 == v65)
    {

      swift_bridgeObjectRelease_n(v64, 2);
LABEL_13:
      v70 = v120;
      v71 = v127;
      ((void (*)(id, uint8_t *, uint64_t))v125)(v120, v124, v127);
      v72 = v60;
      v73 = Logger.logObject.getter(v72);
      v74 = static os_log_type_t.debug.getter(v73);
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc(12, -1);
        v130 = (id)swift_slowAlloc(32, -1);
        v125 = (void (*)(uint64_t, uint8_t *, uint64_t, __n128))v27;
        v76 = v130;
        *(_DWORD *)v75 = 136315138;
        v124 = v75 + 4;
        v133 = v72;
        type metadata accessor for DOCDocumentSourceIdentifier(0);
        v78 = v77;
        v79 = v72;
        v80 = String.init<A>(describing:)(&v133, v78);
        v82 = v81;
        v133 = (id)sub_1000544FC(v80, v81, (uint64_t *)&v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134);

        swift_bridgeObjectRelease(v82);
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "[Erase] Erase requested when the current sidebar selection is the drive to be erased. Marking for reselection when the drive reappears location: %s", v75, 0xCu);
        swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
        v83 = v76;
        v27 = (uint64_t)v125;
        swift_slowDealloc(v83, -1, -1);
        swift_slowDealloc(v75, -1, -1);

      }
      else
      {

      }
      ((void (*)(id, uint64_t))v122)(v70, v71);
      v84 = v123;
      v86 = v128;
      v85 = v129;
      v87 = objc_msgSend(v126, "identifier");
      v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
      v90 = v89;

      sub_100236F8C(v88, v90);
      sub_1000E4FD0(v86, v85, v27, 1);
      swift_bridgeObjectRelease(v90);
      swift_release(v84);

      return;
    }
    v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v64, v66, v65, 0);

    swift_bridgeObjectRelease(v64);
    swift_bridgeObjectRelease(v67);
    if ((v69 & 1) != 0)
      goto LABEL_13;
    v120 = v60;

    v10 = v127;
    v68 = v125;
    v46 = v119;
  }
  v91 = v121;
  v68(v121, v124, v10, v51);
  v93 = v128;
  v92 = v129;
  sub_1000E4F7C(v128, v129, v27, 1);
  v94 = v46;
  sub_1000E4F7C(v93, v92, v27, 1);
  v95 = v94;
  v96 = Logger.logObject.getter(v95);
  v97 = static os_log_type_t.debug.getter(v96);
  if (os_log_type_enabled(v96, v97))
  {
    v98 = swift_slowAlloc(22, -1);
    v125 = (void (*)(uint64_t, uint8_t *, uint64_t, __n128))swift_slowAlloc(64, -1);
    v133 = v125;
    *(_DWORD *)v98 = 136315394;
    v99 = *((_QWORD *)v52 + 1);
    v100 = *((_QWORD *)v52 + 2);
    v101 = v52[24];
    v130 = *(id *)v52;
    v131[0] = v99;
    v131[1] = v100;
    v132 = v101;
    sub_1000B1650(v130, v99, v100, v101);
    v102 = sub_10006922C(&qword_10064C778);
    v103 = String.init<A>(describing:)(&v130, v102);
    v105 = v104;
    v130 = (id)sub_1000544FC(v103, v104, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, v131);

    *(_QWORD *)&v106 = swift_bridgeObjectRelease(v105).n128_u64[0];
    *(_WORD *)(v98 + 12) = 2080;
    v130 = objc_msgSend(v126, "identifier", v106);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v108 = String.init<A>(describing:)(&v130, v107);
    v110 = v109;
    v130 = (id)sub_1000544FC(v108, v109, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, v131);
    swift_bridgeObjectRelease(v110);
    sub_1000E4FD0(v93, v92, v27, 1);
    sub_1000E4FD0(v93, v92, v27, 1);
    _os_log_impl((void *)&_mh_execute_header, v96, v97, "[Erase] Erase requested when the current sidebar selection is NOT the drive to be erased. Current selection ID: %s Drive to be erased ID: %s ", (uint8_t *)v98, 0x16u);
    v111 = v125;
    swift_arrayDestroy(v125, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v111, -1, -1);
    swift_slowDealloc(v98, -1, -1);

    swift_release(v123);
    sub_1000E4FD0(v93, v92, v27, 1);
    v112 = v121;
    v113 = v127;
  }
  else
  {
    sub_1000E4FD0(v93, v92, v27, 1);

    swift_release(v123);
    sub_1000E4FD0(v93, v92, v27, 1);
    sub_1000E4FD0(v93, v92, v27, 1);

    v112 = v91;
    v113 = v10;
  }
  ((void (*)(uint64_t, uint64_t))v122)(v112, v113);
}

uint64_t sub_1004B9154()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004B9180(uint64_t a1)
{
  uint64_t v1;

  sub_1004B4250(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1004B9188()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

double sub_1004B91BC()
{
  uint64_t v0;

  return sub_1004B4318(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1004B91C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1000E4FD0(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));

  return swift_deallocObject(v0, 88, 7);
}

double sub_1004B920C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004B6554(a1, *(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t sub_1004B9244()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004B9268()
{
  uint64_t v0;

  sub_1004B377C(v0);
}

uint64_t sub_1004B9270()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004B929C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

uint64_t sub_1004B92D4()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004B9310(uint64_t a1)
{
  return sub_1004B7A60(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004B6A04);
}

uint64_t sub_1004B931C()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1004B9348(uint64_t a1)
{
  uint64_t v1;

  return sub_1004B6730(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_1004B935C()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004B9390(uint64_t a1)
{
  return sub_1004B939C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004B6CF4);
}

uint64_t sub_1004B939C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1004B93B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004B93E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B9410()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004B944C(uint64_t a1)
{
  return sub_1004B9470(a1, 0xD000000000000016, 0x800000010053BF70, (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))sub_1004B4954);
}

uint64_t sub_1004B9470(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  return sub_1004B71CC(a1, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(unsigned __int8 *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), a2, a3, a4);
}

id sub_1004B94AC()
{
  uint64_t v0;

  return sub_1004B4ADC(*(char **)(v0 + 16));
}

uint64_t sub_1004B94B8()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004B94FC(uint64_t a1, uint64_t a2)
{
  return sub_1004B9508(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004B6128);
}

uint64_t sub_1004B9508(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64));
}

uint64_t sub_1004B9540()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1004B956C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004B3448(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1004B9578()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_1004B95AC()
{
  void **v0;

  return sub_1004B3820(v0[2], v0[3], v0[4]);
}

uint64_t sub_1004B95BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  swift_errorRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004B95F8()
{
  uint64_t v0;

  return sub_1004B3524(*(uint64_t (**)(uint64_t, uint64_t, double))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1004B9608()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_errorRelease(*(_QWORD *)(v0 + 72));

  return swift_deallocObject(v0, 88, 7);
}

void sub_1004B965C()
{
  uint64_t v0;

  sub_1004B6248(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(char **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t _s14descr1005F22C9V17ContextMenuActionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1004B96DC + 4 * byte_1004EB3F5[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1004B9710 + 4 * byte_1004EB3F0[v4]))();
}

uint64_t sub_1004B9710(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B9718(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004B9720);
  return result;
}

uint64_t sub_1004B972C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004B9734);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1004B9738(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B9740(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1005F22C9V17ContextMenuActionOMa()
{
  return &_s14descr1005F22C9V17ContextMenuActionON;
}

unint64_t sub_1004B9760()
{
  unint64_t result;

  result = qword_100658970;
  if (!qword_100658970)
  {
    result = swift_getWitnessTable(&unk_1004EB4B4, &_s14descr1005F22C9V17ContextMenuActionON);
    atomic_store(result, (unint64_t *)&qword_100658970);
  }
  return result;
}

uint64_t sub_1004B97F4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v5 = *(void **)(v0 + 48);
  v6 = *(void **)(v0 + 56);
  v7 = *(void **)(v0 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 104));
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t destroy for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1)
{

  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 64));
}

uint64_t initializeWithCopy for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  __int128 v18;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v18 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v18;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  swift_unknownObjectRetain(v18);
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  v22 = *(void **)(a1 + 48);
  v23 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v23;
  v24 = v23;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v25 = *(_QWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 72);
  v27 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v25;
  swift_unknownObjectRetain(v25);
  swift_unknownObjectRelease(v27);
  *(_QWORD *)(a1 + 72) = v26;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 64));
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionContainerDataSourceConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 82))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionContainerDataSourceConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 82) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 82) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionContainerDataSourceConfiguration()
{
  return &type metadata for DOCItemCollectionContainerDataSourceConfiguration;
}

uint64_t sub_1004B9BDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

_QWORD *sub_1004B9BE4(unint64_t a1)
{
  return sub_100019858(a1, (uint64_t (*)(_QWORD))type metadata accessor for DOCItemCollectionCell);
}

_QWORD *sub_1004B9BF0(unint64_t a1)
{
  return sub_10007B918(a1, FPItem_ptr);
}

_QWORD *sub_1004B9BFC(unint64_t a1)
{
  return sub_100019858(a1, type metadata accessor for DOCColumnViewController);
}

uint64_t sub_1004B9C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t result;

  v0 = type metadata accessor for FilesViewBridge();
  v1 = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(v1 + 16) = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  type metadata accessor for AppManager(0);
  v2 = static AppManager.shared.getter();
  sub_100062658(&qword_100658B98, v3, (uint64_t (*)(uint64_t))type metadata accessor for FilesViewBridge, (uint64_t)&unk_1004EB578);
  v4 = swift_retain();
  AppManager.addBridge(_:)(v4);
  swift_release(v2);
  result = swift_release(v1);
  qword_100672F18 = v1;
  return result;
}

uint64_t sub_1004B9CC0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_1004B9D2C, v3, v4);
}

void sub_1004B9D2C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + 16), "allObjects");
  v2 = sub_10006922C(&qword_100658B78);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);
  *(_QWORD *)(v0 + 56) = v3;

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v8 = v3;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v3);
    *(_QWORD *)(v0 + 64) = v4;
    if (v4)
      goto LABEL_3;
LABEL_12:
    v9 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease(v3);
    v10 = swift_release(v9);
    (*(void (**)(_QWORD *, __n128))(v0 + 8))(_swiftEmptyArrayStorage, v10);
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)(v0 + 64) = v4;
  if (!v4)
    goto LABEL_12;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 72) = 0;
    v5 = *(_QWORD *)(v0 + 56);
    if ((v5 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    }
    else
    {
      v6 = *(_QWORD *)(v5 + 32);
      swift_unknownObjectRetain(v6);
    }
    *(_QWORD *)(v0 + 80) = v6;
    v7 = (_QWORD *)swift_task_alloc(dword_100658B84);
    *(_QWORD *)(v0 + 88) = v7;
    *v7 = v0;
    v7[1] = sub_1004B9E88;
    sub_1004BB204(v6);
  }
}

uint64_t sub_1004B9E88(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1004B9EE0, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1004B9EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72) + 1;
  sub_100130E38(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease(v1);
  if (v3 == v2)
  {
    v4 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    v5 = swift_release(v4);
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 16), v5);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 72) + 1;
    *(_QWORD *)(v0 + 72) = v7;
    v8 = *(_QWORD *)(v0 + 56);
    if ((v8 & 0xC000000000000001) != 0)
    {
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v8);
    }
    else
    {
      v9 = *(_QWORD *)(v8 + 8 * v7 + 32);
      swift_unknownObjectRetain(v9);
    }
    *(_QWORD *)(v0 + 80) = v9;
    v10 = (_QWORD *)swift_task_alloc(dword_100658B84);
    *(_QWORD *)(v0 + 88) = v10;
    *v10 = v0;
    v10[1] = sub_1004B9E88;
    return sub_1004BB204(v9);
  }
}

void sub_1004B9FBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  uint64_t v19;
  id v20;
  void **aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v20 = a2;
  v7 = sub_10006922C((uint64_t *)&unk_100658B88);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = swift_allocObject(&unk_1005F24A0, 32, 7);
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v25 = sub_1004BB7AC;
  v26 = v10;
  aBlock = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_1004BA6BC;
  v24 = &unk_1005F24B8;
  v11 = _Block_copy(&aBlock);
  v12 = v26;
  swift_retain();
  swift_retain();
  v13 = swift_release(v12);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7, v13);
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_1005F24F0, v15 + v9, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v25 = sub_1004BB818;
  v26 = v16;
  aBlock = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_10004A82C;
  v24 = &unk_1005F2508;
  v17 = _Block_copy(&aBlock);
  *(_QWORD *)&v18 = swift_release(v26).n128_u64[0];
  objc_msgSend(v20, "filesIntentsEnumerateNodes::", v11, v17, v18);
  _Block_release(v17);
  _Block_release(v11);
}

void sub_1004BA178(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  double v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t *v56;
  id v57;
  char *v58;
  uint64_t v59[5];
  uint64_t v60;
  uint64_t v61;

  v54 = a4;
  v50 = a3;
  v51 = a2;
  v5 = type metadata accessor for ViewLocation(0);
  __chkstk_darwin(v5);
  v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for ViewEntityIdentifier(0);
  v7 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v58 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v49 - v11;
  v13 = type metadata accessor for AppEntityVisualState(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v49 - v18;
  v20 = type metadata accessor for DOCFileEntity(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (_QWORD *)type metadata accessor for Logger(0);
  v56 = (unint64_t *)*(v23 - 1);
  v57 = v23;
  v24 = __chkstk_darwin(v23);
  v55 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = objc_msgSend(a1, "fpfs_fpItem", v24);
  if (v26)
  {
    v27 = v13;
    v28 = (unint64_t *)(v50 + 16);
    v57 = v26;
    sub_10012BCCC(v57, (uint64_t)v22);
    AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(v51 & 1, 0, 0, 0, 0, 0);
    v59[3] = v20;
    v59[4] = sub_100062658((unint64_t *)&qword_100643D40, 255, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
    v29 = sub_10006CBAC(v59);
    sub_1000EACB4((uint64_t)v22, (uint64_t)v29);
    v30 = v27;
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v27);
    v32 = v52;
    static ViewLocation.unknown.getter(v31);
    ViewEntityIdentifier.init(for:interactionId:location:state:)(v59, 0, v32, v16);
    v33 = v53;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v58, v12, v53);
    swift_beginAccess(v28, v59, 33, 0);
    v34 = *v28;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v28);
    v56 = v28;
    *v28 = v34;
    v49 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v34 = sub_100154D9C(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
      *v56 = v34;
    }
    v36 = (_QWORD *)(v54 + 16);
    v38 = *(_QWORD *)(v34 + 16);
    v37 = *(_QWORD *)(v34 + 24);
    if (v38 >= v37 >> 1)
    {
      v34 = sub_100154D9C(v37 > 1, v38 + 1, 1, v34);
      *v56 = v34;
    }
    *(_QWORD *)(v34 + 16) = v38 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v34+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v38, v58, v33);
    swift_endAccess(v59);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v33);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v30);
    sub_1000EACF8((uint64_t)v22);
    swift_beginAccess(v36, v59, 1, 0);
    if (__OFADD__(*v36, 1))
      __break(1u);
    else
      ++*v36;
  }
  else
  {
    v39 = Logger.AppIntents.unsafeMutableAddressor(0);
    ((void (*)(char *, uint64_t, id))v56[2])(v55, v39, v57);
    v40 = swift_unknownObjectRetain_n(a1, 2);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v59[0] = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = objc_msgSend(a1, "description");
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v48 = v47;

      v60 = sub_1000544FC(v46, v48, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Can not get FPItem out of DOCNode: %s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
    }
    ((void (*)(char *, id))v56[1])(v55, v57);
  }
}

uint64_t sub_1004BA6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v6 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = swift_unknownObjectRetain(a2);
  v6(v7, a3);
  swift_release(v5);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_1004BA70C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100658B74);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004BA750;
  return sub_1004B9CC0();
}

uint64_t sub_1004BA750(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1004BA7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BA80C, v2, v3);
}

uint64_t sub_1004BA80C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_1004BA848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BA8B0, v2, v3);
}

uint64_t sub_1004BA8B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_1004BA8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BA954, v2, v3);
}

uint64_t sub_1004BA954()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BA988()
{
  uint64_t v0;

  return sub_1004BB1F0(*(uint64_t (**)(uint64_t))(v0 + 8), v0, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1004BA9A0(uint64_t a1)
{
  _QWORD *v1;

  return AppViewBridge.registerAnnotation(_:)(a1, *v1);
}

uint64_t sub_1004BA9A8(uint64_t a1)
{
  _QWORD *v1;

  return AppViewBridge.unregisterAnnotation(_:)(a1, *v1);
}

uint64_t sub_1004BA9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;

  v11 = *v5;
  v12 = (_QWORD *)swift_task_alloc(async function pointer to AppViewBridge.actionForScene(executionIdentifier:completed:)[1]);
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1004BB858;
  return AppViewBridge.actionForScene(executionIdentifier:completed:)(a1, a2, a3, v11, a5);
}

uint64_t sub_1004BAA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;

  v11 = *v5;
  v12 = (_QWORD *)swift_task_alloc(async function pointer to AppViewBridge.actionForScene(executionIdentifier:completed:)[1]);
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1004BAAB0;
  return AppViewBridge.actionForScene(executionIdentifier:completed:)(a1, a2, a3, v11, a5);
}

uint64_t sub_1004BAAB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t DOCItemCollectionViewController.filesIntentsDebugDescription.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "debugDescription");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

void DOCItemCollectionViewController.filesIntentsEnumerateNodes(_:_:)(void (*a1)(uint64_t, _QWORD), uint64_t a2, void (*a3)(__n128))
{
  uint64_t v3;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  char v36;
  unint64_t v37;
  id v38;
  Swift::Int v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  char v47;
  unint64_t v48;
  id v49;
  __n128 v50;
  void (*v51)(__n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v6 = sub_100034068(0);
  v7 = sub_10007B918((unint64_t)v6, FPItem_ptr);
  swift_bridgeObjectRelease(v6);
  if (v7)
    v8 = v7;
  else
    v8 = _swiftEmptyArrayStorage;
  sub_1000D0454((uint64_t)v8);
  v10 = v9;
  swift_bridgeObjectRelease(v8);
  v11 = sub_100034068(0);
  v12 = sub_10007B918((unint64_t)v11, FINode_ptr);
  swift_bridgeObjectRelease(v11);
  if (v12)
    v13 = v12;
  else
    v13 = _swiftEmptyArrayStorage;
  sub_1000D05F4((uint64_t)v13);
  v15 = v14;
  swift_bridgeObjectRelease(v13);
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    v56 = v10;
    v51 = a3;
    v16 = sub_10004FD50();
    v53 = v15;
    v57 = v16;
    if ((unint64_t)v16 >> 62)
      goto LABEL_48;
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
      do
      {
        v18 = 0;
        v54 = a2;
        v55 = v56 + 56;
        v52 = v53 + 56;
        while ((v57 & 0xC000000000000001) != 0)
        {
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v57);
          v20 = v16;
          v21 = __OFADD__(v18++, 1);
          if (v21)
            goto LABEL_46;
LABEL_19:
          v22 = objc_opt_self(FPItem);
          v23 = swift_dynamicCastObjCClass(v20, v22);
          if (v23)
          {
            v24 = v23;
            if ((v56 & 0xC000000000000001) != 0)
              goto LABEL_24;
            if (*(_QWORD *)(v56 + 16))
            {
              v28 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v56 + 40));
              v29 = -1 << *(_BYTE *)(v56 + 32);
              v30 = v28 & ~v29;
              if (((*(_QWORD *)(v55 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
              {
                sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
                v31 = *(id *)(*(_QWORD *)(v56 + 48) + 8 * v30);
                v32 = static NSObject.== infix(_:_:)(v31, v24);

                if ((v32 & 1) == 0)
                {
                  v33 = ~v29;
                  v34 = (v30 + 1) & v33;
                  if (((*(_QWORD *)(v55 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
                    goto LABEL_44;
                  v35 = *(id *)(*(_QWORD *)(v56 + 48) + 8 * v34);
                  v36 = static NSObject.== infix(_:_:)(v35, v24);

                  if ((v36 & 1) == 0)
                  {
                    v37 = (v34 + 1) & v33;
                    if (((*(_QWORD *)(v55 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
                      goto LABEL_44;
                    while (1)
                    {
                      v38 = *(id *)(*(_QWORD *)(v56 + 48) + 8 * v37);
                      v19 = static NSObject.== infix(_:_:)(v38, v24);

                      if ((v19 & 1) != 0)
                        goto LABEL_45;
                      v37 = (v37 + 1) & v33;
                      a2 = v54;
                      if (((*(_QWORD *)(v55 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
                        goto LABEL_12;
                    }
                  }
                }
LABEL_39:
                v19 = 1;
                a2 = v54;
                goto LABEL_12;
              }
            }
          }
          else
          {
            v25 = objc_opt_self(FINode);
            v26 = swift_dynamicCastObjCClass(v20, v25);
            if (v26)
            {
              v27 = v26;
              if ((v53 & 0xC000000000000001) != 0)
              {
LABEL_24:
                v19 = __CocoaSet.contains(_:)();
                goto LABEL_12;
              }
              if (*(_QWORD *)(v53 + 16))
              {
                v39 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v53 + 40));
                v40 = -1 << *(_BYTE *)(v53 + 32);
                v41 = v39 & ~v40;
                if (((*(_QWORD *)(v52 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
                {
                  sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
                  v42 = *(id *)(*(_QWORD *)(v53 + 48) + 8 * v41);
                  v43 = static NSObject.== infix(_:_:)(v42, v27);

                  if ((v43 & 1) == 0)
                  {
                    v44 = ~v40;
                    v45 = (v41 + 1) & v44;
                    if (((*(_QWORD *)(v52 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
                      goto LABEL_44;
                    v46 = *(id *)(*(_QWORD *)(v53 + 48) + 8 * v45);
                    v47 = static NSObject.== infix(_:_:)(v46, v27);

                    if ((v47 & 1) == 0)
                    {
                      v48 = (v45 + 1) & v44;
                      if (((*(_QWORD *)(v52 + ((v48 >> 3) & 0xFFFFFFFFFFFFF8)) >> v48) & 1) != 0)
                      {
                        while (1)
                        {
                          v49 = *(id *)(*(_QWORD *)(v53 + 48) + 8 * v48);
                          v19 = static NSObject.== infix(_:_:)(v49, v27);

                          if ((v19 & 1) != 0)
                            goto LABEL_45;
                          v48 = (v48 + 1) & v44;
                          a2 = v54;
                          if (((*(_QWORD *)(v52 + ((v48 >> 3) & 0xFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
                            goto LABEL_12;
                        }
                      }
LABEL_44:
                      v19 = 0;
LABEL_45:
                      a2 = v54;
                      goto LABEL_12;
                    }
                  }
                  goto LABEL_39;
                }
              }
            }
          }
          v19 = 0;
LABEL_12:
          a1(v20, v19 & 1);
          swift_unknownObjectRelease(v20);
          if (v18 == v17)
            goto LABEL_51;
        }
        if (v18 >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_47;
        v20 = *(_QWORD *)(v57 + 32 + 8 * v18);
        v16 = swift_unknownObjectRetain(v20);
        v21 = __OFADD__(v18++, 1);
        if (!v21)
          goto LABEL_19;
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        if (v16 >= 0)
          v16 &= 0xFFFFFFFFFFFFFF8uLL;
        v16 = _CocoaArrayWrapper.endIndex.getter(v16);
        v17 = v16;
      }
      while (v16);
    }
LABEL_51:
    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v57);
    v50 = swift_bridgeObjectRelease(v53);
    v51(v50);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for FilesViewBridge()
{
  return objc_opt_self(_TtC5Files15FilesViewBridge);
}

uint64_t sub_1004BB1B4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BB1D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1004BB1F0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1004BB204(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[11] = a1;
  v2 = type metadata accessor for Logger(0);
  v1[12] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[13] = v3;
  v1[14] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[15] = v4;
  v1[16] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[17] = v5;
  v1[18] = v6;
  return swift_task_switch(sub_1004BB29C, v5, v6);
}

uint64_t sub_1004BB29C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = v0[11];
  v2 = swift_allocObject(&unk_1005F2450, 24, 7);
  v0[19] = v2;
  *(_QWORD *)(v2 + 16) = _swiftEmptyArrayStorage;
  v3 = swift_allocObject(&unk_1005F2478, 24, 7);
  v0[20] = v3;
  *(_QWORD *)(v3 + 16) = 0;
  v4 = (void *)objc_opt_self(NSDate);
  v0[21] = v4;
  v5 = objc_msgSend(v4, "timeIntervalSinceReferenceDate");
  v0[22] = v6;
  v7 = static MainActor.shared.getter(v5);
  v0[23] = v7;
  v8 = (_QWORD *)swift_task_alloc(48);
  v0[24] = v8;
  v8[2] = v1;
  v8[3] = v2;
  v8[4] = v3;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[25] = v9;
  *v9 = v0;
  v9[1] = sub_1004BB3C4;
  return withCheckedContinuation<A>(isolation:function:_:)(v9, v7, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x800000010053C100, sub_1004BB774, v8, &type metadata for ()[8]);
}

uint64_t sub_1004BB3C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 192);
  v3 = *(_QWORD *)(*v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*v0 + 200));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1004BB42C, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_1004BB42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  __n128 v13;
  double v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  os_log_type_t type;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v3 = (_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = v3[2];
  v5 = v3[3];
  v7 = v3[1];
  swift_release(v3[5]);
  v9 = Logger.AppIntents.unsafeMutableAddressor(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v7);
  swift_unknownObjectRetain_n(v2, 2);
  swift_retain_n(v4, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v14 = *(double *)(v1 + 176);
    v15 = *(_QWORD *)(v1 + 160);
    v36 = *(id *)(v1 + 168);
    v38 = *(_QWORD *)(v1 + 104);
    v16 = *(void **)(v1 + 88);
    v39 = *(_QWORD *)(v1 + 96);
    v40 = *(_QWORD *)(v1 + 112);
    v34 = v16;
    v17 = swift_slowAlloc(32, -1);
    v37 = swift_slowAlloc(32, -1);
    v41 = v37;
    *(_DWORD *)v17 = 136315650;
    v18 = objc_msgSend(v16, "filesIntentsDebugDescription");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(v1 + 64) = sub_1000544FC(v19, v21, &v41);
    type = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 64, v1 + 72);
    swift_bridgeObjectRelease(v21);
    swift_unknownObjectRelease_n(v34, 2);
    *(_WORD *)(v17 + 12) = 2048;
    swift_beginAccess(v15 + 16, v1 + 40, 0, 0);
    v22 = *(_QWORD *)(v15 + 16);
    swift_release(v15);
    *(_QWORD *)(v1 + 72) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 72, v1 + 80);
    *(_QWORD *)&v23 = swift_release(v15).n128_u64[0];
    *(_WORD *)(v17 + 22) = 2048;
    objc_msgSend(v36, "timeIntervalSinceReferenceDate", v23);
    *(double *)(v1 + 80) = v24 - v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v3);
    _os_log_impl((void *)&_mh_execute_header, v11, type, "FilesIntentsViewAnnotationDelegate: %s, enumerated %ld notes in %f s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v39);
  }
  else
  {
    v26 = *(_QWORD *)(v1 + 104);
    v25 = *(_QWORD *)(v1 + 112);
    v27 = *(_QWORD *)(v1 + 88);
    v28 = *(_QWORD *)(v1 + 96);
    swift_release_n(*(_QWORD *)(v1 + 160), 2, v13);
    swift_unknownObjectRelease_n(v27, 2);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v28);
  }
  v30 = *(_QWORD *)(v1 + 152);
  v29 = *(_QWORD *)(v1 + 160);
  v31 = *(_QWORD *)(v1 + 112);
  swift_beginAccess(v30 + 16, v1 + 16, 0, 0);
  v32 = *(_QWORD *)(v30 + 16);
  swift_bridgeObjectRetain(v32);
  swift_release(v29);
  swift_release(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v32);
}

uint64_t sub_1004BB740()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BB764()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004BB774(uint64_t a1)
{
  uint64_t v1;

  sub_1004B9FBC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1004BB780()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004BB7AC(void *a1, int a2)
{
  uint64_t v2;

  sub_1004BA178(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1004BB7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10006922C((uint64_t *)&unk_100658B88);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004BB818()
{
  uint64_t v0;

  v0 = sub_10006922C((uint64_t *)&unk_100658B88);
  return CheckedContinuation.resume(returning:)(v0, v0);
}

uint64_t *sub_1004BB860()
{
  uint64_t *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;
  sub_100087534(v0[4], v0[5]);
  sub_100087534(v0[6], v0[7]);
  v2 = (char *)v0 + *(_QWORD *)(*v0 + 128);
  v3 = type metadata accessor for Optional(0, *(_QWORD *)(v1 + 80));
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 144)));
  return v0;
}

uint64_t sub_1004BB8D4()
{
  id *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;

  v1 = objc_msgSend(*v0, "shortDescription");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v5._countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  return 0x20646E65707061;
}

id sub_1004BB95C()
{
  qword_100658BA0 = *(_QWORD *)DOCLog.UI.unsafeMutableAddressor();
  return (id)qword_100658BA0;
}

uint64_t sub_1004BB97C(char *a1, char *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  void (*v33)(char *, uint64_t);
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  Swift::String v56;
  uint64_t v57;
  unint64_t v58;
  __n128 v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66[24];
  char v67[24];

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v61 - v10;
  v12 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100086BF0();
  *(_QWORD *)v18 = static OS_dispatch_queue.main.getter(v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v20 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_hierarchyController]
      + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
  swift_beginAccess(v21, v67, 0, 0);
  v22 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)
    && *(_BYTE *)(v21 + *(int *)(v22 + 20)) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v14, 1, 1, v22);
    sub_1001D67F8((uint64_t)v14);
  }
  v18 = 0x20646E65707061;
  v24 = &v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
  v25 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
  v26 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange + 8];
  *(_QWORD *)v24 = a1;
  *((_QWORD *)v24 + 1) = a2;
  v27 = a2;
  a2 = a1;
  sub_100146170(v25, v26);
  Date.init()(v28);
  a1 = &v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_timestampOfLastLocationChangeAttempt];
  v29 = swift_beginAccess(&v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_timestampOfLastLocationChangeAttempt], v66, 0, 0);
  v30 = v62;
  v31 = v63;
  (*(void (**)(char *, char *, uint64_t, __n128))(v62 + 16))(v8, a1, v63, v29);
  v32 = Date.timeIntervalSince(_:)(v8);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v8, v31);
  v33(v11, v31);
  v34 = objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v3, "performPendingLocationChange", 0);
  if (v32 < 0.5)
  {
    v35 = objc_msgSend(v3, "performSelector:withObject:afterDelay:", "performPendingLocationChange", 0);
    if (qword_100641230 == -1)
    {
LABEL_7:
      v36 = qword_100658BA0;
      v37 = static os_log_type_t.debug.getter(v35);
      v38 = sub_10006922C((uint64_t *)&unk_100644560);
      v39 = swift_allocObject(v38, 72, 7);
      *(_OWORD *)(v39 + 16) = xmmword_1004D9670;
      v64 = v18;
      v65 = 0xE700000000000000;
      v40 = objc_msgSend(a2, "shortDescription");
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      v44._countAndFlagsBits = v41;
      v44._object = v43;
      String.append(_:)(v44);
      swift_bridgeObjectRelease(v43);
      v45 = v64;
      v46 = v65;
      *(_QWORD *)(v39 + 56) = &type metadata for String;
      *(_QWORD *)(v39 + 64) = sub_10006A638();
      *(_QWORD *)(v39 + 32) = v45;
      *(_QWORD *)(v39 + 40) = v46;
      os_log(_:dso:log:type:_:)("Scheduled location change '%@'. #pacer", 38, 2, &_mh_execute_header, v36, v37, v39);
      swift_bridgeObjectRelease(v39);
      goto LABEL_11;
    }
LABEL_13:
    v35 = (id)swift_once(&qword_100641230, sub_1004BB95C);
    goto LABEL_7;
  }
  if (qword_100641230 != -1)
    v34 = (id)swift_once(&qword_100641230, sub_1004BB95C);
  v48 = qword_100658BA0;
  v49 = static os_log_type_t.debug.getter(v34);
  v50 = sub_10006922C((uint64_t *)&unk_100644560);
  v51 = swift_allocObject(v50, 72, 7);
  *(_OWORD *)(v51 + 16) = xmmword_1004D9670;
  v64 = 0x20646E65707061;
  v65 = 0xE700000000000000;
  v52 = objc_msgSend(a2, "shortDescription");
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v55 = v54;

  v56._countAndFlagsBits = v53;
  v56._object = v55;
  String.append(_:)(v56);
  swift_bridgeObjectRelease(v55);
  v57 = v64;
  v58 = v65;
  *(_QWORD *)(v51 + 56) = &type metadata for String;
  *(_QWORD *)(v51 + 64) = sub_10006A638();
  *(_QWORD *)(v51 + 32) = v57;
  *(_QWORD *)(v51 + 40) = v58;
  os_log(_:dso:log:type:_:)("Performing location change right away: '%@'. #pacer", 51, 2, &_mh_execute_header, v48, v49, v51);
  swift_bridgeObjectRelease(v51);
  sub_1004BBE98();
LABEL_11:
  Date.init()(v47);
  v59 = swift_beginAccess(a1, &v64, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v62 + 40))(a1, v11, v63, v59);
  return swift_endAccess(&v64);
}

void sub_1004BBE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  id v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __n128 v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BYTE v56[24];
  _BYTE v57[24];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v53 - v7;
  v9 = v1 + OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange);
  if (v10)
  {
    v11 = *(void **)(v9 + 8);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files22DOCLocationChangePacer_hierarchyController);
    v13 = v12 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
    swift_beginAccess(v12 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v57, 0, 0);
    sub_1004BCCBC(v13, (uint64_t)v4);
    v14 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v4, 1, v14) == 1)
    {
      v17 = v12 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
      swift_beginAccess(v12 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation, v56, 0, 0);
      sub_1004BCCBC(v17, (uint64_t)v8);
      v18 = v11;
      v19 = v10;
      sub_1004BCD04((uint64_t)v4);
    }
    else
    {
      sub_1000AC0A0((uint64_t)v4, (uint64_t)v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
      v22 = v11;
      v23 = v10;
    }
    if (v16(v8, 1, v14) == 1)
    {
      v24 = sub_1004BCD04((uint64_t)v8);
    }
    else
    {
      v25 = v8[*(int *)(v14 + 24)];
      v24 = sub_1000AC064((uint64_t)v8);
      if ((v25 & 1) != 0)
      {
        if (qword_100641230 != -1)
          v24 = swift_once(&qword_100641230, sub_1004BB95C);
        v26 = qword_100658BA0;
        v27 = static os_log_type_t.debug.getter(v24);
        os_log(_:dso:log:type:_:)("Previous started location change still not done, will defer this location change. #pacer", 88, 2, &_mh_execute_header, v26, v27, _swiftEmptyArrayStorage);
        goto LABEL_22;
      }
    }
    v53 = v12;
    if (qword_100641230 != -1)
      v24 = swift_once(&qword_100641230, sub_1004BB95C);
    v28 = qword_100658BA0;
    v29 = static os_log_type_t.debug.getter(v24);
    v30 = sub_10006922C((uint64_t *)&unk_100644560);
    v31 = swift_allocObject(v30, 72, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004D9670;
    v54 = 0x20646E65707061;
    v55 = 0xE700000000000000;
    v32 = objc_msgSend(v10, "shortDescription");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36._countAndFlagsBits = v33;
    v36._object = v35;
    String.append(_:)(v36);
    swift_bridgeObjectRelease(v35);
    v37 = v54;
    v38 = v55;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = sub_10006A638();
    *(_QWORD *)(v31 + 32) = v37;
    *(_QWORD *)(v31 + 40) = v38;
    os_log(_:dso:log:type:_:)("Pacer about to perform location change: '%@'. #pacer", 52, 2, &_mh_execute_header, v28, v29, v31);
    swift_bridgeObjectRelease(v31);
    v39 = swift_allocObject(&unk_1005F27E8, 24, 7);
    swift_unknownObjectWeakInit(v39 + 16);
    v40 = (_QWORD *)swift_allocObject(&unk_1005F2810, 40, 7);
    v40[2] = v39;
    v40[3] = v10;
    v40[4] = v11;
    if (v11)
    {
      v41 = (uint64_t *)(v53 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
      swift_beginAccess(v53 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, &v54, 0, 0);
      v42 = *v41;
      sub_100146144(v10, v11);
      v43 = v10;
      v44 = v11;
      swift_bridgeObjectRetain(v42);
      v45 = sub_10008979C((uint64_t)v44, v42);
      swift_bridgeObjectRelease(v42);
      if ((v45 & 1) == 0)
      {
        v47 = qword_100658BA0;
        v48 = static os_log_type_t.debug.getter(v46);
        os_log(_:dso:log:type:_:)("Discarding append operation, since no longer valid. #pacer", 58, 2, &_mh_execute_header, v47, v48, _swiftEmptyArrayStorage);
        swift_release(v40);

LABEL_21:
        v51 = *(void **)v9;
        v52 = *(void **)(v9 + 8);
        *(_QWORD *)v9 = 0;
        *(_QWORD *)(v9 + 8) = 0;
        sub_100146170(v51, v52);
LABEL_22:
        sub_100146170(v10, v11);
        return;
      }
    }
    else
    {
      sub_100146144(v10, 0);
      v49 = v10;
      v44 = 0;
    }
    swift_retain();
    sub_1001E024C(v10, v11, 1, 1, 1, (uint64_t)sub_1004BCD9C, (uint64_t)v40);

    swift_release_n(v40, 2, v50);
    goto LABEL_21;
  }
  if (qword_100641230 != -1)
    v6 = swift_once(&qword_100641230, sub_1004BB95C);
  v20 = qword_100658BA0;
  v21 = static os_log_type_t.debug.getter(v6);
  os_log(_:dso:log:type:_:)("No remaining pending location changes. #pacer", 45, 2, &_mh_execute_header, v20, v21, _swiftEmptyArrayStorage);
}

void sub_1004BC3AC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  _BYTE v21[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (qword_100641230 != -1)
      Strong = swift_once(&qword_100641230, sub_1004BB95C);
    v6 = qword_100658BA0;
    v7 = static os_log_type_t.debug.getter(Strong);
    v8 = sub_10006922C((uint64_t *)&unk_100644560);
    v9 = swift_allocObject(v8, 72, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
    v10 = objc_msgSend(a2, "shortDescription");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14._countAndFlagsBits = v11;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(v13);
    *(_QWORD *)(v9 + 56) = &type metadata for String;
    *(_QWORD *)(v9 + 64) = sub_10006A638();
    *(_QWORD *)(v9 + 32) = 0x20646E65707061;
    *(_QWORD *)(v9 + 40) = 0xE700000000000000;
    os_log(_:dso:log:type:_:)("Done changing location: '%@'. #pacer", 36, 2, &_mh_execute_header, v6, v7, v9);
    swift_bridgeObjectRelease(v9);
    v15 = *(void **)&v5[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
    if (v15)
    {
      v16 = *(void **)&v5[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange + 8];
      v17 = qword_100658BA0;
      v18 = v16;
      v19 = v15;
      v20 = static os_log_type_t.debug.getter(v19);
      os_log(_:dso:log:type:_:)("Will re-request any deferred location change. #pacer", 52, 2, &_mh_execute_header, v17, v20, _swiftEmptyArrayStorage);
      sub_1004BB97C(v19, v16);

      sub_100146170(v15, v16);
    }
    else
    {

    }
  }
}

id sub_1004BC5F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCLocationChangePacer(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

_BYTE *sub_1004BC690@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004BC69C(uint64_t a1)
{
  uint64_t WitnessTable;
  unint64_t v3;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a1);
  v3 = sub_1004BCC78();
  return OptionSet<>.init()(a1, WitnessTable, v3);
}

uint64_t sub_1004BC6EC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a2);
  return OptionSet<>.contains(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1004BC72C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a2);
  return OptionSet.union(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1004BC774(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a2);
  return OptionSet.intersection(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1004BC7BC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a2);
  return OptionSet.symmetricDifference(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1004BC804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a3);
  return OptionSet<>.insert(_:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1004BC850(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a2);
  return OptionSet<>.remove(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1004BC898(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a2);
  return OptionSet<>.update(with:)(a1, a2, WitnessTable);
}

uint64_t sub_1004BC8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004BC904(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))&OptionSet<>.formUnion(_:));
}

uint64_t sub_1004BC8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004BC904(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))&OptionSet<>.formIntersection(_:));
}

uint64_t sub_1004BC8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004BC904(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))&OptionSet<>.formSymmetricDifference(_:));
}

uint64_t sub_1004BC904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t WitnessTable;
  unint64_t v7;

  WitnessTable = swift_getWitnessTable(&unk_1004EB944, a2);
  v7 = sub_1004BCC78();
  return a4(a1, a2, WitnessTable, v7);
}

unsigned __int8 *sub_1004BC978@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004BC988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB844, a3);
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for UInt8);
}

uint64_t sub_1004BC9DC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1004EB87C, a2);
  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, WitnessTable);
}

id *sub_1004BCA24()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;

  v2 = (char *)v0 + *((_QWORD *)*v0 + 13);
  v3 = type metadata accessor for Optional(0, v1[10]);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1004BCA80()
{
  id *v0;

  v0 = sub_1004BCA24();
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_1004BCAA0()
{
  uint64_t v0;

  sub_1004BB860();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004BCAC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1004EB6A0;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1004EB708;
    result = swift_initClassMetadata2(a1, 0, 3, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCValueChangePacer.CoalescingSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCValueChangePacer.CoalescingSession);
}

uint64_t sub_1004BCB54(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004BCBA0 + 4 * byte_1004EB615[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004BCBD4 + 4 * byte_1004EB610[v4]))();
}

uint64_t sub_1004BCBD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BCBDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004BCBE4);
  return result;
}

uint64_t sub_1004BCBF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004BCBF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004BCBFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BCC04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for DOCValueChangePacer.ValueContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCValueChangePacer.ValueContext);
}

uint64_t type metadata accessor for DOCValueChangePacer.Behaviors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCValueChangePacer.Behaviors);
}

ValueMetadata *type metadata accessor for DOCLocationChange()
{
  return &type metadata for DOCLocationChange;
}

uint64_t sub_1004BCC38(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1004EB81C, a1);
}

uint64_t sub_1004BCC48(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1004EB7EC, a1);
}

uint64_t sub_1004BCC58(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1004EB844, a1);
}

uint64_t sub_1004BCC68(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1004EB87C, a1);
}

unint64_t sub_1004BCC78()
{
  unint64_t result;

  result = qword_100658DF8;
  if (!qword_100658DF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt8, &type metadata for UInt8);
    atomic_store(result, (unint64_t *)&qword_100658DF8);
  }
  return result;
}

uint64_t sub_1004BCCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_1006443D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004BCD04(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C((uint64_t *)&unk_1006443D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004BCD44()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BCD68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1004BCD9C()
{
  uint64_t v0;

  sub_1004BC3AC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1004BCDA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;

  v0 = sub_10006922C(&qword_100658E00);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1004D9670;
  result = sub_1004BCE50();
  *(_QWORD *)(v1 + 32) = &type metadata for DocumentManagerExecutablesIntentsPackage;
  *(_QWORD *)(v1 + 40) = result;
  qword_100672F20 = v1;
  return result;
}

double sub_1004BCE00()
{
  double result;

  if (qword_100641238 != -1)
    swift_once(&qword_100641238, sub_1004BCDA8);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100672F20).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for FilesAppIntentsPackage()
{
  return &type metadata for FilesAppIntentsPackage;
}

unint64_t sub_1004BCE50()
{
  unint64_t result;

  result = qword_100658E08;
  if (!qword_100658E08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DocumentManagerExecutablesIntentsPackage, &type metadata for DocumentManagerExecutablesIntentsPackage);
    atomic_store(result, (unint64_t *)&qword_100658E08);
  }
  return result;
}

void sub_1004BCE94()
{
  void *v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  unint64_t v5;
  __n128 v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  __n128 v13;
  void *v14;
  id v15;
  id v16;

  v1 = v0;
  v2 = swift_allocObject(&unk_1005F2A60, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = (objc_class *)type metadata accessor for UIAppIntentInteraction(0);
  v4 = objc_allocWithZone(v3);
  v5 = sub_1004BEA38();
  v6 = swift_retain();
  v7 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for SetFilenameExtensionVisibilityIntent, &unk_100658EA8, v2, &type metadata for SetFilenameExtensionVisibilityIntent, v5, v6);
  v8 = objc_msgSend(v1, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "addInteraction:", v7);
    swift_release(v2);

    v10 = swift_allocObject(&unk_1005F2A60, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = objc_allocWithZone(v3);
    v12 = sub_1004BEAE0();
    v13 = swift_retain();
    v14 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for SetGroupingModeIntent, &unk_100658EC0, v10, &type metadata for SetGroupingModeIntent, v12, v13);
    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "addInteraction:", v14);
      swift_release(v10);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1004BD020(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  objc_class *v34;
  id v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;

  v53 = a1;
  v2 = type metadata accessor for DOCFileEntity(0);
  v51 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v51 + 64);
  __chkstk_darwin(v2);
  v52 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v54 = (uint64_t)&v51 - v5;
  v6 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v11 = v1;
  v12 = static MainActor.shared.getter(v11);
  v13 = (_QWORD *)swift_allocObject(&unk_1005F29E8, 40, 7);
  v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = v11;
  v14 = sub_100174E78((uint64_t)v8, (uint64_t)&unk_100658E38, (uint64_t)v13);
  swift_release(v14);
  v15 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction;
  v16 = *(void **)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction];
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v11, "loadViewIfNeeded");
    v18 = *(void **)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v18)
    {
      __break(1u);
      goto LABEL_17;
    }
    objc_msgSend(v18, "removeInteraction:", v17);
    v19 = *(void **)&v11[v15];
    *(_QWORD *)&v11[v15] = 0;

  }
  v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction;
  v21 = *(void **)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction];
  if (!v21)
    goto LABEL_7;
  v22 = v21;
  objc_msgSend(v11, "loadViewIfNeeded");
  v23 = *(void **)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v23, "removeInteraction:", v22);
  v24 = *(void **)&v11[v20];
  *(_QWORD *)&v11[v20] = 0;

LABEL_7:
  if (!v53)
    return;
  v25 = v53;
  v26 = v54;
  sub_10012BCCC(v25, v54);
  v10(v8, 1, 1, v9);
  v27 = v52;
  sub_1000EACB4(v26, v52);
  v28 = v11;
  v29 = static MainActor.shared.getter(v28);
  v30 = *(unsigned __int8 *)(v51 + 80);
  v31 = (v30 + 40) & ~v30;
  v32 = (_QWORD *)swift_allocObject(&unk_1005F2A10, v31 + v3, v30 | 7);
  v32[2] = v29;
  v32[3] = &protocol witness table for MainActor;
  v32[4] = v28;
  sub_10011154C(v27, (uint64_t)v32 + v31);
  v33 = sub_100174E78((uint64_t)v8, (uint64_t)&unk_100658E48, (uint64_t)v32);
  swift_release(v33);
  v34 = (objc_class *)type metadata accessor for UIAppIntentInteraction(0);
  v35 = objc_allocWithZone(v34);
  v36 = sub_1002A2C80();
  v38 = UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for CreateFolderIntent, &unk_100658E50, 0, &type metadata for CreateFolderIntent, v36, v37);
  v39 = *(void **)&v11[v15];
  *(_QWORD *)&v11[v15] = v38;

  v40 = *(void **)&v11[v15];
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v28, "loadViewIfNeeded");
    v42 = *(void **)&v28[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v42)
    {
      objc_msgSend(v42, "addInteraction:", v41);

      goto LABEL_11;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_11:
  v43 = objc_allocWithZone(v34);
  v44 = sub_1000EA624();
  v46 = UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for DeleteFilesIntent, &unk_100658E60, 0, &type metadata for DeleteFilesIntent, v44, v45);
  v47 = *(void **)&v11[v20];
  *(_QWORD *)&v11[v20] = v46;

  v48 = *(void **)&v11[v20];
  if (v48)
  {
    v49 = v48;
    objc_msgSend(v28, "loadViewIfNeeded");
    v50 = *(void **)&v28[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v50)
    {
      objc_msgSend(v50, "addInteraction:", v49);

      sub_1000EACF8(v54);
      return;
    }
    goto LABEL_19;
  }
  sub_1000EACF8(v54);

}

uint64_t sub_1004BD410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DOCFileEntity(0);
  v5[4] = v6;
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_100648490);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BD4C4, v9, v10);
}

id sub_1004BD4C4()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(v0 + 16), "view", swift_release(*(_QWORD *)(v0 + 56)).n128_f64[0]);
  if (result)
  {
    v2 = result;
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 32);
    sub_1000EACB4(*(_QWORD *)(v0 + 24), v4);
    v6 = sub_100063368();
    EntityIdentifier.init<A>(for:)(v4, v5, v6);
    v7 = type metadata accessor for EntityIdentifier(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 0, 1, v7);
    UIView.appEntityIdentifier.setter(v3);

    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004BD58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = sub_10006922C((uint64_t *)&unk_100648490);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BD61C, v7, v8);
}

id sub_1004BD61C()
{
  uint64_t v0;
  char *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = *(char **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  result = objc_msgSend(v1, "loadViewIfNeeded");
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 24);
    v5 = type metadata accessor for EntityIdentifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    v6 = v3;
    UIView.appEntityIdentifier.setter(v4);

    swift_task_dealloc(v4);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004BD6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DOCFileEntity(0);
  v5[4] = v6;
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_100648490);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BD76C, v9, v10);
}

id sub_1004BD76C()
{
  uint64_t v0;
  char *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;

  v1 = *(char **)(v0 + 16);
  result = objc_msgSend(v1, "loadViewIfNeeded", swift_release(*(_QWORD *)(v0 + 56)).n128_f64[0]);
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 32);
    sub_1000EACB4(*(_QWORD *)(v0 + 24), v5);
    v7 = sub_100063368();
    v8 = v3;
    EntityIdentifier.init<A>(for:)(v5, v6, v7);
    v9 = type metadata accessor for EntityIdentifier(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    UIView.appEntityIdentifier.setter(v4);

    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004BD84C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(a2 + 16);
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 48) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = v5;
  return swift_task_switch(sub_1004BD8C8, v4, v5);
}

uint64_t sub_1004BD8C8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = (_QWORD *)v0[2];
  v1[3] = sub_10006922C(&qword_100658E70);
  v1[4] = sub_1004BE8E8((unint64_t *)&unk_100658E78, &qword_100658E70);
  v2 = sub_10006CBAC(v1);
  v3 = (_QWORD *)swift_task_alloc(dword_10064C74C);
  v0[9] = v3;
  *v3 = v0;
  v3[1] = sub_1004BD954;
  return sub_1002A30D4((uint64_t)v2, v0[3], v0[4], v0[5]);
}

uint64_t sub_1004BD954()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1004BD9B4;
  else
    v4 = sub_10042CE10;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1004BD9B4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  sub_100322258(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BD9F4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v2[2] = a1;
  v2[3] = v3;
  v4 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v2[5] = v5;
  v2[6] = v6;
  return swift_task_switch(sub_1004BDA64, v5, v6);
}

uint64_t sub_1004BDA64()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = (_QWORD *)v0[2];
  v1[3] = sub_10006922C((uint64_t *)&unk_10064EBC0);
  v1[4] = sub_1004BE8E8(&qword_100643340, (uint64_t *)&unk_10064EBC0);
  v2 = sub_10006CBAC(v1);
  v3 = (_QWORD *)swift_task_alloc(dword_10064334C);
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_1004BDAEC;
  return sub_1000EA134((uint64_t)v2, v0[3]);
}

uint64_t sub_1004BDAEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1004BDB80;
  else
    v4 = sub_1004BDB4C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1004BDB4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BDB80()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  sub_100322258(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BDBC0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[5] = a1;
  v3[6] = a3;
  v3[7] = *a2;
  v4 = type metadata accessor for MainActor(0);
  v3[8] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BDC34, v5, v6);
}

uint64_t sub_1004BDC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD **)(v0 + 40);
    sub_1004BDD1C();
    v4[3] = sub_10006922C((uint64_t *)&unk_10064EBC0);
    v4[4] = sub_1004BE8E8(&qword_100643340, (uint64_t *)&unk_10064EBC0);
    v5 = sub_10006CBAC(v4);
    static IntentResult.result<>()(v5);

  }
  else
  {
    v6 = sub_100322214();
    v7 = swift_allocError(&type metadata for DOCAppIntentsGenericError, v6, 0, 0);
    *v8 = 0;
    swift_willThrow(v7);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004BDD1C()
{
  uint64_t v0;

  IntentParameter.wrappedValue.getter(&v0);
  if ((_BYTE)v0)
  {
    if (v0 == 1)
    {
      if (qword_1006410A8 != -1)
        swift_once(&qword_1006410A8, sub_1000AA544);
      objc_msgSend(*(id *)(qword_100672D18 + 40), "setForceDisplayFilenameExtensions:", 1);
    }
    else
    {
      if (qword_1006410A8 != -1)
        swift_once(&qword_1006410A8, sub_1000AA544);
      objc_msgSend(*(id *)(qword_100672D18 + 40), "setForceDisplayFilenameExtensions:", 0);
    }
  }
  else
  {
    if (qword_1006410A8 != -1)
      swift_once(&qword_1006410A8, sub_1000AA544);
    objc_msgSend(*(id *)(qword_100672D18 + 40), "setForceDisplayFilenameExtensions:", objc_msgSend(*(id *)(qword_100672D18 + 40), "forceDisplayFilenameExtensions") ^ 1);
  }
  sub_100095BFC();
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
}

uint64_t sub_1004BDE48(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[5] = a1;
  v3[6] = a3;
  v3[7] = *a2;
  v4 = type metadata accessor for MainActor(0);
  v3[8] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004BDEBC, v5, v6);
}

uint64_t sub_1004BDEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 72));
    v4 = *(_QWORD **)(v0 + 40);
    DOCItemCollectionViewController.groupOption(changeTo:)(0x604000507uLL >> (8 * *(_BYTE *)(v0 + 72)));
    v4[3] = sub_10006922C((uint64_t *)&unk_10064EBC0);
    v4[4] = sub_1004BE8E8(&qword_100643340, (uint64_t *)&unk_10064EBC0);
    v5 = sub_10006CBAC(v4);
    static IntentResult.result<>()(v5);

  }
  else
  {
    v6 = sub_100322214();
    v7 = swift_allocError(&type metadata for DOCAppIntentsGenericError, v6, 0, 0);
    *v8 = 0;
    swift_willThrow(v7);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BDFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for Logger(0);
  v6[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[7] = v8;
  v6[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[9] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[10] = v10;
  v6[11] = v11;
  return swift_task_switch(sub_1004BE060, v10, v11);
}

uint64_t sub_1004BE060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[5];
  v2 = v0[3];
  sub_100062E3C(v0[4], v1);
  v4 = v3;
  v5 = type metadata accessor for SiriVocabulary.Corpus(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = SiriVocabulary.Corpus.init(contents:capacity:)(v4, v1, 0);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus) = v6;
  swift_release(v7);
  v8 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D9B40;
  v10 = sub_100099578();
  *(_QWORD *)(v9 + 32) = v10;
  specialized Array._endMutation()(v10);
  v0[12] = v9;
  v11 = (_QWORD *)swift_task_alloc(async function pointer to static SiriVocabulary.setCorporaByPriority(_:)[1]);
  v0[13] = v11;
  *v11 = v0;
  v11[1] = sub_1004BE154;
  return static SiriVocabulary.setCorporaByPriority(_:)(v9);
}

uint64_t sub_1004BE154()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1004BE1F8;
  }
  else
  {
    swift_bridgeObjectRelease(v2[12]);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1004BE1C0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1004BE1C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BE1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(v2);
  v7 = Logger.AppIntents.unsafeMutableAddressor(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v4);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 112);
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v11);
    v14 = _swift_stdlib_bridgeErrorToNSError(v11);
    *(_QWORD *)(v0 + 16) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    *v13 = v14;
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Dynamic donation to Siri Vocabulary failed with error: %@.", v12, 0xCu);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v11);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 112);
    swift_errorRelease(v16);
    swift_errorRelease(v16);
    swift_errorRelease(v16);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BE3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[5] = v7;
  v5[6] = v8;
  return swift_task_switch(sub_1004BE430, v7, v8);
}

uint64_t sub_1004BE430()
{
  unint64_t *v0;
  unint64_t v1;

  sub_100062E3C(v0[3], 500);
  v0[7] = v1;
  v0[8] = sub_100099578();
  return swift_task_switch(sub_1004BE47C, 0, 0);
}

uint64_t sub_1004BE47C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t (*)(), uint64_t);

  v1 = v0[7];
  v2 = swift_allocObject(&unk_1005F29C0, 24, 7);
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = *((unsigned int *)&async function pointer to dispatch thunk of SiriVocabulary.Corpus.change(_:) + 1);
  v6 = (uint64_t (*)(uint64_t (*)(), uint64_t))((char *)&async function pointer to dispatch thunk of SiriVocabulary.Corpus.change(_:)
                                                      + async function pointer to dispatch thunk of SiriVocabulary.Corpus.change(_:));
  swift_retain();
  swift_bridgeObjectRetain(v1);
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_1004BE52C;
  return v6(sub_100347F40, v2);
}

uint64_t sub_1004BE52C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004BE5E0;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 64);
    swift_release(*(_QWORD *)(v2 + 72));
    swift_release(v5);
    v4 = sub_1004BE5A0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004BE5A0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[8];
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v1);
  return swift_task_switch(sub_1004BDB4C, v0[5], v0[6]);
}

uint64_t sub_1004BE5E0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[8];
  swift_release(v0[9]);
  swift_release(v1);
  return swift_task_switch(sub_1004BE620, v0[5], v0[6]);
}

uint64_t sub_1004BE620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(v1);
  swift_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004BE668()
{
  return sub_10001EDC4(48);
}

uint64_t sub_1004BE670(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100658E1C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100118844;
  return sub_1004BE3C4(a1, v4, v5, v7, v6);
}

uint64_t sub_1004BE6E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BE70C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004BE738(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100658E34);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100118844;
  return sub_1004BD58C(a1, v4, v5, v6);
}

uint64_t sub_1004BE7A4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for DOCFileEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v7 = v0 + v4;
  v8 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + v1[5]));
  swift_release(*(_QWORD *)(v7 + v1[6]));

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004BE854(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DOCFileEntity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_100658E44);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA854;
  return sub_1004BD6B8(a1, v5, v6, v7, v8);
}

uint64_t sub_1004BE8E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10007E830(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004BE928()
{
  return sub_10001EDC4(56);
}

uint64_t sub_1004BE930(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_100658E8C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_100118844;
  return sub_1004BDFC8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1004BE9B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BE9D4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_100658EA4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100118844;
  return sub_1004BDBC0(a1, a2, v2);
}

unint64_t sub_1004BEA38()
{
  unint64_t result;

  result = qword_100658EB0;
  if (!qword_100658EB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetFilenameExtensionVisibilityIntent, &type metadata for SetFilenameExtensionVisibilityIntent);
    atomic_store(result, &qword_100658EB0);
  }
  return result;
}

uint64_t sub_1004BEA7C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_100658EBC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1000EA854;
  return sub_1004BDE48(a1, a2, v2);
}

unint64_t sub_1004BEAE0()
{
  unint64_t result;

  result = qword_100658EC8;
  if (!qword_100658EC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetGroupingModeIntent, &type metadata for SetGroupingModeIntent);
    atomic_store(result, (unint64_t *)&qword_100658EC8);
  }
  return result;
}

_UNKNOWN **static DOCNamedLocation.allCases.getter()
{
  return &off_1005C0610;
}

uint64_t static DOCNamedLocation.from(location:)(uint64_t a1, unint64_t a2)
{
  return sub_1004BEB70(a1, a2);
}

unint64_t DOCNamedLocation.init(rawValue:)(unint64_t a1)
{
  return sub_1002C74F0(a1);
}

void sub_1004BEB60(_QWORD *a1@<X8>)
{
  *a1 = &off_1005C1170;
}

uint64_t sub_1004BEB70(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::String v8;
  void *object;
  void *v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String.lowercased()();
  if (v8._countAndFlagsBits == 0x746E656D75636F64 && v8._object == (void *)0xE900000000000073)
  {
    object = (void *)0xE900000000000073;
LABEL_6:
    swift_bridgeObjectRelease(object);
    return 0;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E656D75636F64, 0xE900000000000073, v8._countAndFlagsBits, v8._object, 0) & 1) != 0)
  {
    object = v8._object;
    goto LABEL_6;
  }
  if (v8._countAndFlagsBits == 0x706F746B736564 && v8._object == (void *)0xE700000000000000)
  {
    v11 = (void *)0xE700000000000000;
LABEL_12:
    swift_bridgeObjectRelease(v11);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x706F746B736564, 0xE700000000000000, v8._countAndFlagsBits, v8._object, 0) & 1) != 0)
  {
    v11 = v8._object;
    goto LABEL_12;
  }
  if (v8._countAndFlagsBits == 0x64616F6C6E776F64 && v8._object == (void *)0xE900000000000073)
  {
    v12 = (void *)0xE900000000000073;
LABEL_18:
    swift_bridgeObjectRelease(v12);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64616F6C6E776F64, 0xE900000000000073, v8._countAndFlagsBits, v8._object, 0) & 1) != 0)
  {
    v12 = v8._object;
    goto LABEL_18;
  }
  if (v8._countAndFlagsBits == 0x726464756F6C6369 && v8._object == (void *)0xEB00000000657669)
  {
    swift_bridgeObjectRelease(0xEB00000000657669);
    return 3;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0x726464756F6C6369, 0xEB00000000657669, v8._countAndFlagsBits, v8._object, 0);
  swift_bridgeObjectRelease(v8._object);
  if ((v13 & 1) != 0)
    return 3;
  v15 = Logger.UI.unsafeMutableAddressor(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v23 = v20;
    *(_DWORD *)v19 = 136315138;
    v21[1] = v19 + 4;
    swift_bridgeObjectRetain(a2);
    v22 = sub_1000544FC(a1, a2, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Can not create a named location from provided string: %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

unint64_t sub_1004BEF44()
{
  unint64_t result;

  result = qword_100658EE0;
  if (!qword_100658EE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCNamedLocation, &type metadata for DOCNamedLocation);
    atomic_store(result, (unint64_t *)&qword_100658EE0);
  }
  return result;
}

unint64_t sub_1004BEF8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100658EE8;
  if (!qword_100658EE8)
  {
    v1 = sub_10007E830(&qword_10064D5B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100658EE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNamedLocation()
{
  return &type metadata for DOCNamedLocation;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC5FilesP33_04D7258AA0B07FC95A8628004266451019ResourceBundleClass);
}

void sub_1004BF008(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_1000B7820(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "displayName"));
  sub_1000B780C((void *)&_mh_execute_header, v5, v6, "user did download node %@", v7, v8, v9, v10, 2u);

  sub_1000B782C();
}

void sub_1004BF08C(uint64_t a1, void *a2, uint64_t a3)
{
  void *v4;
  NSObject *v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  uint64_t v10;

  v4 = *(void **)(a1 + 32);
  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "displayName"));
  v7 = 138412546;
  v8 = v6;
  v9 = 2112;
  v10 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error downloading item %@: %@", (uint8_t *)&v7, 0x16u);

}

void sub_1004BF148(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_1000B7820(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "displayName"));
  sub_1000B780C((void *)&_mh_execute_header, v5, v6, "user did evict node %@", v7, v8, v9, v10, 2u);

  sub_1000B782C();
}

void sub_1004BF1CC(_QWORD *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  __int16 v9;
  void *v10;
  __int16 v11;
  uint64_t v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "hierarchyController"));
  v5 = a1[12];
  v7 = 138412802;
  v8 = a1;
  v9 = 2048;
  v10 = v4;
  v11 = 2048;
  v12 = v5;
  sub_1000B9298((void *)&_mh_execute_header, v3, v6, "Initializing the %@ with hierarchy controller %p and data source %p", (uint8_t *)&v7);

}

void sub_1004BF294(uint64_t a1, NSObject *a2)
{
  const __CFString *v2;
  int v3;
  uint64_t v4;
  __int16 v5;
  const __CFString *v6;

  v2 = CFSTR("YES");
  if (a1)
    v2 = CFSTR("NO");
  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Will show location %@, or empty location, if nil (%@)", (uint8_t *)&v3, 0x16u);
}

void sub_1004BF32C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  uint8_t v6[12];
  __int16 v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  sub_1000B92A4();
  v7 = v3;
  v8 = v4;
  if (v5)
    v1 = v2;
  v9 = v3;
  v10 = v1;
  sub_1000B9298((void *)&_mh_execute_header, v0, (uint64_t)v0, "Will show location %@ (from root, animated: %@), or empty location, if nil (%@)", v6);
}

void sub_1004BF3BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  uint8_t v6[12];
  __int16 v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  sub_1000B92A4();
  v7 = v3;
  v8 = v4;
  if (v5)
    v1 = v2;
  v9 = v3;
  v10 = v1;
  sub_1000B9298((void *)&_mh_execute_header, v0, (uint64_t)v0, "Will reveal location %@ (from root, animated: %@), or empty location, if nil (%@)", v6);
}

void sub_1004BF44C(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  unsigned int v17;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "lastObject"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "lastObject"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fileProviderItem"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "lastObject"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "sourceIdentifier"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "lastObject"));
  v10 = 138413058;
  v11 = v4;
  v12 = 2112;
  v13 = v6;
  v14 = 2112;
  v15 = v8;
  v16 = 1024;
  v17 = objc_msgSend(v9, "isFPV2");
  _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Last location is %@: item %@, source identifier %@, isFPV2 %d", (uint8_t *)&v10, 0x26u);

}

void sub_1004BF588(void *a1, uint64_t a2)
{
  NSObject *v3;
  objc_class *v4;
  NSString *v5;
  void *v6;
  int v7;
  void *v8;

  v3 = a1;
  v4 = (objc_class *)objc_opt_class(a2);
  v5 = NSStringFromClass(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = 138412290;
  v8 = v6;
  _os_log_fault_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "ERROR(performance): %@'s view was loaded during init", (uint8_t *)&v7, 0xCu);

}

void sub_1004BF630(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error getting item from URL: %@ error: %@", (uint8_t *)&v3, 0x16u);
}

void sub_1004BF6B4(uint64_t a1, void *a2)
{
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  void *v10;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "displayName"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "displayName"));
  v7 = 138412546;
  v8 = v5;
  v9 = 2112;
  v10 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "User did delete tag %@ on item %@", (uint8_t *)&v7, 0x16u);

}

void sub_1004BF784(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  uint64_t v14;

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "displayName"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "displayName"));
  v9 = 138412802;
  v10 = v7;
  v11 = 2112;
  v12 = v8;
  v13 = 2112;
  v14 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to delete tag %@ on item %@. Error: %@", (uint8_t *)&v9, 0x20u);

}

uint64_t sub_1004BF860()
{
  uint64_t v0;

  v0 = abort_report_np("Unable to find class %s", "DSNSHelperContext");
  return sub_1004BF884(v0);
}

void sub_1004BF884(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000C35DC((void *)&_mh_execute_header, a1, a3, "Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", a5, a6, a7, a8, 0);
}

void sub_1004BF8B8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Cleaning tabbed browser from map table for identifier: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1004BF92C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2048;
  v6 = a2;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%@ Couldn't find DOCTab (%lu) index", (uint8_t *)&v3, 0x16u);
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImage");
}

id objc_msgSend_DOCColumnViewControllerUpdatedNavigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "DOCColumnViewControllerUpdatedNavigationItem");
}

id objc_msgSend_DOCTabBarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "DOCTabBarItem");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend__UIPTabInfrastructureEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_UIPTabInfrastructureEnabled");
}

id objc_msgSend__activeTransitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeTransitionCoordinator");
}

id objc_msgSend__addSubscriberForConfiguration_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscriberForConfiguration:usingBlock:");
}

id objc_msgSend__appearState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appearState");
}

id objc_msgSend__arrangeSidebarForCollapsedPresentationForced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrangeSidebarForCollapsedPresentationForced:");
}

id objc_msgSend__canNavigateBack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canNavigateBack");
}

id objc_msgSend__canPopViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canPopViewController");
}

id objc_msgSend__configureNumberFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureNumberFormatter:");
}

id objc_msgSend__contentUnavailableConfigurationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentUnavailableConfigurationState");
}

id objc_msgSend__contextAllowsPersistingColumnVisibilityChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextAllowsPersistingColumnVisibilityChanges");
}

id objc_msgSend__customPreferredSplitBehavior_EmbeddedScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_customPreferredSplitBehavior_EmbeddedScreen");
}

id objc_msgSend__customPreferredSplitBehavior_ExternalScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_customPreferredSplitBehavior_ExternalScreen");
}

id objc_msgSend__decimalDefaultFormattedDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decimalDefaultFormattedDoubleValue:");
}

id objc_msgSend__decimalDisplayStringByFormattingDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decimalDisplayStringByFormattingDoubleValue:");
}

id objc_msgSend__decimalLengthFormattedDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decimalLengthFormattedDoubleValue:");
}

id objc_msgSend__defaultLocationIsRecentsTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultLocationIsRecentsTab");
}

id objc_msgSend__definiteTransitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_definiteTransitionCoordinator");
}

id objc_msgSend__displayModeButtonItemTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayModeButtonItemTitle");
}

id objc_msgSend__hostingNavigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hostingNavigationBar");
}

id objc_msgSend__integerFractionalDisplayStringByFormattingDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_integerFractionalDisplayStringByFormattingDoubleValue:");
}

id objc_msgSend__isEmbeddedScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEmbeddedScreen");
}

id objc_msgSend__largeTitleColorForTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_largeTitleColorForTintColor:");
}

id objc_msgSend__loadFullHierarchy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadFullHierarchy");
}

id objc_msgSend__loadMinimalHierarchy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadMinimalHierarchy");
}

id objc_msgSend__mostRecentBrowsedPathEffectiveTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mostRecentBrowsedPathEffectiveTab");
}

id objc_msgSend__performWhileNotingInflightSelectedViewController_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWhileNotingInflightSelectedViewController:block:");
}

id objc_msgSend__performWhilePreventingHierarchyControllerLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWhilePreventingHierarchyControllerLoading:");
}

id objc_msgSend__primaryDimmingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_primaryDimmingView");
}

id objc_msgSend__referenceViewControllerForDirectTabChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_referenceViewControllerForDirectTabChildViewController:");
}

id objc_msgSend__rotatingToInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rotatingToInterfaceOrientation");
}

id objc_msgSend__saveUserPrefersTiledSidebarForChangeFromDisplayMode_toDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveUserPrefersTiledSidebarForChangeFromDisplayMode:toDisplayMode:");
}

id objc_msgSend__scrollToTopIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToTopIfPossible:");
}

id objc_msgSend__selectedOrInflightSelectedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectedOrInflightSelectedViewController");
}

id objc_msgSend__setIgnoresSheetContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIgnoresSheetContext:");
}

id objc_msgSend__setLocationsInBrowseTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLocationsInBrowseTab:");
}

id objc_msgSend__setShowSystemTabBar_isEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowSystemTabBar:isEditing:");
}

id objc_msgSend__shouldForwardSelectorToDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldForwardSelectorToDelegate:");
}

id objc_msgSend__shouldOverlayTabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldOverlayTabBar");
}

id objc_msgSend__sidebarVisibilityPinnedToWindowSizingOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sidebarVisibilityPinnedToWindowSizingOnly");
}

id objc_msgSend__sourcesByBuildingWithSourceBuilder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sourcesByBuildingWithSourceBuilder");
}

id objc_msgSend__splitViewBorderColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_splitViewBorderColor");
}

id objc_msgSend__stopSearchingSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopSearchingSources");
}

id objc_msgSend__swipeToCloseSidebarGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_swipeToCloseSidebarGestureRecognizer");
}

id objc_msgSend__tapToCloseSidebarGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tapToCloseSidebarGestureRecognizer");
}

id objc_msgSend__uip_isTabBarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uip_isTabBarHidden");
}

id objc_msgSend__underlyingSelectedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_underlyingSelectedViewController");
}

id objc_msgSend__updateBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBarVisibility");
}

id objc_msgSend__updateColumnViewAvailablityFromTraitCollection_andSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateColumnViewAvailablityFromTraitCollection:andSize:");
}

id objc_msgSend__updateLargeTitleTextAttributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLargeTitleTextAttributes");
}

id objc_msgSend__updateNavigationBarVisibilityAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNavigationBarVisibilityAnimated:");
}

id objc_msgSend__updatePreferredContentSizeForFirstAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePreferredContentSizeForFirstAppearance");
}

id objc_msgSend__updateTabButtonsVisibilityForTraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTabButtonsVisibilityForTraits");
}

id objc_msgSend__viewController_wantsToShowSystemTabBar_isEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewController:wantsToShowSystemTabBar:isEditing:");
}

id objc_msgSend__viewControllerForOverlayTabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerForOverlayTabBar");
}

id objc_msgSend_actionManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionManager");
}

id objc_msgSend_actionManagersFromSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionManagersFromSources");
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithHandler:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activateContainerViewControllersIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateContainerViewControllersIfNeeded");
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activationState");
}

id objc_msgSend_actualViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actualViewController");
}

id objc_msgSend_addCGExifPropertiesToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCGExifPropertiesToDictionary:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addColorInfoToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addColorInfoToDictionary:");
}

id objc_msgSend_addCreditTypeToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCreditTypeToDictionary:");
}

id objc_msgSend_addDigitalSourceTypeToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDigitalSourceTypeToDictionary:");
}

id objc_msgSend_addFlashProperitesToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFlashProperitesToDictionary:");
}

id objc_msgSend_addGPSInfoToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGPSInfoToDictionary:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addHasAlphaToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHasAlphaToDictionary:");
}

id objc_msgSend_addHasDPIToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHasDPIToDictionary:");
}

id objc_msgSend_addHasSizeToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHasSizeToDictionary:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addPagesToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPagesToDictionary:");
}

id objc_msgSend_addSecureToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSecureToDictionary:");
}

id objc_msgSend_addSizeToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSizeToDictionary:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addVersionToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVersionToDictionary:");
}

id objc_msgSend_additionalLeadingNavigationBarButtonItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalLeadingNavigationBarButtonItems");
}

id objc_msgSend_additionalTrailingNavigationBarButtonItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalTrailingNavigationBarButtonItems");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allValues");
}

id objc_msgSend_allowsDisplaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsDisplaying:");
}

id objc_msgSend_allowsDocumentCreation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsDocumentCreation");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_applicationExtensionRecords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationExtensionRecords");
}

id objc_msgSend_applicationIconForBundleIdentifier_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationIconForBundleIdentifier:size:");
}

id objc_msgSend_applyTintColorToViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyTintColorToViews");
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areAnimationsEnabled");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_asDOC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "asDOC");
}

id objc_msgSend_asUIKit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "asUIKit");
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributes");
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "background");
}

id objc_msgSend_beginAppearanceTransition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginAppearanceTransition:animated:");
}

id objc_msgSend_beginMatchingExtensionsWithAttributes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginMatchingExtensionsWithAttributes:completion:");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blackColor");
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "block");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_borderedProminentButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "borderedProminentButtonConfiguration");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_browserContentStrategy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "browserContentStrategy");
}

id objc_msgSend_browsingModeTabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "browsingModeTabBar");
}

id objc_msgSend_buildSourcesFromLegacyPickerExtensions_legacyProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildSourcesFromLegacyPickerExtensions:legacyProviders:");
}

id objc_msgSend_buildSourcesFromProviderDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildSourcesFromProviderDomains:");
}

id objc_msgSend_buildSourcesProviders_legacyWebViewFileProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildSourcesProviders:legacyWebViewFileProviders:");
}

id objc_msgSend_bumpLastOpenDateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bumpLastOpenDateWithCompletionHandler:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_buttonProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonProperties");
}

id objc_msgSend_buttonWithConfiguration_primaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithConfiguration:primaryAction:");
}

id objc_msgSend_cachePersonaStringForProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachePersonaStringForProviders:");
}

id objc_msgSend_canHaveTabs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canHaveTabs");
}

id objc_msgSend_canHostAppPerformAction_fileProviderDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canHostAppPerformAction:fileProviderDomain:");
}

id objc_msgSend_canHostAppPerformAction_legacyPickerExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canHostAppPerformAction:legacyPickerExtension:");
}

id objc_msgSend_canPresentContentForTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPresentContentForTab:");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancel");
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllers");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearSharedControllerFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSharedControllerFor:");
}

id objc_msgSend_clearSplitViewStateTransitionStateIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSplitViewStateTransitionStateIfNecessary");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "color");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commonInit");
}

id objc_msgSend_compactMetadataValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactMetadataValues");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationWithTextStyle_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:scale:");
}

id objc_msgSend_configureContextForDisplayingTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureContextForDisplayingTab:");
}

id objc_msgSend_configureTabBarForUIPIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureTabBarForUIPIfNecessary");
}

id objc_msgSend_configureUIPDocumentLandingStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureUIPDocumentLandingStyle");
}

id objc_msgSend_configureWithDefaultBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithDefaultBackground");
}

id objc_msgSend_configureWithZeroInsetsIfAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithZeroInsetsIfAllowed");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_consolidatedErrorIfExists(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "consolidatedErrorIfExists");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintLessThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToConstant:");
}

id objc_msgSend_containerControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerControllers");
}

id objc_msgSend_containingAppBundleIdentifierForBundleURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingAppBundleIdentifierForBundleURL:");
}

id objc_msgSend_containingAppBundleIdentifierForPicker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingAppBundleIdentifierForPicker:");
}

id objc_msgSend_containingAppBundleIdentifierForProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingAppBundleIdentifierForProvider:");
}

id objc_msgSend_containingApplicationRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingApplicationRecord");
}

id objc_msgSend_containingBundleRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingBundleRecord");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentType");
}

id objc_msgSend_contentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController");
}

id objc_msgSend_contextPrefersVariableBlurBottomTabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextPrefersVariableBlurBottomTabBar");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createSourceFrom_with_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSourceFrom:with:");
}

id objc_msgSend_createSpotlightSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSpotlightSources");
}

id objc_msgSend_currentContainers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentContainers");
}

id objc_msgSend_currentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentViewController");
}

id objc_msgSend_currentViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentViewControllers");
}

id objc_msgSend_customStateForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customStateForKey:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource");
}

id objc_msgSend_deactivateAlongsideContainingTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateAlongsideContainingTransitionCoordinator:");
}

id objc_msgSend_decimalFormatString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalFormatString");
}

id objc_msgSend_decimalNumberByDividingBy_withBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalNumberByDividingBy:withBehavior:");
}

id objc_msgSend_decimalNumberHandlerWithRoundingMode_scale_raiseOnExactness_raiseOnOverflow_raiseOnUnderflow_raiseOnDivideByZero_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:");
}

id objc_msgSend_decimalNumberWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalNumberWithString:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultInitialBrowsedPathEffectiveTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultInitialBrowsedPathEffectiveTab");
}

id objc_msgSend_defaultLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultLocation");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultMetrics");
}

id objc_msgSend_defaultPermission(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultPermission");
}

id objc_msgSend_defaultSaveLocationObserverContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSaveLocationObserverContext");
}

id objc_msgSend_defaultSourceUIManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSourceUIManager");
}

id objc_msgSend_deferredBrowserStateChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deferredBrowserStateChanges");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryForKey:");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didReceiveSourceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveSourceUpdate");
}

id objc_msgSend_disableWorkaroundFor123787016(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableWorkaroundFor123787016");
}

id objc_msgSend_disableWorkaroundFor124376396(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableWorkaroundFor124376396");
}

id objc_msgSend_dismissSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissSearch");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_displayAddTagsViewWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayAddTagsViewWithItems:");
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayMode");
}

id objc_msgSend_displayModeButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayModeButtonItem");
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayName");
}

id objc_msgSend_displayStringForMetadataNumberValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayStringForMetadataNumberValue:");
}

id objc_msgSend_displayStringForMetadataStringValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayStringForMetadataStringValue:");
}

id objc_msgSend_displayStringForMetadataValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayStringForMetadataValue:");
}

id objc_msgSend_displayedRootLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedRootLocation");
}

id objc_msgSend_docContentUnavailableConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "docContentUnavailableConfiguration");
}

id objc_msgSend_docContentUnavailableConfigurationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "docContentUnavailableConfigurationState");
}

id objc_msgSend_docSearchControllerForSearchingIn_configuration_collectionViewPool_documentManager_actionManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "docSearchControllerForSearchingIn:configuration:collectionViewPool:documentManager:actionManager:");
}

id objc_msgSend_docUpdateContentUnavailableConfigurationUsingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "docUpdateContentUnavailableConfigurationUsingState:");
}

id objc_msgSend_doc_applicationExtensionRecordAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_applicationExtensionRecordAtURL:");
}

id objc_msgSend_doc_circleWithInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_circleWithInset:");
}

id objc_msgSend_doc_commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_commonInit");
}

id objc_msgSend_doc_commonInitWithSourceObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_commonInitWithSourceObserver:");
}

id objc_msgSend_doc_contentTypesForIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_contentTypesForIdentifiers:");
}

id objc_msgSend_doc_deprecated_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_deprecated_interfaceOrientation");
}

id objc_msgSend_doc_hasAppeared(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_hasAppeared");
}

id objc_msgSend_doc_inWindowPerformingSnapshotting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_inWindowPerformingSnapshotting");
}

id objc_msgSend_doc_isAppearing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_isAppearing");
}

id objc_msgSend_doc_performAllowingAnimations_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_performAllowingAnimations:block:");
}

id objc_msgSend_doc_performWithDeferredTransitionsAndAnimationsDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_performWithDeferredTransitionsAndAnimationsDisabled:");
}

id objc_msgSend_doc_removeFromParentWithRemoveSubviewBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_removeFromParentWithRemoveSubviewBlock:");
}

id objc_msgSend_doc_setContentUnavailableConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_setContentUnavailableConfiguration:");
}

id objc_msgSend_doc_splitViewState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_splitViewState");
}

id objc_msgSend_doc_splitViewStateTransitionEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_splitViewStateTransitionEnd");
}

id objc_msgSend_doc_splitViewStateTransitionStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doc_splitViewStateTransitionStart");
}

id objc_msgSend_documentBrowser_applicationActivitiesForDocumentURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:applicationActivitiesForDocumentURLs:");
}

id objc_msgSend_documentBrowser_didImportDocumentAtURL_toDestinationURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:didImportDocumentAtURL:toDestinationURL:");
}

id objc_msgSend_documentBrowser_didPickDocumentURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:didPickDocumentURLs:");
}

id objc_msgSend_documentBrowser_didPickDocumentsAtURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:didPickDocumentsAtURLs:");
}

id objc_msgSend_documentBrowser_didRequestDocumentCreationWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:didRequestDocumentCreationWithHandler:");
}

id objc_msgSend_documentBrowser_failedToImportDocumentAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:failedToImportDocumentAtURL:error:");
}

id objc_msgSend_documentBrowser_shouldShowActivityViewControllerForDocumentURLs_barButtonItem_popoverTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:shouldShowActivityViewControllerForDocumentURLs:barButtonItem:popoverTracker:");
}

id objc_msgSend_documentBrowser_willPresentActivityViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:willPresentActivityViewController:");
}

id objc_msgSend_documentManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentManager");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_downloadButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadButton");
}

id objc_msgSend_downloadState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadState");
}

id objc_msgSend_downloadingProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadingProgress");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_effectiveBrowserViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBrowserViewController");
}

id objc_msgSend_effectiveFullBrowser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveFullBrowser");
}

id objc_msgSend_effectiveFullBrowserForTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveFullBrowserForTab:");
}

id objc_msgSend_effectiveLocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveLocations");
}

id objc_msgSend_effectiveRootLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveRootLocation");
}

id objc_msgSend_effectiveSearchController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveSearchController");
}

id objc_msgSend_effectiveTabSwitcherTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveTabSwitcherTab");
}

id objc_msgSend_emptyConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyConfiguration");
}

id objc_msgSend_emptyExtraProminentConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyExtraProminentConfiguration");
}

id objc_msgSend_emptyLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyLocation");
}

id objc_msgSend_emptyProminentConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyProminentConfiguration");
}

id objc_msgSend_enclosedInUIPDocumentLanding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enclosedInUIPDocumentLanding");
}

id objc_msgSend_enclosingTabSwitcherCanBeFloating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enclosingTabSwitcherCanBeFloating");
}

id objc_msgSend_enclosingTabSwitcherStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enclosingTabSwitcherStyle");
}

id objc_msgSend_endForcedNavigationTransitionChrome_appearingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endForcedNavigationTransitionChrome:appearingViewController:");
}

id objc_msgSend_endMatchingExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endMatchingExtensions:");
}

id objc_msgSend_ensureInternalNavigationControllerIsInstalled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ensureInternalNavigationControllerIsInstalled");
}

id objc_msgSend_ensureNonZeroPreferredSize_traits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ensureNonZeroPreferredSize:traits:");
}

id objc_msgSend_enumerateAllFullBrowserViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateAllFullBrowserViewControllers:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_establishFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "establishFirstResponder");
}

id objc_msgSend_establishFirstResponderIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "establishFirstResponderIfNeeded");
}

id objc_msgSend_extensionBundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionBundleIdentifier");
}

id objc_msgSend_extensionBundleURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionBundleURL");
}

id objc_msgSend_extensionPointRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionPointRecord");
}

id objc_msgSend_fetchItemForURL_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchItemForURL:completionHandler:");
}

id objc_msgSend_fetchItemWithBumpLastOpenDate_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchItemWithBumpLastOpenDate:configuration:completionHandler:");
}

id objc_msgSend_fetchLastUsedTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLastUsedTab");
}

id objc_msgSend_fetchParentsForItemID_recursively_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchParentsForItemID:recursively:completionHandler:");
}

id objc_msgSend_fileProviderItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileProviderItem");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_filterNonObsoleteLegacyPickersFromPickers_modernProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterNonObsoleteLegacyPickersFromPickers:modernProviders:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_first(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "first");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_focusSystemForEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "focusSystemForEnvironment:");
}

id objc_msgSend_forPickingDocuments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forPickingDocuments");
}

id objc_msgSend_forbiddenActionIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forbiddenActionIdentifiers");
}

id objc_msgSend_forceBrowseTabDefaultsValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceBrowseTabDefaultsValue");
}

id objc_msgSend_forceSidebarHiddenByDefaultForUIPDocLandingIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceSidebarHiddenByDefaultForUIPDocLandingIfNecessary");
}

id objc_msgSend_forceUpdatePreferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceUpdatePreferredContentSize");
}

id objc_msgSend_fpDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fpDomain");
}

id objc_msgSend_fpfs_fpItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fpfs_fpItem");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_fullBrowserHierarchyController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullBrowserHierarchyController");
}

id objc_msgSend_fullDocumentManagerViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullDocumentManagerViewController");
}

id objc_msgSend_fullMetadataValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullMetadataValues");
}

id objc_msgSend_fullRecentsViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullRecentsViewController");
}

id objc_msgSend_fullSharedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullSharedViewController");
}

id objc_msgSend_fullyPopulated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullyPopulated");
}

id objc_msgSend_genericDocumentIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genericDocumentIcon");
}

id objc_msgSend_gestureRecognizers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gestureRecognizers");
}

id objc_msgSend_globalMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "globalMapTable");
}

id objc_msgSend_globalTabbedBrowserControllerForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "globalTabbedBrowserControllerForIdentifier:");
}

id objc_msgSend_hasHistoryButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasHistoryButtons");
}

id objc_msgSend_hasPendingLocationChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPendingLocationChange");
}

id objc_msgSend_hasReceivedFirstFullUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasReceivedFirstFullUpdate");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_hiddenSourcesIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hiddenSourcesIdentifiers");
}

id objc_msgSend_hideBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideBar");
}

id objc_msgSend_hideMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideMenu");
}

id objc_msgSend_hideSidebar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideSidebar");
}

id objc_msgSend_hierarchyController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hierarchyController");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalSizeClass");
}

id objc_msgSend_hostAppCanSeeFileProviderDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostAppCanSeeFileProviderDomain:");
}

id objc_msgSend_hostApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostApplicationBundleIdentifier");
}

id objc_msgSend_hostIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostIdentifier");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "image");
}

id objc_msgSend_imageForDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForDescriptor:");
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_implClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "implClass");
}

id objc_msgSend_importDocumentAt_mode_toCurrentBrowserLocationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importDocumentAt:mode:toCurrentBrowserLocationWithCompletion:");
}

id objc_msgSend_importDocumentAt_nextTo_mode_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importDocumentAt:nextTo:mode:completionHandler:");
}

id objc_msgSend_includeSidebarInCollapsedNavStack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "includeSidebarInCollapsedNavStack");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoDictionary");
}

id objc_msgSend_initForCovering_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForCovering:");
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArrangedSubviews:");
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:copyItems:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundleIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:error:");
}

id objc_msgSend_initWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoder:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_defaultSourceUIManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:defaultSourceUIManager:");
}

id objc_msgSend_initWithConfiguration_nodes_allowOpenButton_documentManager_actionManager_actionDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:nodes:allowOpenButton:documentManager:actionManager:actionDelegate:");
}

id objc_msgSend_initWithConfiguration_sourceObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:sourceObserver:");
}

id objc_msgSend_initWithConfiguration_sourceObserver_hierarchyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:sourceObserver:hierarchyController:");
}

id objc_msgSend_initWithConfiguration_sourceObserver_minParentLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:sourceObserver:minParentLocations:");
}

id objc_msgSend_initWithConfiguration_sourceObserver_presentAlertsOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:sourceObserver:presentAlertsOn:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithHierarchyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHierarchyController:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:");
}

id objc_msgSend_initWithItems_tagsLists_isUndoable_shouldClearUndoStack_undoManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:tagsLists:isUndoable:shouldClearUndoStack:undoManager:");
}

id objc_msgSend_initWithOptions_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:delegate:");
}

id objc_msgSend_initWithPicker_providerDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPicker:providerDomain:");
}

id objc_msgSend_initWithSize_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:scale:");
}

id objc_msgSend_initWithSourceIdentifier_node_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSourceIdentifier:node:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTitle_attributes_optedIn_identifier_providerDomain_pickerExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:attributes:optedIn:identifier:providerDomain:pickerExtension:");
}

id objc_msgSend_initWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTraitCollection:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURLs:");
}

id objc_msgSend_initWithUserAction_hostIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserAction:hostIdentifier:");
}

id objc_msgSend_initWithUserAction_hostIdentifier_managedPermissions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserAction:hostIdentifier:managedPermissions:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_installDebugMenuGesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installDebugMenuGesture");
}

id objc_msgSend_instanceWrappingImpl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instanceWrappingImpl:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interactionMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactionMode");
}

id objc_msgSend_interfaceStateForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceStateForConfiguration:");
}

id objc_msgSend_internalNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalNavigationController");
}

id objc_msgSend_invalidateAllAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateAllAssertions");
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActive");
}

id objc_msgSend_isBrowserCurrentLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBrowserCurrentLocation:");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isCloudItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCloudItem");
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCollapsed");
}

id objc_msgSend_isDownloaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDownloaded");
}

id objc_msgSend_isDownloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDownloading");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExtensionOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExtensionOptedIn");
}

id objc_msgSend_isFPV2(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFPV2");
}

id objc_msgSend_isFetchingLocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFetchingLocations");
}

id objc_msgSend_isFilesApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFilesApp");
}

id objc_msgSend_isFolder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFolder");
}

id objc_msgSend_isHideOverlayTransitionFromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHideOverlayTransitionFromState:toState:");
}

id objc_msgSend_isInUIPDocumentLanding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInUIPDocumentLanding");
}

id objc_msgSend_isInUserTriggeredSelectionMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInUserTriggeredSelectionMode");
}

id objc_msgSend_isInfoInPopoverMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInfoInPopoverMode");
}

id objc_msgSend_isOnScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOnScreen");
}

id objc_msgSend_isPickerUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPickerUI");
}

id objc_msgSend_isProviderNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProviderNode:");
}

id objc_msgSend_isRoot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRoot");
}

id objc_msgSend_isShowOverlayTransitionFromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowOverlayTransitionFromState:toState:");
}

id objc_msgSend_isShowingCollapsedSidebarViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingCollapsedSidebarViewController");
}

id objc_msgSend_isShowingMovePanel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingMovePanel");
}

id objc_msgSend_isSidebarShown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSidebarShown");
}

id objc_msgSend_isSidebarShownInOverlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSidebarShownInOverlay");
}

id objc_msgSend_isSystemTabBarAllowedByTraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSystemTabBarAllowedByTraits");
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isToolbarHidden");
}

id objc_msgSend_isTrashed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTrashed");
}

id objc_msgSend_isValidForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidForConfiguration:");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_itemCollectionViewPool(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemCollectionViewPool");
}

id objc_msgSend_itemForURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemForURL:error:");
}

id objc_msgSend_itemID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemID");
}

id objc_msgSend_itemTapDrillsIntoNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemTapDrillsIntoNode:");
}

id objc_msgSend_itemToFocusDuringAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemToFocusDuringAppearance");
}

id objc_msgSend_itemWithTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemWithTab:");
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "items");
}

id objc_msgSend_iteratorWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iteratorWithOptions:");
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastLocation");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastOperation");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layoutHeightForWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutHeightForWidth:");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutMargins(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMargins");
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMarginsGuide");
}

id objc_msgSend_leadingWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingWidth");
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftAnchor");
}

id objc_msgSend_legacyPickers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "legacyPickers");
}

id objc_msgSend_legacyPickersObserverContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "legacyPickersObserverContext");
}

id objc_msgSend_legacyPickersObserverError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "legacyPickersObserverError");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lengthUnits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthUnits");
}

id objc_msgSend_linkColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkColor");
}

id objc_msgSend_loadViewControllers_initialIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadViewControllers:initialIndex:");
}

id objc_msgSend_loadingConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadingConfiguration");
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedName");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_localizedStringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithValidatedFormat:validFormatSpecifiers:error:");
}

id objc_msgSend_localizedUppercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedUppercaseString");
}

id objc_msgSend_locationForDeterminingCurrentEffectiveTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForDeterminingCurrentEffectiveTab");
}

id objc_msgSend_locations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locations");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_makeContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeContentView");
}

id objc_msgSend_matchingLegacyProviderIdentifierForPicker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchingLegacyProviderIdentifierForPicker:");
}

id objc_msgSend_maxFractionalDigits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxFractionalDigits");
}

id objc_msgSend_maxListPresentationHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxListPresentationHeight");
}

id objc_msgSend_mostRecentlyVisitedBrowseSourceWithFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentlyVisitedBrowseSourceWithFallback:");
}

id objc_msgSend_mostRecentlyVisitedBrowsedState_FullBrowser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentlyVisitedBrowsedState_FullBrowser");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_needsForcedUnderNavBarAppearanceOnAppear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsForcedUnderNavBarAppearanceOnAppear");
}

id objc_msgSend_neverAllowShowingSystemTabs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "neverAllowShowingSystemTabs");
}

id objc_msgSend_neverAllowsAnyTypeOfTabs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "neverAllowsAnyTypeOfTabs");
}

id objc_msgSend_newViewControllersSharing_tabBarItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newViewControllersSharing:tabBarItems:");
}

id objc_msgSend_next(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "next");
}

id objc_msgSend_node(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "node");
}

id objc_msgSend_nodeCanBeOpened(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nodeCanBeOpened");
}

id objc_msgSend_nodeDownloadButton_downloadingNode_encounteredError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nodeDownloadButton:downloadingNode:encounteredError:");
}

id objc_msgSend_nodeDownloadButton_requestedOpeningNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nodeDownloadButton:requestedOpeningNode:");
}

id objc_msgSend_notANumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notANumber");
}

id objc_msgSend_notifySubscriber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifySubscriber:");
}

id objc_msgSend_numberFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberFormatter");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_objc_doc_preheatForPresentingWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objc_doc_preheatForPresentingWithCompletion:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKey_ofClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:ofClass:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_observationCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observationCount");
}

id objc_msgSend_observerErrorWithUnderlyingErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observerErrorWithUnderlyingErrors:");
}

id objc_msgSend_observerForFINode_withObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observerForFINode:withObserver:");
}

id objc_msgSend_openButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openButton");
}

id objc_msgSend_optedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optedIn");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewController");
}

id objc_msgSend_pendingChildPropertyChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingChildPropertyChanges");
}

id objc_msgSend_performBrowserStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBrowserStateChange:");
}

id objc_msgSend_performWhileForcingChangeInPreparationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWhileForcingChangeInPreparationQueue:");
}

id objc_msgSend_performWhilePreventingLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWhilePreventingLoading:");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_pickerExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickerExtension");
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placeholder");
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plainButtonConfiguration");
}

id objc_msgSend_plainGazeableConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plainGazeableConfiguration");
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSize");
}

id objc_msgSend_preferredDisplayMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredDisplayMode");
}

id objc_msgSend_preferredNavigationBarStyle_objc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredNavigationBarStyle_objc");
}

id objc_msgSend_prefersAnimatedTabVibilityChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersAnimatedTabVibilityChanges");
}

id objc_msgSend_prefersIntegerFractionalDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersIntegerFractionalDisplay");
}

id objc_msgSend_prefersTabBarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersTabBarHidden");
}

id objc_msgSend_preloadLaunchServiceDatabase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadLaunchServiceDatabase");
}

id objc_msgSend_prepareImageForDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareImageForDescriptor:");
}

id objc_msgSend_prepareSnapshotForSplitStateChangingFromState_toState_alongside_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSnapshotForSplitStateChangingFromState:toState:alongside:");
}

id objc_msgSend_presentBrowseTabFromFullBrowser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentBrowseTabFromFullBrowser");
}

id objc_msgSend_presentConnectToServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentConnectToServer:");
}

id objc_msgSend_presentRecentsTabFromFullBrowse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentRecentsTabFromFullBrowse");
}

id objc_msgSend_presentSharedTabFromFullBrowser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentSharedTabFromFullBrowser");
}

id objc_msgSend_presentTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentTab:");
}

id objc_msgSend_presentTab_rawTabSwitchOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentTab:rawTabSwitchOnly:");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationController");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_primaryAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryAction");
}

id objc_msgSend_primaryContentScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryContentScrollView");
}

id objc_msgSend_progressView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressView");
}

id objc_msgSend_progressViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressViewHeightConstraint");
}

id objc_msgSend_promisedItemResourceValuesForKeys_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promisedItemResourceValuesForKeys:error:");
}

id objc_msgSend_providerDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDomain");
}

id objc_msgSend_providerDomainID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDomainID");
}

id objc_msgSend_providerDomainWithID_cachePolicy_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDomainWithID:cachePolicy:error:");
}

id objc_msgSend_providerDomainsContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDomainsContainer");
}

id objc_msgSend_providerDomainsFINodeObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDomainsFINodeObserver");
}

id objc_msgSend_providerDomainsNode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDomainsNode");
}

id objc_msgSend_providerID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerID");
}

id objc_msgSend_providerNodes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerNodes");
}

id objc_msgSend_providers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providers");
}

id objc_msgSend_providersChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providersChanged");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_readTag_path_title_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readTag:path:title:value:");
}

id objc_msgSend_recentDocumentsLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentDocumentsLocation");
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDefaults:");
}

id objc_msgSend_registerForTabSwitcherTraitChangesWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTabSwitcherTraitChangesWithHandler:");
}

id objc_msgSend_registerForTraitChanges_withAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTraitChanges:withAction:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeTrailingLocationCount_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTrailingLocationCount:animated:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_requestFocusUpdateToEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestFocusUpdateToEnvironment:");
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reset");
}

id objc_msgSend_resetFromRootWith_animated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetFromRootWith:animated:completionHandler:");
}

id objc_msgSend_resetNavigationStepwise(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetNavigationStepwise");
}

id objc_msgSend_resetWith_animated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWith:animated:completionHandler:");
}

id objc_msgSend_resetWithDefaultLocationWithAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWithDefaultLocationWithAnimated:");
}

id objc_msgSend_restoreLastBrowsedStateForTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreLastBrowsedStateForTab:");
}

id objc_msgSend_resultCollectionViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultCollectionViewController");
}

id objc_msgSend_retrieveAllSourcesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveAllSourcesCompletionBlock:");
}

id objc_msgSend_revealDocumentAtURL_importIfNeeded_updateLastUsedDate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealDocumentAtURL:importIfNeeded:updateLastUsedDate:completion:");
}

id objc_msgSend_revealLocation_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealLocation:animated:completion:");
}

id objc_msgSend_revealWithItems_selectEvenIfVisible_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealWithItems:selectEvenIfVisible:completionBlock:");
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightAnchor");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_saveSelectedTabState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveSelectedTabState");
}

id objc_msgSend_scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledValueForValue:");
}

id objc_msgSend_sceneIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneIdentifier");
}

id objc_msgSend_scheduleAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleAction:");
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screen");
}

id objc_msgSend_scrollEdgeAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollEdgeAppearance");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollView");
}

id objc_msgSend_searchConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchConfiguration");
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchController");
}

id objc_msgSend_searchControllerText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchControllerText");
}

id objc_msgSend_secondaryText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryText");
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedIndex");
}

id objc_msgSend_selectedOrInflightSelectedTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedOrInflightSelectedTab");
}

id objc_msgSend_selectedTabDirectChildViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedTabDirectChildViewController");
}

id objc_msgSend_selectedTabReferenceViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedTabReferenceViewController");
}

id objc_msgSend_serviceViewControllerProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceViewControllerProxyWithErrorHandler:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLabel:");
}

id objc_msgSend_setActionCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionCompletionBlock:");
}

id objc_msgSend_setActionReporting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionReporting:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveStrokeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveStrokeColor:");
}

id objc_msgSend_setActualViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActualViewController:");
}

id objc_msgSend_setAdditionalLeadingNavigationBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalLeadingNavigationBarButtonItems:");
}

id objc_msgSend_setAdditionalTrailingNavigationBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalTrailingNavigationBarButtonItems:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllowsDocumentCreation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsDocumentCreation:");
}

id objc_msgSend_setAllowsPickingMultipleItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsPickingMultipleItems:");
}

id objc_msgSend_setAssociatedActionManagers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssociatedActionManagers:");
}

id objc_msgSend_setAutohideWhenPossibleDropTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutohideWhenPossibleDropTarget:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundEffect:");
}

id objc_msgSend_setBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlock:");
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderColor:");
}

id objc_msgSend_setButtonSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonSize:");
}

id objc_msgSend_setCanShowStopButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanShowStopButton:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setCornerStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerStyle:");
}

id objc_msgSend_setCurrentHostAppIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentHostAppIdentifier:");
}

id objc_msgSend_setCurrentLocationTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentLocationTitle:");
}

id objc_msgSend_setCustomActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomActions:");
}

id objc_msgSend_setCustomState_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomState:forKey:");
}

id objc_msgSend_setDecimalFormatString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDecimalFormatString:");
}

id objc_msgSend_setDefaultLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultLocation:");
}

id objc_msgSend_setDefaultSaveLocationObserverContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultSaveLocationObserverContext:");
}

id objc_msgSend_setDefaultSourceUIManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultSourceUIManager:");
}

id objc_msgSend_setDefaultTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultTab:");
}

id objc_msgSend_setDeferredBrowserStateChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeferredBrowserStateChanges:");
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefinesPresentationContext:");
}

id objc_msgSend_setDelayResizingUntilAppeared_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelayResizingUntilAppeared:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDisplayModeButtonVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayModeButtonVisibility:");
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayName:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDoc_splitViewStateTransitionEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoc_splitViewStateTransitionEnd:");
}

id objc_msgSend_setDoc_splitViewStateTransitionStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoc_splitViewStateTransitionStart:");
}

id objc_msgSend_setDocumentBrowser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentBrowser:");
}

id objc_msgSend_setDocumentContentTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentContentTypes:");
}

id objc_msgSend_setDocumentLandingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentLandingMode:");
}

id objc_msgSend_setDocumentManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentManager:");
}

id objc_msgSend_setDomainCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainCache:");
}

id objc_msgSend_setDownloadButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadButton:");
}

id objc_msgSend_setDownloadCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadCompletionBlock:");
}

id objc_msgSend_setDrawBorder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDrawBorder:");
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:");
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:animated:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEnvironmentSupportsColumnView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnvironmentSupportsColumnView:");
}

id objc_msgSend_setForbiddenActionIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForbiddenActionIdentifiers:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFullDocumentManagerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullDocumentManagerDelegate:");
}

id objc_msgSend_setFullRecentsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullRecentsViewController:");
}

id objc_msgSend_setFullSharedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullSharedViewController:");
}

id objc_msgSend_setGlobalTabbedBrowserController_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalTabbedBrowserController:forIdentifier:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHiddenSourcesIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHiddenSourcesIdentifiers:");
}

id objc_msgSend_setHidesSearchBarWhenScrolling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesSearchBarWhenScrolling:");
}

id objc_msgSend_setHierarchyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHierarchyController:");
}

id objc_msgSend_setHitTestsAsOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHitTestsAsOpaque:");
}

id objc_msgSend_setHostIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostIdentifier:");
}

id objc_msgSend_setHoverStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverStyle:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setInTagListMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInTagListMode:");
}

id objc_msgSend_setIsExtensionOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsExtensionOptedIn:");
}

id objc_msgSend_setIsInfoInPopoverMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInfoInPopoverMode:");
}

id objc_msgSend_setItemProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemProvider:");
}

id objc_msgSend_setItemToFocusDuringAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemToFocusDuringAppearance:");
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:");
}

id objc_msgSend_setLargeTitleTextAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLargeTitleTextAttributes:");
}

id objc_msgSend_setLastOpenedItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastOpenedItem:");
}

id objc_msgSend_setLastSelectedItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSelectedItem:");
}

id objc_msgSend_setLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutMargins:");
}

id objc_msgSend_setLegacyPickers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegacyPickers:");
}

id objc_msgSend_setLegacyPickersObserverContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegacyPickersObserverContext:");
}

id objc_msgSend_setLegacyPickersObserverError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegacyPickersObserverError:");
}

id objc_msgSend_setLengthUnits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLengthUnits:");
}

id objc_msgSend_setManagedPermission_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedPermission:");
}

id objc_msgSend_setMaxFractionalDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxFractionalDigits:");
}

id objc_msgSend_setMaximumFractionDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumFractionDigits:");
}

id objc_msgSend_setNamedLocationResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNamedLocationResolver:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:animated:");
}

id objc_msgSend_setNeedsFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsFirstResponder:");
}

id objc_msgSend_setNeverAllowShowingSystemTabs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeverAllowShowingSystemTabs:");
}

id objc_msgSend_setNeverCreateBookmarkForOpenInPlace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeverCreateBookmarkForOpenInPlace:");
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTapsRequired:");
}

id objc_msgSend_setNumberOfTouchesRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTouchesRequired:");
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberStyle:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObservationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservationCount:");
}

id objc_msgSend_setObservedProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservedProgress:");
}

id objc_msgSend_setOpenButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpenButton:");
}

id objc_msgSend_setPendingChildPropertyChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingChildPropertyChanges:");
}

id objc_msgSend_setPickerContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickerContext:");
}

id objc_msgSend_setPickerExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickerExtension:");
}

id objc_msgSend_setPreferLastUsedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferLastUsedDate:");
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredContentSize:");
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredDisplayMode:");
}

id objc_msgSend_setPreferredSplitBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredSplitBehavior:");
}

id objc_msgSend_setPreferredSymbolConfigurationForImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredSymbolConfigurationForImage:");
}

id objc_msgSend_setPrefersAnimatedTabVibilityChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersAnimatedTabVibilityChanges:");
}

id objc_msgSend_setPrefersIntegerFractionalDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersIntegerFractionalDisplay:");
}

id objc_msgSend_setPrefersLargeTitles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersLargeTitles:");
}

id objc_msgSend_setPresentationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationDelegate:");
}

id objc_msgSend_setPresentsWithGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentsWithGesture:");
}

id objc_msgSend_setPreventAppearanceForwarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventAppearanceForwarding:");
}

id objc_msgSend_setPrimaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryAction:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setProgressView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressView:");
}

id objc_msgSend_setProgressViewHeightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressViewHeightConstraint:");
}

id objc_msgSend_setProviderDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProviderDomain:");
}

id objc_msgSend_setProviderName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProviderName:");
}

id objc_msgSend_setProviderNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProviderNodes:");
}

id objc_msgSend_setProviderNodesFullyPopulated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProviderNodesFullyPopulated:");
}

id objc_msgSend_setRestoreLastVisitedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRestoreLastVisitedLocation:");
}

id objc_msgSend_setRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRole:");
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootViewController:");
}

id objc_msgSend_setSafeAreaUpdatesDisabledDuringTransitions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSafeAreaUpdatesDisabledDuringTransitions:");
}

id objc_msgSend_setSaveLastVisitedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSaveLastVisitedLocation:");
}

id objc_msgSend_setSceneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSceneIdentifier:");
}

id objc_msgSend_setScrollEdgeAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEdgeAppearance:");
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchController:");
}

id objc_msgSend_setSearchControllerText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchControllerText:");
}

id objc_msgSend_setSecondaryText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryText:");
}

id objc_msgSend_setSelectedIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedIndex:");
}

id objc_msgSend_setShortDebugID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShortDebugID:");
}

id objc_msgSend_setShowsShareButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsShareButton:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setSidebarDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSidebarDelegate:");
}

id objc_msgSend_setSoleValidIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoleValidIndex:");
}

id objc_msgSend_setSources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSources:");
}

id objc_msgSend_setSourcesObserverError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourcesObserverError:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSplitBrowserViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplitBrowserViewController:");
}

id objc_msgSend_setSplitViewDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplitViewDelegate:");
}

id objc_msgSend_setStandardAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStandardAppearance:");
}

id objc_msgSend_setSupportedInteractionModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedInteractionModes:");
}

id objc_msgSend_setSupportsColumnView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsColumnView:");
}

id objc_msgSend_setTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTab:");
}

id objc_msgSend_setTabBarController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabBarController:");
}

id objc_msgSend_setTabBarItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabBarItem:");
}

id objc_msgSend_setTagsWorkflowDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTagsWorkflowDelegate:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToken:");
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarHidden:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setUiBrowserDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUiBrowserDelegate:");
}

id objc_msgSend_setUnderlyingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingButton:");
}

id objc_msgSend_setUpdateLocationsAfterPopTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateLocationsAfterPopTransition:");
}

id objc_msgSend_setUpdateObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateObserver:");
}

id objc_msgSend_setUseCompactColorPicker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseCompactColorPicker:");
}

id objc_msgSend_setUseExpandedSourceList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseExpandedSourceList:");
}

id objc_msgSend_setUserAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAction:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserPrefersTiledSidebarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserPrefersTiledSidebarHidden:");
}

id objc_msgSend_setUsingSharedSplitBrowserStrategy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsingSharedSplitBrowserStrategy:");
}

id objc_msgSend_setUsingVariableBlurBottomBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsingVariableBlurBottomBar:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewController:forColumn:");
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:");
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:animated:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shared");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_sharedManagerFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManagerFor:");
}

id objc_msgSend_sharedStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedStore");
}

id objc_msgSend_shouldDeferBrowserStateChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDeferBrowserStateChanges");
}

id objc_msgSend_showBarIfAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBarIfAllowed");
}

id objc_msgSend_showLocation_fromRootAnimated_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLocation:fromRootAnimated:withCompletionBlock:");
}

id objc_msgSend_showSidebar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSidebar");
}

id objc_msgSend_sidebarHasActiveFocus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sidebarHasActiveFocus");
}

id objc_msgSend_sidebarViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sidebarViewController");
}

id objc_msgSend_sourceBuilder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceBuilder");
}

id objc_msgSend_sourceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceIdentifier");
}

id objc_msgSend_sourceObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceObserver");
}

id objc_msgSend_sourceObserverQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceObserverQueue");
}

id objc_msgSend_sourceObserverQueue_didReceiveSourceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceObserverQueue_didReceiveSourceUpdate");
}

id objc_msgSend_sources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sources");
}

id objc_msgSend_sourcesActionManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourcesActionManager");
}

id objc_msgSend_sourcesObserverError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourcesObserverError");
}

id objc_msgSend_sourcesSubscribers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourcesSubscribers");
}

id objc_msgSend_splitBrowserViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitBrowserViewController");
}

id objc_msgSend_splitViewController_didChangeFromState_toState_isUserDisplayModeChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewController:didChangeFromState:toState:isUserDisplayModeChange:");
}

id objc_msgSend_splitViewController_wantsToShowTabBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewController:wantsToShowTabBar:");
}

id objc_msgSend_splitViewController_willChangeFromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewController:willChangeFromState:toState:");
}

id objc_msgSend_splitViewDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewDelegate");
}

id objc_msgSend_splitViewWillChangeFrom_to_alongsideCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewWillChangeFrom:to:alongsideCoordinator:");
}

id objc_msgSend_splitViewWillDidExpand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewWillDidExpand");
}

id objc_msgSend_standardAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardAppearance");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_startAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAccessingSecurityScopedResource");
}

id objc_msgSend_startObserving_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObserving:");
}

id objc_msgSend_startObservingDefaultSaveLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingDefaultSaveLocation");
}

id objc_msgSend_startObservingLegacyPickers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingLegacyPickers");
}

id objc_msgSend_startObservingSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingSources");
}

id objc_msgSend_stopAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAccessingSecurityScopedResource");
}

id objc_msgSend_stopObserving_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObserving:");
}

id objc_msgSend_stopObservingDefaultSaveLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingDefaultSaveLocation");
}

id objc_msgSend_stopObservingLegacyPickers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingLegacyPickers");
}

id objc_msgSend_stopObservingSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingSources");
}

id objc_msgSend_stringFromNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromNumber:");
}

id objc_msgSend_stringFromValue_unit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromValue:unit:");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strongToWeakObjectsMapTable");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_supportedInteractionModes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedInteractionModes");
}

id objc_msgSend_supportsDisplayInTraitCollection_availableArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsDisplayInTraitCollection:availableArea:");
}

id objc_msgSend_supportsEnumeration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsEnumeration");
}

id objc_msgSend_supportsInteractionMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsInteractionMode:");
}

id objc_msgSend_swift_commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swift_commonInit");
}

id objc_msgSend_swift_commonInitWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swift_commonInitWith:");
}

id objc_msgSend_swift_navigationController_didShow_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swift_navigationController:didShow:animated:");
}

id objc_msgSend_swift_viewDidLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swift_viewDidLoad");
}

id objc_msgSend_switchToBrowse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchToBrowse");
}

id objc_msgSend_switchToRecents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchToRecents");
}

id objc_msgSend_switchToTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchToTab:");
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlueColor");
}

id objc_msgSend_systemDarkBlueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemDarkBlueColor");
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_tab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tab");
}

id objc_msgSend_tabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBar");
}

id objc_msgSend_tabBarController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBarController");
}

id objc_msgSend_tabBarCurrentRawTab(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBarCurrentRawTab");
}

id objc_msgSend_tabBarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBarItem");
}

id objc_msgSend_tabControllerIndexForTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabControllerIndexForTab:");
}

id objc_msgSend_tabControllerIndexForTab_inViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabControllerIndexForTab:inViewControllers:");
}

id objc_msgSend_tabIsSpecified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabIsSpecified");
}

id objc_msgSend_tabbedBrowserView_didMoveToWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabbedBrowserView:didMoveToWindow:");
}

id objc_msgSend_tabbedBrowserView_willMoveToWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabbedBrowserView:willMoveToWindow:");
}

id objc_msgSend_tabbedBrowserViewController_didFinishInitialLoad_ofTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabbedBrowserViewController:didFinishInitialLoad:ofTab:");
}

id objc_msgSend_tabbedBrowserViewControllerDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabbedBrowserViewControllerDelegate");
}

id objc_msgSend_tags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tags");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textProperties");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColor");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_toggleSidebarShown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleSidebarShown");
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "token");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCoordinator");
}

id objc_msgSend_trashedItemsLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trashedItemsLocation");
}

id objc_msgSend_underlyingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "underlyingButton");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_updateCachedDisplayNamesFromSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCachedDisplayNamesFromSources");
}

id objc_msgSend_updateContentEditingOverlaysForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContentEditingOverlaysForState:");
}

id objc_msgSend_updateCustomActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCustomActions");
}

id objc_msgSend_updateDeferredBrowserStateChangesWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDeferredBrowserStateChangesWith:");
}

id objc_msgSend_updateDisplayModeButtonVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDisplayModeButtonVisibility");
}

id objc_msgSend_updateDownloadState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDownloadState");
}

id objc_msgSend_updateFileProvidersIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFileProvidersIcon:");
}

id objc_msgSend_updateFocusIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFocusIfNeeded");
}

id objc_msgSend_updateForChangedHorizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateForChangedHorizontalSizeClass");
}

id objc_msgSend_updateForState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateForState");
}

id objc_msgSend_updateInterfaceState_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInterfaceState:forConfiguration:");
}

id objc_msgSend_updateLocationTitleFromCurrentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocationTitleFromCurrentState");
}

id objc_msgSend_updateLocationsAfterPopTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocationsAfterPopTransition");
}

id objc_msgSend_updateMostRecentlyVisitedBrowseSourceToTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMostRecentlyVisitedBrowseSourceToTab:");
}

id objc_msgSend_updateNavigationBarButtonItemsForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNavigationBarButtonItemsForViewController:");
}

id objc_msgSend_updateNavigationBarPrefersLargeTitles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNavigationBarPrefersLargeTitles");
}

id objc_msgSend_updatePreferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePreferredContentSize");
}

id objc_msgSend_updatePreferredDisplayModeFromPersistentStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePreferredDisplayModeFromPersistentStore");
}

id objc_msgSend_updatePreferredSplitBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePreferredSplitBehavior");
}

id objc_msgSend_updateProgressViewSizeConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateProgressViewSizeConstraints");
}

id objc_msgSend_updateProviderNodes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateProviderNodes");
}

id objc_msgSend_updateRelatedViewControllersWithCurrentHierarchy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRelatedViewControllersWithCurrentHierarchy");
}

id objc_msgSend_updateSelectionToMatchBrowsedLocation_scrollToVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelectionToMatchBrowsedLocation:scrollToVisible:");
}

id objc_msgSend_updateStateAndSceneIdentifiersWithWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStateAndSceneIdentifiersWithWindow:");
}

id objc_msgSend_updateTraitCollectionTabBarSetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTraitCollectionTabBarSetting");
}

id objc_msgSend_updateUIPHorizontalInsetsIfNecessaryWithCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUIPHorizontalInsetsIfNecessaryWithCoordinator:");
}

id objc_msgSend_updatedConfigurationForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedConfigurationForState:");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "url");
}

id objc_msgSend_urls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urls");
}

id objc_msgSend_userAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAction");
}

id objc_msgSend_userDidTapDownloadButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDidTapDownloadButton");
}

id objc_msgSend_userDidTapOpenButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDidTapOpenButton");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceStyle");
}

id objc_msgSend_userPrefersTiledSidebarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPrefersTiledSidebarHidden");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForColumn:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewIfLoaded");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willChangeValueForKey:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene");
}

id objc_msgSend_withDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withDisplayMode:");
}

id objc_msgSend_withIsCollapsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withIsCollapsed:");
}

id objc_msgSend_withLocationChangePacingDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withLocationChangePacingDisabled:");
}
