uint64_t sub_100003990@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1000039A8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1000039A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000039CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain();
  v4(v6, v7);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

void sub_100003ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char **v17;
  id v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[24];
  char v38[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3, v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = a4 + 16;
    swift_beginAccess(v13, v37, 0, 0);
    v15 = swift_unknownObjectWeakLoadStrong(v13, v14);
    if (v15)
    {
      v16 = (void *)v15;
      v17 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
      if (objc_msgSend(v12, "isGathering"))
      {
        v18 = objc_msgSend(v16, "isGathering");
        if ((v18 & 1) == 0)
        {
          v19 = Logger.Enumeration.unsafeMutableAddressor(v18);
          (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
          v20 = v12;
          v21 = Logger.logObject.getter(v20);
          v22 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v21, (os_log_type_t)v22))
          {
            HIDWORD(v31) = v22;
            v34 = v21;
            v23 = swift_slowAlloc(22, -1);
            v32 = (_QWORD *)swift_slowAlloc(8, -1);
            v33 = swift_slowAlloc(32, -1);
            v36 = v33;
            *(_DWORD *)v23 = 136446466;
            v24 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
            if (!v24)
            {

              __break(1u);
              return;
            }
            v25 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
            swift_bridgeObjectRetain(*(_QWORD *)&v20[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
            v35 = sub_1000544FC(v25, v24, &v36);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);

            swift_bridgeObjectRelease(v24);
            *(_WORD *)(v23 + 12) = 2112;
            v35 = (uint64_t)v20;
            v26 = v20;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
            v27 = v32;
            *v32 = v12;

            v28 = v34;
            _os_log_impl((void *)&_mh_execute_header, v34, BYTE4(v31), "%{public}s setting isGathering to false, DOCNodeCollection (%@)", (uint8_t *)v23, 0x16u);
            v29 = sub_10006922C(&qword_100643AB0);
            swift_arrayDestroy(v27, 1, v29);
            swift_slowDealloc(v27, -1, -1);
            v30 = v33;
            swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v30, -1, -1);
            swift_slowDealloc(v23, -1, -1);

            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            v17 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          }
        }
      }
      objc_msgSend(v12, "setIsGathering:", objc_msgSend(v16, v17[484]));

    }
    else
    {
      v16 = v12;
    }

  }
}

uint64_t sub_100003DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v5 = (char *)*(id *)(a1 + 8 * i + 32);
      v6 = v5;
      v7 = *(void **)&v5[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v7)
      {
        v8 = v7;
        if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0)
        {
          if (objc_msgSend(v8, "isUsingFPFS"))
          {
            type metadata accessor for DOCICloudRootNode(0);
            v9 = static DOCICloudRootNode.iCloudRootNode(for:)(v8);

            v8 = (id)v9;
          }
        }

      }
    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

id sub_100003F18(uint64_t a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id result;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  objc_super v39;

  v3 = objc_msgSend(v1, "viewControllers");
  v4 = sub_10004C6C4();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  isa = Array._bridgeToObjectiveC()().super.isa;
  v39.receiver = v1;
  v39.super_class = (Class)type metadata accessor for DOCFullDocumentManagerNavigationController();
  objc_msgSendSuper2(&v39, "setViewControllers:", isa);

  if ((unint64_t)v5 >> 62)
  {
LABEL_37:
    if (v5 < 0)
      v34 = v5;
    else
      v34 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v7 = _CocoaArrayWrapper.endIndex.getter(v34);
    if (v7)
      goto LABEL_3;
LABEL_41:
    swift_bridgeObjectRelease(a1);
    return (id)swift_bridgeObjectRelease_n(v5, 2);
  }
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  if (!v7)
    goto LABEL_41;
LABEL_3:
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v35 = a1;
    else
      v35 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = 0;
  v10 = v5 & 0xC000000000000001;
  v11 = v5 + 32;
  v37 = v5 & 0xC000000000000001;
  v36 = v5;
  while (1)
  {
    while (1)
    {
      if (v10)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v5);
      else
        v12 = *(id *)(v11 + 8 * v9);
      v13 = v12;
      if (__OFADD__(v9++, 1))
        goto LABEL_36;
      if (v8)
        break;
LABEL_21:
      v17 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v12);
      KeyPath = swift_getKeyPath(&unk_1004DBD80);
      (*(void (**)(char *__return_ptr))((swift_isaMask & *v17) + 0x60))(&v38);
      swift_release(KeyPath);

      if (v38 == 2 || (v38 & 1) == 0)
        goto LABEL_6;
      v20 = v11;
      v21 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v19);
      v22 = swift_getKeyPath(&unk_1004DBD80);
      v38 = 0;
      (*(void (**)(char *, uint64_t))((swift_isaMask & *v21) + 0x68))(&v38, v22);

      result = objc_msgSend(v13, "view");
      if (!result)
        goto LABEL_47;
      v24 = result;
      v25 = (_QWORD *)UIViewController.associatedObjectStorage.getter(result);
      v26 = swift_getKeyPath(&unk_1004DBD80);
      (*(void (**)(char *__return_ptr))((swift_isaMask & *v25) + 0x60))(&v38);
      swift_release(v26);

      objc_msgSend(v24, "setHidden:", v38 & 1);
      v11 = v20;
      v5 = v36;
      v10 = v37;
      if (v9 == v7)
        goto LABEL_41;
    }
    if ((a1 & 0xC000000000000001) != 0)
      break;
    if (*(id *)(a1 + 32) != v12)
    {
      swift_bridgeObjectRetain(a1);
      if (v8 != 1)
      {
        v15 = 5;
        while (1)
        {
          v16 = v15 - 3;
          if (__OFADD__(v15 - 4, 1))
            break;
          if (*(id *)(a1 + 8 * v15) == v13)
            goto LABEL_33;
          ++v15;
          if (v16 == v8)
            goto LABEL_20;
        }
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_20:
      swift_bridgeObjectRelease(a1);
      goto LABEL_21;
    }
LABEL_6:

LABEL_7:
    if (v9 == v7)
      goto LABEL_41;
  }
  swift_bridgeObjectRetain(a1);
  v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  swift_unknownObjectRelease(v27);
  if ((id)v27 == v13)
  {
LABEL_33:

    swift_bridgeObjectRelease(a1);
    goto LABEL_7;
  }
  if (v8 == 1)
    goto LABEL_20;
  v28 = v7;
  v29 = v5;
  v30 = v11;
  v31 = 1;
  while (1)
  {
    result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, a1);
    v32 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    v33 = result;
    swift_unknownObjectRelease(result);
    if (v33 == v13)
    {

      swift_bridgeObjectRelease(a1);
      v11 = v30;
      v5 = v29;
      v7 = v28;
      v10 = v37;
      goto LABEL_7;
    }
    ++v31;
    if (v32 == v8)
    {
      swift_bridgeObjectRelease(a1);
      v11 = v30;
      v5 = v29;
      v7 = v28;
      v10 = v37;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1000042FC(void *a1)
{
  uint64_t v1;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = objc_msgSend(a1, "identifier");
  v4 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v1 + 16, v17, 0, 0);
  v5 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v5 + 16))
  {

LABEL_6:
    v9 = type metadata accessor for DOCFileProviderSyncStateObserver();
    swift_allocObject(v9, 152, 7);
    v10 = a1;
    v8 = sub_10009397C((uint64_t)v10);
    v11 = objc_msgSend(v10, "identifier");
    swift_beginAccess(v4, v16, 33, 0);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v15 = *v4;
    *v4 = 0x8000000000000000;
    sub_10007F744(v8, v11, isUniquelyReferenced_nonNull_native);
    v13 = *v4;
    *v4 = v15;

    swift_bridgeObjectRelease(v13);
    swift_endAccess(v16);
    return v8;
  }
  swift_bridgeObjectRetain(v5);
  v6 = sub_100079D38(v3);
  if ((v7 & 1) == 0)
  {

    swift_bridgeObjectRelease(v5);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  swift_retain();

  swift_bridgeObjectRelease(v5);
  return v8;
}

id sub_100004460()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _BYTE v11[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v11, 0, 0);
    v4 = *v3;
    if (v4)
    {
      v5 = type metadata accessor for DOCItemCollectionViewController(0);
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = (void *)v6;
        v8 = v4;

        v9 = objc_msgSend(v7, "traitCollection");
        return v9;
      }
    }

  }
  return objc_msgSend(v0, "traitCollection");
}

id sub_10000454C(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  objc_super v13;
  void **aBlock;
  uint64_t v15;
  id (*v16)(uint64_t, uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = 0;
  v6 = &v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  v7 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)v6 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v6 + 1) = v7;
  v8 = (uint64_t)&v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  LOBYTE(aBlock) = 0;
  v19 = 0;
  v16 = 0;
  v17 = 0;
  v15 = 0;
  swift_unknownObjectWeakInit(&v18);
  sub_1000423F8((uint64_t)&aBlock, v8, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v18 = a1;
  v19 = a2;
  aBlock = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100033024;
  v17 = &unk_1005D1AA8;
  v9 = _Block_copy(&aBlock);
  v10 = v19;
  swift_retain();
  swift_release(v10);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, "initWithSectionProvider:", v9);
  swift_release(a2);
  _Block_release(v9);
  return v11;
}

void sub_100004678(uint64_t a1, unint64_t a2, id a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  unint64_t v36;
  unint64_t v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  unsigned int v52;
  id v53;
  NSArray v54;
  unsigned int v55;
  void *v56;
  void *v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  _QWORD *v85;
  void *v86;
  _QWORD *v87;
  id v88;
  _QWORD *v89;
  void *v90;
  _QWORD *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void **aBlock;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  void *v106;
  uint64_t (*v107)();
  _QWORD *v108;

  v13 = objc_msgSend(a3, "identifier");
  v14 = sub_100089EFC(a1, (uint64_t)v13);

  v100 = a5;
  v101 = v13;
  v99 = a4;
  if (v14)
  {
    v16 = type metadata accessor for DOCFileProviderSource();
    v17 = swift_dynamicCastClass(v14, v16);
    if (v17)
    {
      v97 = v14;
      v18 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain;
      v98 = (char *)v17;
      v19 = *(void **)(v17 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      v96 = (_QWORD *)v16;
      if (v19)
      {
        v20 = objc_msgSend(v19, "needsAuthentication");
        v21 = objc_msgSend(v19, "isiCloudDriveProvider");
      }
      else
      {
        v21 = 0;
        v20 = 0;
      }
      v47 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      v48 = objc_msgSend(v47, "ubiquityIdentityToken");
      swift_unknownObjectRelease(v48);

      if (objc_msgSend(a6, "isPickerUI"))
      {
        if (!a7)
          goto LABEL_36;
        if (*(_QWORD *)(a7 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove)
          && (v49 = *(void **)&v98[v18]) != 0)
        {
          v50 = (void *)objc_opt_self(DOCManagedPermission);
          v51 = v49;
          v52 = v21;
          v53 = objc_msgSend(v50, "defaultPermission");
          sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
          v54.super.isa = Array._bridgeToObjectiveC()().super.isa;
          v55 = objc_msgSend(v53, "canItems:performAction:fileProviderDomain:", v54.super.isa, 1, v51);

          v21 = v52;
        }
        else
        {
          if (!*(_QWORD *)(a7 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave))
            goto LABEL_36;
          v56 = *(void **)&v98[v18];
          if (!v56)
            goto LABEL_36;
          v57 = (void *)objc_opt_self(DOCManagedPermission);
          v51 = v56;
          v54.super.isa = (Class)objc_msgSend(v57, "defaultPermission");
          v55 = -[objc_class canHostAppPerformAction:fileProviderDomain:](v54.super.isa, "canHostAppPerformAction:fileProviderDomain:", 1, v51);
        }

        if (((v20 | v55 ^ 1) & 1) != 0)
          goto LABEL_36;
      }
      else if ((v20 & 1) != 0)
      {
        goto LABEL_36;
      }
      if (v48)
        v58 = 0;
      else
        v58 = v21;
      if (v58 != 1)
        goto LABEL_54;
LABEL_36:
      if (!((unint64_t)a1 >> 62))
      {
        v59 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a1);
        if (v59)
          goto LABEL_38;
LABEL_49:
        swift_bridgeObjectRelease(a1);
LABEL_54:
        v89 = (_QWORD *)swift_allocObject(&unk_1005CF5A0, 40, 7);
        v89[2] = v99;
        v89[3] = v100;
        v89[4] = v98;
        v107 = sub_1000AD138;
        v108 = v89;
        aBlock = _NSConcreteStackBlock;
        v104 = 1107296256;
        v105 = sub_10004A82C;
        v106 = &unk_1005CF5B8;
        v90 = _Block_copy(&aBlock);
        v91 = v108;
        v92 = v97;
        swift_retain();
        swift_release(v91);
        DOCRunInMainThread(v90);

        _Block_release(v90);
        return;
      }
LABEL_61:
      if (a1 < 0)
        v94 = a1;
      else
        v94 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v59 = _CocoaArrayWrapper.endIndex.getter(v94);
      if (v59)
      {
LABEL_38:
        a2 = a1 & 0xC000000000000001;
        v60 = DOCDocumentSourceIdentifierLocal;
        v61 = 4;
        while (1)
        {
          if (a2)
            v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61 - 4, a1);
          else
            v62 = *(id *)(a1 + 8 * v61);
          v63 = v62;
          v64 = v61 - 3;
          if (__OFADD__(v61 - 4, 1))
          {
            __break(1u);
            goto LABEL_56;
          }
          v65 = objc_msgSend(v62, "identifier");
          v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
          v68 = v67;
          v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
          if (v66 == v69 && v68 == v70)
            break;
          v72 = v70;
          v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v68, v69, v70, 0);

          swift_bridgeObjectRelease(v68);
          swift_bridgeObjectRelease(v72);
          if ((v73 & 1) != 0)
            goto LABEL_51;

          ++v61;
          if (v64 == v59)
            goto LABEL_49;
        }

        swift_bridgeObjectRelease_n(v68, 2);
LABEL_51:
        swift_bridgeObjectRelease(a1);
        v74 = swift_dynamicCastClass(v63, v96);
        if (v74)
        {
          v75 = v74;
          v76 = *(id *)DOCLog.UI.unsafeMutableAddressor(v74);
          v77 = static os_log_type_t.info.getter();
          v78 = sub_10006922C((uint64_t *)&unk_100644560);
          v79 = swift_allocObject(v78, 112, 7);
          *(_OWORD *)(v79 + 16) = xmmword_1004D4CE0;
          v80 = objc_msgSend(v98, "displayName");
          v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
          v83 = v82;

          *(_QWORD *)(v79 + 56) = &type metadata for String;
          *(_QWORD *)(v79 + 64) = sub_10006A638();
          *(_QWORD *)(v79 + 32) = v81;
          *(_QWORD *)(v79 + 40) = v83;
          *(_QWORD *)(v79 + 96) = v96;
          *(_QWORD *)(v79 + 104) = sub_10005A360((unint64_t *)&qword_100647558, (uint64_t (*)(uint64_t))type metadata accessor for DOCFileProviderSource, (uint64_t)&protocol conformance descriptor for NSObject);
          *(_QWORD *)(v79 + 72) = v98;
          v84 = v97;

          swift_bridgeObjectRelease(v79);
          v85 = (_QWORD *)swift_allocObject(&unk_1005CF5F0, 40, 7);
          v85[2] = v99;
          v85[3] = v100;
          v85[4] = v75;
          v107 = sub_1000AD138;
          v108 = v85;
          aBlock = _NSConcreteStackBlock;
          v104 = 1107296256;
          v105 = sub_10004A82C;
          v106 = &unk_1005CF608;
          v86 = _Block_copy(&aBlock);
          v87 = v108;
          swift_retain();
          v88 = v63;
          swift_release(v87);
          DOCRunInMainThread(v86);

          _Block_release(v86);
          return;
        }

        goto LABEL_54;
      }
      goto LABEL_49;
    }

  }
  v98 = (char *)*(id *)DOCLog.UI.unsafeMutableAddressor(v15);
  LODWORD(v97) = ((uint64_t (*)(void))static os_log_type_t.error.getter)();
  v95 = sub_10006922C((uint64_t *)&unk_100644560);
  v22 = swift_allocObject(v95, 112, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
  v23 = objc_msgSend(a3, "identifier");
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_10006A638();
  *(_QWORD *)(v22 + 32) = v24;
  *(_QWORD *)(v22 + 40) = v26;
  v96 = (_QWORD *)v22;
  if ((unint64_t)a1 >> 62)
  {
LABEL_56:
    if (a1 < 0)
      v93 = a1;
    else
      v93 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v27 = _CocoaArrayWrapper.endIndex.getter(v93);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v27 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v28 = (void **)_swiftEmptyArrayStorage;
  if (v27)
  {
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100081774(0, v27 & ~(v27 >> 63), 0);
    if (v27 < 0)
    {
      __break(1u);
      goto LABEL_61;
    }
    v29 = 0;
    v28 = aBlock;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, a1);
      else
        v30 = *(id *)(a1 + 8 * v29 + 32);
      v31 = v30;
      v32 = objc_msgSend(v30, "identifier");
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      aBlock = v28;
      v37 = (unint64_t)v28[2];
      v36 = (unint64_t)v28[3];
      if (v37 >= v36 >> 1)
      {
        sub_100081774(v36 > 1, v37 + 1, 1);
        v28 = aBlock;
      }
      ++v29;
      v28[2] = (void *)(v37 + 1);
      v38 = &v28[2 * v37];
      v38[4] = (void *)v33;
      v38[5] = v35;
    }
    while (v27 != v29);
  }
  v96[12] = sub_10006922C(&qword_10064F390);
  v96[13] = sub_100062698((unint64_t *)&qword_100647550, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
  v96[9] = v28;

  swift_bridgeObjectRelease(v96);
  if (a2)
  {
    v39 = swift_errorRetain(a2);
    v40 = static os_log_type_t.error.getter(v39);
    v41 = swift_allocObject(v95, 72, 7);
    *(_OWORD *)(v41 + 16) = xmmword_1004D9670;
    v42 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v41 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v41 + 64) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v41 + 32) = v42;
    sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v43 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)("Error: %@", 9, 2, &_mh_execute_header, v43, v40, v41);
    swift_bridgeObjectRelease(v41);

    swift_errorRelease(a2);
  }
  v44 = swift_allocObject(&unk_1005CF550, 32, 7);
  *(_QWORD *)(v44 + 16) = v99;
  *(_QWORD *)(v44 + 24) = v100;
  v107 = sub_10010C18C;
  v108 = (_QWORD *)v44;
  aBlock = _NSConcreteStackBlock;
  v104 = 1107296256;
  v105 = sub_10004A82C;
  v106 = &unk_1005CF568;
  v45 = _Block_copy(&aBlock);
  v46 = v108;
  swift_retain();
  swift_release(v46);
  DOCRunInMainThread(v45);
  _Block_release(v45);

}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  void *v4;
  void *v5;
  id v6;
  NSString v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  objc_super v17;

  v2 = v1;
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v17, "viewDidAppear:", a1);
  objc_msgSend(v2, "loadViewIfNeeded");
  v4 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    v5 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    v6 = v4;
    v7 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration(v5);
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v10 = v9;
      v7 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v8 = swift_bridgeObjectRelease(v10).n128_u64[0];
    }
    objc_msgSend(v6, "setFocusGroupIdentifier:", v7, v8);

    if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0)
    {
      v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
      if (v11)
      {
        swift_retain();
        sub_10038CF58();
        swift_release(v11);
      }
    }
    if (v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1)
      sub_1002C9A98();
    v12 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
    v13 = objc_msgSend(v5, "sceneIdentifier");
    v14 = objc_msgSend(v12, "globalTabbedBrowserControllerForIdentifier:", v13);

    if (v14)
    {
      v15 = objc_msgSend(v14, "effectiveFullBrowser");

      objc_msgSend(v15, "establishFirstResponderIfNeeded");
    }
    if (qword_100641228 != -1)
      swift_once(&qword_100641228, sub_1004B9C08);
    v16 = qword_100672F18;
    swift_retain();
    sub_1001B4944(v2, v16, (SEL *)&selRef_addObject_, "Registering FilesIntentsViewAnnotationDelegate: %s");
    swift_release(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_100005254()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  char **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *Strong;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char **v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  _QWORD *v59;
  void *v60;
  double v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  unint64_t v75;
  id v76;
  id v77;
  char **v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  void *ObjCClassFromObject;
  uint64_t ObjCClassMetadata;
  uint64_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  id v97;
  NSString v98;
  Class isa;
  uint64_t v100;
  uint64_t v101;
  NSString v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  _BYTE v110[24];
  uint64_t v111;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(char ***)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t)&v110[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v111 = (uint64_t)_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v6)
  {
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  v7 = v6 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v7 + 16) & 1) != 0)
  {
    v8 = *(void **)(*(_QWORD *)v7 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v8);
  }
  else
  {
    v8 = *(void **)(v7 + 8);
    swift_unknownObjectRetain(v8);
    if (!v8)
      goto LABEL_12;
  }
  v9 = objc_msgSend(v8, "isShared");
  swift_unknownObjectRelease(v8);
  if (v9)
  {
    v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView;
    v11 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView];
    v12 = v11;
    v13 = v11;
    if (v11)
    {
LABEL_9:
      *(_QWORD *)&v1[v10] = v13;
      v15 = v11;
      v16 = v13;

      v17 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= v18 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized Array._endMutation()(v20);
      sub_10017FFE8();
      goto LABEL_14;
    }
    sub_10017FAEC();
    if (v14)
    {
      v13 = v14;
      v12 = *(void **)&v1[v10];
      goto LABEL_9;
    }
  }
LABEL_12:
  v21 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView] = 0;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_presentedCollaborationViewController], v22);
  if (!Strong)
    goto LABEL_15;
  v17 = Strong;
  objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);
LABEL_14:

LABEL_15:
  v24 = sub_10009B854();
  if (v24)
  {
    v25 = v24;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v27 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v26 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v27 >= v26 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
    v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
    specialized Array._endMutation()(v28);

  }
  v29 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView];
  if (v29)
  {
    v30 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
    v32 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v31 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v32 >= v31 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
    v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
    specialized Array._endMutation()(v33);

  }
  if ((sub_100098DBC() & 1) == 0)
    goto LABEL_29;
  v34 = *(char **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView];
  if (!v34)
    goto LABEL_29;
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel];
  v36 = v34;
  swift_retain();
  v37 = sub_10008DB78();
  swift_release(v35);
  if ((v37 & 1) == 0)
    goto LABEL_28;
  v38 = (char **)(id)v36;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  v39 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v40 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v39 >= v40 >> 1)
    goto LABEL_108;
  while (1)
  {
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v38);
    specialized Array._endMutation()(v41);
LABEL_28:

LABEL_29:
    if ((sub_10004A370() & 1) != 0
      && v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable] == 1)
    {
      v42 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager];
      if (v42)
      {
        v43 = v42;
        v44 = Logger.DocumentManager.unsafeMutableAddressor(v43);
        v45 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v3[2])(v5, v44, v2);
        v46 = Logger.logObject.getter(v45);
        v47 = static os_log_type_t.default.getter(v46);
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v48 = 0;
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "Files Family Tip, adding tipsHeaderView", v48, 2u);
          swift_slowDealloc(v48, -1, -1);
        }

        ((void (*)(uint64_t, uint64_t))v3[1])(v5, v2);
        v49 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView;
        v50 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView];
        if (v50)
        {
          v51 = *(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView];
        }
        else
        {
          v51 = sub_1001164B0();
          v50 = 0;
        }
        v52 = v50;
        v53 = v51;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
        v55 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v54 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v55 >= v54 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
        v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
        specialized Array._endMutation()(v56);
        v57 = *(void **)&v1[v49];
        *(_QWORD *)&v1[v49] = v53;
        v58 = v53;

        v59 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v110, 0, 0);
        v60 = *(void **)&v1[v49];
        if (v60)
        {
          v61 = 0.0;
          if (*v59 == 2)
            v61 = 16.0;
          objc_msgSend(v60, "setDirectionalLayoutMargins:", v61, 0.0, 16.0, 0.0);
        }

      }
    }
    v62 = sub_10009BBE8();
    v38 = &selRef_viewOptionsRoot;
    v63 = objc_msgSend(v62, "arrangedSubviews");

    v64 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v63, v64);

    if ((unint64_t)v65 >> 62)
    {
      if (v65 < 0)
        v80 = v65;
      else
        v80 = v65 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v65);
      v66 = _CocoaArrayWrapper.endIndex.getter(v80);
      swift_bridgeObjectRelease(v65);
    }
    else
    {
      v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v65);
    if (!v66)
    {
      v72 = v111;
      if ((unint64_t)v111 >> 62)
      {
        if (v111 < 0)
          v107 = v111;
        else
          v107 = v111 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v111);
        v108 = _CocoaArrayWrapper.endIndex.getter(v107);
        swift_bridgeObjectRelease(v72);
        if (v108 > 0)
          goto LABEL_55;
      }
      else if (*(uint64_t *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
      {
        goto LABEL_55;
      }
    }
    v67 = sub_10009BBE8();
    v68 = objc_msgSend(v67, "arrangedSubviews");

    v69 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v68, v64);
    if ((unint64_t)v69 >> 62)
    {
      if (v69 < 0)
        v81 = v69;
      else
        v81 = v69 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v69);
      v70 = _CocoaArrayWrapper.endIndex.getter(v81);
      swift_bridgeObjectRelease(v69);
    }
    else
    {
      v70 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v69);
    if (v70 >= 1)
    {
      v71 = v111;
      if (!((unint64_t)v111 >> 62))
      {
        if (*(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_56;
LABEL_55:
        v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] = 1;
        goto LABEL_56;
      }
      if (v111 < 0)
        v105 = v111;
      else
        v105 = v111 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v111);
      v106 = _CocoaArrayWrapper.endIndex.getter(v105);
      swift_bridgeObjectRelease(v71);
      if (!v106)
        goto LABEL_55;
    }
LABEL_56:
    v73 = sub_10009BBE8();
    v74 = objc_msgSend(v73, "arrangedSubviews");

    v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v74, v64);
    v75 = v111;
    swift_bridgeObjectRetain(v111);
    LOBYTE(v74) = sub_10008829C(v36, v75);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v75);
    if ((v74 & 1) != 0)
      goto LABEL_95;
    v76 = sub_10009BBE8();
    v77 = objc_msgSend(v76, "arrangedSubviews");

    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v77, v64);
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v82 = v2;
      else
        v82 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v39 = _CocoaArrayWrapper.endIndex.getter(v82);
      v5 = v39;
      if (!v39)
        goto LABEL_77;
    }
    else
    {
      v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v39 = swift_bridgeObjectRetain(v2);
      if (!v5)
        goto LABEL_77;
    }
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_107;
    }
    v36 = 0;
    v3 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v78 = (char **)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v2);
      else
        v78 = (char **)*(id *)(v2 + 8 * v36 + 32);
      v38 = v78;
      ++v36;
      v79 = sub_10009BBE8();
      objc_msgSend(v79, "removeArrangedSubview:", v38);

      objc_msgSend(v38, "removeFromSuperview");
    }
    while (v5 != v36);
LABEL_77:
    swift_bridgeObjectRelease_n(v2, 2);
    v2 = v111;
    if ((unint64_t)v111 >> 62)
    {
      if (v111 < 0)
        v87 = v111;
      else
        v87 = v111 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v111, 2);
      v39 = _CocoaArrayWrapper.endIndex.getter(v87);
      v5 = v39;
      if (!v39)
        goto LABEL_89;
    }
    else
    {
      v5 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
      v39 = swift_bridgeObjectRetain_n(v111, 2);
      if (!v5)
        goto LABEL_89;
    }
    if (v5 >= 1)
      break;
LABEL_107:
    __break(1u);
LABEL_108:
    v109 = v39;
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v39 + 1, 1);
    v39 = v109;
  }
  v83 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v84 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v83, v2);
    else
      v84 = *(id *)(v2 + 8 * v83 + 32);
    v85 = v84;
    ++v83;
    v86 = sub_10009BBE8();
    objc_msgSend(v86, "addArrangedSubview:", v85);

  }
  while (v5 != v83);
LABEL_89:
  swift_bridgeObjectRelease_n(v2, 2);
  objc_msgSend(v1, "loadViewIfNeeded");
  v88 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v89 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v89)
    goto LABEL_110;
  v90 = objc_msgSend(v89, "collectionViewLayout");
  ObjCClassFromObject = (void *)swift_getObjCClassFromObject();

  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(ObjCClassFromObject, "invalidationContextClass"));
  v93 = sub_10004F2F0(0, &qword_100646C40, UICollectionViewLayoutInvalidationContext_ptr);
  v94 = swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v93, 0, 0, 0);
  v95 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v94)), "init");
  swift_bridgeObjectRetain("n");
  objc_msgSend(v1, "loadViewIfNeeded");
  v96 = *(void **)&v1[v88];
  if (!v96)
    goto LABEL_111;
  v97 = v96;
  v98 = String._bridgeToObjectiveC()();
  isa = (Class)objc_msgSend(v97, "indexPathsForVisibleSupplementaryElementsOfKind:", v98);

  if (!isa)
  {
    v100 = type metadata accessor for IndexPath(0);
    v101 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v100);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v101);
  }
  v102 = String._bridgeToObjectiveC()();
  objc_msgSend(v95, "invalidateSupplementaryElementsOfKind:atIndexPaths:", v102, isa, swift_bridgeObjectRelease("n").n128_f64[0]);

  objc_msgSend(v1, "loadViewIfNeeded");
  v103 = *(void **)&v1[v88];
  if (v103)
  {
    v104 = objc_msgSend(v103, "collectionViewLayout");
    objc_msgSend(v104, "invalidateLayoutWithContext:", v95);

    swift_arrayDestroy(&qword_1005BF9C8, 1, &type metadata for String);
    v75 = v111;
LABEL_95:
    swift_bridgeObjectRelease(v75);
    return;
  }
LABEL_112:
  __break(1u);
}

unint64_t sub_100005D2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  id v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v7, 0, 0);
  v2 = *v1;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v6 = v2;
    else
      v6 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v3)
      goto LABEL_9;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease(v2);
      return v3;
    }
  }
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v2 + 8 * result + 32);
LABEL_8:
    v3 = (uint64_t)v5;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_100005E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  NSString v31;
  id v32;
  uint64_t v33;
  _QWORD *v35;
  _BYTE v36[64];

  v2 = (*(uint64_t (**)(void))(a2 + 48))();
  v3 = (void *)v2;
  v5 = v4;
  v7 = v6;
  v8 = v2;
  v9 = v2;
  if (!v2)
  {
LABEL_5:
    if (!v7)
      goto LABEL_10;
    goto LABEL_6;
  }
  if (v2 == 1)
    return 0;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v12 = v11;
  if (String.count.getter(v10, v11) >= 1)
  {
    v13._countAndFlagsBits = v10;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v12);
    v8 = 0x203A656372756F53;
    v9 = 0xE800000000000000;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease(v12);
  v8 = 0;
  v9 = 0;
  if (!v7)
    goto LABEL_10;
LABEL_6:
  swift_bridgeObjectRetain(v7);
  if (String.count.getter(v5, v7) >= 1)
  {
    v14._countAndFlagsBits = v5;
    v14._object = v7;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(v7);
    v16 = 0x203A656C746954;
    v15 = 0xE700000000000000;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease(v7);
LABEL_10:
  v16 = 0;
  v15 = 0;
LABEL_11:
  v17 = sub_10006922C((uint64_t *)&unk_100644950);
  inited = swift_initStackObject(v17, v36);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v15;
  if (!v9)
  {
    v19 = _swiftEmptyArrayStorage;
    if (!v15)
      goto LABEL_22;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain(v9);
  v19 = sub_100081A50(0, 1, 1, _swiftEmptyArrayStorage);
  v21 = v19[2];
  v20 = v19[3];
  if (v21 >= v20 >> 1)
    v19 = sub_100081A50((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
  v19[2] = v21 + 1;
  v22 = &v19[2 * v21];
  v22[4] = v8;
  v22[5] = v9;
  if (v15)
  {
LABEL_17:
    swift_bridgeObjectRetain(v15);
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v19 = sub_100081A50(0, v19[2] + 1, 1, v19);
    v24 = v19[2];
    v23 = v19[3];
    if (v24 >= v23 >> 1)
      v19 = sub_100081A50((_QWORD *)(v23 > 1), v24 + 1, 1, v19);
    v19[2] = v24 + 1;
    v25 = &v19[2 * v24];
    v25[4] = v16;
    v25[5] = v15;
  }
LABEL_22:
  swift_release(inited);
  if (!v19[2])
  {
    swift_bridgeObjectRelease(v19);

    swift_bridgeObjectRelease(v7);
    return 0;
  }
  v35 = v19;
  v26 = sub_10006922C(&qword_10064F390);
  v27 = sub_100062698((unint64_t *)&qword_10064D530, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
  BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v26, v27);
  v29 = v28;
  swift_bridgeObjectRelease(v19);
  v30 = (void *)objc_opt_self(DOCAXIdentifier);
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "browsingRootIdentifierForSourceIdentifier:", v31, swift_bridgeObjectRelease(v29).n128_f64[0], v35);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  swift_bridgeObjectRelease(v7);
  return v33;
}

void sub_100006154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  char v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  void *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  char v75;
  char v76;
  id v77;
  void *v78;
  void *v79;
  uint64_t v80;
  id v81;
  void *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  char v88;
  char v89;
  id v90;
  void *v91;
  void *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t *v96;
  id v97;
  uint64_t v98;
  _QWORD v99[4];
  char v100[24];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  v5 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v100, 0, 0).n128_u64[0];
  v6 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
    if (v6 < 0)
      v39 = *v4;
    else
      v39 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v4);
    v7 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v39);
    v5 = swift_bridgeObjectRelease(v6).n128_u64[0];
    if (v7)
      goto LABEL_46;
  }
  else
  {
    v7 = *(_QWORD **)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_46;
  }
  v8 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration), "defaultEffectiveTabIdentifierForLocationRestore", *(double *)&v5);
  v9 = (void *)sub_100152104((uint64_t)v8);
  v11 = v10;

  v96 = v4;
  if ((v11 & 1) != 0)
    v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  sub_1001EC28C(v9);
  v13 = (uint64_t)v12;
  v15 = v14;
  v17 = v16;
  v18 = sub_1001EC1AC(v12, v14, v16, v9, v2);
  v98 = v19;
  v21 = v20;
  sub_1001ECE60((void *)v13, v15, v17);
  if (!v18)
  {
    v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab);
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab, v99, 32, 0);
    v13 = (uint64_t)sub_1001D35AC((uint64_t)v9, *v22);
    v24 = v23;
    v26 = v25;
    swift_endAccess(v99);
    v18 = sub_1001EC1AC((void *)v13, v24, v26, v9, v2);
    v98 = v27;
    v21 = v28;
    sub_1001ECE60((void *)v13, v24, v26);
    if (!v18)
    {
      v13 = v2;
      v18 = sub_1001E9E24((uint64_t)v9);
      v98 = v29;
      v21 = v30;
    }
  }
  v7 = _swiftEmptyArrayStorage;
  v99[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v31 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v97 = v18;
    if (v31)
      goto LABEL_10;
LABEL_30:
    swift_bridgeObjectRelease(a1);
    v38 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (a1 < 0)
    v13 = a1;
  else
    v13 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v31 = _CocoaArrayWrapper.endIndex.getter(v13);
  v97 = v18;
  if (!v31)
    goto LABEL_30;
LABEL_10:
  if (v31 < 1)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  for (i = 0; i != v31; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v35 = *(id *)(a1 + 8 * i + 32);
    v36 = v35;
    v37 = (unint64_t)objc_msgSend(v35, "status");
    if ((v37 | 2) == 2)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v37);
      v33 = *(_QWORD *)(v99[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
      v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v36);
      specialized ContiguousArray._endMutation()(v34);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(a1);
  v38 = v99[0];
  v18 = v97;
  v7 = _swiftEmptyArrayStorage;
  if ((v99[0] & 0x8000000000000000) != 0)
  {
LABEL_42:
    v48 = swift_bridgeObjectRetain(v38);
    v40 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_release(v38);
    if (!v40)
      goto LABEL_43;
LABEL_33:
    v94 = v21;
    v95 = v2;
    v99[0] = _swiftEmptyArrayStorage;
    v13 = (uint64_t)v99;
    sub_100155080(0, v40 & ~(v40 >> 63), 0);
    if (v40 < 0)
    {
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    v41 = 0;
    v42 = (_QWORD *)v99[0];
    do
    {
      if ((v38 & 0xC000000000000001) != 0)
        v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v41, v38);
      else
        v43 = *(id *)(v38 + 8 * v41 + 32);
      v44 = v43;
      v45 = objc_msgSend(v43, "identifier", v94, v95);

      v99[0] = v42;
      v47 = v42[2];
      v46 = v42[3];
      if (v47 >= v46 >> 1)
      {
        sub_100155080(v46 > 1, v47 + 1, 1);
        v42 = (_QWORD *)v99[0];
      }
      ++v41;
      v42[2] = v47 + 1;
      v42[v47 + 4] = v45;
    }
    while (v40 != v41);
    swift_release(v38);
    v21 = v94;
    v2 = v95;
    v18 = v97;
    goto LABEL_44;
  }
LABEL_31:
  if ((v38 & 0x4000000000000000) != 0)
    goto LABEL_42;
  v40 = *(_QWORD *)(v38 + 16);
  if (v40)
    goto LABEL_33;
LABEL_43:
  swift_release(v38);
  v42 = _swiftEmptyArrayStorage;
LABEL_44:
  v7 = objc_msgSend(v18, "sourceIdentifier");
  v49 = sub_1000DFACC((uint64_t)v7, (uint64_t)v42);
  swift_bridgeObjectRelease(v42);

  if ((v49 & 1) == 0)
  {
    sub_1001E9CA8(1, 1);
    swift_bridgeObjectRelease(v98);

    return;
  }
  swift_bridgeObjectRelease(v98);

  v4 = v96;
LABEL_46:
  v13 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v50 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (v50)
      goto LABEL_48;
LABEL_80:
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v13 < 0)
    v84 = *v4;
  else
    v84 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v50 = _CocoaArrayWrapper.endIndex.getter(v84);
  if (!v50)
    goto LABEL_80;
LABEL_48:
  v51 = v50 - 1;
  if (__OFSUB__(v50, 1))
  {
    __break(1u);
    goto LABEL_82;
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
LABEL_82:
    v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v51, v13);
    goto LABEL_53;
  }
  if ((v51 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_84;
  }
  if (v51 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v52 = *(id *)(v13 + 8 * v51 + 32);
LABEL_53:
  v53 = v52;
  v54 = objc_msgSend(v52, "sourceIdentifier", swift_bridgeObjectRelease(v13).n128_f64[0]);

  v55 = DOCDocumentSourceIdentifierEmptyLocation;
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
  v58 = v57;
  v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  if (v56 == v59 && v58 == v60)
    goto LABEL_60;
  v62 = v60;
  v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v58, v59, v60, 0);
  swift_bridgeObjectRelease(v58);
  swift_bridgeObjectRelease(v62);
  if ((v63 & 1) != 0)
  {
LABEL_61:

    return;
  }
  v64 = DOCDocumentSourceIdentifierPlaceholderLocation;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
  v58 = v66;
  v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  v69 = v67;
  if (v65 == v68 && v58 == v67)
  {
LABEL_60:
    swift_bridgeObjectRelease_n(v58, 2);
    goto LABEL_61;
  }
  v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v58, v68, v67, 0);
  swift_bridgeObjectRelease(v58);
  swift_bridgeObjectRelease(v69);
  if ((v70 & 1) != 0)
    goto LABEL_61;
  v71 = v54;
  v72 = sub_1001F0C60(a1, (uint64_t)v71);

  if (v72)
  {
    if (objc_msgSend(v72, "status") == (id)1)
    {
      sub_1001E9CA8(1, 1);
      v73 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration), "defaultEffectiveTabIdentifierForLocationRestore");
      v74 = sub_100152104((uint64_t)v73);
      v76 = v75;

      if ((v76 & 1) != 0)
        v74 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
      v77 = sub_1001E9E24(v74);
      v79 = v78;
      swift_bridgeObjectRelease(v80);

      sub_1001D4F4C(v77, 0, 0, 1, 0, 0, 0);
    }

    return;
  }
  swift_bridgeObjectRetain(a1);
  v7 = v71;
  v13 = (uint64_t)sub_1001EE3D8(a1, (uint64_t)v7);
  swift_bridgeObjectRelease(a1);

  if (!((unint64_t)v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_72;
    goto LABEL_91;
  }
LABEL_87:
  if (v13 < 0)
    v85 = v13;
  else
    v85 = v13 & 0xFFFFFFFFFFFFFF8;
  if (_CocoaArrayWrapper.endIndex.getter(v85))
  {
LABEL_72:
    if ((v13 & 0xC000000000000001) != 0)
    {
      v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
    }
    else
    {
      if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v81 = *(id *)(v13 + 32);
    }
    v82 = v81;
    swift_bridgeObjectRelease(v13);
    v83 = sub_100200284();
    sub_1001D4F4C(v83, 0, 0, 1, 0, 0, 0);

    return;
  }
LABEL_91:
  v86 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration), "defaultEffectiveTabIdentifierForLocationRestore", swift_bridgeObjectRelease(v13).n128_f64[0]);
  v87 = sub_100152104((uint64_t)v86);
  v89 = v88;

  if ((v89 & 1) != 0)
    v87 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  v90 = sub_1001E9E24(v87);
  v92 = v91;
  swift_bridgeObjectRelease(v93);

  sub_1001D4F4C(v90, 0, 0, 1, 0, 0, 0);
}

uint64_t sub_1000069B8(char a1, uint64_t a2)
{
  _QWORD v4[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v4, *(_QWORD *)(a2 + 40));
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_100006CC4(uint64_t a1, id a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(a2, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  sub_10007E7C8(a1, v5);
  return UIMutableTraits.horizontalSizeClass.setter(v4, v5, v6);
}

void sub_100006DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unsigned __int8 v5;
  char *v6;
  void *v7;
  char *v8;
  void *v9;
  void *v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  uint64_t v39;
  char *v40;
  id v41;
  id v42;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = v0;
    v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v3 + 16) & 1) != 0
      || (v4 = *(id *)v3,
          v5 = objc_msgSend(v4, "doc_displaysSearchResults"),
          v4,
          (v5 & 1) == 0))
    {
      sub_10000E7DC();
      if (v6)
      {
        v7 = v6;
        if (v6[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1])
        {
          v8 = *(char **)&v6[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
          if (((*(unsigned __int8 *)(v2
                                                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState)
               - 5 < 0xFFFFFFFD) & *(_BYTE *)(v2
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState)) == 1)
          {
            v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
            v10 = *(void **)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
            *(_QWORD *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = v9;
            v11 = v8;
            v12 = v9;
            v13 = v11;
            v14 = v12;

            v15 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
            v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
            v16 = objc_msgSend(v13, "viewIfLoaded");
            v17 = objc_msgSend(v16, "window");

            if (v17)
              sub_1000926C8();

            v18 = *(_QWORD *)(v2
                            + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems);
            v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems];
            *(_QWORD *)&v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = v18;
            v20 = v13;
            swift_bridgeObjectRetain(v18);
            swift_bridgeObjectRelease(v19);
            v13[v15] = 0;
            v21 = objc_msgSend(v20, "viewIfLoaded");
            v22 = objc_msgSend(v21, "window");

            if (v22)
              sub_1000926C8();

            v23 = *(_QWORD *)(v2
                            + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
            v24 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems];
            *(_QWORD *)&v20[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = v23;
            v25 = v20;
            swift_bridgeObjectRetain(v23);
            swift_bridgeObjectRelease(v24);
            v13[v15] = 0;
            v26 = objc_msgSend(v25, "viewIfLoaded");
            v27 = objc_msgSend(v26, "window");

            if (v27)
              sub_1000926C8();

            v28 = &v25[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
            *(_QWORD *)&v25[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting + 8] = &off_1005DA890;
            v29 = v2;
          }
          else
          {
            v30 = *(void **)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
            *(_QWORD *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = 0;
            v31 = v8;

            v32 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
            v31[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
            v33 = objc_msgSend(v31, "viewIfLoaded");
            v34 = objc_msgSend(v33, "window");

            if (v34)
              sub_1000926C8();

            v35 = *(_QWORD *)&v31[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems];
            *(_QWORD *)&v31[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
            v36 = v31;
            swift_bridgeObjectRelease(v35);
            v31[v32] = 0;
            v37 = objc_msgSend(v36, "viewIfLoaded");
            v38 = objc_msgSend(v37, "window");

            if (v38)
              sub_1000926C8();

            v39 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems];
            *(_QWORD *)&v36[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
            v40 = v36;
            swift_bridgeObjectRelease(v39);
            v31[v32] = 0;
            v41 = objc_msgSend(v40, "viewIfLoaded");
            v42 = objc_msgSend(v41, "window");

            if (v42)
              sub_1000926C8();

            v28 = &v40[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
            *(_QWORD *)&v40[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting + 8] = 0;
            v29 = 0;
          }
          swift_unknownObjectWeakAssign(v28, v29);

        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100007214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  double v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  double v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *__ptr32 *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  id *v65;
  void *v66;
  uint64_t v67;
  int v68;
  id v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  void *v73;
  double v74;
  void **v75;
  id v76;
  unint64_t v77;
  void **v78;
  uint64_t v79;
  void *v80;
  id v81;
  double v82;
  double v83;
  double v84;
  id v85;
  __int128 v86;
  id v87;
  double v88;
  id v89;
  id v90;
  void **v91;
  __int128 v92;
  uint64_t (**v93)(uint64_t);
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  void **v98;
  void **v99;
  void **v100;
  void **v101;
  void **v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  int v117;
  unint64_t v118;
  uint64_t v119;
  void *v120;
  unint64_t v121;
  NSObject *v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  _BYTE *v143;
  _BYTE v144[12];
  int v145;
  _QWORD *v146;
  uint64_t v147;
  dispatch_queue_t v148;
  uint64_t (**v149)(uint64_t);
  uint64_t v150;
  id v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  _BYTE *v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  NSObject *v164;
  _BYTE *v165;
  id v166;
  void **v167;
  uint64_t v168;
  uint64_t (*v169)(uint64_t);
  void *v170;
  void *v171;
  uint64_t v172;
  id v173;
  char v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  uint64_t (*v186)(uint64_t);
  void **v187;
  _QWORD v188[23];
  _OWORD v189[3];
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  uint64_t (*v198)(uint64_t);
  char v199[24];
  uint64_t v200;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v144[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v144[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for OSSignpostID(0);
  v166 = *(id *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v165 = &v144[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v12)
    goto LABEL_123;
  if ((objc_msgSend(v12, "isGathering", v10) & 1) != 0
    || (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad) & 1) != 0)
  {
    v13 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier");
    v14 = DOCDocumentSourceIdentifierSearch;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    if (v15 == v18 && v17 == v19)
    {

      swift_bridgeObjectRelease_n(v17, 2);
    }
    else
    {
      v21 = v19;
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);

      swift_bridgeObjectRelease(v17);
      *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
      if ((v22 & 1) == 0)
      {
        v24 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView);
        if (v24)
          objc_msgSend(v24, "setHidden:", 1, v23);
      }
    }
    return;
  }
  v160 = v2;
  v161 = v9;
  v158 = v8;
  v159 = v4;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad) = 1;
  v25 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier");
  v26 = DOCDocumentSourceIdentifierSearch;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v29 = v28;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  if (v27 == v30 && v29 == v31)
  {

    swift_bridgeObjectRelease_n(v29, 2);
  }
  else
  {
    v33 = v31;
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v30, v31, 0);

    swift_bridgeObjectRelease(v29);
    *(_QWORD *)&v35 = swift_bridgeObjectRelease(v33).n128_u64[0];
    if ((v34 & 1) == 0)
    {
      v36 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView);
      if (v36)
        objc_msgSend(v36, "setHidden:", 1, v35);
    }
  }
  v37 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v37)
  {
LABEL_89:
    v108 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
    v109 = swift_bridgeObjectRetain(v108);
    sub_1000417B0(v109);
    swift_bridgeObjectRelease(v108);
    v110 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool);
    v111 = (_QWORD *)swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v111 + 2);
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    swift_retain();
    v166 = (id)static OS_dispatch_queue.main.getter(v112);
    sub_100362F84((uint64_t)v166, v110, v111);
    swift_release_n(v111, 2, v113);

    return;
  }
  v163 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v156 = v1;
  v38 = objc_msgSend(v37, "visibleCells", v35);
  v157 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v157);

  v162 = v0;
  v154 = v6;
  v155 = v5;
  if ((unint64_t)v39 >> 62)
    goto LABEL_84;
  v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v39);
  if (!v40)
  {
LABEL_88:
    swift_bridgeObjectRelease_n(v39, 2);
    v0 = v162;
    goto LABEL_89;
  }
LABEL_24:
  v41 = 4;
  v42 = 0;
  if ((v39 & 0xC000000000000001) != 0)
  {
LABEL_25:
    v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v39);
    goto LABEL_27;
  }
  while (1)
  {
    v43 = *(id *)(v39 + 8 * v41);
LABEL_27:
    v44 = v43;
    v45 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
LABEL_84:
      if (v39 < 0)
        v107 = v39;
      else
        v107 = v39 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v39);
      v40 = _CocoaArrayWrapper.endIndex.getter(v107);
      if (!v40)
        goto LABEL_88;
      goto LABEL_24;
    }
    v46 = type metadata accessor for DOCItemCollectionCell();
    v47 = (_QWORD *)swift_dynamicCastClass(v44, v46);
    if (!v47 || (v48 = (*(uint64_t (**)(void))((swift_isaMask & *v47) + 0x1F8))()) == 0)
    {

      if (v45 == v40)
        goto LABEL_88;
      goto LABEL_34;
    }
    v49 = (void *)v48;
    v50 = sub_10007BAFC();

    if (!v50)
      break;
    if (v45 == v40)
      goto LABEL_88;
LABEL_34:
    v42 = ++v41 - 4;
    if ((v39 & 0xC000000000000001) != 0)
      goto LABEL_25;
  }
  swift_bridgeObjectRelease_n(v39, 2);
  v164 = dispatch_group_create();
  v51 = *(void **)(v162 + v163);
  v52 = (uint64_t)_swiftEmptyArrayStorage;
  v53 = &off_1004D4000;
  if (!v51)
    goto LABEL_96;
  v54 = objc_msgSend(v51, "visibleCells");
  v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v157);

  v200 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v55 >> 62)
  {
    if (v55 < 0)
      v114 = v55;
    else
      v114 = v55 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v55);
    v56 = _CocoaArrayWrapper.endIndex.getter(v114);
    if (!v56)
      goto LABEL_94;
LABEL_39:
    if (v56 >= 1)
    {
      v57 = 0;
      v163 = v55 & 0xC000000000000001;
      v149 = &v169;
      v157 = v56;
      while (1)
      {
        v58 = v163
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v55)
            : *(id *)(v55 + 8 * v57 + 32);
        v59 = v58;
        v60 = (_QWORD *)swift_dynamicCastClass(v58, v46);
        if (v60)
        {
          v61 = (*(uint64_t (**)(void))((swift_isaMask & *v60) + 0x1F8))();
          if (v61)
            break;
        }

LABEL_42:
        if (v56 == ++v57)
        {
          swift_bridgeObjectRelease(v55);
          v52 = v200;
          goto LABEL_95;
        }
      }
      v62 = (char *)v61;
      v63 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
      v64 = *(_QWORD *)(v61 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
      if (v64)
      {
LABEL_78:
        swift_unknownObjectRetain(v64);

        v56 = v157;
        if (v64)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v103);
          v105 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v104 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v105 >= v104 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v104 > 1, v105 + 1, 1);
          v106 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v105, v64);
          specialized Array._endMutation()(v106);
        }
        goto LABEL_42;
      }
      v153 = *(_QWORD *)(v61 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool);
      if (!v153
        || (v65 = (id *)(v61 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node),
            swift_beginAccess(v61 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v199, 0, 0),
            !*v65)
        || (v66 = *(void **)&v62[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection]) == 0
        || (v152 = *v65,
            sub_100070EDC((uint64_t)&v62[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits], (uint64_t)v188, (uint64_t *)&unk_100641300), sub_100070EDC((uint64_t)v188, (uint64_t)v189, (uint64_t *)&unk_100641300), sub_1000A849C((uint64_t *)v189) == 1))
      {
LABEL_77:
        v64 = *(_QWORD *)&v62[v63];
        goto LABEL_78;
      }
      v150 = v55;
      v67 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
      v68 = v62[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder];
      swift_retain();
      v69 = v152;
      swift_unknownObjectRetain(v152);
      v151 = v66;
      sub_1000716DC(v188, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
      if (v68 == 2)
      {
        v145 = objc_msgSend(v69, "isFolder");
        v62[v67] = v145;
      }
      else
      {
        v145 = v68 & 1;
      }
      v187 = 0;
      v70 = v153;
      v148 = *(dispatch_queue_t *)(v153 + 32);
      v71 = (_QWORD *)swift_allocObject(&unk_1005CDA88, 40, 7);
      v71[2] = v70;
      v71[3] = v69;
      v71[4] = &v187;
      v72 = swift_allocObject(&unk_1005CDAB0, 32, 7);
      *(_QWORD *)(v72 + 16) = sub_1000665C4;
      *(_QWORD *)(v72 + 24) = v71;
      v146 = v71;
      v171 = sub_10010DF60;
      v172 = v72;
      v167 = _NSConcreteStackBlock;
      v168 = 1107296256;
      v169 = sub_10006655C;
      v170 = &unk_1005CDAC8;
      v73 = _Block_copy(&v167);
      v147 = v172;
      swift_retain();
      swift_unknownObjectRetain(v69);
      swift_retain();
      swift_release(v147);
      dispatch_sync(v148, v73);
      _Block_release(v73);
      LOBYTE(v73) = swift_isEscapingClosureAtFileLocation(v72, "", 103, 234, 35, 1);
      *(_QWORD *)&v74 = swift_release(v72).n128_u64[0];
      if ((v73 & 1) != 0)
        goto LABEL_122;
      v75 = v187;
      v55 = v150;
      v76 = v151;
      if (v187)
      {
        swift_release(v146);
      }
      else
      {
        v77 = (unint64_t)objc_msgSend(v151, "userInterfaceStyle", v74);
        v78 = (void **)v77;
        if (v77 >= 3)
        {
          type metadata accessor for UIUserInterfaceStyle(0);
          v170 = v80;
          v167 = v78;
          doc_warnUnrecognizedEnumValueEncountered(_:)(&v167);
          sub_100068588(&v167);
          v79 = 1;
        }
        else
        {
          v79 = qword_1004DCB50[v77];
        }
        v183 = v195;
        v184 = v196;
        v185 = v197;
        v186 = v198;
        v179 = v191;
        v180 = v192;
        v181 = v193;
        v182 = v194;
        v175 = v189[0];
        v176 = v189[1];
        v177 = v189[2];
        v178 = v190;
        if (v145)
        {
          v81 = v76;
          sub_1000716DC(v188, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
          v82 = 0.0;
        }
        else
        {
          v83 = *(double *)&v190;
          if (*(double *)&v192 < *(double *)&v190)
            v83 = *(double *)&v192;
          v84 = floor(v83);
          v85 = v76;
          sub_1000716DC(v188, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
          v82 = v84 / 1.41421356;
        }
        v86 = v190;
        objc_msgSend(v76, "displayScale");
        v87 = v152;
        v89 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:minimumSize:scale:style:isFolded:isInteractive:isFolder:", v79, 1, 1, objc_msgSend(v152, "isFolder"), v86, v82, v88);
        v90 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
        v91 = (void **)objc_msgSend(v90, "thumbnailForNode:descriptor:", v87, v89);

        v167 = v91;
        v168 = v79;
        v75 = v91;
        v92 = v184;
        v93 = v149;
        *((_OWORD *)v149 + 8) = v183;
        *((_OWORD *)v93 + 9) = v92;
        *((_OWORD *)v93 + 10) = v185;
        v93[22] = v186;
        v94 = v180;
        *((_OWORD *)v93 + 4) = v179;
        *((_OWORD *)v93 + 5) = v94;
        v95 = v182;
        *((_OWORD *)v93 + 6) = v181;
        *((_OWORD *)v93 + 7) = v95;
        v96 = v176;
        *(_OWORD *)v93 = v175;
        *((_OWORD *)v93 + 1) = v96;
        v97 = v178;
        *((_OWORD *)v93 + 2) = v177;
        *((_OWORD *)v93 + 3) = v97;
        v173 = v151;
        v174 = v145;
        swift_unknownObjectRetain(v91);
        sub_10010CA6C((uint64_t *)&v167);
        v98 = v187;
        swift_release(v146);
        swift_unknownObjectRelease(v98);
        v55 = v150;
      }
      v99 = *(void ***)&v62[v63];
      *(_QWORD *)&v62[v63] = v75;
      swift_unknownObjectRetain(v75);
      v100 = v75;
      v53 = &off_1004D4000;
      v101 = v100;
      if (v100)
      {
        if (v99 && v100 == v99)
          goto LABEL_76;
        if (!v99)
        {
          v102 = v100;
LABEL_75:
          objc_msgSend(v102, "addListener:", v62);
          goto LABEL_76;
        }
      }
      else if (!v99)
      {
        goto LABEL_76;
      }
      objc_msgSend(v99, "removeListener:", v62);
      v102 = *(void ***)&v62[v63];
      if (v102)
        goto LABEL_75;
LABEL_76:
      swift_unknownObjectRelease(v99);
      swift_unknownObjectRelease(v101);
      sub_1000716DC(v188, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
      swift_release(v153);
      swift_unknownObjectRelease(v152);

      goto LABEL_77;
    }
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
    return;
  }
  v56 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v55);
  if (v56)
    goto LABEL_39;
LABEL_94:
  swift_bridgeObjectRelease(v55);
LABEL_95:
  swift_bridgeObjectRelease(v55);
LABEL_96:
  v115 = v161;
  if ((unint64_t)v52 >> 62)
    goto LABEL_115;
  v116 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v116)
  {
LABEL_98:
    v117 = 0;
    v118 = 0;
    v115 = v52 & 0xC000000000000001;
    v163 = v52 & 0xFFFFFFFFFFFFFF8;
    v119 = *((_QWORD *)v53 + 409);
LABEL_99:
    LODWORD(v157) = v117;
    do
    {
      if (v115)
      {
        v120 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v118, v52);
        v121 = v118 + 1;
        if (__OFADD__(v118, 1))
          goto LABEL_113;
      }
      else
      {
        if (v118 >= *(_QWORD *)(v163 + 16))
          goto LABEL_114;
        v120 = *(void **)(v52 + 8 * v118 + 32);
        swift_unknownObjectRetain(v120);
        v121 = v118 + 1;
        if (__OFADD__(v118, 1))
        {
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          if (v52 < 0)
            v140 = v52;
          else
            v140 = v52 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v52);
          v116 = _CocoaArrayWrapper.endIndex.getter(v140);
          swift_bridgeObjectRelease(v52);
          if (!v116)
            goto LABEL_119;
          goto LABEL_98;
        }
      }
      v122 = v164;
      dispatch_group_enter(v164);
      v123 = swift_allocObject(&unk_1005CDA10, 24, 7);
      *(_QWORD *)(v123 + 16) = v122;
      v171 = sub_1000A8854;
      v172 = v123;
      v167 = _NSConcreteStackBlock;
      v168 = v119;
      v169 = sub_10004A82C;
      v170 = &unk_1005CDA28;
      v53 = (char *__ptr32 *)_Block_copy(&v167);
      v124 = v172;
      v125 = v122;
      LODWORD(v124) = objc_msgSend(v120, "registerGenerationCompletionHandler:", v53, swift_release(v124).n128_f64[0]);
      _Block_release(v53);
      if ((_DWORD)v124)
      {
        swift_unknownObjectRelease(v120);
        v117 = 1;
        v118 = v121;
        if (v121 != v116)
          goto LABEL_99;
        swift_bridgeObjectRelease(v52);
        goto LABEL_112;
      }
      dispatch_group_leave(v125);
      swift_unknownObjectRelease(v120);
      ++v118;
    }
    while (v121 != v116);
    swift_bridgeObjectRelease(v52);
    v115 = v161;
    if ((v157 & 1) != 0)
    {
LABEL_112:
      v127 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v128 = (void *)static OS_dispatch_queue.main.getter(v127);
      v129 = swift_allocObject(&unk_1005CBE18, 24, 7);
      swift_unknownObjectWeakInit(v129 + 16);
      v171 = sub_1001D0640;
      v172 = v129;
      v167 = _NSConcreteStackBlock;
      v168 = v119;
      v169 = sub_10004A82C;
      v170 = &unk_1005CDA50;
      v130 = _Block_copy(&v167);
      swift_retain();
      v131 = v158;
      static DispatchQoS.unspecified.getter(v132);
      *(_QWORD *)&v189[0] = _swiftEmptyArrayStorage;
      v133 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v134 = sub_10006922C((uint64_t *)&unk_100647540);
      v135 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v136 = v159;
      v137 = v134;
      v138 = v156;
      dispatch thunk of SetAlgebra.init<A>(_:)(v189, v137, v135, v156, v133);
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v131, v136, v128, v130);
      _Block_release(v130);

      (*(void (**)(_BYTE *, uint64_t))(v160 + 8))(v136, v138);
      (*(void (**)(_BYTE *, uint64_t))(v154 + 8))(v131, v155);
      v139 = v172;
      swift_release(v129);
      swift_release(v139);
      return;
    }
  }
  else
  {
LABEL_119:
    swift_bridgeObjectRelease(v52);
  }
  v141 = static os_signpost_type_t.event.getter(v126);
  v142 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  v143 = v165;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)(v141, &_mh_execute_header, v142, "Files-PPT", 9, 2, v143, "notify report did Load with visible cells but no handler", 56, 2, _swiftEmptyArrayStorage);

  (*((void (**)(_BYTE *, unint64_t))v166 + 1))(v143, v115);
  sub_100098F90();

}

uint64_t sub_10000820C()
{
  char *v0;
  void *v1;
  os_unfair_lock_s *v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v14;

  v1 = v0;
  v2 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_10006A620(aBlock);
  v3 = aBlock[0];
  os_unfair_lock_unlock(v2 + 4);
  result = swift_release(v2);
  if ((v3 & 1) == 0)
  {
    sub_1000AA44C();
    if (qword_100640FF8 != -1)
      swift_once(&qword_100640FF8, sub_10009CB2C);
    v5 = qword_100672C28;
    v6 = *(NSObject **)(qword_100672C28 + 24);
    v7 = swift_allocObject(&unk_1005DEE48, 32, 7);
    *(_QWORD *)(v7 + 16) = v1;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = swift_allocObject(&unk_1005DEE70, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_1003395CC;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_10010DB64;
    v14 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005DEE88;
    v9 = _Block_copy(aBlock);
    v10 = v14;
    swift_retain_n(v5, 2);
    v11 = v1;
    swift_retain();
    swift_release(v10);
    dispatch_sync(v6, v9);
    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 103, 40, 28, 1);
    swift_release(v5);
    swift_release(v7);
    result = swift_release(v8);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_1000083CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  id *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_strategy);
  v7 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v7, v20, 0, 0);
  if (*v7)
  {
    v8 = *v7;
    v9 = sub_10002DAFC(v8);
    v10 = sub_10004A858(a2, (uint64_t)v9);
    swift_bridgeObjectRelease(v9);
    swift_beginAccess(v6 + 16, &v19, 1, 0);
    v11 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRetain(v11);
    sub_10008AA68(v10, v11);
    v13 = v12;
    swift_bridgeObjectRelease(v11);

    if ((v13 & 1) == 0 || (a3 & 1) != 0)
    {
      v14 = *(_QWORD *)(v6 + 16);
      *(_QWORD *)(v6 + 16) = v10;
      swift_bridgeObjectRelease(v14);
      v16 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock);
      v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock + 8);
      v17 = *(_QWORD *)(v6 + 16);
      swift_retain();
      v18 = swift_bridgeObjectRetain(v17);
      v16(v18);
      swift_release(v15);
      swift_bridgeObjectRelease(v17);
      sub_10000E108();
    }
    else
    {
      swift_bridgeObjectRelease(v10);
    }
  }
}

id sub_10000860C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  objc_class *v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  objc_super v11;

  v1 = OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___stackedSearchLayout;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___stackedSearchLayout);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___stackedSearchLayout);
  }
  else
  {
    v4 = (objc_class *)type metadata accessor for DOCSearchControllerStackedLayout();
    v5 = objc_allocWithZone(v4);
    v6 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchController]);
    v5[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_canShowAppMenuButton] = 1;
    v5[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchPresentationState] = 4;
    *(_QWORD *)&v5[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton] = 0;
    v5[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible] = 0;
    swift_unknownObjectWeakAssign(v6, v0);
    v11.receiver = v5;
    v11.super_class = v4;
    v7 = objc_msgSendSuper2(&v11, "init");
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_1000086E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100643CC0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10000884C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v18 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  v9 = swift_allocObject(&unk_1005DE5B0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  aBlock[4] = sub_1000A93FC;
  v22 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005DE988;
  v10 = _Block_copy(aBlock);
  swift_retain(v9);
  static DispatchQoS.unspecified.getter(v11);
  v20 = _swiftEmptyArrayStorage;
  v12 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_10006922C((uint64_t *)&unk_100647540);
  v14 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v13, v14, v2, v12);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v22;
  swift_release(v9);
  return swift_release(v15);
}

void sub_100008A60(void *a1, uint64_t a2, char a3)
{

  if ((a3 & 1) == 0)
    swift_unknownObjectRelease(a2);
}

void sub_100008B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v12;
  char v13[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_allocObject(&unk_1005ECD70, 24, 7);
    *(_QWORD *)(v7 + 16) = v6;
    aBlock[4] = sub_100447B08;
    v12 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005ECD88;
    v8 = _Block_copy(aBlock);
    v9 = v12;
    v10 = v6;
    swift_release(v9);
    DOCRunInMainThread(v8);
    _Block_release(v8);

  }
}

uint64_t sub_100008CC4(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
  v3 = objc_msgSend(v2, "userTags");

  v4 = objc_msgSend(v3, "array");
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, (char *)&type metadata for Any + 8);

  v6 = (uint64_t)sub_10001F54C(v5);
  swift_bridgeObjectRelease(v5);
  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v6);
    v10 = _swiftEmptyArrayStorage;
LABEL_17:
    swift_beginAccess(a1 + 88, &v18, 1, 0);
    v17 = *(_QWORD *)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v10;
    swift_bridgeObjectRelease(v17);
    return 1;
  }
  if (v6 < 0)
    v16 = v6;
  else
    v16 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_16;
LABEL_3:
  v18 = _swiftEmptyArrayStorage;
  result = sub_1000817E4(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = v18;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
      else
        v11 = *(id *)(v6 + 8 * v9 + 32);
      v12 = v11;
      v18 = v10;
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_1000817E4(v13 > 1, v14 + 1, 1);
        v10 = v18;
      }
      v10[2] = v14 + 1;
      v15 = &v10[4 * v14];
      v15[5] = 0;
      v15[6] = 0;
      ++v9;
      v15[4] = v12;
      *((_BYTE *)v15 + 56) = 2;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease(v6);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100008ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  unint64_t v30;
  uint64_t v31;
  __n128 v32;
  double v33;
  void *v35;
  NSURL *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _BYTE v51[24];
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock[5];
  uint64_t v55;

  v1 = v0;
  v2 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v2);
  v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = Logger.FileProviderSyncState.unsafeMutableAddressor(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v14, v9);
  v15 = swift_retain_n(v1, 2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v48 = v4;
    v18 = swift_slowAlloc(12, -1);
    v47 = v9;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc(32, -1);
    v45 = v20;
    v50 = v6;
    *(_DWORD *)v19 = 136315138;
    aBlock[0] = v20;
    v44[1] = v19 + 4;
    v21 = objc_msgSend(*(id *)(v1 + 16), "domainFullDisplayName");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v46 = v10;
    v23 = v5;
    v24 = v1;
    v25 = v22;
    v49 = v8;
    v27 = v26;

    v4 = v48;
    v28 = v25;
    v1 = v24;
    v5 = v23;
    v52 = sub_1000544FC(v28, v27, aBlock);
    v6 = v50;
    v29 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    swift_release_n(v1, 2, v29);
    v30 = v27;
    v8 = v49;
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Starting observation of %s progress updates.", v19, 0xCu);
    v31 = v45;
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v47);
  }
  else
  {

    swift_release_n(v1, 2, v32);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  v33 = sub_100093D24((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, double))(v6 + 48))(v4, 1, v5, v33) == 1)
    return sub_10000CB4C((uint64_t)v4, &qword_100643470);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v35 = (void *)objc_opt_self(NSProgress);
  URL._bridgeToObjectiveC()(v36);
  v38 = v37;
  v39 = swift_allocObject(&unk_1005DD378, 24, 7);
  swift_weakInit(v39 + 16, v1);
  v40 = swift_allocObject(&unk_1005DD3C8, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_10031A0D4;
  *(_QWORD *)(v40 + 24) = v39;
  aBlock[4] = (uint64_t)sub_100172BD8;
  v55 = v40;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100400598;
  aBlock[3] = (uint64_t)&unk_1005DD3E0;
  v41 = _Block_copy(aBlock);
  swift_release(v55);
  v42 = v1;
  v43 = objc_msgSend(v35, "addSubscriberForFileURL:withPublishingHandler:", v38, v41);
  _Block_release(v41);

  _bridgeAnyObjectToAny(_:)(aBlock, v43);
  swift_unknownObjectRelease(v43);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10007EBDC((uint64_t)aBlock, (uint64_t)&v52);
  swift_beginAccess(v42 + 88, v51, 33, 0);
  sub_10007EB94((uint64_t)&v52, v42 + 88);
  return swift_endAccess(v51);
}

_QWORD *sub_1000092F8(id object, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  if (qword_100640FC8 != -1)
    swift_once(&qword_100640FC8, sub_1000A91F4);
  v4 = objc_getAssociatedObject(object, (const void *)qword_10064E590);
  if (v4)
  {
    v5 = v4;
    _bridgeAnyObjectToAny(_:)(v16, v4);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_10007EBDC((uint64_t)v16, (uint64_t)v17);
  if (v18)
  {
    v6 = type metadata accessor for DOCSharedOverlayContent();
    if ((swift_dynamicCast(&v15, v17, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
      return (_QWORD *)v15;
  }
  else
  {
    sub_10007EB54((uint64_t)v17);
  }
  v8 = type metadata accessor for DOCSharedOverlayContent();
  v7 = (_QWORD *)swift_allocObject(v8, 40, 7);
  swift_unknownObjectWeakInit(v7 + 3, 0);
  v9 = type metadata accessor for DOCSharedOverlayContent.BBIStorage();
  v10 = swift_allocObject(v9, 32, 7);
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  v7[4] = v10;
  v11 = qword_100640FD0;
  v12 = a2;
  if (v11 != -1)
    swift_once(&qword_100640FD0, sub_1003188B4);
  v13 = qword_100672BD0;
  v7[2] = qword_100672BD0;
  swift_unknownObjectWeakAssign(v7 + 3, v12);
  swift_retain(v13);

  objc_setAssociatedObject(object, (const void *)qword_10064E590, v7, (void *)0x301);
  return v7;
}

void sub_10000955C(uint64_t a1)
{
  id WeakRetained;
  BOOL v2;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained, "setObservationCount:", (char *)objc_msgSend(WeakRetained, "observationCount") + 1);
    v2 = (unint64_t)objc_msgSend(v5, "observationCount") > 1;
    WeakRetained = v5;
    if (!v2)
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "startObservingLegacyPickers"));
      objc_msgSend(v5, "setLegacyPickersObserverContext:", v3);

      objc_msgSend(v5, "setDefaultSaveLocationObserverContext:", objc_msgSend(v5, "startObservingDefaultSaveLocation"));
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "providerDomainsFINodeObserver"));
      objc_msgSend(v4, "startObserving:", 3);

      objc_msgSend(v5, "updateProviderNodes");
      WeakRetained = v5;
    }
  }

}

Swift::Void __swiftcall DOCItemCollectionViewController.docUpdateContentUnavailableConfiguration(using:)(DOCContentUnavailableConfigurationState using)
{
  char *v1;
  char *v2;
  uint64_t isa;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *);
  NSObject *v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  _BOOL4 v19;
  char *v20;
  char **v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t i;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char **v45;
  int v46;
  uint64_t v47;
  void (*v48)(char *);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  isa = (uint64_t)using.super.super.isa;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v45 - v9;
  v11 = sub_10001AA80();
  v12 = 0;
  if ((v11 & 1) == 0)
    goto LABEL_26;
  v13 = Logger.UI.unsafeMutableAddressor(v11);
  v14 = *(void (**)(char *))(v5 + 16);
  v52 = v13;
  v14(v10);
  v12 = v1;
  v15 = Logger.logObject.getter(v12);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    v46 = v16;
    v49 = isa;
    v17 = swift_slowAlloc(34, -1);
    v45 = (char **)swift_slowAlloc(8, -1);
    v47 = swift_slowAlloc(32, -1);
    v54 = v47;
    *(_DWORD *)v17 = 136315906;
    v53 = sub_1000544FC(0xD000000000000030, 0x8000000100513890, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
    *(_WORD *)(v17 + 12) = 1024;
    v18 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
    v50 = v8;
    v51 = v4;
    v48 = v14;
    v19 = v18
       && v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1
       && v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] != 1;
    LODWORD(v53) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4);
    *(_WORD *)(v17 + 18) = 1024;
    LODWORD(v53) = v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4);
    *(_WORD *)(v17 + 24) = 2112;
    v53 = (uint64_t)v12;
    v20 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
    v21 = v45;
    *v45 = v12;

    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v46, "[PROTECTED APPS] %s shouldShowAppProtectionShieldUI: %{BOOL}d locationIsProtected: %{BOOL}d self: %@", (uint8_t *)v17, 0x22u);
    v22 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v21, 1, v22);
    swift_slowDealloc(v21, -1, -1);
    v23 = v47;
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v4 = v51;
    v24(v10, v51);
    isa = v49;
    v8 = v50;
    v14 = v48;
  }
  else
  {

    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v10, v4);
  }
  if (objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled")
    && v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1
    && (v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0)
  {
    v27 = sub_100176A60();
    if (v27)
      goto LABEL_19;
    v28 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v8, v52, v4);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = v8;
      v33 = swift_slowAlloc(32, -1);
      v54 = v33;
      *(_DWORD *)v31 = 136315138;
      v53 = sub_1000544FC(0xD000000000000030, 0x8000000100513890, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[PROTECTED APPS] %s could not get configuration for protected app", v31, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      v34 = v32;
    }
    else
    {

      v34 = v8;
    }
    v24(v34, v4);
  }
  else
  {
    v25 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    if ((unint64_t)v25 >> 62)
      goto LABEL_44;
    if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_14;
  }
LABEL_25:
  v12 = 0;
  while (1)
  {
LABEL_26:
    objc_msgSend(v2, "doc_setContentUnavailableConfiguration:", v12);
    v35 = objc_msgSend(v2, "docContentUnavailableConfiguration");
    v36 = v35;
    if (v35)

    v37 = (uint64_t)sub_100098590();
    v25 = v37;
    if ((unint64_t)v37 >> 62)
    {
      if (v37 < 0)
        v41 = v37;
      else
        v41 = v37 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v37);
      isa = _CocoaArrayWrapper.endIndex.getter(v41);
      if (!isa)
        goto LABEL_40;
    }
    else
    {
      isa = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v37);
      if (!isa)
        goto LABEL_40;
    }
    if (isa >= 1)
      break;
    __break(1u);
LABEL_44:
    if (v25 < 0)
      v43 = v25;
    else
      v43 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v44 = _CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v25);
    if (v44)
      goto LABEL_25;
LABEL_14:
    v26 = *(void **)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (!v26)
    {
      __break(1u);
      return;
    }
    if ((objc_msgSend(v26, "isGathering") & 1) != 0)
      goto LABEL_25;
    v27 = sub_100176468();
    if (!v27)
      goto LABEL_25;
LABEL_19:
    v12 = (char *)objc_msgSend(v27, "updatedConfigurationForState:", isa);

  }
  for (i = 0; i != isa; ++i)
  {
    if ((v25 & 0xC000000000000001) != 0)
      v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v25);
    else
      v39 = *(id *)(v25 + 8 * i + 32);
    v40 = v39;
    objc_msgSend(v39, "setHidden:", v36 != 0);

  }
LABEL_40:
  swift_bridgeObjectRelease_n(v25, 2);
  v42 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v42)
    *(_BYTE *)(v42 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI) = v36 != 0;

}

uint64_t sub_100009C94(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10006922C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 17;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v11)
      memmove(v14 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v11 || v17 >= v18 + 16 * v11)
  {
    sub_10006922C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_100009E20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  void **v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10006922C(&qword_10064DAE0);
  v45 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v44 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v42 = v3;
  v43 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_25;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v43)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v44 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v43)
        goto LABEL_37;
      v23 = *(_QWORD *)(v44 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v43)
        {
LABEL_37:
          swift_release(v5);
          v3 = v42;
          if ((v45 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v44 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v13 >= v43)
              goto LABEL_37;
            v23 = *(_QWORD *)(v44 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v13 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_25:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((v45 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v48 = *(_QWORD *)(v25 + 32);
      v46 = v26;
      v47 = v27;
      v28 = (void **)(*(_QWORD *)(v5 + 56) + 24 * v20);
      v29 = *v28;
      v30 = (uint64_t)v28[1];
      v31 = (uint64_t)v28[2];
    }
    else
    {
      sub_10006777C(v25, (uint64_t)&v46);
      v32 = *(_QWORD *)(v5 + 56) + 24 * v20;
      v29 = *(void **)v32;
      v30 = *(_QWORD *)(v32 + 8);
      v31 = *(_QWORD *)(v32 + 16);
      sub_10006A92C(*(void **)v32, v30, v31);
    }
    v33 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v34 = -1 << *(_BYTE *)(v8 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v12 + 8 * (v35 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v12 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v12 + 8 * v36);
      }
      while (v40 == -1);
      v14 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
    v16 = v46;
    v17 = v47;
    *(_QWORD *)(v15 + 32) = v48;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    v18 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 24 * v14);
    *v18 = v29;
    v18[1] = v30;
    v18[2] = v31;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v42;
  v22 = (_QWORD *)(v5 + 64);
  if ((v45 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v41 = 1 << *(_BYTE *)(v5 + 32);
  if (v41 >= 64)
    bzero(v22, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v41;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

Swift::Void __swiftcall DOCItemCollectionCell.dragStateDidChange(_:)(UICollectionViewCellDragState a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD v11[4];
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCItemCollectionCell();
  objc_msgSendSuper2(&v12, "dragStateDidChange:", a1);
  if (a1)
  {
    if (a1 == UICollectionViewCellDragStateDragging)
    {
      if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded) == 1)
      {
        v8 = sub_10026F0E4();
        objc_msgSend(v8, "setAlpha:", 1.0);

      }
      if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded) != 1)
        goto LABEL_18;
      v4 = sub_10026F0F8();
      objc_msgSend(v4, "setAlpha:", 1.0);
    }
    else
    {
      if (a1 != UICollectionViewCellDragStateLifting)
      {
        type metadata accessor for DragState(0);
        v11[3] = v9;
        v11[0] = a1;
        doc_warnUnrecognizedEnumValueEncountered(_:)(v11);
        sub_100068588(v11);
        goto LABEL_18;
      }
      if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded) == 1)
      {
        v3 = sub_10026F0E4();
        objc_msgSend(v3, "setAlpha:", 0.0);

      }
      if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded) != 1)
        goto LABEL_18;
      v4 = sub_10026F0F8();
      objc_msgSend(v4, "setAlpha:", 0.0);
    }

LABEL_18:
    v10 = sub_1000AE388();
    objc_msgSend(v10, "setEnabled:", 0);

    v6 = sub_1000AE388();
    objc_msgSend(v6, "setEnabled:", 1);
    v7 = 0;
    goto LABEL_19;
  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded) == 1)
  {
    v5 = sub_10026F0E4();
    objc_msgSend(v5, "setAlpha:", 1.0);

  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded) != 1)
  {
    v7 = 1;
    goto LABEL_20;
  }
  v6 = sub_10026F0F8();
  objc_msgSend(v6, "setAlpha:", 1.0);
  v7 = 1;
LABEL_19:

LABEL_20:
  objc_msgSend(v1, "setUserInteractionEnabled:", v7);
}

uint64_t sub_10000A360()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;

  v1 = objc_msgSend((id)objc_opt_self(DOCUISession), "keyWindow");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "rootViewController");

  if (!v3)
    return 0;
  v4 = objc_msgSend(v0, "parentViewController");
  if (v4)
  {
    v5 = v4;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    while (1)
    {
      v6 = v5;
      v7 = v3;
      v8 = static NSObject.== infix(_:_:)(v6, v7);

      if ((v8 & 1) != 0)
        break;
      v5 = objc_msgSend(v6, "parentViewController");

      if (!v5)
        goto LABEL_7;
    }

    v9 = 1;
  }
  else
  {
LABEL_7:
    v9 = 0;
  }

  return v9;
}

uint64_t DOCItemCollectionViewController.hidesNavigationBackButton.getter()
{
  char *v0;
  char v1;
  char *v2;
  char v4[24];
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  if ((objc_msgSendSuper2(&v5, "hidesNavigationBackButton") & 1) != 0)
  {
    v1 = 1;
  }
  else if (objc_msgSend(v0, "isEditing"))
  {
    v1 = v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] ^ 1;
  }
  else
  {
    v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v4, 0, 0);
    v1 = *(_QWORD *)v2 == 2;
  }
  return v1 & 1;
}

uint64_t type metadata accessor for DOCItemStatusView()
{
  return objc_opt_self(_TtC5Files17DOCItemStatusView);
}

uint64_t sub_10000A540(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;

  v4 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[6]));
    v6 = (_QWORD *)(a1 + v4[9]);
    if (v6[3])
      sub_100068588(v6);
  }
  v7 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v7 + 20)));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v7 + 24)));
  v8 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  result = *v8;
  if (*v8)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(v8[1]);
  }
  return result;
}

id sub_10000A880()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView);
  objc_msgSend(v1, "setAxis:", 0);
  objc_msgSend(v1, "setAlignment:", 3);
  return objc_msgSend(v1, "setDistribution:", 0);
}

_QWORD *initializeBufferWithCopyOfBuffer for DOCLocationChange(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

id sub_10000A90C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v14;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.UI.unsafeMutableAddressor(v4);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Invalidating background assertion, our work is done here.", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v12 = objc_msgSend(a1, "processAssertion");
  objc_msgSend(v12, "invalidate");

  return objc_msgSend(a1, "setProcessAssertion:", 0);
}

void sub_10000AA50()
{
  unsigned __int8 *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setCornerCurve:", kCACornerCurveContinuous);

  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "setCornerRadius:", 0.0);

  LODWORD(v2) = v0[OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_style];
  v3 = objc_msgSend(v0, "layer");
  v4 = v3;
  if ((_DWORD)v2 == 1)
  {
    objc_msgSend(v3, "setCornerRadius:", 5.0);

    v4 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    objc_msgSend(v0, "setBackgroundColor:");
  }
  else
  {
    objc_msgSend(v3, "setCornerRadius:", 0.0);
  }

}

void sub_10000AB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD v15[5];
  _QWORD *v16;

  v5 = objc_msgSend(*(id *)(a1 + 32), "allObjects");
  v6 = sub_10006922C(&qword_10064E9A8);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v14 = v7;
  else
    v14 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v14);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_14;
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
  }
  else
  {
    v9 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      }
      else
      {
        v10 = *(_QWORD *)(v7 + 8 * v9 + 32);
        swift_unknownObjectRetain(v10);
      }
      ++v9;
      v11 = (_QWORD *)swift_allocObject(&unk_1005DD4E0, 40, 7);
      v11[2] = a2;
      v11[3] = a3;
      v11[4] = v10;
      v15[4] = sub_100093E6C;
      v16 = v11;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 1107296256;
      v15[2] = sub_10004A82C;
      v15[3] = &unk_1005DD4F8;
      v12 = _Block_copy(v15);
      v13 = v16;
      swift_retain();
      swift_unknownObjectRetain(v10);
      swift_release(v13);
      DOCRunInMainThread(v12);
      _Block_release(v12);
      swift_unknownObjectRelease(v10);
    }
    while (v8 != v9);
    swift_bridgeObjectRelease(v7);
  }
}

void sub_10000AD40(uint64_t a1, char *a2, void *a3, char a4, unint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  _BYTE v12[24];

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v9, v10);
  if (Strong)
  {

    sub_10004B7D8(a5, a2, a3, a4 & 1);
  }
}

void sub_10000ADBC(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _BYTE *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t aBlock[5];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (_QWORD *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)&v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    return;
  }
  if (a1)
  {
    v14 = a1;
    if (!objc_msgSend(v14, "isUsingFPFS"))
    {
LABEL_11:

      return;
    }
    if (objc_msgSend(v14, "needsAuthentication")
      && v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] != 2)
    {
      v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 2;
      v24 = swift_allocObject(&unk_1005DE9C0, 24, 7);
      *(_QWORD *)(v24 + 16) = v2;
      aBlock[4] = (uint64_t)sub_1003391F0;
      v31 = v24;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005DE9D8;
      v25 = _Block_copy(aBlock);
      v26 = v31;
      v27 = v2;
      swift_release(v26);
      DOCRunInMainThread(v25);

      _Block_release(v25);
      return;
    }
    v15 = objc_msgSend(v14, "needsAuthentication");
    if ((v15 & 1) == 0)
    {
      v16 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState;
      if (v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] == 2)
      {
        v17 = Logger.Enumeration.unsafeMutableAddressor(v15);
        v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
        v19 = Logger.logObject.getter(v18);
        v20 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc(12, -1);
          v29 = swift_slowAlloc(32, -1);
          aBlock[0] = v29;
          *(_DWORD *)v21 = 136446210;
          v28[1] = v21 + 4;
          v32 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100528C60, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "[DSEnumeration] %{public}s: Domain became authenticated, restarting observation", v21, 0xCu);
          v22 = v29;
          swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v22, -1, -1);
          swift_slowDealloc(v21, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v2[v16] = 1;
        sub_10032D5C8();
        goto LABEL_11;
      }
    }
    v23 = objc_msgSend(v14, "needsAuthentication");

    if ((v23 & 1) == 0 && !v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState])
      v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 1;
  }
}

uint64_t sub_10000B128(double a1, double a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;

  if (qword_100641000 != -1)
LABEL_30:
    result = swift_once(&qword_100641000, sub_1000A14B8);
  v4 = 0;
  v5 = 1 << *((_BYTE *)off_10064F3A8 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = (char *)off_10064F3A8 + 64;
  v8 = v6 & *((_QWORD *)off_10064F3A8 + 8);
  v9 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9)
      return 17;
    v13 = *(_QWORD *)&v7[8 * v12];
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 17;
      v13 = *(_QWORD *)&v7[8 * v4];
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 17;
        v13 = *(_QWORD *)&v7[8 * v4];
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 17;
          v13 = *(_QWORD *)&v7[8 * v4];
          if (!v13)
          {
            v4 = v12 + 4;
            if (v12 + 4 >= v9)
              return 17;
            v13 = *(_QWORD *)&v7[8 * v4];
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_24:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    v15 = *((_QWORD *)off_10064F3A8 + 7);
    if (vabdd_f64(*(double *)(v15 + 16 * v11), a1) <= 1.0 && vabdd_f64(*(double *)(v15 + 16 * v11 + 8), a2) <= 1.0)
      return *(unsigned __int8 *)(*((_QWORD *)off_10064F3A8 + 6) + v11);
  }
  v14 = v12 + 5;
  if (v14 >= v9)
    return 17;
  v13 = *(_QWORD *)&v7[8 * v14];
  if (v13)
  {
    v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 17;
    v13 = *(_QWORD *)&v7[8 * v4];
    ++v14;
    if (v13)
      goto LABEL_24;
  }
  __break(1u);
  return result;
}

void sub_10000B2C8(unint64_t a1)
{
  void *v1;
  uint64_t v2;
  SEL *v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  SEL *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD v42[3];
  _BYTE v43[24];

  v2 = (uint64_t)v1;
  v4 = (SEL *)&off_10061F000;
  v5 = (char *)objc_msgSend(v1, "hierarchyController");
  v6 = (uint64_t *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v43, 0, 0);
  v7 = *v6;
  swift_bridgeObjectRetain(v7);

  if ((unint64_t)v7 >> 62)
    goto LABEL_28;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    v41 = (id)v2;
    v9 = 0;
    while (1)
    {
      v10 = (v7 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7)
          : *(id *)(v7 + 8 * v9 + 32);
      v11 = v10;
      v12 = (SEL *)objc_msgSend(v10, "fileProviderItem");
      if (v12)
      {
        v4 = v12;
        v2 = (uint64_t)-[SEL isFolder](v12, "isFolder");

        v13 = a1 == 2;
        if (a1 >= 2)
          goto LABEL_13;
      }
      else
      {
        v2 = 2;
        v13 = a1 == 2;
        if (a1 >= 2)
        {
LABEL_13:
          if (!v13)
          {
            v42[0] = a1;
            _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, v42, &type metadata for DOCDisplayMode, &type metadata for Int);
            __break(1u);
            return;
          }

          goto LABEL_16;
        }
      }

      if ((_DWORD)v2 != 2 && (v2 & 1) == 0)
      {
        v4 = (SEL *)&off_10061F000;
        v2 = (uint64_t)v41;
        v16 = (char *)objc_msgSend(v41, "hierarchyController", swift_bridgeObjectRelease(v7).n128_f64[0]);
        v17 = (unint64_t *)&v16[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
        swift_beginAccess(&v16[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v42, 0, 0);
        v18 = *v17;
        swift_bridgeObjectRetain(*v17);

        v19 = sub_1001F0EF4(v9, v18);
        v21 = v20;
        v23 = v22;
        v25 = v24;
        swift_bridgeObjectRelease(v18);
        if ((v25 & 1) == 0)
          goto LABEL_20;
        v26 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v27 = swift_unknownObjectRetain_n(v19, 2);
        v28 = (_QWORD *)swift_dynamicCastClass(v27, v26);
        if (!v28)
        {
          swift_unknownObjectRelease(v19);
          v28 = _swiftEmptyArrayStorage;
        }
        v29 = v28[2];
        v30 = swift_release(v28);
        if (__OFSUB__(v25 >> 1, v23))
        {
          __break(1u);
        }
        else
        {
          v30 = v19;
          if (v29 == (v25 >> 1) - v23)
          {
            v15 = swift_dynamicCastClass(v19, v26);
            swift_unknownObjectRelease(v19);
            if (!v15)
            {
              swift_unknownObjectRelease(v19);
              goto LABEL_33;
            }
            goto LABEL_34;
          }
        }
        swift_unknownObjectRelease(v30);
LABEL_20:
        v15 = (uint64_t)sub_10028F730(v19, v21, v23, v25);
        swift_unknownObjectRelease(v19);
        goto LABEL_34;
      }
LABEL_16:
      v14 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      ++v9;
      if (v14 == v8)
      {
        swift_bridgeObjectRelease(v7);
        v15 = (uint64_t)_swiftEmptyArrayStorage;
        v2 = (uint64_t)v41;
        v4 = (SEL *)&off_10061F000;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_28:
    if (v7 < 0)
      v31 = v7;
    else
      v31 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v7);
  }
  swift_bridgeObjectRelease(v7);
LABEL_33:
  v15 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_34:
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v39 = v15;
    else
      v39 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v40 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v15);
    if (v40)
      goto LABEL_36;
LABEL_50:
    swift_bridgeObjectRelease(v15);
    sub_100044F68();
    return;
  }
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_50;
LABEL_36:
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend((id)v2, "setDroppedLocationsAfterSwitchingDisplayMode:", isa);

  v33 = objc_msgSend((id)v2, "viewIfLoaded");
  v34 = objc_msgSend(v33, "window");

  v35 = objc_msgSend(v34, "windowScene");
  if (!v35 || (objc_msgSend(v35, "_isPerformingSystemSnapshot") & 1) == 0)
  {
    objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v2, "clearDroppedLocationsAfterSwitchingViewStyle", 0);
    objc_msgSend((id)v2, "performSelector:withObject:afterDelay:", "clearDroppedLocationsAfterSwitchingViewStyle", 0, 1.0);
  }
  v36 = objc_msgSend((id)v2, v4[355]);
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v38 = v15;
    else
      v38 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v37 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v37 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v15);
  sub_1001F3814(v37);

}

uint64_t sub_10000B808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (result)
  {
    v4 = (char *)result;
    v5 = 1061109567;
    DOCItemCollectionViewController.getCurrentLocation()();
    if (v6 && (v7 = v6, v8 = objc_msgSend(v6, "displayName"), v7, v8))
    {
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v10 = v9;

    }
    else
    {
      v10 = (void *)0xE400000000000000;
    }
    v11 = objc_msgSend(v4, "navigationItem");
    v12 = objc_msgSend(v11, "title");

    if (v12)
    {
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

    }
    else
    {
      v15 = (void *)0xED0000656C746974;
      v13 = 0x206E776F6E6B6E75;
    }
    _StringGuts.grow(_:)(34);
    v16._countAndFlagsBits = 0x20646564616F6CLL;
    v16._object = (void *)0xE700000000000000;
    String.append(_:)(v16);
    v17._countAndFlagsBits = v5;
    v17._object = v10;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(v10);
    v18._object = (void *)0x800000010053A510;
    v18._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v18);
    v19._countAndFlagsBits = v13;
    v19._object = v15;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(0xE000000000000000);
    v20 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext];
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext] = 0;
    v21 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext];
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext] = v20;
    swift_retain();
    sub_100099A18(v21);

    swift_release(v21);
    return swift_release(v20);
  }
  return result;
}

void sub_10000BA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v10 = (_QWORD *)swift_allocObject(&unk_1005CFDC0, 56, 7);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  v10[6] = a5;
  v14[4] = sub_1000AB798;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10004A82C;
  v14[3] = &unk_1005CFDD8;
  v11 = _Block_copy(v14);
  v12 = v15;
  swift_errorRetain(a2);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  v13 = a5;
  swift_release(v12);
  DOCRunInMainThread(v11);
  _Block_release(v11);
}

id sub_10000BB38()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v1 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v2 = objc_msgSend(v1, "configurationWithTextStyle:", UIFontTextStyleSubheadline);
  v3 = objc_msgSend(v1, "configurationWithWeight:", 6);

  objc_msgSend(v0, "setPreferredSymbolConfiguration:", v2);
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemOrangeColor");
  objc_msgSend(v0, "setTintColor:", v4);

  return v0;
}

id sub_10000BC58()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  NSString *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  Class isa;
  id v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  uint64_t v22;
  _BYTE v23[112];

  v1 = sub_10006922C((uint64_t *)&unk_1006484A0);
  inited = swift_initStackObject(v1, v23);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(inited + 32) = UIFontDescriptorTextStyleAttribute;
  type metadata accessor for TextStyle(0);
  *(_QWORD *)(inited + 40) = UIFontTextStyleSubheadline;
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = UIFontDescriptorTraitsAttribute;
  v4 = sub_10006922C(&qword_100645B90);
  v5 = swift_initStackObject(v4, &v22);
  *(_OWORD *)(v5 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v5 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v5 + 40) = UIFontWeightSemibold;
  v6 = UIFontDescriptorTextStyleAttribute;
  v7 = UIFontTextStyleSubheadline;
  v8 = UIFontDescriptorTraitsAttribute;
  v9 = UIFontWeightTrait;
  v10 = sub_10008B0E8(v5);
  *(_QWORD *)(inited + 104) = sub_10006922C(&qword_100645B98);
  *(_QWORD *)(inited + 80) = v10;
  v11 = sub_10008B0CC(inited);
  v12 = objc_allocWithZone((Class)UIFontDescriptor);
  type metadata accessor for AttributeName(0);
  sub_10008577C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "initWithFontAttributes:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v15 = (void *)objc_opt_self(UIFont);
  v16 = objc_msgSend(v0, "traitCollection");
  v17 = objc_msgSend(v15, "preferredFontForTextStyle:compatibleWithTraitCollection:", v7, v16);

  objc_msgSend(v17, "pointSize");
  v19 = v18;

  v20 = objc_msgSend(v15, "fontWithDescriptor:size:", v14, v19);
  return v20;
}

uint64_t sub_10000BE74(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  id v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  BOOL v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  BOOL v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  char v40;
  NSString *v41;
  NSString *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  char v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v88;
  char v89;

  v5 = sub_1002B90E4(1);
  swift_bridgeObjectRelease(v6);
  v7 = sub_1002B90E4(v5 & a1);
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (v7 == 1)
  {
    if (a2)
      v10 = objc_msgSend(a2, "horizontalSizeClass", v9);
    else
      v10 = 0;
    v11 = v10 != objc_msgSend(v2, "horizontalSizeClass");
  }
  else
  {
    v11 = 0;
  }
  v12 = sub_1002B90E4(2);
  swift_bridgeObjectRelease(v13);
  v14 = sub_1002B90E4(v12 & a1);
  *(_QWORD *)&v16 = swift_bridgeObjectRelease(v15).n128_u64[0];
  v17 = v14 == 2 || v11;
  if (v14 == 2 && !v11)
  {
    if (a2)
      v18 = objc_msgSend(a2, "verticalSizeClass", v16);
    else
      v18 = 0;
    v17 = v18 != objc_msgSend(v2, "verticalSizeClass");
  }
  v19 = sub_1002B90E4(4);
  swift_bridgeObjectRelease(v20);
  v21 = sub_1002B90E4(v19 & a1);
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v22).n128_u64[0];
  v24 = v21 == 4 || v17;
  if (v21 == 4 && !v17)
  {
    if (a2)
    {
      objc_msgSend(a2, "displayScale", v23);
      v26 = v25;
    }
    else
    {
      if (qword_100640F98 != -1)
        swift_once(&qword_100640F98, sub_1000A86D8);
      v26 = *(double *)&qword_10064CD50;
    }
    objc_msgSend(v2, "displayScale");
    v24 = v26 != v27;
  }
  v28 = sub_1002B90E4(8);
  swift_bridgeObjectRelease(v29);
  v30 = sub_1002B90E4(v28 & a1);
  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v31).n128_u64[0];
  v33 = v30 == 8 || v24;
  if (v30 == 8 && !v24)
  {
    if (a2)
      v34 = objc_msgSend(a2, "userInterfaceStyle", v32);
    else
      v34 = 0;
    v33 = v34 != objc_msgSend(v2, "userInterfaceStyle");
  }
  v35 = sub_1002B90E4(16);
  swift_bridgeObjectRelease(v36);
  v37 = sub_1002B90E4(v35 & a1);
  *(_QWORD *)&v39 = swift_bridgeObjectRelease(v38).n128_u64[0];
  v40 = v37 == 16 || v33;
  if (v37 == 16 && !v33)
  {
    if (a2)
      v41 = (NSString *)objc_msgSend(a2, "preferredContentSizeCategory", v39);
    else
      v41 = UIContentSizeCategoryUnspecified;
    v42 = v41;
    v43 = objc_msgSend(v2, "preferredContentSizeCategory");
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v46 = v45;
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v49 = v47;
    if (v44 == v48 && v46 == v47)
    {
      swift_bridgeObjectRelease_n(v46, 2);
      v40 = 0;
    }
    else
    {
      v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v48, v47, 0);
      swift_bridgeObjectRelease(v46);
      swift_bridgeObjectRelease(v49);
      v40 = v50 ^ 1;
    }

  }
  v51 = sub_1002B90E4(32);
  swift_bridgeObjectRelease(v52);
  v53 = sub_1002B90E4(v51 & a1);
  *(_QWORD *)&v55 = swift_bridgeObjectRelease(v54).n128_u64[0];
  v56 = (v53 == 32) | v40;
  if (v53 == 32 && (v40 & 1) == 0)
  {
    if (a2)
      v57 = (uint64_t)objc_msgSend(a2, "userInterfaceIdiom", v55);
    else
      v57 = -1;
    v56 = v57 != (_QWORD)objc_msgSend(v2, "userInterfaceIdiom");
  }
  v58 = sub_1002B90E4(64);
  swift_bridgeObjectRelease(v59);
  v60 = sub_1002B90E4(v58 & a1);
  *(_QWORD *)&v62 = swift_bridgeObjectRelease(v61).n128_u64[0];
  v63 = (v60 == 64) | v56;
  if (v60 == 64 && (v56 & 1) == 0)
  {
    if (a2)
      v64 = (uint64_t)objc_msgSend(a2, "layoutDirection", v62);
    else
      v64 = -1;
    v63 = v64 != (_QWORD)objc_msgSend(v2, "layoutDirection");
  }
  v65 = sub_1002B90E4(128);
  swift_bridgeObjectRelease(v66);
  v67 = sub_1002B90E4(v65 & a1);
  *(_QWORD *)&v69 = swift_bridgeObjectRelease(v68).n128_u64[0];
  v70 = (v67 == 128) | v63;
  if (v67 == 128 && (v63 & 1) == 0)
  {
    v71 = objc_msgSend(v2, "sourceOutlineStyle", v69);
    if (a2)
      v70 = v71 != objc_msgSend(a2, "sourceOutlineStyle");
    else
      v70 = 1;
  }
  v72 = sub_1002B90E4(256);
  swift_bridgeObjectRelease(v73);
  v74 = sub_1002B90E4(v72 & a1);
  *(_QWORD *)&v76 = swift_bridgeObjectRelease(v75).n128_u64[0];
  v77 = (v74 == 256) | v70;
  if (v74 == 256 && (v70 & 1) == 0)
  {
    if (a2)
      v78 = (uint64_t)objc_msgSend(a2, "legibilityWeight", v76);
    else
      v78 = -1;
    v77 = v78 != (_QWORD)objc_msgSend(v2, "legibilityWeight");
  }
  v79 = sub_1002B90E4(512);
  swift_bridgeObjectRelease(v80);
  v81 = sub_1002B90E4(v79 & a1);
  swift_bridgeObjectRelease(v82);
  v83 = (v81 == 512) | v77;
  if (v81 == 512 && (v77 & 1) == 0)
  {
    v84 = sub_1001463A0();
    UITraitCollection.subscript.getter(&v88, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v84);
    if (a2
      && (v85 = v88,
          v86 = v89,
          UITraitCollection.subscript.getter(&v88, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v84), v85 == v88))
    {
      v83 = v86 ^ v89;
    }
    else
    {
      v83 = 1;
    }
  }
  return v83 & 1;
}

Swift::Int sub_10000C450()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v4, v1, v2);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

uint64_t sub_10000C4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  v12 = swift_allocObject(&unk_1005DE5B0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  aBlock[4] = a1;
  v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = a2;
  v13 = _Block_copy(aBlock);
  swift_retain(v12);
  static DispatchQoS.unspecified.getter(v14);
  v22 = _swiftEmptyArrayStorage;
  v15 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_10006922C((uint64_t *)&unk_100647540);
  v17 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = v24;
  swift_release(v12);
  return swift_release(v18);
}

void sub_10000C6B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10000C6E4()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v5;
  _QWORD v6[6];

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  swift_errorRetain(v0);
  _StringGuts.grow(_:)(21);
  v1._object = (void *)0x8000000100523DF0;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  v5 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100643490);
  _print_unlocked<A, B>(_:_:)(&v5, v6, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  sub_1002C7C74(v0, 0);
  return v6[0];
}

uint64_t type metadata accessor for DOCButton()
{
  return objc_opt_self(_TtC5Files9DOCButton);
}

uint64_t sub_10000C940(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate], a2);
  *((_QWORD *)v5 + 1) = a2;
  v7 = swift_unknownObjectWeakAssign(v5, a1);
  v9 = swift_unknownObjectWeakLoadStrong(v7, v8);
  if (v9)
  {
    v10 = v9;
    swift_unknownObjectRelease(v9);
    if (Strong)
      v11 = v10 == Strong;
    else
      v11 = 0;
    if (v11)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (Strong)
  {
LABEL_9:
    if (objc_msgSend(v2, "doc_hasAppearedOrIsAppearing"))
      sub_100014AAC();
LABEL_11:
    swift_unknownObjectRelease(Strong);
  }
  return swift_unknownObjectRelease(a1);
}

void sub_10000C9E0()
{
  char *v0;
  id *v1;
  double v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE v14[24];

  v1 = (id *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  *(_QWORD *)&v2 = swift_beginAccess(&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v14, 0, 0).n128_u64[0];
  if (*v1)
  {
    v3 = *v1;
    sub_100054EB4(v3, 1);

  }
  v4 = objc_msgSend(v0, "childViewControllers", v2);
  v5 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if (v6 < 0)
    v13 = v6;
  else
    v13 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_17;
LABEL_5:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      else
        v9 = *(id *)(v6 + 8 * i + 32);
      v10 = v9;
      v11 = type metadata accessor for DOCBrowserContainedViewController();
      v12 = (_QWORD *)swift_dynamicCastClass(v10, v11);
      if (v12)
        sub_100054EB4(v12, 1);

    }
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_10000CB4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10006922C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10000CB88(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *Strong;
  void *v4;
  id v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  unsigned int v9;
  BOOL v10;
  unsigned __int8 *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  id v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  objc_super v23;

  if (v2[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] == 1
    && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], a2)) != 0)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "traitCollectionExpectedForSearchPresentation");
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v23.receiver = v2;
    v23.super_class = (Class)type metadata accessor for DOCSearchController();
    v5 = objc_msgSendSuper2(&v23, "traitCollection");
  }
  v6 = objc_msgSend(v5, "horizontalSizeClass");
  v7 = *(void **)&v2[OBJC_IVAR____TtC5Files19DOCSearchController_configuration];
  v8 = objc_msgSend(v7, "isPickerUI");
  if (v6 == (id)1)
  {
    v9 = objc_msgSend(v7, "isPickerUI");
    v10 = objc_msgSend(v2, "searchBarPlacement") == (id)1;
    if (v9)
    {
      v11 = (unsigned __int8 *)&v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration];
      v12 = v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration];
      v13 = v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1];
      v14 = v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 2];
      *v11 = v8;
      v11[1] = 2;
      v11[2] = v10;
      if (v14)
        v15 = 0x10000;
      else
        v15 = 0;
      v16 = v15 | (v13 << 8) | v12;
      goto LABEL_19;
    }
  }
  else
  {
    v10 = objc_msgSend(v2, "searchBarPlacement") == (id)1;
  }
  v17 = objc_msgSend(v2, "searchBarPlacement");
  v18 = &v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration];
  v19 = v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration];
  v20 = v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1];
  v21 = v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 2];
  v2[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration] = v8;
  if (v21)
    v22 = 0x10000;
  else
    v22 = 0;
  v16 = v22 | (v20 << 8) | v19;
  v18[1] = v17 == (id)1;
  v18[2] = v10;
LABEL_19:
  sub_1000B0178(v16);

}

uint64_t sub_10000CDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void (*)(), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  char v60[24];

  v1 = sub_10006922C(&qword_100650348);
  __chkstk_darwin(v1);
  v55 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v53 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo(0);
  v51 = *(_QWORD *)(updated - 8);
  v52 = updated;
  __chkstk_darwin(updated);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_1006475C0);
  __chkstk_darwin(v9);
  v54 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v0;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers);
  v12 = (uint64_t *)(v11 + 16);
  swift_beginAccess(v11 + 16, v60, 1, 0);
  v13 = *(_QWORD *)(v11 + 16);
  v59[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v24 = v13;
    else
      v24 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_retain(v11);
    swift_bridgeObjectRetain(v13);
    result = _CocoaArrayWrapper.endIndex.getter(v24);
    v14 = result;
    v56 = v4;
    v57 = v3;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v13);
    v23 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain(v11);
  result = swift_bridgeObjectRetain(v13);
  v56 = v4;
  v57 = v3;
  if (!v14)
    goto LABEL_17;
LABEL_3:
  if (v14 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
    {
      v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
    }
    else
    {
      v18 = *(_QWORD *)(v13 + 8 * i + 32);
      swift_retain(v18);
    }
    Strong = swift_unknownObjectWeakLoadStrong(v18 + 16, v17);
    if (Strong)
    {
      v20 = swift_unknownObjectRelease(Strong);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v21 = *(_QWORD *)(v59[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
      specialized ContiguousArray._endMutation()(v22);
    }
    else
    {
      swift_release(v18);
    }
  }
  swift_bridgeObjectRelease(v13);
  v23 = (_QWORD *)v59[0];
LABEL_18:
  v25 = *v12;
  *v12 = (uint64_t)v23;
  swift_bridgeObjectRelease(v25);
  v26 = *v12;
  if (!((unint64_t)*v12 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_release(v11);
    if (v27 != 1)
      return result;
    goto LABEL_20;
  }
  if (v26 < 0)
    v49 = *v12;
  else
    v49 = v26 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v12);
  v50 = _CocoaArrayWrapper.endIndex.getter(v49);
  swift_release(v11);
  result = swift_bridgeObjectRelease(v26);
  if (v50 == 1)
  {
LABEL_20:
    v28 = swift_allocObject(&unk_1005E2B60, 24, 7);
    v29 = v58;
    swift_unknownObjectWeakInit(v28 + 16, v58);
    v30 = v29 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl;
    v31 = v29;
    swift_beginAccess(v29 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl, v59, 33, 0);
    v32 = *(_QWORD *)(v30 + 24);
    v33 = *(_QWORD *)(v30 + 32);
    sub_10007E7C8(v30, v32);
    v34 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t, __n128))(v33 + 24);
    v35 = swift_retain(v28);
    v34(sub_100375E64, v28, v32, v33, v35);
    swift_endAccess(v59);
    v36 = *(_QWORD *)(v31 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProvider);
    v37 = swift_allocObject(&unk_1005E2C28, 32, 7);
    *(_QWORD *)(v37 + 16) = sub_100375E64;
    *(_QWORD *)(v37 + 24) = v28;
    swift_retain(v28);
    swift_retain(v36);
    swift_retain(v37);
    v38 = (uint64_t)v8;
    UUID.init()(v39);
    v40 = v52;
    v41 = (uint64_t (**)())&v8[*(int *)(v52 + 20)];
    *v41 = sub_100066584;
    v41[1] = (uint64_t (*)())v37;
    v43 = v56;
    v42 = v57;
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    v45 = (uint64_t)v53;
    v44(v53, v38, v57);
    v46 = v55;
    sub_10007C6DC(v38, v55, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v46, 0, 1, v40);
    swift_beginAccess(v36 + 24, v59, 33, 0);
    sub_10008A8E8(v46, v45);
    swift_endAccess(v59);
    v47 = (uint64_t)v54;
    v44(v54, v38, v42);
    sub_10007C720(v38, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    swift_release(v36);
    swift_release(v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v47, 0, 1, v42);
    v48 = v58 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance;
    swift_beginAccess(v58 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance, v59, 33, 0);
    sub_1000B3448(v47, v48);
    swift_endAccess(v59);
    return swift_release(v28);
  }
  return result;
}

void sub_10000D28C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSString v29;
  NSString v30;
  uint64_t v31;
  id v32;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return;
  v8 = a1;
  v9 = objc_msgSend(v2, "sceneIdentifier");
  if (v9)
  {
    v32 = v9;

    return;
  }
  v10 = objc_msgSend(v8, "windowScene");
  v11 = v10;
  if (v10)
  {
    v12 = objc_msgSend(v10, "session");

    v13 = objc_msgSend(v12, "persistentIdentifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(v2, "hostIdentifier");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
  if (v17 == v20 && v19 == v21)
  {
    swift_bridgeObjectRelease_n(v19, 2);
  }
  else
  {
    v23 = v21;
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);
    swift_bridgeObjectRelease(v19);
    v25 = swift_bridgeObjectRelease(v23);
    if ((v24 & 1) == 0)
    {
      if (v15)
        v26 = v15;
      else
        v26 = 0x800000010052A350;
      v27 = UUID.init()(v25);
      UUID.uuidString.getter(v27);
      v15 = v28;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_19;
    }
  }
  if (!v15)
  {
    v29 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain(v15);
  v26 = v15;
LABEL_19:
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
LABEL_21:
  objc_msgSend(v2, "setStateIdentifier:", v29);

  if (v15)
  {
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v2, "setSceneIdentifier:", v30);

}

_UNKNOWN **sub_10000D9D0()
{
  void *v0;
  id v1;
  unsigned int v2;
  _UNKNOWN **v3;
  id v4;
  unsigned int v5;

  if (!objc_msgSend(v0, "environmentSupportsColumnView"))
    return &off_1005BEE98;
  v1 = objc_msgSend(v0, "configuration");
  v2 = objc_msgSend(v1, "supportsColumnView");

  v3 = &off_1005BEE98;
  if (v2)
  {
    v4 = objc_msgSend(v0, "configuration");
    v5 = objc_msgSend(v4, "isPickerUI");

    if (!v5)
      return &off_1005BEE60;
  }
  return v3;
}

double sub_10000DA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v20 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_1005EC870, 32, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  aBlock[4] = sub_100066584;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EC888;
  v14 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter(v15);
  v21 = _swiftEmptyArrayStorage;
  v16 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10006922C((uint64_t *)&unk_100647540);
  v18 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v17, v18, v5, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

void sub_10000DC70()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  NSString v9;
  void *v10;
  id v11;

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v11 = v1;
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource], v2);
    sub_100005E0C(ObjectType, v3);
    if (!v5)
    {
      v10 = v11;
      goto LABEL_7;
    }
    v6 = v5;
    v7 = objc_msgSend(v11, "view");
    if (v7)
    {
      v8 = v7;
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "setAccessibilityIdentifier:", v9, swift_bridgeObjectRelease(v6).n128_f64[0]);

      v10 = v9;
LABEL_7:

      return;
    }
    __break(1u);
  }
}

void sub_10000DD60()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v6;

  v1 = v0;
  v2 = objc_msgSend(v0, "searchBar");
  objc_msgSend(v2, "setDelegate:", v1);

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DOCSearchController();
  objc_msgSendSuper2(&v6, "setDelegate:", v1);
  objc_msgSend(v1, "setSearchResultsUpdater:", v1);
  v3 = swift_unknownObjectRetain(v1);
  v4 = sub_10000C940(v3, (uint64_t)&off_1005EDDB8);
  sub_10000CB88(v4, v5);
}

void *sub_10000DE10(void *a1, _QWORD *a2, uint64_t a3)
{
  void *v3;
  _QWORD *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  char v15;
  id v16;
  _QWORD *v17;
  id v18;
  unsigned __int8 v19;
  id v20;
  id v21;
  void *v22;
  id v24;
  id v25;
  id v26;
  ValueMetadata *v27;
  unint64_t v28;
  unint64_t v29;
  _OWORD v30[3];
  uint64_t v31;

  v3 = a1;
  if (!a1)
    return v3;
  v5 = a2;
  if (!a2)
  {
    v9 = a1;
    if (!a3)
      goto LABEL_21;
    goto LABEL_19;
  }
  v24 = a1;
  v6 = a1;
  v7 = objc_msgSend(v6, "fileProviderItem");
  if (v7)
  {
    v8 = v7;
    v27 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    v28 = sub_1000A0258();
    v29 = sub_1000A02E0();
    v25 = v6;
    v26 = v8;
    if (!v5[2])
      goto LABEL_14;
  }
  else
  {
    v10 = objc_msgSend(v6, "representedTag");
    if (v10)
    {
      v11 = v10;
      v12 = v6;
      v13 = (id)FPTagFromDOCTag(v11);
      v27 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      v28 = sub_100446EF4();
      v29 = sub_100446F38();

      v25 = v12;
      v26 = v13;
      if (!v5[2])
        goto LABEL_14;
    }
    else
    {
      v27 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      v28 = sub_100446DA0();
      v29 = sub_100446DE4();
      v25 = v6;
      if (!v5[2])
        goto LABEL_14;
    }
  }
  v14 = sub_10007EF1C(&v24);
  if ((v15 & 1) != 0)
  {
    sub_1000A0110(v5[7] + 56 * v14, (uint64_t)v30);
    goto LABEL_15;
  }
LABEL_14:
  v31 = 0;
  memset(v30, 0, sizeof(v30));
LABEL_15:
  sub_1000A00DC(&v24);
  v5 = *(_QWORD **)&v30[0];
  if (*(_QWORD *)&v30[0])
  {
    v16 = *(id *)&v30[0];
    sub_1000A00DC((id *)v30);
    if (!a3)
      goto LABEL_21;
  }
  else
  {
    sub_10000CB4C((uint64_t)v30, &qword_100655B80);
    if (!a3)
      goto LABEL_21;
  }
LABEL_19:
  if (v5)
    goto LABEL_22;
  v5 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithTaggedItemsSourceRepresentedTag:", a3);
LABEL_21:
  if (v5)
  {
LABEL_22:
    v17 = v5;
    v18 = objc_msgSend(v17, "representedTag");
    if (v18)
    {

      v19 = objc_msgSend(v3, "isTaggedItemsSource");
      if ((v19 & 1) == 0)
        goto LABEL_30;
    }
    else
    {
      v20 = objc_msgSend(v3, "fileProviderItem");
      if (!v20
        || (v20, (v21 = objc_msgSend(v17, "fileProviderItem")) == 0))
      {

        goto LABEL_30;
      }
      v22 = v21;

      v3 = v17;
    }
    v17 = v3;
    v3 = v5;
LABEL_30:

  }
  return v3;
}

uint64_t _s5Files21DOCFileProviderSourceC11displayNameSSvg_0()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName + 8];
  if (v2)
  {
    v3 = *v1;
  }
  else
  {
    v3 = sub_10003B3C0(v0);
    v4 = v1[1];
    *v1 = v3;
    v1[1] = v5;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

void sub_10000E108()
{
  id *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char v17;
  Class isa;
  __n128 v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _BYTE v27[24];

  v0 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v0, v27, 0, 0);
  if (!*v0)
    return;
  v1 = *v0;
  sub_1000AAF5C();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_4:
      sub_100081774(0, v4 & ~(v4 >> 63), 0);
      if (v4 < 0)
      {
        __break(1u);
        return;
      }
      v26 = v1;
      v5 = 0;
      v6 = _swiftEmptyArrayStorage;
      do
      {
        if ((v3 & 0xC000000000000001) != 0)
          v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
        else
          v7 = *(id *)(v3 + 8 * v5 + 32);
        v8 = v7;
        v9 = objc_msgSend(v7, "identifier");
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v12 = v11;

        v14 = _swiftEmptyArrayStorage[2];
        v13 = _swiftEmptyArrayStorage[3];
        if (v14 >= v13 >> 1)
          sub_100081774(v13 > 1, v14 + 1, 1);
        ++v5;
        _swiftEmptyArrayStorage[2] = v14 + 1;
        v15 = &_swiftEmptyArrayStorage[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      while (v4 != v5);
      swift_bridgeObjectRelease(v3);
      v1 = v26;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease(v3);
  v6 = _swiftEmptyArrayStorage;
LABEL_17:
  v16 = sub_10002DAFC(v1);
  v17 = sub_1000882D8(_swiftEmptyArrayStorage, v16);
  swift_bridgeObjectRelease(v16);
  if ((v17 & 1) == 0)
  {
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "setDOCSourceOrderKey:", isa);

    objc_msgSend(v1, "synchronize");
    v20 = *(id *)DOCLog.Source.unsafeMutableAddressor(v19);
    static os_log_type_t.info.getter(v21);
    v22 = sub_10006922C((uint64_t *)&unk_100644560);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
    v24 = _swiftEmptyArrayStorage[2];
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v24;
    os_log(_:dso:log:type:_:)("Sorting sources: %ld source identifiers stored in defaults", v25);

    v1 = v20;
    v6 = (_QWORD *)v23;
  }

  swift_bridgeObjectRelease(v6);
}

double sub_10000E3A4(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  _BYTE v17[24];

  v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v10 = v9;
  swift_release(v8);
  v11 = type metadata accessor for DOCMutableSidebarSection();
  v12 = swift_dynamicCastClassUnconditional(v10, v11, 0, 0, 0);
  if ((a4(v12, a3) & 1) != 0)
  {
    v14 = (uint64_t *)(a2
                    + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, v17, 0, 0);
    v15 = *v14;
    swift_bridgeObjectRetain(*v14);
    v16 = sub_1000069B8(a1, v15);
    swift_bridgeObjectRelease(v15);
    if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
      sub_100013B5C((v16 & 1) == 0, 1);
    else
      sub_100235834();
    *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  }
  return result;
}

id sub_10000E5B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  CGFloat bottom;
  CGFloat right;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v20;

  v4 = a1[113];
  v20 = (id)a1[114];
  v5 = a1[115];
  v6 = a1[116];
  v7 = a1[118];
  v8 = a1[119];
  v9 = (void *)objc_opt_self(UIFont);
  v10 = a1[69];
  v11 = objc_msgSend(v9, "preferredFontForTextStyle:compatibleWithTraitCollection:", v20, v10);
  v12 = objc_msgSend(v9, "preferredFontForTextStyle:compatibleWithTraitCollection:", v5, v10);
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  sub_1002F4F58();
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v15;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v17;
  *(_QWORD *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v20;
  *(_BYTE *)(a2 + 80) = 1;
  *(_QWORD *)(a2 + 88) = v4;
  *(CGFloat *)(a2 + 96) = UIEdgeInsetsZero.top;
  *(_QWORD *)(a2 + 104) = 0;
  *(CGFloat *)(a2 + 112) = bottom;
  *(CGFloat *)(a2 + 120) = right;
  return v20;
}

id sub_10000E6CC(void *a1)
{
  char *v1;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool____lazy_storage___notificationsController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_configuration] = a1;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCItemCollectionViewPool();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v12, "init");
  v5 = sub_1000A2500();
  v6 = (void *)objc_opt_self(NSOperationQueue);
  v7 = objc_msgSend(v6, "mainQueue", (unsigned __int128)0, (unsigned __int128)0, v12.receiver, v12.super_class);
  (*(void (**)(const NSNotificationName, __int128 *, id, uint64_t (*)(uint64_t), _QWORD))(*(_QWORD *)v5 + 144))(UIApplicationDidReceiveMemoryWarningNotification, &v11, v7, sub_1003E6F9C, 0);
  v9 = v8;
  swift_release(v5);

  swift_bridgeObjectRelease(v9);
  sub_10007EB54((uint64_t)&v11);
  return v4;
}

void sub_10000E7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0
      || (v3 = *(id *)v2,
          v4 = objc_msgSend(v3, "doc_displaysSearchResults"),
          v3,
          (v4 & 1) == 0))
    {
      v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
      if (v5)
      {
        v6 = objc_msgSend(v5, "searchController");
        if (v6)
        {
          v7 = v6;
          v8 = type metadata accessor for DOCSearchController();
          if (!swift_dynamicCastClass(v7, v8))

        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_10000EA7C(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7();
  return objc_msgSendSuper2(&v12, "initWithFrame:", a2, a3, a4, a5);
}

uint64_t type metadata accessor for DOCView()
{
  return objc_opt_self(_TtC5Files7DOCView);
}

void sub_10000EB08(void *a1, char *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  double v14;
  char v15;
  char *v16;
  char *v17;
  char *v18;
  double v19;
  uint64_t v20;
  NSString v21;
  char v22[24];

  objc_msgSend(a1, "bounds");
  v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v4, v5, v6, v7);
  objc_msgSend(v8, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(a1, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(a1, "setAutoresizingMask:", 18);
  objc_msgSend(v8, "addSubview:", a1);
  v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v10 = *(void **)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView] = a1;
  v11 = a1;

  v12 = *(_QWORD *)&a2[v9];
  if (v12)
    swift_unknownObjectWeakAssign(v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_itemCollectionViewController, a2);
  objc_msgSend(a2, "setView:", v8);
  v13 = &a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed];
  *(_QWORD *)&v14 = swift_beginAccess(&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed], v22, 1, 0).n128_u64[0];
  v15 = *v13;
  *v13 = 1;
  if ((v15 & 1) == 0)
    sub_1001F6FD4(0);
  objc_msgSend(v11, "setPrefetchDataSource:", a2, v14);
  objc_msgSend(v11, "setPrefetchingEnabled:", 1);
  objc_msgSend(v11, "setDelegate:", a2);
  v16 = &v11[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate];
  *((_QWORD *)v16 + 1) = &off_1005D9BA8;
  swift_unknownObjectWeakAssign(v16, a2);
  v17 = &v11[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate];
  *((_QWORD *)v17 + 1) = &off_1005CC2A8;
  swift_unknownObjectWeakAssign(v17, a2);
  v18 = &v11[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  *((_QWORD *)v18 + 1) = &off_1005D4B88;
  swift_unknownObjectWeakAssign(v18, a2);
  v20 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 48];
  if (v20)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                          + 48]);
    v21 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v11, "setAccessibilityIdentifier:", v21, v19);

  if (objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "collectionSupportsDragAndDrop"))
  {
    objc_msgSend(v11, "setDragDelegate:", a2);
    objc_msgSend(v11, "setDropDelegate:", a2);
    objc_msgSend(v11, "setDragInteractionEnabled:", 1);
  }

}

id sub_10000EDCC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id result;
  void *v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;

  *(_QWORD *)(v4 + 24) = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  *(_WORD *)(v4 + 48) = 1;
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v10 = result;
    v15._object = (void *)0x800000010050E520;
    v11._countAndFlagsBits = 0x6574656C6544;
    v11._object = (void *)0xE600000000000000;
    v12.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v12.value._object = (void *)0xEB00000000656C62;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v15._countAndFlagsBits = 0xD00000000000001BLL;
    v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v15);

    *(Swift::String *)(v4 + 56) = v14;
    *(_WORD *)(v4 + 72) = 256;
    *(_BYTE *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 32) = a2;
    *(_QWORD *)(v4 + 40) = a3;
    *(_QWORD *)(v4 + 80) = a4;
    *(_QWORD *)(v4 + 88) = &_swiftEmptyArrayStorage;
    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10000EED8(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = a1;
  v2 = objc_opt_class(_TtC5Files31DOCItemCollectionViewController);
  if ((objc_opt_isKindOfClass(v1, v2) & 1) != 0)
  {
    v3 = v1;
  }
  else
  {
    v4 = objc_opt_class(_TtC5Files29DOCBrowserContainerController);
    if ((objc_opt_isKindOfClass(v1, v4) & 1) != 0)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "contentViewController"));
      v6 = sub_10000EED8();
      v3 = (id)objc_claimAutoreleasedReturnValue(v6);

    }
    else
    {
      v3 = 0;
    }
  }

  return v3;
}

Swift::Bool __swiftcall DOCItemCollectionViewController.becomeKeyboardFocused()()
{
  char *v0;
  id v1;
  id *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  unsigned int v12;
  int v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v21;
  uint64_t v22;
  char *v23;
  __int128 v24;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPopoverOrWidget");
  if ((v1 & 1) == 0)
  {
    v2 = (id *)DOCLog.UI.unsafeMutableAddressor(v1);
    v3 = *v2;
    static os_log_type_t.debug.getter();
    v4 = sub_10006922C((uint64_t *)&unk_100644560);
    v5 = swift_allocObject(v4, 72, 7);
    *((_QWORD *)&v24 + 1) = 2;
    *(_OWORD *)(v5 + 16) = xmmword_1004D9670;
    v6 = type metadata accessor for DOCItemCollectionViewController(0);
    *(_QWORD *)(v5 + 56) = v6;
    v7 = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v5 + 64) = v7;
    *(_QWORD *)(v5 + 32) = v0;
    v8 = v0;
    os_log(_:dso:log:type:_:)("Focusing DOCItemCollectionViewController %p", (const void *)1);

    v9 = objc_msgSend(v8, "viewIfLoaded", swift_bridgeObjectRelease(v5).n128_f64[0]);
    if (v9 && (v10 = v9, v11 = objc_msgSend(v9, "window"), v10, v11))
    {
      v12 = objc_msgSend(v11, "isKeyWindow");

      v13 = v12 ^ 1;
    }
    else
    {
      v13 = 1;
    }
    if (objc_msgSend(v8, "isFirstResponder") && !v13)
      return 1;
    v14 = *v2;
    v15 = static os_log_type_t.debug.getter();
    v16 = swift_allocObject(v4, 72, 7);
    *(_OWORD *)(v16 + 16) = v24;
    *(_QWORD *)(v16 + 56) = v6;
    *(_QWORD *)(v16 + 64) = v7;
    *(_QWORD *)(v16 + 32) = v8;
    v17 = v8;
    os_log(_:dso:log:type:_:)("Will make first responder: %@", 29, 2, &_mh_execute_header, v14, v15, v16);

    v18 = objc_msgSend(v17, "viewIfLoaded", swift_bridgeObjectRelease(v16).n128_f64[0]);
    v19 = objc_msgSend(v18, "window");

    objc_msgSend(v19, "makeKeyAndVisible");
    if ((objc_msgSend(v17, "becomeFirstResponder") & 1) != 0)
      return 1;
    v21 = *v2;
    static os_log_type_t.error.getter(v21);
    v22 = swift_allocObject(v4, 72, 7);
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 56) = v6;
    *(_QWORD *)(v22 + 64) = v7;
    *(_QWORD *)(v22 + 32) = v17;
    v23 = v17;
    os_log(_:dso:log:type:_:)("Unable to make first responder: %p", (const void *)v24);

    swift_bridgeObjectRelease(v22);
  }
  return 0;
}

uint64_t sub_10000F258(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }
  return 0;
}

void sub_10000F428(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10000F468(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10000F4CC + 4 * byte_1004E5A60[a2]))(1701667182);
}

uint64_t sub_10000F4CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 1701667182 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1701667182, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

double sub_10000F580@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  id v10;

  v3 = objc_msgSend(v1, "viewIfLoaded");
  v4 = objc_msgSend(v3, "window");

  v5 = objc_msgSend(v4, "windowScene");
  if (!v5
    || (v6 = objc_msgSend(v5, "delegate"), v5, !v6)
    || (v10 = v6,
        v7 = sub_10006922C((uint64_t *)&unk_10064EB60),
        v8 = sub_10006922C(&qword_10064EB58),
        (swift_dynamicCast(a1, &v10, v7, v8, 6) & 1) == 0))
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void sub_10000F6EC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t aBlock[5];
  uint64_t v32;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.Enumeration.unsafeMutableAddressor(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v8, v9))
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
LABEL_5:
    v17 = *(void **)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
    if ((v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
    {
      v18 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
      v19 = v17;
      sub_1000AA44C();
      if (qword_100640FF8 != -1)
        swift_once(&qword_100640FF8, sub_10009CB2C);
      v20 = qword_100672C28;
      v21 = *(NSObject **)(qword_100672C28 + 24);
      v22 = swift_allocObject(&unk_1005CB510, 32, 7);
      *(_QWORD *)(v22 + 16) = v19;
      *(_QWORD *)(v22 + 24) = v20;
      v23 = swift_allocObject(&unk_1005CB538, 32, 7);
      *(_QWORD *)(v23 + 16) = sub_10009CD94;
      *(_QWORD *)(v23 + 24) = v22;
      aBlock[4] = (uint64_t)sub_10006657C;
      v32 = v23;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10006655C;
      aBlock[3] = (uint64_t)&unk_1005CB550;
      v24 = _Block_copy(aBlock);
      v25 = v32;
      swift_retain(v20);
      sub_1000B0EFC(v17, v18, 1);
      swift_retain(v20);
      swift_retain(v23);
      swift_release(v25);
      dispatch_sync(v21, v24);
      _Block_release(v24);
      LOBYTE(v21) = swift_isEscapingClosureAtFileLocation(v23, "", 103, 40, 28, 1);
      swift_release(v20);
      swift_release(v22);
      swift_release(v23);
      sub_100008A60(v17, v18, 1);
      if ((v21 & 1) == 0)
        goto LABEL_11;
      __break(1u);
    }
    v26 = v17;
    objc_msgSend(v26, "doc_startObserving");

LABEL_11:
    sub_10003498C();
    return;
  }
  v27 = v1;
  v10 = swift_slowAlloc(32, -1);
  v28 = (_QWORD *)swift_slowAlloc(8, -1);
  v29 = swift_slowAlloc(64, -1);
  aBlock[0] = v29;
  *(_DWORD *)v10 = 136446722;
  v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
  if (v11)
  {
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v30 = sub_1000544FC(v12, v11, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, aBlock);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 2082;
    v30 = sub_1000544FC(0xD000000000000010, 0x8000000100512850, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, aBlock);
    *(_WORD *)(v10 + 22) = 2112;
    v30 = (uint64_t)v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, aBlock);
    v14 = v28;
    *v28 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v10, 0x20u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v15);
    swift_slowDealloc(v14, -1, -1);
    v16 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v27);
    goto LABEL_5;
  }

  __break(1u);
}

id sub_10000FB4C()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  double v6;

  v1 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v1, "setTextColor:", v2);

  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleFootnote, v4);

  objc_msgSend(v1, "setFont:", v5);
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v1, "setNumberOfLines:", 0);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v6);
  return v1;
}

char *sub_10000FC84(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v37 = a3;
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = v6[5];
    v11 = *(void **)&a2[v10];
    *(_QWORD *)&a1[v10] = v11;
    v12 = v6[6];
    v13 = *(_QWORD *)&a2[v12];
    *(_QWORD *)&a1[v12] = v13;
    v14 = v6[7];
    v15 = *(void **)&a2[v14];
    *(_QWORD *)&a1[v14] = v15;
    v16 = v6[8];
    v17 = *(void **)&a2[v16];
    *(_QWORD *)&a1[v16] = v17;
    v18 = v6[9];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = *(_QWORD *)&a2[v18 + 24];
    v22 = v11;
    swift_bridgeObjectRetain(v13);
    v23 = v15;
    v24 = v17;
    if (v21)
    {
      *((_QWORD *)v19 + 3) = v21;
      (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
    }
    else
    {
      v25 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v25;
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
    a3 = v37;
  }
  v26 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v27 = *(int *)(v26 + 20);
  v28 = *(_QWORD *)&a2[v27];
  *(_QWORD *)&a1[v27] = v28;
  v29 = *(int *)(v26 + 24);
  v30 = *(_QWORD *)&a2[v29];
  *(_QWORD *)&a1[v29] = v30;
  v31 = *(int *)(a3 + 20);
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *(_QWORD *)&a2[v31];
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v30);
  if (v34)
  {
    v35 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v35;
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  return a1;
}

void sub_10000FE48(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char isEscapingClosureAtFileLocation;
  uint64_t v43;
  void **aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  void *v48;
  uint64_t v49;

  v5 = v3;
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *(_QWORD *)v12 = static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v14 & 1) != 0)
  {
    v15 = sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v14 = static OS_os_log.default.getter(v15);
    static os_log_type_t.debug.getter(v14);
    v16 = sub_10006922C((uint64_t *)&unk_100644560);
    v12 = (char *)swift_allocObject(v16, 72, 7);
    *((_OWORD *)v12 + 1) = xmmword_1004D9670;
    v4 = (unint64_t)a1 >> 62;
    if (!((unint64_t)a1 >> 62))
    {
      v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  if (a1 < 0)
    v43 = a1;
  else
    v43 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v17 = _CocoaArrayWrapper.endIndex.getter(v43);
  swift_bridgeObjectRelease(a1);
LABEL_4:
  *((_QWORD *)v12 + 7) = &type metadata for Int;
  *((_QWORD *)v12 + 8) = &protocol witness table for Int;
  *((_QWORD *)v12 + 4) = v17;
  os_log(_:dso:log:type:_:)("preloading thumbnails for %d nodes", (_DWORD)aBlock);

  v18 = swift_bridgeObjectRelease(v12).n128_u64[0];
  if (!v4)
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
    goto LABEL_11;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  v18 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (v20)
  {
LABEL_11:
    v21 = (unint64_t)objc_msgSend(a3, "userInterfaceStyle", *(double *)&v18);
    v22 = (void **)v21;
    if (v21 >= 3)
    {
      type metadata accessor for UIUserInterfaceStyle(0);
      v47 = v24;
      aBlock = v22;
      doc_warnUnrecognizedEnumValueEncountered(_:)(&aBlock);
      sub_100068588(&aBlock);
      v23 = 1;
    }
    else
    {
      v23 = qword_1004E3C90[v21];
    }
    v25 = swift_allocObject(&unk_1005E0F58, 24, 7);
    *(_QWORD *)(v25 + 16) = &_swiftEmptyDictionarySingleton;
    v26 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
    v27 = swift_allocObject(&unk_1005E0F80, 240, 7);
    v28 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(v27 + 168) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(v27 + 184) = v28;
    *(_OWORD *)(v27 + 200) = *(_OWORD *)(a2 + 160);
    v29 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v27 + 104) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v27 + 120) = v29;
    v30 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(v27 + 136) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v27 + 152) = v30;
    v31 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v27 + 40) = *(_OWORD *)a2;
    *(_OWORD *)(v27 + 56) = v31;
    v32 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v27 + 72) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(v27 + 16) = a1;
    *(_QWORD *)(v27 + 24) = v5;
    *(_QWORD *)(v27 + 32) = v23;
    v33 = *(_QWORD *)(a2 + 176);
    *(_OWORD *)(v27 + 88) = v32;
    *(_QWORD *)(v27 + 216) = v33;
    *(_QWORD *)(v27 + 224) = a3;
    *(_QWORD *)(v27 + 232) = v25;
    v48 = sub_1000A8868;
    v49 = v27;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = sub_10004A82C;
    v47 = &unk_1005E0F98;
    v34 = _Block_copy(&aBlock);
    v35 = v49;
    swift_bridgeObjectRetain(a1);
    swift_retain();
    sub_100070B28(a2);
    v36 = a3;
    swift_retain();
    objc_msgSend(v26, "performInBatch:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);

    v37 = *(NSObject **)(v5 + 32);
    v38 = swift_allocObject(&unk_1005E0FD0, 32, 7);
    *(_QWORD *)(v38 + 16) = v5;
    *(_QWORD *)(v38 + 24) = v25 + 16;
    v39 = swift_allocObject(&unk_1005E0FF8, 32, 7);
    *(_QWORD *)(v39 + 16) = sub_1000A887C;
    *(_QWORD *)(v39 + 24) = v38;
    v48 = sub_10010DB64;
    v49 = v39;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = sub_10006655C;
    v47 = &unk_1005E1010;
    v40 = _Block_copy(&aBlock);
    v41 = v49;
    swift_retain();
    swift_retain();
    swift_release(v41);
    dispatch_sync(v37, v40);
    _Block_release(v40);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v39, "", 103, 222, 35, 1);
    swift_release(v38);
    swift_release(v25);
    swift_release(v39);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1000102E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  double v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t (*v21)(char *, __n128);
  __n128 v22;
  char v23;
  uint64_t v25;

  v3 = type metadata accessor for DOCBrowserHistoryItem(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(a1 + *(int *)(v4 + 20));
  v8 = objc_msgSend(v7, "sourceIdentifier");
  v9 = DOCDocumentSourceIdentifierBrowseStartingPoints;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  if (v10 == v13 && v12 == v14)
  {

    swift_bridgeObjectRelease_n(v12, 2);
    goto LABEL_10;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);

  swift_bridgeObjectRelease(v12);
  *(_QWORD *)&v18 = swift_bridgeObjectRelease(v16).n128_u64[0];
  if ((v17 & 1) != 0)
  {
LABEL_10:
    sub_10007C6DC(a1, (uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_11;
  }
  if (!objc_msgSend(v7, "isContainer", v18))
  {
    sub_10007C6DC(a1, (uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
LABEL_14:
    v23 = 0;
    goto LABEL_12;
  }
  v19 = objc_msgSend(v7, "canBeRestored");
  sub_10007C6DC(a1, (uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
  if ((v19 & 1) == 0)
    goto LABEL_14;
LABEL_11:
  v21 = *(uint64_t (**)(char *, __n128))(v1
                                                 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter);
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter + 8);
  v22 = swift_retain();
  v23 = v21(v6, v22);
  swift_release(v20);
LABEL_12:
  sub_10007C720((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
  return v23 & 1;
}

uint64_t sub_10001049C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  id v22;
  id v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[3];
  void *ObjectType;
  void (*v41)(uint64_t);
  uint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.FileProviderSyncState.unsafeMutableAddressor(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v8 = swift_retain_n(v1, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v35 = v2;
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v34 = v12;
    *(_DWORD *)v11 = 136315138;
    aBlock[0] = v12;
    v33 = v11 + 4;
    v13 = objc_msgSend(*(id *)(v1 + 16), "domainFullDisplayName", v11 + 4);
    v14 = v1;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

    v18 = v15;
    v1 = v14;
    v37 = sub_1000544FC(v18, v17, aBlock);
    v19 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_release_n(v14, 2, v19);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Starting observation of %s quota updates.", v11, 0xCu);
    v20 = v34;
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v35);
  }
  else
  {

    swift_release_n(v1, 2, v21);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  v22 = sub_10031997C();
  objc_msgSend(v22, "startObservingUpdates");

  v23 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v24 = objc_msgSend((id)objc_opt_self(DOCICloudQuotaInAppMessaging), "currentInAppMessageChangedNotification");
  if (!v24)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v26 = v25;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
  }
  v27 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v28 = swift_allocObject(&unk_1005DD378, 24, 7);
  swift_weakInit(v28 + 16, v1);
  v41 = sub_100093C3C;
  v42 = v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000B3580;
  ObjectType = &unk_1005DD390;
  v29 = _Block_copy(aBlock);
  swift_release(v42);
  v30 = objc_msgSend(v23, "addObserverForName:object:queue:usingBlock:", v24, 0, v27, v29);
  _Block_release(v29);

  ObjectType = (void *)swift_getObjectType(v30, v31);
  aBlock[0] = (uint64_t)v30;
  sub_10007EBDC((uint64_t)aBlock, (uint64_t)&v37);
  swift_beginAccess(v1 + 56, v36, 33, 0);
  sub_10007EB94((uint64_t)&v37, v1 + 56);
  return swift_endAccess(v36);
}

unint64_t sub_100010844()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  _BYTE *v28;
  id v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  __n128 v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  objc_class *v52;
  objc_class *v53;
  uint64_t v54;
  __n128 v55;
  Class isa;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  objc_class *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  objc_class *v67;
  objc_class *v68;
  uint64_t v69;
  __n128 v70;
  Class v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  objc_class *v76;
  uint64_t v77;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD v83[4];
  char v84[24];
  uint64_t v85;
  unint64_t v86;
  UIAction_optional v87;
  UIAction_optional v88;
  UIMenu_optional v89;
  UIMenu_optional v90;

  v1 = v0;
  v86 = (unint64_t)_swiftEmptyArrayStorage;
  v2 = sub_1002C9870();
  v3 = sub_100038208();
  if (!v3)
    goto LABEL_26;
  v4 = v3;
  if (!DOCUsePadIdiomForTraits(v2) || objc_msgSend(v2, "horizontalSizeClass") != (id)2)
  {
    v5 = (uint64_t)sub_100034068(0);
    v6 = v5;
    if ((unint64_t)v5 >> 62)
    {
      if (v5 >= 0)
        v5 &= 0xFFFFFFFFFFFFFF8uLL;
      v7 = _CocoaArrayWrapper.endIndex.getter(v5);
    }
    else
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v6);
    if (!v7
      && (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingFolders") & 1) == 0)
    {
      v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems];
      v24 = swift_bridgeObjectRetain(v23);
      v25 = sub_1002CCC68(v24);
      swift_bridgeObjectRelease(v23);
      sub_1000887E8((uint64_t)v25);

      goto LABEL_26;
    }
  }
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] == 1)
  {
    v8 = sub_1002CDD08();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v9 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v10 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v9 >= v10 >> 1)
    {
      v79 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v9 + 1, 1);
      v9 = v79;
    }
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
    specialized Array._endMutation()(v11);

    goto LABEL_26;
  }
  v83[3] = type metadata accessor for DOCItemCollectionViewController(0);
  v83[0] = v1;
  v12 = v1;
  v13 = sub_1002D39A0(v4, v83, (uint64_t)"actionBarButtonTriggeredWithActionBarButton:");
  sub_100068588(v83);
  v14 = (uint64_t)sub_100034068(0);
  if ((unint64_t)v14 >> 62)
  {
    v80 = v14 & 0xFFFFFFFFFFFFFF8;
    if (v14 < 0)
      v80 = v14;
    v81 = v14;
    v15 = _CocoaArrayWrapper.endIndex.getter(v80);
    v14 = v81;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v14);
  if (v15 <= 0)
  {
    if (!objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingFolders")|| (v17 = *(void **)(*(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]+ OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0|| !objc_msgSend(v17, "supportsPickingFolders")|| (v18 = sub_10024C39C()) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }

  }
  v16 = 1;
LABEL_22:
  objc_msgSend(v13, "setEnabled:", v16);
  v19 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v20 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v20 >= v21 >> 1)
  {
    v82 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v20 + 1, 1);
    v20 = v82;
  }
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
  specialized Array._endMutation()(v22);

LABEL_26:
  v26 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if ((objc_msgSend(v26, "forSavingDocuments") & 1) != 0
    || (objc_msgSend(v26, "forPickingFolders") & 1) != 0
    || objc_msgSend(v26, "forPickingDownloadsFolder"))
  {
    v27 = sub_100038208();

    if (!v27)
    {
      v28 = &v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled];
      swift_beginAccess(&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled], v84, 0, 0);
      if (*v28 == 1)
        sub_10046D850();
      else
        v29 = sub_1002CDD08();
      v30 = v29;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v32 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v31 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v32 >= v31 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
      v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
      specialized Array._endMutation()(v33);
    }
  }
  if (objc_msgSend(v1, "isEditing")
    && (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0
    && sub_1002CCD54())
  {
    v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
    swift_beginAccess(v34 + 16, v83, 33, 0);
    v35 = *(void **)(v34 + 24);
    if (v35)
    {
      swift_retain(v34);
      v36 = v35;
    }
    else
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v37 = swift_allocObject(&unk_1005DA8E8, 24, 7);
      swift_unknownObjectWeakInit(v37 + 16, v1);
      v38 = swift_retain(v34);
      v39 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v38, 0, 0, 0, sub_1002D5008, v37);
      v40 = sub_10045814C((uint64_t)v39);

      *(_QWORD *)(v34 + 24) = v40;
      type metadata accessor for DOCBarButtonItemGroup();
      v41 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v42 = swift_allocObject(v41, 40, 7);
      *(_OWORD *)(v42 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v42 + 32) = v40;
      v85 = v42;
      specialized Array._endMutation()(v42);
      v43 = v85;
      v36 = v40;
      v44 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v43);
      swift_bridgeObjectRelease(v43);

      v35 = 0;
      *(_QWORD *)(v34 + 16) = v44;
    }
    swift_endAccess(v83);
    v45 = v35;
    v46 = swift_release(v34);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
    v48 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v47 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v48 >= v47 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
    v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v36);
    specialized Array._endMutation()(v49);
  }
  if (objc_msgSend(v1, "enclosedInUIPDocumentLanding")
    && objc_msgSend(v2, "horizontalSizeClass") == (id)1)
  {
    v50 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage;
    v51 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
    swift_beginAccess(v51 + 160, v83, 33, 0);
    v52 = *(objc_class **)(v51 + 168);
    if (v52)
    {
      swift_retain(v51);
      v53 = v52;
    }
    else
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v54 = swift_allocObject(&unk_1005DA8E8, 24, 7);
      swift_unknownObjectWeakInit(v54 + 16, v1);
      v55 = swift_retain(v51);
      v87.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v55, 0, 0, 0, sub_1002D4FE8, v54);
      v87.is_nil = 0;
      isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemSearch, v87, v89).super.super.isa;
      *(_QWORD *)(v51 + 168) = isa;
      type metadata accessor for DOCBarButtonItemGroup();
      v57 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v58 = swift_allocObject(v57, 40, 7);
      *(_OWORD *)(v58 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v58 + 32) = isa;
      v85 = v58;
      specialized Array._endMutation()(v58);
      v59 = v85;
      v53 = isa;
      v60 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v59);
      swift_bridgeObjectRelease(v59);

      v52 = 0;
      *(_QWORD *)(v51 + 160) = v60;
    }
    swift_endAccess(v83);
    v61 = v52;
    v62 = swift_release(v51);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
    v64 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v63 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v64 >= v63 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
    v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v53);
    specialized Array._endMutation()(v65);
    v66 = *(_QWORD *)&v1[v50];
    swift_beginAccess(v66 + 160, v83, 33, 0);
    v67 = *(objc_class **)(v66 + 168);
    if (v67)
    {
      swift_retain(v66);
      v68 = v67;
    }
    else
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v69 = swift_allocObject(&unk_1005DA8E8, 24, 7);
      swift_unknownObjectWeakInit(v69 + 16, v1);
      v70 = swift_retain(v66);
      v88.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v70, 0, 0, 0, sub_1002D4FE8, v69);
      v88.is_nil = 0;
      v71 = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemSearch, v88, v90).super.super.isa;
      *(_QWORD *)(v66 + 168) = v71;
      type metadata accessor for DOCBarButtonItemGroup();
      v72 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v73 = swift_allocObject(v72, 40, 7);
      *(_OWORD *)(v73 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v73 + 32) = v71;
      v85 = v73;
      specialized Array._endMutation()(v73);
      v74 = v85;
      v68 = v71;
      v75 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v74);
      swift_bridgeObjectRelease(v74);

      v67 = 0;
      *(_QWORD *)(v66 + 160) = v75;
    }
    swift_endAccess(v83);
    v76 = v67;
    swift_release(v66);
    if (objc_msgSend(v1, "isEditing"))
      v77 = v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
    else
      v77 = 1;
    -[objc_class setEnabled:](v68, "setEnabled:", v77);

  }
  return v86;
}

void sub_1000111C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v1 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0, qword_100644168);
  KeyPath = swift_getKeyPath(&unk_1004DB388);
  v3 = __chkstk_darwin(KeyPath);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>)))((swift_isaMask & *v1) + 0x90))(v9, v3, sub_1000856A0);

  swift_release(KeyPath);
  v4 = *(_QWORD *)&v9[0];
  if (qword_100640D90 != -1)
    swift_once(&qword_100640D90, sub_1000B1354);
  v5 = qword_1006726A0;
  memset(v9, 0, sizeof(v9));
  v6 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  (*(void (**)(uint64_t, _OWORD *, id, void (*)(void *), _QWORD))(*(_QWORD *)v4 + 144))(v5, v9, v6, sub_10013D710, 0);
  v8 = v7;
  swift_release(v4);

  swift_bridgeObjectRelease(v8);
  sub_10000CB4C((uint64_t)v9, &qword_100642730);
  sub_100139334();
}

id DOCItemCollectionViewController.docContentUnavailableConfigurationState.getter()
{
  char *v0;
  id result;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  unsigned int v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  result = objc_msgSendSuper2(&v12, "docContentUnavailableConfigurationState");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v2)
  {
    v3 = result;
    v4 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v4 + 16) & 1) == 0)
    {
      v5 = *(id *)v4;
      v6 = objc_msgSend(v5, "doc_displaysSearchResults");

      if (v6)
      {
        v7 = objc_msgSend(v0, "presentingViewController");
        v8 = v7;
        if (v7)
        {
          v9 = objc_msgSend(v7, "docUnavailableSearchResultsText");

          if (v9)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
            v11 = v10;

            v8 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v11);
          }
          else
          {
            v8 = 0;
          }
        }
        objc_msgSend(v3, "setSearchControllerText:", v8);

      }
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100011490(char *a1, uint64_t a2, uint64_t a3, char a4, SEL *a5)
{
  uint64_t v8;
  char *v9;
  objc_super v10;

  v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files17DOCViewController_appearStateTracker];
  v9 = a1;
  swift_retain();
  sub_100021890((uint64_t)v9, a4);
  swift_release(v8);
  v10.receiver = v9;
  v10.super_class = (Class)type metadata accessor for DOCViewController();
  objc_msgSendSuper2(&v10, *a5, a3);

}

Swift::Void __swiftcall DOCItemCollectionViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t Strong;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  NSString v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  int v72;
  char v73;
  unsigned int v74;
  void *v75;
  int v76;
  char *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  _QWORD aBlock[5];
  uint64_t v88;
  objc_super v89;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v86 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v89.receiver = v2;
  v89.super_class = v11;
  objc_msgSendSuper2(&v89, "viewWillAppear:", a1);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing], v12);
  if (Strong)
  {
    v14 = (id)Strong;
    v15 = objc_msgSend(v2, "parentViewController");
    if (v15 && (v16 = v15, v15, v16 == v14))
    {
      v17 = objc_msgSend(v2, "view");
      if (!v17)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      v18 = v17;
      v19 = objc_msgSend(v17, "superview");

      if (!v19)
      {
        v20 = objc_msgSend(v14, "view");
        if (!v20)
        {
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        v21 = v20;
        objc_msgSend(v20, "bounds");
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;

        objc_msgSend(v18, "setFrame:", v23, v25, v27, v29);
        objc_msgSend(v18, "setAutoresizingMask:", 18);
        v30 = objc_msgSend(v14, "view");
        if (!v30)
        {
LABEL_43:
          __break(1u);
          return;
        }
        v31 = v30;
        objc_msgSend(v30, "addSubview:", v18);

        v32 = objc_msgSend(v14, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
        sub_1002C3CF4((uint64_t)v32, v33);
      }
      swift_unknownObjectRelease(v14);

    }
    else
    {
      swift_unknownObjectRelease(v14);
    }
  }
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
  objc_msgSend(v2, "loadViewIfNeeded");
  v85 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v34 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v34)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v35 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v36 = v34;
  v37 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration(v35);
  if (!v37)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v40 = v39;
    v37 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v38 = swift_bridgeObjectRelease(v40).n128_u64[0];
  }
  objc_msgSend(v36, "setFocusGroupIdentifier:", v37, v38);

  v41 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v41)
    goto LABEL_40;
  if (objc_msgSend(v41, "isGathering"))
  {
    sub_100189BB8();
  }
  else
  {
    v42 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    v43 = swift_bridgeObjectRetain(v42);
    sub_100095F28(v43);
    swift_bridgeObjectRelease(v42);
  }
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext])
    sub_100014AAC();
  sub_100095BFC();
  if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] == 1)
  {
    if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0)
    {
      v45 = sub_1001793C8((uint64_t)aBlock);
      if (*v44 != 2)
        v44[1] = 1;
      ((void (*)(_QWORD *, _QWORD))v45)(aBlock, 0);
      v46 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
      v47 = swift_bridgeObjectRetain(v46);
      sub_100039F10(v47, 2);
      swift_bridgeObjectRelease(v46);
    }
  }
  else
  {
    v48 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v83 = static OS_dispatch_queue.main.getter(v48);
    v49 = swift_allocObject(&unk_1005CBE68, 24, 7);
    *(_QWORD *)(v49 + 16) = v2;
    aBlock[4] = sub_1001BF8FC;
    v88 = v49;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CBE80;
    v50 = _Block_copy(aBlock);
    v51 = v88;
    v52 = v2;
    v53 = swift_release(v51);
    v54 = v86;
    static DispatchQoS.unspecified.getter(v53);
    aBlock[0] = _swiftEmptyArrayStorage;
    v55 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v84 = v35;
    v56 = v5;
    v57 = v55;
    v58 = sub_10006922C((uint64_t *)&unk_100647540);
    v82 = v8;
    v59 = v58;
    v60 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v59, v60, v4, v57);
    v61 = (void *)v83;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v54, v7, v50);
    _Block_release(v50);

    v62 = *(void (**)(char *, uint64_t))(v56 + 8);
    v35 = v84;
    v62(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v54, v82);
  }
  v63 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
  if ((v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0)
  {
    v64 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], aBlock, 0, 0);
    sub_10009A978(*(_QWORD *)v64 == 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094F78((uint64_t)_swiftEmptyArrayStorage, 0, 0);
  sub_10009629C();
  v65 = (void *)objc_opt_self(NSNotificationCenter);
  v66 = objc_msgSend(v65, "defaultCenter");
  v67 = (void *)objc_opt_self(DOCDeprecatedUIMenuController);
  v68 = objc_msgSend(v67, "willShowMenuNotification");
  objc_msgSend(v66, "addObserver:selector:name:object:", v2, "menuControllerWillShow", v68, 0);

  v69 = objc_msgSend(v65, "defaultCenter");
  v70 = objc_msgSend(v67, "willHideMenuNotification");
  objc_msgSend(v69, "addObserver:selector:name:object:", v2, "menuControllerWillHide", v70, 0);

  sub_1003DE5E8();
  sub_1003DE994();
  if (objc_msgSend(v35, "forPickingDocuments") && (v71 = sub_100038208()) != 0)
  {

    v72 = v2[v63];
    v2[v63] = 1;
    objc_msgSend(v2, "setEditing:animated:", 1, 0);
    if (v72 == v2[v63])
    {
      if (!v2[v63])
        return;
      goto LABEL_37;
    }
  }
  else
  {
    v73 = v2[v63];
    v2[v63] = 0;
    if ((v73 & 1) == 0)
      return;
  }
  v74 = objc_msgSend(v2, "isEditing");
  v75 = *(void **)&v2[v85];
  if (v75)
  {
    v76 = v74;
    v77 = v2;
    v78 = v75;
    sub_10009BC94(v78, v77, v76);

  }
  if ((v2[v63] & 1) != 0)
  {
LABEL_37:
    v79 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    v80 = swift_bridgeObjectRetain(v79);
    sub_100039F10(v80, 0);
    swift_bridgeObjectRelease(v79);
  }
}

void sub_100011D78()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  char v3;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  NSString v8;
  id v9;
  Class isa;
  Class v11;
  double v12;
  CFTimeInterval v13;
  id v14;
  long double v15;
  id v16;

  v1 = *(double *)(v0
                 + OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_fractionCompleted);
  v2 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_indeterminateLayer;
  v3 = (v1 < COERCE_DOUBLE(1)) ^ objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_indeterminateLayer), "isHidden");
  if ((v3 & 1) == 0)
  {
    v4 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v4, "begin");
    objc_msgSend(v4, "setDisableActions:", 1);
  }
  objc_msgSend(*(id *)(v0 + v2), "setHidden:", v1 >= COERCE_DOUBLE(1), COERCE_DOUBLE(1));
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressLayer), "setHidden:", v1 < COERCE_DOUBLE(1));
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_borderLayer), "setHidden:", v1 < COERCE_DOUBLE(1));
  if ((v3 & 1) == 0)
    objc_msgSend((id)objc_opt_self(CATransaction), "commit");
  v5 = *(id *)(v0 + v2);
  v6 = String._bridgeToObjectiveC()();
  v16 = v6;
  if (v1 >= COERCE_DOUBLE(1))
  {
    objc_msgSend(v5, "removeAnimationForKey:", v6);
LABEL_10:

    return;
  }
  v7 = objc_msgSend(v5, "animationForKey:", v6);

  if (!v7)
  {
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v8);

    isa = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v9, "setFromValue:", isa);

    v11 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v9, "setToValue:", v11);

    objc_msgSend(v9, "setRemovedOnCompletion:", 0);
    LODWORD(v12) = 2139095039;
    objc_msgSend(v9, "setRepeatCount:", v12);
    objc_msgSend(v9, "setFillMode:", kCAFillModeBoth);
    objc_msgSend(v9, "setDuration:", 1.0);
    v13 = CACurrentMediaTime();
    objc_msgSend(v9, "setBeginTimeMode:", kCAAnimationAbsolute);
    v14 = v9;
    objc_msgSend(v14, "duration");
    objc_msgSend(v14, "setBeginTime:", (double)(v13 - fmod(v13, v15)));

    v5 = *(id *)(v0 + v2);
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "addAnimation:forKey:", v14);

    goto LABEL_10;
  }
}

uint64_t sub_1000120C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (!result)
    return 1;
  v4 = *(_QWORD *)(result + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  v5 = *(_QWORD *)(v4 + 24);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v4 + 24), 2);
    swift_retain();
    __asm { BR              X9 }
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCBrowserContainerController.viewWillAppear(_:)(Swift::Bool a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  objc_super v21;

  v2 = v1;
  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v21, "viewWillAppear:", a1);
  if ((v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] & 1) == 0)
  {
    v4 = objc_msgSend(v1, "childViewControllers");
    v5 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v12 = v6;
      else
        v12 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (!v7)
        goto LABEL_14;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v6);
      if (!v7)
        goto LABEL_14;
    }
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_29;
    }
    v8 = 0;
    v9 = a1;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      else
        v10 = *(id *)(v6 + 8 * v8 + 32);
      v11 = v10;
      ++v8;
      objc_msgSend(v10, "beginAppearanceTransition:animated:", 1, v9);
      objc_msgSend(v11, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");

    }
    while (v7 != v8);
LABEL_14:
    swift_bridgeObjectRelease_n(v6, 2);
    sub_10009EDA0();
    v13 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
    v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled] = 1;
    v14 = (uint64_t)sub_100056180();
    v15 = v14;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v20 = v14;
      else
        v20 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v16 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (v16)
      {
LABEL_16:
        if (v16 >= 1)
        {
          for (i = 0; i != v16; ++i)
          {
            if ((v15 & 0xC000000000000001) != 0)
              v18 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
            else
              v18 = *(id *)(v15 + 8 * i + 32);
            v19 = v18;
            (*(void (**)(_QWORD))((swift_isaMask & *v18) + 0x208))(v2[v13]);

          }
          goto LABEL_26;
        }
LABEL_29:
        __break(1u);
        return;
      }
    }
    else
    {
      v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v14);
      if (v16)
        goto LABEL_16;
    }
LABEL_26:
    swift_bridgeObjectRelease_n(v15, 2);
  }
}

void sub_1000126C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OSSignpostID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = static os_signpost_type_t.event.getter(Strong);
    v14 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
    static OSSignpostID.exclusive.getter();
    v23 = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v13, &_mh_execute_header, v14, "Files-DOCFileSystemCollection", 29, 2, v9, "Sent Update", 11, v23, _swiftEmptyArrayStorage);

    v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v16 = Logger.Enumeration.unsafeMutableAddressor(v15);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v16, v2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v26 = v21;
      *(_DWORD *)v20 = 136446210;
      v25 = sub_1000544FC(0xD000000000000020, 0x8000000100528C30, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[DSEnumeration] %{public}s: FlushingNodesUpdates", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }

    v22 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_100069EDC(v22);

  }
}

uint64_t _s5Files21DOCFileProviderSourceC12providerNameSSvg_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName + 8);
  if (v2)
  {
    v3 = *v1;
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v4)
    {
      v5 = v4;
      v6 = (id)DOCLocalizedProviderOnlyDisplayName();
      v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v8 = v7;

      v9 = v1[1];
    }
    else
    {
      v9 = 0;
      v3 = 0;
      v8 = 0xE000000000000000;
    }
    *v1 = v3;
    v1[1] = v8;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRelease(v9);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_100012B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 28)));
}

_QWORD *sub_100012BA0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __objc2_prot *v21;
  __objc2_prot *v22;
  _QWORD *v23;

  v1 = a1;
  v23 = &_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        v5 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v6 = v4;
        v22 = &OBJC_PROTOCOL___NSCopying;
        v7 = swift_dynamicCastObjCProtocolConditional(v4, 1, &v22);
        if (!v7)
        {
          swift_unknownObjectRelease(v6);
          goto LABEL_15;
        }
        v8 = v7;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        v9 = v23[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
        v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
        specialized ContiguousArray._endMutation()(v10);
        if (v5 == v2)
          return v23;
      }
      __break(1u);
    }
    else
    {
      v11 = 0;
      v12 = v1 + 32;
      while (1)
      {
        v13 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        v14 = *(void **)(v12 + 8 * v11);
        v21 = &OBJC_PROTOCOL___NSCopying;
        v15 = swift_dynamicCastObjCProtocolConditional(v14, 1, &v21);
        if (!v15)
        {
LABEL_15:
          swift_release(v23);
          return 0;
        }
        v1 = v15;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v16 = v23[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
        v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v1);
        specialized ContiguousArray._endMutation()(v17);
        ++v11;
        if (v13 == v2)
          return v23;
      }
    }
    __break(1u);
LABEL_18:
    if (v1 < 0)
      v19 = v1;
    else
      v19 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v20);
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
  }
  return v23;
}

void sub_100012D88(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  int v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  objc_super v15;
  objc_super v16;

  v3 = v2;
  v4 = a1 & 1;
  v5 = OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource;
  if (v2[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] == 1
    && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], a2)) != 0)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "traitCollectionExpectedForSearchPresentation");
    swift_unknownObjectRelease(v7);
    if (!v4)
      goto LABEL_8;
  }
  else
  {
    v16.receiver = v2;
    v16.super_class = (Class)type metadata accessor for DOCSearchController();
    v8 = objc_msgSendSuper2(&v16, "traitCollection");
    if (!v4)
      goto LABEL_8;
  }
  v10 = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], v9);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "traitCollectionExpectedForSearchPresentation");
    swift_unknownObjectRelease(v11);
    goto LABEL_9;
  }
LABEL_8:
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for DOCSearchController();
  v12 = objc_msgSendSuper2(&v15, "traitCollection");
LABEL_9:
  v3[v5] = v4;
  sub_10004F2F0(0, &qword_100646BC8, UITraitCollection_ptr);
  if ((static NSObject.== infix(_:_:)(v12, v8) & 1) == 0)
  {
    v13 = v8;
    sub_10045E964(v8, v14);

    v12 = v13;
  }

}

void sub_1000130AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  _BYTE *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint8_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t (*)(void *), uint64_t, __n128);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  id v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  uint8_t *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v63 - v7;
  v9 = type metadata accessor for OSSignpostID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v70, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v13);
  if (!Strong)
    return;
  v15 = (_BYTE *)Strong;
  v67 = v2;
  v16 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
  swift_retain(v16);
  os_unfair_lock_lock(v16 + 4);
  v15[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving] = 1;
  os_unfair_lock_unlock(v16 + 4);
  v17 = swift_release(v16);
  v18 = static os_signpost_type_t.event.getter(v17);
  v19 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)(v18, &_mh_execute_header, v19, "Files-DOCFileSystemCollection", 29, 2, v12, "StartObserving", 14, 2, _swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode];
  v21 = type metadata accessor for DOCICloudRootNode(0);
  v22 = swift_dynamicCastClass(v20, v21);
  if (!v22)
  {
    sub_1000A940C();
LABEL_16:

    return;
  }
  v23 = (_QWORD *)v22;
  v66 = v6;
  v24 = swift_unknownObjectRetain(v20);
  v25 = Logger.Enumeration.unsafeMutableAddressor(v24);
  v26 = *(uint64_t (**)(char *))(v3 + 16);
  v65 = (uint8_t *)v25;
  v27 = v67;
  v28 = v26(v8);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc(12, -1);
    v64 = v20;
    v32 = (uint8_t *)v31;
    v33 = swift_slowAlloc(32, -1);
    v69 = v33;
    v63 = v23;
    *(_DWORD *)v32 = 136446210;
    v68 = sub_1000544FC(0xD000000000000010, 0x8000000100512850, &v69);
    v23 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[DSEnumeration] %{public}s: node is DOCICloudRootNode", v32, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    v34 = v32;
    v20 = v64;
    v27 = v67;
    swift_slowDealloc(v34, -1, -1);
  }

  v35 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v36 = v35(v8, v27);
  v37 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v23) + 0x78);
  v38 = (void *)v37(v36);

  if (!v38)
  {
    v49 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    swift_unknownObjectWeakInit(v49 + 16, v15);
    v50 = swift_allocObject(&unk_1005DEBC8, 32, 7);
    *(_QWORD *)(v50 + 16) = v49;
    *(_QWORD *)(v50 + 24) = v23;
    v51 = *(void (**)(uint64_t (*)(void *), uint64_t, __n128))((swift_isaMask & *v23) + 0x98);
    swift_unknownObjectRetain(v20);
    v52 = swift_retain(v49);
    v51(sub_1003392FC, v50, v52);
    swift_unknownObjectRelease(v20);

    swift_release(v49);
    return;
  }
  v39 = v66;
  v40 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v26)(v66, v65, v27);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc(12, -1);
    v64 = v20;
    v44 = (uint8_t *)v43;
    v45 = swift_slowAlloc(32, -1);
    v69 = v45;
    *(_DWORD *)v44 = 136446210;
    v65 = v44 + 4;
    v68 = sub_1000544FC(0xD000000000000010, 0x8000000100512850, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "[DSEnumeration] %{public}s: DOCICloudRootNode: main container is ready, startObserving", v44, 0xCu);
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    v46 = v44;
    v20 = v64;
    swift_slowDealloc(v46, -1, -1);

    v47 = v39;
    v48 = v67;
  }
  else
  {

    v47 = v39;
    v48 = v27;
  }
  v53 = v35(v47, v48);
  v54 = v37(v53);
  if (!v54)
  {
    swift_unknownObjectRelease(v20);
    goto LABEL_16;
  }
  v56 = (void *)v54;
  v57 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode;
  v58 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode];
  ObjectType = swift_getObjectType(v58, v55);
  swift_unknownObjectRetain(v58);
  v60 = v56;
  LOBYTE(v56) = DOCNode.isEqualTo(node:)(v60, ObjectType);
  swift_unknownObjectRelease(v58);

  if ((v56 & 1) == 0)
  {
    v61 = *(_QWORD *)&v15[v57];
    *(_QWORD *)&v15[v57] = v60;
    v62 = v60;
    swift_unknownObjectRelease(v61);
  }
  sub_1000A940C();
  swift_unknownObjectRelease(v20);

}

uint64_t sub_100013678(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.AppIntents.unsafeMutableAddressor(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = swift_bridgeObjectRetain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v16 = 134217984;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v24 = a1;
      else
        v24 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v17 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a1);
    v26 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Change corpus content donated to Siri Vocabulary with %ld items", v16, 0xCu);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(a1);
  v19 = v2;
  v20 = static MainActor.shared.getter(v19);
  v21 = (_QWORD *)swift_allocObject(&unk_1005F2998, 48, 7);
  v21[2] = v20;
  v21[3] = &protocol witness table for MainActor;
  v21[4] = v19;
  v21[5] = a1;
  v22 = sub_100116348((uint64_t)v6, (uint64_t)&unk_100658E20, (uint64_t)v21);
  return swift_release(v22);
}

void sub_1000138D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  double v21;
  NSString v22;
  char *v23;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (!v1)
    return;
  v23 = v1;
  v2 = objc_msgSend(v23, "presentedViewController");

  v3 = v23;
  if (!v2)
  {
LABEL_15:
    v15 = objc_msgSend(v3, "currentLocationTitle");
    if (v15)
    {
      v13 = v15;
      goto LABEL_17;
    }
LABEL_20:
    v12 = 0;
    goto LABEL_21;
  }
  v4 = objc_msgSend(v23, "presentedViewController");
  v5 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
  v3 = v23;
  v6 = *(void **)&v23[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  if (!v4)
  {
    if (!v6)
    {
      v14 = 0;
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  if (!v6)
  {

    v3 = v23;
    goto LABEL_15;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v7 = v6;
  v8 = v4;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  v3 = v23;
  if ((v9 & 1) == 0)
    goto LABEL_15;
  v10 = *(void **)&v23[v5];
  if (!v10)
    goto LABEL_20;
  v11 = objc_msgSend(v10, "currentPreviewItem");
  v12 = v11;
  if (!v11)
    goto LABEL_21;
  if ((objc_msgSend(v11, "respondsToSelector:", "previewItemTitle") & 1) == 0)
  {
    swift_unknownObjectRelease(v12);
    goto LABEL_20;
  }
  v13 = objc_msgSend(v12, "previewItemTitle");
  swift_unknownObjectRelease(v12);
  if (!v13)
    goto LABEL_20;
LABEL_17:
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v12 = v16;

LABEL_21:
  v17 = objc_msgSend(v23, "viewIfLoaded");
  if (v17
    && (v18 = v17, v19 = objc_msgSend(v17, "window"), v18, v19)
    && (v20 = objc_msgSend(v19, "windowScene"), v19, v20))
  {
    if (v12)
    {
      v22 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v21 = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v20, "setTitle:", v22, v21);

  }
  else
  {

    swift_bridgeObjectRelease(v12);
  }
}

void sub_100013B5C(char a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint8_t *v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  objc_class *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  __n128 v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  void *v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  id v102;
  void *v103;
  void *v104;
  Class isa;
  id v106;
  char *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  objc_class *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  void (*v137)(char *, unint64_t, uint64_t, __n128);
  void *v138;
  objc_super v139;
  __int128 v140;
  uint64_t v141;
  char v142[12];
  objc_super v143;
  char v144[8];

  v3 = v2;
  v126 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v127 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v128 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v119 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v135 = (char *)&v114 - v11;
  v12 = sub_10006922C((uint64_t *)&unk_100642710);
  v13 = __chkstk_darwin(v12);
  v122 = (uint64_t)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v125 = (uint64_t)&v114 - v16;
  __chkstk_darwin(v15);
  v129 = (char *)&v114 - v17;
  v18 = type metadata accessor for Logger(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = objc_msgSend(v3, "viewIfLoaded");
  if (v22)
  {

    v24 = v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive] == 1;
    v130 = v8;
    if (v24)
      v23 = sub_10004CF0C();
    if ((a1 & 1) != 0)
      LODWORD(v137) = UIViewController.doc_shouldAllowAnimations.getter(v23);
    else
      LODWORD(v137) = 0;
    v25 = sub_1000A5B20(1);
    if ((_BYTE)v25)
    {
      v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] = (v25 != 2) | v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] & 1;
      return;
    }
    v26 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
    }
    else
    {
      v115 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount;
      *(_QWORD *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount] = v28;
      v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] = 0;
      v29 = Logger.UI.unsafeMutableAddressor(v25);
      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v29, v18);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.debug.getter();
      v33 = os_log_type_enabled(v31, v32);
      v131 = v7;
      if (v33)
      {
        v34 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v34 = 67109120;
        LODWORD(v140) = v137 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, (char *)&v140 + 4);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Sidebar: reloading diffable, animatingDifferences = %{BOOL}d", v34, 8u);
        v35 = v34;
        v7 = v131;
        swift_slowDealloc(v35, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      sub_10004CF0C();
      v36 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData];
      v37 = *(_QWORD *)(v36 + 24);
      v38 = *(_QWORD *)(v37 + 16);
      v136 = v3;
      v134 = v38;
      v116 = a2;
      if (v38)
      {
        *(_QWORD *)&v132 = v37 + 32;
        v124 = v37;
        swift_bridgeObjectRetain_n(v37, 2);
        v123 = v36;
        swift_retain();
        v133 = v36 + 32;
        swift_beginAccess(v36 + 32, v144, 0, 0);
        v39 = 0;
        do
        {
          v40 = (uint64_t *)(v132 + 16 * v39);
          v41 = *v40;
          v42 = v40[1];
          v43 = *(_QWORD *)v133;
          v44 = *(_QWORD *)(*(_QWORD *)v133 + 16);
          if (v44)
          {
            sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
            swift_bridgeObjectRetain_n(v43, 2);
            swift_unknownObjectRetain(v41);
            v45 = 32;
            while (1)
            {
              v46 = *(_QWORD *)(v43 + v45);
              v47 = *(_QWORD *)(v46 + 24);
              v48 = *(void **)(v41 + 24);
              swift_unknownObjectRetain(v46);
              v49 = v48;
              LOBYTE(v47) = static NSObject.== infix(_:_:)(v47, v49);

              if ((v47 & 1) != 0)
                break;
              swift_unknownObjectRelease(v46);
              v45 += 16;
              if (!--v44)
                goto LABEL_23;
            }
            swift_unknownObjectRelease(v46);
LABEL_23:
            swift_bridgeObjectRelease_n(v43, 2);
            v3 = v136;
          }
          else
          {
            swift_unknownObjectRetain(v41);
          }
          ++v39;
          sub_100493C0C(v41, v42, (uint64_t)v3, v137 & 1);
          swift_unknownObjectRelease(v41);
        }
        while (v39 != v134);
        swift_release(v123);
        swift_bridgeObjectRelease_n(v124, 2);
        v7 = v131;
      }
      v50 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
      v143.receiver = v3;
      v143.super_class = v50;
      v118 = v50;
      v51 = objc_msgSendSuper2(&v143, "collectionView");
      if (!v51)
        goto LABEL_69;
      v52 = v51;
      v117 = type metadata accessor for DOCSidebarCollectionView();
      v53 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v52, v117, 0, 0, 0), "indexPathsForVisibleItems");

      v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v53, v7);
      v55 = *(_QWORD *)(v54 + 16);
      v56 = v126;
      v114 = v54;
      if (v55)
      {
        v57 = v130;
        v58 = v54 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
        v59 = (uint64_t)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
        swift_bridgeObjectRetain(v54);
        v134 = v59;
        v60 = swift_beginAccess(v59, v142, 0, 0);
        v133 = *(_QWORD *)(v57 + 72);
        v137 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v57 + 16);
        v121 = (char *)&type metadata for Any + 8;
        v61 = (uint64_t)v135;
        v62 = v129;
        v137(v129, v58, v7, v60);
        while (1)
        {
          v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
          v65(v62, 0, 1, v7);
          v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
          if (v66(v62, 1, v7) == 1)
            goto LABEL_61;
          v67 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 32);
          v67(v61, v62, v7);
          sub_1000271D4(v134, (uint64_t)&v140, &qword_100642730);
          if (v141)
          {
            v68 = sub_10006922C((uint64_t *)&unk_1006455F0);
            v69 = swift_dynamicCast(&v138, &v140, v121, v68, 6);
            v70 = v128;
            if ((v69 & 1) != 0)
            {
              v71 = v138;
              goto LABEL_42;
            }
          }
          else
          {
            sub_10000CB4C((uint64_t)&v140, &qword_100642730);
            v70 = v128;
          }
          if (qword_1006411E8 != -1)
            swift_once(&qword_1006411E8, sub_1000A3F70);
          v69 = (uint64_t)(id)qword_100657778;
          v71 = (void *)v69;
LABEL_42:
          dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v69);

          v73 = IndexPath.section.getter(v72);
          v74 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v56);
          v75 = v74;
          if ((v73 & 0x8000000000000000) != 0 || v73 >= *(_QWORD *)(v74 + 16))
          {
            v87 = swift_bridgeObjectRelease(v74);
          }
          else
          {
            v132 = *(_OWORD *)(v74 + 16 * v73 + 32);
            v76 = v132;
            swift_unknownObjectRetain(v132);
            swift_bridgeObjectRelease(v75);
            v140 = v132;
            v77 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(&v140, v56);
            v78 = IndexPath.item.getter(v77);
            if ((v78 & 0x8000000000000000) == 0 && v78 < *(_QWORD *)(v77 + 16))
            {
              v79 = v77 + 48 * v78;
              v124 = *(_QWORD *)(v79 + 32);
              v81 = *(void **)(v79 + 48);
              *(_QWORD *)&v132 = *(_QWORD *)(v79 + 56);
              v80 = v132;
              v123 = *(_QWORD *)(v79 + 64);
              v82 = *(unsigned __int8 *)(v79 + 72);
              swift_unknownObjectRetain(v124);
              v83 = v80;
              v84 = v123;
              sub_1000B1650(v81, v83, v123, v82);
              swift_unknownObjectRelease(v76);
              v85 = swift_bridgeObjectRelease(v77);
              v56 = v126;
              (*(void (**)(char *, uint64_t, __n128))(v127 + 8))(v128, v126, v85);
              swift_unknownObjectRelease(v124);
              v86 = v81;
              v3 = v136;
              sub_1000B1664(v86, v132, v84, v82);
              v61 = (uint64_t)v135;
              if (v82 == 255)
                goto LABEL_32;
              goto LABEL_51;
            }
            swift_unknownObjectRelease(v76);
            v87 = swift_bridgeObjectRelease(v77);
            v56 = v126;
          }
          (*(void (**)(char *, uint64_t, __n128))(v127 + 8))(v70, v56, v87);
          v61 = (uint64_t)v135;
LABEL_51:
          v88 = sub_1003E1420(v61, 0);
          if (v88)
          {
            v90 = v88;
            v120 = v89;
            v91 = sub_1003E1E24(v61, 1);
            if ((_BYTE)v94 == 0xFF)
              goto LABEL_31;
            v95 = v94;
            v123 = v93;
            v124 = v92;
            *(_QWORD *)&v132 = v91;
            v96 = v125;
            v97 = v61;
            v98 = v131;
            ((void (*)(uint64_t, uint64_t, uint64_t))v137)(v125, v97, v131);
            v65((char *)v96, 0, 1, v98);
            v99 = v96;
            v100 = v122;
            sub_1000271D4(v99, v122, (uint64_t *)&unk_100642710);
            if (v66((char *)v100, 1, v98) == 1)
            {
              sub_10000CB4C(v100, (uint64_t *)&unk_100642710);
              v61 = (uint64_t)v135;
            }
            else
            {
              v101 = v119;
              v67((uint64_t)v119, (char *)v100, v98);
              v139.receiver = v136;
              v139.super_class = v118;
              v102 = objc_msgSendSuper2(&v139, "collectionView", v114);
              if (!v102)
                goto LABEL_68;
              v103 = v102;
              v104 = (void *)swift_dynamicCastClassUnconditional(v102, v117, 0, 0, 0);
              isa = IndexPath._bridgeToObjectiveC()().super.isa;
              v106 = objc_msgSend(v104, "cellForItemAtIndexPath:", isa);
              v107 = v101;
              v108 = v106;

              (*(void (**)(char *, uint64_t))(v130 + 8))(v107, v98);
              v61 = (uint64_t)v135;
              if (v108)
              {
                v109 = type metadata accessor for DOCSidebarItemCell(0);
                v110 = swift_dynamicCastClass(v108, v109);
                if (v110)
                {
                  v111 = (_QWORD *)v110;
                  sub_10000CB4C(v125, (uint64_t *)&unk_100642710);
                  sub_10048FD74(v111, (char *)v132, v124, v123, v95, v90);

LABEL_30:
                  sub_1000B1664((void *)v132, v124, v123, v95);
                  v56 = v126;
LABEL_31:
                  v63 = swift_unknownObjectRelease(v90);
                  v3 = v136;
                  goto LABEL_32;
                }

              }
            }
            sub_10000CB4C(v125, (uint64_t *)&unk_100642710);
            goto LABEL_30;
          }
LABEL_32:
          v57 = v130;
          v7 = v131;
          (*(void (**)(uint64_t, uint64_t, __n128))(v130 + 8))(v61, v131, v63);
          v58 += v133;
          --v55;
          v62 = v129;
          if (!v55)
            goto LABEL_60;
          v137(v129, v58, v7, v64);
        }
      }
      v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56);
      swift_bridgeObjectRetain(v54);
      v62 = v129;
LABEL_60:
      v65(v62, 1, 1, v7);
LABEL_61:
      swift_bridgeObjectRelease_n(v114, 2);
      sub_100020920();
      if ((v116 & 1) != 0)
        sub_1000A3FE8(0, 0);
      v112 = *(_QWORD *)&v3[v115];
      v27 = __OFSUB__(v112, 1);
      v113 = v112 - 1;
      if (!v27)
      {
        *(_QWORD *)&v3[v115] = v113;
        return;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
  }
}

id sub_100014720()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
    sub_100078678(v4);

    swift_unknownObjectRelease(v4);
  }
  return objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setThumbnail:", 0);
}

void sub_1000147A4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id *v7;
  id WeakRetained;
  void *v9;
  NSObject *v10;
  _QWORD block[4];
  id v12;
  id v13;
  id v14;

  v5 = a2;
  v6 = a3;
  v7 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v9 = WeakRetained;
  if (WeakRetained)
  {
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sourceObserverQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10007EA70;
    block[3] = &unk_1005BED28;
    objc_copyWeak(&v14, v7);
    v12 = v5;
    v13 = v6;
    dispatch_async(v10, block);

    objc_destroyWeak(&v14);
  }

}

uint64_t sub_100014894(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v24 = v5;
    v13 = swift_bridgeObjectRetain(a1);
    v14 = (void *)static OS_dispatch_queue.main.getter(v13);
    v15 = swift_allocObject(&unk_1005ECB90, 32, 7);
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = v2;
    aBlock[4] = sub_100092A60;
    v26 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005ECBA8;
    v16 = _Block_copy(aBlock);
    v17 = v26;
    v18 = v2;
    v19 = swift_release(v17);
    static DispatchQoS.unspecified.getter(v19);
    aBlock[0] = _swiftEmptyArrayStorage;
    v20 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = sub_10006922C((uint64_t *)&unk_100647540);
    v22 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v4, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

uint64_t sub_100014AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  BOOL v14;
  __n128 v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  dispatch_group_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  dispatch_group_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char v66[40];
  _QWORD *v67;
  _QWORD aBlock[5];
  _QWORD *v69;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1005F10F8, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  swift_retain();
  DOCItemCollectionViewController.getCurrentLocation()();
  v12 = v11;
  v13 = objc_msgSend(v11, "node");

  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "supportsNavigationTitleMenus"))v14 = v13 == 0;
  else
    v14 = 1;
  if (v14)
  {
    sub_10000B808(v10);
    swift_release_n(v10, 2, v15);
    return swift_unknownObjectRelease(v13);
  }
  else
  {
    v62 = v9;
    v63 = v7;
    v64 = v6;
    v65 = v5;
    swift_unknownObjectRetain(v13);
    swift_release(v10);
    v18 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext;
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext);
    if (v19
      && (ObjectType = swift_getObjectType(*(_QWORD *)(v19+ OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node), v17), swift_retain(), v21 = DOCNode.isEqualTo(node:)(v13, ObjectType), swift_release(v19), (v21 & 1) != 0))
    {
      swift_release(v10);
      return swift_unknownObjectRelease_n(v13, 2);
    }
    else
    {
      v60 = v3;
      v61 = v2;
      v22 = _s16TitleMenuContextCMa(0);
      v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      v24 = swift_unknownObjectRetain(v13);
      UUID.init()(v24);
      v25 = v23
          + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration;
      v26 = _s23FolderMenuConfigurationVMa(0);
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
      v27(v25, 1, 1, v26);
      v27(v23 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, 1, 1, v26);
      *(_QWORD *)(v23 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node) = v13;
      v28 = *(_QWORD *)(v1 + v18);
      *(_QWORD *)(v1 + v18) = v23;
      swift_retain();
      swift_release(v28);
      v29 = dispatch_group_create();
      sub_100095AA8();
      if (v30)
      {
        v32 = v30;
        v33 = v31;
        v34 = v29;
        v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext;
        if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext))
        {
          v36 = sub_1004A3464();
          v37 = *(_QWORD *)(v1 + v35);
          *(_QWORD *)(v1 + v35) = v36;
          swift_retain();
          sub_100099A18(v37);
          swift_release(v37);
          swift_release(v36);
        }
        v29 = v34;
        dispatch_group_enter(v34);
        v38 = sub_10006922C((uint64_t *)&unk_1006441A0);
        inited = swift_initStackObject(v38, v66);
        *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
        *(_QWORD *)(inited + 32) = v13;
        aBlock[0] = inited;
        specialized Array._endMutation()(inited);
        v40 = aBlock[0];
        v41 = swift_allocObject(&unk_1005F10F8, 24, 7);
        swift_unknownObjectWeakInit(v41 + 16);
        swift_unknownObjectRetain(v13);
        swift_retain();
        v42 = v34;
        sub_10008BA00((uint64_t)v32, v33);
        sub_10035D520(v40, v42, v41, v23, v13, v32, v33);
        sub_100087534((uint64_t)v32, v33);
        swift_bridgeObjectRelease(v40);
        swift_release(v41);

        swift_release(v23);
        sub_100087534((uint64_t)v32, v33);
      }
      v43 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v59 = static OS_dispatch_queue.main.getter(v43);
      v44 = swift_allocObject(&unk_1005F10F8, 24, 7);
      swift_unknownObjectWeakInit(v44 + 16);
      v45 = (_QWORD *)swift_allocObject(&unk_1005F1120, 48, 7);
      v45[2] = v44;
      v45[3] = v23;
      v58 = v44;
      v45[4] = sub_1000961BC;
      v45[5] = v10;
      aBlock[4] = sub_1000961C4;
      v69 = v45;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005F1138;
      v46 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      v47 = v62;
      static DispatchQoS.unspecified.getter(v48);
      v67 = _swiftEmptyArrayStorage;
      v49 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v50 = sub_10006922C((uint64_t *)&unk_100647540);
      v51 = sub_1000791AC();
      v52 = v29;
      v53 = v65;
      v54 = v61;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v67, v50, v51, v61, v49);
      v55 = (void *)v59;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v47, v53, v59, v46);
      _Block_release(v46);
      swift_unknownObjectRelease_n(v13, 2);
      swift_release(v23);
      swift_release(v10);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v54);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v64);
      v56 = v69;
      swift_release(v58);
      return swift_release(v56);
    }
  }
}

uint64_t destroy for DOCIdentityHashableLocation(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return sub_100068588(v1);
}

uint64_t sub_100015074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;

  v1 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView);
  sub_10003181C();
  sub_1000AF900(v3, v4);
  sub_1000AFB50();
  v6 = v5;
  v7 = sub_1000159B4();
  objc_msgSend(v7, "setHidden:", v6 == 0);

  v8 = sub_1000159B4();
  objc_msgSend(v8, "setAttributedText:", v6);

  sub_1000415D4();
  v9 = *(_QWORD *)(v0 + v1);
  v10 = v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate, v11);
  if (result)
  {
    v14 = result;
    v15 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType(result, v13);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v15 + 8))((v2 != 0) ^ (v9 != 0), ObjectType, v15);
    return swift_unknownObjectRelease(v14);
  }
  return result;
}

id sub_1000155CC(void *a1)
{
  _BYTE *v1;
  char *v3;
  _BYTE *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  objc_class *v15;
  id v16;
  id v17;
  objc_super v19;
  objc_super v20;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_dropInteraction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_dragMonitorKVO] = 0;
  v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_autohideWhenPossibleDropTarget] = 0;
  v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_active] = 0;
  v3 = &v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_dimmable];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_dimmable]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_state] = 0;
  v1[OBJC_IVAR____TtC5Files24DOCContentDimmingOverlay_hasDropTargetRequiringAutohide] = 0;
  v4 = v1;
  v5 = objc_msgSend(a1, "dimmable");
  swift_unknownObjectWeakAssign(v3, v5);

  v6 = objc_msgSend(v5, "dimmingOverlayHostView");
  objc_msgSend(v6, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v15 = (objc_class *)type metadata accessor for DOCContentDimmingOverlay();
  v20.receiver = v4;
  v20.super_class = v15;
  v19.receiver = objc_msgSendSuper2(&v20, "initWithFrame:", v8, v10, v12, v14);
  v19.super_class = v15;
  v16 = v19.receiver;
  objc_msgSendSuper2(&v19, "setHidden:", 1);
  v17 = v16;
  objc_msgSend(v17, "setAutoresizingMask:", 18, v19.receiver, v19.super_class);
  swift_unknownObjectRelease(v5);

  swift_unknownObjectRelease(a1);
  return v17;
}

id sub_1000157B0()
{
  char *v0;
  uint64_t v1;
  id result;
  double v3;
  double v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGRect v19;

  objc_msgSend(v0, "loadViewIfNeeded");
  v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  result = *(id *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(result, "_effectiveContentInset");
  v4 = v3;
  result = objc_msgSend(v0, "loadViewIfNeeded");
  v5 = *(void **)&v0[v1];
  if (!v5)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  v6 = v5;
  objc_msgSend(v6, "_effectiveContentInset");
  v8 = -v7;
  v9 = objc_msgSend(v6, "collectionViewLayout");
  objc_msgSend(v9, "collectionViewContentSize");
  v11 = v10;

  objc_msgSend(v6, "bounds");
  v12 = v11 - CGRectGetHeight(v19);
  objc_msgSend(v6, "_effectiveContentInset");
  v14 = v13;

  if (v12 + v14 < v8)
    v15 = v8;
  else
    v15 = v12 + v14;
  objc_msgSend(v0, "loadViewIfNeeded");
  result = *(id *)&v0[v1];
  if (!result)
    goto LABEL_17;
  objc_msgSend(result, "contentOffset");
  v17 = v16;
  objc_msgSend(v0, "loadViewIfNeeded");
  result = *(id *)&v0[v1];
  if (v15 < v17)
  {
    if (result)
      return objc_msgSend(result, "setContentOffset:", 0.0, v15);
    __break(1u);
  }
  if (!result)
    goto LABEL_18;
  v15 = -v4;
  result = objc_msgSend(result, "contentOffset");
  if (v18 < -v4)
  {
    objc_msgSend(v0, "loadViewIfNeeded");
    result = *(id *)&v0[v1];
    if (result)
      return objc_msgSend(result, "setContentOffset:", 0.0, v15);
    goto LABEL_19;
  }
  return result;
}

void sub_100015958()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[200];

  if (!sub_10007BAFC())
  {
    sub_10005914C((uint64_t)v2);
    sub_100058CC0((uint64_t)v2);
    sub_10006E8BC();
    swift_bridgeObjectRelease(v0);
    sub_10006E6E0();
    sub_100076C48();
    swift_bridgeObjectRelease(v1);
    sub_10006DD34();
  }
}

id sub_1000159B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel);
  }
  else
  {
    v4 = sub_10000FB4C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t DOCItemCollectionViewController.title.getter()
{
  uint64_t v0;
  id *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  id v9;

  v1 = (id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 64);
  if (!v2)
    goto LABEL_10;
  v3 = objc_msgSend(v2, "displayName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  if (v4)
    v7 = 0;
  else
    v7 = v6 == 0xE000000000000000;
  if (v7)
  {
    v8 = 0xE000000000000000;
    goto LABEL_9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v8 = v6;
LABEL_9:
    swift_bridgeObjectRelease(v8);
LABEL_10:
    v9 = objc_msgSend(*v1, "displayName");
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

  }
  return v4;
}

void sub_100015B40()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  int v31;
  BOOL v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  BOOL v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t countAndFlagsBits;
  uint64_t v66;
  void *object;
  unint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  void *v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  char v101;
  NSString v102;
  void *v103;
  id v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  NSString v112;
  unint64_t v113;
  char v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  int v127;
  unint64_t v128;
  char v129;
  void *v130;
  void *v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unint64_t v135;
  char v136;
  uint64_t v137;
  void *v138;
  void *v139;
  uint64_t v140;
  int v141;
  id *v142;
  double v143;
  unsigned __int8 v144;
  uint64_t v145;
  id v146;
  void *v147;
  Swift::String v148;
  Swift::String_optional v149;
  Swift::String v150;
  Swift::String v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  unint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  id v174;
  void *v175;
  uint64_t v176;
  void *v177;
  void *v178;
  char v179;
  NSString v180;
  id v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  NSString v187;
  id v188;
  void *v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207[24];
  _BYTE v208[184];
  uint64_t v209[23];
  char v210[32];
  Swift::String v211;

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v210, 0, 0);
  v2 = *v1;
  if (!*v1)
    return;
  v3 = swift_allocObject(&unk_1005F09A0, 17, 7);
  *(_BYTE *)(v3 + 16) = 2;
  v4 = swift_allocObject(&unk_1005F09C8, 32, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = swift_allocObject(&unk_1005F09C8, 32, 7);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  v6 = swift_allocObject(&unk_1005F09C8, 32, 7);
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  v7 = swift_allocObject(&unk_1005F09C8, 32, 7);
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  v8 = swift_allocObject(&unk_1005F09C8, 32, 7);
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  v205 = v8;
  v9 = swift_allocObject(&unk_1005F09C8, 32, 7);
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  v199 = v9;
  sub_100070EDC((uint64_t)v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v208, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v208, (uint64_t)v209, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v209) == 1)
  {
    __break(1u);
    goto LABEL_227;
  }
  v10 = v209[4];
  v11 = v2;
  v202 = v5;
  v203 = v3;
  v198 = v4;
  v200 = v6;
  v201 = v7;
  v204 = (uint64_t)v11;
  if (v10 > 1)
  {
    if ((sub_10049A710(v3, (uint64_t)v11) & 1) != 0)
    {
      v12 = sub_10049AA60(v205, (uint64_t)v11, sub_10006E8BC);
      if (v12)
        v14 = 0;
      else
        v14 = v13 == 0xE000000000000000;
      if (v14)
      {
        v196 = 0xE000000000000000;
        swift_bridgeObjectRelease(0xE000000000000000);
        v17 = 0;
        goto LABEL_135;
      }
      v15 = v13;
      v196 = 0xE000000000000000;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, 0, 0xE000000000000000, 0);
      swift_bridgeObjectRelease(v15);
      if ((v16 & 1) != 0)
      {
        v17 = 0;
        goto LABEL_135;
      }
      v57 = v4;
      v58 = sub_10049AA60(v205, (uint64_t)v11, sub_10006E8BC);
      v60 = v59;
      v62 = sub_10049AAF0(v199);
      v63 = v61;
      if (v58 == v62 && v60 == v61)
      {
        swift_bridgeObjectRelease_n(v60, 2);
      }
      else
      {
        v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v60, v62, v61, 0);
        swift_bridgeObjectRelease(v60);
        swift_bridgeObjectRelease(v63);
        if ((v83 & 1) == 0)
        {
          v17 = sub_10049AA60(v205, (uint64_t)v11, sub_10006E8BC);
          v196 = v116;
          goto LABEL_134;
        }
      }
      v17 = 0;
      v196 = 0xE000000000000000;
LABEL_134:
      v4 = v57;
LABEL_135:
      v117 = sub_10049AA60(v4, (uint64_t)v11, (uint64_t (*)(void))sub_100076C48);
      v119 = v118;
      v120 = sub_10049A9CC(v7);
      v122 = v121;
      v123 = sub_10049A878(v6, (uint64_t)v11);
      v125 = v124;
      if (v117)
        v126 = 0;
      else
        v126 = v119 == 0xE000000000000000;
      v127 = v126;
      if (v126 || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v117, v119, 0) & 1) != 0)
      {
        if (!v120 && v122 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease(v125);
          swift_bridgeObjectRelease(v119);
          v128 = 0xE000000000000000;
LABEL_148:
          swift_bridgeObjectRelease(v128);
          countAndFlagsBits = sub_10049A878(v6, (uint64_t)v11);
          object = v130;
          v131 = (void *)v196;
LABEL_166:
          v140 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync;
          v141 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync];
          if (v141 == 2)
          {
            v142 = (id *)&v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
            *(_QWORD *)&v143 = swift_beginAccess(&v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v207, 0, 0).n128_u64[0];
            if (!*v142)
            {
              v11[v140] = 0;
              goto LABEL_174;
            }
            v144 = objc_msgSend(*v142, "isExcludedFromSync", v143);
            v11[v140] = v144;
            if ((v144 & 1) == 0)
            {
LABEL_174:
              v154 = sub_10049AA60(v205, (uint64_t)v11, sub_10006E8BC);
              v156 = v155;
              if (!v154 && v155 == 0xE000000000000000)
              {
                swift_bridgeObjectRelease(0xE000000000000000);
LABEL_182:
                if (v17 || v131 != (void *)0xE000000000000000)
                {
                  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v17, v131, 0, 0xE000000000000000, 0) & 1) != 0)
                  {
                    swift_bridgeObjectRelease(v131);
                    v152 = 0;
                    v153 = 0xE000000000000000;
                  }
                  else
                  {
                    v152 = countAndFlagsBits;
                    v153 = (unint64_t)object;
                    countAndFlagsBits = v17;
                    object = v131;
                  }
                  goto LABEL_201;
                }
                goto LABEL_195;
              }
              v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v154, v155, 0, 0xE000000000000000, 0);
              swift_bridgeObjectRelease(v156);
              if ((v157 & 1) != 0)
                goto LABEL_182;
              v158 = sub_10049AA60(v205, (uint64_t)v11, sub_10006E8BC);
              v160 = v159;
              v162 = sub_10049AAF0(v199);
              v163 = v161;
              if (v158 == v162 && v160 == v161)
              {
                swift_bridgeObjectRelease_n(v160, 2);
                goto LABEL_182;
              }
              v164 = _stringCompareWithSmolCheck(_:_:expecting:)(v158, v160, v162, v161, 0);
              swift_bridgeObjectRelease(v160);
              swift_bridgeObjectRelease(v163);
              if ((v164 & 1) != 0)
                goto LABEL_182;
              swift_bridgeObjectRelease(v131);
              v165 = sub_10049AA60(v205, (uint64_t)v11, sub_10006E8BC);
LABEL_200:
              v152 = countAndFlagsBits;
              v153 = (unint64_t)object;
              countAndFlagsBits = v165;
              object = v166;
              goto LABEL_201;
            }
          }
          else if ((v141 & 1) == 0)
          {
            goto LABEL_174;
          }
          swift_bridgeObjectRelease(v131);
          v146 = (id)_DocumentManagerBundle(v145);
          if (v146)
          {
            v147 = v146;
            v211._object = (void *)0x80000001005399E0;
            v148._countAndFlagsBits = 0x626967696C656E49;
            v148._object = (void *)0xEA0000000000656CLL;
            v149.value._countAndFlagsBits = 0x617A696C61636F4CLL;
            v149.value._object = (void *)0xEB00000000656C62;
            v150._countAndFlagsBits = 0;
            v150._object = (void *)0xE000000000000000;
            v211._countAndFlagsBits = 0xD000000000000061;
            v151 = NSLocalizedString(_:tableName:bundle:value:comment:)(v148, v149, (NSBundle)v147, v150, v211);

            v152 = countAndFlagsBits;
            v153 = (unint64_t)object;
            countAndFlagsBits = v151._countAndFlagsBits;
            object = v151._object;
LABEL_201:
            v94 = *(void **)(v206 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
            v174 = objc_msgSend(v94, "text");
            if (!v174)
              goto LABEL_207;
            v175 = v174;
            v176 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
            v178 = v177;

            if (countAndFlagsBits == v176 && object == v178)
            {
              swift_bridgeObjectRelease_n(object, 2);
              v100 = 0;
              goto LABEL_208;
            }
            v179 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v176, v178, 0);
            swift_bridgeObjectRelease(v178);
            if ((v179 & 1) != 0)
            {
              swift_bridgeObjectRelease(object);
              v100 = 0;
            }
            else
            {
LABEL_207:
              v180 = String._bridgeToObjectiveC()();
              objc_msgSend(v94, "setText:", v180, swift_bridgeObjectRelease(object).n128_f64[0]);

              v100 = 1;
            }
LABEL_208:
            v103 = *(void **)(v206 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
            v181 = objc_msgSend(v103, "text");
            v110 = v203;
            if (v181)
            {
              v182 = v181;
              v183 = static String._unconditionallyBridgeFromObjectiveC(_:)(v181);
              v185 = v184;

              if (v152 == v183 && v153 == v185)
              {
                swift_bridgeObjectRelease_n(v153, 2);
LABEL_215:
                v105 = (void *)v204;
                goto LABEL_216;
              }
              v186 = _stringCompareWithSmolCheck(_:_:expecting:)(v152, v153, v183, v185, 0);
              swift_bridgeObjectRelease(v185);
              if ((v186 & 1) != 0)
              {
                swift_bridgeObjectRelease(v153);
                goto LABEL_215;
              }
            }
            v187 = String._bridgeToObjectiveC()();
            objc_msgSend(v103, "setText:", v187, swift_bridgeObjectRelease(v153).n128_f64[0]);

            v100 = 1;
            goto LABEL_215;
          }
LABEL_227:
          __break(1u);
          return;
        }
        v129 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v120, v122, 0);
        swift_bridgeObjectRelease(v122);
        if ((v129 & 1) != 0)
        {
          swift_bridgeObjectRelease(v125);
          v128 = v119;
          goto LABEL_148;
        }
        if ((v127 & 1) != 0)
          goto LABEL_152;
      }
      else
      {
        swift_bridgeObjectRelease(v122);
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v117, v119, 0) & 1) == 0)
      {
        swift_bridgeObjectRelease(v125);
        v132 = v201;
        v131 = (void *)v196;
        goto LABEL_156;
      }
LABEL_152:
      v132 = v201;
      if (!v123 && v125 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease(v119);
        v133 = 0xE000000000000000;
LABEL_160:
        swift_bridgeObjectRelease(v133);
        v131 = (void *)v196;
        v137 = sub_10049A9CC(v201);
LABEL_165:
        countAndFlagsBits = v137;
        object = v138;
        goto LABEL_166;
      }
      v136 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v123, v125, 0);
      swift_bridgeObjectRelease(v125);
      if ((v136 & 1) != 0)
      {
        v133 = v119;
        goto LABEL_160;
      }
      v131 = (void *)v196;
      if (v127)
      {
        swift_bridgeObjectRelease(v196);
        v135 = 0xE000000000000000;
        goto LABEL_164;
      }
LABEL_156:
      v134 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v117, v119, 0);
      swift_bridgeObjectRelease(v119);
      if ((v134 & 1) == 0)
      {
        v137 = sub_10049AA60(v198, (uint64_t)v11, (uint64_t (*)(void))sub_100076C48);
        goto LABEL_165;
      }
      v135 = (unint64_t)v131;
LABEL_164:
      swift_bridgeObjectRelease(v135);
      v17 = sub_10049A9CC(v132);
      v131 = v139;
      v137 = sub_10049A878(v6, (uint64_t)v11);
      goto LABEL_165;
    }
    v34 = (uint64_t)v11;
    v35 = sub_10049AA60(v4, (uint64_t)v11, (uint64_t (*)(void))sub_100076C48);
    v37 = v36;
    v38 = sub_10049A9CC(v7);
    v40 = v39;
    v41 = sub_10049A878(v6, v34);
    v43 = v42;
    v44 = sub_10049AA60(v205, v34, sub_10006E8BC);
    v46 = v45;
    if (v35)
      v47 = 0;
    else
      v47 = v37 == 0xE000000000000000;
    v48 = v47;
    if (v47 || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v37, 0) & 1) != 0)
    {
      if ((!v38 && v40 == 0xE000000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v38, v40, 0) & 1) != 0)
        && (!v41 && v43 == 0xE000000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v41, v43, 0) & 1) != 0))
      {
        v197 = v35;
        v49 = v48;
        v50 = v41;
        v51 = sub_10049AAF0(v199);
        v53 = v52;
        if (v51 == v44 && v52 == v46)
        {
          swift_bridgeObjectRelease(v40);
          swift_bridgeObjectRelease(v37);
          v37 = v46;
LABEL_63:
          swift_bridgeObjectRelease(v46);
          swift_bridgeObjectRelease(v37);
          swift_bridgeObjectRelease(v43);
          countAndFlagsBits = 0;
          v66 = 0;
          object = (void *)0xE000000000000000;
          v68 = 0xE000000000000000;
          v69 = v204;
          goto LABEL_131;
        }
        v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v52, v44, v46, 0);
        swift_bridgeObjectRelease(v46);
        swift_bridgeObjectRelease(v53);
        v41 = v50;
        v48 = v49;
        v35 = v197;
        if ((v64 & 1) != 0)
        {
          v46 = v40;
          goto LABEL_63;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v46);
      }
      if ((v48 & 1) != 0)
        goto LABEL_66;
    }
    else
    {
      swift_bridgeObjectRelease(v46);
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v37, 0) & 1) == 0)
    {
LABEL_75:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v37, 0) & 1) == 0)
      {
        swift_bridgeObjectRelease(v40);
LABEL_91:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v37, 0) & 1) == 0)
        {
          swift_bridgeObjectRelease(v43);
          v80 = v201;
          goto LABEL_93;
        }
LABEL_124:
        if (!v41 && v43 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease(v37);
          v113 = 0xE000000000000000;
LABEL_129:
          swift_bridgeObjectRelease(v113);
          v69 = v204;
          v72 = sub_10049A9CC(v201);
          goto LABEL_130;
        }
        v114 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v41, v43, 0);
        swift_bridgeObjectRelease(v43);
        if ((v114 & 1) != 0)
        {
          v113 = v37;
          goto LABEL_129;
        }
        v80 = v201;
        if (v48)
        {
          swift_bridgeObjectRelease(0xE000000000000000);
          goto LABEL_190;
        }
LABEL_93:
        v81 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v37, 0);
        swift_bridgeObjectRelease(v37);
        if ((v81 & 1) == 0)
        {
          v70 = (uint64_t (*)(void))sub_100076C48;
          v71 = v198;
          goto LABEL_73;
        }
LABEL_190:
        v167 = v80;
        v69 = v204;
        v66 = sub_10049A9CC(v167);
        v68 = v168;
        countAndFlagsBits = sub_10049A878(v6, v204);
        object = v169;
        if (v66)
          goto LABEL_191;
        goto LABEL_131;
      }
LABEL_76:
      if (!v38 && v40 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease(v43);
        swift_bridgeObjectRelease(v37);
        v74 = 0xE000000000000000;
LABEL_97:
        swift_bridgeObjectRelease(v74);
        v69 = v204;
        v72 = sub_10049A878(v6, v204);
        goto LABEL_130;
      }
      v82 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v38, v40, 0);
      swift_bridgeObjectRelease(v40);
      if ((v82 & 1) != 0)
      {
        swift_bridgeObjectRelease(v43);
        v74 = v37;
        goto LABEL_97;
      }
      if ((v48 & 1) != 0)
        goto LABEL_124;
      goto LABEL_91;
    }
LABEL_66:
    if ((!v38 && v40 == 0xE000000000000000
       || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v38, v40, 0) & 1) != 0)
      && (!v41 && v43 == 0xE000000000000000
       || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v41, v43, 0) & 1) != 0))
    {
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v43);
      v70 = sub_10006E8BC;
      v71 = v205;
LABEL_73:
      v69 = v204;
      v72 = sub_10049AA60(v71, v204, v70);
LABEL_130:
      countAndFlagsBits = v72;
      object = v73;
      v66 = 0;
      v68 = 0xE000000000000000;
LABEL_131:
      if (v68 == 0xE000000000000000)
      {
        v115 = 0xE000000000000000;
LABEL_193:
        swift_bridgeObjectRelease(v115);
        v170 = sub_10049A7C4(v202, v203, v69);
        v172 = v171;
        if (!v170 && v171 == 0xE000000000000000)
        {
LABEL_195:
          v153 = 0xE000000000000000;
          swift_bridgeObjectRelease(0xE000000000000000);
LABEL_197:
          v152 = 0;
          goto LABEL_201;
        }
        v153 = 0xE000000000000000;
        v173 = _stringCompareWithSmolCheck(_:_:expecting:)(v170, v171, 0, 0xE000000000000000, 0);
        swift_bridgeObjectRelease(v172);
        if ((v173 & 1) != 0)
          goto LABEL_197;
        v165 = sub_10049A7C4(v202, v203, v204);
        goto LABEL_200;
      }
LABEL_191:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v66, v68, 0, 0xE000000000000000, 0) & 1) == 0)
      {
        v152 = countAndFlagsBits;
        v153 = (unint64_t)object;
        countAndFlagsBits = v66;
        object = (void *)v68;
        goto LABEL_201;
      }
      v115 = v68;
      goto LABEL_193;
    }
    if ((v48 & 1) != 0)
      goto LABEL_76;
    goto LABEL_75;
  }
  v18 = sub_10049AA60(v4, (uint64_t)v11, (uint64_t (*)(void))sub_100076C48);
  v20 = v19;
  v21 = sub_10049A9CC(v7);
  v23 = v22;
  v24 = sub_10049A7C4(v5, v3, (uint64_t)v11);
  v26 = v25;
  v27 = sub_10049A878(v6, (uint64_t)v11);
  v29 = v28;
  if (v18)
    v30 = 0;
  else
    v30 = v20 == 0xE000000000000000;
  v31 = v30;
  if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v18, v20, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease(v26);
LABEL_51:
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v18, v20, 0) & 1) == 0)
    {
LABEL_80:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v18, v20, 0) & 1) == 0)
      {
        swift_bridgeObjectRelease(v29);
        v76 = v201;
        v77 = v204;
        goto LABEL_85;
      }
LABEL_81:
      if (!v27 && v29 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v20);
        v75 = 0xE000000000000000;
LABEL_89:
        swift_bridgeObjectRelease(v75);
        v55 = sub_10049A9CC(v201);
        goto LABEL_108;
      }
      v79 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v27, v29, 0);
      swift_bridgeObjectRelease(v29);
      if ((v79 & 1) != 0)
      {
        swift_bridgeObjectRelease(v23);
        v75 = v20;
        goto LABEL_89;
      }
      v76 = v201;
      v77 = v204;
      if (v31)
      {
        swift_bridgeObjectRelease(0xE000000000000000);
        goto LABEL_102;
      }
LABEL_85:
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v18, v20, 0);
      swift_bridgeObjectRelease(v20);
      if ((v78 & 1) == 0)
      {
        swift_bridgeObjectRelease(v23);
        goto LABEL_107;
      }
LABEL_102:
      v84 = sub_10049A9CC(v76);
      v86 = v85;
      if (v84 == v21 && v85 == v23)
      {
        swift_bridgeObjectRelease_n(v23, 2);
LABEL_106:
        v88 = sub_10049A9CC(v76);
        v90 = v89;
        v91 = sub_10049A878(v200, v77);
        v93 = v92;
        goto LABEL_109;
      }
      v87 = _stringCompareWithSmolCheck(_:_:expecting:)(v84, v85, v21, v23, 0);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v86);
      if ((v87 & 1) != 0)
        goto LABEL_106;
LABEL_107:
      v55 = sub_10049AA60(v198, v77, (uint64_t (*)(void))sub_100076C48);
      goto LABEL_108;
    }
LABEL_52:
    if (!v21 && v23 == 0xE000000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v21, v23, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v23);
      v55 = sub_10049A7C4(v202, v203, v204);
      goto LABEL_108;
    }
    if ((v31 & 1) != 0)
      goto LABEL_81;
    goto LABEL_80;
  }
  if (v21)
    v32 = 0;
  else
    v32 = v23 == 0xE000000000000000;
  if (!v32 && (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v21, v23, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease(v26);
    goto LABEL_50;
  }
  if (v24 || v26 != 0xE000000000000000)
  {
    v54 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v24, v26, 0);
    swift_bridgeObjectRelease(v26);
    if ((v54 & 1) != 0)
    {
      swift_bridgeObjectRelease(v23);
      v33 = v20;
      goto LABEL_46;
    }
LABEL_50:
    if ((v31 & 1) != 0)
      goto LABEL_52;
    goto LABEL_51;
  }
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v20);
  v33 = 0xE000000000000000;
LABEL_46:
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v29);
  v55 = sub_10049A878(v200, v204);
LABEL_108:
  v88 = v55;
  v90 = v56;
  v91 = 0;
  v93 = 0xE000000000000000;
LABEL_109:
  v94 = *(void **)(v206 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
  v95 = objc_msgSend(v94, "text");
  if (!v95)
    goto LABEL_115;
  v96 = v95;
  v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
  v99 = v98;

  if (v88 != v97 || v90 != v99)
  {
    v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90, v97, v99, 0);
    swift_bridgeObjectRelease(v99);
    if ((v101 & 1) != 0)
    {
      swift_bridgeObjectRelease(v90);
      v100 = 0;
      goto LABEL_116;
    }
LABEL_115:
    v102 = String._bridgeToObjectiveC()();
    objc_msgSend(v94, "setText:", v102, swift_bridgeObjectRelease(v90).n128_f64[0]);

    v100 = 1;
    goto LABEL_116;
  }
  swift_bridgeObjectRelease_n(v90, 2);
  v100 = 0;
LABEL_116:
  v103 = *(void **)(v206 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
  v104 = objc_msgSend(v103, "text");
  v105 = (void *)v204;
  if (!v104)
    goto LABEL_122;
  v106 = v104;
  v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
  v109 = v108;

  if (v91 == v107 && v93 == v109)
  {
    swift_bridgeObjectRelease_n(v93, 2);
    v110 = v203;
    goto LABEL_216;
  }
  v111 = _stringCompareWithSmolCheck(_:_:expecting:)(v91, v93, v107, v109, 0);
  swift_bridgeObjectRelease(v109);
  if ((v111 & 1) != 0)
  {
    swift_bridgeObjectRelease(v93);
    v110 = v203;
  }
  else
  {
LABEL_122:
    v112 = String._bridgeToObjectiveC()();
    objc_msgSend(v103, "setText:", v112, swift_bridgeObjectRelease(v93).n128_f64[0]);

    v100 = 1;
    v110 = v203;
  }
LABEL_216:
  v188 = objc_msgSend(v103, "text");
  if (!v188)
    goto LABEL_220;
  v189 = v188;
  v190 = static String._unconditionallyBridgeFromObjectiveC(_:)(v188);
  v192 = v191;

  swift_bridgeObjectRelease(v192);
  v193 = HIBYTE(v192) & 0xF;
  if ((v192 & 0x2000000000000000) == 0)
    v193 = v190 & 0xFFFFFFFFFFFFLL;
  if (!v193)
  {
    v194 = 1;
    v195 = 2;
  }
  else
  {
LABEL_220:
    v194 = 2;
    v195 = 1;
  }
  objc_msgSend(v94, "setNumberOfLines:", v195);
  objc_msgSend(v103, "setNumberOfLines:", v194);
  if (v100)
    sub_10049BB48();
  swift_release(v205);
  swift_release(v199);

  swift_release(v110);
  swift_release(v198);
  swift_release(v202);
  swift_release(v200);
  swift_release(v201);
}

uint64_t sub_100016E90()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_100016EBC(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(uint64_t *__return_ptr, char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v4 = v3;
  v30 = a1;
  v31 = a2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v14 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v15 = *(_QWORD *)(v7 + 72);
    v26 = a3;
    v27 = v15;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    swift_bridgeObjectRetain(a3);
    v28 = v7;
    do
    {
      v29(v12, v14, v6);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v17(v12, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
      {
        a3 = v26;
        goto LABEL_14;
      }
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
      v30(&v33, v9);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_bridgeObjectRelease(v26);
        return swift_bridgeObjectRelease(v34);
      }
      v18 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
      v19 = v9;
      v20 = v18(v9, v6);
      v21 = v33;
      if (v33)
      {
        v32 = 0;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v23 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v22 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v23 >= v22 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
        specialized Array._endMutation()(v16);
        v4 = v32;
      }
      v14 += v27;
      --v13;
      v9 = v19;
      v7 = v28;
    }
    while (v13);
    a3 = v26;
    v17(v12, 1, 1, v6);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain(a3);
    v24(v12, 1, 1, v6);
  }
LABEL_14:
  swift_bridgeObjectRelease(a3);
  return v34;
}

uint64_t sub_100017118(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10006922C(a5);
    v12 = (char *)swift_allocObject(v11, 32 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 1;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 5);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  v17 = 32 * v9;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[v17])
      memmove(v15, v16, v17);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    swift_arrayInitWithCopy(v15);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

double sub_100017280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t Strong;
  double result;
  void *v19;
  Swift::String v20;
  void *object;
  Swift::String v22;
  Swift::String v23;
  void *v24;
  Swift::String v25;
  unint64_t v26;
  uint64_t v27;
  Swift::String v28;
  void *v29;
  Swift::String v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  void *v36;
  Swift::String v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  unint64_t v42;
  _BYTE v43[24];

  v16 = a1 + 16;
  swift_beginAccess(a1 + 16, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v16);
  if (Strong)
  {
    v19 = (void *)Strong;
    v39 = a8;
    v40[0] = 0;
    v40[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease(0xE000000000000000);
    v41 = 91;
    v42 = 0xE100000000000000;
    v20._countAndFlagsBits = static String._fromSubstring(_:)(a2, a3, a4, a5);
    object = v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(object);
    v22._countAndFlagsBits = 0xD000000000000017;
    v22._object = (void *)0x8000000100535AE0;
    String.append(_:)(v22);
    swift_beginAccess(a6 + 16, v40, 0, 0);
    v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v24 = v23._object;
    String.append(_:)(v23);
    swift_bridgeObjectRelease(v24);
    v25._object = (void *)0x8000000100535B00;
    v25._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v25);
    v26 = v42;
    sub_1000542B0(v41, v42);
    swift_bridgeObjectRelease(v26);
    __chkstk_darwin(v27);
    sub_100446978(a7, (void (*)(_BYTE *, _BYTE *))sub_100446F7C);
    v41 = 0;
    v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease(v42);
    v41 = 91;
    v42 = 0xE100000000000000;
    v28._countAndFlagsBits = static String._fromSubstring(_:)(a2, a3, a4, a5);
    v29 = v28._object;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v29);
    v30._countAndFlagsBits = 0xD000000000000022;
    v30._object = (void *)0x8000000100535B20;
    String.append(_:)(v30);
    v31 = v42;
    sub_1000542B0(v41, v42);
    swift_bridgeObjectRelease(v31);
    v32 = (_QWORD *)swift_allocObject(&unk_1005EC758, 72, 7);
    v32[2] = a9;
    v32[3] = v19;
    v32[4] = a2;
    v32[5] = a3;
    v32[6] = a4;
    v32[7] = a5;
    v32[8] = v39;
    v33 = swift_allocObject(&unk_1005EC780, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_1000A07B8;
    *(_QWORD *)(v33 + 24) = v32;
    swift_retain();
    v34 = v19;
    swift_bridgeObjectRetain(a5);
    swift_retain();
    swift_retain();
    sub_10001A27C(1, (uint64_t)sub_1000932F4, v33);
    swift_release(v32);
    swift_release(v33);
    v41 = 0;
    v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease(v42);
    v41 = 91;
    v42 = 0xE100000000000000;
    v35._countAndFlagsBits = static String._fromSubstring(_:)(a2, a3, a4, a5);
    v36 = v35._object;
    String.append(_:)(v35);
    swift_bridgeObjectRelease(v36);
    v37._countAndFlagsBits = 0xD000000000000014;
    v37._object = (void *)0x8000000100535B50;
    String.append(_:)(v37);
    v38 = v42;
    sub_1000542B0(v41, v42);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v38).n128_u64[0];
  }
  return result;
}

void sub_100017600(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  objc_class *v35;
  void *v36;
  id v37;
  objc_super v38;
  char v39[24];
  char v40[24];

  v3 = (char *)objc_msgSend(v1, "dataSource");
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v4 != 2)
    return;
  v5 = objc_msgSend(v1, "internalNavigationController");
  v37 = objc_msgSend(v5, "topViewController");

  if (!v37)
    return;
  v6 = type metadata accessor for DOCColumnViewController(0);
  v7 = (char *)swift_dynamicCastClass(v37, v6);
  if (!v7 || (v8 = v7, !objc_msgSend(v7, "isEditing")))
  {

    return;
  }
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&v8[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v40, 0, 0);
  v10 = *v9;
  v35 = (objc_class *)v6;
  v36 = a1;
  v34 = v9;
  if ((unint64_t)*v9 >> 62)
    goto LABEL_34;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v10, 2);
  if (!v11)
  {
LABEL_38:
    swift_bridgeObjectRelease_n(v10, 2);

    return;
  }
LABEL_7:
  v12 = 4;
  v13 = 0;
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_8:
    v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v10);
    goto LABEL_10;
  }
  while (1)
  {
    v14 = (char *)*(id *)(v10 + 8 * v12);
LABEL_10:
    v15 = v14;
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_34:
      if (v10 < 0)
        v32 = v10;
      else
        v32 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v10, 2);
      v11 = _CocoaArrayWrapper.endIndex.getter(v32);
      if (!v11)
        goto LABEL_38;
      goto LABEL_7;
    }
    v17 = &v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v39, 0, 0);
    v18 = *(void **)v17;
    if (*(_QWORD *)v17)
    {
      v19 = type metadata accessor for DOCItemCollectionViewController(0);
      v20 = (void *)swift_dynamicCastClass(v18, v19);
      if (v20)
      {
        if ((objc_msgSend(v20, "isEditing") & 1) != 0)
          break;
      }
    }

    if (v16 == v11)
      goto LABEL_38;
    v13 = ++v12 - 4;
    if ((v10 & 0xC000000000000001) != 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease_n(v10, 2);
  v21 = *(void **)v17;
  if (!*(_QWORD *)v17 || (v22 = swift_dynamicCastClass(*(_QWORD *)v17, v19)) == 0)
  {

    return;
  }
  if (v36)
  {
    v23 = v22;
    v24 = v21;
    v25 = v36;
    LOBYTE(v23) = static NSObject.== infix(_:_:)(v23, v25);

    if ((v23 & 1) != 0)
    {

      return;
    }
  }
  else
  {
    v26 = v21;
  }
  v38.receiver = v8;
  v38.super_class = v35;
  objc_msgSendSuper2(&v38, "setEditing:animated:", 0, 0);
  v27 = *v34;
  if ((unint64_t)*v34 >> 62)
  {
    if (v27 < 0)
      v33 = *v34;
    else
      v33 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v34);
    v28 = _CocoaArrayWrapper.endIndex.getter(v33);
    if (!v28)
      goto LABEL_44;
LABEL_27:
    v29 = v28 - 1;
    if (__OFSUB__(v28, 1))
    {
      __break(1u);
    }
    else if ((v27 & 0xC000000000000001) == 0)
    {
      if ((v29 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v29 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v30 = *(id *)(v27 + 8 * v29 + 32);
LABEL_32:
        v31 = v30;
        objc_msgSend(v30, "setEditing:animated:", 0, 0, swift_bridgeObjectRelease(v27).n128_f64[0]);

        return;
      }
      __break(1u);
      return;
    }
    v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
    goto LABEL_32;
  }
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v34);
  if (v28)
    goto LABEL_27;
LABEL_44:

  swift_bridgeObjectRelease(v27);
}

void sub_1000179D0(uint64_t a1)
{
  id *v2;
  void *v3;
  char v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  __int128 v24;
  double v25;
  double v26;
  double v27;
  double v28;
  _OWORD v29[12];
  uint64_t v30;
  _BYTE v31[200];
  _BYTE v32[200];
  uint64_t v33[25];
  _BYTE v34[32];
  uint64_t v35;
  _QWORD v36[23];
  uint64_t v37[2];
  id v38;
  id v39;
  double v40;
  double v41;
  double v42;
  _BYTE v43[24];
  _BYTE v44[200];
  _OWORD v45[3];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v2 = (id *)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v43, 0, 0);
  if (*v2)
  {
    sub_100070EDC((uint64_t)*v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v36, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v36, (uint64_t)v37, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v37) != 1)
    {
      v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
      sub_100070EDC((uint64_t)v36, (uint64_t)v34, (uint64_t *)&unk_100641300);
      if (v35 < 1)
        v4 = 1;
      else
        v4 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
      v5 = v38;
      v6 = v38;
      sub_1000716DC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
      v44[0] = 0;
      sub_10049DF9C(v3, v4, v5, 1061158912);

      v7 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
      if (!*v2)
        goto LABEL_10;
      sub_100070EDC((uint64_t)*v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v33, (uint64_t *)&unk_100641300);
      sub_100070EDC((uint64_t)v33, (uint64_t)v44, (uint64_t *)&unk_100641300);
      if (sub_1000A849C((uint64_t *)v44) == 1)
      {
        __break(1u);
        return;
      }
      if (*(uint64_t *)&v44[32] >= 2)
        v8 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
      else
LABEL_10:
        v8 = 1;
      v9 = v39;
      v10 = v39;
      v44[0] = 1;
      sub_10049DF9C(v7, v8, v9, 0x100000000);

      v11 = v41;
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint), "setConstant:", v40);
      v12 = v42;
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint), "setConstant:", v42);
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint), "setConstant:", v12);
      if (v12 + -1.0 < 0.0)
        v13 = 0.0;
      else
        v13 = v12 + -1.0;
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint), "setConstant:", v13);
      v14 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint);
      if (v14)
        objc_msgSend(v14, "setConstant:", -v13);
      sub_100015B40();
      if (*v2)
      {
        v15 = *(char **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
        v16 = *v2;
        sub_10005914C((uint64_t)v44);
        v29[10] = *(_OWORD *)&v44[160];
        v29[11] = *(_OWORD *)&v44[176];
        v30 = *(_QWORD *)&v44[192];
        v29[6] = *(_OWORD *)&v44[96];
        v29[7] = *(_OWORD *)&v44[112];
        v29[8] = *(_OWORD *)&v44[128];
        v29[9] = *(_OWORD *)&v44[144];
        v29[2] = *(_OWORD *)&v44[32];
        v29[3] = *(_OWORD *)&v44[48];
        v29[4] = *(_OWORD *)&v44[64];
        v29[5] = *(_OWORD *)&v44[80];
        v29[0] = *(_OWORD *)v44;
        v29[1] = *(_OWORD *)&v44[16];
        DOCSplitBrowserViewController.didCommitPreview(of:)(v29);
        v17 = *(void **)&v15[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
        v18 = (uint64_t)v17
            + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
        sub_100070EDC((uint64_t)v17+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v31, (uint64_t *)&unk_100641310);
        sub_100070EDC((uint64_t)v29, v18, (uint64_t *)&unk_100641310);
        sub_1000B2740((uint64_t)v44);
        sub_1000B2740((uint64_t)v44);
        sub_1001BF860((uint64_t)v31);
        objc_msgSend(v17, "setNeedsDisplay");
        sub_100058CC0((uint64_t)v44);
        sub_100070EDC(v18, (uint64_t)v32, (uint64_t *)&unk_100641310);
        sub_100070EDC((uint64_t)v32, (uint64_t)v33, (uint64_t *)&unk_100641310);
        if (sub_1000A849C(v33) != 1)
          objc_msgSend(v15, "setFont:", v33[0]);
        v51 = *(_OWORD *)&v44[136];
        v52 = *(_OWORD *)&v44[152];
        v53 = *(_OWORD *)&v44[168];
        v54 = *(_OWORD *)&v44[184];
        v47 = *(_OWORD *)&v44[72];
        v48 = *(_OWORD *)&v44[88];
        v49 = *(_OWORD *)&v44[104];
        v50 = *(_OWORD *)&v44[120];
        v45[0] = *(_OWORD *)&v44[8];
        v45[1] = *(_OWORD *)&v44[24];
        v45[2] = *(_OWORD *)&v44[40];
        v46 = *(_OWORD *)&v44[56];
        sub_1000B2454((uint64_t)v45);
        objc_msgSend(v15, "bounds");
        v20 = v19;
        v22 = v21;
        v23 = objc_msgSend(v15, "contentScaleFactor");
        v24 = v46;
        v26 = UIPointRoundToScale(v23, (v20 - *(double *)&v46) * 0.5, (v22 - *((double *)&v46 + 1)) * 0.5, v25);
        v28 = v27;
        sub_1000B2398(v45);
        objc_msgSend(v17, "setFrame:", v26, v28, v24);
        objc_msgSend(v15, "invalidateIntrinsicContentSize");
        sub_100058CC0((uint64_t)v44);
        sub_10049BB48();

      }
      if (*(double *)(a1
                     + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant) != v11 / 3.0)
      {
        *(double *)(a1
                  + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant) = v11 / 3.0;
        objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder), "setConstant:");
      }
      sub_1000A2CC8();
      sub_1000A290C();
      sub_1000716DC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
    }
  }
}

_QWORD *sub_100017EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void **v20;
  void **v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v33 = a1;
    else
      v33 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(a1);
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!((unint64_t)a2 >> 62))
    {
LABEL_3:
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (a2 < 0)
    v34 = a2;
  else
    v34 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(a2);
LABEL_4:
  v6 = DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v4 == v5, sub_1001ED0EC, 0, 0, 0);
  result = _swiftEmptyArrayStorage;
  if ((v6 & 1) == 0)
    return result;
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v4)
  {
    if ((a2 & 0xC000000000000001) != 0 || (unint64_t)(v4 - 1) < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      if (((a2 | a1) & 0xC000000000000001) != 0)
      {
        v8 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
          else
            v9 = *(id *)(a1 + 8 * v8 + 32);
          v10 = v9;
          if ((a2 & 0xC000000000000001) != 0)
            v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a2);
          else
            v11 = *(id *)(a2 + 8 * v8 + 32);
          v12 = v11;
          v13 = type metadata accessor for LocationPairedViewController();
          v14 = swift_allocObject(v13, 32, 7);
          *(_QWORD *)(v14 + 16) = v10;
          *(_QWORD *)(v14 + 24) = v12;
          v15 = v10;
          v16 = v12;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v18 >= v17 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
          ++v8;
          v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v14);
          specialized Array._endMutation()(v19);

        }
        while (v4 != v8);
      }
      else
      {
        v20 = (void **)(a1 + 32);
        v21 = (void **)(a2 + 32);
        v22 = type metadata accessor for LocationPairedViewController();
        do
        {
          v23 = *v20;
          v24 = *v21;
          v25 = swift_allocObject(v22, 32, 7);
          *(_QWORD *)(v25 + 16) = v23;
          *(_QWORD *)(v25 + 24) = v24;
          v26 = v23;
          v27 = v24;
          v28 = v26;
          v29 = v27;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
          v31 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v31 >= v30 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
          v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v25);
          specialized Array._endMutation()(v32);

          ++v21;
          ++v20;
          --v4;
        }
        while (v4);
      }
      return _swiftEmptyArrayStorage;
    }
LABEL_36:
    __break(1u);
    return result;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000181CC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char v72[8];
  uint64_t v73;
  uint64_t v74;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v64 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v64 - v15;
  if (qword_100640D68 != -1)
    v14 = swift_once(&qword_100640D68, sub_1000857C4);
  if ((byte_100672688 & 1) != 0)
  {
    v17 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
    v18 = objc_msgSend(v17, "interfaceStateForConfiguration:", a1);

    v19 = sub_1001445A4(a2, a1);
    v21 = v20;
    v69 = v18;
    v66 = v19;
    v22 = sub_10013FBB0(v18, v19, v20);
    v23 = (uint64_t)v22;
    if ((v24 & 1) != 0)
    {
      v70 = a3;
      v32 = Logger.StateStore.unsafeMutableAddressor(v22);
      v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v32, v6);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc(22, -1);
        v67 = (uint64_t)a2;
        v37 = v36;
        v38 = swift_slowAlloc(64, -1);
        v73 = v38;
        *(_DWORD *)v37 = 136315394;
        v68 = v6;
        v71 = sub_1000544FC(0xD000000000000044, 0x8000000100510DF0, &v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
        *(_WORD *)(v37 + 12) = 2080;
        v71 = v23;
        v72[0] = 1;
        v39 = sub_10006922C(&qword_1006444D0);
        v40 = String.init<A>(describing:)(&v71, v39);
        v42 = v41;
        v71 = sub_1000544FC(v40, v41, &v73);
        v6 = v68;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
        swift_bridgeObjectRelease(v42);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s fetched value: %s could not be converted to DOCDisplayMode", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy(v38, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        v43 = v37;
        a2 = (void *)v67;
        swift_slowDealloc(v43, -1, -1);
      }

      v22 = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v25 = v70;
    }
    else
    {
      v25 = (uint64_t)v22;
    }
    v44 = Logger.StateStore.unsafeMutableAddressor(v22);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v44, v6);
    v45 = (uint64_t)a2;
    v46 = a2;
    v47 = swift_bridgeObjectRetain(v21);
    v48 = Logger.logObject.getter(v47);
    v49 = v6;
    v50 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v50))
    {
      v51 = swift_slowAlloc(42, -1);
      v70 = v25;
      v52 = v51;
      v65 = swift_slowAlloc(128, -1);
      v71 = v65;
      *(_DWORD *)v52 = 136315906;
      v68 = v49;
      v73 = sub_1000544FC(0xD000000000000044, 0x8000000100510DF0, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
      *(_WORD *)(v52 + 12) = 2080;
      v73 = v70;
      v67 = v45;
      v53 = String.init<A>(describing:)(&v73, &type metadata for DOCDisplayMode);
      v55 = v54;
      v73 = sub_1000544FC(v53, v54, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
      swift_bridgeObjectRelease(v55);
      *(_WORD *)(v52 + 22) = 2080;
      swift_bridgeObjectRetain(v21);
      v73 = sub_1000544FC(v66, v21, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
      swift_bridgeObjectRelease_n(v21, 3);
      *(_WORD *)(v52 + 32) = 2080;
      v73 = v67;
      v56 = v46;
      v57 = sub_10006922C((uint64_t *)&unk_10064D870);
      v58 = String.init<A>(describing:)(&v73, v57);
      v60 = v59;
      v73 = sub_1000544FC(v58, v59, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);

      swift_bridgeObjectRelease(v60);
      _os_log_impl((void *)&_mh_execute_header, v48, v50, "%s fetched: %s for state identifier: %s derived from sourceIdentifier: %s", (uint8_t *)v52, 0x2Au);
      v61 = v65;
      swift_arrayDestroy(v65, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      v62 = v52;
      v25 = v70;
      swift_slowDealloc(v62, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v68);
    }
    else
    {

      swift_bridgeObjectRelease_n(v21, 2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v49);
    }
  }
  else
  {
    v25 = qword_100672680;
    v26 = Logger.StateStore.unsafeMutableAddressor(v14);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v26, v6);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc(22, -1);
      v31 = swift_slowAlloc(32, -1);
      v71 = v31;
      *(_DWORD *)v30 = 136315394;
      v73 = sub_1000544FC(0xD000000000000044, 0x8000000100510DF0, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
      *(_WORD *)(v30 + 12) = 2048;
      v73 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s overriding stored value for PPT test with value: %ld", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  }
  return v25;
}

void sub_1000188A4(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  char **v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Logger.Enumeration.unsafeMutableAddressor(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  v11 = v2;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v30 = a2;
    v31 = v5;
    v14 = swift_slowAlloc(32, -1);
    v28 = (char **)swift_slowAlloc(8, -1);
    v29 = swift_slowAlloc(64, -1);
    v33 = v29;
    *(_DWORD *)v14 = 136446722;
    v15 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v15)
    {

      __break(1u);
      return;
    }
    v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v32 = sub_1000544FC(v16, v15, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v14 + 12) = 2082;
    v32 = sub_1000544FC(a1, v30, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    *(_WORD *)(v14 + 22) = 2112;
    v32 = (uint64_t)v11;
    v17 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    v18 = v28;
    *v28 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v14, 0x20u);
    v19 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v18, 1, v19);
    swift_slowDealloc(v18, -1, -1);
    v20 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  v22 = &v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate], v21);
  if (Strong)
  {
    v25 = Strong;
    v26 = *((_QWORD *)v22 + 1);
    ObjectType = swift_getObjectType(Strong, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v11, ObjectType, v26);
    swift_unknownObjectRelease(v25);
  }
}

uint64_t sub_100018CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_100018D08(char a1)
{
  void *v1;
  void *v2;
  id v4;
  BOOL v5;
  _UNKNOWN **v6;
  char *v7;
  void *v8;
  id *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  id *v17;
  char *v18;
  uint64_t v19;
  int v20;
  char *v21;
  uint64_t v22;
  char v23;
  double v24;
  id *v25;
  char *v26;
  void *v27;
  void **v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  _BYTE v37[24];

  v2 = v1;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = sub_10007B5C0(1);

  if (!v5)
    return;
  v6 = sub_10000D9D0();
  v7 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
  if (v7)
  {
    v8 = v7;
    v9 = (id *)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], &v36, 0, 0);
    v10 = *v9;
    if (!v10)
    {

      goto LABEL_9;
    }
    v11 = type metadata accessor for DOCItemCollectionViewController(0);
    v12 = swift_dynamicCastClass(v10, v11);
    if (v12)
    {
      v13 = v12;
      v14 = v10;

      v10 = *(id *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
      goto LABEL_9;
    }

  }
  v10 = 0;
LABEL_9:
  v15 = (char *)objc_msgSend(v2, "dataSource");
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v16 == 2 && (sub_1000DFDCC(2, (uint64_t)v6) & 1) == 0)
  {
    if (v10)
      v17 = (id *)objc_msgSend(v10, "identifier");
    else
      v17 = 0;
    DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)((uint64_t *)1, 0, v17);

  }
  v18 = (char *)objc_msgSend(v2, "displayModeHandler");
  v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
  v20 = v18[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode + 8];

  if (v20 == 1
    || (v21 = (char *)objc_msgSend(v2, "dataSource"),
        v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle],
        v21,
        v22 == 2)
    || v19 != 2)
  {
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  else
  {
    v23 = sub_1000DFDCC(2, (uint64_t)v6);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v6).n128_u64[0];
    if ((v23 & 1) != 0)
    {
      if (v10)
        v25 = (id *)objc_msgSend(v10, "identifier", v24);
      else
        v25 = 0;
      sub_100138A9C((uint64_t *)2, v25);

    }
  }
  v26 = (char *)objc_msgSend(v2, "effectiveBrowserViewController", v24);
  if (v26)
  {
    v27 = v26;
    v28 = (void **)&v26[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v26[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v37, 0, 0);
    v29 = *v28;
    if (*v28
      && (v30 = type metadata accessor for DOCItemCollectionViewController(0),
          (v31 = swift_dynamicCastClass(v29, v30)) != 0))
    {
      v32 = (_BYTE *)v31;
      v33 = v29;

      v32[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = a1 & 1;
      v34 = objc_msgSend(v32, "viewIfLoaded");
      v35 = objc_msgSend(v34, "window");

      if (v35)
        sub_1000926C8();
    }
    else
    {
      v33 = v27;
    }

  }
}

uint64_t sub_100019050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;

  v1 = v0;
  v16 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = &_swiftEmptyDictionarySingleton;
  *(_BYTE *)(v1 + 24) = 0;
  v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v11);
  v17 = _swiftEmptyArrayStorage;
  v12 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_10006922C((uint64_t *)&unk_100641280);
  v14 = sub_10008825C((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v13, v14, v5, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v16);
  *(_QWORD *)(v1 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000030, 0x800000010052A520, v10, v7, v4, 0);
  return v1;
}

uint64_t sub_100019230(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  NSObject *v7;
  uint64_t result;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_100640DA0 != -1)
    swift_once(&qword_100640DA0, sub_100083308);
  v7 = qword_1006726B0;
  result = os_log_type_enabled((os_log_t)qword_1006726B0, a1);
  if ((_DWORD)result)
  {
    v9 = v3;
    swift_bridgeObjectRetain_n(a3, 2);
    v10 = v9;
    v11 = swift_slowAlloc(22, -1);
    v12 = (_QWORD *)swift_slowAlloc(8, -1);
    v15 = swift_slowAlloc(32, -1);
    v16 = (uint64_t)v10;
    v17 = v15;
    *(_DWORD *)v11 = 138412546;
    v13 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    *v12 = v10;

    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain(a3);
    v16 = sub_1000544FC(a2, a3, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v7, a1, "[%@] %s", (uint8_t *)v11, 0x16u);
    v14 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    return swift_slowDealloc(v11, -1, -1);
  }
  return result;
}

void sub_10001942C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  uint64_t v5;
  double v6;
  void *v7;
  double v8;
  id v9;
  id v10;
  double v11;
  id v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  id v17;
  double v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  id v23;
  unsigned int v24;
  void *v25;
  char v26;
  double v27;
  id v28;
  _OWORD v29[2];
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  _BYTE v42[184];

  swift_beginAccess(a1 + 608, v42, 33, 0);
  sub_1002F4858(v29);
  swift_endAccess(v42);
  v4 = *(void **)(a1 + 552);
  sub_10006B5D4((uint64_t)v42);
  if (qword_100640FB8 != -1)
    swift_once(&qword_100640FB8, sub_10030D4EC);
  v5 = qword_10064E2D0;
  swift_retain();
  v6 = sub_100310EA8((uint64_t)v29, v4, (uint64_t)v42);
  swift_release(v5);
  sub_10002A0C4((uint64_t)v42);
  v7 = (void *)objc_opt_self(NSCollectionLayoutSpacing);
  v8 = v38;
  v9 = objc_msgSend(v7, "fixedSpacing:", v37);
  v10 = objc_msgSend(v7, "fixedSpacing:", v8);
  v11 = v41;
  v12 = objc_msgSend(v7, "fixedSpacing:", v40);
  v13 = v33;
  v14 = v34;
  v15 = v35;
  v16 = v36;
  v17 = objc_msgSend(v4, "layoutDirection");
  v18 = v39;
  v19 = v30;
  v20 = v31;
  v21 = v32;
  v22 = v10;
  v23 = v9;
  v24 = objc_msgSend(v4, "enclosedInUIPDocumentLanding");
  sub_1001456E8((void **)v29);
  if (v24)
    v25 = v12;
  else
    v25 = v22;
  if (v24)
  {
    v11 = v18;
    v12 = v22;
  }

  v26 = v20 & 1;
  if (v17 == (id)1)
    v27 = v14;
  else
    v27 = v16;
  if (v17 == (id)1)
    v14 = v16;
  v28 = v23;

  *(double *)a2 = v18;
  *(double *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v22;
  *(_BYTE *)(a2 + 32) = v24 ^ 1;
  *(double *)(a2 + 40) = v11;
  *(double *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v19;
  *(_QWORD *)(a2 + 72) = v13;
  *(double *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v15;
  *(double *)(a2 + 96) = v27;
  *(_QWORD *)(a2 + 104) = v21;
  *(_BYTE *)(a2 + 112) = v26;
}

void sub_100019648(char a1, id a2, void *a3, char a4)
{
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  if ((a1 & 1) == 0)
    objc_msgSend((id)objc_opt_self(UIView), "setAnimationsEnabled:", 0);
  v8 = objc_msgSend(a2, "internalNavigationController");
  v9 = objc_msgSend(v8, "topViewController");

  if (!v9)
    goto LABEL_11;
  v10 = (unint64_t)objc_msgSend(v9, "presentedViewController");

  if (!v10)
  {
LABEL_12:
    v21 = 0;
    goto LABEL_13;
  }
  v11 = type metadata accessor for DOCSearchController();
  v12 = swift_dynamicCastClass(v10, v11);
  if (!v12)
  {

LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v21 = (char *)v12;
  v13 = (id)v10;
  if (objc_msgSend(v21, "isActive")
    && (v14 = *(char **)&v21[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController],
        (v15 = objc_msgSend(v14, "viewIfLoaded")) != 0)
    && (v16 = v15, v17 = objc_msgSend(v15, "isHidden"), v16, (v17 & 1) == 0))
  {
    v18 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v20 = v18;
      else
        v20 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v19 = _CocoaArrayWrapper.endIndex.getter(v20);

      swift_bridgeObjectRelease(v18);
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);

    }
    v10 = v19 > 0;
  }
  else
  {

    v10 = 0;
  }
LABEL_13:
  objc_msgSend(a3, "setSafeAreaUpdatesDisabledDuringTransitions:", a4 & 1);
  objc_msgSend(a3, "setIsShowingSearchResults:", v10);
  if ((a1 & 1) == 0)
    objc_msgSend((id)objc_opt_self(UIView), "setAnimationsEnabled:", 1);

}

_QWORD *sub_100019858(unint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        v7 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v8 = v6;
        v9 = a2(0);
        v10 = swift_dynamicCastClass(v8, v9);
        if (!v10)
        {
          swift_unknownObjectRelease(v8);
          goto LABEL_15;
        }
        v11 = v10;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized ContiguousArray._endMutation()(v13);
        if (v7 == v4)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v14 = 0;
      v15 = v3 + 32;
      while (1)
      {
        v16 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        v17 = *(void **)(v15 + 8 * v14);
        v18 = a2(0);
        v19 = swift_dynamicCastClass(v17, v18);
        if (!v19)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v3 = v19;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v20 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v3);
        specialized ContiguousArray._endMutation()(v21);
        ++v14;
        if (v16 == v4)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v3 < 0)
      v23 = v3;
    else
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
    specialized ContiguousArray.reserveCapacity(_:)(v24);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
  }
  return _swiftEmptyArrayStorage;
}

void sub_100019A38()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v1 = sub_100091FAC();
  objc_msgSend(v0, "addSubview:", v1);

  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004DAC10;
  v5 = sub_100091FAC();
  v6 = objc_msgSend(v5, "leadingAnchor");

  v7 = objc_msgSend(v0, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = sub_100091FAC();
  v10 = objc_msgSend(v9, "trailingAnchor");

  v11 = objc_msgSend(v0, "trailingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v4 + 40) = v12;
  v13 = sub_100091FAC();
  v14 = objc_msgSend(v13, "topAnchor");

  v15 = objc_msgSend(v0, "topAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 48) = v16;
  v17 = sub_100091FAC();
  v18 = objc_msgSend(v17, "bottomAnchor");

  v19 = objc_msgSend(v0, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v4 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

char *sub_100019CB4(void *a1, void *a2)
{
  _BYTE *v2;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  id v23;
  void **v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  objc_class *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  __int128 v51;
  __int128 v52;
  void (*v53)();
  uint64_t v54;
  objc_super v55;
  char v56[24];

  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarHasActiveFocus] = 0;
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSomeUnseenSources] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController____lazy_storage___notificationsController] = 0;
  v5 = &v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_favoritesSubscriber] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSeenInitiallyGatheredFavorites] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber] = 0;
  v6 = &v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
  *v6 = 0u;
  v6[1] = 0u;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive] = 1;
  v7 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon;
  v8 = v2;
  *(_QWORD *)&v2[v7] = sub_1003F2024((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession] = 0;
  v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_shouldStopEditingOnFinishedEdit] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation] = 0;
  v9 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  sub_10023C938(3, 0.5);
  *(_QWORD *)&v8[v9] = v10;
  v11 = &v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath];
  v12 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem];
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = 0;
  v13[24] = -1;
  v14 = &v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier];
  *v14 = 0;
  v14[1] = 0;
  v15 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection;
  v16 = type metadata accessor for DOCSidebarViewController.LocationSelection();
  v17 = swift_allocObject(v16, 32, 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_QWORD *)&v8[v15] = v17;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_searchController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesVisitedObserver] = 0;
  v18 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad;
  *(_QWORD *)&v8[v18] = sub_1000D0350((uint64_t)&off_1005C0070);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_lastSearchDisplayMode] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v19 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage;
  v20 = type metadata accessor for DOCSidebarViewController.BBIStorage();
  v21 = (_OWORD *)swift_allocObject(v20, 64, 7);
  v21[1] = 0u;
  v21[2] = 0u;
  v21[3] = 0u;
  *(_QWORD *)&v8[v19] = v21;
  v22 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_actionManager;
  *(_QWORD *)&v8[v22] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCActionManager()), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_customActions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_contextMenuInteraction] = 0;
  v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_debugOptionsMenu] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceObserver] = a2;
  v23 = a2;
  v24 = (void **)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v24, v56, 0, 0);
  v25 = *v24;
  if (*v24)
  {
    *((_QWORD *)&v52 + 1) = sub_10004F2F0(0, &qword_1006434F0, NSUserDefaults_ptr);
    v53 = (void (*)())&off_1005E7308;
    *(_QWORD *)&v51 = v25;
  }
  else
  {
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
  }
  v26 = type metadata accessor for DOCSourceVisibilityController();
  v27 = swift_allocObject(v26, 128, 7);
  *(_QWORD *)(v27 + 16) = 0xD00000000000001FLL;
  *(_QWORD *)(v27 + 24) = 0x800000010051C1D0;
  *(_QWORD *)(v27 + 80) = _swiftEmptyArrayStorage;
  v28 = v25;
  v29 = a1;
  *(_QWORD *)(v27 + 88) = String._bridgeToObjectiveC()();
  *(_OWORD *)(v27 + 96) = 0u;
  *(_OWORD *)(v27 + 112) = 0u;
  sub_100070EDC((uint64_t)&v51, v27 + 32, &qword_100648C78);
  *(_QWORD *)(v27 + 72) = v29;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController] = v27;
  v30 = type metadata accessor for DOCMutableSidebarData();
  *(_WORD *)(swift_allocObject(v30, 42, 7) + 40) = 0;
  v31 = v29;
  swift_retain();
  sub_10002A250(v31, v27, 1);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData] = v32;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] = v31;
  v33 = v31;

  v34 = objc_allocWithZone((Class)UICollectionViewLayout);
  v35 = objc_msgSend(v34, "init", (_QWORD)v51);
  v36 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v55.receiver = v8;
  v55.super_class = v36;
  v37 = objc_msgSendSuper2(&v55, "initWithCollectionViewLayout:", v35);

  v38 = (char *)v37;
  sub_10002D328();
  v39 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  v40 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer];
  v41 = swift_allocObject(&unk_1005D4140, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16);
  v42 = *(_QWORD *)(v40 + 32);
  v43 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v40 + 32) = sub_10023D0F0;
  *(_QWORD *)(v40 + 40) = v41;
  sub_100087534(v42, v43);
  v44 = *(_QWORD *)&v38[v39];
  v45 = *(_QWORD *)(v44 + 48);
  v46 = *(_QWORD *)(v44 + 56);
  *(_QWORD *)(v44 + 48) = sub_10023B0CC;
  *(_QWORD *)(v44 + 56) = 0;
  sub_100087534(v45, v46);
  v47 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
  v48 = swift_allocObject(&unk_1005D4140, 24, 7);
  swift_unknownObjectWeakInit(v48 + 16);
  v53 = sub_1000A6694;
  v54 = v48;
  *(_QWORD *)&v51 = _NSConcreteStackBlock;
  *((_QWORD *)&v51 + 1) = 1107296256;
  *(_QWORD *)&v52 = sub_10004A82C;
  *((_QWORD *)&v52 + 1) = &unk_1005D4180;
  v49 = _Block_copy(&v51);
  swift_release(v54);
  objc_msgSend(v47, "performAfterLaunchAlwaysAsync:block:", 0, v49);

  _Block_release(v49);
  return v38;
}

uint64_t sub_10001A27C(char a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _BYTE v20[24];
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v4 = v3;
  v29 = 0;
  v27 = 0;
  v28 = 0;
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state];
  v20[16] = a1;
  v21 = a2;
  v22 = a3;
  v23 = &v29;
  v24 = &v27;
  (*(void (**)(uint64_t (*)(), _BYTE *, char *))(*(_QWORD *)v5 + 168))(sub_100447728, v20, &type metadata for ()[8]);
  v6 = v27;
  if (v27)
  {
    v7 = v28;
    v8 = *(_QWORD *)(v27 + 16);
    if (v8)
    {
      v9 = swift_bridgeObjectRetain(v27);
      sub_100092FC4(v9, v7);
      v10 = (uint64_t *)(v6 + 40);
      do
      {
        v12 = (void (*)(__n128))*(v10 - 1);
        v11 = *v10;
        v13 = swift_retain();
        v12(v13);
        swift_release(v11);
        v10 += 2;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v7);
    }
    v14 = swift_bridgeObjectRetain(v7);
    sub_100014894(v14);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease_n(v7, 2);
  }
  if (v29 == 1)
  {
    v15 = swift_allocObject(&unk_1005ECCF8, 24, 7);
    *(_QWORD *)(v15 + 16) = v4;
    aBlock[4] = sub_100447AFC;
    v26 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005ECD10;
    v16 = _Block_copy(aBlock);
    v17 = v26;
    v18 = v4;
    swift_release(v17);
    DOCRunInMainThread(v16);
    _Block_release(v16);
  }
  return sub_100092FF0(v27, v28);
}

void sub_10001A420(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;

  v4 = v3;
  v8 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates) & 1) != 0)
    return;
  v11 = (unint64_t)a1 >> 62;
  v34 = a2;
  if (a2)
    goto LABEL_9;
  if (v11)
    goto LABEL_36;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v12)
    goto LABEL_40;
LABEL_5:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v13 = *(id *)(a1 + 32);
  }
  v34 = v13;
  swift_bridgeObjectRelease(a1);
LABEL_9:
  if (v11)
  {
    while (1)
    {
      if (a1 < 0)
        v32 = a1;
      else
        v32 = a1 & 0xFFFFFFFFFFFFFF8;
      v33 = a2;
      swift_bridgeObjectRetain(a1);
      v14 = _CocoaArrayWrapper.endIndex.getter(v32);
      if (!v14)
        goto LABEL_45;
LABEL_11:
      v16 = v14 - 1;
      if (__OFSUB__(v14, 1))
        break;
      if ((a1 & 0xC000000000000001) != 0)
        goto LABEL_31;
      if ((v16 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v16 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_33;
      v17 = *(id *)(a1 + 8 * v16 + 32);
LABEL_16:
      a2 = v17;
      swift_bridgeObjectRelease(a1);
      if (v11)
      {
        if (a1 < 0)
          v20 = a1;
        else
          v20 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v21 = a2;
        v18 = _CocoaArrayWrapper.endIndex.getter(v20);
      }
      else
      {
        v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a1);
        v19 = a2;
      }
      if (!v18)
        goto LABEL_34;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(a1);
      v35 = a1;
      if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || a1 < 0 || (a1 & 0x4000000000000000) != 0)
      {
        isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(a1);
        a1 = isUniquelyReferenced_nonNull_bridgeObject;
        v35 = isUniquelyReferenced_nonNull_bridgeObject;
      }
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v23)
      {
        v24 = v23 - 1;
        v25 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v24 + 0x20);
        *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);

        v26 = v34;
        v27 = v35;
        v28 = &v10[v8[9]];
        *(_OWORD *)v28 = 0u;
        *((_OWORD *)v28 + 1) = 0u;
        v29 = v26;
        v30 = a3;
        UUID.init()(v30);
        *(_QWORD *)&v10[v8[5]] = a2;
        *(_QWORD *)&v10[v8[6]] = v27;
        *(_QWORD *)&v10[v8[7]] = v34;
        *(_QWORD *)&v10[v8[8]] = v30;
        sub_1000A0490((uint64_t)v10);

        sub_10007C720((uint64_t)v10, type metadata accessor for DOCBrowserHistoryItem);
        return;
      }
LABEL_35:
      __break(1u);
LABEL_36:
      if (a1 < 0)
        v31 = a1;
      else
        v31 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v31))
        goto LABEL_5;
LABEL_40:
      swift_bridgeObjectRelease(a1);
      v34 = 0;
      if (!v11)
        goto LABEL_10;
    }
    __break(1u);
LABEL_31:
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1);
    goto LABEL_16;
  }
LABEL_10:
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v15 = a2;
  swift_bridgeObjectRetain(a1);
  if (v14)
    goto LABEL_11;
LABEL_45:
  swift_bridgeObjectRelease(a1);

}

uint64_t sub_10001A7A0(uint64_t a1, uint64_t a2)
{
  return sub_100489204(a1, a2, (uint64_t)&unk_1005EFE90, (uint64_t)sub_100094A44, (uint64_t)&unk_1005EFEA8);
}

void sub_10001A7BC(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - v14;
  if ((a1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] & 1) == 0
    && (a1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] & 1) == 0)
  {
    a1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] = 1;
    v16 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v28 = v3;
    v26 = static OS_dispatch_queue.main.getter(v16);
    static DispatchTime.now()(v26);
    + infix(_:_:)(v12, 0.1);
    v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v12, v9);
    v17 = swift_allocObject(&unk_1005EC528, 24, 7);
    *(_QWORD *)(v17 + 16) = a1;
    aBlock[4] = sub_1000A0F7C;
    v31 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005EC540;
    v18 = _Block_copy(aBlock);
    v19 = v31;
    v20 = a1;
    swift_release(v19);
    static DispatchQoS.unspecified.getter(v21);
    aBlock[0] = _swiftEmptyArrayStorage;
    v22 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = sub_10006922C((uint64_t *)&unk_100647540);
    v24 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v22);
    v25 = (void *)v26;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
    v27(v15, v9);
  }
}

uint64_t sub_10001AA80()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unsigned int v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  char v10;

  v1 = v0;
  if (!objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "isFilesApp"))goto LABEL_11;
  v2 = objc_msgSend((id)objc_opt_self(DOCFeature), "showTips");
  v3 = objc_msgSend(v2, "isEnabled");

  if (!v3)
    goto LABEL_11;
  DOCItemCollectionViewController.getCurrentLocation()();
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "sharedItemsLocation");
  v7 = v6;
  if (v5)
  {
    if (v6)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v8 = v5;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
        goto LABEL_9;
    }
    else
    {

    }
LABEL_11:
    v10 = 1;
    return v10 & 1;
  }
  if (v6)
  {

    goto LABEL_11;
  }
LABEL_9:
  v10 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable) ^ 1;
  return v10 & 1;
}

uint64_t type metadata accessor for DOCSearchController()
{
  return objc_opt_self(_TtC5Files19DOCSearchController);
}

uint64_t sub_10001ABD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  unsigned __int8 v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  id v9;
  __n128 v10;
  char v11;
  __n128 v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __n128 v18;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 16) = 0;
  v1 = swift_allocObject(&unk_1005C30D0, 24, 7);
  swift_weakInit(v1 + 16, v0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 48, v2);
  swift_retain_n(v1, 2);
  if (Strong)
  {
    v4 = objc_msgSend(Strong, "isGathering");

    if ((v4 & 1) != 0)
    {
      v5 = 4;
      v6 = 2;
LABEL_14:
      sub_1000E7984((void *)v5, v6, 0, 0, v1);
      swift_release_n(v1, 2, v12);
      return swift_release(v1);
    }
  }
  v7 = *(void **)(v0 + 160);
  if (!v7 || objc_msgSend(v7, "contentType") != (id)2 || (v8 = *(void **)(v0 + 160)) == 0)
  {
    sub_10008E430();
    if ((v11 & 1) != 0)
    {
      if ((sub_1000E7C68() & 1) != 0)
      {
        v5 = 2;
        v6 = 2;
      }
      else
      {
        sub_1000E7C74();
        v6 = 0;
      }
    }
    else
    {
      if ((sub_10008E7F4() & 1) == 0)
      {
        v14 = *(_QWORD *)(v0 + 40);
        v15 = swift_allocObject(&unk_1005C30F8, 32, 7);
        *(_QWORD *)(v15 + 16) = sub_1000E837C;
        *(_QWORD *)(v15 + 24) = v1;
        sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        swift_retain();
        swift_retain();
        v17 = (void *)static OS_dispatch_queue.main.getter(v16);
        sub_100450A68(v17, (uint64_t)sub_1000E8384, v15);
        swift_release_n(v1, 2, v18);
        swift_release(v14);
        swift_release(v15);

        return swift_release(v1);
      }
      v5 = 3;
      v6 = 2;
    }
    goto LABEL_14;
  }
  v9 = v8;
  sub_1000E7984(v8, 1, 0, 0, v1);
  swift_release_n(v1, 2, v10);

  return swift_release(v1);
}

void sub_10001ADEC()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;

  v2 = v0;
  v3 = objc_msgSend(v0, "dataSource");
  v4 = sub_10005F27C();

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (!v5)
      goto LABEL_22;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v5)
      goto LABEL_22;
  }
  if (v5 >= 1)
  {
    v27 = v2;
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, "navigationItem", v27);
      v10 = objc_msgSend(v9, "searchController");

      if (v10
        && (v11 = objc_msgSend(v10, "searchResultsController"),
            v10,
            v11))
      {
        v12 = type metadata accessor for DOCItemCollectionViewController(0);
        v13 = swift_dynamicCastClass(v11, v12);

        if (v13)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
          v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v16 >= v15 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
          v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
          specialized Array._endMutation()(v17);
        }
        else
        {

        }
      }
      else
      {

      }
    }
LABEL_22:
    swift_bridgeObjectRelease(v4);
    v5 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v4);
    v19 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
    if (!v19)
      return;
    v2 = v19;
    v20 = objc_msgSend(v19, "presentedViewController");
    if (v20)
    {
      v4 = (uint64_t)v20;
      v21 = type metadata accessor for DOCSearchController();
      v22 = swift_dynamicCastClass(v4, v21);
      if (v22)
      {
        v1 = *(void **)(v22 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        {
          v23 = v1;
LABEL_27:
          sub_1004591F4(0, 0, (uint64_t)v1);

          return;
        }
        goto LABEL_32;
      }

    }
    return;
  }
  __break(1u);
LABEL_32:
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v5 & 0xFFFFFFFFFFFFFF8;
  v25 = v1;
  swift_bridgeObjectRetain(v5);
  v26 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  if ((v26 & 0x8000000000000000) == 0)
    goto LABEL_27;
  __break(1u);
}

uint64_t sub_10001B0BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BYTE v33[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v6, v33, 0, 0);
  v7 = *v6;
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_3;
LABEL_14:
    v26 = swift_bridgeObjectRelease(v7);
    v27 = Logger.UI.unsafeMutableAddressor(v26);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v27, v2);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Location cannot load a parent [locations array is empty]", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  if (v7 < 0)
    v25 = v7;
  else
    v25 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  result = _CocoaArrayWrapper.endIndex.getter(v25);
  if (!result)
    goto LABEL_14;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_6:
    v11 = v10;
    swift_bridgeObjectRelease(v7);
    v12 = objc_msgSend(v11, "fileProviderItem");
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v11, "isRoot");
      if ((v14 & 1) == 0)
        return (uint64_t)v11;
      v15 = *(id *)DOCLog.UI.unsafeMutableAddressor(v14);
      v16 = static os_log_type_t.debug.getter();
      v17 = sub_10006922C((uint64_t *)&unk_100644560);
      v18 = swift_allocObject(v17, 72, 7);
      *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v18 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      *(_QWORD *)(v18 + 64) = sub_100083450((unint64_t *)&qword_100647578, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      *(_QWORD *)(v18 + 32) = v11;
      v19 = v11;
      os_log(_:dso:log:type:_:)("Location is already the root location", 37, 2, &_mh_execute_header, v15, v16, v18);

      swift_bridgeObjectRelease(v18);
    }
    else
    {
      v20 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
      v21 = static os_log_type_t.debug.getter();
      v22 = sub_10006922C((uint64_t *)&unk_100644560);
      v23 = swift_allocObject(v22, 72, 7);
      *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v23 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      *(_QWORD *)(v23 + 64) = sub_100083450((unint64_t *)&qword_100647578, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      *(_QWORD *)(v23 + 32) = v11;
      v24 = v11;
      os_log(_:dso:log:type:_:)("Location %@ cannot load a parent", 32, 2, &_mh_execute_header, v20, v21, v23);

      swift_bridgeObjectRelease(v23);
    }
    return 0;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v7 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

id sub_10001B43C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v12[5];
  uint64_t v13;

  v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout);
  }
  else
  {
    v4 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16);
    v5 = objc_allocWithZone((Class)type metadata accessor for DOCCollectionViewCompositionalLayout());
    v12[4] = sub_10009C3E4;
    v13 = v4;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100033024;
    v12[3] = &unk_1005CEAE0;
    v6 = _Block_copy(v12);
    v7 = objc_msgSend(v5, "initWithSectionProvider:", v6, swift_retain().n128_f64[0]);
    _Block_release(v6);
    v8 = v13;
    swift_release(v4);
    swift_release(v8);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

_QWORD *sub_10001B558(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10006922C(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 8 * v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v9 + 4])
          memmove(v15, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100082078(0, v9, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

void sub_10001B6D0(int a1)
{
  char *v1;
  char *v2;
  NSObject *v4;
  NSObject **isa;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  char v22;
  char v23;
  id v24;
  NSString v25;
  double v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  NSObject *v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  NSObject *v45;
  char *v46;
  NSObject *v47;
  NSObject *v48;
  NSObject *v49;
  NSObject *v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  NSObject **v55;
  NSObject *v56;
  NSObject *v57;
  NSObject *v58;
  uint64_t v59;
  NSObject **v60;
  SEL *v61;
  char *v62;
  NSObject *v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  NSObject *v67;
  uint8_t *v68;
  NSObject *v69;
  void *v70;
  NSObject *v71;
  NSObject **v72;
  uint64_t v73;
  uint8_t *v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  NSObject **v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  id v88;
  NSObject *v89;
  id v90;
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  int v94;
  _BOOL4 v95;
  uint64_t v96;
  NSObject **v97;
  NSObject *v98;
  NSObject *v99;
  NSObject *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  NSObject *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  NSObject **v110;
  NSObject *v111;
  void *v112;
  NSObject *v113;
  uint64_t v114;
  NSObject **v115;
  char v116;
  id v117;
  unint64_t v118;
  char v119;
  char v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  NSObject *v131;
  id v132;
  NSObject *v133;
  id v134;
  unint64_t v135;
  id v136;
  void *v137;
  id v138;
  void *v139;
  void *v140;
  uint64_t v141;
  uint64_t inited;
  uint64_t v143;
  id v144;
  id v145;
  NSObject *v146;
  id v147;
  void *v148;
  uint64_t v149;
  NSObject *v150;
  id v151;
  NSObject *v152;
  id v153;
  void *v154;
  void *v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  NSObject *v159;
  _QWORD *v160;
  void *v161;
  char *v162;
  id v163;
  char *v164;
  uint64_t ObjectType;
  char *v166;
  char *v167;
  NSObject *v168;
  char *v169;
  NSObject **v170;
  int v171;
  char *v172;
  char v173[40];
  uint64_t v174;
  char v175[40];
  uint64_t v176;
  _BYTE v177[24];

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v4 = type metadata accessor for Logger(0);
  isa = (NSObject **)v4[-1].isa;
  __chkstk_darwin(v4);
  v7 = (char *)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v169 = (char *)&v158 - v9;
  __chkstk_darwin(v10);
  v162 = (char *)&v158 - v11;
  __chkstk_darwin(v12);
  v167 = (char *)&v158 - v13;
  __chkstk_darwin(v14);
  v166 = (char *)&v158 - v15;
  v17 = __chkstk_darwin(v16);
  v172 = (char *)&v158 - v18;
  v19 = *(void **)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  v20 = objc_msgSend(v19, "defaultEffectiveTabIdentifierForLocationRestore", v17);
  v21 = sub_100152104((uint64_t)v20);
  v23 = v22;

  if ((v23 & 1) != 0)
    v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab];
  v163 = (id)v21;
  v24 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  v25 = objc_msgSend(v19, "hostIdentifier");
  if (!v25)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v27 = v19;
    v29 = v28;
    v25 = String._bridgeToObjectiveC()();
    v30 = v29;
    v19 = v27;
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  objc_msgSend(v24, "setHostIdentifier:", v25, v26);

  v32 = Logger.UI.unsafeMutableAddressor(v31);
  v170 = isa;
  v33 = isa[2];
  ((void (*)(char *, uint64_t, NSObject *))v33)(v172, v32, v4);
  v34 = v2;
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.debug.getter();
  v37 = os_log_type_enabled(v35, v36);
  v171 = a1;
  v164 = v7;
  if (v37)
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(8, -1);
    v161 = v19;
    v160 = (_QWORD *)v39;
    v168 = v4;
    *(_DWORD *)v38 = 138412290;
    v176 = (uint64_t)v34;
    v40 = v34;
    v4 = v168;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
    v41 = v160;
    *v160 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "0. Will reset initially selected location (browser: %@)", v38, 0xCu);
    v42 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v41, 1, v42);
    v19 = v161;
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }
  else
  {

    v35 = v34;
  }

  v43 = v172;
  v172 = (char *)v170[1];
  ((void (*)(char *, NSObject *))v172)(v43, v4);
  v44 = objc_msgSend(v19, "defaultLocation");
  if (v44)
  {
    v45 = v44;
    if (objc_msgSend(v19, "allowsDisplaying:", v44))
    {
      v46 = v166;
      ((void (*)(char *, uint64_t, NSObject *))v33)(v166, v32, v4);
      v47 = v34;
      v48 = v45;
      v49 = v47;
      v50 = v48;
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.debug.getter();
      v53 = v52;
      if (os_log_type_enabled(v51, v52))
      {
        v54 = swift_slowAlloc(22, -1);
        v55 = (NSObject **)swift_slowAlloc(16, -1);
        *(_DWORD *)v54 = 138412546;
        v176 = (uint64_t)v49;
        v168 = v4;
        v56 = v49;
        LODWORD(v170) = v53;
        v57 = v56;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
        *v55 = v49;

        *(_WORD *)(v54 + 12) = 2112;
        v176 = (uint64_t)v50;
        v58 = v50;
        v4 = v168;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
        v55[1] = v45;

        _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v170, "1. Will reset to configuration's defaultLocation (browser: %@, location: %@)", (uint8_t *)v54, 0x16u);
        v59 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v55, 2, v59);
        v60 = v55;
        v46 = v166;
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v54, -1, -1);
      }
      else
      {

        v51 = v49;
      }
      v105 = v171;

      ((void (*)(char *, NSObject *))v172)(v46, v4);
      sub_1001D4F4C(v50, 0, v105 & 1, 0, 1, 0, 0);

      return;
    }

  }
  v61 = (SEL *)&off_10061F000;
  if (!objc_msgSend(v19, "isPickerUI"))
  {
    sub_1001D7DFC(v171 & 1);
    return;
  }
  v62 = v167;
  ((void (*)(char *, uint64_t, NSObject *))v33)(v167, v32, v4);
  v63 = v34;
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.debug.getter();
  v66 = os_log_type_enabled(v64, v65);
  v159 = v33;
  v158 = v32;
  if (v66)
  {
    v67 = v63;
    v68 = (uint8_t *)swift_slowAlloc(12, -1);
    v170 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v68 = 138412290;
    v176 = (uint64_t)v67;
    v69 = v4;
    v70 = v19;
    v71 = v67;
    v61 = (SEL *)&off_10061F000;
    v32 = v158;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
    v72 = v170;
    *v170 = v67;

    v19 = v70;
    v4 = v69;
    v33 = v159;
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "2 Will reset using picker strategy (browser: %@)", v68, 0xCu);
    v73 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v72, 1, v73);
    swift_slowDealloc(v72, -1, -1);
    v74 = v68;
    v63 = v67;
    v62 = v167;
    swift_slowDealloc(v74, -1, -1);
  }
  else
  {

    v64 = v63;
  }

  ((void (*)(char *, NSObject *))v172)(v62, v4);
  if (!objc_msgSend(v19, v61[432]) || (v75 = sub_1001ECAF8()) == 0)
  {
LABEL_32:
    ((void (*)(char *, uint64_t, NSObject *))v33)(v169, v32, v4);
    v106 = v63;
    v107 = Logger.logObject.getter(v106);
    v108 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v107, v108))
    {
      v109 = (uint8_t *)swift_slowAlloc(12, -1);
      v110 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v109 = 138412290;
      v176 = (uint64_t)v106;
      v111 = v106;
      v168 = v4;
      v112 = v19;
      v113 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
      *v110 = v106;

      v19 = v112;
      v4 = v168;
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "2.2 lastUsedOpenSaveLocation couldn't be found or used. Will fetch from getSaveLocation (browser: %@)", v109, 0xCu);
      v114 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v110, 1, v114);
      v115 = v110;
      v32 = v158;
      swift_slowDealloc(v115, -1, -1);
      swift_slowDealloc(v109, -1, -1);
    }
    else
    {

      v107 = v106;
    }
    v116 = v171;

    ((void (*)(char *, NSObject *))v172)(v169, v4);
    v117 = objc_msgSend(v19, "defaultEffectiveTabIdentifierForLocationRestore");
    v118 = sub_100152104((uint64_t)v117);
    v120 = v119;

    if ((v120 & 1) != 0)
    {
      v122 = v164;
      v123 = ((uint64_t (*)(char *, uint64_t, NSObject *))v159)(v164, v32, v4);
      v124 = Logger.logObject.getter(v123);
      v125 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v124, v125))
      {
        v126 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v126 = 0;
        _os_log_impl((void *)&_mh_execute_header, v124, v125, "WARNING: expected configuration.defaultEffectiveTabForLocationRestore to be set at this point", v126, 2u);
        swift_slowDealloc(v126, -1, -1);
      }

      ((void (*)(char *, NSObject *))v172)(v122, v4);
      v118 = 2;
      *(Class *)((char *)&v106->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = (Class)2;
      v121 = &DOCTabIdentifierBrowse;
    }
    else
    {
      *(Class *)((char *)&v106->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = (Class)v118;
      if (v118 > 2)
      {
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      v121 = *(&off_1005D12B8 + v118);
    }
    objc_msgSend(v19, "setDefaultEffectiveTabIdentifierForLocationRestore:", *v121, v158);
    v127 = swift_allocObject(&unk_1005D0F68, 41, 7);
    *(_QWORD *)(v127 + 16) = v118;
    *(_QWORD *)(v127 + 24) = v19;
    *(_QWORD *)(v127 + 32) = v106;
    *(_BYTE *)(v127 + 40) = v116 & 1;
    v128 = (uint64_t *)((char *)v106 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
    swift_beginAccess((char *)v106 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, &v176, 0, 0);
    v129 = *v128;
    if ((unint64_t)v129 >> 62)
    {
      if (v129 < 0)
        v149 = v129;
      else
        v149 = v129 & 0xFFFFFFFFFFFFFF8;
      v150 = v106;
      v151 = v19;
      v152 = v150;
      v153 = v151;
      swift_bridgeObjectRetain(v129);
      v130 = _CocoaArrayWrapper.endIndex.getter(v149);
      if (v130)
      {
LABEL_43:
        v135 = v130 - 1;
        if (__OFSUB__(v130, 1))
        {
          __break(1u);
        }
        else if ((v129 & 0xC000000000000001) == 0)
        {
          if ((v135 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v135 < *(_QWORD *)((v129 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v136 = *(id *)(v129 + 8 * v135 + 32);
            goto LABEL_48;
          }
          __break(1u);
          goto LABEL_69;
        }
        v136 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v135, v129);
LABEL_48:
        v137 = v136;
        v138 = objc_msgSend(v136, "fileProviderItem", swift_bridgeObjectRelease(v129).n128_f64[0]);
        if (v138)
        {
          v139 = v138;
          v140 = (void *)FPActionImportHere;
          v141 = sub_10006922C((uint64_t *)&unk_1006441A0);
          inited = swift_initStackObject(v141, v175);
          *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
          *(_QWORD *)(inited + 32) = v139;
          v174 = inited;
          specialized Array._endMutation()(inited);
          v143 = v174;
          v144 = v139;
          LOBYTE(v140) = sub_1003598CC(v140, v143);
          swift_bridgeObjectRelease(v143);

          if ((v140 & 1) != 0)
          {
            v145 = v137;
            sub_1001D78D8(v137, (id)v118, v19, v106, v116 & 1);

            swift_release(v127);
LABEL_63:

            return;
          }
        }

LABEL_62:
        v154 = *(Class *)((char *)&v106->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
        v155 = *(Class *)((char *)&v106->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext);
        v156 = swift_allocObject(&unk_1005D0F90, 32, 7);
        *(_QWORD *)(v156 + 16) = sub_1001F6330;
        *(_QWORD *)(v156 + 24) = v127;
        v157 = v155;
        swift_retain();
        sub_1001E44F4(v19, v154, v155, (uint64_t)sub_100066584, v156);

        swift_release(v127);
        swift_release(v156);
        goto LABEL_63;
      }
    }
    else
    {
      v130 = *(_QWORD *)((v129 & 0xFFFFFFFFFFFFF8) + 0x10);
      v131 = v106;
      v132 = v19;
      v133 = v131;
      v134 = v132;
      swift_bridgeObjectRetain(v129);
      if (v130)
        goto LABEL_43;
    }
    swift_bridgeObjectRelease(v129);
    goto LABEL_62;
  }
  v76 = v75;
  v168 = v63;
  v77 = v32;
  v78 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v79 = swift_initStackObject(v78, v173);
  *(_OWORD *)(v79 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v79 + 32) = v76;
  v176 = v79;
  specialized Array._endMutation()(v79);
  v80 = v176;
  v81 = v76;
  v82 = (void *)sub_10015F878(v80, 0);
  v170 = v83;
  v85 = v84;
  swift_bridgeObjectRelease(v80);
  if (!v82)
  {
LABEL_70:
    __break(1u);
    return;
  }

  if (v85)
    v86 = v85;
  else
    v86 = v82;
  v87 = objc_msgSend(v86, "effectiveTabSwitcherTab", v158);
  v32 = v77;
  if (v163 != v87
    || !objc_msgSend(v82, "canBeRestored")
    || !objc_msgSend(v19, "allowsDisplaying:", v82))
  {
    swift_bridgeObjectRelease(v170);

    v63 = v168;
    goto LABEL_32;
  }
  ((void (*)(char *, uint64_t, NSObject *))v33)(v162, v77, v4);
  v88 = v82;
  v89 = v168;
  v90 = v88;
  v168 = v89;
  v91 = (char *)v90;
  v92 = Logger.logObject.getter(v91);
  v93 = static os_log_type_t.debug.getter();
  v94 = v93;
  v95 = os_log_type_enabled(v92, v93);
  v169 = v91;
  if (v95)
  {
    v96 = swift_slowAlloc(22, -1);
    v97 = (NSObject **)swift_slowAlloc(16, -1);
    ObjectType = (uint64_t)v97;
    *(_DWORD *)v96 = 138412546;
    LODWORD(v167) = v94;
    v164 = (char *)(v96 + 4);
    v163 = (id)(v96 + 12);
    v98 = v168;
    v176 = (uint64_t)v168;
    v166 = v177;
    v99 = v168;
    v161 = v19;
    v100 = v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
    *v97 = v98;

    *(_WORD *)(v96 + 12) = 2112;
    v176 = (uint64_t)v91;
    v101 = v91;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v166);
    v102 = ObjectType;
    *(_QWORD *)(ObjectType + 8) = v82;

    v19 = v161;
    _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v167, "2.1 Will reset to lastUsedOpenSaveLocation (browser: %@, location: %@)", (uint8_t *)v96, 0x16u);
    v103 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v102, 2, v103);
    swift_slowDealloc(v102, -1, -1);
    v104 = v96;
    v61 = (SEL *)&off_10061F000;
    swift_slowDealloc(v104, -1, -1);
  }
  else
  {

    v146 = v168;
    v92 = v146;
  }

  ((void (*)(char *, NSObject *))v172)(v162, v4);
  if (objc_msgSend(v19, v61[432]))
    v147 = sub_1001ECAF8();
  else
    v147 = 0;
  v148 = v169;
  sub_1001D4F4C(v169, v147, v171 & 1, 0, 1, 0, 0);
  swift_bridgeObjectRelease(v170);

}

CFNotificationCenterRef sub_10001C630(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  __n128 v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  id v41;
  id v42;
  CFNotificationCenterRef result;
  __CFNotificationCenter *v44;
  __CFString *v45;
  __CFString *v46;
  uint64_t v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  objc_class *ObjectType;
  id v72;
  _QWORD *v73;
  _QWORD aBlock[5];
  uint64_t v75;
  objc_super v76;

  v4 = v3;
  v72 = a3;
  v69 = a1;
  v70 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v61 = type metadata accessor for DispatchWorkItemFlags(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v59 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  v68 = v7;
  __chkstk_darwin(v6);
  v66 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for DispatchQoS(0);
  v57 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v4[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_viewController];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_viewController]);
  v63 = OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue;
  v62 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v18 = v4;
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v20 = sub_10006922C((uint64_t *)&unk_100641280);
  v21 = sub_10008825C((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v12, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v65);
  v22 = v16;
  v23 = v16;
  v24 = v14;
  v26 = v66;
  v25 = v67;
  v27 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000019, 0x80000001004E41F0, v23, v24, v11, 0);
  *(_QWORD *)&v4[v63] = v27;
  v18[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert] = 0;
  v29 = v69;
  v28 = v70;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration] = v69;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_sourceObserver] = v28;
  swift_unknownObjectWeakAssign(v17, v72);
  v30 = v29;
  v31 = v28;

  v76.receiver = v18;
  v32 = v68;
  v76.super_class = ObjectType;
  v33 = objc_msgSendSuper2(&v76, "init");
  v34 = Logger.UI.unsafeMutableAddressor(v33);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v26, v34, v25);
  v36 = Logger.logObject.getter(v35);
  v38 = static os_log_type_t.info.getter(v37);
  if (os_log_type_enabled(v36, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v38, "[Default Source UI]: Init", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v25);
  if ((objc_msgSend(v30, "isPickerUI") & 1) != 0)
  {

    return (CFNotificationCenterRef)v33;
  }
  v70 = v30;
  ObjectType = (objc_class *)v31;
  v40 = (void *)objc_opt_self(NSNotificationCenter);
  v41 = objc_msgSend(v40, "defaultCenter");
  objc_msgSend(v41, "addObserver:selector:name:object:", v33, "ubiquityIdentityDidChange:", NSUbiquityIdentityDidChangeNotification, 0);

  v42 = objc_msgSend(v40, "defaultCenter");
  objc_msgSend(v42, "addObserver:selector:name:object:", v33, "applicationDidBecomeActive:", UIApplicationDidBecomeActiveNotification, 0);

  result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    v44 = result;
    v45 = (__CFString *)String._bridgeToObjectiveC()();
    CFNotificationCenterAddObserver(v44, v33, (CFNotificationCallback)sub_100369DB0, v45, 0, CFNotificationSuspensionBehaviorDrop);

    v46 = (__CFString *)String._bridgeToObjectiveC()();
    CFNotificationCenterAddObserver(v44, v33, (CFNotificationCallback)sub_100369DB0, v46, 0, CFNotificationSuspensionBehaviorDrop);

    v47 = swift_allocObject(&unk_1005E2188, 24, 7);
    *(_QWORD *)(v47 + 16) = v33;
    aBlock[4] = sub_1000A3584;
    v75 = v47;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E21A0;
    v48 = _Block_copy(aBlock);
    v49 = v33;
    v50 = v22;
    static DispatchQoS.unspecified.getter(v49);
    v73 = _swiftEmptyArrayStorage;
    v51 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v52 = sub_10006922C((uint64_t *)&unk_100647540);
    v53 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    v54 = v59;
    v55 = v52;
    v56 = v61;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v73, v55, v53, v61, v51);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v50, v54, v48);

    _Block_release(v48);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v56);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v50, v58);
    swift_release(v75);
    return (CFNotificationCenterRef)v33;
  }
  __break(1u);
  return result;
}

unint64_t sub_10001CCD0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  v4 = a1 & 1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1 & 1);
  v5 = Hasher._finalize()();
  return sub_10007F308(v4, v5);
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  unsigned int v8;
  void *v9;
  int v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unsigned int v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  _QWORD v31[5];
  uint64_t v32;
  objc_super v33;

  v1 = v0;
  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v33, "viewDidLoad");
  objc_msgSend(v0, "loadViewIfNeeded");
  v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v3, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v0, "loadViewIfNeeded");
  v4 = *(void **)&v0[v2];
  if (!v4)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v4, "_setShouldPersistSelectionOnReloadDataWhenPossible:", 1);
  v5 = (void *)objc_opt_self(NSNotificationCenter);
  v6 = objc_msgSend(v5, "defaultCenter");
  if (qword_100640DF8 != -1)
    swift_once(&qword_100640DF8, sub_100086AD8);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "didUpdateCollectionViewIsScrollEnabledWithNotification:", qword_100672700, 0);

  v7 = objc_msgSend(v5, "defaultCenter");
  if (qword_100640E00 != -1)
    swift_once(&qword_100640E00, sub_100086B0C);
  objc_msgSend(v7, "addObserver:selector:name:object:", v1, "didUpdateCollectionViewContentOffsetWithNotification:", qword_100672708, 0);

  sub_100096C40();
  v8 = objc_msgSend(v1, "isEditing");
  v9 = *(void **)&v1[v2];
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = v1;
    sub_10009BC94(v11, v12, v10);

  }
  sub_100026A34();
  sub_10018C44C(0);
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v13)
    goto LABEL_20;
  sub_1000B0BAC();
  v14 = sub_10009C360();
  v15 = *(void **)NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange.unsafeMutableAddressor();
  v16 = (void *)objc_opt_self(NSOperationQueue);
  v17 = v15;
  v18 = objc_msgSend(v16, "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  (*(void (**)(id, _QWORD *, id, void (*)(void *, uint64_t), _QWORD))(*(_QWORD *)v14 + 144))(v17, v31, v18, sub_10018778C, 0);
  v20 = v19;
  swift_release(v14);

  swift_bridgeObjectRelease(v20);
  sub_10000CB4C((uint64_t)v31, &qword_100642730);
  if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0
    || (v21 = *(id *)(v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type),
        v22 = objc_msgSend(v21, "doc_displaysSearchResults"),
        v21,
        !v22))
  {
LABEL_17:
    v28 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
    v29 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16);
    v31[4] = sub_10009BA54;
    v32 = v29;
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 1107296256;
    v31[2] = sub_10004A82C;
    v31[3] = &unk_1005CBE30;
    v30 = _Block_copy(v31);
    swift_release(v32);
    objc_msgSend(v28, "performAfterLaunch:", v30);
    _Block_release(v30);

    sub_10017A33C();
    return;
  }
  v23 = objc_msgSend(v1, "view");
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v1, "effectiveAppearance");
    if (!v25
      || (v26 = v25,
          v27 = objc_msgSend(v25, "backgroundColor"),
          v26,
          !v27))
    {
      v27 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    }
    objc_msgSend(v24, "setBackgroundColor:", v27);

    goto LABEL_17;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_10001D180(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  BOOL v23;
  uint64_t v24;
  char v25;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t i;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t j;
  id v47;
  void *v48;
  unint64_t v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  unint64_t v52;
  char v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t k;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t m;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  void *v87;
  unint64_t v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  char *v98;
  void **v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  char **v116;
  _BOOL8 v117;
  char *v118;
  char *v119;
  void *v120;
  id v121;
  void *v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t n;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  _BYTE *v142;
  void *v143;
  id v144;
  void *v145;
  id v146;
  id v147;
  uint64_t v148;
  char **v149;
  id v150;
  id v151;
  int v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  _BYTE *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  id v162;
  int v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  id v174;
  id v175;
  id v176;
  void *v177;
  uint64_t v178;
  char *v179;
  id v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  Class v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  void *v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  char v205[24];
  _BYTE *v206;
  __int128 v207;
  __int128 v208;
  uint64_t v209;
  char v210[24];
  char v211[24];
  char v212[24];
  _QWORD v213[4];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle);
  if (v2 == result || result != 2 && v2 != 2)
    return result;
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  v4 = v1;
  if (v2 == 2)
  {
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, &v207, 0, 0);
    v5 = *v3;
    v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider, v8);
    if (!Strong)
      goto LABEL_218;
    v10 = (void *)Strong;
    type metadata accessor for DOCBrowserContainerController();
    swift_bridgeObjectRetain(v5);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v12 = objc_msgSend(v10, "provideColumnViewControllerWithContains:", isa);
    swift_bridgeObjectRelease(v5);
    swift_unknownObjectRelease(v10);

    *(_QWORD *)(v7 + 32) = v12;
    v213[0] = v7;
    specialized Array._endMutation()(v13);
    v14 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers) = v213[0];
    swift_bridgeObjectRelease(v14);
    v15 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
    swift_beginAccess(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers, v213, 1, 0);
    v16 = (_QWORD *)*v15;
    *v15 = 0;
    goto LABEL_210;
  }
  v187 = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v213, 0, 0);
  v17 = *v3;
  swift_bridgeObjectRetain(*v3);
  v197 = (_QWORD *)sub_10008B5DC((uint64_t)_swiftEmptyArrayStorage);
  if ((unint64_t)v17 >> 62)
    goto LABEL_94;
  v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v17);
  v195 = v18;
  v196 = v17;
  if (v18)
  {
LABEL_9:
    v19 = 0;
    v20 = v17 & 0xC000000000000001;
    v198 = v17 + 32;
    v199 = v17 & 0xFFFFFFFFFFFFFF8;
    v202 = v17 & 0xC000000000000001;
    while (1)
    {
      if (v20)
      {
        v21 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
      }
      else
      {
        if (v19 >= *(_QWORD *)(v199 + 16))
          goto LABEL_90;
        v21 = *(id *)(v198 + 8 * v19);
      }
      v22 = v21;
      v23 = __OFADD__(v19++, 1);
      if (v23)
      {
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        if (v17 < 0)
          v74 = v17;
        else
          v74 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v17, 2);
        v18 = _CocoaArrayWrapper.endIndex.getter(v74);
        swift_bridgeObjectRelease(v17);
        v195 = v18;
        v196 = v17;
        if (!v18)
          break;
        goto LABEL_9;
      }
      v24 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
      v25 = v21[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled];
      v17 = v21;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v197);
      *(_QWORD *)&v207 = v197;
      v28 = sub_100140C08(v17);
      v29 = v197[2];
      v30 = (v27 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
        goto LABEL_87;
      v32 = v27;
      if (v197[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1002E79AC();
      }
      else
      {
        sub_1002DEACC(v31, isUniquelyReferenced_nonNull_native);
        v33 = sub_100140C08(v17);
        if ((v32 & 1) != (v34 & 1))
          goto LABEL_217;
        v28 = v33;
      }
      v35 = (_QWORD *)v207;
      v197 = (_QWORD *)v207;
      if ((v32 & 1) != 0)
      {
        *(_BYTE *)(*(_QWORD *)(v207 + 56) + v28) = v25;
      }
      else
      {
        *(_QWORD *)(v207 + 8 * (v28 >> 6) + 64) |= 1 << v28;
        *(_QWORD *)(v35[6] + 8 * v28) = v17;
        *(_BYTE *)(v35[7] + v28) = v25;
        v36 = v35[2];
        v23 = __OFADD__(v36, 1);
        v37 = v36 + 1;
        if (v23)
          goto LABEL_89;
        v35[2] = v37;
        v38 = (id)v17;
      }

      swift_bridgeObjectRelease(0x8000000000000000);
      v22[v24] = 0;
      v39 = (uint64_t)sub_100056180();
      v40 = v39;
      if ((unint64_t)v39 >> 62)
      {
        if (v39 < 0)
          v45 = v39;
        else
          v45 = v39 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v39);
        v41 = _CocoaArrayWrapper.endIndex.getter(v45);
        if (v41)
        {
LABEL_28:
          if (v41 < 1)
            goto LABEL_88;
          for (i = 0; i != v41; ++i)
          {
            if ((v40 & 0xC000000000000001) != 0)
              v43 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v40);
            else
              v43 = *(id *)(v40 + 8 * i + 32);
            v44 = v43;
            (*(void (**)(_QWORD))((swift_isaMask & *v43) + 0x208))(v22[v24]);

          }
        }
      }
      else
      {
        v41 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v39);
        if (v41)
          goto LABEL_28;
      }
      swift_bridgeObjectRelease_n(v40, 2);

      v18 = v195;
      v17 = v196;
      v20 = v202;
      if (v19 == v195)
      {
        swift_bridgeObjectRelease(v196);
        if (v195 < 1)
          goto LABEL_216;
        swift_bridgeObjectRetain(v196);
        for (j = 0; j != v195; ++j)
        {
          if (v202)
            v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v196);
          else
            v47 = *(id *)(v196 + 8 * j + 32);
          v48 = v47;
          objc_msgSend(v47, "doc_removeFromParentWithRemoveSubviewBlock:", 0);

        }
        swift_bridgeObjectRelease(v196);
        swift_bridgeObjectRetain(v196);
        v49 = 0;
        while (1)
        {
          if (v20)
          {
            v50 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v17);
          }
          else
          {
            if (v49 >= *(_QWORD *)(v199 + 16))
              goto LABEL_91;
            v50 = (unsigned __int8 *)*(id *)(v198 + 8 * v49);
          }
          v51 = v50;
          if (v197[2])
          {
            v52 = sub_100140C08((uint64_t)v50);
            if ((v53 & 1) != 0)
              break;
          }
LABEL_47:
          ++v49;

          if (v49 == v18)
            goto LABEL_98;
        }
        v17 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
        v51[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled] = *(_BYTE *)(v197[7] + v52);
        v54 = objc_msgSend(v51, "childViewControllers");
        v55 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
        v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

        *(_QWORD *)&v207 = _swiftEmptyArrayStorage;
        if ((unint64_t)v56 >> 62)
        {
          if (v56 < 0)
            v68 = v56;
          else
            v68 = v56 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v56);
          v57 = _CocoaArrayWrapper.endIndex.getter(v68);
          if (!v57)
            goto LABEL_72;
LABEL_56:
          if (v57 < 1)
            goto LABEL_92;
          for (k = 0; k != v57; ++k)
          {
            if ((v56 & 0xC000000000000001) != 0)
              v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v56);
            else
              v59 = *(id *)(v56 + 8 * k + 32);
            v60 = v59;
            v61 = type metadata accessor for DOCBrowserContainedViewController();
            v62 = swift_dynamicCastClass(v60, v61);
            if (v62)
            {
              v63 = v62;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
              v65 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v64 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v65 >= v64 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
              v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
              specialized Array._endMutation()(v66);
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v56);
          v67 = v207;
          v20 = v202;
        }
        else
        {
          v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v56);
          if (v57)
            goto LABEL_56;
LABEL_72:
          swift_bridgeObjectRelease(v56);
          v67 = (uint64_t)_swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v56);
        if ((unint64_t)v67 >> 62)
        {
          if (v67 < 0)
            v73 = v67;
          else
            v73 = v67 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v67);
          v69 = _CocoaArrayWrapper.endIndex.getter(v73);
          if (v69)
          {
LABEL_75:
            if (v69 < 1)
              goto LABEL_93;
            for (m = 0; m != v69; ++m)
            {
              if ((v67 & 0xC000000000000001) != 0)
                v71 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(m, v67);
              else
                v71 = *(id *)(v67 + 8 * m + 32);
              v72 = v71;
              (*(void (**)(_QWORD))((swift_isaMask & *v71) + 0x208))(v51[v17]);

            }
          }
        }
        else
        {
          v69 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v67);
          if (v69)
            goto LABEL_75;
        }
        swift_bridgeObjectRelease_n(v67, 2);
        v18 = v195;
        v17 = v196;
        goto LABEL_47;
      }
    }
  }
LABEL_98:
  swift_bridgeObjectRelease(v17);
  v75 = (uint64_t *)(v187 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
  swift_beginAccess(v187 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers, v212, 1, 0);
  v76 = *v75;
  *v75 = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v76);
  v77 = v187;
  v78 = OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers;
  v79 = *(_QWORD *)(v187 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (v79)
  {
    v186 = OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers;
    v80 = v79 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v79 >> 62)
      goto LABEL_136;
    v81 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v79, 2);
    for (; v81; v81 = _CocoaArrayWrapper.endIndex.getter(v113))
    {
      v82 = 0;
      v83 = v79 & 0xC000000000000001;
      v188 = v79 + 32;
      v190 = v79 & 0xC000000000000001;
      v192 = v79;
      v200 = v81;
      while (1)
      {
        v86 = v83
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v82, v79)
            : (char *)*(id *)(v188 + 8 * v82);
        v87 = v86;
        v23 = __OFADD__(v82++, 1);
        if (v23)
          break;
        v88 = v83;
        v89 = (unint64_t *)&v86[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
        swift_beginAccess(&v86[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v211, 1, 0);
        v90 = *v89;
        swift_bridgeObjectRetain(*v89);
        sub_10037D860((char **)_swiftEmptyArrayStorage);
        v91 = *v89;
        *v89 = (unint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v91);
        v92 = *v89;
        v93 = swift_bridgeObjectRetain(*v89);
        v203 = v90;
        v94 = sub_10023DA8C(v93, v90);
        swift_bridgeObjectRelease(v92);
        if ((v94 & 1) != 0)
        {

          v85 = v200;
          v84 = v90;
          v83 = v88;
        }
        else
        {
          v95 = *v89;
          if (*v89 >> 62)
          {
            if (v95 < 0)
              v112 = *v89;
            else
              v112 = v95 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(v95, 2);
            v96 = _CocoaArrayWrapper.endIndex.getter(v112);
          }
          else
          {
            v96 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n(v95, 2);
          }
          v79 = (uint64_t)&OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
          if (v96)
          {
            v18 = 0;
            while (1)
            {
              v98 = (v95 & 0xC000000000000001) != 0
                  ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v95)
                  : (char *)*(id *)(v95 + 32 + 8 * v18);
              v17 = (uint64_t)v98;
              v23 = __OFADD__(v18++, 1);
              if (v23)
                break;
              v99 = (void **)&v98[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
              swift_beginAccess(&v98[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v210, 0, 0);
              v100 = *v99;
              if (v100)
              {
                v101 = type metadata accessor for DOCItemCollectionViewController(0);
                v102 = swift_dynamicCastClass(v100, v101);
                if (v102)
                {
                  v103 = v102;
                  v104 = (uint64_t *)(v102 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
                  swift_beginAccess(v102 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v205, 1, 0);
                  v105 = *v104;
                  *v104 = 2;
                  if (v105 != 2)
                  {
                    v106 = *(_QWORD *)(v103 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
                    v107 = *(_QWORD *)(v106 + 16);
                    if (v107)
                    {
                      v108 = (uint64_t *)(v106 + 64);
                      do
                      {
                        v109 = *v108;
                        v108 += 5;
                        *(_BYTE *)(v109 + 24) = *(_BYTE *)(v109 + 25);
                        --v107;
                      }
                      while (v107);
                    }
                    v97 = v100;
                    sub_100026A34();

                    v17 = (uint64_t)v97;
                  }
                  v79 = (uint64_t)&OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
                }
              }

              if (v18 == v96)
                goto LABEL_127;
            }
            __break(1u);
            break;
          }
LABEL_127:
          swift_bridgeObjectRelease_n(v95, 2);
          if ((objc_msgSend(v87, "isViewLoaded") & 1) != 0)
          {
            v110 = *v89;
            v111 = swift_bridgeObjectRetain(*v89);
            sub_10037E0D8(v111);

            swift_bridgeObjectRelease(v203);
            v84 = v110;
            v18 = v195;
            v17 = v196;
            v83 = v190;
            v79 = v192;
            v85 = v200;
          }
          else
          {
            *((_BYTE *)v87 + OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot) = 1;

            v18 = v195;
            v17 = v196;
            v83 = v190;
            v79 = v192;
            v85 = v200;
            v84 = v203;
          }
        }
        swift_bridgeObjectRelease(v84);
        if (v82 == v85)
          goto LABEL_140;
      }
      __break(1u);
LABEL_136:
      if (v79 >= 0)
        v113 = v80;
      else
        v113 = v79;
      swift_bridgeObjectRetain_n(v79, 2);
    }
LABEL_140:
    swift_bridgeObjectRelease_n(v79, 2);
    v78 = v186;
    v77 = v187;
  }
  v114 = *(_QWORD *)(v77 + v78);
  *(_QWORD *)(v77 + v78) = 0;
  swift_bridgeObjectRelease(v114);
  if (!v18)
  {
LABEL_209:
    swift_bridgeObjectRelease(v17);
    v4 = v187;
    v16 = v197;
LABEL_210:
    swift_bridgeObjectRelease(v16);
    result = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver, v181);
    if (result)
    {
      v182 = (void *)result;
      v183 = sub_10005F27C();
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v184 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v182, "dataSource:didUpdate:animated:", v4, v184, 0, swift_bridgeObjectRelease(v183).n128_f64[0]);

      return swift_unknownObjectRelease(v182);
    }
    return result;
  }
  v189 = v17 + 32;
  v191 = v17 & 0xC000000000000001;
  swift_bridgeObjectRetain(v17);
  v115 = 0;
  v116 = &selRef_objectForKey_ofClass_;
  while (1)
  {
    v118 = v191
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v115, v17)
         : (char *)*(id *)(v189 + 8 * (_QWORD)v115);
    v119 = v118;
    v23 = __OFADD__(v115, 1);
    v120 = (char *)v115 + 1;
    if (v23)
      break;
    v121 = objc_msgSend(v118, "navigationItem");
    v122 = *(void **)&v119[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
    v204 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem;
    *(_QWORD *)&v119[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem] = v121;
    v123 = v121;

    v124 = objc_msgSend(v119, "childViewControllers");
    v125 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v126 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v124, v125);

    *(_QWORD *)&v207 = _swiftEmptyArrayStorage;
    if ((unint64_t)v126 >> 62)
    {
      if (v126 < 0)
        v138 = v126;
      else
        v138 = v126 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v126);
      v127 = _CocoaArrayWrapper.endIndex.getter(v138);
      v193 = v123;
      v194 = v120;
      if (!v127)
      {
LABEL_167:
        swift_bridgeObjectRelease(v126);
        v137 = (uint64_t)_swiftEmptyArrayStorage;
        goto LABEL_168;
      }
    }
    else
    {
      v127 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v126);
      v193 = v123;
      v194 = v120;
      if (!v127)
        goto LABEL_167;
    }
    if (v127 < 1)
      goto LABEL_214;
    for (n = 0; n != v127; ++n)
    {
      if ((v126 & 0xC000000000000001) != 0)
        v129 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(n, v126);
      else
        v129 = *(id *)(v126 + 8 * n + 32);
      v130 = v129;
      v131 = type metadata accessor for DOCBrowserContainedViewController();
      v132 = swift_dynamicCastClass(v130, v131);
      if (v132)
      {
        v133 = v132;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v132);
        v135 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v134 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v135 >= v134 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v134 > 1, v135 + 1, 1);
        v136 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v135, v133);
        specialized Array._endMutation()(v136);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease(v126);
    v137 = v207;
LABEL_168:
    swift_bridgeObjectRelease(v126);
    if ((unint64_t)v137 >> 62)
    {
      if (v137 < 0)
        v172 = v137;
      else
        v172 = v137 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v137);
      v139 = _CocoaArrayWrapper.endIndex.getter(v172);
      if (!v139)
        goto LABEL_199;
    }
    else
    {
      v139 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v137);
      if (!v139)
        goto LABEL_199;
    }
    if (v139 < 1)
      goto LABEL_215;
    v140 = 0;
    v201 = v119;
    do
    {
      if ((v137 & 0xC000000000000001) != 0)
        v141 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v140, v137);
      else
        v141 = *(id *)(v137 + 8 * v140 + 32);
      v142 = v141;
      v143 = *(void **)&v119[v204];
      if (v143)
        v144 = *(id *)&v119[v204];
      else
        v144 = objc_msgSend(v119, "navigationItem");
      v145 = *(void **)&v142[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
      *(_QWORD *)&v142[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = v144;
      v146 = v144;
      v147 = v143;

      v148 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
      v142[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      v149 = v116;
      v150 = objc_msgSend(v142, v116[413]);
      v151 = objc_msgSend(v150, "window");

      if (v151)
      {
        v152 = v142[v148];
        if (v152 != 2)
        {
          v153 = sub_10002DA34();
          v154 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v153 + 152))(v153);
          swift_release(v153);
          if ((v154 & 1) == 0)
          {
            if (objc_msgSend(v142, "doc_hasAppearedOrIsAppearing"))
            {
              v206 = v142;
              v155 = type metadata accessor for DOCBrowserContainedViewController();
              v156 = v142;
              v157 = sub_10006922C(&qword_10064D510);
              if (swift_dynamicCast(&v207, &v206, v155, v157, 6))
              {
                v158 = v152 & 1;
                v159 = *((_QWORD *)&v208 + 1);
                v160 = v209;
                sub_10007E7A0(&v207, *((uint64_t *)&v208 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 8))(v158, v159, v160);
                sub_100068588(&v207);
              }
              else
              {
                v209 = 0;
                v207 = 0u;
                v208 = 0u;
                sub_1001F7F28((uint64_t)&v207);
              }
              v142[v148] = 2;
            }
          }
        }
      }

      v142[v148] = 0;
      v116 = v149;
      v161 = objc_msgSend(v142, v149[413]);
      v162 = objc_msgSend(v161, "window");

      if (v162)
      {
        v163 = v142[v148];
        if (v163 != 2)
        {
          v164 = sub_10002DA34();
          v165 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v164 + 152))(v164);
          swift_release(v164);
          if ((v165 & 1) == 0)
          {
            if (objc_msgSend(v142, "doc_hasAppearedOrIsAppearing"))
            {
              v206 = v142;
              v166 = type metadata accessor for DOCBrowserContainedViewController();
              v167 = v142;
              v168 = sub_10006922C(&qword_10064D510);
              if (swift_dynamicCast(&v207, &v206, v166, v168, 6))
              {
                v169 = v163 & 1;
                v170 = *((_QWORD *)&v208 + 1);
                v171 = v209;
                sub_10007E7A0(&v207, *((uint64_t *)&v208 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 8))(v169, v170, v171);
                sub_100068588(&v207);
              }
              else
              {
                v209 = 0;
                v207 = 0u;
                v208 = 0u;
                sub_1001F7F28((uint64_t)&v207);
              }
              v142[v148] = 2;
            }
          }
        }
      }

      ++v140;
      v119 = v201;
    }
    while (v139 != v140);
LABEL_199:
    swift_bridgeObjectRelease_n(v137, 2);
    v173 = *(void **)&v119[v204];
    if (v173)
    {
      v174 = *(id *)&v119[v204];
    }
    else
    {
      v174 = objc_msgSend(v119, "navigationItem");
      v173 = 0;
    }
    v17 = v196;
    v115 = v194;
    v175 = v173;
    v176 = objc_msgSend(v119, "parentViewController");
    if (!v176)
      goto LABEL_205;
    v177 = v176;
    v178 = type metadata accessor for DOCColumnViewController(0);
    v179 = (char *)swift_dynamicCastClass(v177, v178);
    if (!v179)
    {

LABEL_205:
      v179 = v119;
    }
    v180 = objc_msgSend(v179, "traitCollection");

    if (DOCUsePadIdiomForTraits(v180))
      v117 = objc_msgSend(v180, "horizontalSizeClass") == (id)2;
    else
      v117 = 0;
    objc_msgSend(v174, "setStyle:", v117);

    if (v194 == (id)v195)
    {
      swift_bridgeObjectRelease(v196);
      goto LABEL_209;
    }
  }
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  v185 = type metadata accessor for DOCBrowserContainerController();
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v185);
  __break(1u);
LABEL_218:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x800000010052EF10, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 615, 0);
  __break(1u);
  return result;
}

void sub_10001E3E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  void *v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned __int128 v40;
  __int128 v41;
  Swift::Int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  int64_t v52;
  _QWORD *v53;
  uint64_t i;
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _BYTE v72[32];
  __int128 v73;
  __int128 v74;
  _BYTE v75[80];
  __int128 v76;
  _BYTE v77[25];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10006922C((uint64_t *)&unk_10064D9E0);
  v55 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v53 = (_QWORD *)(v5 + 64);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v51 = v3;
  v52 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v13 << 6);
      if ((v55 & 1) != 0)
        goto LABEL_13;
      goto LABEL_26;
    }
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v25 >= v52)
      break;
    v26 = v53;
    v27 = v53[v25];
    ++v13;
    if (!v27)
    {
      v13 = v25 + 1;
      if (v25 + 1 >= v52)
        goto LABEL_36;
      v27 = v53[v13];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v52)
        {
LABEL_36:
          swift_release(v5);
          v3 = v51;
          if ((v55 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v27 = v53[v28];
        if (!v27)
        {
          while (1)
          {
            v13 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_45;
            if (v13 >= v52)
              goto LABEL_36;
            v27 = v53[v13];
            ++v28;
            if (v27)
              goto LABEL_25;
          }
        }
        v13 = v28;
      }
    }
LABEL_25:
    v11 = (v27 - 1) & v27;
    v17 = __clz(__rbit64(v27)) + (v13 << 6);
    if ((v55 & 1) != 0)
    {
LABEL_13:
      v18 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v19 = *(_QWORD *)(v5 + 56) + 224 * v17;
      v69 = *(_OWORD *)v19;
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      v22 = *(_QWORD *)(v19 + 32);
      v23 = *(_QWORD *)(v19 + 56);
      v56 = *(_OWORD *)(v19 + 40);
      v57 = *(_OWORD *)(v19 + 64);
      v58 = *(_OWORD *)(v19 + 80);
      v24 = *(_BYTE *)(v19 + 96);
      v59 = *(_BYTE *)(v19 + 97);
      v62 = *(_OWORD *)(v19 + 136);
      v63 = *(_OWORD *)(v19 + 120);
      v61 = *(_OWORD *)(v19 + 152);
      v60 = *(_QWORD *)(v19 + 168);
      v65 = *(_OWORD *)(v19 + 104);
      v66 = *(_OWORD *)(v19 + 176);
      v64 = *(_OWORD *)(v19 + 192);
      v67 = *(_QWORD *)(v19 + 208);
      v68 = *(_BYTE *)(v19 + 216);
      goto LABEL_27;
    }
LABEL_26:
    v29 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v30 = (__int128 *)(*(_QWORD *)(v5 + 56) + 224 * v17);
    v31 = v30[1];
    v70 = *v30;
    v71 = v31;
    v32 = v30[5];
    v34 = v30[2];
    v33 = v30[3];
    v73 = v30[4];
    v74 = v32;
    *(_OWORD *)v72 = v34;
    *(_OWORD *)&v72[16] = v33;
    v35 = v30[9];
    v37 = v30[6];
    v36 = v30[7];
    *(_OWORD *)&v75[32] = v30[8];
    *(_OWORD *)&v75[48] = v35;
    *(_OWORD *)v75 = v37;
    *(_OWORD *)&v75[16] = v36;
    v39 = v30[11];
    v38 = v30[12];
    v41 = v30[10];
    *(_OWORD *)&v77[9] = *(__int128 *)((char *)v30 + 201);
    v40 = *(_OWORD *)&v77[9];
    v76 = v39;
    *(_OWORD *)v77 = v38;
    *(_OWORD *)&v75[64] = v41;
    v69 = v70;
    v68 = HIBYTE(v40);
    v67 = v40 >> 56;
    v65 = *(_OWORD *)&v75[8];
    v66 = v39;
    v63 = *(_OWORD *)&v75[24];
    v64 = v38;
    v61 = *(_OWORD *)&v75[56];
    v62 = *(_OWORD *)&v75[40];
    v60 = *((_QWORD *)&v41 + 1);
    v59 = v75[1];
    v24 = v75[0];
    v57 = v73;
    v58 = v74;
    v23 = *(_QWORD *)&v72[24];
    v56 = *(_OWORD *)&v72[8];
    v21 = *((_QWORD *)&v71 + 1);
    v22 = *(_QWORD *)v72;
    v20 = v71;
    v18 = v29;
    sub_1002EB2E0(&v70);
LABEL_27:
    v42 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v43 = -1 << *(_BYTE *)(v8 + 32);
    v44 = v42 & ~v43;
    v45 = v44 >> 6;
    if (((-1 << v44) & ~*(_QWORD *)(v12 + 8 * (v44 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v44) & ~*(_QWORD *)(v12 + 8 * (v44 >> 6)))) | v44 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v46 = 0;
      v47 = (unint64_t)(63 - v43) >> 6;
      do
      {
        if (++v45 == v47 && (v46 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v48 = v45 == v47;
        if (v45 == v47)
          v45 = 0;
        v46 |= v48;
        v49 = *(_QWORD *)(v12 + 8 * v45);
      }
      while (v49 == -1);
      v14 = __clz(__rbit64(~v49)) + (v45 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v18;
    v15 = *(_QWORD *)(v8 + 56) + 224 * v14;
    *(_OWORD *)v15 = v69;
    *(_QWORD *)(v15 + 16) = v20;
    *(_QWORD *)(v15 + 24) = v21;
    *(_QWORD *)(v15 + 32) = v22;
    *(_OWORD *)(v15 + 40) = v56;
    *(_QWORD *)(v15 + 56) = v23;
    *(_OWORD *)(v15 + 64) = v57;
    *(_OWORD *)(v15 + 80) = v58;
    *(_BYTE *)(v15 + 96) = v24;
    *(_BYTE *)(v15 + 97) = v59;
    *(_OWORD *)(v15 + 104) = v65;
    *(_OWORD *)(v15 + 120) = v63;
    *(_OWORD *)(v15 + 136) = v62;
    *(_OWORD *)(v15 + 152) = v61;
    *(_QWORD *)(v15 + 168) = v60;
    *(_OWORD *)(v15 + 176) = v66;
    *(_OWORD *)(v15 + 192) = v64;
    *(_QWORD *)(v15 + 208) = v67;
    *(_BYTE *)(v15 + 216) = v68;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v51;
  v26 = v53;
  if ((v55 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v50 = 1 << *(_BYTE *)(v5 + 32);
  if (v50 >= 64)
    bzero(v26, ((unint64_t)(v50 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v50;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10001E8A0(uint64_t a1, char a2, id a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  _BYTE *v12;
  uint64_t v13;
  char v14;
  char *v15;
  uint64_t v16;
  _BOOL4 v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  id v23;
  _QWORD v24[4];
  char *v25;
  void *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;

  v28 = a4;
  v29 = a5;
  v30 = a6;
  v26 = a7;
  v31 = a7;
  v12 = objc_msgSend(a3, "dataSource");
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight];
  v14 = v12[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight + 8];

  if ((v14 & 1) != 0 || v13 != a1)
  {
    if ((a2 & 1) != 0)
    {
      v15 = (char *)objc_msgSend(a3, "dataSource");
      v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

      v17 = v16 != a1;
    }
    else
    {
      v17 = 0;
    }
    v18 = (char *)objc_msgSend(a3, "dataSource");
    v19 = &v18[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight];
    *(_QWORD *)v19 = a1;
    v19[8] = 0;
    v20 = swift_allocObject(&unk_1005E6210, 24, 7);
    *(_QWORD *)(v20 + 16) = v18;
    v25 = v18;
    if (v17
      && (v21 = objc_msgSend(a3, "internalNavigationController"),
          v22 = sub_10008666C(),
          v21,
          v22))
    {

      v23 = objc_msgSend(a3, "internalNavigationController");
      __chkstk_darwin(v23);
      v24[2] = sub_1003C3E7C;
      v24[3] = &v27;
      sub_1003C0788(sub_10010DF60, v24, (void (*)(uint64_t))sub_1003C3E8C, v20);

      swift_release(v20);
    }
    else
    {
      sub_100032598(a5, a6 & 1, v26);
      swift_release(v20);
      *(_QWORD *)v19 = 0;
      v19[8] = 1;

    }
  }
}

uint64_t sub_10001EAC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 73, 7);
}

uint64_t sub_10001EB08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10001EB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UICellAccessory(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10001EBA4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10001EBD4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001EC08()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001EC34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10001EC68(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, a2, 7);
}

uint64_t sub_10001ECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10001ED2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10006922C(&qword_100657720);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10001ED90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10001EDC4(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 40));
  return swift_deallocObject(v1, a1, 7);
}

void sub_10001EE68()
{
  void *v0;
  void *v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  char *v8;
  void *v9;
  id *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  double v22;
  void *v23;
  _QWORD v24[4];
  _BYTE v25[24];
  _BYTE v26[24];

  v1 = v0;
  v2 = (char *)objc_msgSend(v0, "dataSource");
  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v26, 0, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(v4);

  v24[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v17 = v4;
    else
      v17 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v5)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v4);
    v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v4);
  if (!v5)
    goto LABEL_18;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v8 = (char *)*(id *)(v4 + 8 * i + 32);
    v9 = v8;
    v10 = (id *)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v25, 0, 0);
    v11 = *v10;
    v12 = *v10;

    if (v11)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v15 = *(_QWORD *)((v24[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v14 = *(_QWORD *)((v24[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v15 >= v14 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
      specialized Array._endMutation()(v7);
    }
  }
  swift_bridgeObjectRelease(v4);
  v16 = (_QWORD *)v24[0];
LABEL_19:
  swift_bridgeObjectRelease(v4);
  Notification.object.getter(v24, v18);
  if (v24[3])
  {
    v19 = type metadata accessor for DOCBrowserContainedViewController();
    if ((swift_dynamicCast(&v23, v24, (char *)&type metadata for Any + 8, v19, 6) & 1) != 0)
    {
      v20 = v23;
      v21 = sub_1000897C4((uint64_t)v23, (uint64_t)v16);
      *(_QWORD *)&v22 = swift_bridgeObjectRelease(v16).n128_u64[0];
      if ((v21 & 1) != 0)
      {
        objc_msgSend(v1, "loadViewIfNeeded", v22);
        objc_msgSend(v1, "activateContainerViewControllersIfNeeded");

        return;
      }

    }
    else
    {
      swift_bridgeObjectRelease(v16);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    sub_10000CB4C((uint64_t)v24, &qword_100642730);
  }
  if (qword_100640D70 != -1)
    swift_once(&qword_100640D70, sub_10009EF70);
  if ((byte_100644180 & 1) == 0)
    objc_msgSend(v1, "loadViewIfNeeded");
}

void sub_10001F13C()
{
  unsigned __int8 *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  v1 = sub_10008FCA4();
  objc_msgSend(v1, "setEnabled:", v0[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_enabled]);

  v2 = sub_10008FCA4();
  objc_msgSend(v0, "addGestureRecognizer:", v2);

  sub_100090380(objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v0));
  v3 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[v3], "setHidden:", 1);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v3]);
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004DAC10;
  v7 = objc_msgSend(*(id *)&v0[v3], "leadingAnchor");
  v8 = objc_msgSend(v0, "leadingAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(*(id *)&v0[v3], "trailingAnchor");
  v11 = objc_msgSend(v0, "trailingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_msgSend(*(id *)&v0[v3], "topAnchor");
  v14 = objc_msgSend(v0, "topAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v6 + 48) = v15;
  v16 = objc_msgSend(*(id *)&v0[v3], "bottomAnchor");
  v17 = objc_msgSend(v0, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v6 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v4, "activateConstraints:", isa);

}

char *sub_10001F428()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  _QWORD *v7;
  char *v8;
  id v9;
  _QWORD *v10;

  v1 = objc_msgSend(v0, "viewIfLoaded");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "window");

  if (!v3)
    return 0;
  v4 = objc_msgSend(v0, "presentingViewController");
  if (v4
    && (v5 = v4,
        v6 = objc_msgSend(v4, "presentedViewController"),
        v5,
        v6))
  {
    v7 = sub_1000092F8(v6, v6);
    v8 = sub_1003186B0();
    swift_release(v7);

    v3 = v6;
  }
  else
  {
    v9 = objc_msgSend(v3, "rootViewController");
    v10 = sub_1000092F8(v3, v9);

    v8 = sub_1003186B0();
    swift_release(v10);
  }

  return v8;
}

_QWORD *sub_10001F54C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[32];
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      sub_100069BD8(v4, (uint64_t)v10);
      v5 = sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
      v6 = swift_dynamicCast(&v11, v10, (char *)&type metadata for Any + 8, v5, 7);
      v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 32;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

id sub_10001F69C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v6[4];

  v1 = objc_msgSend(v0, "splitViewController");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v0, "enclosingTabSwitcherStyle"))
    {
      v3 = objc_msgSend(v0, "traitCollection");
      __chkstk_darwin(v3);
      v6[2] = v2;
      v4 = UITraitCollection.modifyingTraits(_:)(sub_10009B8C0, v6);

      return (id)v4;
    }

  }
  return objc_msgSend(v0, "traitCollection");
}

void sub_10001F780(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  BOOL v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (char *)(v19 + 224 * v3);
            v21 = (char *)(v19 + 224 * v6);
            if (224 * v3 < (uint64_t)(224 * v6) || v20 >= v21 + 224 || (v22 = v3 == v6, v3 = v6, !v22))
            {
              memmove(v20, v21, 0xE0uLL);
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t type metadata accessor for DOCNodeCollection()
{
  return objc_opt_self(_TtC5Files17DOCNodeCollection);
}

void destroy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);

}

void sub_10001F9A8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double *v17;
  double v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  id v26;
  id v27;

  v1 = v0;
  v2 = sub_100090E0C();
  objc_msgSend(v1, "addSubview:", v2);

  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004DAC10;
  v6 = sub_100090E0C();
  v7 = objc_msgSend(v6, "leadingAnchor");

  v8 = objc_msgSend(v1, "leadingAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = sub_100090E0C();
  v11 = objc_msgSend(v10, "trailingAnchor");

  v12 = objc_msgSend(v1, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v5 + 40) = v13;
  v14 = sub_100090E0C();
  v15 = objc_msgSend(v14, "topAnchor");

  v16 = objc_msgSend(v1, "topAnchor");
  v17 = (double *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics];
  v18 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics];
  v19 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, v18);

  *(_QWORD *)(v5 + 48) = v19;
  v20 = sub_100090E0C();
  v21 = objc_msgSend(v20, "bottomAnchor");

  v22 = objc_msgSend(v1, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -v18);

  *(_QWORD *)(v5 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v26 = sub_100090E0C();
  objc_msgSend(v26, "setDirectionalLayoutMargins:", v17[3], v17[2], v17[3], v17[2]);

  v27 = sub_100090E0C();
  objc_msgSend(v27, "setLayoutMarginsRelativeArrangement:", 1);

}

id sub_10001FCAC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  id result;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(__int128 *, _QWORD);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(__int128 *, _QWORD);
  uint64_t v39;
  void (*v40)(__int128 *, _QWORD);
  uint64_t v41;
  void (*v42)(__int128 *, _QWORD);
  uint64_t v43;
  void (*v44)(__int128 *, _QWORD);
  uint64_t v45;
  void (*v46)(__int128 *, _QWORD);
  uint64_t v47;
  void (*v48)(__int128 *, _QWORD);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  __int128 v60;
  uint64_t v61;
  objc_super v62;
  __int128 v63;
  objc_class *v64;

  v58 = sub_10006922C(&qword_100657840);
  v1 = *(_QWORD *)(v58 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  v3 = __chkstk_darwin(v58);
  v54 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v49 - v4;
  v57 = sub_10006922C(&qword_100657848);
  v6 = *(_QWORD *)(v57 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v57);
  v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - v9;
  v11 = swift_allocObject(&unk_1005F0430, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  v12 = type metadata accessor for DOCSidebarItemCell(0);
  v56 = v10;
  UICollectionView.CellRegistration.init(handler:)(sub_100494268, v11, v12, &_s11OutlineItemVN);
  v13 = swift_allocObject(&unk_1005F0430, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = type metadata accessor for DOCSidebarHeaderCell(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100494270, v13, v14, &_s11OutlineItemVN);
  v15 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v55 = v0;
  v62.receiver = v0;
  v62.super_class = v15;
  result = objc_msgSendSuper2(&v62, "collectionView");
  v52 = result;
  if (result)
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    v18 = v54;
    v50 = v5;
    v19 = v5;
    v20 = v58;
    v17(v54, v19, v58);
    v21 = v53;
    v22 = v57;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v53, v56, v57);
    v23 = *(unsigned __int8 *)(v1 + 80);
    v24 = (v23 + 16) & ~v23;
    v25 = *(unsigned __int8 *)(v6 + 80);
    v26 = (v2 + v25 + v24) & ~v25;
    v27 = swift_allocObject(&unk_1005F0458, v26 + v7, v23 | v25 | 7);
    v51 = v1;
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v27 + v24, v18, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v27 + v26, v21, v22);
    v28 = swift_allocObject(&unk_1005F0480, 32, 7);
    *(_QWORD *)(v28 + 16) = sub_100494334;
    *(_QWORD *)(v28 + 24) = v27;
    v29 = (objc_class *)sub_10006922C((uint64_t *)&unk_1006455F0);
    v30 = objc_allocWithZone(v29);
    v31 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v52, sub_1004943E0, v28);
    v64 = v29;
    *(_QWORD *)&v63 = v31;
    v32 = (uint64_t)&v55[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
    swift_beginAccess(&v55[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource], &v60, 33, 0);
    sub_10007EB94((uint64_t)&v63, v32);
    swift_endAccess(&v60);
    result = (id)sub_1000271D4(v32, (uint64_t)&v60, &qword_100642730);
    if (v61)
    {
      sub_100079B28(&v60, &v63);
      swift_dynamicCast(&v59, &v63, (char *)&type metadata for Any + 8, v29, 7);
      v33 = v59;
      v34 = swift_allocObject(&unk_1005F0430, 24, 7);
      swift_unknownObjectWeakInit(v34 + 16);
      v35 = (void (*)(__int128 *, _QWORD))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify(&v63);
      v36 = sub_10006922C(&qword_100657850);
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldExpandItem.setter(sub_10049441C, v34, v36);
      v35(&v63, 0);
      v37 = swift_allocObject(&unk_1005F0430, 24, 7);
      swift_unknownObjectWeakInit(v37 + 16);
      v38 = (void (*)(__int128 *, _QWORD))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify(&v63);
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldCollapseItem.setter(sub_10049443C, v37, v36);
      v38(&v63, 0);
      v39 = swift_allocObject(&unk_1005F0430, 24, 7);
      swift_unknownObjectWeakInit(v39 + 16);
      v40 = (void (*)(__int128 *, _QWORD))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify(&v63);
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willExpandItem.setter(sub_10049445C, v39, v36);
      v40(&v63, 0);
      v41 = swift_allocObject(&unk_1005F0430, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16);
      v42 = (void (*)(__int128 *, _QWORD))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify(&v63);
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willCollapseItem.setter(sub_10049448C, v41, v36);
      v42(&v63, 0);
      v43 = swift_allocObject(&unk_1005F0430, 24, 7);
      swift_unknownObjectWeakInit(v43 + 16);
      v44 = (void (*)(__int128 *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(&v63);
      v45 = sub_10006922C(&qword_100657858);
      UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(sub_1004944BC, v43, v45);
      v44(&v63, 0);
      v46 = (void (*)(__int128 *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(&v63);
      UICollectionViewDiffableDataSource.ReorderingHandlers.willReorder.setter(DOCSplitBrowserViewController.didCommitPreview(of:), 0, v45);
      v46(&v63, 0);
      v47 = swift_allocObject(&unk_1005F0430, 24, 7);
      swift_unknownObjectWeakInit(v47 + 16);
      v48 = (void (*)(__int128 *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(&v63);
      UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(sub_1004944C4, v47, v45);
      v48(&v63, 0);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v58);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v56, v57);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100020270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double (*v35)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double (*v41)(void (*)(void *), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v42;
  __n128 v43;
  _BYTE v45[24];
  _BYTE v46[24];
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  char v50[24];
  id v51[3];
  uint64_t v52;
  _UNKNOWN **v53;

  v3 = v2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 48, a2);
  if (Strong)
  {
    v51[0] = Strong;
    KeyPath = swift_getKeyPath(&unk_1004DA318);
    v6 = swift_allocObject(&unk_1005C30D0, 24, 7);
    swift_weakInit(v6 + 16, v2);
    v7 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_1000E859C, v6, &protocol witness table for NSObject);
    swift_release(KeyPath);
    swift_release(v6);

  }
  else
  {
    v7 = 0;
  }
  v8 = *(void **)(v3 + 136);
  *(_QWORD *)(v3 + 136) = v7;

  swift_beginAccess(v3 + 56, v50, 0, 0);
  sub_1000923F4(v3 + 56, (uint64_t)v51);
  v9 = v52;
  sub_10009236C((uint64_t)v51);
  if (!v9)
  {
    v10 = *(void **)(v3 + 32);
    v11 = type metadata accessor for DOCFileProviderSyncStateProvider();
    swift_allocObject(v11, 64, 7);
    v12 = v10;
    v13 = (void *)sub_100489428(v12, 1);

    v52 = v11;
    v53 = &off_1005EFDD8;
    v51[0] = v13;
    sub_10009243C((uint64_t)v51, (uint64_t)v47);
    swift_beginAccess(v3 + 56, v46, 33, 0);
    sub_1000923AC((uint64_t)v47, v3 + 56);
    swift_endAccess(v46);
  }
  swift_beginAccess(v3 + 96, v46, 0, 0);
  sub_1000923F4(v3 + 96, (uint64_t)v51);
  v14 = v52;
  sub_10009236C((uint64_t)v51);
  if (!v14)
  {
    v15 = *(void **)(v3 + 32);
    v16 = type metadata accessor for DOCFileProviderSyncStateProvider();
    swift_allocObject(v16, 64, 7);
    v17 = v15;
    v18 = (void *)sub_100489428(v17, 1);

    v52 = v16;
    v53 = &off_1005EFDD8;
    v51[0] = v18;
    sub_10009243C((uint64_t)v51, (uint64_t)v47);
    swift_beginAccess(v3 + 96, v45, 33, 0);
    sub_1000923AC((uint64_t)v47, v3 + 96);
    swift_endAccess(v45);
  }
  v20 = sub_10008EBB0((uint64_t)v51);
  if (*(_QWORD *)(v19 + 24))
  {
    v21 = v19;
    v22 = swift_allocObject(&unk_1005C30D0, 24, 7);
    swift_weakInit(v22 + 16, v3);
    v23 = *(_QWORD *)(v21 + 24);
    v24 = *(_QWORD *)(v21 + 32);
    sub_10007E7C8(v21, v23);
    (*(void (**)(uint64_t (*)(), uint64_t, uint64_t))(*(_QWORD *)(v24 + 8) + 24))(sub_1000E85BC, v22, v23);
  }
  ((void (*)(id *, _QWORD))v20)(v51, 0);
  v26 = sub_10008EBB0((uint64_t)v51);
  if (*(_QWORD *)(v25 + 24))
  {
    v27 = v25;
    v28 = swift_allocObject(&unk_1005C30D0, 24, 7);
    swift_weakInit(v28 + 16, v3);
    v29 = *(_QWORD *)(v27 + 24);
    v30 = *(_QWORD *)(v27 + 32);
    sub_10007E7C8(v27, v29);
    (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v30 + 32))(sub_10008E800, v28, v29, v30);
  }
  ((void (*)(id *, _QWORD))v26)(v51, 0);
  sub_1000923F4(v3 + 56, (uint64_t)v51);
  if (v52)
  {
    sub_100092328((uint64_t)v51, (uint64_t)v47);
    sub_10009236C((uint64_t)v51);
    v31 = v48;
    v32 = v49;
    sub_10007E7A0(v47, v48);
    v33 = swift_allocObject(&unk_1005C30D0, 24, 7);
    swift_weakInit(v33 + 16, v3);
    v34 = *(_QWORD *)(v32 + 8);
    v35 = *(double (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v34 + 8);
    v36 = swift_retain();
    v37.n128_f64[0] = v35(sub_10008EAC4, v33, v31, v34, v36);
    swift_release_n(v33, 2, v37);
    sub_100068588(v47);
  }
  else
  {
    sub_10009236C((uint64_t)v51);
  }
  sub_1000923F4(v3 + 56, (uint64_t)v51);
  if (!v52)
    return sub_10009236C((uint64_t)v51);
  sub_100092328((uint64_t)v51, (uint64_t)v47);
  sub_10009236C((uint64_t)v51);
  v38 = v48;
  v39 = v49;
  sub_10007E7A0(v47, v48);
  v40 = swift_allocObject(&unk_1005C30D0, 24, 7);
  swift_weakInit(v40 + 16, v3);
  v41 = *(double (**)(void (*)(void *), uint64_t, uint64_t, uint64_t, __n128))(v39 + 16);
  v42 = swift_retain();
  v43.n128_f64[0] = v41(sub_10008E57C, v40, v38, v39, v42);
  swift_release_n(v40, 2, v43);
  return sub_100068588(v47);
}

uint64_t sub_1000206E8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644960);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_100020844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "effectiveSearchController");

    if (v5)
    {
      v6 = type metadata accessor for DOCPlaceholderSearchController();
      if ((objc_msgSend(v5, "isKindOfClass:", swift_getObjCClassFromMetadata(v6)) & 1) == 0)
      {
        swift_beginAccess(v1, &v11, 0, 0);
        v8 = swift_unknownObjectWeakLoadStrong(v1, v7);
        if (v8)
        {
          v9 = (void *)v8;
          v10 = sub_100083AE8();

          objc_msgSend(v10, "signal");
        }
      }

    }
  }
}

void sub_100020920()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  objc_class *v29;
  objc_class *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  __n128 v39;
  id v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  __n128 v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  objc_super v66;
  objc_super v67;
  _BYTE v68[24];

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v62 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  v5 = __chkstk_darwin(v4);
  v64 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v56 - v7;
  v63 = v2;
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v65 = v1;
  v9((char *)&v56 - v7, 1, 1, v1);
  v10 = (uint64_t)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath], v68, 33, 0);
  sub_1000B33AC((uint64_t)v8, v10);
  swift_endAccess(v68);
  v11 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem];
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 8];
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 16];
  v14 = v11;
  v15 = v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24];
  v16 = v12;
  v17 = v13;
  v18 = v15;
  if (v15 == 255)
  {
    v14 = sub_10004DB48();
    v17 = v19;
    v18 = v20;
  }
  v21 = v11;
  v22 = v16;
  sub_1000B1650(v21, v12, v13, v15);
  v23 = v14;
  sub_1000A3814(v14, v22, v17, v18, (uint64_t)v8);
  swift_beginAccess(v10, v68, 33, 0);
  sub_1000B33AC((uint64_t)v8, v10);
  swift_endAccess(v68);
  v24 = v64;
  sub_1000271D4(v10, v64, (uint64_t *)&unk_100642710);
  v25 = v63;
  v26 = v65;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v24, 1, v65) == 1)
  {
    sub_1000B1664(v23, v22, v17, v18);
    sub_10000CB4C(v24, (uint64_t *)&unk_100642710);
    return;
  }
  v57 = v10;
  v58 = v8;
  v59 = v23;
  v60 = v22;
  v61 = v17;
  v27 = v25;
  v28 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v62, v24, v26);
  v29 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v67.receiver = v0;
  v67.super_class = v29;
  v30 = v29;
  v31 = objc_msgSendSuper2(&v67, "collectionView");
  if (!v31)
  {
    __break(1u);
    goto LABEL_22;
  }
  v32 = v31;
  v33 = v26;
  v34 = type metadata accessor for DOCSidebarCollectionView();
  v35 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v32, v34, 0, 0, 0), "indexPathsForSelectedItems");

  if (!v35)
  {
    sub_1000B1664(v59, v60, v61, v18);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v33);
    return;
  }
  LODWORD(v64) = v18;
  v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v33);

  __chkstk_darwin(v37);
  *(&v56 - 2) = (uint64_t)v28;
  v38 = sub_100062898((uint64_t (*)(char *))sub_1003E6DC4, (_BOOL8)(&v56 - 4), v36);
  v39 = swift_bridgeObjectRelease(v36);
  if (!v38)
  {
    (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v28, v33, v39);
LABEL_19:
    sub_1000B1664(v59, v60, v61, v64);
    return;
  }
  v66.receiver = v0;
  v66.super_class = v30;
  v40 = objc_msgSendSuper2(&v66, "collectionView", v39.n128_f64[0]);
  if (!v40)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v41 = v40;
  objc_msgSend((id)swift_dynamicCastClassUnconditional(v40, v34, 0, 0, 0), "setSelectionFollowsFocus:", 1);

  v42 = (uint64_t)v58;
  sub_1000271D4(v57, (uint64_t)v58, (uint64_t *)&unk_100642710);
  v43 = sub_1003E22D4(v42);
  sub_10000CB4C(v42, (uint64_t *)&unk_100642710);
  v45 = v62;
  if (!v43)
  {
    (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v62, v33, v44);
    goto LABEL_19;
  }
  v46 = (char *)sub_1003E4A2C(v43);
  if ((_BYTE)v49 != 0xFF)
  {
    v50 = v46;
    v51 = v47;
    v52 = v48;
    v53 = v49;
    v54 = sub_1003E5428(v43);
    if (v54)
    {
      v55 = v54;
      sub_10048FD74(v43, v50, v51, v52, v53, (uint64_t)v54);
      swift_unknownObjectRelease(v55);
    }
    sub_1000B1664(v50, v51, v52, v53);
  }

  sub_1000B1664(v59, v60, v61, v64);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v45, v33);
}

id sub_100020F18()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  objc_super v32;

  v1 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID];
  v9 = v0;
  v10 = UUID.init()(v9);
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = sub_100087794(6, v11, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease(v13);
  v21 = static String._fromSubstring(_:)(v14, v16, v18, v20);
  v23 = v22;
  swift_bridgeObjectRelease(v20);
  *v8 = v21;
  v8[1] = v23;
  v24 = OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state;
  v25 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v3, 1, 1, v25);
  v26 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(_QWORD *)&v3[*(int *)(v26 + 20)] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[*(int *)(v26 + 24)] = _swiftEmptyArrayStorage;
  v27 = &v3[*(int *)(v1 + 20)];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v28 = sub_10006922C(&qword_100655BE8);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  *(_QWORD *)&v9[v24] = DOCThreadSafeState.init(_:)(v3);
  v29 = OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_itemManager;
  *(_QWORD *)&v9[v29] = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");

  v30 = (objc_class *)type metadata accessor for _DOCBrowserHistoryDataSourceBase();
  v32.receiver = v9;
  v32.super_class = v30;
  return objc_msgSendSuper2(&v32, "init");
}

uint64_t sub_10002111C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  unsigned __int8 v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  Swift::String v34;
  unint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  unint64_t v39;

  v37[1] = a2;
  v5 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v5);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DOCBrowserHistoryItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v37 - v13;
  v15 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v16 = *(int *)(v15 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v16));
  *(_QWORD *)(a1 + v16) = _swiftEmptyArrayStorage;
  sub_1000271D4(a1, (uint64_t)v7, &qword_10064A600);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10000CB4C((uint64_t)v7, &qword_10064A600);
  }
  else
  {
    sub_1001D0788((uint64_t)v7, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
    sub_10007C6DC((uint64_t)v14, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
    v17 = *(int *)(v15 + 20);
    v18 = *(_QWORD *)(a1 + v17);
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
      v18 = sub_100081B5C(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
    v20 = *(_QWORD *)(v18 + 16);
    v19 = *(_QWORD *)(v18 + 24);
    if (v20 >= v19 >> 1)
      v18 = sub_100081B5C(v19 > 1, v20 + 1, 1, v18);
    *(_QWORD *)(v18 + 16) = v20 + 1;
    sub_1001D0788((uint64_t)v12, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v20, type metadata accessor for DOCBrowserHistoryItem);
    *(_QWORD *)(a1 + v17) = v18;
    sub_10007C720((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  }
  v38 = 0x203A676E69646461;
  v39 = 0xE800000000000000;
  v21 = *(void **)(a3 + *(int *)(v8 + 32));
  v22 = *(id *)(a3 + *(int *)(v8 + 20));
  v23 = v21;
  v24 = sub_1000868F0();
  if (v25 != 255)
  {
    v26 = v24;
    if (v25 == 2)
    {
      v27 = objc_msgSend(v23, "displayName");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      sub_100086998(v26, 2u);
      goto LABEL_15;
    }
    sub_100086998(v24, v25);
  }
  v31 = objc_msgSend(v22, "displayName");
  if (v31)
  {
    v32 = v31;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v30 = v33;

  }
  else
  {

    v28 = 0;
    v30 = (void *)0xE000000000000000;
  }
LABEL_15:
  v34._countAndFlagsBits = v28;
  v34._object = v30;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v30);
  v35 = v39;
  sub_1000542B0(v38, v39);
  swift_bridgeObjectRelease(v35);
  sub_10000CB4C(a1, &qword_10064A600);
  sub_10007C6DC(a3, a1, type metadata accessor for DOCBrowserHistoryItem);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
}

uint64_t sub_1000214B8(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  BOOL *v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;
  _BYTE v11[24];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = (BOOL *)&v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout], v11, 33, 0);
  *((_QWORD *)v4 + 5) = &off_1005D1A10;
  swift_unknownObjectWeakAssign(v4 + 32, v2);
  v5 = *(double *)&v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight];
  *((double *)v4 + 1) = v5;
  *v4 = v5 > 0.0;
  *((_QWORD *)v4 + 2) = 0;
  *((_QWORD *)v4 + 3) = 0;
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v10, "prepareLayout");
  *((double *)v4 + 2) = sub_10003FC44((uint64_t)v6, v7);
  *((_QWORD *)v4 + 3) = v8;
  return swift_endAccess(v11);
}

void sub_10002156C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  unint64_t v28;
  uint64_t v29;
  char **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Logger.Enumeration.unsafeMutableAddressor(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  v11 = v2;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v32 = v5;
    v33 = a1;
    v34 = a2;
    v14 = swift_slowAlloc(32, -1);
    v30 = (char **)swift_slowAlloc(8, -1);
    v31 = swift_slowAlloc(64, -1);
    v36 = v31;
    *(_DWORD *)v14 = 136446722;
    v15 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v15)
    {

      __break(1u);
      return;
    }
    v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v35 = sub_1000544FC(v16, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v14 + 12) = 2082;
    v35 = sub_1000544FC(0xD000000000000032, 0x80000001005126F0, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    *(_WORD *)(v14 + 22) = 2112;
    v35 = (uint64_t)v11;
    v17 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    v18 = v30;
    *v30 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v14, 0x20u);
    v19 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v18, 1, v19);
    swift_slowDealloc(v18, -1, -1);
    v20 = v31;
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v32);
    a1 = v33;
    a2 = v34;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  v22 = &v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate], v21);
  if (Strong)
  {
    v25 = Strong;
    v26 = *((_QWORD *)v22 + 1);
    ObjectType = swift_getObjectType(Strong, v24);
    v28 = sub_10008AFC4((uint64_t)_swiftEmptyArrayStorage);
    (*(void (**)(char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v26 + 48))(v11, a1, v28, a2, ObjectType, v26);
    swift_bridgeObjectRelease(v28);
    swift_unknownObjectRelease(v25);
  }
}

void sub_100021890(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for Logger(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_100021950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)sub_1000219C4 + 4 * byte_1004E5BF8[v2]))(0x6E69726165707061, a2, 0x6165707061736964);
}

void sub_1000219C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (a1 == 0x6E69726165707061 && v4 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease_n(0xE900000000000067, 2);
  }
  else
  {
    *(_QWORD *)(v5 - 104) = v1;
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v4, 0x6E69726165707061, 0xE900000000000067, 0);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(0xE900000000000067);
    if ((v6 & 1) == 0)
    {
      *(_BYTE *)(v2 + 17) = 0;
      __asm { BR              X10 }
    }
  }
}

void sub_100022A04(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD), void *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t Strong;
  char *v45;
  char *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  char v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  id v64;
  id v65;
  _QWORD *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t ObjectType;
  int v71;
  uint64_t v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  char *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  void **v84;
  id v85;
  void *v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  NSString v95;
  id v96;
  uint64_t v97;
  NSString v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  char *v103;
  void (*v104)(_BYTE *, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  void **v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  char *v118;
  _BYTE *v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  _BOOL4 v123;
  char *v124;
  uint64_t v125;
  void **v126;
  id v127;
  void *v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  char *v133;
  id v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  void **v150;
  void *v151;
  id v152;
  char v153;
  uint64_t v154;
  _BYTE *v155;
  id v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  void **v160;
  void *v161;
  id v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  id v167;
  NSObject *v168;
  os_log_type_t v169;
  uint64_t v170;
  void **v171;
  void *v172;
  id v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  int v177;
  _BYTE *v178;
  int v179;
  _UNKNOWN **v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  _BYTE *v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  uint8_t *v192;
  void **v193;
  id v194;
  void *v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  _BYTE *v199;
  NSObject *v200;
  os_log_type_t v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  _BYTE *v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  unint64_t v210;
  void **v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  _QWORD *v216;
  id v217;
  void (*v218)(void);
  void *v219;
  id v220;
  _BYTE *v221;
  uint64_t v222;
  void *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _BYTE *v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  void *v231;
  uint64_t v232;
  id v233;
  _BYTE *v234;
  uint64_t v235;
  NSObject *v236;
  os_log_type_t v237;
  uint64_t v238;
  _QWORD *v239;
  id v240;
  id v241;
  uint64_t v242;
  unint64_t v243;
  unint64_t v244;
  char *v245;
  uint64_t v246;
  void **v247;
  id v248;
  void *v249;
  uint64_t v250;
  _QWORD *v251;
  id v252;
  char *v253;
  void *v254;
  _QWORD *v255;
  id v256;
  id v257;
  id v258;
  void *v259;
  uint64_t v260;
  id v261;
  _QWORD *v262;
  id v263;
  uint64_t v264;
  void *v265;
  _QWORD *v266;
  id v267;
  char *v268;
  _BYTE v269[12];
  int v270;
  id v271;
  uint64_t v272;
  char *v273;
  char *v274;
  id v275;
  _BYTE *v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v279;
  _BYTE *v280;
  uint64_t v281;
  uint64_t v282;
  _BYTE *v283;
  _BYTE *v284;
  _BYTE *v285;
  _BYTE *v286;
  _BYTE *v287;
  void (*v288)(_QWORD, _QWORD, _QWORD);
  _BYTE *v289;
  void **v290;
  void *v291;
  char *v292;
  void (*v293)(void);
  uint64_t v294;
  void **aBlock;
  uint64_t v296;
  void *v297;
  void *v298;
  uint64_t (*v299)();
  _QWORD *v300;
  uint64_t v301;
  _BYTE v302[4];
  _QWORD *v303;
  char v304[8];
  char v305[8];
  char v306[8];
  uint64_t v307;
  uint64_t v308;

  v293 = a6;
  v291 = a5;
  v288 = a4;
  v282 = type metadata accessor for DispatchWorkItemFlags(0);
  v281 = *(_QWORD *)(v282 - 8);
  __chkstk_darwin(v282);
  v280 = &v269[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v279 = type metadata accessor for DispatchQoS(0);
  v278 = *(_QWORD *)(v279 - 8);
  __chkstk_darwin(v279);
  v277 = &v269[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10006922C(&qword_100643470);
  v14 = __chkstk_darwin(v13);
  v16 = &v269[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v283 = &v269[-v18];
  v19 = __chkstk_darwin(v17);
  v21 = &v269[-v20];
  __chkstk_darwin(v19);
  v23 = &v269[-v22];
  v294 = type metadata accessor for Logger(0);
  v292 = *(char **)(v294 - 8);
  v24 = __chkstk_darwin(v294);
  v26 = &v269[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __chkstk_darwin(v24);
  v276 = &v269[-v28];
  v29 = __chkstk_darwin(v27);
  v289 = &v269[-v30];
  v31 = __chkstk_darwin(v29);
  v287 = &v269[-v32];
  v33 = __chkstk_darwin(v31);
  v290 = (void **)&v269[-v34];
  v35 = __chkstk_darwin(v33);
  v285 = &v269[-v36];
  v37 = __chkstk_darwin(v35);
  v39 = &v269[-v38];
  v40 = __chkstk_darwin(v37);
  v286 = &v269[-v41];
  __chkstk_darwin(v40);
  v284 = &v269[-v42];
  a1 += 16;
  swift_beginAccess(a1, v306, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v43);
  if (!Strong)
    return;
  v45 = (char *)Strong;
  v46 = (char *)swift_beginAccess(a2 + 16, v305, 0, 0);
  v47 = *(void **)(a2 + 16);
  if (!v47)
    goto LABEL_8;
  v48 = type metadata accessor for DOCFileProviderSource();
  v46 = (char *)swift_dynamicCastClass(v47, v48);
  if (!v46)
    goto LABEL_8;
  v275 = v47;
  v272 = a7;
  v49 = *(void **)&v45[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  v273 = v45;
  v50 = *(void **)&v45[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
  v274 = v46;
  v51 = swift_dynamicCastClass(v46, v48);
  if (v51 && (v52 = *(void **)(v51 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
  {
    v271 = v50;
    v53 = v52;
    v54 = v275;
    v55 = v49;
    v56 = sub_100087190(v53, (uint64_t)v50);

    if ((v56 & 1) == 0)
    {

      v45 = v273;
LABEL_8:
      v57 = Logger.UI.unsafeMutableAddressor(v46);
      v58 = v292;
      v59 = v294;
      v60 = (*((uint64_t (**)(_BYTE *, uint64_t, uint64_t))v292 + 2))(v26, v57, v294);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v63 = 0;
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "About to resolve the empty location.", v63, 2u);
        swift_slowDealloc(v63, -1, -1);
      }

      (*((void (**)(_BYTE *, uint64_t))v58 + 1))(v26, v59);
      v64 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "defaultLocation");
      sub_100040340();

      return;
    }
  }
  else
  {
    v65 = v275;
  }
  swift_beginAccess(a3 + 16, v304, 0, 0);
  if (*(_BYTE *)(a3 + 16) != 1)
  {
    v88 = v275;
    v89 = v274;
    v90 = objc_msgSend(v274, "identifier");
    v91 = objc_msgSend(v89, "displayName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
    v93 = v92;

    v94 = objc_allocWithZone((Class)DOCConcreteLocation);
    v95 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v93);
    v96 = objc_msgSend(v94, "initWithSourceIdentifier:title:", v90, v95);

    v97 = objc_opt_self(DOCPickerSource);
    objc_msgSend(v96, "setIsFPV2:", swift_dynamicCastObjCClass(v89, v97) == 0);
    v98 = objc_msgSend(v89, "promptText");
    if (!v98)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v100 = v99;
      v98 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v100);
    }
    objc_msgSend(v96, "setPromptText:", v98);

    v101 = v88;
    ((void (*)(id, id))v293)(v96, v89);

    goto LABEL_69;
  }
  v66 = (_QWORD *)swift_allocObject(&unk_1005CF820, 24, 7);
  v67 = v288;
  v66[2] = v288;
  v68 = v291;
  ObjectType = swift_getObjectType(v291, v69);
  v71 = DOCNode.isFINode.getter(ObjectType);
  v271 = v66;
  v270 = v71;
  if ((v71 & 1) != 0)
  {
    v72 = objc_opt_self(FINode);
    v73 = (void *)swift_dynamicCastObjCClassUnconditional(v68, v72, 0, 0, 0);
    v74 = v67;
    swift_unknownObjectRetain(v68);
    v66[2] = sub_1001EE604(v73, v74);

    v75 = *(id *)&v274[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v75)
    {
      v75 = objc_msgSend(v75, "isUsingFPFS");
      if ((_DWORD)v75)
      {
        v76 = Logger.Enumeration.unsafeMutableAddressor(v75);
        v77 = v292;
        v78 = v284;
        v79 = v294;
        v288 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v292 + 2);
        v288(v284, v76, v294);
        v80 = swift_unknownObjectRetain_n(v68, 2);
        v81 = Logger.logObject.getter(v80);
        v82 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(v81, v82))
        {

          swift_unknownObjectRelease_n(v68, 3);
          v131 = (_BYTE *)*((_QWORD *)v77 + 1);
          v132 = ((uint64_t (*)(_BYTE *, uint64_t))v131)(v78, v79);
          v124 = v273;
          v133 = v274;
          v134 = v275;
          v105 = v79;
LABEL_43:
          v104 = (void (*)(_BYTE *, uint64_t, uint64_t))v288;
          goto LABEL_44;
        }
        v83 = swift_slowAlloc(22, -1);
        v84 = (void **)swift_slowAlloc(64, -1);
        aBlock = v84;
        *(_DWORD *)v83 = 136315394;
        v301 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
        *(_WORD *)(v83 + 12) = 2080;
        v85 = objc_msgSend(v73, "fileURL");
        if (v85)
        {
          v86 = v85;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v85);

          v87 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v21, 0, 1, v87);
        }
        else
        {
          v87 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v21, 1, 1, v87);
        }
        sub_100070EDC((uint64_t)v21, (uint64_t)v23, &qword_100643470);
        type metadata accessor for URL(0);
        v146 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v146 + 48))(v23, 1, v87) == 1)
        {
          v147 = 4271950;
          sub_10000CB4C((uint64_t)v23, &qword_100643470);
          v148 = 0xE300000000000000;
        }
        else
        {
          v147 = URL.absoluteString.getter();
          v148 = v149;
          (*(void (**)(_BYTE *, uint64_t))(v146 + 8))(v23, v87);
        }
        v301 = sub_1000544FC(v147, v148, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
        swift_unknownObjectRelease_n(v68, 2);
        swift_bridgeObjectRelease(v148);
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "%s: FPFS Location has an FINode with URL: %s.", (uint8_t *)v83, 0x16u);
        swift_arrayDestroy(v84, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v84, -1, -1);
        swift_slowDealloc(v83, -1, -1);
        swift_unknownObjectRelease(v68);

        v131 = (_BYTE *)*((_QWORD *)v292 + 1);
        v145 = &v307;
LABEL_42:
        v105 = v294;
        v132 = ((uint64_t (*)(_QWORD, uint64_t))v131)(*(v145 - 32), v294);
        v124 = v273;
        v133 = v274;
        v134 = v275;
        goto LABEL_43;
      }
    }
    v117 = Logger.Enumeration.unsafeMutableAddressor(v75);
    v118 = v292;
    v104 = (void (*)(_BYTE *, uint64_t, uint64_t))*((_QWORD *)v292 + 2);
    v119 = v286;
    v105 = v294;
    v104(v286, v117, v294);
    v120 = swift_unknownObjectRetain_n(v68, 4);
    v121 = Logger.logObject.getter(v120);
    v122 = static os_log_type_t.info.getter();
    v123 = os_log_type_enabled(v121, v122);
    v124 = v273;
    if (v123)
    {
      v288 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
      v125 = swift_slowAlloc(32, -1);
      v126 = (void **)swift_slowAlloc(96, -1);
      aBlock = v126;
      *(_DWORD *)v125 = 136315650;
      v301 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
      *(_WORD *)(v125 + 12) = 2080;
      v284 = v73;
      v127 = objc_msgSend(v73, "fileURL");
      if (v127)
      {
        v128 = v127;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v127);

        v129 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v16, 0, 1, v129);
      }
      else
      {
        v129 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v16, 1, 1, v129);
      }
      v135 = v283;
      sub_100070EDC((uint64_t)v16, (uint64_t)v283, &qword_100643470);
      type metadata accessor for URL(0);
      v136 = *(_QWORD *)(v129 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v136 + 48))(v135, 1, v129) == 1)
      {
        v137 = 4271950;
        sub_10000CB4C((uint64_t)v135, &qword_100643470);
        v138 = 0xE300000000000000;
      }
      else
      {
        v137 = URL.absoluteString.getter();
        v138 = v139;
        (*(void (**)(_BYTE *, uint64_t))(v136 + 8))(v135, v129);
      }
      v301 = sub_1000544FC(v137, v138, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
      swift_unknownObjectRelease_n(v68, 2);
      swift_bridgeObjectRelease(v138);
      *(_WORD *)(v125 + 22) = 2080;
      v140 = objc_msgSend(v284, "fpItem");
      v301 = (uint64_t)v140;
      v141 = sub_10006922C(&qword_100647560);
      v142 = Optional.debugDescription.getter(v141);
      v144 = v143;

      v301 = sub_1000544FC(v142, v144, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
      swift_unknownObjectRelease_n(v68, 2);
      swift_bridgeObjectRelease(v144);
      _os_log_impl((void *)&_mh_execute_header, v121, v122, "%s: FPv2 Location has an FINode with URL: %s and FPItem: %s.", (uint8_t *)v125, 0x20u);
      swift_arrayDestroy(v126, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v126, -1, -1);
      swift_slowDealloc(v125, -1, -1);
      swift_unknownObjectRelease(v68);

      v131 = (_BYTE *)*((_QWORD *)v292 + 1);
      v145 = &v308;
      goto LABEL_42;
    }

    swift_unknownObjectRelease_n(v68, 4);
    v131 = (_BYTE *)*((_QWORD *)v118 + 1);
    v132 = ((uint64_t (*)(_BYTE *, uint64_t))v131)(v119, v105);
  }
  else
  {
    v102 = Logger.Enumeration.unsafeMutableAddressor(v67);
    v103 = v292;
    v104 = (void (*)(_BYTE *, uint64_t, uint64_t))*((_QWORD *)v292 + 2);
    v105 = v294;
    v104(v39, v102, v294);
    v106 = swift_unknownObjectRetain_n(v68, 2);
    v107 = Logger.logObject.getter(v106);
    v108 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v107, v108))
    {
      v109 = swift_slowAlloc(22, -1);
      v110 = (void **)swift_slowAlloc(64, -1);
      aBlock = v110;
      *(_DWORD *)v109 = 136315394;
      v301 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
      v288 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
      *(_WORD *)(v109 + 12) = 2080;
      v111 = objc_msgSend(v68, "displayName");
      v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
      v114 = v113;

      v105 = v294;
      v301 = sub_1000544FC(v112, v114, (uint64_t *)&aBlock);
      v104 = (void (*)(_BYTE *, uint64_t, uint64_t))v288;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
      swift_unknownObjectRelease_n(v291, 2);
      v115 = v114;
      v68 = v291;
      swift_bridgeObjectRelease(v115);
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "%s: Location has an FPItem : %s.", (uint8_t *)v109, 0x16u);
      swift_arrayDestroy(v110, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v110, -1, -1);
      swift_slowDealloc(v109, -1, -1);

      v116 = (_BYTE *)*((_QWORD *)v292 + 1);
    }
    else
    {

      swift_unknownObjectRelease_n(v68, 2);
      v116 = (_BYTE *)*((_QWORD *)v103 + 1);
    }
    v130 = v39;
    v131 = v116;
    v132 = ((uint64_t (*)(_BYTE *, uint64_t))v116)(v130, v105);
    v124 = v273;
  }
  v133 = v274;
  v134 = v275;
LABEL_44:
  v150 = v290;
  v292 = (char *)OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain;
  v151 = *(void **)&v133[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (!v151
    || (v152 = v151,
        v153 = FPProviderDomain.shouldUseDSEnumeration.getter(),
        v152,
        v134 = v275,
        (v153 & 1) == 0))
  {
    v166 = Logger.Enumeration.unsafeMutableAddressor(v132);
    v104(v150, v166, v105);
    v167 = v134;
    v168 = Logger.logObject.getter(v167);
    v169 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v168, v169))
    {
      v286 = v131;
      v288 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
      v170 = swift_slowAlloc(22, -1);
      v171 = (void **)swift_slowAlloc(64, -1);
      aBlock = v171;
      *(_DWORD *)v170 = 136315394;
      v301 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
      *(_WORD *)(v170 + 12) = 2080;
      v172 = *(void **)&v292[(_QWORD)v274];
      if (v172)
      {
        v173 = objc_msgSend(v172, "identifier");
        v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(v173);
        v176 = v175;

      }
      else
      {
        v174 = 4271950;
        v176 = 0xE300000000000000;
      }
      v301 = sub_1000544FC(v174, v176, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);

      swift_bridgeObjectRelease(v176);
      _os_log_impl((void *)&_mh_execute_header, v168, v169, "%s: Domain does NOT support DS enumeration: %s.", (uint8_t *)v170, 0x16u);
      swift_arrayDestroy(v171, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v171, -1, -1);
      swift_slowDealloc(v170, -1, -1);

      v105 = v294;
      v131 = v286;
      ((void (*)(void **, uint64_t))v286)(v290, v294);
      v177 = 1;
      goto LABEL_59;
    }

    ((void (*)(void **, uint64_t))v131)(v150, v105);
    v177 = 1;
LABEL_54:
    v178 = v289;
    goto LABEL_60;
  }
  v154 = Logger.Enumeration.unsafeMutableAddressor(v132);
  v155 = v285;
  v104(v285, v154, v105);
  v156 = v134;
  v157 = Logger.logObject.getter(v156);
  v158 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v157, v158))
  {

    ((void (*)(_BYTE *, uint64_t))v131)(v155, v105);
    v177 = 0;
    goto LABEL_54;
  }
  v286 = v131;
  v288 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
  v159 = swift_slowAlloc(22, -1);
  v160 = (void **)swift_slowAlloc(64, -1);
  aBlock = v160;
  *(_DWORD *)v159 = 136315394;
  v301 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
  *(_WORD *)(v159 + 12) = 2080;
  v161 = *(void **)&v292[(_QWORD)v274];
  if (v161)
  {
    v162 = objc_msgSend(v161, "identifier");
    v163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v162);
    v165 = v164;

  }
  else
  {
    v163 = 4271950;
    v165 = 0xE300000000000000;
  }
  v301 = sub_1000544FC(v163, v165, (uint64_t *)&aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);

  swift_bridgeObjectRelease(v165);
  _os_log_impl((void *)&_mh_execute_header, v157, v158, "%s: Domain supports DS enumeration: %s.", (uint8_t *)v159, 0x16u);
  swift_arrayDestroy(v160, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v160, -1, -1);
  swift_slowDealloc(v159, -1, -1);

  v105 = v294;
  v131 = v286;
  ((void (*)(_BYTE *, uint64_t))v286)(v285, v294);
  v177 = 0;
LABEL_59:
  v124 = v273;
  v178 = v289;
  v104 = (void (*)(_BYTE *, uint64_t, uint64_t))v288;
LABEL_60:
  v179 = v270;
  v180 = DSConflictStrategy_ptr;
  v181 = objc_opt_self(FPItem);
  v182 = swift_dynamicCastObjCClass(v68, v181);
  if (v182)
  {
    v182 = (uint64_t)objc_msgSend((id)v182, "isTrashed");
    if (((v179 | v177) & 1) != 0 || (v182 & 1) != 0)
      goto LABEL_66;
  }
  else if (((v179 | v177) & 1) != 0)
  {
LABEL_66:
    v187 = Logger.Enumeration.unsafeMutableAddressor(v182);
    v188 = v287;
    v189 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v104)(v287, v187, v105);
    v190 = Logger.logObject.getter(v189);
    v191 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v190, v191))
    {
      v192 = (uint8_t *)swift_slowAlloc(12, -1);
      v193 = (void **)swift_slowAlloc(32, -1);
      aBlock = v193;
      *(_DWORD *)v192 = 136315138;
      v303 = (_QWORD *)sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
      v124 = v273;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v303, v304);
      _os_log_impl((void *)&_mh_execute_header, v190, v191, "%s: NOT trying to resolve to Node, (either location already has a Node, or Domain needs FPItemCollection, see logs above)", v192, 0xCu);
      swift_arrayDestroy(v193, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v193, -1, -1);
      swift_slowDealloc(v192, -1, -1);
    }

    ((void (*)(_BYTE *, uint64_t))v131)(v188, v105);
    v194 = v271;
    v195 = (void *)*((_QWORD *)v271 + 2);
    v101 = v275;
    v196 = v195;
    v293();
    swift_release(v194);

LABEL_69:
    return;
  }
  v183 = &v124[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v124[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], &v301, 0, 0);
  v184 = *(_QWORD *)v183;
  v185 = swift_bridgeObjectRetain(v184);
  v186 = sub_1001EE92C(v185);
  v182 = swift_bridgeObjectRelease(v184);
  if ((v186 & 1) != 0)
    goto LABEL_66;
  v197 = Logger.Enumeration.unsafeMutableAddressor(v182);
  v104(v178, v197, v105);
  v198 = swift_unknownObjectRetain_n(v68, 2);
  v199 = v178;
  v200 = Logger.logObject.getter(v198);
  v201 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v200, v201))
  {
    v202 = swift_slowAlloc(22, -1);
    v290 = (void **)swift_slowAlloc(64, -1);
    aBlock = v290;
    *(_DWORD *)v202 = 136315394;
    v288 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
    v303 = (_QWORD *)sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v303, v304);
    *(_WORD *)(v202 + 12) = 2080;
    v203 = v197;
    v204 = objc_msgSend(v68, "displayName");
    v205 = v131;
    v206 = static String._unconditionallyBridgeFromObjectiveC(_:)(v204);
    v208 = v207;

    v197 = v203;
    v180 = DSConflictStrategy_ptr;
    v209 = v206;
    v131 = v205;
    v303 = (_QWORD *)sub_1000544FC(v209, v208, (uint64_t *)&aBlock);
    v104 = (void (*)(_BYTE *, uint64_t, uint64_t))v288;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v303, v304);
    swift_unknownObjectRelease_n(v291, 2);
    v210 = v208;
    v68 = v291;
    swift_bridgeObjectRelease(v210);
    _os_log_impl((void *)&_mh_execute_header, v200, v201, "%s: Location needs to be resolved to FINode : Node (%s.", (uint8_t *)v202, 0x16u);
    v211 = v290;
    swift_arrayDestroy(v290, 2, (char *)&type metadata for Any + 8);
    v124 = v273;
    swift_slowDealloc(v211, -1, -1);
    swift_slowDealloc(v202, -1, -1);

    v212 = v289;
    v213 = v294;
  }
  else
  {

    swift_unknownObjectRelease_n(v68, 2);
    v212 = v199;
    v213 = v105;
  }
  ((void (*)(_BYTE *, uint64_t))v131)(v212, v213);
  v214 = objc_opt_self(v180[21]);
  v215 = (void *)swift_dynamicCastObjCClassUnconditional(v68, v214, 0, 0, 0);
  swift_unknownObjectRetain(v68);
  if (objc_msgSend(v215, "isRootItem"))
  {
    v294 = *(_QWORD *)&v124[OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue];
    v216 = (_QWORD *)swift_allocObject(&unk_1005CFB68, 56, 7);
    v217 = v271;
    v216[2] = v274;
    v216[3] = v217;
    v218 = v293;
    v216[4] = v68;
    v216[5] = v218;
    v216[6] = v272;
    v299 = sub_1001F5064;
    v300 = v216;
    aBlock = _NSConcreteStackBlock;
    v296 = 1107296256;
    v297 = sub_10004A82C;
    v298 = &unk_1005CFB80;
    v219 = _Block_copy(&aBlock);
    v220 = v275;
    swift_unknownObjectRetain(v68);
    swift_retain();
    swift_retain();
    v221 = v277;
    static DispatchQoS.unspecified.getter(v222);
    v303 = _swiftEmptyArrayStorage;
    v223 = v124;
    v224 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v225 = sub_10006922C((uint64_t *)&unk_100647540);
    v226 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v227 = v280;
    v228 = v225;
    v229 = v282;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v303, v228, v226, v282, v224);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v221, v227, v219);
    _Block_release(v219);

    swift_unknownObjectRelease(v68);
    (*(void (**)(_BYTE *, uint64_t))(v281 + 8))(v227, v229);
    (*(void (**)(_BYTE *, uint64_t))(v278 + 8))(v221, v279);

    v230 = v300;
    swift_release(v217);
    swift_release(v230);
    return;
  }
  v231 = *(void **)&v292[(_QWORD)v274];
  v232 = v272;
  if (!v231)
  {
LABEL_81:
    v248 = v273;
    v249 = *(void **)&v273[OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager];
    v250 = swift_allocObject(&unk_1005CEFC0, 24, 7);
    swift_unknownObjectWeakInit(v250 + 16);
    v251 = (_QWORD *)swift_allocObject(&unk_1005CFAC8, 64, 7);
    v252 = v271;
    v251[2] = v250;
    v251[3] = v252;
    v253 = v274;
    v251[4] = v68;
    v251[5] = v253;
    v251[6] = v293;
    v251[7] = v232;
    v299 = sub_1001F5054;
    v300 = v251;
    aBlock = _NSConcreteStackBlock;
    v296 = 1107296256;
    v297 = sub_100175118;
    v298 = &unk_1005CFAE0;
    v254 = _Block_copy(&aBlock);
    v255 = v300;
    v256 = v275;
    swift_unknownObjectRetain(v68);
    swift_retain();
    swift_retain();
    v257 = v249;
    swift_release(v255);
    objc_msgSend(v257, "fetchURLForItem:completionHandler:", v215, v254);

    _Block_release(v254);
    swift_release(v252);
    swift_unknownObjectRelease(v68);

    return;
  }
  v233 = v231;
  if ((FPProviderDomain.shouldResolveDSNodeAsFPv2.getter() & 1) == 0)
  {

    goto LABEL_81;
  }
  v234 = v276;
  v235 = v294;
  v104(v276, v197, v294);
  swift_unknownObjectRetain_n(v68, 2);
  v292 = (char *)v233;
  v236 = Logger.logObject.getter(v292);
  v237 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v236, v237))
  {
    v238 = swift_slowAlloc(22, -1);
    v239 = (_QWORD *)swift_slowAlloc(8, -1);
    v290 = (void **)swift_slowAlloc(32, -1);
    aBlock = v290;
    *(_DWORD *)v238 = 136315394;
    v240 = objc_msgSend(v68, "displayName");
    v286 = v131;
    v241 = v240;
    v242 = static String._unconditionallyBridgeFromObjectiveC(_:)(v240);
    v244 = v243;

    v303 = (_QWORD *)sub_1000544FC(v242, v244, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v303, v304);
    swift_unknownObjectRelease_n(v291, 2);
    swift_bridgeObjectRelease(v244);
    *(_WORD *)(v238 + 12) = 2112;
    v303 = v292;
    v245 = v292;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v303, v304);
    *v239 = v231;

    v68 = v291;
    _os_log_impl((void *)&_mh_execute_header, v236, v237, "Building FINode from FPv2 node: (%s) with domain (%@)", (uint8_t *)v238, 0x16u);
    v246 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v239, 1, v246);
    swift_slowDealloc(v239, -1, -1);
    v247 = v290;
    swift_arrayDestroy(v290, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v247, -1, -1);
    swift_slowDealloc(v238, -1, -1);

    ((void (*)(_BYTE *, uint64_t))v286)(v276, v294);
  }
  else
  {

    v258 = v292;
    swift_unknownObjectRelease_n(v68, 2);
    ((void (*)(_BYTE *, uint64_t))v131)(v234, v235);
  }
  v259 = (void *)objc_opt_self(FINode);
  v260 = swift_allocObject(&unk_1005CEFC0, 24, 7);
  v261 = v273;
  swift_unknownObjectWeakInit(v260 + 16);
  v262 = (_QWORD *)swift_allocObject(&unk_1005CFB18, 64, 7);
  v263 = v271;
  v262[2] = v260;
  v262[3] = v263;
  v262[4] = v274;
  v262[5] = v68;
  v264 = v272;
  v262[6] = v293;
  v262[7] = v264;
  v299 = sub_1001F505C;
  v300 = v262;
  aBlock = _NSConcreteStackBlock;
  v296 = 1107296256;
  v297 = sub_100083540;
  v298 = &unk_1005CFB30;
  v265 = _Block_copy(&aBlock);
  v266 = v300;
  v267 = v275;
  swift_unknownObjectRetain(v68);
  swift_retain();
  swift_retain();
  v268 = v292;
  swift_release(v266);
  objc_msgSend(v259, "fiNodeFromItem:inFPv2Domain:completion:", v215, v268, v265);
  _Block_release(v265);

  swift_release(v263);
  swift_unknownObjectRelease(v68);

}

void sub_100024924(void *a1, char a2)
{
  void *v2;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void *v24;
  void *v25;
  uint64_t v26;

  v5 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v6 = objc_msgSend(v2, "configuration");
  v7 = objc_msgSend(v6, "sceneIdentifier");

  v8 = objc_msgSend(v5, "globalTabbedBrowserControllerForIdentifier:", v7);
  if (v8)
  {
    if (a1)
      v9 = a1;
    else
      v9 = objc_msgSend(v2, "_definiteTransitionCoordinator");
    v10 = swift_allocObject(&unk_1005C9948, 33, 7);
    *(_QWORD *)(v10 + 16) = v2;
    *(_QWORD *)(v10 + 24) = v8;
    v11 = a2 & 1;
    *(_BYTE *)(v10 + 32) = a2 & 1;
    v25 = sub_1000843C4;
    v26 = v10;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100018CC0;
    v24 = &unk_1005C9960;
    v12 = _Block_copy(&v21);
    v13 = v26;
    swift_unknownObjectRetain(a1);
    v14 = v2;
    v15 = v8;
    swift_release(v13);
    v16 = swift_allocObject(&unk_1005C9998, 33, 7);
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v15;
    *(_BYTE *)(v16 + 32) = v11;
    v25 = sub_100084414;
    v26 = v16;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100018CC0;
    v24 = &unk_1005C99B0;
    v17 = _Block_copy(&v21);
    v18 = v26;
    v19 = v14;
    v20 = v15;
    swift_release(v18);
    objc_msgSend(v9, "animateAlongsideTransition:completion:", v12, v17);
    _Block_release(v17);
    _Block_release(v12);

    swift_unknownObjectRelease(v9);
  }
}

void sub_100024B28(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  NSObject *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  id v54;
  char *v55;
  NSObject *v56;
  _BOOL4 v57;
  uint64_t v58;
  _QWORD *v59;
  double v60;
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  void *v67;
  id v68;
  char *v69;
  id v70;
  id v71;
  os_log_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t ObjectType;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  os_log_t v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  id v97;
  id v98;
  unsigned int v99;
  char *v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  char **v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  os_log_t v113;
  __n128 v114;
  id v115;
  NSObject *v116;
  os_log_type_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  double v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  os_log_t v134;
  uint64_t v135;
  void *v136;
  char *v137;
  id v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  os_log_t v144;
  os_log_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  id v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  NSObject *v164;
  os_log_type_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  char *v174;
  id v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  Class isa;
  id v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  uint64_t v187;
  char *v188;
  id v189;
  NSObject *v190;
  os_log_type_t v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  os_log_t v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  char *v205;
  id v206;
  void *v207;
  char *v208;
  NSObject *v209;
  os_log_type_t v210;
  uint64_t v211;
  id v212;
  os_log_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  id v217;
  void *v218;
  char *v219;
  id v220;
  NSObject *v221;
  os_log_type_t v222;
  uint64_t v223;
  id v224;
  os_log_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  id v229;
  uint64_t v230;
  void *v231;
  __n128 v232;
  char *v233;
  NSObject *v234;
  os_log_type_t v235;
  uint64_t v236;
  id v237;
  os_log_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  id v242;
  uint64_t v243;
  os_log_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  id v251;
  id v252;
  int v253;
  id v254;
  id v255;
  char *v256;
  uint64_t v257;
  uint64_t (*v258)(char *, uint64_t, uint64_t);
  char *v259;
  id v260;
  os_log_t v261;
  os_log_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268[2];

  v4 = v3;
  v260 = a3;
  v255 = a2;
  v266 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v266 - 8);
  __chkstk_darwin(v266);
  v8 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v243 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v243 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v243 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v243 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v243 - v22;
  __chkstk_darwin(v24);
  v256 = (char *)&v243 - v25;
  __chkstk_darwin(v26);
  v261 = (os_log_t)((char *)&v243 - v27);
  __chkstk_darwin(v28);
  v259 = (char *)&v243 - v29;
  __chkstk_darwin(v30);
  v265 = (char *)&v243 - v31;
  v32 = objc_opt_self(UIWindowScene);
  v33 = swift_dynamicCastObjCClass(a1, v32);
  if (v33)
  {
    v34 = (void *)v33;
    v263 = v6;
    v250 = v23;
    v248 = v17;
    v247 = v14;
    v246 = v11;
    v35 = objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions);
    v36 = a1;

    v37 = type metadata accessor for DRIMainViewController(0);
    v38 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v37)), "init");
    v39 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController;
    v40 = *(void **)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController] = v38;
    v254 = v38;
    v41 = v38;

    v42 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "initWithWindowScene:", v34);
    v43 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window;
    v44 = *(void **)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window];
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window] = v42;

    v262 = v43;
    v45 = *(Class *)((char *)&v43->isa + (_QWORD)v4);
    if (v45)
      v45 = objc_msgSend(v45, "setRootViewController:", v41);
    v46 = Logger.Application.unsafeMutableAddressor(v45);
    v47 = v263;
    v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v263 + 16);
    v49 = v265;
    v257 = v46;
    v258 = v48;
    ((void (*)(char *))v48)(v265);
    v50 = v36;
    v51 = v41;
    v52 = v4;
    v53 = v50;
    v54 = v51;
    v55 = v52;
    v56 = Logger.logObject.getter(v55);
    v253 = static os_log_type_t.debug.getter(v56);
    v57 = os_log_type_enabled(v56, (os_log_type_t)v253);
    v264 = v55;
    v249 = v20;
    if (v57)
    {
      v244 = v56;
      v245 = v39;
      v251 = v54;
      v58 = swift_slowAlloc(52, -1);
      v59 = (_QWORD *)swift_slowAlloc(24, -1);
      v243 = swift_slowAlloc(64, -1);
      v268[0] = v243;
      *(_DWORD *)v58 = 136316162;
      v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
      *(_QWORD *)&v60 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268).n128_u64[0];
      *(_WORD *)(v58 + 12) = 2080;
      v61 = objc_msgSend(v34, "session", v60);
      v62 = objc_msgSend(v61, "persistentIdentifier");

      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v65 = v64;

      v267 = sub_1000544FC(v63, v65, v268);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);

      swift_bridgeObjectRelease(v65);
      *(_WORD *)(v58 + 22) = 2112;
      v267 = (uint64_t)v34;
      v252 = v53;
      v66 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
      *v59 = v34;

      *(_WORD *)(v58 + 32) = 2112;
      v67 = *(Class *)((char *)&v262->isa + (_QWORD)v4);
      if (!v67)
      {

        __break(1u);
        return;
      }
      v267 = *(uint64_t *)((char *)&v262->isa + (_QWORD)v4);
      v68 = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
      v59[1] = v67;
      v69 = v264;

      *(_WORD *)(v58 + 42) = 2112;
      v70 = v251;
      v267 = (uint64_t)v251;
      v71 = v251;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
      v59[2] = v254;

      v72 = v244;
      _os_log_impl((void *)&_mh_execute_header, v244, (os_log_type_t)v253, "%s: sceneIdentifier: %s scene: %@, window: %@, doc vc: %@", (uint8_t *)v58, 0x34u);
      v73 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v59, 3, v73);
      swift_slowDealloc(v59, -1, -1);
      v74 = v243;
      swift_arrayDestroy(v243, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v58, -1, -1);

      v75 = *(void (**)(char *, uint64_t))(v263 + 8);
      v75(v265, v266);
      v53 = v252;
      v39 = v245;
    }
    else
    {

      v75 = *(void (**)(char *, uint64_t))(v47 + 8);
      v75(v49, v266);
      v70 = v54;
    }
    v86 = v262;
    objc_msgSend(*(id *)((char *)&v262->isa + (_QWORD)v4), "makeKeyAndVisible");
    v87 = *(Class *)((char *)&v86->isa + (_QWORD)v4);
    if (v87)
    {
      v88 = objc_allocWithZone((Class)DOCAppearance);
      v89 = v87;
      v90 = objc_msgSend(v88, "init");
      objc_msgSend(v89, "setAppearance:", v90);

    }
    v91 = (void *)objc_opt_self(UIApplication);
    v92 = objc_msgSend(v91, "sharedApplication");
    v93 = type metadata accessor for DOCApplication();
    v94 = swift_dynamicCastClass(v92, v93);
    if (v94)
    {
      v95 = *(void **)&v4[v39];
      if (v95)
      {
        v96 = v94;
        v97 = v95;
        objc_msgSend(v97, "setTabbedBrowserViewControllerDelegate:", v96);

      }
    }

    v98 = objc_msgSend(v91, "sharedApplication");
    v99 = objc_msgSend(v98, "launchedToTest");

    if (v99)
    {
      v100 = v259;
      v101 = v258(v259, v257, v266);
      v102 = Logger.logObject.getter(v101);
      v103 = static os_log_type_t.default.getter(v102);
      if (os_log_type_enabled(v102, v103))
      {
        v104 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v104 = 0;
        _os_log_impl((void *)&_mh_execute_header, v102, v103, "Launched in PPT, disabling scene restoration", v104, 2u);
        swift_slowDealloc(v104, -1, -1);
      }

      v75(v100, v266);
      goto LABEL_43;
    }
    v265 = (char *)v75;
    v105 = &selRef_showTips;
    v106 = v260;
    v107 = objc_msgSend(v260, "URLContexts");
    v108 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v109 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    v110 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v107, v108, v109);

    if ((v110 & 0xC000000000000001) != 0)
    {
      if (v110 < 0)
        v111 = v110;
      else
        v111 = v110 & 0xFFFFFFFFFFFFFF8;
      v112 = __CocoaSet.count.getter(v111);
    }
    else
    {
      v112 = *(_QWORD *)(v110 + 16);
    }
    v113 = v261;
    v114 = swift_bridgeObjectRelease(v110);
    if (v112)
    {
      ((void (*)(os_log_t, uint64_t, uint64_t, __n128))v258)(v113, v257, v266, v114);
      v115 = v106;
      v116 = Logger.logObject.getter(v115);
      v117 = static os_log_type_t.debug.getter(v116);
      v118 = v117;
      if (os_log_type_enabled(v116, v117))
      {
        v119 = swift_slowAlloc(22, -1);
        v263 = swift_slowAlloc(64, -1);
        v268[0] = v263;
        *(_DWORD *)v119 = 136315394;
        v120 = v109;
        v121 = v108;
        v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
        v262 = (os_log_t)v268;
        *(_QWORD *)&v122 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268).n128_u64[0];
        *(_WORD *)(v119 + 12) = 2080;
        v260 = (id)(v119 + 14);
        v123 = v70;
        v124 = objc_msgSend(v115, "URLContexts", v122);
        v125 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v124, v108, v120);

        v126 = Set.description.getter(v125, v121, v120);
        LODWORD(v259) = v118;
        v127 = v53;
        v129 = v128;
        v130 = v125;
        v108 = v121;
        v109 = v120;
        swift_bridgeObjectRelease(v130);
        v131 = v126;
        v70 = v123;
        v105 = &selRef_showTips;
        v267 = sub_1000544FC(v131, v129, v268);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v262);

        v132 = v129;
        v53 = v127;
        swift_bridgeObjectRelease(v132);
        _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v259, "%s: Restore from urlContexts: %s", (uint8_t *)v119, 0x16u);
        v133 = v263;
        swift_arrayDestroy(v263, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v133, -1, -1);
        swift_slowDealloc(v119, -1, -1);

        v134 = v261;
      }
      else
      {

        v134 = v113;
      }
      ((void (*)(os_log_t, uint64_t))v265)(v134, v266);
      v149 = objc_msgSend(v115, v105[220]);
      v150 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v149, v108, v109);

      sub_1002064CC(v150);
LABEL_35:
      swift_bridgeObjectRelease(v150);
      goto LABEL_43;
    }
    v135 = sub_100085B68();
    if (v135)
    {
      v136 = (void *)v135;
      v137 = v256;
      v258(v256, v257, v266);
      v138 = v136;
      v139 = Logger.logObject.getter(v138);
      v140 = static os_log_type_t.debug.getter(v139);
      if (os_log_type_enabled(v139, v140))
      {
        v141 = swift_slowAlloc(22, -1);
        v262 = v139;
        v142 = v141;
        v261 = (os_log_t)swift_slowAlloc(8, -1);
        v263 = swift_slowAlloc(32, -1);
        v268[0] = v263;
        *(_DWORD *)v142 = 136315394;
        v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
        *(_WORD *)(v142 + 12) = 2112;
        v267 = (uint64_t)v138;
        v143 = v138;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
        v144 = v261;
        v261->isa = (Class)v136;

        v145 = v262;
        _os_log_impl((void *)&_mh_execute_header, v262, v140, "%s: Restore from folderItem: %@", (uint8_t *)v142, 0x16u);
        v146 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v144, 1, v146);
        swift_slowDealloc(v144, -1, -1);
        v147 = v263;
        swift_arrayDestroy(v263, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v147, -1, -1);
        swift_slowDealloc(v142, -1, -1);

        v148 = v256;
      }
      else
      {

        v148 = v137;
      }
      ((void (*)(char *, uint64_t))v265)(v148, v266);
      sub_10020FB84(v138);
    }
    else
    {
      v252 = v53;
      v151 = objc_msgSend(v106, "userActivities");
      v152 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
      v153 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
      v154 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v151, v152, v153);

      sub_1003B204C(v154);
      v156 = v155;
      swift_bridgeObjectRelease(v154);
      if (v156)
      {
        v157 = sub_10033A66C();
        if (v157)
        {
          v158 = v157;
          v159 = sub_10006922C((uint64_t *)&unk_1006441A0);
          v160 = swift_allocObject(v159, 40, 7);
          *(_OWORD *)(v160 + 16) = xmmword_1004D9B40;
          *(_QWORD *)(v160 + 32) = v158;
          v268[0] = v160;
          specialized Array._endMutation()(v160);
          v161 = v268[0];

          v162 = v250;
          v258(v250, v257, v266);
          v163 = swift_bridgeObjectRetain_n(v161, 2);
          v164 = Logger.logObject.getter(v163);
          v165 = static os_log_type_t.debug.getter(v164);
          if (os_log_type_enabled(v164, v165))
          {
            v166 = swift_slowAlloc(22, -1);
            v167 = swift_slowAlloc(64, -1);
            v268[0] = v167;
            *(_DWORD *)v166 = 136315394;
            v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
            *(_WORD *)(v166 + 12) = 2080;
            v168 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
            v251 = v70;
            v169 = v168;
            v170 = swift_bridgeObjectRetain(v161);
            v171 = Array.description.getter(v170, v169);
            v173 = v172;
            swift_bridgeObjectRelease(v161);
            v267 = sub_1000544FC(v171, v173, v268);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
            swift_bridgeObjectRelease_n(v161, 2);
            swift_bridgeObjectRelease(v173);
            _os_log_impl((void *)&_mh_execute_header, v164, v165, "%s: Restore from quick look item: %s", (uint8_t *)v166, 0x16u);
            swift_arrayDestroy(v167, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v167, -1, -1);
            swift_slowDealloc(v166, -1, -1);

            v174 = v250;
            v70 = v251;
          }
          else
          {

            swift_bridgeObjectRelease_n(v161, 2);
            v174 = v162;
          }
          ((void (*)(char *, uint64_t))v265)(v174, v266);
          v53 = v252;
          sub_10020D2C4(v161);
          swift_bridgeObjectRelease(v161);
          goto LABEL_43;
        }

      }
      v183 = sub_100086028();
      if (v183)
      {
        v186 = v183;
        v187 = v184;
        v150 = v185;
        v188 = v249;
        v258(v249, v257, v266);
        swift_bridgeObjectRetain_n(v150, 2);
        v189 = v186;
        v190 = Logger.logObject.getter(v189);
        v191 = static os_log_type_t.debug.getter(v190);
        v192 = v191;
        if (os_log_type_enabled(v190, v191))
        {
          v193 = swift_slowAlloc(32, -1);
          LODWORD(v262) = v192;
          v194 = v193;
          v260 = (id)swift_slowAlloc(8, -1);
          v261 = v190;
          v195 = v260;
          v263 = swift_slowAlloc(64, -1);
          v268[0] = v263;
          *(_DWORD *)v194 = 136315650;
          v251 = v70;
          v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
          *(_WORD *)(v194 + 12) = 2112;
          v267 = (uint64_t)v189;
          v196 = v187;
          v197 = v189;
          v70 = v251;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
          *v195 = v186;

          *(_WORD *)(v194 + 22) = 2080;
          if (v150)
            v198 = v196;
          else
            v198 = 0;
          if (v150)
            v199 = v150;
          else
            v199 = 0xE000000000000000;
          swift_bridgeObjectRetain(v150);
          v267 = sub_1000544FC(v198, v199, v268);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
          swift_bridgeObjectRelease_n(v150, 2);
          v200 = v199;
          v187 = v196;
          swift_bridgeObjectRelease(v200);
          v201 = v261;
          _os_log_impl((void *)&_mh_execute_header, v261, (os_log_type_t)v262, "%s: Restore from concrete location: %@ tag: %s", (uint8_t *)v194, 0x20u);
          v202 = sub_10006922C(&qword_100643AB0);
          v203 = v260;
          swift_arrayDestroy(v260, 1, v202);
          swift_slowDealloc(v203, -1, -1);
          v204 = v263;
          swift_arrayDestroy(v263, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v204, -1, -1);
          swift_slowDealloc(v194, -1, -1);

          v205 = v249;
        }
        else
        {

          swift_bridgeObjectRelease_n(v150, 2);
          v205 = v188;
        }
        ((void (*)(char *, uint64_t))v265)(v205, v266);
        v53 = v252;
        sub_100210708(v189, v187, v150);

        goto LABEL_35;
      }
      v206 = objc_msgSend(v106, "shortcutItem");
      if (v206)
      {
        v207 = v206;
        v208 = v248;
        v258(v248, v257, v266);
        v138 = v207;
        v209 = Logger.logObject.getter(v138);
        v210 = static os_log_type_t.debug.getter(v209);
        if (os_log_type_enabled(v209, v210))
        {
          v211 = swift_slowAlloc(22, -1);
          v262 = (os_log_t)swift_slowAlloc(8, -1);
          v263 = swift_slowAlloc(32, -1);
          v268[0] = v263;
          *(_DWORD *)v211 = 136315394;
          v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
          *(_WORD *)(v211 + 12) = 2112;
          v267 = (uint64_t)v138;
          v212 = v138;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
          v213 = v262;
          v262->isa = (Class)v207;

          _os_log_impl((void *)&_mh_execute_header, v209, v210, "%s: Restore from shortcutItem: %@", (uint8_t *)v211, 0x16u);
          v214 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v213, 1, v214);
          swift_slowDealloc(v213, -1, -1);
          v215 = v263;
          swift_arrayDestroy(v263, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v215, -1, -1);
          swift_slowDealloc(v211, -1, -1);

          v216 = v248;
        }
        else
        {

          v216 = v208;
        }
        ((void (*)(char *, uint64_t))v265)(v216, v266);
        v53 = v252;
        sub_10020875C(v138);
      }
      else
      {
        v217 = objc_msgSend(v255, "stateRestorationActivity");
        if (v217)
        {
          v218 = v217;
          v219 = v247;
          v258(v247, v257, v266);
          v220 = v218;
          v221 = Logger.logObject.getter(v220);
          v222 = static os_log_type_t.debug.getter(v221);
          if (os_log_type_enabled(v221, v222))
          {
            v223 = swift_slowAlloc(22, -1);
            v262 = (os_log_t)swift_slowAlloc(8, -1);
            v263 = swift_slowAlloc(32, -1);
            v268[0] = v263;
            *(_DWORD *)v223 = 136315394;
            v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
            *(_WORD *)(v223 + 12) = 2112;
            v267 = (uint64_t)v220;
            v224 = v220;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
            v225 = v262;
            v262->isa = (Class)v218;

            _os_log_impl((void *)&_mh_execute_header, v221, v222, "%s: Restore from stateRestorationActivity: %@", (uint8_t *)v223, 0x16u);
            v226 = sub_10006922C(&qword_100643AB0);
            swift_arrayDestroy(v225, 1, v226);
            swift_slowDealloc(v225, -1, -1);
            v227 = v263;
            swift_arrayDestroy(v263, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v227, -1, -1);
            swift_slowDealloc(v223, -1, -1);

            v228 = v247;
          }
          else
          {

            v228 = v219;
          }
          ((void (*)(char *, uint64_t))v265)(v228, v266);
          v53 = v252;
          v242 = v220;
          sub_10020DBA4(v218);

          goto LABEL_43;
        }
        v229 = objc_msgSend(v106, "userActivities");
        v230 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v229, v152, v153);

        v231 = (void *)sub_10008781C(v230);
        v232 = swift_bridgeObjectRelease(v230);
        v53 = v252;
        if (!v231)
        {
LABEL_43:
          v175 = sub_1000AF124();
          if (v175)
          {
            v176 = v175;
            v177 = sub_10006922C((uint64_t *)&unk_1006441A0);
            v178 = swift_allocObject(v177, 40, 7);
            *(_OWORD *)(v178 + 16) = xmmword_1004D9B40;
            *(_QWORD *)(v178 + 32) = v176;
            v268[0] = v178;
            specialized Array._endMutation()(v178);
            v179 = v268[0];
            sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
            v180 = v70;
            v181 = v176;
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v180, "setCustomActions:", isa, swift_bridgeObjectRelease(v179).n128_f64[0]);

          }
          sub_1000AD85C();
          sub_1000AD990();

          return;
        }
        v233 = v246;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v258)(v246, v257, v266, v232);
        v138 = v231;
        v234 = Logger.logObject.getter(v138);
        v235 = static os_log_type_t.debug.getter(v234);
        if (os_log_type_enabled(v234, v235))
        {
          v236 = swift_slowAlloc(22, -1);
          v262 = (os_log_t)swift_slowAlloc(8, -1);
          v263 = swift_slowAlloc(32, -1);
          v268[0] = v263;
          *(_DWORD *)v236 = 136315394;
          v267 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v268);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
          *(_WORD *)(v236 + 12) = 2112;
          v267 = (uint64_t)v138;
          v237 = v138;
          v53 = v252;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);
          v238 = v262;
          v262->isa = (Class)v231;

          _os_log_impl((void *)&_mh_execute_header, v234, v235, "%s: Restore from userActivity: %@", (uint8_t *)v236, 0x16u);
          v239 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v238, 1, v239);
          swift_slowDealloc(v238, -1, -1);
          v240 = v263;
          swift_arrayDestroy(v263, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v240, -1, -1);
          swift_slowDealloc(v236, -1, -1);

          v241 = v246;
        }
        else
        {

          v241 = v233;
        }
        ((void (*)(char *, uint64_t))v265)(v241, v266);
        sub_1002190B8(v138);
      }
    }

    goto LABEL_43;
  }
  v76 = Logger.Application.unsafeMutableAddressor(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v76, v266);
  v77 = a1;
  v78 = Logger.logObject.getter(v77);
  v79 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc(12, -1);
    v81 = swift_slowAlloc(32, -1);
    v268[0] = v81;
    *(_DWORD *)v80 = 136315138;
    ObjectType = swift_getObjectType(v77);
    v83 = _typeName(_:qualified:)(ObjectType, 0);
    v85 = v84;
    v267 = sub_1000544FC(v83, v84, v268);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268);

    swift_bridgeObjectRelease(v85);
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "Denying creation of browser window / scene.  Unexpected scene type received: %s)", v80, 0xCu);
    swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v80, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v266);
}

uint64_t sub_10002654C@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::Bool v21;
  uint64_t v22;
  Class isa;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t result;
  char v27;
  Class v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  Class v49;
  uint64_t *v50;
  char v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  Class v55;
  uint64_t *v56;
  char v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  Class v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v67 = a3;
  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v63 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v63 - v16;
  UTType.identifier.getter(v15);
  v19 = v18;
  v20._object = (void *)0x800000010052CF00;
  v20._countAndFlagsBits = 0xD000000000000010;
  v21 = String.hasPrefix(_:)(v20);
  v22 = swift_bridgeObjectRelease(v19);
  if (v21)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v17, a2, v7);
    sub_100083368();
    isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v68 = *a1;
    *a1 = 0x8000000000000000;
    sub_10007FB7C((uint64_t)isa, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
    v25 = *a1;
    *a1 = v68;
    swift_bridgeObjectRelease(v25);
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    v27 = 0;
  }
  else if ((UTType.isFolderUTI.getter(v22) & 1) != 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v17, a2, v7);
    sub_100083368();
    v27 = 1;
    v28 = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
    v29 = swift_isUniquelyReferenced_nonNull_native(*a1);
    v68 = *a1;
    *a1 = 0x8000000000000000;
    sub_10007FB7C((uint64_t)v28, (uint64_t)v17, v29);
    v30 = *a1;
    *a1 = v68;
    swift_bridgeObjectRelease(v30);
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  }
  else
  {
    v64 = a1;
    v65 = v17;
    v66 = a4;
    v31 = sub_1000AA674();
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v63 = v31;
      v34 = v31 + v33;
      v35 = *(_QWORD *)(v8 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      while (1)
      {
        v36(v14, v34, v7);
        if ((UTType.conforms(to:)(v14) & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
        v34 += v35;
        if (!--v32)
        {
          v31 = v63;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease(v63);
      v48 = (uint64_t)v65;
      v36(v65, a2, v7);
      sub_100083368();
      v27 = 1;
      v49 = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
      v50 = v64;
      v51 = swift_isUniquelyReferenced_nonNull_native(*v64);
      v68 = *v50;
      *v50 = 0x8000000000000000;
      sub_10007FB7C((uint64_t)v49, v48, v51);
      v52 = *v50;
      *v50 = v68;
      swift_bridgeObjectRelease(v52);
      v53 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v53(v48, v7);
      result = ((uint64_t (*)(char *, uint64_t))v53)(v14, v7);
      a4 = v66;
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease(v31);
      v37 = sub_1000AA8B8();
      v38 = v37;
      v39 = *(_QWORD *)(v37 + 16);
      if (v39)
      {
        v40 = v37 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v41 = *(_QWORD *)(v8 + 72);
        v42 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        while (1)
        {
          v42(v11, v40, v7);
          if ((UTType.conforms(to:)(v11) & 1) != 0)
            break;
          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
          v40 += v41;
          if (!--v39)
            goto LABEL_14;
        }
        swift_bridgeObjectRelease(v38);
        v54 = (uint64_t)v65;
        v42(v65, a2, v7);
        sub_100083368();
        v55 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
        v56 = v64;
        v57 = swift_isUniquelyReferenced_nonNull_native(*v64);
        v68 = *v56;
        *v56 = 0x8000000000000000;
        sub_10007FB7C((uint64_t)v55, v54, v57);
        v58 = *v56;
        *v56 = v68;
        swift_bridgeObjectRelease(v58);
        v59 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
        v59(v54, v7);
        result = ((uint64_t (*)(char *, uint64_t))v59)(v11, v7);
        v27 = 0;
        a4 = v66;
      }
      else
      {
LABEL_14:
        v43 = swift_bridgeObjectRelease(v38);
        v44 = (uint64_t)v65;
        static UTType.package.getter(v43);
        v45 = UTType.conforms(to:)(v44);
        v46 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
        result = v46(v44, v7);
        a4 = v66;
        v47 = v64;
        if ((v45 & 1) != 0)
        {
          v27 = 0;
        }
        else
        {
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v44, a2, v7);
          sub_100083368();
          v27 = 1;
          v60 = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
          v61 = swift_isUniquelyReferenced_nonNull_native(*v47);
          v68 = *v47;
          *v47 = 0x8000000000000000;
          sub_10007FB7C((uint64_t)v60, v44, v61);
          v62 = *v47;
          *v47 = v68;
          swift_bridgeObjectRelease(v62);
          result = v46(v44, v7);
        }
      }
    }
  }
  *a4 = v27;
  return result;
}

void sub_100026A34()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  char *v11;
  double v12;
  void *v13;
  double v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  _QWORD *v23;
  char v24[24];

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate;
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = v2;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v4);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    v5 = sub_10004FD50();
    DOCItemCollectionViewController.items.setter(v5);
    v6 = *(_QWORD *)&v1[v3];
    *(_QWORD *)&v1[v3] = 0;
    v7 = objc_msgSend(v1, "viewIfLoaded", swift_bridgeObjectRelease(v6).n128_f64[0]);
    if (v7)
    {
      v8 = v7;
      sub_10002F3B0(2);
      v9 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v10, "setHidesBackButton:", objc_msgSend(v1, "hidesNavigationBackButton"));

      }
      v11 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      *(_QWORD *)&v12 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v24, 0, 0).n128_u64[0];
      v13 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView];
      if (v13)
      {
        v14 = 0.0;
        if (*(_QWORD *)v11 == 2)
          v14 = 16.0;
        objc_msgSend(v13, "setDirectionalLayoutMargins:", v14, 0.0, 16.0, 0.0);
      }
      objc_msgSend(v8, "setNeedsLayout", v12);
      v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      v15 = objc_msgSend(v1, "viewIfLoaded");
      v16 = objc_msgSend(v15, "window");

      if (v16)
        sub_1000926C8();
      v17 = *(char **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
      if (v17)
      {
        v18 = *(_QWORD *)v11;
        v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode];
        *(_QWORD *)&v17[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode] = *(_QWORD *)v11;
        if (v19 != v18)
        {
          v20 = qword_100640DD8;
          v21 = v17;
          if (v20 != -1)
            swift_once(&qword_100640DD8, sub_1000AF8E4);
          v22 = *(double *)&xmmword_100645A80;
          if (!v18)
            v22 = 0.0;
          objc_msgSend(v21, "setDirectionalLayoutMargins:", v22, *((double *)&xmmword_100645A80 + 1), *(double *)&qword_100645A90, *(double *)&qword_100645A98);
          sub_100015074();
          sub_1000AFE14();

        }
      }
      if (*(_QWORD *)v11 == 2)
      {
        v23 = sub_100034068(0);
        sub_100094F78((uint64_t)v23, 0, 0);
        swift_bridgeObjectRelease(v23);
      }

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100026CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v4 = type metadata accessor for OSSignpostID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static os_signpost_type_t.event.getter(v6);
  v10 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  static OSSignpostID.exclusive.getter();
  v18 = 2;
  os_signpost(_:dso:log:name:signpostID:_:_:)(v9, &_mh_execute_header, v10, "UpdateWatch", 11, 2, v8, "Sent Update", 11, v18, _swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate, v11);
  if (result)
  {
    v13 = result;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v15 = a2;
      else
        v15 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v16 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v17 = _bridgeCocoaArray<A>(_:)(v15, v16);
      swift_bridgeObjectRelease(a2);
      a2 = v17;
    }
    else
    {
      v14 = swift_bridgeObjectRetain(a2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v14);
    }
    sub_10002156C(a2, (uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(a2);
    return swift_unknownObjectRelease(v13);
  }
  return result;
}

void sub_100026E44(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, *(_QWORD *)(*(_QWORD *)v2 + 40));
  __asm { BR              X10 }
}

uint64_t sub_100026EA8()
{
  _BYTE *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  swift_bridgeObjectRetain(v3);
  String.hash(into:)(&v8, 0x796C746E65636572, 0xEC00000064657355);
  swift_bridgeObjectRelease(0xEC00000064657355);
  v4 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v8 = *v1;
  *v1 = 0x8000000000000000;
  sub_100082738(v2, v4, isUniquelyReferenced_nonNull_native);
  v6 = *v1;
  *v1 = v8;
  swift_bridgeObjectRelease(v6);
  result = 1;
  *v0 = (_BYTE)v2;
  return result;
}

uint64_t sub_1000271D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10006922C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_100027218()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  id *updated;
  id v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  double v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  char v61[24];

  v1 = type metadata accessor for OSSignpostID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v61[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates])
  {
    v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(v3);
    static os_log_type_t.default.getter(v7);
    v8 = sub_10006922C((uint64_t *)&unk_100644560);
    v9 = swift_allocObject(v8, 72, 7);
    v10 = *(_QWORD *)&v0[v6];
    *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v9 + 56) = &type metadata for Int;
    *(_QWORD *)(v9 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v9 + 32) = v10;
    os_log(_:dso:log:type:_:)("Defering reloadCollection, they are still batch updates running (%d remaining) ", v60);

    swift_bridgeObjectRelease(v9);
LABEL_4:
    v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 1;
    return;
  }
  if ((v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) != 0)
    goto LABEL_4;
  v11 = *(id *)DOCLog.UI.unsafeMutableAddressor(v3);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = sub_10006922C((uint64_t *)&unk_100644560);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v14 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
  *(_QWORD *)(v14 + 64) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v14 + 32) = v0;
  v15 = v0;
  os_log(_:dso:log:type:_:)("Reload collection in %@", 23, 2, &_mh_execute_header, v11, v12, v14);

  swift_bridgeObjectRelease(v14);
  v17 = static os_signpost_type_t.begin.getter(v16);
  updated = (id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  v19 = *updated;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)(v17, &_mh_execute_header, v19, "Files-Reload-reloadCollection", 29, 2, v5, "reloadCollection", 16, 2, _swiftEmptyArrayStorage);

  v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v20(v5, v1);
  if (*(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    v21 = sub_10004FD50();
    DOCItemCollectionViewController.items.setter(v21);
    v23 = static os_signpost_type_t.event.getter(v22);
    v24 = *updated;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v53) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v23, &_mh_execute_header, v24, "Files-Reload", 12, 2, v5, "updatedItemGrouping", 19, v53, _swiftEmptyArrayStorage);

    v20(v5, v1);
    v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 0;
    v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 1;
    sub_100079D3C();
    v26 = static os_signpost_type_t.event.getter(v25);
    v27 = *updated;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v54) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v26, &_mh_execute_header, v27, "Files-Reload", 12, 2, v5, "invalidateStackViewMetrics", 26, v54, _swiftEmptyArrayStorage);

    v20(v5, v1);
    v28 = sub_100093754();
    v29 = static os_signpost_type_t.event.getter(v28);
    v30 = *updated;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v55) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v29, &_mh_execute_header, v30, "Files-Reload", 12, 2, v5, "removeAllContent", 16, v55, _swiftEmptyArrayStorage);

    v20(v5, v1);
    v31 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    v32 = swift_bridgeObjectRetain(v31);
    sub_100039F10(v32, 2);
    swift_bridgeObjectRelease(v31);
    v34 = static os_signpost_type_t.event.getter(v33);
    v35 = *updated;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v56) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v34, &_mh_execute_header, v35, "Files-Reload", 12, 2, v5, "updateSnapshot", 14, v56, _swiftEmptyArrayStorage);

    v20(v5, v1);
    v36 = sub_10008B828((uint64_t)_swiftEmptyArrayStorage);
    v37 = (unint64_t *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache];
    swift_beginAccess(&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache], v61, 1, 0);
    v38 = *v37;
    *v37 = v36;
    *(_QWORD *)&v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
    if (*(_BYTE *)(*(_QWORD *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                  + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type
                  + 8) == 1)
    {
      v15[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      v41 = objc_msgSend(v15, "viewIfLoaded", v40);
      v42 = objc_msgSend(v41, "window");

      if (v42)
        sub_1000926C8();
    }
    v43 = static os_signpost_type_t.event.getter(v39);
    v44 = *updated;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v57) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v43, &_mh_execute_header, v44, "Files-Reload", 12, 2, v5, "didUpdateContent", 16, v57, _swiftEmptyArrayStorage);

    v20(v5, v1);
    _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
    v46 = static os_signpost_type_t.event.getter(v45);
    v47 = *updated;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v58) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v46, &_mh_execute_header, v47, "Files-Reload", 12, 2, v5, "updateOverlay", 13, v58, _swiftEmptyArrayStorage);

    v48 = ((uint64_t (*)(char *, uint64_t))v20)(v5, v1);
    v49 = *(void **)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
    if (v49)
    {
      v50 = v49;
      sub_10003181C();

    }
    v51 = static os_signpost_type_t.end.getter(v48);
    v52 = *updated;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v59) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v51, &_mh_execute_header, v52, "Files-Reload-reloadCollection", 29, 2, v5, "reloadCollection", 16, v59, _swiftEmptyArrayStorage);

    v20(v5, v1);
  }
  else
  {
    __break(1u);
  }
}

void sub_100027934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  id v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  id v12;
  _BYTE v13[32];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
    else
      v11 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8));
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_100069BD8(a1, (uint64_t)v13);
  v5 = sub_10004F2F0(0, &qword_10064D888, UIBarItem_ptr);
  if (swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v5, 6)
    || (sub_100069BD8(a1, (uint64_t)v13),
        v6 = sub_10004F2F0(0, &qword_10064D890, UIControl_ptr),
        swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v6, 6)))
  {
    v7 = v4 != 0;
    v8 = v12;
    objc_msgSend(v12, "setEnabled:", v7);
LABEL_6:

    return;
  }
  sub_100069BD8(a1, (uint64_t)v13);
  v9 = sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v10 = v4 == 0;
    v8 = v12;
    objc_msgSend(v12, "setAttributes:", v10);
    goto LABEL_6;
  }
}

id sub_100027AB8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView);
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailContainerView));
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_titleStackView));
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView));
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel));
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel));
  return objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel));
}

uint64_t sub_100027B74(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 72);
  v4 = *(id *)a1;
  v5 = v2;
  v6 = v3;
  return a1;
}

void sub_100027BB0(void *a1, void *a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  BOOL v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  Swift::String v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void **v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  void **v48;
  unint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  void *v51;
  id (*v52)(void *);
  uint64_t v53;

  v4 = v3;
  objc_msgSend(v3, "beginForcedNavigationTransitionChromeIfNeeded:appearingViewController:animated:", a1, a2, a3 & 1);
  v8 = type metadata accessor for DOCBrowserContainerController();
  v9 = swift_dynamicCastClass(a2, v8);
  if (!v9
    || ((v10 = *(void **)(v9 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource),
         object_getClass(v10) == (Class)_TtC5Files24DOCPlaceholderDataSource)
      ? (v11 = v10 == 0)
      : (v11 = 1),
        v11))
  {
    if (objc_msgSend(v4, "doc_hasAppeared"))
    {
      v12 = objc_msgSend(a2, "transitionCoordinator");
      if (v12)
      {
        v13 = v12;
        _StringGuts.grow(_:)(48);
        swift_bridgeObjectRelease(0xE000000000000000);
        v48 = (void **)0xD000000000000027;
        v49 = 0x8000000100510C90;
        if ((a3 & 1) != 0)
          v14 = 1702195828;
        else
          v14 = 0x65736C6166;
        if ((a3 & 1) != 0)
          v15 = 0xE400000000000000;
        else
          v15 = 0xE500000000000000;
        v16 = v15;
        String.append(_:)(*(Swift::String *)&v14);
        swift_bridgeObjectRelease(v15);
        v17._countAndFlagsBits = 0x3A6376202CLL;
        v17._object = (void *)0xE500000000000000;
        String.append(_:)(v17);
        v18 = objc_msgSend(a2, "description");
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        v22._countAndFlagsBits = v19;
        v22._object = v21;
        String.append(_:)(v22);
        swift_bridgeObjectRelease(v21);
        v23 = type metadata accessor for DOCAssertion(0);
        swift_allocObject(v23, 48, 7);
        v24 = DOCAssertion.init(traceInfo:)(v48, v49);
        v25 = objc_msgSend(v4, "hierarchyController");
        v26 = sub_1000ABE80();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)v26 + 136))(v24, 0, 1);

        swift_release(v26);
        v27 = swift_allocObject(&unk_1005C98F8, 32, 7);
        *(_QWORD *)(v27 + 16) = v24;
        *(_QWORD *)(v27 + 24) = v4;
        v52 = sub_100145818;
        v53 = v27;
        v48 = _NSConcreteStackBlock;
        v49 = 1107296256;
        v50 = sub_100018CC0;
        v51 = &unk_1005C9910;
        v28 = _Block_copy(&v48);
        v29 = v53;
        swift_retain();
        v30 = v4;
        swift_release(v29);
        objc_msgSend(v13, "notifyWhenInteractionChangesUsingBlock:", v28);
        _Block_release(v28);
        swift_unknownObjectRelease(v13);
        swift_release(v24);
      }
    }
  }
  v31 = objc_msgSend(a1, "lastOperation");
  objc_msgSend(v4, "setUpdateLocationsAfterPopTransition:", v31 == (id)2);
  if (objc_msgSend(v4, "updateLocationsAfterPopTransition"))
  {
    v32 = swift_dynamicCastClass(a2, v8);
    if (v32)
    {
      v33 = (void **)(v32 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess(v32 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, &v48, 0, 0);
      v34 = *v33;
      if (v34)
      {
        v35 = type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass(v34, v35))
        {
          v36 = v34;
          DOCItemCollectionViewController.getCurrentLocation()();
          if (v37)
          {
            v38 = v37;
            v39 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
            if (v39)
            {
              v40 = v39;
              v41 = v38;
              objc_msgSend(v40, "updateSelectionToMatchBrowsedLocation:scrollToVisible:", v41, 0);

            }
          }

        }
      }
    }
  }
  v42 = objc_msgSend(a1, "transitionCoordinator");
  sub_100024924(v42, v31 == (id)2);
  v43 = objc_msgSend(v4, "internalNavigationController", swift_unknownObjectRelease(v42).n128_f64[0]);
  v44 = objc_msgSend(v43, "topViewController");

  if (v44)
  {
    v45 = objc_msgSend(v44, "navigationItem");

    v46 = objc_msgSend(v45, "searchController");
    if (v46)
    {
      v47 = type metadata accessor for DOCSearchController();
      swift_dynamicCastClass(v46, v47);

    }
  }
}

void sub_100028040()
{
  char *v0;
  id IsEmpty;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  double *v5;
  uint64_t v6;
  double v7;
  void *Strong;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  id v32;
  id v33;
  _BYTE *v34;
  _BYTE *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  IsEmpty = objc_msgSend(v0, "isViewLoaded");
  if ((_DWORD)IsEmpty)
  {
    objc_msgSend(v0, "loadViewIfNeeded");
    v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    v4 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v4)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    objc_msgSend(v4, "visibleBounds");
    IsEmpty = (id)CGRectIsEmpty(v39);
    if ((IsEmpty & 1) == 0)
    {
      objc_msgSend(v0, "loadViewIfNeeded");
      v16 = *(void **)&v0[v3];
      if (!v16)
      {
LABEL_43:
        __break(1u);
        return;
      }
      IsEmpty = objc_msgSend(v16, "visibleSize");
      v7 = v17;
      v15 = v18;
      if (v17 == 0.0)
        goto LABEL_27;
LABEL_26:
      if (v15 != 0.0)
        goto LABEL_31;
      goto LABEL_27;
    }
  }
  v5 = (double *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize];
  if ((v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize + 16] & 1) == 0)
  {
    v7 = *v5;
    v15 = v5[1];
    if (*v5 != 0.0)
      goto LABEL_26;
    goto LABEL_27;
  }
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
  v7 = 0.0;
  if (!v6)
    goto LABEL_23;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser, v2);
  if (!Strong)
    goto LABEL_23;
  v9 = Strong;
  v10 = objc_msgSend(Strong, "viewIfLoaded");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "bounds");
    if (!CGRectIsEmpty(v40))
    {
      objc_msgSend(v11, "frame");
      v7 = v19;
      v15 = v20;
      goto LABEL_25;
    }

  }
  v12 = objc_msgSend(v9, "parentViewController");
  if (!v12)
  {
LABEL_22:

LABEL_23:
    v15 = 0.0;
    goto LABEL_27;
  }
  v11 = v12;
  v13 = objc_msgSend(v12, "viewIfLoaded");
  if (!v13)
  {
    v14 = v11;
    goto LABEL_21;
  }
  v14 = v13;
  objc_msgSend(v13, "bounds");
  if (CGRectIsEmpty(v41))
  {

LABEL_21:
    goto LABEL_22;
  }
  objc_msgSend(v14, "frame");
  v7 = v21;
  v15 = v22;

LABEL_25:
  if (v7 != 0.0)
    goto LABEL_26;
LABEL_27:
  IsEmpty = objc_msgSend((id)objc_opt_self(DOCUISession), "anyWindowPreferingKeyWindow");
  if (IsEmpty)
  {
    v23 = IsEmpty;
    objc_msgSend(IsEmpty, "bounds");
    if (!CGRectIsEmpty(v42))
    {
      objc_msgSend(v23, "frame");
      v7 = v24;
      v15 = v25;
    }

  }
LABEL_31:
  if (v7 != 0.0 && v15 != 0.0)
    return;
  v26 = *(id *)DOCLog.UI.unsafeMutableAddressor(IsEmpty);
  v27 = static os_log_type_t.error.getter(v26);
  v28 = sub_10006922C((uint64_t *)&unk_100644560);
  v29 = swift_allocObject(v28, 232, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1004DB530;
  *(_QWORD *)(v29 + 56) = &type metadata for CGFloat;
  v30 = sub_1000B3368();
  *(_QWORD *)(v29 + 64) = v30;
  *(double *)(v29 + 32) = v7;
  *(_QWORD *)(v29 + 96) = &type metadata for CGFloat;
  *(_QWORD *)(v29 + 104) = v30;
  *(double *)(v29 + 72) = v15;
  *(_QWORD *)(v29 + 136) = type metadata accessor for DOCItemCollectionViewController(0);
  *(_QWORD *)(v29 + 144) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v29 + 112) = v0;
  v31 = v0;
  v32 = objc_msgSend(v31, "parentViewController");
  if (v32)
  {
    v33 = v32;
    v37 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v38 = sub_100083450((unint64_t *)&unk_100646C00, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    *(_QWORD *)&v36 = v33;
    sub_1000E85C4(&v36, v29 + 152);
  }
  else
  {
    *(_QWORD *)(v29 + 176) = &type metadata for String;
    *(_QWORD *)(v29 + 184) = sub_10006A638();
    *(_QWORD *)(v29 + 152) = 0x296C6C756E28;
    *(_QWORD *)(v29 + 160) = 0xE600000000000000;
  }
  v34 = *(_BYTE **)&v31[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v34)
    goto LABEL_42;
  if ((v34[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
    v34 = *(_BYTE **)&v34[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  v35 = v34;
  *(_QWORD *)(v29 + 216) = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  *(_QWORD *)(v29 + 224) = sub_100083450((unint64_t *)&unk_100642720, (unint64_t *)&qword_100642430, NSObject_ptr);
  *(_QWORD *)(v29 + 192) = v35;
  os_log(_:dso:log:type:_:)("Returning bad initial collection view size (%f, %f) for %@ (parent: %@, itemCollection: %@)", 91, 2, &_mh_execute_header, v26, v27, v29);

  swift_bridgeObjectRelease(v29);
}

uint64_t sub_100028490(void *a1, id a2, void *a3, void *a4, void *a5)
{
  id v10;
  int v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  void *v28;
  _QWORD v29[10];

  v10 = objc_msgSend(a2, "browserViewContext");
  v28 = a3;
  if (!v10)
  {
LABEL_6:
    v11 = 2;
    goto LABEL_7;
  }
  if (v10 != (id)1)
  {
    if (v10 == (id)2)
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x800000010051A420, "Files/DOCItemCollectionViewController+Searching.swift", 53, 2, 47, 0);
      __break(1u);
      return result;
    }
    v12 = objc_msgSend(a2, "browserViewContext");
    type metadata accessor for DOCBrowserViewContext(0);
    v29[3] = v13;
    v29[0] = v12;
    doc_warnUnrecognizedEnumValueEncountered(_:)(v29);
    sub_100068588(v29);
    goto LABEL_6;
  }
  v11 = 3;
LABEL_7:
  v14 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "searchLocation");
  if (qword_100640F80 != -1)
    swift_once(&qword_100640F80, sub_1000AE894);
  v15 = (void *)static DOCFileProviderSource.searchSource;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSearchResultsItemCollectionViewIdentifier);
  v18 = v17;
  v19 = v15;
  v20 = a2;
  v21 = v14;
  v22 = a1;
  sub_100051C68(v19, v20, v11, v14, 7, a1, v16, v18, (uint64_t)v29, 0);
  objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionViewController(0));
  v23 = v28;
  v24 = a5;
  v25 = a4;
  v26 = sub_100176EC0((uint64_t)v29, v23, a4, a5);

  return v26;
}

uint64_t sub_100028694(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t i;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  id v33;
  _BYTE v34[24];

  v4 = (uint64_t *)(a1 + 88);
  swift_beginAccess(a1 + 88, v34, 1, 0);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16);
  v6 = (void *)objc_opt_self(DOCFavoritesManager);
  v7 = objc_msgSend(v6, "sharedManager");
  v8 = objc_msgSend(v6, "sharedManager");
  v9 = objc_msgSend(v8, "favoritedLocations");

  v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v20 = v11;
    else
      v20 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v11);
    if (v12)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v11);
    goto LABEL_17;
  }
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
    goto LABEL_16;
LABEL_3:
  result = sub_1000817E4(0, v12 & ~(v12 >> 63), 0);
  if (v12 < 0)
  {
    __break(1u);
    return result;
  }
  v32 = v5;
  v33 = v7;
  for (i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0)
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
    else
      v15 = *(id *)(v11 + 8 * i + 32);
    v16 = v15;
    v18 = _swiftEmptyArrayStorage[2];
    v17 = _swiftEmptyArrayStorage[3];
    if (v18 >= v17 >> 1)
      sub_1000817E4(v17 > 1, v18 + 1, 1);
    _swiftEmptyArrayStorage[2] = v18 + 1;
    v19 = &_swiftEmptyArrayStorage[4 * v18];
    v19[5] = 0;
    v19[6] = 0;
    v19[4] = v16;
    *((_BYTE *)v19 + 56) = 0;
  }
  swift_bridgeObjectRelease(v11);
  v7 = v33;
  v5 = v32;
LABEL_17:
  v21 = *v4;
  *v4 = (uint64_t)_swiftEmptyArrayStorage;
  *(_QWORD *)&v22 = swift_bridgeObjectRelease(v21).n128_u64[0];
  v23 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSeenInitiallyGatheredFavorites;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSeenInitiallyGatheredFavorites) == 1
    && v5 == 0)
  {
    if (*(_QWORD *)(*v4 + 16))
    {
      v25 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData;
      v26 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
      swift_retain();
      sub_10002944C();
      v28 = v27;
      swift_release(v26);
      v29 = type metadata accessor for DOCMutableSidebarSection();
      *(_BYTE *)(swift_dynamicCastClassUnconditional(v28, v29, 0, 0, 0) + 48) = 1;
      sub_1000A3FE8(0, 0);
      v30 = *(_QWORD *)(a2 + v25);
      swift_retain();
      sub_10012E5BC();
      swift_unknownObjectRelease(v28);
      swift_release(v30);
    }
  }
  v31 = objc_msgSend(v7, "isGathering", v22);

  *(_BYTE *)(a2 + v23) = v31 ^ 1;
  return 1;
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewWillLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  char *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _BYTE *v25;
  uint64_t (*v26)(_QWORD);
  objc_class *v27;
  _BYTE v28[32];
  objc_super v29;
  char v30[24];

  v1 = v0;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 1;
  v2 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
  v3 = objc_msgSend(v2, "startBatching");

  v4 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens], v28, 33, 0);
  v5 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
  v7 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v7 >= v6 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
  v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
  specialized Array._endMutation()(v8);
  swift_endAccess(v28);
  v9 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext], v30, 0, 0);
  if (*(_QWORD *)v9 == 2)
  {
    v10 = sub_10001F69C();
    v11 = objc_msgSend(v1, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "frame");
      v14 = v13;
      v16 = v15;

      sub_10005897C(v10, v14, v16, 0, 0);
LABEL_11:
      v27 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
      v29.receiver = v1;
      v29.super_class = v27;
      objc_msgSendSuper2(&v29, "viewWillLayoutSubviews");

      return;
    }
    __break(1u);
  }
  else
  {
    if (!sub_1001790A0((uint64_t)v1, *(_WORD *)v9 & 0x101))
      goto LABEL_11;
    v17 = sub_10001F69C();
    v18 = objc_msgSend(v1, "view");
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, "frame");
      v21 = v20;
      v23 = v22;

      sub_10003DDDC();
      sub_10005897C(v17, v21, v23, 0, v24 & 1);

      v26 = sub_1001793C8((uint64_t)v28);
      if (*v25 != 2)
        v25[1] = 0;
      ((void (*)(_BYTE *, _QWORD))v26)(v28, 0);
      goto LABEL_11;
    }
  }
  __break(1u);
}

uint64_t sub_100028BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  _QWORD v30[9];

  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a2 + 40);
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v7 = v6;
    Hasher.init(_seed:)(v30, v4);
    String.hash(into:)(v30, v5, v7);
    v8 = Hasher._finalize()();
    swift_bridgeObjectRelease(v7);
    v9 = -1 << *(_BYTE *)(a2 + 32);
    v10 = v8 & ~v9;
    v11 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v10));
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v12 == v15 && v14 == v16)
      {
LABEL_17:
        swift_bridgeObjectRelease_n(v14, 2);
        goto LABEL_18;
      }
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v18);
      if ((v19 & 1) != 0)
      {
LABEL_18:
        v28 = 1;
        return v28 & 1;
      }
      v20 = ~v9;
      v21 = (v10 + 1) & v20;
      if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
      {
        while (1)
        {
          v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v21));
          v14 = v23;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v22 == v24 && v14 == v25)
            break;
          v27 = v25;
          v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v14, v24, v25, 0);
          swift_bridgeObjectRelease(v14);
          swift_bridgeObjectRelease(v27);
          if ((v28 & 1) == 0)
          {
            v21 = (v21 + 1) & v20;
            if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
              continue;
          }
          return v28 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v28 = 0;
  return v28 & 1;
}

uint64_t sub_100028DA4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(void **)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(id *)(a1 + 72);
  v9 = v2;
  v10 = v3;
  v11 = v4;
  swift_bridgeObjectRetain(v5);
  v12 = v6;
  swift_unknownObjectRetain(v7);
  return a1;
}

double sub_100028E10(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  char v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;

  v3 = v2;
  if (a1)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection);
    v7 = *(void **)(v6 + 24);
    if (v7)
    {
      v8 = *(id *)(v6 + 24);
      goto LABEL_6;
    }
    v9 = *(void **)(v6 + 16);
    if (v9)
    {
      v8 = v9;
      v7 = 0;
LABEL_6:
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v10 = a1;
      v11 = v7;
      v12 = v8;
      v13 = static NSObject.== infix(_:_:)(v12, v10);

      if ((v13 & 1) != 0)
        return result;
    }
  }
  v15 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  v16 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection;
  v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection);
  v18 = *(void **)(v17 + 24);
  if (*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer) + 96))
  {
    *(_QWORD *)(v17 + 24) = a1;
    v19 = a1;

    v20 = *(_QWORD *)(v3 + v15);
    swift_retain();
    sub_1003E66C0(0xD00000000000003BLL, 0x800000010051C150);
    swift_release(v20);
    v21 = *(_QWORD *)(v3 + v15);
    v22 = swift_allocObject(&unk_1005D4140, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16);
    v23 = swift_allocObject(&unk_1005D4168, 33, 7);
    *(_QWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 24) = a1;
    *(_BYTE *)(v23 + 32) = a2 & 1;
    v24 = *(_QWORD *)(v21 + 104);
    v25 = *(_QWORD *)(v21 + 112);
    *(_QWORD *)(v21 + 104) = sub_10023D0E4;
    *(_QWORD *)(v21 + 112) = v23;
    v26 = v19;
    sub_100087534(v24, v25);
  }
  else
  {
    *(_QWORD *)(v17 + 24) = 0;

    v27 = *(_QWORD *)(v3 + v16);
    v28 = *(void **)(v27 + 16);
    *(_QWORD *)(v27 + 16) = a1;
    v29 = a1;

    sub_1000A3FE8(a2 & 1, 0);
    v30 = *(_QWORD *)(v3 + v15);
    swift_retain();
    sub_1000AF824();
    *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000290D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644B80);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100029224(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(void **)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(void **)(a1 + 72);

  swift_bridgeObjectRelease(v4);
  swift_unknownObjectRelease(v6);

  return a1;
}

void sub_10002944C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 24), 2);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x100029690);
}

uint64_t sub_100029710(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  void *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  unsigned int v64;
  _QWORD v65[3];
  uint64_t v66;
  char *v67;
  _QWORD v68[5];
  char v69[24];

  v4 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v69, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1, v11);
  if (result)
  {
    v13 = (char *)result;
    v63 = a2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
    v15 = v14;
    v16 = objc_allocWithZone((Class)NSUserDefaults);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v16, "initWithSuiteName:", v17, swift_bridgeObjectRelease(v15).n128_f64[0]);

    if (v18)
    {
      v20 = objc_msgSend(v18, "BOOLForKey:", DOCUserDefaultsKeyIsSharingFolderWithAdultFamilyMember);

    }
    else
    {
      v20 = 0;
    }
    v21 = Logger.DocumentManager.unsafeMutableAddressor(v19);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v21, v7);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v25 = 67109120;
      LODWORD(v68[0]) = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v68, (char *)v68 + 4);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Files Family Tip, isSharingFolderWithAdultFamilyMember %{BOOL}d", v25, 8u);
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (qword_1006410F0 != -1)
      swift_once(&qword_1006410F0, sub_1000B10A4);
    v26 = sub_10006922C(&qword_100646A10);
    v27 = sub_10007E788(v26, (uint64_t)qword_100652718);
    v64 = v20;
    LOBYTE(v65[0]) = v20;
    v28 = swift_beginAccess(v27, v68, 33, 0);
    Tips.Parameter.wrappedValue.setter(v65, v26, v28);
    swift_endAccess(v68);
    v29 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager;
    if (*(_QWORD *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager])
      goto LABEL_11;
    sub_100092328((uint64_t)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher], (uint64_t)v68);
    v30 = v13;
    v31 = sub_100098C54();
    v32 = sub_10007E7C8((uint64_t)v68, v68[3]);
    __chkstk_darwin(v32);
    v34 = (uint64_t *)((char *)&v62 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v35 + 16))(v34);
    v36 = *v34;
    v66 = type metadata accessor for FamilyFetcher();
    v67 = (char *)&_s14descr1005DD249OMn.Parent + 3;
    v65[0] = v36;
    v37 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCTipsManager(0));
    v38 = sub_10007E7C8((uint64_t)v65, v66);
    __chkstk_darwin(v38);
    v40 = (uint64_t *)((char *)&v62 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v41 + 16))(v40);
    v42 = *v40;
    v43 = v63;
    v44 = v63;
    v45 = sub_1001B3C34(v30, v42, v43, v31, v37);
    sub_100068588(v65);
    sub_100068588(v68);
    v46 = *(void **)&v13[v29];
    *(_QWORD *)&v13[v29] = v45;

    if (*(_QWORD *)&v13[v29])
LABEL_11:
      sub_10011712C();
    v47 = type metadata accessor for TaskPriority(0);
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
    v48(v6, 1, 1, v47);
    v49 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v49 + 16);
    type metadata accessor for MainActor(0);
    swift_retain();
    v51 = static MainActor.shared.getter(v50);
    v52 = (_QWORD *)swift_allocObject(&unk_1005CC638, 40, 7);
    v52[2] = v51;
    v52[3] = &protocol witness table for MainActor;
    v52[4] = v49;
    swift_release(v49);
    v53 = sub_100174E78((uint64_t)v6, (uint64_t)&unk_100646A20, (uint64_t)v52);
    v54 = &v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks];
    swift_beginAccess(&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks], v68, 33, 0);
    swift_retain();
    sub_100087A88(v65, v53);
    v55 = v65[0];
    swift_endAccess(v68);
    swift_release(v55);
    v48(v6, 1, 1, v47);
    v56 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v56 + 16);
    swift_retain();
    v58 = static MainActor.shared.getter(v57);
    v59 = swift_allocObject(&unk_1005CC660, 41, 7);
    *(_QWORD *)(v59 + 16) = v58;
    *(_QWORD *)(v59 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v59 + 32) = v56;
    *(_BYTE *)(v59 + 40) = v64;
    swift_release(v56);
    v60 = sub_100174E78((uint64_t)v6, (uint64_t)&unk_100646A30, v59);
    swift_beginAccess(v54, v68, 33, 0);
    swift_retain();
    sub_100087A88(v65, v60);
    v61 = v65[0];
    swift_endAccess(v68);

    swift_release(v60);
    swift_release(v53);
    return swift_release(v61);
  }
  return result;
}

void sub_100029CFC(uint64_t a1)
{
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  v2 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = sub_10006922C((uint64_t *)&unk_100644560);
  v5 = swift_allocObject(v4, 112, 7);
  v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates];
  *(_OWORD *)(v5 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v5 + 56) = &type metadata for Int;
  *(_QWORD *)(v5 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 96) = type metadata accessor for DOCItemCollectionViewController(0);
  *(_QWORD *)(v5 + 104) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v5 + 72) = v1;
  v8 = v1;
  os_log(_:dso:log:type:_:)("performingBatchUpdates = %d in %@", 33, 2, &_mh_execute_header, v2, v3, v5);

  swift_bridgeObjectRelease(v5);
  if (!*(_QWORD *)&v1[v6])
  {
    if (v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] == 1)
      sub_10018056C();
    if (v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] == 1)
      sub_100027218();
  }
}

double sub_100029E34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t Strong;
  double result;
  void *v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v6 = a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v26, 1, 0);
  v7 = *(_QWORD *)v6;
  *(_QWORD *)v6 = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver, v9);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = sub_10005F27C();
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, "dataSource:didUpdate:animated:", a1, isa, a3 & 1, swift_bridgeObjectRelease(v13).n128_f64[0]);

    swift_unknownObjectRelease(v12);
  }
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (!v15)
    return result;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 >= 0)
      v23 = v15 & 0xFFFFFFFFFFFFFF8;
    else
      v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
    swift_bridgeObjectRetain(*(_QWORD *)(a1
                                       + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers));
    v16 = (void *)_CocoaArrayWrapper.endIndex.getter(v23);
    if (v16)
      goto LABEL_6;
LABEL_18:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
    return result;
  }
  v16 = *(void **)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers));
  if (!v16)
    goto LABEL_18;
LABEL_6:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  }
  else
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    v17 = *(id *)(v15 + 32);
  }
  v16 = v17;
  swift_bridgeObjectRelease(v15);
  v19 = swift_unknownObjectWeakLoadStrong(v8, v18);
  if (v19)
  {
    v8 = (void *)v19;
    v6 = *(_QWORD *)v6;
    if (!((unint64_t)v6 >> 62))
    {
      v20 = swift_bridgeObjectRetain_n(v6, 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v20);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v21 = v6;
LABEL_12:
      swift_bridgeObjectRelease(v6);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v22 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "dataSource:didSet:on:animated:", a1, v22, v16, a3 & 1, swift_bridgeObjectRelease(v21).n128_f64[0]);

      swift_unknownObjectRelease(v8);
      return result;
    }
LABEL_22:
    if (v6 < 0)
      v24 = v6;
    else
      v24 = v6 & 0xFFFFFFFFFFFFFF8;
    v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRetain(v6);
    v21 = _bridgeCocoaArray<A>(_:)(v24, v25);
    goto LABEL_12;
  }

  return result;
}

uint64_t sub_10002A0C4(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 16);

  return a1;
}

void sub_10002A100(char *a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, __n128);
  uint64_t v7;
  __n128 v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v5 = *(void (**)(uint64_t, __n128))&a1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting];
  if (v5)
  {
    v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting + 8];
    v8 = swift_retain();
    v5(a2, v8);
    sub_100087534((uint64_t)v5, v7);
  }
  v9 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_100640E20 != -1)
    swift_once(&qword_100640E20, sub_100086BA8);
  objc_msgSend(v9, "postNotificationName:object:", qword_100672728, a3);

  v10 = objc_msgSend(a1, "viewIfLoaded");
  v11 = objc_msgSend(v10, "window");

  v12 = objc_msgSend(v11, "rootViewController");
  objc_msgSend(v12, "setNeedsFocusUpdate");

  dispatch_resume(*(dispatch_object_t *)&a1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_queue]);
}

void sub_10002A250(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  id *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  _BYTE *v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  Swift::String v42;
  Swift::String_optional v43;
  Swift::String v44;
  Swift::String v45;
  char *v46;
  id v47;
  void *v48;
  Swift::String v49;
  Swift::String_optional v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  Swift::String v66;
  Swift::String_optional v67;
  Swift::String v68;
  Swift::String v69;
  _BYTE *v70;
  uint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  void *v81;
  Swift::String v82;
  Swift::String_optional v83;
  Swift::String v84;
  Swift::String v85;
  char *v86;
  id v87;
  void *v88;
  Swift::String v89;
  Swift::String_optional v90;
  Swift::String v91;
  Swift::String v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  NSString v107;
  uint64_t v108;
  uint64_t inited;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  id v113;
  id v114;
  void *v115;
  Swift::String v116;
  Swift::String_optional v117;
  Swift::String v118;
  Swift::String v119;
  _BYTE *v120;
  uint64_t v121;
  char v122;
  uint64_t *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  _BYTE *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  char v148[24];
  _OWORD v149[3];
  char v150[80];
  Swift::String v151;
  Swift::String v152;
  Swift::String v153;
  Swift::String v154;
  Swift::String v155;
  Swift::String v156;
  Swift::String v157;

  v4 = v3;
  v7 = 0;
  if ((a3 & 1) != 0)
  {
    v8 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
    swift_beginAccess(v8, v148, 0, 0);
    if (*v8)
    {
      v9 = *v8;
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(v9, "valueForKey:", v10);

      if (v11)
      {
        _bridgeAnyObjectToAny(_:)(&v146, v11);
        swift_unknownObjectRelease(v11);
      }
      else
      {
        v146 = 0u;
        v147 = 0u;
      }
      sub_10007EBDC((uint64_t)&v146, (uint64_t)v149);
    }
    else
    {
      memset(v149, 0, 32);
    }
    sub_10007EBDC((uint64_t)v149, (uint64_t)&v146);
    if (*((_QWORD *)&v147 + 1))
    {
      v12 = sub_10006922C(&qword_100644148);
      if ((swift_dynamicCast(&v145, &v146, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
      {
        v7 = v145;
        goto LABEL_13;
      }
    }
    else
    {
      sub_10007EB54((uint64_t)&v146);
    }
    v7 = 0;
  }
LABEL_13:
  *(_QWORD *)(v4 + 16) = &off_1005BF450;
  v143 = type metadata accessor for DOCMutableSidebarSection();
  swift_allocObject(v143, 96, 7);
  swift_retain();
  v13 = (uint64_t)sub_10000EDCC(0, 0, 0xE000000000000000, a2);
  v14 = v13;
  *(_WORD *)(v13 + 72) = 0;
  if (v7)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      v13 = sub_10007EF08(7368564, 0xE300000000000000);
      if ((v15 & 1) != 0)
      {
        v16 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v13);
        v17 = *v16;
        v18 = v16[1];
        v19 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
        sub_10012F5E0(v17, v18);
        swift_retain();
        v21 = JSONDecoder.init()(v20);
        v22 = sub_10012F624();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v149, &type metadata for DOCMutableSidebarSection.PersistableState, v17, v18, &type metadata for DOCMutableSidebarSection.PersistableState, v22);
        swift_release(v21);
        *(_BYTE *)(v14 + 48) = v149[0];
        swift_release(v14);
        v13 = sub_1000D4C00(v17, v18);
      }
    }
  }
  v23 = (id)_DocumentManagerBundle(v13);
  if (!v23)
    goto LABEL_58;
  v24 = v23;
  v151._countAndFlagsBits = 0xD000000000000037;
  v151._object = (void *)0x8000000100510770;
  v25._countAndFlagsBits = 0x6E6F697461636F4CLL;
  v25._object = (void *)0xE900000000000073;
  v26.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v26.value._object = (void *)0xEB00000000656C62;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v151);

  swift_allocObject(v143, 96, 7);
  swift_retain();
  swift_bridgeObjectRetain(v28._object);
  v29 = sub_10000EDCC(2, v28._countAndFlagsBits, (uint64_t)v28._object, a2);
  v29[72] = 1;
  v140 = v14;
  if (v7)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      v30 = sub_10007EF08(0x6E6F697461636F6CLL, 0xE900000000000073);
      if ((v31 & 1) != 0)
      {
        v32 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v30);
        v33 = *v32;
        v34 = v32[1];
        v35 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
        sub_10012F5E0(v33, v34);
        swift_retain();
        v37 = JSONDecoder.init()(v36);
        v38 = sub_10012F624();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v149, &type metadata for DOCMutableSidebarSection.PersistableState, v33, v34, &type metadata for DOCMutableSidebarSection.PersistableState, v38);
        swift_release(v37);
        v29[48] = v149[0];
        swift_release(v29);
        sub_1000D4C00(v33, v34);
      }
    }
  }
  swift_bridgeObjectRelease(v28._object);
  v142 = v29;
  v141 = a1;
  v40 = (id)_DocumentManagerBundle(v39);
  if (!v40)
    goto LABEL_59;
  v41 = v40;
  v152._countAndFlagsBits = 0xD00000000000002ELL;
  v152._object = (void *)0x80000001005107B0;
  v42._countAndFlagsBits = 0x657469726F766146;
  v42._object = (void *)0xE900000000000073;
  v43.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v43.value._object = (void *)0xEB00000000656C62;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v152);

  swift_allocObject(v143, 96, 7);
  swift_retain();
  swift_bridgeObjectRetain(v45._object);
  v46 = (char *)sub_10000EDCC(3, v45._countAndFlagsBits, (uint64_t)v45._object, a2);
  v46[49] = 1;
  v47 = (id)_DocumentManagerBundle(v46);
  if (!v47)
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v48 = v47;
  v153._countAndFlagsBits = 0xD000000000000049;
  v153._object = (void *)0x80000001005107E0;
  v49._countAndFlagsBits = 0x65766F6D6552;
  v49._object = (void *)0xE600000000000000;
  v50.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v50.value._object = (void *)0xEB00000000656C62;
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v153);

  v53 = *((_QWORD *)v46 + 8);
  *(Swift::String *)(v46 + 56) = v52;
  swift_bridgeObjectRelease(v53);
  v46[72] = 1;
  if (v7)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      v54 = sub_10007EF08(0x657469726F766166, 0xE900000000000073);
      if ((v55 & 1) != 0)
      {
        v56 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v54);
        v57 = *v56;
        v58 = v56[1];
        v59 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v59, *(unsigned int *)(v59 + 48), *(unsigned __int16 *)(v59 + 52));
        sub_10012F5E0(v57, v58);
        swift_retain();
        v61 = JSONDecoder.init()(v60);
        v62 = sub_10012F624();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v149, &type metadata for DOCMutableSidebarSection.PersistableState, v57, v58, &type metadata for DOCMutableSidebarSection.PersistableState, v62);
        swift_release(v61);
        v46[48] = v149[0];
        swift_release(v46);
        sub_1000D4C00(v57, v58);
      }
    }
  }
  swift_bridgeObjectRelease(v45._object);
  v64 = (id)_DocumentManagerBundle(v63);
  if (!v64)
    goto LABEL_61;
  v65 = v64;
  v154._countAndFlagsBits = 0xD000000000000033;
  v154._object = (void *)0x8000000100510830;
  v66._countAndFlagsBits = 0x646572616853;
  v66._object = (void *)0xE600000000000000;
  v67.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v67.value._object = (void *)0xEB00000000656C62;
  v68._countAndFlagsBits = 0;
  v68._object = (void *)0xE000000000000000;
  v69 = NSLocalizedString(_:tableName:bundle:value:comment:)(v66, v67, (NSBundle)v65, v68, v154);

  swift_allocObject(v143, 96, 7);
  swift_retain();
  swift_bridgeObjectRetain(v69._object);
  v70 = sub_10000EDCC(4, v69._countAndFlagsBits, (uint64_t)v69._object, a2);
  v70[72] = 1;
  if (v7 && *(_QWORD *)(v7 + 16) && (v71 = sub_10007EF08(0x73726576726573, 0xE700000000000000), (v72 & 1) != 0))
  {
    v73 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v71);
    v74 = *v73;
    v75 = v73[1];
    v76 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
    sub_10012F5E0(v74, v75);
    swift_retain();
    v78 = JSONDecoder.init()(v77);
    v79 = sub_10012F624();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v149, &type metadata for DOCMutableSidebarSection.PersistableState, v74, v75, &type metadata for DOCMutableSidebarSection.PersistableState, v79);
    swift_release(v78);
    v70[48] = v149[0];
    swift_release(v70);
    sub_1000D4C00(v74, v75);
    swift_bridgeObjectRelease(v69._object);
  }
  else
  {
    swift_bridgeObjectRelease(v69._object);
  }
  v80 = (id)_DocumentManagerBundle(v103);
  if (!v80)
    goto LABEL_62;
  v81 = v80;
  v139 = v4;
  v155._countAndFlagsBits = 0xD000000000000041;
  v155._object = (void *)0x8000000100510870;
  v82._countAndFlagsBits = 0x69535B2073676154;
  v82._object = (void *)0xEE005D7261626564;
  v83.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v83.value._object = (void *)0xEB00000000656C62;
  v84._countAndFlagsBits = 1936154964;
  v84._object = (void *)0xE400000000000000;
  v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v155);

  swift_allocObject(v143, 96, 7);
  swift_retain();
  swift_bridgeObjectRetain(v85._object);
  v86 = (char *)sub_10000EDCC(5, v85._countAndFlagsBits, (uint64_t)v85._object, a2);
  v86[49] = 1;
  v87 = (id)_DocumentManagerBundle(v86);
  if (!v87)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v88 = v87;
  v156._object = (void *)0x800000010050E520;
  v89._countAndFlagsBits = 0x6574656C6544;
  v89._object = (void *)0xE600000000000000;
  v90.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v90.value._object = (void *)0xEB00000000656C62;
  v91._countAndFlagsBits = 0;
  v91._object = (void *)0xE000000000000000;
  v156._countAndFlagsBits = 0xD00000000000001BLL;
  v92 = NSLocalizedString(_:tableName:bundle:value:comment:)(v89, v90, (NSBundle)v88, v91, v156);

  v93 = *((_QWORD *)v86 + 8);
  *(Swift::String *)(v86 + 56) = v92;
  swift_bridgeObjectRelease(v93);
  v86[72] = 1;
  if (v7)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      v94 = sub_10007EF08(1936154996, 0xE400000000000000);
      if ((v95 & 1) != 0)
      {
        v96 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v94);
        v97 = *v96;
        v98 = v96[1];
        v99 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
        swift_retain();
        v100 = sub_10012F5E0(v97, v98);
        v101 = JSONDecoder.init()(v100);
        v102 = sub_10012F624();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v149, &type metadata for DOCMutableSidebarSection.PersistableState, v97, v98, &type metadata for DOCMutableSidebarSection.PersistableState, v102);
        swift_release(v101);
        v86[48] = v149[0];
        swift_release(v86);
        sub_1000D4C00(v97, v98);
      }
    }
  }
  swift_bridgeObjectRelease(v85._object);
  v104 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSMBFileProvider);
  v106 = v105;
  v107 = String._bridgeToObjectiveC()();
  v138 = objc_msgSend(v104, "canHostAppPerformAction:bundleIdentifier:", 0, v107, swift_bridgeObjectRelease(v106).n128_f64[0]);

  v108 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v108, v150);
  *(_OWORD *)(inited + 16) = xmmword_1004D9710;
  v110 = v140;
  *(_QWORD *)(inited + 32) = v140;
  *(_QWORD *)(inited + 40) = v142;
  *(_QWORD *)(inited + 48) = v46;
  *(_QWORD *)(inited + 56) = v70;
  *(_QWORD *)(inited + 64) = v86;
  *(_QWORD *)&v149[0] = inited;
  specialized Array._endMutation()(inited);
  v111 = *(_QWORD *)&v149[0];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v112 = v141;
  v113 = objc_msgSend(v141, "isPickerUI", swift_retain().n128_f64[0]);
  if ((v113 & 1) == 0)
    goto LABEL_49;
  v114 = (id)_DocumentManagerBundle(v113);
  if (!v114)
  {
LABEL_64:
    __break(1u);
    return;
  }
  v115 = v114;
  v157._countAndFlagsBits = 0xD000000000000032;
  v157._object = (void *)0x80000001005108C0;
  v116._countAndFlagsBits = 0x796C746E65636552;
  v116._object = (void *)0xED00006465735520;
  v117.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v117.value._object = (void *)0xEB00000000656C62;
  v118._countAndFlagsBits = 0;
  v118._object = (void *)0xE000000000000000;
  v119 = NSLocalizedString(_:tableName:bundle:value:comment:)(v116, v117, (NSBundle)v115, v118, v157);

  swift_allocObject(v143, 96, 7);
  swift_retain();
  swift_bridgeObjectRetain(v119._object);
  v120 = sub_10000EDCC(1, v119._countAndFlagsBits, (uint64_t)v119._object, a2);
  v120[49] = 1;
  if (v7)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      v121 = sub_10007EF08(0x796C746E65636572, 0xEC00000064657355);
      if ((v122 & 1) != 0)
      {
        v123 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v121);
        v125 = *v123;
        v124 = v123[1];
        v144 = v124;
        v126 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v126, *(unsigned int *)(v126 + 48), *(unsigned __int16 *)(v126 + 52));
        swift_retain();
        v127 = sub_10012F5E0(v125, v124);
        v128 = JSONDecoder.init()(v127);
        v129 = sub_10012F624();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v146, &type metadata for DOCMutableSidebarSection.PersistableState, v125, v144, &type metadata for DOCMutableSidebarSection.PersistableState, v129);
        swift_release(v128);
        v120[48] = v146;
        swift_release(v120);
        sub_1000D4C00(0, v144);
      }
    }
  }
  swift_bridgeObjectRelease(v119._object);
  v112 = v141;
  if ((unint64_t)v111 >> 62)
  {
    if (v111 < 0)
      v136 = v111;
    else
      v136 = v111 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v111);
    v137 = _CocoaArrayWrapper.endIndex.getter(v136);
    swift_bridgeObjectRelease(v111);
    if (v137 >= 1)
      goto LABEL_48;
    goto LABEL_57;
  }
  v130 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (v130 < 1)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_48:
  sub_1004594E4(1, 1, (uint64_t)v120);
  swift_release(v120);
  v111 = *(_QWORD *)&v149[0];
  v110 = v140;
LABEL_49:
  v131 = sub_100081440(v111);
  *(_QWORD *)&v132 = swift_bridgeObjectRelease(v111).n128_u64[0];
  *(_QWORD *)(v139 + 24) = v131;
  LODWORD(v131) = objc_msgSend(v112, "supportsRemovableFileProviders", v132) & v138;
  v133 = sub_10006922C(&qword_100644B90);
  if ((_DWORD)v131 == 1)
  {
    v134 = swift_allocObject(v133, 96, 7);
    *(_OWORD *)(v134 + 16) = xmmword_1004D9B50;
    v135 = v142;
    *(_QWORD *)(v134 + 32) = v142;
    *(_QWORD *)(v134 + 40) = &off_1005C2AB0;
    *(_QWORD *)(v134 + 48) = v46;
    *(_QWORD *)(v134 + 56) = &off_1005C2AB0;
    *(_QWORD *)(v134 + 64) = v70;
    *(_QWORD *)(v134 + 72) = &off_1005C2AB0;
    *(_QWORD *)(v134 + 80) = v86;
    *(_QWORD *)(v134 + 88) = &off_1005C2AB0;
    swift_retain();
  }
  else
  {
    v134 = swift_allocObject(v133, 80, 7);
    *(_OWORD *)(v134 + 16) = xmmword_1004D9880;
    v135 = v142;
    *(_QWORD *)(v134 + 32) = v142;
    *(_QWORD *)(v134 + 40) = &off_1005C2AB0;
    *(_QWORD *)(v134 + 48) = v46;
    *(_QWORD *)(v134 + 56) = &off_1005C2AB0;
    *(_QWORD *)(v134 + 64) = v86;
    *(_QWORD *)(v134 + 72) = &off_1005C2AB0;
  }
  swift_retain();
  swift_retain();
  swift_release(v70);
  swift_release(v46);
  swift_release(v135);
  swift_release(v110);

  swift_release(a2);
  *(_QWORD *)(v139 + 32) = v134;
  swift_bridgeObjectRelease(v7);
}

double sub_10002B1C0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  Swift::String v33;
  Swift::String v34;
  void *object;
  Swift::String v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  double result;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  _QWORD *v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;

  v94 = a7;
  v95 = a8;
  v91 = a5;
  v92 = a6;
  v89 = a3;
  v90 = a4;
  v93 = a2;
  v88 = sub_10006922C(&qword_10064A600);
  v11 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v83 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v83 - v18;
  v20 = type metadata accessor for DOCBrowserHistoryItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v83 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v83 - v28;
  v30 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  v31 = a1;
  v32 = (_QWORD *)(a1 + *(int *)(v30 + 20));
  if (*v32)
  {
    v96 = 0;
    v97 = 0xE000000000000000;
    _StringGuts.grow(_:)(75);
    v33._countAndFlagsBits = 91;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    v34._countAndFlagsBits = static String._fromSubstring(_:)(v89, v90, v91, v92);
    object = v34._object;
    String.append(_:)(v34);
    swift_bridgeObjectRelease(object);
    v36._object = (void *)0x8000000100535BB0;
    v36._countAndFlagsBits = 0xD000000000000048;
    String.append(_:)(v36);
    v37 = v97;
    sub_1000542B0(v96, v97);
    swift_bridgeObjectRelease(v37);
    v38 = swift_allocObject(&unk_1005EC848, 32, 7);
    *(_QWORD *)(v38 + 16) = v94;
    *(_QWORD *)(v38 + 24) = v95;
    v39 = (_QWORD *)*v32;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
      v39 = sub_10008190C(0, v39[2] + 1, 1, v39);
    v42 = v39[2];
    v41 = v39[3];
    if (v42 >= v41 >> 1)
      v39 = sub_10008190C((_QWORD *)(v41 > 1), v42 + 1, 1, v39);
    v39[2] = v42 + 1;
    v43 = &v39[2 * v42];
    v43[4] = sub_10010DB64;
    v43[5] = v38;
    *v32 = v39;
  }
  else
  {
    v91 = v29;
    v92 = v20;
    v83 = v26;
    v84 = v23;
    v85 = v16;
    v86 = v13;
    v93 = v21;
    v87 = v31;
    v89 = v19;
    v90 = a9;
    v44 = _swiftEmptyArrayStorage;
    *v32 = _swiftEmptyArrayStorage;
    v32[1] = _swiftEmptyArrayStorage;
    v45 = v32;
    v46 = swift_allocObject(&unk_1005EC820, 32, 7);
    *(_QWORD *)(v46 + 16) = v94;
    *(_QWORD *)(v46 + 24) = v95;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v44 = sub_10008190C(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v48 = v44[2];
    v47 = v44[3];
    v50 = (uint64_t)v91;
    v49 = v92;
    v51 = v11;
    if (v48 >= v47 >> 1)
      v44 = sub_10008190C((_QWORD *)(v47 > 1), v48 + 1, 1, v44);
    v53 = (uint64_t)v89;
    v52 = v90;
    v54 = (uint64_t *)(a10 + 16);
    v44[2] = v48 + 1;
    v55 = &v44[2 * v48];
    v55[4] = sub_10006657C;
    v55[5] = v46;
    *v45 = v44;
    sub_1000271D4(v52, v53, &qword_10064A600);
    v56 = v93;
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
    if (v57(v53, 1, v49) == 1)
    {
      sub_10000CB4C(v53, &qword_10064A600);
      v58 = sub_10006922C(&qword_100655B98);
      v59 = *(unsigned __int8 *)(v51 + 80);
      v60 = v49;
      v61 = (v59 + 32) & ~v59;
      v62 = swift_allocObject(v58, v61 + *(_QWORD *)(v51 + 72), v59 | 7);
      *(_OWORD *)(v62 + 16) = xmmword_1004D9670;
      v63 = v62 + v61;
      v64 = v87;
      sub_1000271D4(v87, v62 + v61, &qword_10064A600);
      v65 = (uint64_t)v85;
      sub_1000271D4(v63, (uint64_t)v85, &qword_10064A600);
      v66 = v65;
      v67 = (uint64_t)v86;
      sub_100070EDC(v66, (uint64_t)v86, &qword_10064A600);
      if (v57(v67, 1, v60) == 1)
      {
        sub_10000CB4C(v67, &qword_10064A600);
        v68 = _swiftEmptyArrayStorage;
      }
      else
      {
        v74 = v67;
        v75 = (uint64_t)v83;
        sub_1001D0788(v74, (uint64_t)v83, type metadata accessor for DOCBrowserHistoryItem);
        v76 = (uint64_t)v84;
        sub_1001D0788(v75, (uint64_t)v84, type metadata accessor for DOCBrowserHistoryItem);
        v68 = _swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          v68 = (_QWORD *)sub_100081B5C(0, _swiftEmptyArrayStorage[2] + 1, 1, (unint64_t)_swiftEmptyArrayStorage);
        v78 = v68[2];
        v77 = v68[3];
        if (v78 >= v77 >> 1)
          v68 = (_QWORD *)sub_100081B5C(v77 > 1, v78 + 1, 1, (unint64_t)v68);
        v68[2] = v78 + 1;
        sub_1001D0788(v76, (uint64_t)v68+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v78, type metadata accessor for DOCBrowserHistoryItem);
      }
      v79 = v88;
      swift_setDeallocating(v62);
      swift_arrayDestroy(v63, *(_QWORD *)(v62 + 16), v79);
      swift_deallocClassInstance(v62, 32, 7);
      v80 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
      v96 = *(_QWORD *)(v64 + *(int *)(v80 + 20));
      swift_bridgeObjectRetain(v96);
      sub_1000887F4((uint64_t)v68);
      v81 = swift_bridgeObjectRetain(*(_QWORD *)(v64 + *(int *)(v80 + 24)));
      sub_1000887F4(v81);
      v82 = v96;
      swift_beginAccess(v54, &v96, 1, 0);
      v73 = *v54;
      *v54 = v82;
    }
    else
    {
      sub_1001D0788(v53, v50, type metadata accessor for DOCBrowserHistoryItem);
      v69 = sub_10006922C(&qword_100655BA0);
      v70 = *(unsigned __int8 *)(v56 + 80);
      v71 = (v70 + 32) & ~v70;
      v72 = swift_allocObject(v69, v71 + *(_QWORD *)(v56 + 72), v70 | 7);
      *(_OWORD *)(v72 + 16) = xmmword_1004D9670;
      sub_1001D0788(v50, v72 + v71, type metadata accessor for DOCBrowserHistoryItem);
      swift_beginAccess(v54, &v96, 1, 0);
      v73 = *v54;
      *v54 = v72;
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v73).n128_u64[0];
  }
  return result;
}

void DOCItemCollectionViewController.effectiveAppearanceDidChange(_:)(void *a1)
{
  char *v1;
  _QWORD *v3;
  void *v4;
  double v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  _BYTE v43[200];
  _BYTE v44[200];
  objc_super v45;

  v45.receiver = v1;
  v45.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  v42 = a1;
  objc_msgSendSuper2(&v45, "effectiveAppearanceDidChange:", a1);
  if ((v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0)
  {
    v3 = sub_100034068(0);
    sub_10002F3B0(2);
    if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] == 1)
    {
      v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (!v4)
      {
LABEL_45:
        __break(1u);
        return;
      }
      if ((objc_msgSend(v4, "isGathering") & 1) == 0)
      {
        sub_100027218();
        sub_100094F78((uint64_t)v3, 0, 0);
      }
    }
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(v3).n128_u64[0];
    v6 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v6 && (v7 = objc_msgSend(v6, "preparedCells", v5)) != 0)
    {
      v8 = v7;
      v9 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    }
    else
    {
      v10 = (uint64_t)_swiftEmptyArrayStorage;
    }
    v38 = v1;
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v34 = v10;
      else
        v34 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v10);
      if (v11)
        goto LABEL_12;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11)
      {
LABEL_12:
        if (v11 >= 1)
        {
          v12 = 0;
          v13 = v10 & 0xC000000000000001;
          v39 = v10;
          v40 = v10 & 0xC000000000000001;
          v41 = v11;
          while (1)
          {
            v14 = v13
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10)
                : *(id *)(v10 + 8 * v12 + 32);
            v15 = v14;
            v16 = type metadata accessor for DOCItemCollectionCell();
            v17 = (_QWORD *)swift_dynamicCastClass(v15, v16);
            if (v17)
            {
              v18 = (*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x1F8))();
              if (v18)
                break;
            }

LABEL_15:
            if (v11 == ++v12)
              goto LABEL_42;
          }
          v19 = (char *)v18;
          v20 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance;
          v21 = *(void **)(v18 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
          *(_QWORD *)(v18 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance) = v42;
          v22 = v42;
          if (v42)
          {
            if (!v21)
              goto LABEL_28;
            sub_10004F2F0(0, (unint64_t *)&qword_100648EF0, DOCAppearance_ptr);
            v23 = v21;
            v24 = v22;
            v25 = static NSObject.== infix(_:_:)(v24, v23);

            if ((v25 & 1) != 0)
            {

LABEL_34:
              v10 = v39;
LABEL_37:
              v13 = v40;
              v11 = v41;
              goto LABEL_15;
            }
            v10 = v39;
            if (*(_QWORD *)&v19[v20])
            {
LABEL_28:
              v26 = *(void **)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
              *(_QWORD *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

              v27 = &v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title];
              v28 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8];
              *(_QWORD *)v27 = 0;
              *((_QWORD *)v27 + 1) = 0;
              swift_bridgeObjectRelease(v28);
              sub_1000D07FC((uint64_t)v43);
              v29 = (uint64_t)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
              sub_100070EDC((uint64_t)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v44, (uint64_t *)&unk_100641310);
              sub_100070EDC((uint64_t)v43, v29, (uint64_t *)&unk_100641310);
              sub_1001BF860((uint64_t)v44);
              v30 = *(void **)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
              *(_QWORD *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

              v31 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
              v32 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
              if ((v32 & 1) == 0)
              {
                v32 |= 1uLL;
                *(_QWORD *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v32;
              }
              if (!*(_QWORD *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
                && !sub_10007BAFC())
              {
                *(_QWORD *)&v19[v31] = 0;
                v33 = objc_autoreleasePoolPush();
                sub_10006D2D4(v32, (uint64_t)v19);
                objc_autoreleasePoolPop(v33);
              }

              goto LABEL_34;
            }
          }
          else if (!v21)
          {

LABEL_36:
            goto LABEL_37;
          }

          goto LABEL_36;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
LABEL_42:
    swift_bridgeObjectRelease(v10);
    v35 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
    swift_beginAccess(v35 + 96, v44, 1, 0);
    v36 = *(void **)(v35 + 96);
    v37 = *(void **)(v35 + 104);
    *(_QWORD *)(v35 + 96) = 0;
    *(_QWORD *)(v35 + 104) = 0;

  }
}

uint64_t sub_10002C084()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

id sub_10002C0B8(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  objc_class *v34;
  objc_super v36;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers] = _swiftEmptyArrayStorage;
  v9 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_shortDebugID];
  v10 = v2;
  v11 = UUID.init()(v10);
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = sub_100087794(6, v12, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease(v14);
  v22 = static String._fromSubstring(_:)(v15, v17, v19, v21);
  v24 = v23;
  swift_bridgeObjectRelease(v21);
  *v9 = v22;
  v9[1] = v24;
  swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver]);
  swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider]);
  v25 = &v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle] = 2;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_configuration] = a1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_sourceObserver] = a2;
  v26 = objc_allocWithZone((Class)type metadata accessor for DOCBrowserHistoryDataSource());
  v27 = a2;
  v28 = a1;
  v29 = (char *)sub_10043D3EC(v27);
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource] = v29;
  v30 = v9[1];
  v31 = (uint64_t *)&v29[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID];
  v32 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID + 8];
  *v31 = *v9;
  v31[1] = v30;
  v33 = v29;
  swift_bridgeObjectRetain(v30);

  swift_bridgeObjectRelease(v32);
  v34 = (objc_class *)type metadata accessor for DOCBrowserNavigationDataSource();
  v36.receiver = v10;
  v36.super_class = v34;
  return objc_msgSendSuper2(&v36, "init");
}

void sub_10002C2E0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  _QWORD v19[5];
  uint64_t v20;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "shared");
  objc_msgSend(v2, "addChangeObserver:", v1);

  v3 = OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection);
  if (v4)
    goto LABEL_5;
  v5 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_itemManager), "newTrashCollection");
  objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
  v6 = v5;
  sub_10004644C(v6, 0);
  v7 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = v8;

  v9 = *(_QWORD *)(v1 + v3);
  if (v9)
  {
    v10 = v9 + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate;
    *(_QWORD *)(v10 + 8) = &off_1005EC490;
    swift_unknownObjectWeakAssign(v10, v1);
  }

  v4 = *(void **)(v1 + v3);
  if (v4)
  {
LABEL_5:
    v11 = v4;
    sub_10000F6EC();

  }
  v12 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourceObserver);
  v13 = swift_allocObject(&unk_1005EC6E0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v19[4] = sub_1000A10B8;
  v20 = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10002E508;
  v19[3] = &unk_1005ECD38;
  v14 = _Block_copy(v19);
  v15 = v20;
  v16 = v12;
  swift_release(v15);
  v17 = objc_msgSend(v16, "addSubscriber:", v14);
  _Block_release(v14);

  v18 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken) = v17;

}

void sub_10002C4B8()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  id v9;

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(v1, "searchController");

  if (v2)
  {
    v9 = objc_msgSend(v2, "searchResultsController");

    if (v9)
    {
      v3 = type metadata accessor for DOCItemCollectionViewController(0);
      v4 = swift_dynamicCastClass(v9, v3);
      if (v4)
      {
        v6 = v4;
        Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], v5);
        v8 = swift_unknownObjectWeakAssign(v6 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting, Strong);
        sub_10002C4B8(v8);

        swift_unknownObjectRelease(Strong);
      }
      else
      {

      }
    }
  }
}

_QWORD *sub_10002C5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  _OWORD v11[12];
  _OWORD v12[2];

  v2 = *(void **)a1;
  v3 = *(_OWORD *)(a1 + 184);
  v11[10] = *(_OWORD *)(a1 + 168);
  v11[11] = v3;
  v12[0] = *(_OWORD *)(a1 + 200);
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)(a1 + 209);
  v4 = *(_OWORD *)(a1 + 120);
  v11[6] = *(_OWORD *)(a1 + 104);
  v11[7] = v4;
  v5 = *(_OWORD *)(a1 + 152);
  v11[8] = *(_OWORD *)(a1 + 136);
  v11[9] = v5;
  v6 = *(_OWORD *)(a1 + 56);
  v11[2] = *(_OWORD *)(a1 + 40);
  v11[3] = v6;
  v7 = *(_OWORD *)(a1 + 88);
  v11[4] = *(_OWORD *)(a1 + 72);
  v11[5] = v7;
  v8 = *(_OWORD *)(a1 + 24);
  v11[0] = *(_OWORD *)(a1 + 8);
  v11[1] = v8;
  *(_OWORD *)(a2 + 168) = *(_OWORD *)(a1 + 168);
  *(_OWORD *)(a2 + 184) = *(_OWORD *)(a1 + 184);
  *(_OWORD *)(a2 + 200) = *(_OWORD *)(a1 + 200);
  *(_OWORD *)(a2 + 209) = *(_OWORD *)(a1 + 209);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(a2 + 136) = *(_OWORD *)(a1 + 136);
  *(_OWORD *)(a2 + 152) = *(_OWORD *)(a1 + 152);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)a2 = v2;
  v9 = v2;
  return sub_1002EB2E0(v11);
}

id _s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  if (a1)
  {
    v2 = a1;
  }
  else
  {
    if (qword_100640D28 != -1)
      swift_once(&qword_100640D28, sub_10010E93C);
    v2 = (id)qword_100643728;
  }
  v3 = qword_100640D20;
  v4 = a1;
  if (v3 != -1)
    swift_once(&qword_100640D20, sub_1000AE5F8);
  v5 = (void *)qword_100643720;
  v6 = objc_msgSend((id)qword_100643720, "objectForKey:", v2);
  if (!v6)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCInteractionManager()), "init");
    objc_msgSend(v5, "setObject:forKey:", v6, v2);
  }

  return v6;
}

void *sub_10002C900()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[5];
  uint64_t v34;
  objc_super v35;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_containerView];
  objc_msgSend(v2, "setClipsToBounds:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView];
  objc_msgSend(v2, "addSubview:", v3);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v2, "widthAnchor");
  v5 = objc_msgSend(v4, "constraintEqualToConstant:", 0.0);

  v6 = OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint;
  v7 = *(void **)&v1[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint] = v5;

  result = *(void **)&v1[v6];
  if (result)
  {
    objc_msgSend(result, "setActive:", 1);
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D9710;
    v12 = objc_msgSend(v2, "heightAnchor");
    v13 = objc_msgSend(v12, "constraintEqualToConstant:", 44.0);

    *(_QWORD *)(v11 + 32) = v13;
    v14 = objc_msgSend(v3, "heightAnchor");
    v15 = objc_msgSend(v14, "constraintEqualToConstant:", 21.5);

    *(_QWORD *)(v11 + 40) = v15;
    v16 = objc_msgSend(v3, "widthAnchor");
    v17 = objc_msgSend(v16, "constraintEqualToConstant:", 21.5);

    *(_QWORD *)(v11 + 48) = v17;
    v18 = objc_msgSend(v3, "centerYAnchor");
    v19 = objc_msgSend(v2, "centerYAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    *(_QWORD *)(v11 + 56) = v20;
    v21 = objc_msgSend(v3, "trailingAnchor");
    v22 = objc_msgSend(v2, "trailingAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -13.25);

    *(_QWORD *)(v11 + 64) = v23;
    specialized Array._endMutation()(v24);
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v9, "activateConstraints:", isa);

    v35.receiver = v1;
    v35.super_class = (Class)type metadata accessor for DOCProgressCollectionIndicatorButtonItem(0);
    objc_msgSendSuper2(&v35, "setCustomView:", v2);
    v26 = v1;
    sub_10008F988((uint64_t)v1);

    v27 = (void *)objc_opt_self(UIView);
    v28 = swift_allocObject(&unk_1005E93B0, 24, 7);
    *(_QWORD *)(v28 + 16) = v26;
    v29 = swift_allocObject(&unk_1005E93D8, 32, 7);
    *(_QWORD *)(v29 + 16) = sub_10008C7EC;
    *(_QWORD *)(v29 + 24) = v28;
    v33[4] = sub_10006657C;
    v34 = v29;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 1107296256;
    v33[2] = sub_10006655C;
    v33[3] = &unk_1005E93F0;
    v30 = _Block_copy(v33);
    v31 = v34;
    v32 = v26;
    swift_retain(v29);
    swift_release(v31);
    objc_msgSend(v27, "performWithoutAnimation:", v30);
    _Block_release(v30);
    LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v29, "", 137, 192, 40, 1);
    swift_release(v28);
    result = (void *)swift_release(v29);
    if ((v26 & 1) == 0)
      return result;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002CDC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  swift_bridgeObjectRetain(v9);
  return a1;
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t KeyPath;
  void (*v14)(__n128);
  uint64_t v15;
  __n128 v16;
  id v17;
  double v18;
  double v19;
  id v20;
  double v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  objc_super v30;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_100640E08 != -1)
    swift_once(&qword_100640E08, sub_100086B74);
  objc_msgSend(v2, "postNotificationName:object:", static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews, v1);

  v30.receiver = v1;
  v30.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v30, "viewDidLayoutSubviews");
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens], v29, 33, 0);
  v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v5 = *(id *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_5;
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once(&qword_100640D40, sub_10011EE48);
    goto LABEL_11;
  }
  if (v4 < 0)
    v26 = *v3;
  else
    v26 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v3);
  v5 = (id)_CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v4);
  if (!v5)
    goto LABEL_29;
LABEL_5:
  v6 = sub_100088A54(sub_1000818A0);
  if (v6)
    goto LABEL_9;
  v7 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    if (v7 < 0)
      v27 = *v3;
    else
      v27 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v3);
    v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v7);
    v9 = v28 - 1;
    if (!__OFSUB__(v28, 1))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
    goto LABEL_36;
LABEL_8:
  v6 = sub_10008853C(v9, sub_1000818A0);
LABEL_9:
  v4 = v6;
  swift_endAccess(v29);
  v10 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
  objc_msgSend(v10, "endBatching:", v4);

  sub_100097F64();
  v11 = objc_msgSend(v1, "presentedViewController");
  v5 = objc_msgSend(v11, "popoverPresentationController");

  if (!v5)
    goto LABEL_14;
  sub_10006922C(&qword_100646110);
  if (qword_100640D40 != -1)
    goto LABEL_30;
LABEL_11:
  v12 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v5, qword_100643B80);
  KeyPath = swift_getKeyPath(&unk_1004DC238);
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v12) + 0x78))(v29);
  swift_release(KeyPath);

  v14 = (void (*)(__n128))v29[0];
  if (v29[0])
  {
    v15 = v29[1];
    v16 = swift_retain();
    v14(v16);
    sub_100087534((uint64_t)v14, v15);
    sub_100087534((uint64_t)v14, v15);
  }

LABEL_14:
  v17 = sub_1002C9870();
  objc_msgSend(v17, "enclosingUIPHorizontalInset");
  v19 = v18;

  v20 = sub_1002C9870();
  v21 = 0.0;
  if (objc_msgSend(v20, "contextPrefersVariableBlurBottomTabBar"))
  {
    v22 = sub_1001BFEB0();
    v21 = UITraitCollection.subscript.getter(&type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait, v22);
  }
  objc_msgSend(v1, "loadViewIfNeeded");
  v23 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23)
    goto LABEL_37;
  objc_msgSend(v23, "setVerticalScrollIndicatorInsets:", 0.0, -v19, v21, -v19);

  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 0;
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] == 1)
    sub_1001847F4();
  v24 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive;
  if ((v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0
    || v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] != 1)
  {
    goto LABEL_24;
  }
  v25 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v25)
  {
    if ((objc_msgSend(v25, "isGathering") & 1) == 0)
      sub_100027218();
LABEL_24:
    v1[v24] = 0;

    return;
  }
LABEL_38:
  __break(1u);
}

_QWORD *initializeWithCopy for DOCCollectionSection(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  return a1;
}

id sub_10002D28C()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  char *v3;
  objc_super v5;

  v1 = (objc_class *)type metadata accessor for DOCItemCollectionListCellSpringLoadedInteractionEffect();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_blinkDuration] = 0x3FB999999999999ALL;
  v3 = &v2[OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_targetCell];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_targetCell]);
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_blinkLayer]);
  swift_unknownObjectWeakAssign(v3, v0);
  v5.receiver = v2;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

void sub_10002D328()
{
  char *v0;
  char *v1;
  id v2;
  BOOL v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  void *object;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  unsigned int v22;
  unsigned int v23;
  id v24;
  void *Strong;
  void *v26;
  int v27;
  unsigned int v28;
  objc_class *v29;
  uint64_t v30;
  objc_class *v31;
  NSString v32;
  id v33;
  id v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  id v38;
  double v39;
  NSString v40;
  id v41;
  id v42;
  id v43;
  unint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Class isa;
  id v51;
  _QWORD *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  Swift::String v57;

  v1 = v0;
  if ((objc_msgSend(v0, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkipped_updateNavigationButtons") & 1) != 0)return;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10007B5C0(32);

  if (!v3)
    return;
  v4 = objc_msgSend(v1, "enclosingTabSwitcherStyle");
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  v6 = objc_msgSend(v5, "isFilesApp");
  if (v4 == (id)1)
    v7 = v6;
  else
    v7 = 0;
  if ((objc_msgSend(v1, "enclosedInUIPDocumentLanding") & 1) != 0
    || objc_msgSend(v5, "isPickerUI") && sub_100237858() != 2)
  {
    object = 0;
  }
  else
  {
    v9 = objc_msgSend(v5, "hostBundleTitle");
    if (!v9)
    {
LABEL_15:
      v12 = (id)_DocumentManagerBundle(v9);
      if (!v12)
      {
        __break(1u);
        return;
      }
      v13 = v12;
      v57._object = (void *)0x800000010051B7A0;
      v14._countAndFlagsBits = 0x6573776F7242;
      v14._object = (void *)0xE600000000000000;
      v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v15.value._object = (void *)0xEB00000000656C62;
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      v57._countAndFlagsBits = 0xD00000000000007BLL;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v57)._object;

      goto LABEL_17;
    }
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    object = v11;

    if ((v7 & 1) != 0 || (objc_msgSend(v5, "isPickerUI") & 1) != 0)
    {
      swift_bridgeObjectRelease(object);
      goto LABEL_15;
    }
  }
LABEL_17:
  v17 = objc_msgSend(v1, "splitViewController");
  if (!v17)
    goto LABEL_21;
  v18 = v17;
  v19 = objc_opt_self(DOCSplitBrowserViewController);
  v20 = (void *)swift_dynamicCastObjCClass(v18, v19);
  if (!v20)
  {
    v22 = 0;
    goto LABEL_23;
  }
  v21 = objc_msgSend(v20, "fullDocumentManagerViewController");

  if (!v21)
  {
LABEL_21:
    v22 = 0;
    goto LABEL_24;
  }
  v22 = objc_msgSend(v21, "allowsPickingMultipleItems");
  v18 = v21;
LABEL_23:

LABEL_24:
  v23 = objc_msgSend(v5, "isPickerUI");
  v24 = objc_msgSend(v1, "navigationItem");
  v56 = objc_msgSend(v24, "searchController");

  if (v56)
  {
    if ((objc_msgSend(v56, "isActive") & 1) != 0)
      goto LABEL_31;

  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
  if (Strong
    && (v26 = Strong,
        v27 = v23 & v22,
        v28 = objc_msgSend(Strong, "sidebarViewControllerWithIsCollapsed:", v1),
        swift_unknownObjectRelease(v26),
        ((v28 ^ 1 | v27) & 1) == 0))
  {
    v56 = *(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_searchController];
  }
  else
  {
    v56 = 0;
  }
LABEL_31:
  v29 = sub_100237B24();
  if ((objc_msgSend(v1, "sidebarVisibilityPinnedToWindowSizingOnly") & 1) != 0
    || objc_msgSend(v5, "isPickerUI")
    || sub_100237858() == 2)
  {
    v30 = 1;
  }
  else
  {
    v30 = sub_100237858() & 1;
  }
  -[objc_class setHidden:](v29, "setHidden:", v30);

  v31 = sub_100237B24();
  v32 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityIdentifier:](v31, "setAccessibilityIdentifier:", v32);

  v33 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v33, "setSearchController:", v56);

  v34 = objc_msgSend(v1, "navigationItem");
  v35 = objc_msgSend(v1, "enclosedInUIPDocumentLanding");
  if (object)
    v36 = v35;
  else
    v36 = 1;
  if (v36)
    v37 = 2;
  else
    v37 = 1;
  objc_msgSend(v34, "setLargeTitleDisplayMode:", v37);

  v38 = objc_msgSend(v1, "navigationItem");
  if (object)
  {
    v40 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v39 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v40 = 0;
  }
  objc_msgSend(v38, "setTitle:", v40, v39);

  v41 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v41, "_setSupportsTwoLineLargeTitles:", 1);

  v42 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v42, "_setPreserveSearchBarAcrossTransitions:", 1);

  sub_1000511A0();
  v43 = objc_msgSend(v1, "navigationItem");
  v44 = sub_100237E70();
  swift_bridgeObjectRetain(v44);
  v45 = objc_msgSend(v43, "leftBarButtonItems");
  if (!v45)
    goto LABEL_47;
  v46 = v45;
  v47 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

  swift_bridgeObjectRetain(v44);
  v49 = swift_bridgeObjectRetain(v48);
  LOBYTE(v46) = sub_10023D6FC(v49, v44);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease_n(v48, 2);
  if ((v46 & 1) != 0)
  {

    swift_bridgeObjectRelease_n(v44, 2);
  }
  else
  {
LABEL_47:
    sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "setLeftBarButtonItems:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

    swift_bridgeObjectRelease(v44);
  }
  v51 = objc_msgSend(v1, "navigationItem");
  v52 = sub_100237F64();
  sub_10045B6DC((uint64_t)v52, 0);

  v53 = objc_msgSend(v1, "navigationItem", swift_bridgeObjectRelease(v52).n128_f64[0]);
  v54 = objc_msgSend(v53, "searchController");

  if (v54)
  {
    v55 = objc_msgSend(v54, "searchBar");

    objc_msgSend(v55, "_setEnabled:", objc_msgSend(v1, "isEditing") ^ 1);
  }

}

uint64_t sub_10002DA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions);
  if (v2)
  {
    v3 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions);
  }
  else
  {
    v4 = v0;
    v5 = swift_allocObject(&unk_1005D1350, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v4);
    v6 = type metadata accessor for DOCAssertionCollection(0);
    swift_allocObject(v6, 56, 7);
    v3 = DOCAssertionCollection.init(debugName:_:)(0xD000000000000016, 0x8000000100518CA0, sub_1001F7F20, v5);
    v7 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

_QWORD *sub_10002DAFC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  int64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  void *object;
  Swift::Bool v17;
  __n128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v1 = objc_msgSend(a1, "DOCSourceOrderKey");
  if (v1)
  {
    v2 = v1;
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      sub_100081774(0, v4, 0);
      v5 = _swiftEmptyArrayStorage;
      v6 = DOCDocumentSourceIdentifierICloudFPv2;
      v7 = DOCDocumentSourceIdentifierICloudFPv2Managed;
      v33 = v3;
      v8 = (uint64_t *)(v3 + 40);
      do
      {
        v10 = *(v8 - 1);
        v9 = *v8;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v13 = v12;
        swift_bridgeObjectRetain(v9);
        v14._countAndFlagsBits = v11;
        v14._object = v13;
        LOBYTE(v11) = String.hasPrefix(_:)(v14);
        swift_bridgeObjectRelease(v13);
        if ((v11 & 1) != 0)
        {
          v15._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
          object = v15._object;
          v17 = String.hasPrefix(_:)(v15);
          v18 = swift_bridgeObjectRelease(object);
          if (v17)
            v19 = static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter(v18);
          else
            v19 = static DOCDocumentSourceIdentifier.iCloudCurrent.getter(v18);
          v20 = (void *)v19;
          v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
          v22 = v21;
          swift_bridgeObjectRelease(v9);

          v9 = v22;
        }
        v24 = _swiftEmptyArrayStorage[2];
        v23 = _swiftEmptyArrayStorage[3];
        if (v24 >= v23 >> 1)
          sub_100081774(v23 > 1, v24 + 1, 1);
        v8 += 2;
        _swiftEmptyArrayStorage[2] = v24 + 1;
        v25 = &_swiftEmptyArrayStorage[2 * v24];
        v25[4] = v10;
        v25[5] = v9;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease(v33);
    }
    else
    {
      swift_bridgeObjectRelease(v3);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    v26 = sub_10006922C(&qword_100643CC0);
    v5 = (_QWORD *)swift_allocObject(v26, 64, 7);
    *((_OWORD *)v5 + 1) = xmmword_1004D4CE0;
    v27 = (void *)((uint64_t (*)(void))static DOCDocumentSourceIdentifier.iCloudCurrent.getter)();
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v5[4] = v28;
    v5[5] = v30;
    v5[6] = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocal);
    v5[7] = v31;
  }
  return v5;
}

void sub_10002DE50()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _BOOL8 v8;
  id v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  if (v1)
  {
    v2 = *(id *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  }
  else
  {
    v2 = objc_msgSend(v0, "navigationItem");
    v1 = 0;
  }
  v3 = v1;
  v4 = objc_msgSend(v0, "parentViewController");
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for DOCColumnViewController(0);
    v7 = (char *)swift_dynamicCastClass(v5, v6);
    if (v7)
      goto LABEL_8;

  }
  v7 = v0;
LABEL_8:
  v9 = objc_msgSend(v7, "traitCollection");

  if (DOCUsePadIdiomForTraits(v9))
    v8 = objc_msgSend(v9, "horizontalSizeClass") == (id)2;
  else
    v8 = 0;
  objc_msgSend(v2, "setStyle:", v8);

}

uint64_t sub_10002DF60(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644B00);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_10002E0E0()
{
  char *v0;
  char *v1;
  id v2;
  BOOL v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  NSString *v10;
  NSString *v11;
  NSString *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  Class isa;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  uint64_t v27;
  char v28[112];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10007B5C0(16);

  if (v3)
  {
    v4 = sub_10006922C((uint64_t *)&unk_1006484A0);
    inited = swift_initStackObject(v4, v28);
    *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(inited + 32) = UIFontDescriptorTextStyleAttribute;
    type metadata accessor for TextStyle(0);
    *(_QWORD *)(inited + 40) = UIFontTextStyleSubheadline;
    *(_QWORD *)(inited + 64) = v6;
    *(_QWORD *)(inited + 72) = UIFontDescriptorTraitsAttribute;
    v7 = sub_10006922C(&qword_100645B90);
    v8 = swift_initStackObject(v7, &v27);
    *(_OWORD *)(v8 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v8 + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(v8 + 40) = UIFontWeightBold;
    v9 = UIFontDescriptorTextStyleAttribute;
    v10 = UIFontTextStyleSubheadline;
    v11 = UIFontDescriptorTraitsAttribute;
    v12 = UIFontWeightTrait;
    v13 = sub_10008B0E8(v8);
    *(_QWORD *)(inited + 104) = sub_10006922C(&qword_100645B98);
    *(_QWORD *)(inited + 80) = v13;
    v14 = sub_10008B0CC(inited);
    v15 = objc_allocWithZone((Class)UIFontDescriptor);
    type metadata accessor for AttributeName(0);
    sub_10008577C();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v17 = objc_msgSend(v15, "initWithFontAttributes:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v18 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel];
    if (v18)
    {
      v19 = (void *)objc_opt_self(UIFont);
      v20 = v18;
      v21 = v17;
      v22 = objc_msgSend(v1, "traitCollection");
      v23 = objc_msgSend(v19, "preferredFontForTextStyle:compatibleWithTraitCollection:", v10, v22);

      objc_msgSend(v23, "pointSize");
      v25 = v24;

      v26 = objc_msgSend(v19, "fontWithDescriptor:size:", v21, v25);
      objc_msgSend(v20, "setFont:", v26);

    }
  }
}

id sub_10002E3A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(DOCConfiguration), "configurationForImportingDocumentContentTypes:mode:", 0, 1);
    objc_msgSend(v4, "setInProcess:", 1);
    objc_msgSend(v4, "setNeverCreateBookmarkForOpenInPlace:", 1);
    objc_msgSend(v4, "setUseSharedQuickLook:", 1);
    objc_msgSend(v4, "setPickingItemsShouldBumpLastOpenDate:", 0);
    objc_msgSend(v4, "setShouldOpenInApp:", 1);
    objc_msgSend(v4, "setSupportsRemovableFileProviders:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10002E508(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = sub_10004F2F0(0, &qword_100643AC0, DOCDocumentSource_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v7);
  swift_retain(v5);
  v9 = a3;
  v6(v8, a3);
  swift_release(v5);
  swift_bridgeObjectRelease(v8);

}

char *sub_10002E5A0(uint64_t a1, void *a2, _OWORD *a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  id v23;
  double v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  double v36;
  char *v37;
  uint64_t v38;
  objc_super v40;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8 = &v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  v9 = &v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_nodeCollection];
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_nodeCollection]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_emptyTargetedPreview] = 0;
  v10 = &v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_gestureDelegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v11 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode] = 0;
  v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView] = 0;
  v12 = *(_QWORD *)&v3[v11];
  *(_QWORD *)&v3[v11] = a1;
  v13 = v3;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v12);
  swift_unknownObjectWeakAssign(v9, a2);
  v14 = &v13[OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration];
  *(_OWORD *)v14 = *a3;
  v15 = a3[4];
  v17 = a3[1];
  v16 = a3[2];
  *((_OWORD *)v14 + 3) = a3[3];
  *((_OWORD *)v14 + 4) = v15;
  *((_OWORD *)v14 + 1) = v17;
  *((_OWORD *)v14 + 2) = v16;
  sub_100028DA4((uint64_t)a3);

  v40.receiver = v13;
  v40.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v40, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v18, "setAxis:", 1);
  objc_msgSend(v18, "setAlignment:", 3);
  objc_msgSend(v18, "setSpacing:", 7.0);
  v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode];
  v20 = qword_100640DD8;
  v21 = v18;
  if (v20 != -1)
    swift_once(&qword_100640DD8, sub_1000AF8E4);
  v22 = *(double *)&xmmword_100645A80;
  if (!v19)
    v22 = 0.0;
  objc_msgSend(v21, "setDirectionalLayoutMargins:", v22, *((double *)&xmmword_100645A80 + 1), *(double *)&qword_100645A90, *(double *)&qword_100645A98);

  objc_msgSend(v21, "setLayoutMarginsRelativeArrangement:", 1);
  v23 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v23, "setNumberOfLines:", 0);
  LODWORD(v24) = 1148846080;
  objc_msgSend(v23, "setContentCompressionResistancePriority:forAxis:", 1, v24);
  v25 = *(void **)&v21[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel];
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel] = v23;

  sub_10002E0E0();
  sub_1000AFB50();
  v27 = v26;
  v28 = sub_1000159B4();
  objc_msgSend(v28, "setHidden:", v27 == 0);

  v29 = sub_1000159B4();
  objc_msgSend(v29, "setAttributedText:", v27);

  sub_100015074();
  v30 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v21);
  objc_msgSend(v21, "addInteraction:", v30);

  v31 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v32 = swift_allocObject(v31, 48, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v32 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v32 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v33 = v21;
  v34 = UIView.registerForTraitChanges<A>(_:handler:)(v32, sub_100170B60, 0, ObjectType);
  swift_unknownObjectRelease(v34);

  v35 = objc_msgSend(v33, "enclosingDocumentLandingMode", swift_bridgeObjectRelease(v32).n128_f64[0]);
  v36 = 1.0;
  if (v35 == (id)1)
    v36 = 0.0;
  objc_msgSend(v33, "setAlpha:", v36);
  v37 = v33;
  v38 = UIView.registerForUIPDocumentLandingTraitChanges<A>(options:_:)(0, 1, sub_100170BD8, 0, ObjectType);
  sub_100029224((uint64_t)a3);
  swift_unknownObjectRelease(v38);

  swift_unknownObjectRelease(a1);
  return v37;
}

void sub_10002EA70(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

double sub_10002EB1C(void *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  unint64_t v27;
  int v28;
  void *v29;
  id v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  double v34;
  id v35;
  double v36;
  id v37;
  id v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  NSString v63;
  id v64;
  id v65;
  NSString v66;
  double v67;
  double v68;
  double v69;
  char isUniquelyReferenced_nonNull_native;
  void *v71;
  id v73;
  void *v74;
  _BYTE v75[24];
  _OWORD v76[11];
  uint64_t v77;
  _QWORD v78[23];
  _OWORD v79[8];
  _QWORD v80[16];
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[10];
  _QWORD v92[16];
  uint64_t v93;
  unsigned __int8 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;

  v4 = v3;
  v8 = *(_OWORD *)(a2 + 144);
  v103 = *(_OWORD *)(a2 + 128);
  v104 = v8;
  v105 = *(_OWORD *)(a2 + 160);
  v106 = *(_QWORD *)(a2 + 176);
  v9 = *(_OWORD *)(a2 + 80);
  v99 = *(_OWORD *)(a2 + 64);
  v100 = v9;
  v10 = *(_OWORD *)(a2 + 112);
  v101 = *(_OWORD *)(a2 + 96);
  v102 = v10;
  v11 = *(_OWORD *)(a2 + 16);
  v95 = *(_OWORD *)a2;
  v96 = v11;
  v12 = *(_OWORD *)(a2 + 48);
  v97 = *(_OWORD *)(a2 + 32);
  v98 = v12;
  v13 = a3[5];
  v111 = a3[4];
  v112 = v13;
  v14 = a3[7];
  v113 = a3[6];
  v114 = v14;
  v15 = a3[1];
  v107 = *a3;
  v108 = v15;
  v16 = a3[3];
  v109 = a3[2];
  v110 = v16;
  v17 = objc_msgSend(a1, "preferredContentSizeCategory");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryUnspecified);
  v23 = v21;
  if (v18 == v22 && v20 == v21)
  {

    swift_bridgeObjectRelease_n(v20, 2);
LABEL_5:
    v25 = objc_msgSend((id)objc_opt_self(DOCUISession), "defaultContentSizeCategory");
    v26 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v25);

    goto LABEL_7;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);

  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v23);
  if ((v24 & 1) != 0)
    goto LABEL_5;
  v26 = a1;
LABEL_7:
  v27 = sub_1001463A0();
  UITraitCollection.subscript.getter(&v93, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v27);
  v28 = v94;
  v29 = *(void **)(v4 + 24);
  *(_QWORD *)&v81 = *(id *)(v4 + 16);
  *((_QWORD *)&v81 + 1) = v29;
  *(_QWORD *)&v82 = objc_msgSend(v26, "preferredContentSizeCategory");
  BYTE8(v82) = v28;
  v87 = v111;
  v88 = v112;
  v89 = v113;
  v90 = v114;
  v83 = v107;
  v84 = v108;
  v85 = v109;
  v86 = v110;
  v91[6] = v111;
  v91[7] = v112;
  v91[8] = v113;
  v91[9] = v114;
  v91[2] = v107;
  v91[3] = v108;
  v91[4] = v109;
  v91[5] = v110;
  v91[0] = v81;
  v91[1] = v82;
  sub_100027B74((uint64_t)a3);
  v30 = objc_msgSend(v26, "preferredContentSizeCategory");
  LOBYTE(v29) = UIContentSizeCategory.isAccessibilityCategory.getter(v30);

  if ((v29 & 1) == 0)
  {
    v35 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    objc_msgSend(v35, "scaledValueForValue:", *(double *)v4);
    v34 = v36;

    goto LABEL_14;
  }
  if (qword_100640F28 != -1)
    swift_once(&qword_100640F28, sub_100295440);
  swift_beginAccess(&off_10064B768, &v93, 32, 0);
  v31 = off_10064B768;
  if (*((_QWORD *)off_10064B768 + 2))
  {
    sub_100145718((uint64_t)&v81);
    v32 = sub_10014088C((uint64_t)v91);
    if ((v33 & 1) != 0)
    {
      v34 = *(double *)(v31[7] + 8 * v32);
      swift_endAccess(&v93);
      sub_100145770((uint64_t)&v81);
LABEL_14:

      sub_100145770((uint64_t)&v81);
      return v34;
    }
    sub_100145770((uint64_t)&v81);
  }
  swift_endAccess(&v93);
  v37 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v38 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionLargeTextListCell(0));
  v73 = v37;
  v39 = sub_10005C570(v37, 0.0, 0.0, 0.0, 0.0);
  v40 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionCellContent()), "init");
  v76[8] = v103;
  v76[9] = v104;
  v76[10] = v105;
  v77 = v106;
  v76[4] = v99;
  v76[5] = v100;
  v76[6] = v101;
  v76[7] = v102;
  v76[0] = v95;
  v76[1] = v96;
  v76[2] = v97;
  v76[3] = v98;
  DOCSplitBrowserViewController.didCommitPreview(of:)(v76);
  v41 = (uint64_t)&v40[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits];
  sub_100070EDC((uint64_t)&v40[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits], (uint64_t)&v93, (uint64_t *)&unk_100641300);
  sub_100070EDC(v41, (uint64_t)v78, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v76, v41, (uint64_t *)&unk_100641300);
  sub_100070B28(a2);
  sub_100070B28(a2);
  sub_1000716DC(&v93, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  sub_1000716DC(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
  sub_100070B64(&v93);
  sub_10002A0C4(a2);
  sub_1000716DC(&v93, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
  v79[4] = v111;
  v79[5] = v112;
  v79[6] = v113;
  v79[7] = v114;
  v79[0] = v107;
  v79[1] = v108;
  v79[2] = v109;
  v79[3] = v110;
  DOCSplitBrowserViewController.didCommitPreview(of:)(v79);
  v42 = (uint64_t)&v40[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
  sub_100070EDC((uint64_t)&v40[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits], (uint64_t)v92, &qword_100658670);
  sub_100070EDC(v42, (uint64_t)v80, &qword_100658670);
  sub_100070EDC((uint64_t)v79, v42, &qword_100658670);
  sub_100027B74((uint64_t)a3);
  sub_100027B74((uint64_t)a3);
  sub_1000717C0(v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  sub_1000717C0(v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  sub_100071C48(v92);
  sub_10003BDA0((uint64_t)a3);
  sub_1000717C0(v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  v43 = objc_msgSend(objc_allocWithZone((Class)DOCAppearance), "init");
  v44 = *(void **)&v40[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance];
  *(_QWORD *)&v40[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance] = v43;
  v45 = v43;
  sub_1000722BC(v44);

  v46 = v39;
  v47 = v40;
  sub_100062A70(v40);

  sub_1000726CC();
  v48 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel;
  objc_msgSend(*(id *)((char *)v46 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel), "setHidden:", v28 ^ 1u);
  v49 = objc_msgSend(a1, "preferredContentSizeCategory");
  v50 = objc_msgSend(v46, "traitCollection");
  v51 = objc_msgSend(v50, "preferredContentSizeCategory");

  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
  v54 = v53;
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v57 = v55;
  if (v52 == v56 && v54 == v55)
  {

    swift_bridgeObjectRelease_n(v54, 2);
  }
  else
  {
    v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, v56, v55, 0);

    swift_bridgeObjectRelease(v54);
    swift_bridgeObjectRelease(v57);
    if ((v58 & 1) == 0)
    {

      sub_100145770((uint64_t)&v81);
      return 0.0;
    }
  }
  v59 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel;
  v60 = *(void **)((char *)v46 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel);
  v61 = objc_allocWithZone((Class)NSAttributedString);
  v62 = v60;
  v63 = String._bridgeToObjectiveC()();
  v64 = objc_msgSend(v61, "initWithString:", v63);

  objc_msgSend(v62, "setAttributedText:", v64);
  v65 = *(id *)((char *)v46 + v48);
  v66 = String._bridgeToObjectiveC()();
  objc_msgSend(v65, "setText:", v66);

  objc_msgSend(*(id *)((char *)v46 + v59), "invalidateIntrinsicContentSize");
  objc_msgSend(*(id *)((char *)v46 + v48), "invalidateIntrinsicContentSize");
  objc_msgSend((id)objc_opt_self(DOCSeparatorView), "separatorThicknessForTraitCollection:", a1);
  v68 = v67;
  objc_msgSend(v73, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
  v34 = v68 + v69;
  swift_beginAccess(&off_10064B768, v75, 33, 0);
  sub_100145718((uint64_t)&v81);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_10064B768);
  v74 = off_10064B768;
  off_10064B768 = (_UNKNOWN *)0x8000000000000000;
  sub_100355BC4(v91, isUniquelyReferenced_nonNull_native, v34);
  v71 = off_10064B768;
  off_10064B768 = v74;
  swift_bridgeObjectRelease(v71);
  sub_100145770((uint64_t)&v81);
  swift_endAccess(v75);

  sub_100145770((uint64_t)&v81);
  return v34;
}

uint64_t sub_10002F3B0(uint64_t result)
{
  char *v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  int v8;
  id v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  char *v13;
  char v14;
  int v15;
  char v16;
  char v17[24];

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    return result;
  }
  v3 = result;
  v4 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v4 + 16) & 1) != 0)
  {
    v5 = *(void **)(*(_QWORD *)v4 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v5);
  }
  else
  {
    v5 = *(void **)(v4 + 8);
    result = swift_unknownObjectRetain(v5);
    if (!v5)
      return result;
  }
  v6 = v3;
  v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
  v8 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton];
  v9 = objc_msgSend(v1, "effectiveAppearance");
  if (v9
    && (v10 = v9, v11 = objc_msgSend(v9, "showsCreateButton"), v10, v11)
    && (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPickerUI") & 1) == 0&& (sub_100359CA0(v5, v12) & 1) != 0&& (v13 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v17, 0, 0), *(_QWORD *)v13 != 2))
  {
    sub_100064B54();
    v14 = v16 ^ 1;
  }
  else
  {
    v14 = 0;
  }
  v15 = v14 & 1;
  v1[v7] = v15;
  if (v6 == 2)
  {
    if (v8 == v15)
      return swift_unknownObjectRelease(v5);
    goto LABEL_15;
  }
  if ((v6 & 1) != 0)
LABEL_15:
    sub_100027218();
  return swift_unknownObjectRelease(v5);
}

void sub_10002F574(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t (*v33)(char *, uint64_t);
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t);
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  NSObject *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t (*v101)(char *, uint64_t);
  uint8_t *v102;
  uint64_t v103;
  uint8_t *v104;
  void (*v105)(char *, uint64_t);
  id *v106;
  double v107;
  uint64_t v108;
  id v109;
  id v110;
  int v111;
  id v112;
  int v113;
  uint64_t v114;
  id v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint8_t *v122;
  uint64_t (*v123)(char *, uint64_t);
  id *updated;
  void (*v125)(char *, uint64_t);
  char *v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  _BYTE v138[16];
  uint64_t v139;
  uint64_t v140;
  uint64_t v141[4];

  v2 = v1;
  v4 = type metadata accessor for ScrollPositionInfo(0);
  v133 = *(_QWORD *)(v4 - 8);
  v134 = v4;
  __chkstk_darwin(v4);
  v129 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100646B48);
  __chkstk_darwin(v6);
  v132 = (uint64_t)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v131 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v120 - v9);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v136 = (char *)&v120 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v120 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v120 - v20;
  v22 = type metadata accessor for OSSignpostID(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, "isGathering", v24) & 1) != 0)
    return;
  v126 = v13;
  v130 = v10;
  v135 = v26;
  v27 = objc_msgSend(v2, "isFirstResponder");
  if ((_DWORD)v27)
  {
    v28 = objc_msgSend((id)objc_opt_self(DOCDeprecatedUIMenuController), "shared");
    objc_msgSend(v28, "hideMenuIfActive");
    swift_unknownObjectRelease(v28);
  }
  v29 = static os_signpost_type_t.begin.getter(v27);
  updated = (id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  v30 = *updated;
  v31 = v135;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)(v29, &_mh_execute_header, v30, "Files-Reload-forNodeCollectionShouldBeReloaded", 46, 2, v31, "forNodeCollectionShouldBeReloaded", 33, 2, _swiftEmptyArrayStorage);

  v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v127 = v22;
  v125 = v32;
  v32(v31, v22);
  v33 = (uint64_t (*)(char *, uint64_t))sub_100034068(0);
  v34 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v36 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v35 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v35);
  v37 = sub_10004FD50();
  DOCItemCollectionViewController.items.setter(v37);
  v38 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v38)
  {
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v35);
    return;
  }
  v39 = v34[1];
  v128 = v38;
  v40 = swift_bridgeObjectRetain(v39);
  v41 = == infix(_:_:)(v40, v35);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v35);
  if ((v41 & 1) == 0)
  {
    swift_bridgeObjectRelease(v36);
    v44 = v130;
    goto LABEL_12;
  }
  v42 = sub_1000884B8(*v34, v36);
  swift_bridgeObjectRelease(v36);
  v44 = v130;
  if ((v42 & 1) == 0)
  {
LABEL_12:
    v58 = Logger.UI.unsafeMutableAddressor(v43);
    v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v59 = v46(v18, v58, v44);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter(v60);
    if (os_log_type_enabled(v60, v61))
    {
      v123 = v33;
      v62 = (uint8_t *)swift_slowAlloc(12, -1);
      v63 = swift_slowAlloc(32, -1);
      v141[0] = v63;
      *(_DWORD *)v62 = 136315138;
      v137 = sub_1000544FC(0xD000000000000028, 0x80000001005169E0, v141);
      v33 = v123;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "DOCNodeCollectionDelegate %s reloading without animation", v62, 0xCu);
      swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
      v64 = v63;
      v44 = v130;
      swift_slowDealloc(v64, -1, -1);
      swift_slowDealloc(v62, -1, -1);
    }

    v65 = v18;
    v53 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v57 = v53(v65, v44);
    if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] == 1)
      v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 1;
    else
      sub_100027218();
    goto LABEL_17;
  }
  v45 = Logger.UI.unsafeMutableAddressor(v43);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v47 = v46(v21, v45, v44);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter(v48);
  if (os_log_type_enabled(v48, v49))
  {
    v123 = v33;
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v51 = swift_slowAlloc(32, -1);
    v141[0] = v51;
    *(_DWORD *)v50 = 136315138;
    v33 = v123;
    v122 = v50 + 4;
    v137 = sub_1000544FC(0xD000000000000028, 0x80000001005169E0, v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "DOCNodeCollectionDelegate %s Skipping reloadCollection(), and instead updating cell contents since structure of items didn't change", v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    v52 = v51;
    v44 = v130;
    swift_slowDealloc(v52, -1, -1);
    swift_slowDealloc(v50, -1, -1);
  }

  v53 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v53(v21, v44);
  v54 = objc_msgSend(v128, "indexPathsForVisibleItems");
  v55 = type metadata accessor for IndexPath(0);
  v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

  sub_100065350(v56);
  swift_bridgeObjectRelease(v56);
LABEL_17:
  v66 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal;
  v67 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
  if ((unint64_t)v67 >> 62)
  {
    if (v67 < 0)
      v117 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
    else
      v117 = v67 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal]);
    v68 = _CocoaArrayWrapper.endIndex.getter(v117);
    swift_bridgeObjectRelease(v67);
  }
  else
  {
    v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v123 = v53;
  if (v68 > 0)
    goto LABEL_22;
  v69 = (uint64_t)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], v141, 0, 0);
  v70 = v33;
  v71 = (uint64_t)v131;
  sub_1000271D4(v69, (uint64_t)v131, &qword_100646B48);
  LODWORD(v69) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v71, 1, v134);
  v72 = v71;
  v33 = v70;
  v57 = sub_10000CB4C(v72, &qword_100646B48);
  if ((_DWORD)v69 != 1
    || *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll])
  {
LABEL_22:
    v73 = v33;
    v74 = Logger.UI.unsafeMutableAddressor(v57);
    v75 = v136;
    v46(v136, v74, v44);
    v76 = v2;
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter(v77);
    if (os_log_type_enabled(v77, (os_log_type_t)v78))
    {
      LODWORD(v122) = v78;
      v79 = swift_slowAlloc(32, -1);
      v121 = swift_slowAlloc(64, -1);
      v140 = v121;
      *(_DWORD *)v79 = 134218498;
      v80 = *(_QWORD *)&v2[v66];
      if ((unint64_t)v80 >> 62)
      {
        if (v80 < 0)
          v118 = *(_QWORD *)&v2[v66];
        else
          v118 = v80 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)&v2[v66]);
        v81 = _CocoaArrayWrapper.endIndex.getter(v118);
        swift_bridgeObjectRelease(v80);
      }
      else
      {
        v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v131 = v46;
      v137 = v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
      *(_WORD *)(v79 + 12) = 2080;
      v82 = &v76[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess(&v76[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo], &v137, 0, 0);
      v83 = (uint64_t)v82;
      v84 = v132;
      sub_1000271D4(v83, v132, &qword_100646B48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v84, 1, v134))
      {
        sub_10000CB4C(v84, &qword_100646B48);
        v85 = 0xD000000000000012;
        v86 = 0x8000000100516A10;
      }
      else
      {
        v87 = v129;
        sub_10007C6DC(v84, v129, type metadata accessor for ScrollPositionInfo);
        sub_10000CB4C(v84, &qword_100646B48);
        v85 = sub_100175410();
        v86 = v88;
        sub_10007C720(v87, type metadata accessor for ScrollPositionInfo);
      }
      v139 = sub_1000544FC(v85, v86, &v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140);

      swift_bridgeObjectRelease(v86);
      *(_WORD *)(v79 + 22) = 2080;
      v89 = *(_QWORD *)&v76[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      if (v89)
      {
        v90 = objc_msgSend((id)swift_unknownObjectRetain(*(_QWORD *)&v76[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll]), "description");
        swift_unknownObjectRelease(v89);
        v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v93 = v92;

      }
      else
      {
        v93 = 0xE700000000000000;
        v91 = 0x65646F4E206F4ELL;
      }
      v139 = sub_1000544FC(v91, v93, &v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140);

      swift_bridgeObjectRelease(v93);
      _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v122, "data(forNodeCollectionShouldBeReloaded) called. Forcing relayout: \n - enqueuedNodesToReveal.count: %ld\n enqueuedNodeScrollPositionInfo: %s\n enqueuedNodeToSelectAndScroll: %s ", (uint8_t *)v79, 0x20u);
      v94 = v121;
      swift_arrayDestroy(v121, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v94, -1, -1);
      swift_slowDealloc(v79, -1, -1);

      v44 = v130;
      v53 = v123;
      v123(v136, v130);
      v46 = v131;
    }
    else
    {

      v53(v75, v44);
    }
    objc_msgSend(v128, "layoutIfNeeded");
    v33 = v73;
  }
  v95 = sub_10018C44C(0);
  v96 = Logger.UI.unsafeMutableAddressor(v95);
  v97 = v126;
  v98 = v46(v126, v96, v44);
  v99 = Logger.logObject.getter(v98);
  v100 = static os_log_type_t.default.getter(v99);
  if (os_log_type_enabled(v99, v100))
  {
    v101 = v33;
    v102 = (uint8_t *)swift_slowAlloc(12, -1);
    v103 = swift_slowAlloc(32, -1);
    v140 = v103;
    *(_DWORD *)v102 = 136315138;
    v139 = sub_1000544FC(0xD000000000000028, 0x80000001005169E0, &v140);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140);
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "%s - calling resolvePendingNodeContexts", v102, 0xCu);
    swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v103, -1, -1);
    v104 = v102;
    v33 = v101;
    swift_slowDealloc(v104, -1, -1);

    v123(v97, v44);
  }
  else
  {

    v53(v97, v44);
  }
  v106 = updated;
  v105 = v125;
  sub_10018AFF0();
  sub_100094F78((uint64_t)v33, 0, 0);
  *(_QWORD *)&v107 = swift_bridgeObjectRelease(v33).n128_u64[0];
  v108 = v127;
  if (*(_BYTE *)(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type
                + 8) == 1)
  {
    v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    v109 = objc_msgSend(v2, "viewIfLoaded", v107);
    v110 = objc_msgSend(v109, "window");

    if (v110)
      sub_1000926C8();
  }
  if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] == 1))
  {
    sub_1001847F4();
  }
  sub_100097624();
  v111 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload];
  sub_100097068(2u);
  if (v111 != 2)
  {
    v113 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed];
    v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = v111 & 1;
    if (((((v111 & 1) == 0) ^ v113) & 1) == 0)
      v112 = objc_msgSend(v2, "docSetNeedsUpdateContentUnavailableConfiguration");
  }
  v114 = static os_signpost_type_t.end.getter(v112);
  v115 = *v106;
  v116 = v135;
  static OSSignpostID.exclusive.getter();
  LOBYTE(v119) = 2;
  os_signpost(_:dso:log:name:signpostID:_:_:)(v114, &_mh_execute_header, v115, "Files-Reload-forNodeCollectionShouldBeReloaded", 46, 2, v116, "forNodeCollectionShouldBeReloaded", 33, v119, _swiftEmptyArrayStorage);

  v105(v116, v108);
}

double sub_1000303F8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, __n128))
{
  uint64_t v5;
  _QWORD *v6;
  double result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v5 = a1;
  v6 = (_QWORD *)(a1 + 16);
  *(_QWORD *)&result = swift_beginAccess(a1 + 16, v22, 1, 0).n128_u64[0];
  v8 = *(_QWORD *)(v5 + 16);
  v9 = __OFSUB__(v8, 1);
  v10 = v8 - 1;
  if (v9)
  {
    __break(1u);
LABEL_12:
    if (v5 < 0)
      v20 = v5;
    else
      v20 = v5 & 0xFFFFFFFFFFFFFF8;
    v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRetain(v5);
    v18 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v20, v21);
    swift_bridgeObjectRelease(v5);
    goto LABEL_9;
  }
  *v6 = v10;
  if (v10)
    return result;
  v11 = *(_QWORD *)(a2 + 16);
  v5 = (uint64_t)_swiftEmptyArrayStorage;
  if (v11)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v11);
    v12 = (void **)(a2 + 40);
    do
    {
      v13 = *v12;
      v12 += 2;
      v14 = v13;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v14);
      specialized ContiguousArray._endMutation()(v16);
      --v11;
    }
    while (v11);
    v5 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_12;
  v17 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v17);
  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v18 = _swiftEmptyArrayStorage;
LABEL_9:
  v19 = swift_bridgeObjectRelease(v5);
  a3(v18, v19);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  return result;
}

unint64_t sub_10003057C(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10007F268(a1, v3);
}

uint64_t sub_1000305D4(uint64_t a1, uint64_t a2, char a3, int a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  id v32;
  _BYTE v33[32];

  v5 = v4;
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = _dispatchPreconditionTest(_:)(v13);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
  {
    v30 = a4;
    v28 = (id *)DOCLog.UI.unsafeMutableAddressor(result);
    v17 = a1;
    v18 = *v28;
    v19 = static os_log_type_t.debug.getter();
    v31 = sub_10006922C((uint64_t *)&unk_100644560);
    v20 = swift_allocObject(v31, 152, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v20 + 56) = type metadata accessor for DOCBrowserContainerController();
    *(_QWORD *)(v20 + 64) = sub_100062658(&qword_10064D518, v21, (uint64_t (*)(uint64_t))type metadata accessor for DOCBrowserContainerController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v20 + 32) = v5;
    v32 = v5;
    sub_10000C6B4(a2, a3);
    v23 = v22;
    v25 = v24;
    *(_QWORD *)(v20 + 96) = &type metadata for String;
    v29 = sub_10006A638();
    *(_QWORD *)(v20 + 104) = v29;
    *(_QWORD *)(v20 + 72) = v23;
    *(_QWORD *)(v20 + 80) = v25;
    sub_100069BD8(v17, (uint64_t)v33);
    v26 = sub_10006922C((uint64_t *)&unk_10064D520);
    swift_dynamicCast(v20 + 112, v33, (char *)&type metadata for Any + 8, v26, 7);
    os_log(_:dso:log:type:_:)("Container %@ received event %@ from %@", 38, 2, &_mh_execute_header, v18, v19, v20);

    swift_bridgeObjectRelease(v20);
    __asm { BR              X10 }
  }
  __break(1u);
  return result;
}

void sub_100030BB4(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  CGFloat bottom;
  CGFloat right;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  int64_t v27;
  _QWORD *v28;
  uint64_t v29;
  CGFloat Height;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  double v45;
  double v46;
  double left;
  double top;

  v12 = sub_10006922C(&qword_100655D40);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CharacterSet(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  left = UIEdgeInsetsZero.left;
  top = UIEdgeInsetsZero.top;
  v45 = right;
  v46 = bottom;
  if (qword_100641160 != -1)
    swift_once(&qword_100641160, sub_1000B2514);
  v21 = sub_10007E788(v12, (uint64_t)qword_100655C58);
  sub_1000B3624(v21, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100449240((uint64_t)v14);
    v22 = sub_100449280();
    v23 = static os_log_type_t.error.getter(v22);
    os_log(_:dso:log:type:_:)("charsWithSpecialOutset is nil", 29, 2, &_mh_execute_header, v22, v23, _swiftEmptyArrayStorage);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v43 = a2;
    v44 = a3;
    v24 = sub_10008B9BC();
    StringProtocol.rangeOfCharacter(from:options:range:)(v18, 0, 0, 0, 1, &type metadata for String, v24);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if ((v26 & 1) == 0)
    {
      CTFontGetLanguageAwareOutsets(a4, &left, &top, &v45, &v46);
      left = -left;
      top = -top;
      v45 = -v45;
      v46 = -v46;
    }
  }
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v43 = _swiftEmptyArrayStorage;
    sub_100081858(0, v27, 0);
    v28 = v43;
    v29 = a1 + 56;
    do
    {
      Height = CGRectGetHeight(*(CGRect *)(v29 - 24));
      v43 = v28;
      v32 = v28[2];
      v31 = v28[3];
      v33 = v32 + 1;
      if (v32 >= v31 >> 1)
      {
        sub_100081858(v31 > 1, v32 + 1, 1);
        v28 = v43;
      }
      v28[2] = v33;
      *(CGFloat *)&v28[v32 + 4] = Height;
      v29 += 32;
      --v27;
    }
    while (v27);
  }
  else
  {
    v28 = _swiftEmptyArrayStorage;
    v33 = _swiftEmptyArrayStorage[2];
    if (!v33)
    {
      v35 = 0.0;
      goto LABEL_22;
    }
  }
  if (v33 >= 2)
  {
    v36 = 0;
    v34 = v33 & 0xFFFFFFFFFFFFFFFELL;
    v35 = 0.0;
    do
    {
      v35 = v35 + *(double *)&v28[v36 + 4] + *(double *)&v28[v36 + 5];
      v36 += 2;
    }
    while (v34 != v36);
    goto LABEL_21;
  }
  v34 = 0;
  v35 = 0.0;
  do
  {
    v37 = *(double *)&v28[v34++ + 4];
    v35 = v35 + v37;
LABEL_21:
    ;
  }
  while (v33 != v34);
LABEL_22:
  swift_bridgeObjectRelease(v28);
  v38 = sub_10007EAFC(0.0, 0.0, a6, v35, top, left);
  *(double *)a5 = UIRectIntegralWithScale(v38);
  *(_QWORD *)(a5 + 8) = v39;
  *(_QWORD *)(a5 + 16) = v40;
  *(_QWORD *)(a5 + 24) = v41;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(double *)(a5 + 48) = a6;
  *(double *)(a5 + 56) = v35;
}

char *sub_100030F5C(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v24;
  void **v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *result;
  uint64_t i;
  char *v45;
  void *v46;
  void **v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  unsigned int v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  int v88;
  unint64_t v89[3];
  char v90[24];
  _QWORD v91[3];
  uint64_t v92;
  _BYTE v93[16];
  uint64_t v94[3];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.UI.unsafeMutableAddressor(v4);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  v11 = os_log_type_enabled(v9, v10);
  v88 = a1;
  if (v11)
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v94[0] = v13;
    *(_DWORD *)v12 = 136315394;
    v92 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100510C40, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
    *(_WORD *)(v12 + 12) = 2080;
    LOBYTE(v92) = a1;
    v14 = String.init<A>(describing:)(&v92, &type metadata for DOCItemGroupingBehavior);
    v16 = v15;
    v92 = sub_1000544FC(v14, v15, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v17 = v87;
  v18 = (uint64_t)objc_msgSend(v87, "dataSource");
  v19 = (uint64_t *)(v18 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess(v18 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v94, 0, 0);
  v20 = *v19;
  swift_bridgeObjectRetain(v20);

  v91[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v20 >> 62)
    goto LABEL_52;
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v20);
  while (!v21)
  {
    swift_bridgeObjectRelease(v20);
    v18 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_22:
    swift_bridgeObjectRelease(v20);
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v58 = v18;
      else
        v58 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v20 = _CocoaArrayWrapper.endIndex.getter(v58);
      if (!v20)
      {
LABEL_31:
        swift_bridgeObjectRelease_n(v18, 2);
        goto LABEL_36;
      }
    }
    else
    {
      v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v18);
      if (!v20)
        goto LABEL_31;
    }
    v35 = 4;
    while (1)
    {
      v36 = (v18 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35 - 4, v18)
          : (char *)*(id *)(v18 + 8 * v35);
      v21 = (unint64_t)v36;
      v37 = v35 - 3;
      if (__OFADD__(v35 - 4, 1))
        break;
      v22 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
      if (*(_QWORD *)&v36[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
        goto LABEL_34;

      ++v35;
      if (v37 == v20)
        goto LABEL_31;
    }
    __break(1u);
LABEL_52:
    if (v20 < 0)
      v18 = v20;
    else
      v18 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v21 = _CocoaArrayWrapper.endIndex.getter(v18);
  }
  v22 = v20 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    if (__OFSUB__(v21--, 1))
    {
      __break(1u);
LABEL_21:
      swift_bridgeObjectRelease(v20);
      v18 = v91[0];
      goto LABEL_22;
    }
    if ((v20 & 0xC000000000000001) == 0)
      break;
    v24 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v20);
LABEL_14:
    v18 = (uint64_t)v24;
    v25 = (void **)&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], &v92, 0, 0);
    v26 = *v25;
    if (*v25
      && (v27 = type metadata accessor for DOCItemCollectionViewController(0),
          (v28 = swift_dynamicCastClass(v26, v27)) != 0))
    {
      v29 = v28;
      v30 = v26;

      v18 = (uint64_t)v91;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v33 = *(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v32 = *(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v33 >= v32 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
      v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v29);
      specialized Array._endMutation()(v34);
      if (!v21)
        goto LABEL_21;
    }
    else
    {

      if (!v21)
        goto LABEL_21;
    }
  }
  if ((v21 & 0x8000000000000000) == 0)
  {
    if (v21 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_33;
    v24 = (char *)*(id *)(v20 + 32 + 8 * v21);
    goto LABEL_14;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  swift_bridgeObjectRelease_n(v18, 2);
  v38 = *(_QWORD *)(v21 + v22);
  swift_retain();

  if (v38)
  {
    sub_10038EF44();
    swift_release(v38);
  }
LABEL_36:
  v39 = (char *)objc_msgSend(v17, "dataSource");
  v40 = (uint64_t *)&v39[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v39[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v91, 0, 0);
  v41 = *v40;
  swift_bridgeObjectRetain(v41);

  v89[0] = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v59 = v41;
    else
      v59 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v41);
    result = (char *)_CocoaArrayWrapper.endIndex.getter(v59);
    v42 = (uint64_t)result;
    if (!result)
      goto LABEL_66;
LABEL_38:
    if (v42 >= 1)
    {
      for (i = 0; i != v42; ++i)
      {
        if ((v41 & 0xC000000000000001) != 0)
          v45 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v41);
        else
          v45 = (char *)*(id *)(v41 + 8 * i + 32);
        v46 = v45;
        v47 = (void **)&v45[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v45[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v90, 0, 0);
        v48 = *v47;
        if (*v47
          && (v49 = type metadata accessor for DOCItemCollectionViewController(0),
              (v50 = swift_dynamicCastClass(v48, v49)) != 0))
        {
          v51 = v50;
          v52 = v48;

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
          v55 = *(_QWORD *)((v89[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v54 = *(_QWORD *)((v89[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v55 >= v54 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
          v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v51);
          specialized Array._endMutation()(v56);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v41);
      v57 = (_QWORD *)v89[0];
      goto LABEL_67;
    }
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
  }
  else
  {
    v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (char *)swift_bridgeObjectRetain(v41);
    if (v42)
      goto LABEL_38;
LABEL_66:
    swift_bridgeObjectRelease(v41);
    v57 = _swiftEmptyArrayStorage;
LABEL_67:
    swift_bridgeObjectRelease(v41);
    sub_10001ADEC();
    v89[0] = (unint64_t)v57;
    sub_10013092C(v60, (unint64_t *)type metadata accessor for DOCItemCollectionViewController, &qword_1006443C8, &qword_1006443C0, (uint64_t *)sub_1000E0F80);
    v61 = v89[0];
    if (v89[0] >> 62)
      goto LABEL_95;
    v62 = *(_QWORD *)((v89[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v89[0]);
    if (v62)
    {
LABEL_69:
      v63 = v61 & 0xC000000000000001;
      v64 = 4;
      v65 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
      v87 = (id)v61;
      while (1)
      {
        if (v63)
          result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v64 - 4, v61);
        else
          result = (char *)*(id *)(v61 + 8 * v64);
        v66 = result;
        v67 = v64 - 3;
        if (__OFADD__(v64 - 4, 1))
        {
          __break(1u);
LABEL_95:
          if (v61 < 0)
            v85 = v61;
          else
            v85 = v61 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v61);
          v62 = _CocoaArrayWrapper.endIndex.getter(v85);
          if (!v62)
            return (char *)swift_bridgeObjectRelease_n(v61, 2);
          goto LABEL_69;
        }
        result[v65[2]] = v88;
        v68 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
        v69 = *(_QWORD *)&result[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
        if (!v69)
          goto LABEL_101;
        v70 = v69 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
        if ((*(_BYTE *)(v70 + 16) & 1) != 0)
          break;
        v71 = *(void **)(v70 + 8);
        result = (char *)swift_unknownObjectRetain(v71);
        if (v71)
          goto LABEL_78;
LABEL_86:
        if (!*(_QWORD *)&v66[v68])
          goto LABEL_102;
        v80 = sub_10004FD50();
        DOCItemCollectionViewController.items.setter(v80);
        v81 = *(_QWORD *)&v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
        v82 = swift_bridgeObjectRetain(v81);
        sub_100039F10(v82, 0);

        swift_bridgeObjectRelease(v81);
        ++v64;
        if (v67 == v62)
          return (char *)swift_bridgeObjectRelease_n(v61, 2);
      }
      v71 = *(void **)(*(_QWORD *)v70 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v71);
LABEL_78:
      v72 = objc_msgSend(v66, "effectiveAppearance");
      if (!v72)
      {
        v79 = 0;
        goto LABEL_85;
      }
      v73 = v72;
      v74 = v62;
      v75 = v63;
      v76 = v65;
      v77 = objc_msgSend(v72, "showsCreateButton");

      if (v77
        && (objc_msgSend(*(id *)&v66[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPickerUI") & 1) == 0)
      {
        v65 = v76;
        if ((sub_100359CA0(v71, v78) & 1) != 0)
        {
          v83 = &v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
          swift_beginAccess(&v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v89, 0, 0);
          v63 = v75;
          if (*(_QWORD *)v83 == 2)
          {
            v79 = 0;
          }
          else
          {
            sub_100064B54();
            v79 = v84 ^ 1;
          }
          goto LABEL_83;
        }
        v79 = 0;
      }
      else
      {
        v79 = 0;
        v65 = v76;
      }
      v63 = v75;
LABEL_83:
      v62 = v74;
      v61 = (uint64_t)v87;
LABEL_85:
      v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] = v79 & 1;
      result = (char *)swift_unknownObjectRelease(v71);
      goto LABEL_86;
    }
    return (char *)swift_bridgeObjectRelease_n(v61, 2);
  }
  return result;
}

uint64_t type metadata accessor for DOCBrowserContainerController()
{
  return objc_opt_self(_TtC5Files29DOCBrowserContainerController);
}

void sub_10003181C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v6 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel);
    if (v7)
    {
      v8 = v7;
      sub_10004014C((uint64_t)v8, v9);
      if (v10)
      {
        v11 = v10;
        v12 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v11);
      }
      else
      {
        v12 = 0;
      }
      objc_msgSend(v8, "setText:", v12);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100031944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;

  v3 = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n(a2, 2);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v9, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v19 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    sub_1000564F0((unint64_t *)((char *)&v19 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    v12 = v11;
    swift_release(a1);
    v13 = swift_release(a2);
    if (v3)
      swift_willThrow(v13);
    swift_release_n(a2, 2, v14);
  }
  else
  {
    v15 = (void *)swift_slowAlloc(v9, -1);
    bzero(v15, v9);
    swift_retain();
    sub_1000564F0((unint64_t *)v15, v8, a1, a2);
    v12 = v16;
    swift_release(a1);
    swift_release(a2);
    swift_slowDealloc(v15, -1, -1);
    swift_release_n(a2, 2, v17);
  }
  return v12;
}

uint64_t sub_100031B08(int64_t a1, void *a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void **v19;
  void *v20;
  id v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
    if (v25 >= 1)
      goto LABEL_3;
LABEL_13:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000015, 0x800000010052EF30, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 228, 0);
    __break(1u);
    return result;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_13;
LABEL_3:
  v13 = a2;
  v14 = v6;
  v15 = sub_1003C18F0(a1, (unint64_t)v14, (uint64_t)a2, a3 & 1, a4 & 1);

  v16 = swift_allocObject(&unk_1005E60F8, 24, 7);
  v17 = v15[2];
  *(_QWORD *)(v16 + 16) = v17;
  v18 = (_QWORD *)swift_allocObject(&unk_1005E6120, 48, 7);
  v18[2] = v16;
  v18[3] = v15;
  v18[4] = a5;
  v18[5] = a6;
  if (v17)
  {
    swift_retain();
    swift_bridgeObjectRetain(v15);
    swift_retain();
    v19 = (void **)(v15 + 5);
    do
    {
      v20 = *v19;
      v21 = *(v19 - 1);
      v22 = v20;
      sub_100042688(v22, (uint64_t)v21, (uint64_t)sub_10009D330, (uint64_t)v18);

      v19 += 2;
      --v17;
    }
    while (v17);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain(v15);
    swift_retain();
  }
  swift_bridgeObjectRelease(v15);
  swift_release(v18);
  return swift_release(v16);
}

_QWORD *sub_100031D00()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  id v3;
  void *v4;
  _QWORD *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41[3];
  _QWORD *v42;

  v1 = v0;
  if (objc_msgSend(v0, "isEditing")
    && (v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0)
  {
    v3 = sub_10009A6F8(0);
    v4 = v3;
    v5 = _swiftEmptyArrayStorage;
    v41[0] = (unint64_t)_swiftEmptyArrayStorage;
    if (v3)
    {
      v6 = v3;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v7 = *(_QWORD *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v8 = *(_QWORD *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v7 >= v8 >> 1)
      {
        v40 = *(_QWORD *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v7 + 1, 1);
        v7 = v40;
      }
      v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized Array._endMutation()(v9);
      v5 = (_QWORD *)v41[0];
    }

    v10 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                   + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v10)
      v11 = objc_msgSend(v10, "isiCloudDriveProvider");
    else
      v11 = 0;
    v12 = sub_100034068(0);
    v13 = sub_10034F138((id)1, (uint64_t)v12, v11, *(id **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration]);
    v14 = swift_bridgeObjectRelease(v12);
    __chkstk_darwin(v14);
    v15 = sub_1002D30C4(v13, sub_1002D5668);
    swift_bridgeObjectRelease(v13);
    v41[0] = (unint64_t)v5;
    sub_1000887E8((uint64_t)v15);
    v2 = v5;
  }
  else
  {
    v2 = _swiftEmptyArrayStorage;
  }
  v42 = v2;
  v16 = objc_msgSend(v1, "navigationController");
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "viewControllers");

    v19 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

    if ((unint64_t)v20 >> 62)
    {
      if (v20 < 0)
        v39 = v20;
      else
        v39 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v20);
      v21 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v20);
    if (v21 == 1)
    {
      v22 = objc_msgSend(v1, "navigationController");
      if (v22)
      {
        v23 = v22;
        v24 = objc_msgSend(v22, "topViewController");

        if (v24)
        {
          v25 = type metadata accessor for DOCBrowserContainerController();
          v26 = swift_dynamicCastClass(v24, v25);
          if (v26
            && (v27 = (void **)(v26 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController),
                swift_beginAccess(v26 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, v41, 0, 0), (v28 = *v27) != 0)&& (v29 = type metadata accessor for DOCItemCollectionViewController(0), (v30 = swift_dynamicCastClass(v28, v29)) != 0))
          {
            v31 = v30;
            v32 = v28;
            v33 = v1;
            v34 = static NSObject.== infix(_:_:)(v31, v33);

            if ((v34 & 1) != 0 && (sub_1002CCB98() & 1) != 0)
            {
              v35 = *(_QWORD *)&v33[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems];
              v36 = swift_bridgeObjectRetain(v35);
              v37 = sub_1002CCC68(v36);
              swift_bridgeObjectRelease(v35);
              sub_1000887E8((uint64_t)v37);
            }
          }
          else
          {

          }
        }
      }
    }
  }
  return v42;
}

void sub_1000320AC(char *a1)
{
  void *v2;
  id v3;
  id v4;
  char *v5;
  void *v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19[24];

  v2 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v3 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "sceneIdentifier");
  v4 = objc_msgSend(v2, "globalTabbedBrowserControllerForIdentifier:", v3);

  if (v4)
  {
    v18 = objc_msgSend(v4, "effectiveFullBrowser");

    v5 = (char *)objc_msgSend(v18, "effectiveBrowserViewController");
    if (v5)
    {
      v6 = v5;
      v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v19, 0, 0);
      v8 = *v7;
      if (*v7
        && (v9 = type metadata accessor for DOCItemCollectionViewController(0),
            (v10 = swift_dynamicCastClass(v8, v9)) != 0))
      {
        v11 = v10;
        v12 = v8;

        v13 = v12;
        v14 = a1;
        v15 = static NSObject.== infix(_:_:)(v11, v14);

        if ((v15 & 1) != 0)
        {
          v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
          v17 = swift_bridgeObjectRetain(v16);
          sub_100013678(v17);
          swift_bridgeObjectRelease(v16);
        }
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void sub_100032268()
{
  void *v0;
  void *v1;
  objc_class *v2;
  id v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  double (**v19)(void *, uint64_t, void *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  _BYTE *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;

  v0 = (void *)DOCSpotlightEnumeratedItemIdentifierActivities;
  v1 = (void *)DOCDocumentSourceIdentifierActivities;
  v2 = (objc_class *)type metadata accessor for DOCFileProviderSource();
  v3 = objc_allocWithZone(v2);
  v4 = sub_10004D90C(v0, v1);
  v4[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting] = 1;
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = &off_1005C01D8;
  swift_bridgeObjectRelease(v5);
  v4[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 1;
  v6 = (void *)DOCSpotlightEnumeratedItemIdentifierFavoriteFolders;
  v7 = (void *)DOCDocumentSourceIdentifierFavoriteFolders;
  v8 = objc_allocWithZone(v2);
  v9 = sub_10004D90C(v6, v7);
  v10 = (void *)DOCSpotlightEnumeratedItemIdentifierTrashedItems;
  v11 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  v12 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCTrashedItemsSource())
      + OBJC_IVAR____TtC5Files21DOCTrashedItemsSource____lazy_storage____displayName;
  *v12 = 0;
  v12[1] = 0;
  v13 = sub_10004D90C(v10, v11);
  v13[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting] = 2;
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = &off_1005C0200;
  swift_bridgeObjectRelease(v14);
  v15 = (void *)objc_opt_self(DOCConcreteLocation);
  v16 = v13;
  v17 = objc_msgSend(v15, "trashedItemsLocation");
  v18 = objc_msgSend(v17, "promptText");

  if (v18)
  {
    objc_msgSend(v16, "setPromptText:", v18);

    v19 = (double (**)(void *, uint64_t, void *))&v16[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
    v20 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
    v21 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction + 8];
    *v19 = sub_1002AB840;
    v19[1] = 0;
    sub_100087534(v20, v21);
    v22 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v23 = swift_allocObject(v22, 88, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D9870;
    if (qword_100640F80 != -1)
      swift_once(&qword_100640F80, sub_1000AE894);
    v24 = (void *)static DOCFileProviderSource.searchSource;
    *(_QWORD *)(v23 + 32) = static DOCFileProviderSource.searchSource;
    v25 = qword_100640F68;
    v26 = v24;
    if (v25 != -1)
      swift_once(&qword_100640F68, sub_1000AEA08);
    v27 = (void *)qword_100672B48;
    *(_QWORD *)(v23 + 40) = qword_100672B48;
    *(_QWORD *)(v23 + 48) = v4;
    v28 = qword_100640F78;
    v29 = v27;
    v30 = v4;
    if (v28 != -1)
      swift_once(&qword_100640F78, sub_1000AEADC);
    v31 = (void *)qword_100672B58;
    *(_QWORD *)(v23 + 56) = qword_100672B58;
    *(_QWORD *)(v23 + 64) = v9;
    v32 = qword_100640F70;
    v33 = v31;
    v34 = v9;
    v35 = v34;
    if (v32 != -1)
      v34 = (id)swift_once(&qword_100640F70, sub_1000AEB70);
    v36 = (void *)qword_100672B50;
    *(_QWORD *)(v23 + 72) = qword_100672B50;
    *(_QWORD *)(v23 + 80) = v16;
    specialized Array._endMutation()(v34);
    v37 = v36;

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_100032598(uint64_t a1, int a2, void *a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t result;
  char *i;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  uint64_t v21;
  void **v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t k;
  uint64_t v33;
  void **v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  BOOL v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  id v83;
  id v84;
  unsigned __int8 v85;
  char *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  id v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  void *v96;
  id v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char v103[24];
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106[3];
  _BYTE v107[24];
  char v108[32];

  v4 = v3;
  v96 = a3;
  v101 = a2;
  v6 = type metadata accessor for Logger(0);
  v100 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v95 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v99 = (char *)&v94 - v9;
  v10 = (uint64_t)objc_msgSend(v3, "dataSource");
  v11 = (uint64_t *)(v10 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
  swift_beginAccess(v10 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers, v108, 0, 0);
  v12 = *v11;
  swift_bridgeObjectRetain(*v11);

  if (v12)
    goto LABEL_17;
  v13 = (char *)objc_msgSend(v4, "dataSource");
  v10 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers];
  swift_bridgeObjectRetain(v10);

  if (!v10)
  {
LABEL_16:
    v12 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  if (!((unint64_t)v10 >> 62))
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_5;
    goto LABEL_15;
  }
  if (v10 >= 0)
    v18 = v10 & 0xFFFFFFFFFFFFFF8;
  else
    v18 = v10;
  swift_bridgeObjectRetain(v10);
  v14 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v10);
  if (!v14)
  {
LABEL_15:
    swift_bridgeObjectRelease(v10);
    goto LABEL_16;
  }
LABEL_5:
  result = v14 - 1;
  if (__OFSUB__(v14, 1))
    goto LABEL_101;
  if ((v10 & 0xC000000000000001) != 0)
    goto LABEL_102;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_104;
  }
  if (result >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_104:
    __break(1u);
    return result;
  }
  for (i = (char *)*(id *)(v10 + 8 * result + 32);
        ;
        i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v10))
  {
    v17 = i;
    swift_bridgeObjectRelease(v10);
    v10 = (uint64_t)&v17[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess(&v17[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v103, 0, 0);
    v12 = *(_QWORD *)v10;
    swift_bridgeObjectRetain(*(_QWORD *)v10);

LABEL_17:
    v98 = v6;
    v106[0] = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v10 = v12;
      else
        v10 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      result = _CocoaArrayWrapper.endIndex.getter(v10);
      v19 = result;
      if (!result)
        goto LABEL_40;
    }
    else
    {
      v19 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(v12);
      if (!v19)
        goto LABEL_40;
    }
    if (v19 >= 1)
      break;
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    ;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    for (j = 0; j != v19; ++j)
    {
      v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      v22 = (void **)(v21 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess(v21 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, v107, 0, 0);
      v23 = *v22;
      if (v23
        && (v24 = type metadata accessor for DOCItemCollectionViewController(0),
            (v25 = swift_dynamicCastClass(v23, v24)) != 0))
      {
        v26 = v25;
        v27 = v23;
        v28 = swift_unknownObjectRelease(v21);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v30 = *(_QWORD *)((v106[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v29 = *(_QWORD *)((v106[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v30 >= v29 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v26);
        specialized Array._endMutation()(v31);
      }
      else
      {
        swift_unknownObjectRelease(v21);
      }
    }
  }
  else
  {
    for (k = 0; k != v19; ++k)
    {
      v34 = (void **)(*(_QWORD *)(v12 + 8 * k + 32)
                    + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess(v34, v107, 0, 0);
      v35 = *v34;
      if (v35)
      {
        v36 = type metadata accessor for DOCItemCollectionViewController(0);
        v37 = swift_dynamicCastClass(v35, v36);
        if (v37)
        {
          v38 = v37;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
          v40 = *(_QWORD *)((v106[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v39 = *(_QWORD *)((v106[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v40 >= v39 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
          v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
          specialized Array._endMutation()(v33);
        }
      }
    }
  }
LABEL_40:
  swift_bridgeObjectRelease(v12);
  v41 = v106[0];
  swift_bridgeObjectRelease(v12);
  if ((unint64_t)v41 >> 62)
    goto LABEL_55;
  v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v41);
  for (; v42; v42 = _CocoaArrayWrapper.endIndex.getter(v53))
  {
    v43 = 0;
    while (1)
    {
      v44 = (v41 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v41)
          : (char *)*(id *)(v41 + 32 + 8 * v43);
      v45 = v44;
      v46 = __OFADD__(v43++, 1);
      if (v46)
        break;
      v47 = (uint64_t *)&v44[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess(&v44[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v106, 1, 0);
      v48 = *v47;
      *v47 = a1;
      if (v48 != a1)
      {
        v49 = *(_QWORD *)&v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
        v50 = *(_QWORD *)(v49 + 16);
        if (v50)
        {
          v51 = (uint64_t *)(v49 + 64);
          do
          {
            v52 = *v51;
            v51 += 5;
            *(_BYTE *)(v52 + 24) = *(_BYTE *)(v52 + 25);
            --v50;
          }
          while (v50);
        }
        sub_100026A34();
      }

      if (v43 == v42)
        goto LABEL_59;
    }
    __break(1u);
LABEL_55:
    if (v41 < 0)
      v53 = v41;
    else
      v53 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v41);
  }
LABEL_59:
  swift_bridgeObjectRelease_n(v41, 2);
  v97 = v4;
  sub_10001ADEC();
  v55 = v54;
  if (v54 >> 62)
    goto LABEL_87;
  v56 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v54);
  if (v56)
  {
    while (2)
    {
      v57 = 0;
      v102 = v55 + 32;
      while (1)
      {
        if ((v55 & 0xC000000000000001) != 0)
          v58 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v55);
        else
          v58 = (char *)*(id *)(v102 + 8 * v57);
        v59 = v58;
        v46 = __OFADD__(v57++, 1);
        if (v46)
        {
          __break(1u);
          goto LABEL_86;
        }
        v60 = *(_QWORD **)(*(_QWORD *)&v58[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                         + OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes);
        v61 = v60[2];
        if (!v61)
          goto LABEL_73;
        v62 = a1;
        if (v60[4] != a1)
        {
          if (v61 == 1)
            goto LABEL_73;
          v62 = a1;
          if (v60[5] != a1)
            break;
        }
LABEL_74:
        v63 = (uint64_t *)&v58[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess(&v58[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v105, 1, 0);
        v64 = *v63;
        *v63 = v62;
        if (v64 != v62)
        {
          v65 = *(_QWORD *)&v59[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
          v66 = *(_QWORD *)(v65 + 16);
          if (v66)
          {
            v67 = (uint64_t *)(v65 + 64);
            do
            {
              v68 = *v67;
              v67 += 5;
              *(_BYTE *)(v68 + 24) = *(_BYTE *)(v68 + 25);
              --v66;
            }
            while (v66);
          }
          sub_100026A34();
        }

        if (v57 == v56)
          goto LABEL_91;
      }
      if (v61 != 2)
      {
        v69 = 6;
        while (1)
        {
          v70 = v69 - 3;
          if (__OFADD__(v69 - 4, 1))
            break;
          if (v60[v69] == a1)
          {
            v62 = a1;
            goto LABEL_74;
          }
          ++v69;
          v62 = 1;
          if (v70 == v61)
            goto LABEL_74;
        }
LABEL_86:
        __break(1u);
LABEL_87:
        if (v55 < 0)
          v71 = v55;
        else
          v71 = v55 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v55);
        v56 = _CocoaArrayWrapper.endIndex.getter(v71);
        if (!v56)
          goto LABEL_91;
        continue;
      }
      break;
    }
LABEL_73:
    v62 = 1;
    goto LABEL_74;
  }
LABEL_91:
  v72 = swift_bridgeObjectRelease_n(v55, 2);
  v73 = Logger.StateStore.unsafeMutableAddressor(v72);
  v75 = v99;
  v74 = v100;
  v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 16);
  v77 = v98;
  v78 = v76(v99, v73, v98);
  v79 = Logger.logObject.getter(v78);
  v80 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v79, v80))
  {
    v81 = swift_slowAlloc(18, -1);
    *(_DWORD *)v81 = 134218240;
    v104 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105);
    *(_WORD *)(v81 + 12) = 1024;
    LODWORD(v104) = v101 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4);
    _os_log_impl((void *)&_mh_execute_header, v79, v80, "updateDisplayMode(to) %ld saveAsUserSelection: %{BOOL}d", (uint8_t *)v81, 0x12u);
    swift_slowDealloc(v81, -1, -1);
  }

  v82 = *(void (**)(char *, uint64_t))(v74 + 8);
  v82(v75, v77);
  v83 = v97;
  if ((v101 & 1) != 0)
  {
    v84 = objc_msgSend(v97, "configuration");
    v85 = objc_msgSend(v84, "supportsColumnView");

    if ((v85 & 1) != 0 || objc_msgSend(v83, "enclosingTabSwitcherStyle"))
    {
      v86 = v95;
      v87 = v76(v95, v73, v77);
      v88 = Logger.logObject.getter(v87);
      v89 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v88, v89))
      {
        v90 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v90 = 134217984;
        v104 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105);
        _os_log_impl((void *)&_mh_execute_header, v88, v89, "pdateDisplayMode(to) %ld updating defaults", v90, 0xCu);
        swift_slowDealloc(v90, -1, -1);
      }

      v82(v86, v77);
      v91 = objc_msgSend(v83, "configuration");
      sub_100144920(a1, v96, (uint64_t)v91);

      v92 = (char *)objc_msgSend(v83, "displayModeHandler");
      v93 = &v92[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
      *(_QWORD *)v93 = a1;
      v93[8] = 0;

    }
  }
  objc_msgSend(v83, "updateNavigationBarPrefersLargeTitles");
  return (unint64_t)objc_msgSend(v83, "updateRelatedViewControllersWithCurrentHierarchy");
}

uint64_t DOCHierarchyController.locations.setter(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v5;
  NSString v6;
  char *v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  id v13[3];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_1004DCBD8);
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
  v13[0] = v1;
  v5 = swift_getKeyPath(&unk_1004DCC18);
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)(v5, &protocol witness table for NSObject);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v13[0], "willChangeValueForKey:", v6);

  v7 = (char *)v13[0] + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations;
  swift_beginAccess((char *)v13[0] + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v13, 1, 0);
  v8 = *(_QWORD *)v7;
  *(_QWORD *)v7 = a1;
  swift_bridgeObjectRelease(v8);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "didChangeValueForKey:", v9);

  v10 = swift_getKeyPath(&unk_1004DCC18);
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v10, &protocol witness table for NSObject);
  v11 = swift_getKeyPath(&unk_1004DCBD8);
  return _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v11, &protocol witness table for NSObject);
}

id sub_100033024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

uint64_t sub_100033088()
{
  uint64_t v0;
  void *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  double v15;
  void *v16;
  id v17;
  int v18;
  id v19;
  unsigned __int8 *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  id v48;
  uint64_t result;
  uint64_t v50;
  _QWORD v51[10];

  v1 = *(void **)(v0 + 112);
  if (v1)
  {
    v2 = *(char **)(v0 + 112);
LABEL_23:
    v48 = v1;
    return (uint64_t)v2;
  }
  v3 = v0;
  v4 = *(void **)(v0 + 40);
  v5 = objc_msgSend(v4, "sourceIdentifier");
  v6 = DOCDocumentSourceIdentifierRecentDocuments;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
  {

    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);

    swift_bridgeObjectRelease(v9);
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v13).n128_u64[0];
    if ((v14 & 1) == 0)
      goto LABEL_11;
  }
  v16 = *(void **)(v3 + 16);
  if (!objc_msgSend(v16, "browserViewContext", v15))
  {
    v18 = objc_msgSend(v16, "forPickingDocuments");
    goto LABEL_16;
  }
LABEL_11:
  v16 = *(void **)(v3 + 16);
  v17 = objc_msgSend(v16, "browserViewContext", v15);
  if (!v17)
  {
    v18 = 2;
LABEL_16:
    v20 = *(unsigned __int8 **)(v3 + 48);
    v21 = objc_msgSend(v20, "identifier");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v27 = v25;
    if (v22 == v26 && v24 == v25)
    {

      swift_bridgeObjectRelease_n(v24, 2);
    }
    else
    {
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);

      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v27);
      if ((v28 & 1) == 0)
      {
        v29 = 7;
        goto LABEL_22;
      }
    }
    v29 = v20[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
LABEL_22:
    v30 = *(_BYTE *)(v3 + 96);
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCItemCollectionViewIdentifier);
    v33 = v32;
    v34 = v20;
    v35 = v16;
    v36 = v4;
    sub_100051C68(v34, v35, v18, v4, v29, 0, v31, v33, (uint64_t)v51, v30);
    v38 = *(void **)(v3 + 24);
    v37 = *(void **)(v3 + 32);
    v39 = *(void **)(v3 + 56);
    objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionViewController(0));
    sub_100028DA4((uint64_t)v51);
    v40 = v38;
    v41 = v37;
    v42 = v39;
    v43 = (void *)sub_100176EC0((uint64_t)v51, v40, v37, v39);
    v44 = *(_QWORD *)(v3 + 104);
    swift_unknownObjectRetain(v44);
    v2 = v43;
    sub_10009972C(v44);
    v45 = *(_QWORD *)(v3 + 80);
    v46 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener];
    *((_QWORD *)v46 + 1) = *(_QWORD *)(v3 + 88);
    swift_unknownObjectWeakAssign(v46, v45);
    sub_100029224((uint64_t)v51);
    v47 = *(void **)(v3 + 112);
    *(_QWORD *)(v3 + 112) = v2;

    v1 = 0;
    goto LABEL_23;
  }
  v19 = v17;
  if (v17 == (id)1)
  {
    v18 = 3;
    goto LABEL_16;
  }
  if (v17 == (id)2)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x800000010051A420, "Files/DOCItemCollectionConfiguration.swift", 42, 2, 54, 0);
    __break(1u);
  }
  type metadata accessor for DOCBrowserViewContext(0);
  v51[3] = v50;
  v51[0] = v19;
  result = doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(v51);
  __break(1u);
  return result;
}

void sub_1000333E8()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  _BOOL8 v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, "configuration");
  v2 = objc_msgSend(v1, "forPickingDocuments");

  if ((v2 & 1) != 0)
  {
    v3 = 0;
  }
  else
  {
    v4 = (char *)objc_msgSend(v0, "dataSource");
    v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

    v3 = v5 != 2;
  }
  v6 = objc_msgSend(v0, "internalNavigationController");
  v7 = objc_msgSend(v6, "navigationBar");

  objc_msgSend(v7, "setPrefersLargeTitles:", v3);
}

void DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(uint64_t *a1, char a2, id *a3)
{
  void *v3;
  SEL *v4;
  void *v5;
  uint64_t i;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  char *v12;
  SEL **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  SEL *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *Strong;
  void *v31;
  id *v32;
  id *v33;
  char *v34;
  id v35;
  void *v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  char v68;
  id v69;
  uint64_t v70;
  uint64_t *v73;
  _QWORD v74[3];
  char v75[24];
  char v76[24];

  v5 = v3;
  i = (uint64_t)objc_msgSend(v3, "dataSource");
  v8 = (uint64_t *)(i + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess(i + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v76, 0, 0);
  v9 = *v8;
  swift_bridgeObjectRetain(v9);

  v74[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v9 >> 62)
    goto LABEL_71;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v9);
  v73 = a1;
  if (!v10)
    goto LABEL_75;
LABEL_3:
  a1 = (uint64_t *)(v9 + 32);
  while (1)
  {
    v11 = __OFSUB__(v10--, 1);
    if (v11)
    {
      __break(1u);
LABEL_18:
      swift_bridgeObjectRelease(v9);
      a1 = v73;
      for (i = v74[0]; ; i = (uint64_t)_swiftEmptyArrayStorage)
      {
        swift_bridgeObjectRelease(v9);
        if ((unint64_t)i >> 62)
        {
LABEL_77:
          if (i < 0)
            v53 = i;
          else
            v53 = i & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(i);
          v9 = _CocoaArrayWrapper.endIndex.getter(v53);
          if (!v9)
          {
LABEL_28:
            swift_bridgeObjectRelease_n(i, 2);
            goto LABEL_33;
          }
        }
        else
        {
          v9 = *(_QWORD *)((i & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(i);
          if (!v9)
            goto LABEL_28;
        }
        v21 = 4;
        while (1)
        {
          v22 = (i & 0xC000000000000001) != 0
              ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21 - 4, i)
              : (char *)*(id *)(i + 8 * v21);
          v10 = (unint64_t)v22;
          v23 = v21 - 3;
          if (__OFADD__(v21 - 4, 1))
            break;
          v4 = (SEL *)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
          if (*(_QWORD *)&v22[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
            goto LABEL_31;

          ++v21;
          if (v23 == v9)
            goto LABEL_28;
        }
        __break(1u);
LABEL_71:
        if (v9 < 0)
          i = v9;
        else
          i = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v9);
        v10 = _CocoaArrayWrapper.endIndex.getter(i);
        v73 = a1;
        if (v10)
          goto LABEL_3;
LABEL_75:
        swift_bridgeObjectRelease(v9);
      }
    }
    if ((v9 & 0xC000000000000001) == 0)
      break;
    v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v9);
LABEL_11:
    i = (uint64_t)v12;
    v13 = (SEL **)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v75, 0, 0);
    v4 = *v13;
    if (*v13
      && (v14 = type metadata accessor for DOCItemCollectionViewController(0),
          (v15 = swift_dynamicCastClass(v4, v14)) != 0))
    {
      v16 = v15;
      v17 = v4;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v4 = *(SEL **)((v74[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)((v74[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v4 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, (char *)v4 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v16);
      i = (uint64_t)v74;
      specialized Array._endMutation()(v20);
      if (!v10)
        goto LABEL_18;
    }
    else
    {

      if (!v10)
        goto LABEL_18;
    }
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    if (v10 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_30;
    v12 = (char *)(id)a1[v10];
    goto LABEL_11;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease_n(i, 2);
  v24 = *(uint64_t *)((char *)v4 + v10);
  swift_retain();

  if (v24)
  {
    sub_10038EF44();
    swift_release(v24);
  }
LABEL_33:
  v25 = (char *)objc_msgSend(v5, "dataSource");
  v27 = v25;
  v28 = OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle;
  v29 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];
  if ((uint64_t *)v29 != a1)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v25[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver], v26);
    if (Strong)
    {
      v31 = Strong;
      objc_msgSend(Strong, "dataSource:willSwitchFrom:to:", v27, v29, a1);
      swift_unknownObjectRelease(v31);
    }
  }
  *(_QWORD *)&v27[v28] = a1;
  sub_10001D180(v29);

  sub_10013A618();
  v32 = (id *)objc_msgSend(v5, "effectiveSearchController");
  v4 = (SEL *)&selRef_objectForKey_ofClass_;
  if (v32)
  {
    v33 = v32;
    if (objc_msgSend(v32, "isActive"))
    {
      v34 = *(char **)((char *)v33 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
      v35 = objc_msgSend(v34, "viewIfLoaded");
      if (v35)
      {
        v36 = v35;
        v37 = objc_msgSend(v35, "isHidden");

        if ((v37 & 1) == 0)
        {
          i = *(_QWORD *)&v34[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
          if ((unint64_t)i >> 62)
            goto LABEL_83;
          if (*(uint64_t *)((i & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
          {
            do
            {
              sub_10001ADEC();
              v39 = v38;
              if ((unint64_t)v38 >> 62)
              {
                if (v38 < 0)
                  v70 = v38;
                else
                  v70 = v38 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v38);
                v5 = (void *)_CocoaArrayWrapper.endIndex.getter(v70);
                if (!v5)
                {
LABEL_99:
                  swift_bridgeObjectRelease_n(v39, 2);
                  goto LABEL_94;
                }
              }
              else
              {
                v5 = *(void **)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain(v38);
                if (!v5)
                  goto LABEL_99;
              }
              v40 = 0;
              v4 = (SEL *)(v39 & 0xC000000000000001);
              a3 = (id *)(v39 + 32);
              a1 = &OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes;
              while (1)
              {
                if (v4)
                  v41 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v39);
                else
                  v41 = (char *)a3[(_QWORD)v40];
                i = (uint64_t)v41;
                v11 = __OFADD__(v40, 1);
                v40 = (char *)v40 + 1;
                if (v11)
                {
                  __break(1u);
                  goto LABEL_77;
                }
                v42 = *(_QWORD **)(*(_QWORD *)&v41[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes);
                v43 = v42[2];
                if (!v43)
                  goto LABEL_58;
                v44 = (uint64_t)v73;
                if ((uint64_t *)v42[4] != v73)
                {
                  if (v43 == 1)
                    goto LABEL_58;
                  v44 = (uint64_t)v73;
                  if ((uint64_t *)v42[5] != v73)
                  {
                    if (v43 == 2)
                      goto LABEL_58;
                    v44 = (uint64_t)v73;
                    if ((uint64_t *)v42[6] != v73)
                      break;
                  }
                }
LABEL_59:
                v45 = (uint64_t *)&v41[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
                swift_beginAccess(&v41[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v74, 1, 0);
                v46 = *v45;
                *v45 = v44;
                if (v46 != v44)
                {
                  v47 = *(_QWORD *)(i + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
                  v48 = *(_QWORD *)(v47 + 16);
                  if (v48)
                  {
                    v49 = (uint64_t *)(v47 + 64);
                    do
                    {
                      v50 = *v49;
                      v49 += 5;
                      *(_BYTE *)(v50 + 24) = *(_BYTE *)(v50 + 25);
                      --v48;
                    }
                    while (v48);
                  }
                  sub_100026A34();
                }

                if (v40 == v5)
                  goto LABEL_99;
              }
              if (v43 == 3)
              {
LABEL_58:
                v44 = 1;
                goto LABEL_59;
              }
              v51 = 7;
              while (1)
              {
                v52 = v51 - 3;
                if (__OFADD__(v51 - 4, 1))
                  break;
                if ((uint64_t *)v42[v51] == v73)
                {
                  v44 = (uint64_t)v73;
                  goto LABEL_59;
                }
                ++v51;
                v44 = 1;
                if (v52 == v43)
                  goto LABEL_59;
              }
              __break(1u);
LABEL_83:
              if (i < 0)
                v54 = i;
              else
                v54 = i & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(i);
              v55 = _CocoaArrayWrapper.endIndex.getter(v54);
              swift_bridgeObjectRelease(i);
            }
            while (v55 >= 1);
          }
        }
      }
    }

  }
  v56 = objc_msgSend(v5, "internalNavigationController");
  v57 = type metadata accessor for DOCFullDocumentManagerNavigationController();
  v58 = (_BYTE *)swift_dynamicCastClassUnconditional(v56, v57, 0, 0, 0);
  v59 = OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled;
  v58[OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled] = a1 == (uint64_t *)2;
  v60 = objc_msgSend(v58, "navigationBar");
  v61 = type metadata accessor for DOCNavigationBar();
  v62 = swift_dynamicCastClassUnconditional(v60, v61, 0, 0, 0);
  LODWORD(v59) = v58[v59];
  v63 = (_BYTE *)(v62 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess(v62 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled, v74, 1, 0);
  v64 = 0;
  *v63 = v59;
  if ((_DWORD)v59 == 1)
    v64 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  sub_1000B1284(v64);

  v65 = objc_msgSend(v5, v4[413]);
  v66 = objc_msgSend(v65, "window");

  v67 = objc_msgSend(v66, "windowScene");
  if (v67)
    v68 = objc_msgSend(v67, "_isPerformingSystemSnapshot") ^ 1;
  else
    v68 = 1;
  v33 = a3;
  v69 = v5;
  sub_10001E8A0((uint64_t)a1, v68, v69, (uint64_t)v69, (uint64_t)a1, a2 & 1, a3);

LABEL_94:
}

_QWORD *sub_100033CA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = qword_100640E40;
  v3 = v1;
  if (v2 != -1)
    swift_once(&qword_100640E40, sub_10009B250);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "visibleSupplementaryViewsOfKind:", v4);

  v6 = sub_10004F2F0(0, &qword_100646080, UICollectionReusableView_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_6;
LABEL_22:
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v7);

    return _swiftEmptyArrayStorage;
  }
  if (v7 < 0)
    v19 = v7;
  else
    v19 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v19);
  v8 = (uint64_t)result;
  if (!result)
    goto LABEL_22;
LABEL_6:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
      else
        v11 = *(id *)(v7 + 8 * i + 32);
      v12 = v11;
      v13 = type metadata accessor for DOCItemCollectionViewSectionHeader();
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v15 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v18);
      }
      else
      {

      }
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void sub_100033EB8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  if (v1)
  {
    v11 = v1;
    if (DOCDeviceIsPhone())
      v2 = 2;
    else
      v2 = 0;
    objc_msgSend(v11, "setPreferredSearchBarPlacement:", v2);
    v3 = objc_msgSend(v11, "searchController");
    if (v3)
    {
      v4 = v3;
      v5 = type metadata accessor for DOCSearchController();
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = v6;
        if (objc_msgSend(v0, "enclosedInUIPDocumentLanding"))
        {
          if (*(_BYTE *)(v7 + OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState) == 4)
            goto LABEL_12;
          if (qword_100640E48 != -1)
            swift_once(&qword_100640E48, sub_1001B13DC);
          if (byte_100672758 == 1)
LABEL_12:
            objc_msgSend(v11, "setHidesSearchBarWhenScrolling:", 1);
        }
      }

    }
    if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x168))() & 1) == 0)
    {
      v8 = objc_msgSend(v11, "searchController");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "searchBar");

        objc_msgSend(v10, "_setEnabled:", objc_msgSend(v0, "isEditing") ^ 1);
      }
    }

  }
}

_QWORD *sub_100034068(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *result;
  _QWORD v20[4];
  _QWORD *v21;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v3)
  {
    v7 = _swiftEmptyArrayStorage;
    if ((a1 & 1) == 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  v4 = objc_msgSend(v3, "indexPathsForSelectedItems");
  if (!v4)
  {
    v7 = _swiftEmptyArrayStorage;
    if ((a1 & 1) == 0)
      goto LABEL_8;
LABEL_6:
    v21 = v7;
    swift_bridgeObjectRetain(v7);
    sub_1001B15C4(&v21);
    swift_bridgeObjectRelease(v7);
    v7 = v21;
    goto LABEL_8;
  }
  v5 = v4;
  v6 = type metadata accessor for IndexPath(0);
  v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((a1 & 1) != 0)
    goto LABEL_6;
LABEL_8:
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate);
  if (v8)
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate);
  }
  else
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    swift_bridgeObjectRetain(v9);
    v8 = 0;
  }
  v10 = __chkstk_darwin(v8);
  v20[2] = v1;
  v20[3] = v9;
  swift_bridgeObjectRetain(v10);
  v11 = sub_100016EBC((void (*)(uint64_t *__return_ptr, char *))sub_1001D1790, (uint64_t)v20, (uint64_t)v7);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v7);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode) != 1)
    return (_QWORD *)v11;
  v21 = _swiftEmptyArrayStorage;
  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_14;
    goto LABEL_28;
  }
  if (v11 < 0)
    v18 = v11;
  else
    v18 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v12 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v11);
  if (!v12)
  {
LABEL_28:
    swift_bridgeObjectRelease(v11);
    return _swiftEmptyArrayStorage;
  }
LABEL_14:
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
      }
      else
      {
        v16 = *(void **)(v11 + 8 * i + 32);
        swift_unknownObjectRetain(v16);
      }
      v17 = objc_msgSend(v16, "isFolder", v21);
      if ((v17 & 1) != 0)
      {
        swift_unknownObjectRelease(v16);
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v14 = v21[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
        v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v16);
        specialized ContiguousArray._endMutation()(v15);
      }
    }
    swift_bridgeObjectRelease(v11);
    return v21;
  }
  __break(1u);
  result = (_QWORD *)swift_release(v21);
  __break(1u);
  return result;
}

char *sub_1000342E4(void *a1, double a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t inited;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  Class isa;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  Class v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  Class v46;
  objc_class *v48;
  id v49;
  _BYTE v50[32];

  v4 = objc_allocWithZone((Class)type metadata accessor for DOCCircularProgressView());
  v5 = sub_1000AAB24(a2);
  static DOCVibrancy.Style.stroke(_:)(1);
  v6 = sub_10006922C(&qword_10064CA18);
  inited = swift_initStackObject(v6, v50);
  *(_QWORD *)(inited + 16) = v5;
  v8 = (char *)v5;
  DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.setter(0);
  v9 = UIView.addSubview<A>(_:)(inited);
  v10 = (void *)DOCViewDecorator.heightAnchor.getter(v9);
  v11 = objc_msgSend(a1, "heightAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  isa = NSLayoutConstraint.with(priority:)((__C::UILayoutPriority)1144750080).super.isa;
  v15 = (void *)DOCViewDecorator.heightAnchor.getter(v14);
  v16 = objc_msgSend(a1, "widthAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  v18 = NSLayoutConstraint.with(priority:)((__C::UILayoutPriority)1144750080).super.isa;
  v49 = (id)objc_opt_self(NSLayoutConstraint);
  v19 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v20 = swift_allocObject(v19, 112, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004DE9C0;
  *(_QWORD *)(v20 + 32) = isa;
  *(_QWORD *)(v20 + 40) = v18;
  v48 = isa;
  v21 = v18;
  v22 = (void *)DOCViewDecorator.widthAnchor.getter();
  v23 = (void *)DOCViewDecorator.heightAnchor.getter(v22);
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v20 + 48) = v24;
  v25 = (void *)DOCViewDecorator.widthAnchor.getter();
  v26 = objc_msgSend(v25, "constraintGreaterThanOrEqualToConstant:", *(double *)&v8[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_minSize]);

  *(_QWORD *)(v20 + 56) = v26;
  v27 = (void *)DOCViewDecorator.centerXAnchor.getter();
  v28 = objc_msgSend(a1, "centerXAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v20 + 64) = v29;
  v30 = (void *)DOCViewDecorator.centerYAnchor.getter();
  v31 = objc_msgSend(a1, "centerYAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 72) = v32;
  v33 = (void *)DOCViewDecorator.topAnchor.getter();
  v34 = objc_msgSend(a1, "topAnchor");
  v35 = objc_msgSend(v33, "constraintGreaterThanOrEqualToAnchor:", v34);

  *(_QWORD *)(v20 + 80) = v35;
  v36 = (void *)DOCViewDecorator.bottomAnchor.getter();
  v37 = objc_msgSend(a1, "bottomAnchor");
  v38 = objc_msgSend(v36, "constraintLessThanOrEqualToAnchor:", v37);

  *(_QWORD *)(v20 + 88) = v38;
  v39 = (void *)DOCViewDecorator.leadingAnchor.getter();
  v40 = objc_msgSend(a1, "leadingAnchor");
  v41 = objc_msgSend(v39, "constraintGreaterThanOrEqualToAnchor:", v40);

  *(_QWORD *)(v20 + 96) = v41;
  v42 = (void *)DOCViewDecorator.trailingAnchor.getter();
  v43 = objc_msgSend(a1, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintLessThanOrEqualToAnchor:", v43);

  *(_QWORD *)(v20 + 104) = v44;
  specialized Array._endMutation()(v45);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  v46 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v49, "activateConstraints:", v46);

  return v8;
}

void sub_10003498C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.Enumeration.unsafeMutableAddressor(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v36 = v1;
    v10 = swift_slowAlloc(32, -1);
    v34 = (_QWORD *)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(64, -1);
    v38 = v35;
    *(_DWORD *)v10 = 136446722;
    v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v11)
    {

      __break(1u);
      return;
    }
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v37 = sub_1000544FC(v12, v11, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 2082;
    v37 = sub_1000544FC(0xD00000000000001DLL, 0x8000000100512810, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v10 + 22) = 2112;
    v37 = (uint64_t)v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    v14 = v34;
    *v34 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v10, 0x20u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v15);
    swift_slowDealloc(v14, -1, -1);
    v16 = v35;
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  v17 = *(void **)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if ((v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
  {
    v18 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
    v38 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
    KeyPath = swift_getKeyPath(&unk_1004DBC90);
    v20 = swift_allocObject(&unk_1005CB448, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16, v7);
    v21 = swift_allocObject(&unk_1005CB470, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16, v17);
    v22 = swift_allocObject(&unk_1005CB498, 32, 7);
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = v21;
    v23 = v17;
    v24 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_1000B0B94, v22, &protocol witness table for NSObject);
    swift_release(KeyPath);
    swift_release(v22);
    v25 = *(void **)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation];
    *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = v24;

    sub_100008A60(v17, v18, 1);
  }
  else
  {
    v26 = v17;
    v38 = (uint64_t)v26;
    v27 = swift_getKeyPath(&unk_1004DBCC8);
    v28 = swift_allocObject(&unk_1005CB448, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16, v7);
    v29 = swift_allocObject(&unk_1005CB4C0, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16, v26);
    v30 = swift_allocObject(&unk_1005CB4E8, 32, 7);
    *(_QWORD *)(v30 + 16) = v28;
    *(_QWORD *)(v30 + 24) = v29;
    v31 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v27, 0, sub_1000B0B90, v30, &protocol witness table for NSObject);
    swift_release(v27);
    swift_release(v30);
    v32 = *(void **)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation];
    *(_QWORD *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = v31;

  }
}

uint64_t sub_100034DFC(unint64_t a1, void *a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v4 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_queue];
  v14 = swift_allocObject(&unk_1005DA5C8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1005DA5F0, 56, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v4;
  *(_QWORD *)(v15 + 32) = a2;
  *(_BYTE *)(v15 + 40) = a3;
  *(_QWORD *)(v15 + 48) = a1;
  aBlock[4] = sub_10009EC60;
  v30 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005DA608;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  v18 = v4;
  v19 = sub_1000A850C(a1);
  static DispatchQoS.unspecified.getter(v19);
  v28 = _swiftEmptyArrayStorage;
  v20 = sub_100062658((unint64_t *)&qword_100641260, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_10006922C((uint64_t *)&unk_100647540);
  v22 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v21, v22, v8, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v26);
  v23 = v30;
  swift_release(v14);
  return swift_release(v23);
}

void sub_100035050(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];

  if (!a1)
    return;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  v24 = a2 + 32;
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain(a1);
  v5 = 0;
  v22 = a1;
  v6 = (uint64_t *)(a1 + 64);
  v25 = v3;
  while (v5 == v3)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = v3;
    v17 = 0;
    v18 = 0;
    v26 = v16;
    v27 = 0;
    if (!v4)
      goto LABEL_22;
LABEL_11:
    v14 = *(v6 - 1);
    v13 = *v6;
    v17 = *(v6 - 3);
    v15 = *(v6 - 2);
    v18 = *(v6 - 4);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v14);
    swift_retain();
    if (!v11)
      goto LABEL_22;
    if (!v17)
    {
      v20 = v27;
      goto LABEL_18;
    }
    if ((v12 != v18 || v11 != v17) && (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, v18, v17, 0) & 1) == 0)
    {
      swift_release(v10);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v11);
      swift_release(v13);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v17);
LABEL_20:
      swift_bridgeObjectRelease_n(a2, 2);
      v21 = v22;
LABEL_24:
      swift_bridgeObjectRelease(v21);
      return;
    }
    swift_beginAccess(v10 + 16, v29, 0, 0);
    v7 = *(_QWORD *)(v10 + 16);
    swift_beginAccess(v13 + 16, v28, 0, 0);
    v8 = *(_QWORD *)(v13 + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    v9 = == infix(_:_:)(v7, v8);
    swift_release(v10);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v11);
    swift_release(v13);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
    --v4;
    v6 += 5;
    v3 = v25;
    v5 = v26;
    if ((v9 & 1) == 0)
      goto LABEL_20;
  }
  if (v5 >= v3)
  {
    __break(1u);
    return;
  }
  v19 = (uint64_t *)(v24 + 40 * v5);
  v20 = v19[3];
  v10 = v19[4];
  v12 = *v19;
  v11 = v19[1];
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v20);
  swift_retain();
  if (v4)
  {
    v26 = v5 + 1;
    v27 = v20;
    goto LABEL_11;
  }
  if (v11)
  {
LABEL_18:
    swift_release(v10);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v22);
    v21 = v11;
    goto LABEL_24;
  }
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v17 = 0;
  v18 = 0;
LABEL_22:
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v22);
  if (v17)
  {
    sub_1001D09CC(v18, v17, v15, v14, v13);
    v21 = a2;
    goto LABEL_24;
  }
  swift_bridgeObjectRelease(a2);
}

uint64_t sub_100035908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v29 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100655BA8);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_10064A600);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v28 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v28 - v17;
  v30 = a1;
  sub_1000271D4(a1, (uint64_t)&v28 - v17, &qword_10064A600);
  v31 = a2;
  sub_1000271D4(a2, (uint64_t)v16, &qword_10064A600);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000271D4((uint64_t)v18, (uint64_t)v9, &qword_10064A600);
  sub_1000271D4((uint64_t)v16, v19, &qword_10064A600);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_10000CB4C((uint64_t)v16, &qword_10064A600);
    sub_10000CB4C((uint64_t)v18, &qword_10064A600);
    if (v20(v19, 1, v4) == 1)
    {
      sub_10000CB4C((uint64_t)v9, &qword_10064A600);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1000271D4((uint64_t)v9, (uint64_t)v13, &qword_10064A600);
  if (v20(v19, 1, v4) == 1)
  {
    sub_10000CB4C((uint64_t)v16, &qword_10064A600);
    sub_10000CB4C((uint64_t)v18, &qword_10064A600);
    sub_10007C720((uint64_t)v13, type metadata accessor for DOCBrowserHistoryItem);
LABEL_6:
    sub_10000CB4C((uint64_t)v9, &qword_100655BA8);
LABEL_10:
    v26 = 0;
    return v26 & 1;
  }
  v21 = v29;
  sub_1001D0788(v19, v29, type metadata accessor for DOCBrowserHistoryItem);
  v22 = static UUID.== infix(_:_:)(v13, v21);
  sub_10007C720(v21, type metadata accessor for DOCBrowserHistoryItem);
  sub_10000CB4C((uint64_t)v16, &qword_10064A600);
  sub_10000CB4C((uint64_t)v18, &qword_10064A600);
  sub_10007C720((uint64_t)v13, type metadata accessor for DOCBrowserHistoryItem);
  sub_10000CB4C((uint64_t)v9, &qword_10064A600);
  if ((v22 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v23 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  v25 = v30;
  v24 = v31;
  if ((sub_10008839C(*(_QWORD *)(v30 + *(int *)(v23 + 20)), *(_QWORD *)(v31 + *(int *)(v23 + 20))) & 1) == 0)
    goto LABEL_10;
  v26 = sub_10008839C(*(_QWORD *)(v25 + *(int *)(v23 + 24)), *(_QWORD *)(v24 + *(int *)(v23 + 24)));
  return v26 & 1;
}

Swift::Void __swiftcall DOCItemCollectionViewController.loadView()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSString v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  NSString v49;
  NSString v50;
  NSString v51;
  NSString v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  NSString v57;
  id *v58;
  id v59;
  NSString v60;
  id v61;
  uint64_t v62;
  id v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t ObjectType;
  uint64_t v81;
  __n128 v82;
  void *v83;
  id v84;
  char v85;
  id v86[2];
  __int128 v87;
  _BYTE v88[24];
  __int128 v89;
  __int128 v90;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewPool];
  v2 = sub_10001B43C();
  v3 = v0;
  sub_1003E747C(v2, v1, v3);
  v5 = v4;

  v6 = v5;
  objc_msgSend(v6, "setAllowsMultipleSelection:", sub_10009B8FC());

  v7 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v8 = v6;
  objc_msgSend(v8, "setAllowsMultipleSelectionDuringEditing:", objc_msgSend(v7, "isPopoverOrWidget") ^ 1);

  v9 = v8;
  objc_msgSend(v9, "setAllowsFocus:", objc_msgSend(v7, "isPopoverOrWidget") ^ 1);

  v10 = v9;
  objc_msgSend(v10, "setSelectionFollowsFocus:", objc_msgSend(v7, "isPopoverOrWidget") ^ 1);

  v11 = v10;
  objc_msgSend(v11, "_setShouldBecomeFocusedOnSelection:", objc_msgSend(v7, "isPopoverOrWidget") ^ 1);

  v12 = v11;
  v13 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration(v7);
  if (!v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v16 = v15;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  objc_msgSend(v12, "setFocusGroupIdentifier:", v13, v14);

  *((_BYTE *)v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI) = 0;
  objc_msgSend(v3, "setRestoresFocusAfterTransition:", 0);
  v17 = type metadata accessor for DOCItemCollectionGridCell();
  v18 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
  v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier + 8];
  v20 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier], &v89, 33, 0);
  swift_bridgeObjectRetain(v19);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v20);
  v86[0] = *(id *)v20;
  *(_QWORD *)v20 = 0x8000000000000000;
  sub_10007F894(v17, v18, v19, isUniquelyReferenced_nonNull_native);
  v22 = *(_QWORD *)v20;
  *(id *)v20 = v86[0];
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v22);
  swift_endAccess(&v89);
  objc_msgSend(v3, "loadViewIfNeeded");
  v23 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v24 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v24)
  {
    __break(1u);
    goto LABEL_35;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v26 = v24;
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v27);

  v28 = type metadata accessor for DOCItemCollectionListCell(0);
  v29 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier];
  v30 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier + 8];
  swift_beginAccess(v20, &v89, 33, 0);
  swift_bridgeObjectRetain(v30);
  v31 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v20);
  v86[0] = *(id *)v20;
  *(_QWORD *)v20 = 0x8000000000000000;
  sub_10007F894(v28, v29, v30, v31);
  v32 = *(_QWORD *)v20;
  *(id *)v20 = v86[0];
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v32);
  swift_endAccess(&v89);
  objc_msgSend(v3, "loadViewIfNeeded");
  v33 = *(void **)&v3[v23];
  if (!v33)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v34 = swift_getObjCClassFromMetadata(v28);
  v35 = v33;
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "registerClass:forCellWithReuseIdentifier:", v34, v36);

  v37 = type metadata accessor for DOCItemCollectionLargeTextListCell(0);
  v38 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier];
  v39 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier
                     + 8];
  swift_beginAccess(v20, &v89, 33, 0);
  swift_bridgeObjectRetain(v39);
  v40 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v20);
  v86[0] = *(id *)v20;
  *(_QWORD *)v20 = 0x8000000000000000;
  sub_10007F894(v37, v38, v39, v40);
  v41 = *(_QWORD *)v20;
  *(id *)v20 = v86[0];
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v41);
  swift_endAccess(&v89);
  objc_msgSend(v3, "loadViewIfNeeded");
  v42 = *(void **)&v3[v23];
  if (!v42)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v43 = swift_getObjCClassFromMetadata(v37);
  v44 = v42;
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "registerClass:forCellWithReuseIdentifier:", v43, v45);

  v46 = sub_10004F2F0(0, &qword_100646080, UICollectionReusableView_ptr);
  v47 = swift_getObjCClassFromMetadata(v46);
  v48 = String._bridgeToObjectiveC()();
  v49 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v47, v48, v49);

  v50 = String._bridgeToObjectiveC()();
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v47, v50, v51);

  v52 = String._bridgeToObjectiveC()();
  v53 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v47, v52, v53);

  v54 = type metadata accessor for DOCItemCollectionViewSectionHeader();
  v55 = swift_getObjCClassFromMetadata(v54);
  if (qword_100640E40 != -1)
    swift_once(&qword_100640E40, sub_10009B250);
  v56 = String._bridgeToObjectiveC()();
  v57 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v55, v56, v57);

  v58 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v58, v88, 0, 0);
  if (!*v58)
  {
    v89 = 0u;
    v90 = 0u;
LABEL_19:
    sub_10000CB4C((uint64_t)&v89, &qword_100642730);
    goto LABEL_20;
  }
  v59 = *v58;
  v60 = String._bridgeToObjectiveC()();
  v61 = objc_msgSend(v59, "objectForKey:", v60);

  if (v61)
  {
    _bridgeAnyObjectToAny(_:)(v86, v61);
    swift_unknownObjectRelease(v61);
  }
  else
  {
    *(_OWORD *)v86 = 0u;
    v87 = 0u;
  }
  sub_100070EDC((uint64_t)v86, (uint64_t)&v89, &qword_100642730);
  if (!*((_QWORD *)&v90 + 1))
    goto LABEL_19;
  v62 = sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
  if ((swift_dynamicCast(v86, &v89, (char *)&type metadata for Any + 8, v62, 6) & 1) == 0)
  {
LABEL_20:
    v67 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext], &v89, 1, 0);
    *(_OWORD *)v67 = 0u;
    *((_OWORD *)v67 + 1) = 0u;
    goto LABEL_21;
  }
  v63 = v86[0];
  v64 = objc_msgSend(v86[0], "BOOLValue");

  if (v64)
    v65 = 0;
  else
    v65 = 2;
  v66 = (uint64_t *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext], &v89, 1, 0);
  *v66 = v65;
  v66[1] = 0;
  v66[2] = 0;
  v66[3] = 0;
LABEL_21:
  v68 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v68)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v69 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v69 + 16);
  v70 = type metadata accessor for DOCNodeDiffableDataSource();
  swift_allocObject(v70, 40, 7);
  v71 = v12;
  v72 = sub_1000A215C((uint64_t)v71, v68, (uint64_t)sub_1000626FC, v69);
  v73 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource;
  v74 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = v72;
  swift_release(v74);
  v75 = *(_QWORD *)&v3[v73];
  if (!v75)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v76 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v76 + 16);
  if ((*(_BYTE *)(v75 + 16) & 1) == 0)
    goto LABEL_26;
  v77 = *(void **)(v75 + 32);
  if (!v77)
  {
    __break(1u);
LABEL_26:
    v77 = *(void **)(v75 + 24);
    if (v77)
      goto LABEL_27;
LABEL_39:
    __break(1u);
    return;
  }
LABEL_27:
  swift_retain();
  swift_retain();
  v78 = v77;
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_1001BF8C8, v76);
  swift_release(v75);
  swift_release(v76);

  sub_1004BCE94();
  v79 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 64];
  if (v79)
  {
    ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                                  + 64]);
    v81 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v81 + 16);
    swift_unknownObjectRetain(v79);
    swift_retain();
    DOCNode.fpfs_fetchFPItem(completion:)(sub_1001BF8D0, v81, ObjectType);
    swift_release_n(v81, 2, v82);
    swift_unknownObjectRelease(v79);
  }
  v83 = (void *)objc_opt_self(DOCFeature);
  v84 = v71;
  if (objc_msgSend(v83, "protectedAppsEnabled")
    && v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1)
  {
    v85 = v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] ^ 1;
  }
  else
  {
    v85 = 0;
  }
  objc_msgSend(v84, "setHidden:", v85 & 1, v86[0], v86[1], v87);

}

void sub_100036718(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  char *v60;
  void **v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  Class isa;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  Class v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void *Strong;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  unint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117[24];
  uint64_t v118;
  char v119[24];
  char v120[24];
  _QWORD v121[3];
  _QWORD v122[2];

  v8 = (uint64_t)v4;
  LOBYTE(v9) = a3;
  v122[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
      goto LABEL_3;
LABEL_37:
    swift_bridgeObjectRelease(a1);
    if (a2)
      goto LABEL_16;
LABEL_38:
    v24 = 0;
    goto LABEL_45;
  }
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v3);
  if (!v12)
    goto LABEL_37;
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
LABEL_40:
    if (a2 >= 0)
      v3 = v13;
    else
      v3 = a2;
    swift_bridgeObjectRetain(a2);
    v24 = _CocoaArrayWrapper.endIndex.getter(v3);
    if (v24)
      goto LABEL_18;
    goto LABEL_44;
  }
  v5 = (uint64_t)v4;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = 0;
    do
    {
      v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
      v15 = type metadata accessor for DOCBrowserContainerController();
      v7 = swift_dynamicCastClassUnconditional(v14, v15, 0, 0, 0);
      v6 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v17 = *(_QWORD *)((v122[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((v122[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      ++v3;
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v7);
      specialized Array._endMutation()(v18);
      swift_unknownObjectRelease(v6);
    }
    while (v12 != v3);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v112 = v9;
    v3 = type metadata accessor for DOCBrowserContainerController();
    v19 = 0;
    do
    {
      v20 = *(void **)(a1 + 8 * v19 + 32);
      v6 = (char *)swift_dynamicCastClassUnconditional(v20, v3, 0, 0, 0);
      v7 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v22 = *(_QWORD *)((v122[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v21 = *(_QWORD *)((v122[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v22 >= v21 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
      ++v19;
      v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v6);
      specialized Array._endMutation()(v23);

    }
    while (v12 != v19);
    swift_bridgeObjectRelease(a1);
    LOBYTE(v9) = v112;
  }
  v8 = v5;
  if (!a2)
    goto LABEL_38;
LABEL_16:
  v121[0] = _swiftEmptyArrayStorage;
  v13 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a2 >> 62)
    goto LABEL_40;
  v24 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (v24)
  {
LABEL_18:
    if (v24 < 1)
    {
      __break(1u);
      goto LABEL_94;
    }
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v24; ++i)
      {
        v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
        v27 = type metadata accessor for DOCBrowserContainerController();
        v28 = swift_dynamicCastClass(v26, v27);
        if (v28)
        {
          v29 = v28;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
          v6 = *(char **)((v121[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v30 = *(_QWORD *)((v121[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v6 >= v30 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v6 + 1, 1);
          v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v29);
          specialized Array._endMutation()(v31);
        }
        else
        {
          swift_unknownObjectRelease(v26);
        }
      }
    }
    else
    {
      v5 = a2 + 32;
      v32 = type metadata accessor for DOCBrowserContainerController();
      do
      {
        v34 = *(void **)v5;
        v35 = swift_dynamicCastClass(*(_QWORD *)v5, v32);
        if (v35)
        {
          v36 = v35;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
          v6 = *(char **)((v121[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v37 = *(_QWORD *)((v121[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v6 >= v37 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v6 + 1, 1);
          v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v36);
          specialized Array._endMutation()(v33);
        }
        v5 += 8;
        --v24;
      }
      while (v24);
    }
  }
LABEL_44:
  swift_bridgeObjectRelease(a2);
  v24 = v121[0];
LABEL_45:
  v12 = v122[0];
  v38 = swift_allocObject(&unk_1005E6080, 33, 7);
  *(_QWORD *)(v38 + 16) = v8;
  *(_QWORD *)(v38 + 24) = v12;
  *(_BYTE *)(v38 + 32) = v9 & 1;
  if (*(_QWORD *)(v8 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2)
  {
    swift_bridgeObjectRetain_n(v12, 2);
    v43 = (uint64_t)(id)v8;
    swift_bridgeObjectRelease(v24);
    swift_beginAccess(v122, v121, 0, 0);
    v5 = v122[0];
    if (!(v122[0] >> 62))
    {
      v44 = swift_bridgeObjectRetain(v122[0]);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v44);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v45 = v5;
LABEL_56:
      swift_bridgeObjectRelease(v5);
      sub_10009D1E8(v45);
      sub_100029E34(v43, v12, v9 & 1);
      swift_release(v38);
      swift_bridgeObjectRelease(v12);
      return;
    }
LABEL_89:
    if (v5 < 0)
      v76 = v5;
    else
      v76 = v5 & 0xFFFFFFFFFFFFFF8;
    v77 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRetain(v5);
    v45 = _bridgeCocoaArray<A>(_:)(v76, v77);
    swift_bridgeObjectRelease(v5);
    goto LABEL_56;
  }
  swift_beginAccess(v122, v121, 0, 0);
  v3 = v122[0];
  v116 = v38;
  if (v122[0] >> 62)
  {
    if (v122[0] < 0)
      v46 = v122[0];
    else
      v46 = v122[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v122[0], 2);
    swift_bridgeObjectRetain(v12);
    v47 = (char *)(id)v8;
    v39 = _CocoaArrayWrapper.endIndex.getter(v46);
    if (!v39)
      goto LABEL_61;
  }
  else
  {
    v39 = *(_QWORD *)((v122[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v122[0], 2);
    swift_bridgeObjectRetain(v12);
    v40 = (char *)(id)v8;
    if (!v39)
      goto LABEL_61;
  }
  if (v39 < 1)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v41 = 0;
  v7 = 1;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v42 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v41, v3);
    else
      v42 = *(id *)(v3 + 8 * v41 + 32);
    ++v41;
    v42[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] = 1;

  }
  while (v39 != v41);
LABEL_61:
  swift_bridgeObjectRelease_n(v3, 2);
  if (v24)
    swift_bridgeObjectRelease(v122[0]);
  else
    v24 = v122[0];
  v6 = (char *)OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers;
  v3 = *(_QWORD *)(v8 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  v12 = (unint64_t)v24 >> 62;
  if (v3)
  {
    v5 = v3 & 0xFFFFFFFFFFFFFF8;
    if (!((unint64_t)v3 >> 62))
    {
      v49 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(v8
                                         + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers));
      if (v49)
      {
LABEL_67:
        if ((v3 & 0xC000000000000001) != 0)
        {
          v50 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
LABEL_70:
          v51 = v50;
          swift_bridgeObjectRelease(v3);
          v52 = (uint64_t *)&v51[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
          swift_beginAccess(&v51[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v120, 1, 0);
          v53 = *v52;
          v5 = v51;
          swift_bridgeObjectRetain(v24);
          swift_bridgeObjectRetain(v53);
          sub_10037D860((char **)v24);
          v54 = *v52;
          *v52 = v24;
          swift_bridgeObjectRelease(v54);
          v55 = *v52;
          v56 = swift_bridgeObjectRetain(*v52);
          v111 = v53;
          LOBYTE(v51) = sub_10023DA8C(v56, v53);
          swift_bridgeObjectRelease(v55);
          if ((v51 & 1) == 0)
          {
            v108 = v6;
            v109 = v12;
            v110 = (char *)v8;
            v113 = v9;
            v57 = *v52;
            v38 = (uint64_t)v52;
            if ((unint64_t)*v52 >> 62)
            {
              if (v57 < 0)
                v91 = *v52;
              else
                v91 = v57 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain_n(*v52, 2);
              v9 = _CocoaArrayWrapper.endIndex.getter(v91);
              if (v9)
              {
LABEL_73:
                v43 = 0;
                v12 = v57 & 0xC000000000000001;
                v114 = v57 + 32;
                v115 = v57;
                while (1)
                {
                  v60 = v12
                      ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v57)
                      : (char *)*(id *)(v114 + 8 * v43);
                  v59 = v60;
                  if (__OFADD__(v43++, 1))
                    break;
                  v62 = (void **)&v60[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
                  swift_beginAccess(&v60[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v119, 0, 0);
                  v63 = *v62;
                  if (v63)
                  {
                    v64 = type metadata accessor for DOCItemCollectionViewController(0);
                    v65 = swift_dynamicCastClass(v63, v64);
                    if (v65)
                    {
                      v66 = v65;
                      v67 = v24;
                      v68 = v38;
                      v69 = v5;
                      v70 = (uint64_t *)(v65 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
                      swift_beginAccess(v65 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v117, 1, 0);
                      v71 = *v70;
                      *v70 = 2;
                      if (v71 != 2)
                      {
                        v72 = *(_QWORD *)(v66 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
                        v73 = *(_QWORD *)(v72 + 16);
                        if (v73)
                        {
                          v74 = (uint64_t *)(v72 + 64);
                          do
                          {
                            v75 = *v74;
                            v74 += 5;
                            *(_BYTE *)(v75 + 24) = *(_BYTE *)(v75 + 25);
                            --v73;
                          }
                          while (v73);
                        }
                        v58 = v63;
                        sub_100026A34();

                        v59 = v58;
                      }
                      v5 = v69;
                      v38 = v68;
                      v24 = v67;
                      v57 = v115;
                    }
                  }

                  if (v43 == v9)
                    goto LABEL_115;
                }
                __break(1u);
                goto LABEL_89;
              }
            }
            else
            {
              v9 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n(*v52, 2);
              if (v9)
                goto LABEL_73;
            }
LABEL_115:
            swift_bridgeObjectRelease_n(v57, 2);
            if (objc_msgSend((id)v5, "isViewLoaded"))
            {
              v92 = *(_QWORD *)v38;
              v93 = swift_bridgeObjectRetain(*(_QWORD *)v38);
              sub_10037E0D8(v93);
              swift_bridgeObjectRelease(v111);
              v94 = v92;
              LOBYTE(v9) = v113;
              v12 = v109;
              v8 = (uint64_t)v110;
              v6 = v108;
LABEL_119:
              swift_bridgeObjectRelease(v94);
              Strong = (void *)swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider, v95);
              if (Strong)
              {
                v97 = Strong;
                objc_msgSend(Strong, "configureColumnViewController:", v5);
                swift_unknownObjectRelease(v97);
              }

              goto LABEL_122;
            }
            *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot) = 1;
            LOBYTE(v9) = v113;
            v12 = v109;
            v8 = (uint64_t)v110;
            v6 = v108;
          }
          v94 = v111;
          goto LABEL_119;
        }
        if (*(_QWORD *)(v5 + 16))
        {
          v50 = (char *)*(id *)(v3 + 32);
          goto LABEL_70;
        }
        __break(1u);
        goto LABEL_107;
      }
      goto LABEL_99;
    }
LABEL_95:
    if (v3 >= 0)
      v78 = v5;
    else
      v78 = v3;
    swift_bridgeObjectRetain(v3);
    if (_CocoaArrayWrapper.endIndex.getter(v78))
      goto LABEL_67;
LABEL_99:
    swift_bridgeObjectRelease(v3);
  }
  v79 = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider, v48);
  if (!v79)
    goto LABEL_140;
  v80 = (void *)v79;
  type metadata accessor for DOCBrowserContainerController();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = (uint64_t)objc_msgSend(v80, "provideColumnViewControllerWithContains:", isa);
  swift_unknownObjectRelease(v80);

  v83 = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver, v82);
  if (v83)
  {
    v3 = v83;
    v7 = (uint64_t)v6;
    if (!v12)
    {
      swift_bridgeObjectRetain(v24);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter((id)v5);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v84 = v24;
LABEL_104:
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v85 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend((id)v3, "dataSource:willSet:on:animated:", v8, v85, v5, v9 & 1, swift_bridgeObjectRelease(v84).n128_f64[0]);

      swift_unknownObjectRelease(v3);
      v6 = (char *)v7;
      goto LABEL_122;
    }
LABEL_107:
    v86 = (void *)v5;
    if (v24 < 0)
      v87 = v24;
    else
      v87 = v24 & 0xFFFFFFFFFFFFFF8;
    v88 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRetain(v24);
    v89 = v86;
    v90 = v87;
    v5 = (uint64_t)v86;
    v84 = _bridgeCocoaArray<A>(_:)(v90, v88);
    swift_bridgeObjectRelease(v24);
    goto LABEL_104;
  }
LABEL_122:
  v98 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v99 = swift_allocObject(v98, 40, 7);
  *(_OWORD *)(v99 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v99 + 32) = v5;
  v118 = v99;
  specialized Array._endMutation()(v99);
  v100 = *(_QWORD *)&v6[v8];
  *(_QWORD *)&v6[v8] = v118;
  v101 = (id)v5;
  swift_bridgeObjectRelease(v100);
  if (v12)
  {
    if (v24 < 0)
      v107 = v24;
    else
      v107 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v102 = (char *)_CocoaArrayWrapper.endIndex.getter(v107);
    swift_bridgeObjectRelease(v24);
    v103 = v116;
    if (!v102)
      goto LABEL_130;
  }
  else
  {
    v102 = *(char **)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    v103 = v116;
    if (!v102)
    {
LABEL_130:
      swift_bridgeObjectRelease(v24);
      v106 = swift_allocObject(&unk_1005E60A8, 32, 7);
      *(_QWORD *)(v106 + 16) = sub_1003C3DA8;
      *(_QWORD *)(v106 + 24) = v103;
      swift_retain();
      sub_10037CBF8(v102, v9 & 1, (void (*)(_QWORD))sub_100066584, v106);

      swift_release(v106);
      swift_release(v103);

      return;
    }
  }
  v104 = v102 - 1;
  if (__OFSUB__(v102, 1))
  {
    __break(1u);
    goto LABEL_137;
  }
  if ((v24 & 0xC000000000000001) != 0)
  {
LABEL_137:
    v105 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v104, v24);
    goto LABEL_129;
  }
  if (((unint64_t)v104 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v104 < *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v105 = (char *)*(id *)(v24 + 8 * (_QWORD)v104 + 32);
LABEL_129:
    v102 = v105;
    goto LABEL_130;
  }
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x800000010052EF10, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 615, 0);
  __break(1u);
}

void sub_10003731C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1F8))();
  if (!v3)
    goto LABEL_9;
  v4 = (_BYTE *)v3;
  sub_1000787B4(0);
  v5 = &v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
  v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor + 8];
  v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor + 16];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  v5[24] = 0;
  sub_100144F34(v6, v7, v8);
  v9 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
  if ((v10 & 0x200) == 0)
  {
    v10 |= 0x200uLL;
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v10;
  }
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount] || sub_10007BAFC())
  {
LABEL_8:
    v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isParentItemShared] = 0;
    v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance] = 10;
    v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView] = 2;
    v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView] = 2;

LABEL_9:
    (*(void (**)(_QWORD))((swift_isaMask & *a1) + 0x200))(0);
    return;
  }
  *(_QWORD *)&v4[v9] = 0;
  v11 = objc_autoreleasePoolPush();
  sub_10006D2D4(v10, (uint64_t)v4);
  if (!v1)
  {
    objc_autoreleasePoolPop(v11);
    goto LABEL_8;
  }
  objc_autoreleasePoolPop(v11);
  __break(1u);
}

uint64_t *sub_1000375A8(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD v36[5];

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v8 = a4;
    else
      v8 = a4 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v11 = sub_1002921AC();
    result = Set.Iterator.init(_cocoa:)(v36, v9, v10, v11);
    v4 = v36[0];
    v12 = v36[1];
    v13 = v36[2];
    v14 = v36[3];
    v15 = v36[4];
    v32 = v7;
    if (v6)
      goto LABEL_6;
LABEL_39:
    v16 = 0;
LABEL_49:
    *v32 = v4;
    v32[1] = v12;
    v32[2] = v13;
    v32[3] = v14;
    v32[4] = v15;
    return (uint64_t *)v16;
  }
  v14 = 0;
  v28 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v28;
  v29 = -v28;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  else
    v30 = -1;
  v15 = v30 & *(_QWORD *)(a4 + 56);
  v32 = result;
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v16 = 0;
    goto LABEL_49;
  }
  if (a3 < 0)
    goto LABEL_51;
  v16 = 0;
  v33 = (unint64_t)(v13 + 64) >> 6;
  v31 = v13;
  while (1)
  {
    if (v4 < 0)
    {
      v23 = v12;
      v24 = __CocoaSet.Iterator.next()(result);
      if (!v24)
        goto LABEL_48;
      v25 = v24;
      v34 = v24;
      v26 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      swift_unknownObjectRetain(v25);
      swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
      v19 = v35;
      result = (uint64_t *)swift_unknownObjectRelease(v25);
      v12 = v23;
      if (!v19)
        goto LABEL_48;
      goto LABEL_11;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_10;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v33)
    {
      v15 = 0;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_26;
    v22 = v14 + 2;
    if (v14 + 2 >= v33)
    {
      v15 = 0;
      ++v14;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v33)
        goto LABEL_45;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_26;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v33)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_48;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v33)
        {
LABEL_45:
          v15 = 0;
          v14 = v22;
          goto LABEL_48;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v27 = v14 + 6;
          while (v33 != v27)
          {
            v21 = *(_QWORD *)(v12 + 8 * v27++);
            if (v21)
            {
              v20 = v27 - 1;
              goto LABEL_26;
            }
          }
          v15 = 0;
          v14 = v33 - 1;
          goto LABEL_48;
        }
        goto LABEL_26;
      }
    }
    v20 = v22;
LABEL_26:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_48;
LABEL_11:
    ++v16;
    *v6++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_48:
      v13 = v31;
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void sub_1000378B0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id WeakRetained;
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  v7 = a3;
  v8 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sourcesSubscribers"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier"));
    objc_msgSend(v10, "removeObjectForKey:", v11);

  }
}

id sub_10003796C(void *a1)
{
  id v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v2 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  if (objc_msgSend(v2, "isNetworkDriveAllowed")
    && objc_msgSend(a1, "supportsRemovableFileProviders")
    && (objc_msgSend(a1, "isPickerUI") & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSMBFileProvider);
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v3 = objc_msgSend(v2, "canHostAppPerformAction:bundleIdentifier:", 0, v7);

  }
  else
  {
    v3 = 0;
  }

  return v3;
}

uint64_t sub_100037A40(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  NSObject *v24;
  NSObject **v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  NSObject **v58;
  uint8_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void **aBlock;
  _QWORD v73[4];
  uint64_t v74;

  v66 = type metadata accessor for DispatchWorkItemFlags(0);
  v68 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v71 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  __chkstk_darwin(v6);
  v67 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v65 - 8);
  v9 = __chkstk_darwin(v65);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v64 = (char *)&v57 - v12;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = Logger.UI.unsafeMutableAddressor(v15);
  v63 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v18, v13);
  v19 = v2;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v60 = v13;
    v22 = swift_slowAlloc(12, -1);
    v62 = v8;
    v23 = (uint8_t *)v22;
    v58 = (NSObject **)swift_slowAlloc(8, -1);
    v59 = v23;
    *(_DWORD *)v23 = 138412290;
    v61 = v11;
    aBlock = (void **)&v19->isa;
    v24 = v19;
    v11 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v73);
    v25 = v58;
    *v58 = v19;

    v26 = v21;
    v27 = v59;
    v13 = v60;
    _os_log_impl((void *)&_mh_execute_header, v20, v26, "Suspending work (locationChangePreparationQueue) in hierarchy controller %@", v59, 0xCu);
    v28 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v25, 1, v28);
    swift_slowDealloc(v25, -1, -1);
    v8 = v62;
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {

    v20 = v19;
  }

  (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v13);
  v29 = type metadata accessor for DOCHierarchyController.PreventChangeAssertion(0);
  v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v31 = swift_bridgeObjectRetain(a2);
  UUID.init()(v31);
  *(_BYTE *)(v30
           + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_wasTimeoutAutoDeactivated) = 0;
  v32 = OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active;
  v33 = (_QWORD *)(v30
                 + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason);
  *v33 = a1;
  v33[1] = a2;
  *(_BYTE *)(v30 + v32) = 1;
  v34 = (Class *)((char *)&v19->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions);
  swift_beginAccess((char *)v19 + OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions, &aBlock, 33, 0);
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
  v37 = *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v36 = *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v37 >= v36 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
  v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v30);
  specialized Array._endMutation()(v38);
  swift_endAccess(&aBlock);
  dispatch_suspend(*(dispatch_object_t *)((char *)&v19->isa
                                        + OBJC_IVAR____TtC5Files22DOCHierarchyController_locationChangePreparationQueue));
  v39 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v40 = (void *)static OS_dispatch_queue.main.getter(v39);
  static DispatchTime.now()(v40);
  v41 = v64;
  + infix(_:_:)(v11, 10.0);
  v63 = *(_QWORD *)(v8 + 8);
  v42 = v11;
  v43 = v65;
  ((void (*)(char *, uint64_t))v63)(v42, v65);
  v44 = swift_allocObject(&unk_1005CEFC0, 24, 7);
  swift_unknownObjectWeakInit(v44 + 16);
  v45 = swift_allocObject(&unk_1005D0400, 32, 7);
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v30;
  v73[3] = sub_1001F56E8;
  v74 = v45;
  aBlock = _NSConcreteStackBlock;
  v73[0] = 1107296256;
  v73[1] = sub_10004A82C;
  v73[2] = &unk_1005D0418;
  v46 = _Block_copy(&aBlock);
  v47 = v74;
  swift_retain();
  v48 = swift_release(v47);
  v49 = v67;
  static DispatchQoS.unspecified.getter(v48);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v50 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v51 = sub_10006922C((uint64_t *)&unk_100647540);
  v52 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v53 = v71;
  v54 = v51;
  v55 = v66;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v54, v52, v66, v50);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v41, v49, v53, v46);
  _Block_release(v46);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v55);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v70);
  ((void (*)(char *, uint64_t))v63)(v41, v43);
  return v30;
}

id DOCFullDocumentManagerViewController.sidebarViewController.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v1 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v2 = objc_msgSend(v0, "configuration");
  v3 = objc_msgSend(v2, "sceneIdentifier");

  v4 = objc_msgSend(v1, "globalTabbedBrowserControllerForIdentifier:", v3);
  if (!v4
    || (v5 = objc_msgSend(v4, "splitBrowserViewController"),
        v4,
        v6 = objc_msgSend(v5, "sidebarViewController"),
        v5,
        !v6))
  {
    v7 = objc_msgSend(v0, "splitViewController");
    if (v7)
    {
      v8 = v7;
      v9 = objc_opt_self(DOCSplitBrowserViewController);
      v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
      if (v10)
      {
        v6 = objc_msgSend(v10, "sidebarViewController");

        return v6;
      }

    }
    return 0;
  }
  return v6;
}

void sub_1000380F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  BOOL v7;
  void *v8;
  id v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE v15[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    sub_10006DD34();
    v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    if (v6)
      v7 = v6 == a2;
    else
      v7 = 0;
    if (v7)
    {
      v8 = *(void **)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
      if (v8)
      {
        v9 = objc_msgSend(v8, "preferredContentSizeCategory");
        v10 = UIContentSizeCategory.isAccessibilityCategory.getter(v9);

        if ((v10 & 1) != 0)
        {
          v11 = *(void **)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
          *(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

        }
      }
      v12 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
      if ((v13 & 0x100) == 0)
      {
        v13 |= 0x100uLL;
        *(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v13;
      }
      if (!*(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
        && !sub_10007BAFC())
      {
        *(_QWORD *)&v5[v12] = 0;
        v14 = objc_autoreleasePoolPush();
        sub_10006D2D4(v13, (uint64_t)v5);
        objc_autoreleasePoolPop(v14);
      }
    }

  }
}

id sub_100038208()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  unsigned int v6;
  id v7;
  uint64_t v9;
  __n128 v10;

  v1 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  v3 = objc_msgSend(v2, "sceneIdentifier");
  v4 = objc_msgSend(v1, "globalTabbedBrowserControllerForIdentifier:", v3);

  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "effectiveFullBrowser");

  v6 = objc_msgSend(v5, "allowsPickingMultipleItems");
  if (!v6
    || (objc_msgSend(v2, "forPickingFoldersOnly") & 1) != 0
    || (objc_msgSend(v2, "forSavingDocuments") & 1) != 0)
  {
    return 0;
  }
  v9 = swift_allocObject(&unk_1005DA8E8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v0);
  swift_retain(v9);
  v7 = sub_100121EC8((uint64_t)sub_1002D5498, v9);
  swift_release_n(v9, 2, v10);
  return v7;
}

uint64_t destroy for DOCCollectionSection(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_release(a1[4]);
}

uint64_t sub_100038378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v1 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation, v24, 0, 0);
  updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48))(v1, 1, updated))
  {
    v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, &v23, 0, 0);
  }
  else
  {
    v3 = (uint64_t *)(v1 + *(int *)(updated + 20));
  }
  v4 = *v3;
  swift_bridgeObjectRetain(v4);
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_6;
LABEL_26:
    swift_bridgeObjectRelease_n(v4, 2);
    return 0;
  }
  if (v4 < 0)
    v22 = v4;
  else
    v22 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  result = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!result)
    goto LABEL_26;
LABEL_6:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
LABEL_9:
    v8 = v7;
    swift_bridgeObjectRelease(v4);
    if ((objc_msgSend(v8, "isRoot") & 1) != 0)
    {

    }
    else
    {
      v9 = objc_msgSend(v8, "sourceIdentifier");
      v10 = DOCDocumentSourceIdentifierTrashedItems;
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      if (v11 == v14 && v13 == v15)
      {

        swift_bridgeObjectRelease_n(v13, 2);
      }
      else
      {
        v17 = v15;
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);

        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v17);
        if ((v18 & 1) == 0)
        {
          swift_bridgeObjectRelease(v4);
          return 0;
        }
      }
    }
    v19 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate);
    if (v19)
    {
      v20 = v19;
      v21 = sub_10008979C((uint64_t)v20, v4);
      swift_bridgeObjectRelease(v4);
      if ((v21 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v4);
    }
    return (uint64_t)v19;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v4 + 32);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_1000385C4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  UIMenuElementSize v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  Swift::String v9;
  Class isa;
  Swift::OpaquePointer v11;
  UIMenuElementSize aBlock[5];
  uint64_t v13;
  UIImage_optional v14;

  v1 = v0;
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v2 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004D9B40;
  v4 = (void *)objc_opt_self(UIDeferredMenuElement);
  v5 = swift_allocObject(&unk_1005DA960, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  aBlock[4] = (UIMenuElementSize)sub_1002D5064;
  v13 = v5;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_100458078;
  aBlock[3] = (UIMenuElementSize)&unk_1005DA978;
  v6 = _Block_copy(aBlock);
  swift_release(v13);
  v7 = objc_msgSend(v4, "elementWithUncachedProvider:", v6);
  _Block_release(v6);
  *(_QWORD *)(v3 + 32) = v7;
  aBlock[0] = v3;
  specialized Array._endMutation()(v8);
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v14, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v11).super.super.isa;
  objc_msgSend(v1, "setMenuRepresentation:", isa);

}

id _sSo13FPItemManagerC5FilesE15queryCollection13forIdentifier10properties29supportRemovableFileProvidersSo07FPQueryE0CSo026DOCSpotlightEnumeratedItemG0a_So24DOCEnumerationPropertiesCSbtF_0(void *a1, void *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  Class isa;
  id v43;
  char *v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  Class v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Class v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Class v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  double v80;
  id v81;
  void *v82;
  id v83;
  unsigned int v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  NSString v88;
  char **v89;
  char v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  id v125;
  double v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  NSString v130;
  double v131;
  id v132;
  unint64_t v133;
  unint64_t v134;
  Swift::String v135;
  uint64_t v136;
  Swift::String v137;
  uint64_t v138;
  void *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  char *v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;

  v143 = a3;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v144 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UTType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v138 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v138 - v16;
  v18 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v145 = a2;
  v146 = v18;
  v19 = objc_msgSend(a2, "allowedContentTypes");
  v141 = v5;
  v142 = v6;
  if (v19)
  {
    v20 = v19;
    v21 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v8);

  }
  else
  {
    v21 = _swiftEmptyArrayStorage;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierRecentDocuments);
  v24 = v23;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v22 == v25 && v24 == v26)
  {
    swift_bridgeObjectRelease_n(v24, 2);
    goto LABEL_13;
  }
  v28 = v26;
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 0);
  swift_bridgeObjectRelease(v24);
  *(_QWORD *)&v30 = swift_bridgeObjectRelease(v28).n128_u64[0];
  if ((v29 & 1) != 0)
  {
LABEL_13:
    v37 = objc_msgSend(v146, "newRecentsCollection", v30);
LABEL_14:
    v38 = v37;
LABEL_15:
    v39 = v145;
    goto LABEL_16;
  }
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierSharedItems);
  v33 = v32;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v36 = v34;
  if (v31 == v35 && v33 == v34)
  {
    swift_bridgeObjectRelease_n(v33, 2);
LABEL_47:
    v38 = objc_msgSend(v146, "newSharedItemsCollection");
    static UTType.folder.getter(v38);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = (_QWORD *)sub_100153308(0, v21[2] + 1, 1, (unint64_t)v21);
    v39 = v145;
    v93 = v21[2];
    v92 = v21[3];
    if (v93 >= v92 >> 1)
      v21 = (_QWORD *)sub_100153308(v92 > 1, v93 + 1, 1, (unint64_t)v21);
    v21[2] = v93 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v93, v17, v8);
    goto LABEL_16;
  }
  v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v36);
  if ((v91 & 1) != 0)
    goto LABEL_47;
  v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierFavoriteFolders);
  v96 = v95;
  v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v99 = v97;
  if (v94 == v98 && v96 == v97)
  {
    swift_bridgeObjectRelease_n(v96, 2);
LABEL_56:
    v37 = objc_msgSend(v146, "newFavoritesCollection", v100);
    goto LABEL_14;
  }
  v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v96, v98, v97, 0);
  swift_bridgeObjectRelease(v96);
  *(_QWORD *)&v100 = swift_bridgeObjectRelease(v99).n128_u64[0];
  if ((v101 & 1) != 0)
    goto LABEL_56;
  v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierTrashedItems);
  v104 = v103;
  v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v107 = v105;
  if (v102 == v106 && v104 == v105)
  {
    swift_bridgeObjectRelease_n(v104, 2);
    goto LABEL_84;
  }
  v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v104, v106, v105, 0);
  swift_bridgeObjectRelease(v104);
  swift_bridgeObjectRelease(v107);
  if ((v108 & 1) != 0)
  {
LABEL_84:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100538BC0, "Files/FPItemManager+DOCExtensions.swift", 39, 2, 1000, 0);
    goto LABEL_85;
  }
  v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierSearch);
  v111 = v110;
  v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v114 = v112;
  if (v109 != v113 || v111 != v112)
  {
    v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v109, v111, v113, v112, 0);
    swift_bridgeObjectRelease(v111);
    swift_bridgeObjectRelease(v114);
    if ((v115 & 1) != 0)
      goto LABEL_64;
    v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierTaggedItems);
    v120 = v119;
    v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v123 = v121;
    if (v118 == v122 && v120 == v121)
    {
      swift_bridgeObjectRelease_n(v120, 2);
    }
    else
    {
      v124 = _stringCompareWithSmolCheck(_:_:expecting:)(v118, v120, v122, v121, 0);
      swift_bridgeObjectRelease(v120);
      swift_bridgeObjectRelease(v123);
      if ((v124 & 1) == 0)
      {
        while (1)
        {
          v148 = 0;
          v149 = 0xE000000000000000;
          _StringGuts.grow(_:)(49);
          v135._object = (void *)0x8000000100538B40;
          v135._countAndFlagsBits = 0xD00000000000002ELL;
          String.append(_:)(v135);
          v147 = (uint64_t)a1;
          type metadata accessor for DOCSpotlightEnumeratedItemIdentifier(0);
          _print_unlocked<A, B>(_:_:)(&v147, &v148, v136, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v137._countAndFlagsBits = 39;
          v137._object = (void *)0xE100000000000000;
          String.append(_:)(v137);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v148, v149, "Files/FPItemManager+DOCExtensions.swift", 39, 2, 1014, 0);
LABEL_85:
          __break(1u);
        }
      }
    }
    v125 = objc_msgSend(v145, "tagIdentifiers");
    if (v125)
    {
      v127 = v125;
      v128 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v125, &type metadata for String);

      if (*(_QWORD *)(v128 + 16) == 1)
      {
        v129 = *(_QWORD *)(v128 + 40);
        swift_bridgeObjectRetain(v129);
        swift_bridgeObjectRelease(v128);
        v130 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v131 = swift_bridgeObjectRelease(v129).n128_u64[0];
        v38 = objc_msgSend(v146, "newCollectionForTag:", v130, v131);

LABEL_78:
        static UTType.folder.getter(v132);
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
          v21 = (_QWORD *)sub_100153308(0, v21[2] + 1, 1, (unint64_t)v21);
        v134 = v21[2];
        v133 = v21[3];
        if (v134 >= v133 >> 1)
          v21 = (_QWORD *)sub_100153308(v133 > 1, v134 + 1, 1, (unint64_t)v21);
        v21[2] = v134 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v134, v12, v8);
        goto LABEL_15;
      }
      *(_QWORD *)&v126 = swift_bridgeObjectRelease(v128).n128_u64[0];
    }
    v132 = objc_msgSend(v146, "newTagCollection", v126);
    v38 = v132;
    goto LABEL_78;
  }
  swift_bridgeObjectRelease_n(v111, 2);
LABEL_64:
  v38 = objc_msgSend(v146, "newSearchCollection");
  static UTType.folder.getter(v38);
  if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
    v21 = (_QWORD *)sub_100153308(0, v21[2] + 1, 1, (unint64_t)v21);
  v39 = v145;
  v117 = v21[2];
  v116 = v21[3];
  if (v117 >= v116 >> 1)
    v21 = (_QWORD *)sub_100153308(v116 > 1, v117 + 1, 1, (unint64_t)v21);
  v21[2] = v117 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v117, v15, v8);
LABEL_16:
  v40 = swift_bridgeObjectRetain(v21);
  v41 = static UTType.doc_identifiers(forContentTypes:)(v40);
  swift_bridgeObjectRelease(v21);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "setAllowedFileTypes:", isa, swift_bridgeObjectRelease(v41).n128_f64[0]);

  v43 = objc_msgSend(v39, "excludedContentTypes");
  v44 = v144;
  if (v43)
  {
    v45 = v43;
    v46 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v8);

  }
  else
  {
    v46 = _swiftEmptyArrayStorage;
  }
  v47 = static UTType.doc_identifiers(forContentTypes:)(v46);
  swift_bridgeObjectRelease(v46);
  v48 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "setExcludedFileTypes:", v48, swift_bridgeObjectRelease(v47).n128_f64[0]);

  v49 = objc_msgSend(v39, "hostIdentifier");
  if (v49)
  {
    v50 = v49;
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

  }
  else
  {
    v51 = 0;
    v53 = 0;
  }
  v54 = sub_100484CA4(v51, v53);
  swift_bridgeObjectRelease(v53);
  if (v54)
  {
    v55 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v38, "setAllowedProviderIdentifiers:", v55, swift_bridgeObjectRelease(v54).n128_f64[0]);

  }
  if (objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
  {
    v56 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
    v57 = v38;
    v58 = sub_100486038((uint64_t)v57);

    if (v58)
    {
      v140 = v21;
      v60 = Logger.UI.unsafeMutableAddressor(v59);
      v61 = v141;
      (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v44, v60, v141);
      v62 = swift_bridgeObjectRetain_n(v58, 2);
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.error.getter(v63);
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc(22, -1);
        v138 = swift_slowAlloc(64, -1);
        v148 = v138;
        *(_DWORD *)v65 = 136315394;
        v147 = sub_1000544FC(0xD000000000000048, 0x8000000100538B70, &v148);
        v139 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, &v148);
        *(_WORD *)(v65 + 12) = 2080;
        v66 = swift_bridgeObjectRetain(v58);
        v67 = Array.description.getter(v66, &type metadata for String);
        v69 = v68;
        swift_bridgeObjectRelease(v58);
        v147 = sub_1000544FC(v67, v69, &v148);
        a1 = v139;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, &v148);
        swift_bridgeObjectRelease_n(v58, 2);
        swift_bridgeObjectRelease(v140);
        swift_bridgeObjectRelease(v69);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "%s [PROTECTED APPS] setting excluded parent OIDs to %s", (uint8_t *)v65, 0x16u);
        v70 = v138;
        swift_arrayDestroy(v138, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v70, -1, -1);
        v71 = v65;
        v39 = v145;
        swift_slowDealloc(v71, -1, -1);

        (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v141);
      }
      else
      {
        swift_bridgeObjectRelease_n(v58, 2);

        (*(void (**)(char *, uint64_t))(v142 + 8))(v44, v61);
        swift_bridgeObjectRelease(v140);
      }
      v72 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v57, "setExcludedParentOIDs:", v72, swift_bridgeObjectRelease(v58).n128_f64[0]);

    }
    else
    {
      swift_bridgeObjectRelease(v21);
    }
    sub_10048295C();
  }
  else
  {
    swift_bridgeObjectRelease(v21);
  }
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierTaggedItems);
  v75 = v74;
  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v78 = v76;
  if (v73 == v77 && v75 == v76)
  {
    swift_bridgeObjectRelease_n(v75, 2);
  }
  else
  {
    v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v75, v77, v76, 0);
    swift_bridgeObjectRelease(v75);
    *(_QWORD *)&v80 = swift_bridgeObjectRelease(v78).n128_u64[0];
    if ((v79 & 1) == 0)
    {
      v81 = objc_msgSend(v39, "maximumNumberOfItems", v80);
      objc_msgSend(v38, "setDesiredNumberOfItems:", v81);

    }
  }
  if ((v143 & 1) == 0)
    goto LABEL_42;
  v82 = (void *)objc_opt_self(DOCManagedPermission);
  v83 = objc_msgSend(v82, "defaultPermission");
  v84 = objc_msgSend(v83, "isUSBAccessAllowed");

  if (!v84)
    goto LABEL_42;
  v85 = objc_msgSend(v82, "defaultPermission");
  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierExternalDeviceFileProvider);
  v87 = v86;
  v88 = String._bridgeToObjectiveC()();
  LOBYTE(v87) = objc_msgSend(v85, "canHostAppPerformAction:bundleIdentifier:", 2, v88, swift_bridgeObjectRelease(v87).n128_f64[0]);

  if ((v87 & 1) != 0)
    v89 = &selRef_enableMountPointQueries;
  else
LABEL_42:
    v89 = &selRef_disableMountPointQueries;
  objc_msgSend((id)objc_opt_self(FPQueryCollection), *v89);
  if (qword_1006411B0 != -1)
    swift_once(&qword_1006411B0, sub_10008EE5C);
  sub_10008EE98((uint64_t)v38, a1);

  return v38;
}

uint64_t sub_100039498(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

void DOCNodeCollection.data(forCollectionShouldBeReloaded:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  char **v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  char **v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.Enumeration.unsafeMutableAddressor(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
  v9 = v1;
  v10 = a1;
  v11 = (char *)v9;
  v12 = v10;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    v37 = v14;
    v38 = v4;
    v40 = v3;
    v15 = swift_slowAlloc(42, -1);
    v16 = (char **)swift_slowAlloc(8, -1);
    v39 = swift_slowAlloc(64, -1);
    v42 = v39;
    *(_DWORD *)v15 = 136446978;
    v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v17)
    {

      __break(1u);
      return;
    }
    v18 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v41 = sub_1000544FC(v18, v17, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    swift_bridgeObjectRelease(v17);
    *(_WORD *)(v15 + 12) = 2082;
    v41 = sub_1000544FC(0xD000000000000024, 0x8000000100512550, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    *(_WORD *)(v15 + 22) = 2112;
    v41 = (uint64_t)v11;
    v19 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    v36 = v16;
    *v16 = v11;

    *(_WORD *)(v15 + 32) = 2048;
    v20 = objc_msgSend(v12, "items");
    v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v34 = v22;
      else
        v34 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v23 = _CocoaArrayWrapper.endIndex.getter(v34);

      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);

    }
    swift_bridgeObjectRelease(v22);
    v41 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);

    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v37, "%{public}s %{public}s DOCNodeCollection (%@) reload with nodes: %ld", (uint8_t *)v15, 0x2Au);
    v24 = sub_10006922C(&qword_100643AB0);
    v25 = v36;
    swift_arrayDestroy(v36, 1, v24);
    swift_slowDealloc(v25, -1, -1);
    v26 = v39;
    swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v40);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  v28 = &v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate], v27);
  if (Strong)
  {
    v31 = Strong;
    v32 = *((_QWORD *)v28 + 1);
    ObjectType = swift_getObjectType(Strong, v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 8))(v11, ObjectType, v32);
    swift_unknownObjectRelease(v31);
  }
}

id sub_1000398F0(double *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;
  void *v18;
  void *v19;
  double v20;

  v4 = a1[20];
  v3 = a1[21];
  v5 = a1[22];
  v6 = a1[23];
  v7 = a1[24];
  v8 = a1[25];
  v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView);
  objc_msgSend(v9, "spacing");
  if (v10 != v4)
    objc_msgSend(v9, "setSpacing:", v4);
  objc_msgSend(v9, "setCustomSpacing:afterView:", *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailContainerView), v3);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewLeadingConstraint), "setConstant:", v6);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTrailingConstraint), "setConstant:", -v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTopConstraint), "setConstant:", v5);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewBottomConstraint), "setConstant:", -v7);
  v11 = a1[30];
  v12 = a1[31];
  v13 = a1[32];
  v14 = a1[33];
  v15 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress);
  v16 = objc_msgSend(v15, "isHidden");
  v17 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_titleStackView);
  v18 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel);
  if ((v16 & 1) != 0)
  {
    v19 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_titleStackView);
    v20 = v12;
  }
  else
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_titleStackView), "setCustomSpacing:afterView:", v18, v11);
    v19 = v17;
    v20 = v13;
    v18 = v15;
  }
  objc_msgSend(v19, "setCustomSpacing:afterView:", v18, v20);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailCellHeightConstraint), "setConstant:", v14 * -2.0);
}

id sub_100039A84(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView] = 0;
  v4[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode] = 0;
  v16.receiver = v4;
  v16.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  v11 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v12 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v12 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v13 = v10;
  v14 = UIView.registerForTraitChanges<A>(_:handler:)(v12, sub_100271BC8, 0, ObjectType);
  swift_unknownObjectRelease(v14);

  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_100039B88(void *a1, char a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  _BYTE v29[12];
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  v7 = v6;
  v31 = a6;
  v32 = a5;
  v30 = a4;
  v33 = a3;
  v10 = (int *)type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v11 = *((_QWORD *)v10 - 1);
  __chkstk_darwin(v10);
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v14);
  v16 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = swift_allocBox(v10);
  v19 = v18;
  v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v21 + 32) = a1;
  v34 = v21;
  specialized Array._endMutation()(v21);
  v22 = v34;
  v23 = a1;
  UUID.init()(v23);
  *(_BYTE *)(v19 + v10[5]) = 0;
  *(_BYTE *)(v19 + v10[6]) = 1;
  *(_QWORD *)(v19 + v10[7]) = v22;
  sub_10007C6DC(v19, (uint64_t)v16, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v16, 0, 1, v10);
  sub_1001D6804((uint64_t)v16, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  if ((v30 & 1) != 0)
  {
    sub_10007C6DC(v19, (uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    sub_1001DD884((uint64_t)v13, v23, a2 & 1);
    sub_10007C720((uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  }
  v24 = swift_allocObject(&unk_1005D1120, 50, 7);
  *(_QWORD *)(v24 + 16) = v7;
  *(_QWORD *)(v24 + 24) = v17;
  v25 = v31;
  *(_QWORD *)(v24 + 32) = v32;
  *(_QWORD *)(v24 + 40) = v25;
  *(_BYTE *)(v24 + 48) = a2 & 1;
  *(_BYTE *)(v24 + 49) = v33 & 1;
  swift_retain();
  v26 = v7;
  swift_retain();
  swift_retain();
  sub_10003E148(v23, 1, v26, sub_1001F6560, v24);
  swift_release(v17);
  return swift_release_n(v24, 2, v27);
}

id sub_100039DC8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  uint64_t ObjectType;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  objc_super v20;

  ObjectType = swift_getObjectType(v6, a6);
  v6[OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled] = 0;
  v6[OBJC_IVAR____TtC5Files9DOCButton__userInteractionStateDeterminesLayerHitTestState_override] = 2;
  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for DOCButton();
  v12 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v13 = qword_100641208;
  v14 = v12;
  if (v13 != -1)
    swift_once(&qword_100641208, sub_10009EFFC);
  if ((byte_100658218 & 1) == 0)
  {
    v15 = sub_10006922C((uint64_t *)&unk_1006444C0);
    v16 = swift_allocObject(v15, 48, 7);
    *(_OWORD *)(v16 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v16 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v16 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v17 = v14;
    v18 = UIView.registerForTraitChanges<A>(_:handler:)(v16, sub_10041421C, 0, ObjectType);
    swift_unknownObjectRelease(v18);
    swift_bridgeObjectRelease(v16);

  }
  return v14;
}

uint64_t sub_100039F10(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int v18;
  char v19;
  uint64_t v20;
  int shouldAllow;
  int v22;
  unsigned __int8 *v23;
  int v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, char **);
  char **v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  void (*v41)(char *, char **);
  uint64_t v42;
  uint64_t v43;
  void *v44;
  unsigned int v45;
  double v46;
  void *v47;
  char *v48;
  int v49;
  unsigned int v50;
  unint64_t v51;
  void *v52;
  unsigned int v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  NSObject *v58;
  char **v59;
  os_log_type_t v60;
  _BOOL4 v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  _BOOL4 v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::OpaquePointer v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  char *v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  Swift::Int i;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  char v101;
  _QWORD *v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t All;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  Swift::OpaquePointer v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char *v121;
  char *v122;
  NSObject *v123;
  uint64_t v124;
  double v125;
  _BOOL4 v126;
  NSObject *v127;
  os_log_type_t v128;
  void (*v129)(uint64_t, uint64_t, char **);
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int v136;
  id v137;
  uint64_t v138;
  char **v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  os_log_t v144;
  uint64_t v145;
  char *v146;
  int v147;
  __int128 v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, char **);
  int v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  _BYTE v156[24];
  uint64_t v157;
  uint64_t v158;
  char **v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  _BYTE v166[104];
  uint64_t v167;
  uint64_t v168;
  _BYTE v169[112];
  uint64_t v170[16];

  v3 = v2;
  v147 = a2;
  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(char **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v154 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v154 - 8);
  v10 = __chkstk_darwin(v154);
  v11 = __chkstk_darwin(v10);
  result = __chkstk_darwin(v11);
  v16 = (char *)&v132 - v15;
  v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource];
  if (v17)
  {
    v152 = v13;
    v153 = v14;
    v145 = a1;
    v18 = objc_msgSend(v3, "doc_hasAppearedOrIsAppearing", swift_retain().n128_f64[0]);
    v19 = v18;
    if (!v18
      || (v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot,
          (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot] & 1) != 0))
    {
      result = swift_release(v17);
      v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] & 1 | ((v19 & 1) == 0);
      return result;
    }
    v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = 0;
    v3[v20] = 1;
    shouldAllow = UIViewController.doc_shouldAllowAnimations.getter();
    v151 = v147;
    v22 = shouldAllow & v147 & (v147 != 2);
    v165 = shouldAllow & v147 & (v147 != 2);
    v23 = *(unsigned __int8 **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
    LODWORD(v155) = v22;
    if (v23)
    {
      v23 = (unsigned __int8 *)objc_msgSend(v23, "activeDocumentCreationSession");
      if (v23)
      {
        v24 = v23[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates];

        if (v24 == 1)
        {
          LODWORD(v155) = 0;
          v165 = 0;
        }
      }
    }
    v138 = v20;
    v140 = v17;
    v25 = Logger.UI.unsafeMutableAddressor(v23);
    v26 = *(void (**)(uint64_t, uint64_t, char **))(v9 + 16);
    v149 = v25;
    v150 = v26;
    v27 = (char **)v154;
    v28 = ((uint64_t (*)(char *))v26)(v16);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    v31 = v30;
    v32 = os_log_type_enabled(v29, v30);
    v142 = v3;
    if (v32)
    {
      v33 = swift_slowAlloc(28, -1);
      LODWORD(v146) = v31;
      v34 = v33;
      *(_QWORD *)&v148 = swift_slowAlloc(64, -1);
      v170[0] = v148;
      *(_DWORD *)v34 = 136315650;
      v168 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100516E50, v170);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169);
      *(_WORD *)(v34 + 12) = 2080;
      v144 = v29;
      v35 = sub_100099600(v147);
      v37 = v36;
      v168 = sub_1000544FC(v35, v36, v170);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169);
      v38 = v37;
      v3 = v142;
      swift_bridgeObjectRelease(v38);
      *(_WORD *)(v34 + 22) = 1024;
      LODWORD(v168) = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, (char *)&v168 + 4);
      v39 = v144;
      _os_log_impl((void *)&_mh_execute_header, v144, (os_log_type_t)v146, "%s reloadType: %s actually animate: %{BOOL}d", (uint8_t *)v34, 0x1Cu);
      v40 = v148;
      swift_arrayDestroy(v148, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      v27 = (char **)v154;
    }
    else
    {

    }
    v41 = *(void (**)(char *, char **))(v9 + 8);
    v41(v16, v27);
    v42 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    *v8 = static OS_dispatch_queue.main.getter(v42);
    (*((void (**)(_QWORD *, _QWORD, uint64_t))v6 + 13))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
    v43 = _dispatchPreconditionTest(_:)(v8);
    (*((void (**)(_QWORD *, uint64_t))v6 + 1))(v8, v5);
    if ((v43 & 1) == 0)
    {
LABEL_135:
      __break(1u);
LABEL_136:
      swift_once(&qword_100640E10, sub_100086B40);
LABEL_121:
      objc_msgSend((id)v43, "postNotificationName:object:", qword_100672718, v6);
      swift_release(v155);

      objc_msgSend(v137, v27[194], v136);
      result = swift_release(v9);
      v6[v5] = 0;
      return result;
    }
    v44 = (void *)objc_opt_self(UIView);
    v45 = objc_msgSend(v44, "areAnimationsEnabled");
    *(_QWORD *)&v46 = swift_beginAccess(&v165, &v164, 0, 0).n128_u64[0];
    if ((v165 & 1) == 0)
      objc_msgSend(v44, "setAnimationsEnabled:", 0, v46);
    v47 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v47)
    {
      v48 = v3;
      v49 = v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 25];
      v50 = objc_msgSend(v47, "isGathering", v46);
      v137 = v44;
      v136 = v45;
      if (v50)
      {
        if ((v49 & 1) == 0)
          goto LABEL_21;
      }
      else if (v49 == v48[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton])
      {
LABEL_21:
        v155 = sub_1000A1E34();
        v52 = (void *)objc_opt_self(DOCFeature);
        v53 = objc_msgSend(v52, "protectedAppsEnabled");
        v54 = v142;
        if (v53
          && (v55 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected,
              v142[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1)
          && v142[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] != 1)
        {
          *(_QWORD *)&v148 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated;
          v121 = (char *)v152;
          v150(v152, v149, v27);
          v122 = v54;
          v123 = Logger.logObject.getter(v122);
          LODWORD(v153) = static os_log_type_t.default.getter(v123);
          if (os_log_type_enabled(v123, (os_log_type_t)v153))
          {
            v124 = swift_slowAlloc(18, -1);
            v150 = (void (*)(uint64_t, uint64_t, char **))swift_slowAlloc(32, -1);
            v170[0] = (uint64_t)v150;
            *(_DWORD *)v124 = 136315394;
            v168 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100516E50, v170);
            v54 = v142;
            *(_QWORD *)&v125 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169).n128_u64[0];
            *(_WORD *)(v124 + 12) = 1024;
            v126 = objc_msgSend(v52, "protectedAppsEnabled", v125) && v54[v55] == 1 && v54[v148] != 1;
            v127 = v123;
            v128 = v153;
            LODWORD(v168) = v126;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, (char *)&v168 + 4);

            _os_log_impl((void *)&_mh_execute_header, v127, v128, "[PROTECTED APPS] %s removing content from collection because shouldShowAppProtectionShieldUI: %{BOOL}d", (uint8_t *)v124, 0x12u);
            v129 = v150;
            swift_arrayDestroy(v150, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v129, -1, -1);
            swift_slowDealloc(v124, -1, -1);

            v130 = (char *)v152;
            v131 = v154;
          }
          else
          {

            v130 = v121;
            v131 = (uint64_t)v27;
          }
          v41(v130, (char **)v131);
        }
        else
        {
          v56 = v153;
          v150((uint64_t)v153, v149, v27);
          v57 = v54;
          v58 = Logger.logObject.getter(v57);
          v59 = v27;
          v60 = static os_log_type_t.default.getter(v58);
          v61 = os_log_type_enabled(v58, v60);
          v146 = v57;
          if (v61)
          {
            v62 = swift_slowAlloc(18, -1);
            v63 = swift_slowAlloc(32, -1);
            v170[0] = v63;
            *(_DWORD *)v62 = 136315394;
            v168 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100516E50, v170);
            v57 = v146;
            *(_QWORD *)&v64 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169).n128_u64[0];
            *(_WORD *)(v62 + 12) = 1024;
            v65 = objc_msgSend(v52, "protectedAppsEnabled", v64)
               && v57[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1
               && v57[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] != 1;
            LODWORD(v168) = v65;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, (char *)&v168 + 4);

            _os_log_impl((void *)&_mh_execute_header, v58, v60, "[PROTECTED APPS] %s allowing all items in collection because shouldShowAppProtectionShieldUI: %{BOOL}d", (uint8_t *)v62, 0x12u);
            swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v63, -1, -1);
            swift_slowDealloc(v62, -1, -1);

            v41(v153, (char **)v154);
            v54 = v142;
          }
          else
          {

            v41(v56, v59);
          }
          v150 = *(void (**)(uint64_t, uint64_t, char **))(v145 + 16);
          if (v150)
          {
            v66 = (char *)(v155 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot);
            v152 = v155 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
            v67 = &v57[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
            v144 = (os_log_t)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits;
            v133 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
            v149 = v145 + 32;
            swift_bridgeObjectRetain(v145);
            swift_beginAccess(v67, &v163, 0, 0);
            v68 = 0;
            v148 = xmmword_1004D9670;
            v141 = v67;
            v153 = v66;
            while (1)
            {
              v69 = (uint64_t *)(v149 + 40 * v68);
              v70 = *v69;
              v71 = v69[1];
              v27 = (char **)v69[2];
              v5 = v69[3];
              v6 = (char *)v69[4];
              v72 = sub_10006922C(&qword_100644B00);
              v73._rawValue = (void *)swift_allocObject(v72, 72, 7);
              *((_OWORD *)v73._rawValue + 1) = v148;
              v154 = v70;
              *((_QWORD *)v73._rawValue + 4) = v70;
              *((_QWORD *)v73._rawValue + 5) = v71;
              *((_QWORD *)v73._rawValue + 6) = v27;
              *((_QWORD *)v73._rawValue + 7) = v5;
              *((_QWORD *)v73._rawValue + 8) = v6;
              if ((*(_BYTE *)(v155 + 16) & 1) != 0)
              {
                v74 = v153;
                swift_beginAccess(v153, &v157, 33, 0);
                v75 = sub_10006922C((uint64_t *)&unk_100654E80);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v74, 1, v75) == 1)goto LABEL_139;
              }
              else
              {
                v76 = v152;
                swift_beginAccess((char *)v152, &v157, 33, 0);
                v77 = sub_10006922C((uint64_t *)&unk_100646C30);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))((char *)v76, 1, v77) == 1)goto LABEL_138;
              }
              swift_bridgeObjectRetain_n(v71, 2);
              swift_bridgeObjectRetain_n(v5, 2);
              swift_retain_n(v6, 2);
              NSDiffableDataSourceSnapshot.appendSections(_:)(v73);
              swift_endAccess(&v157);
              swift_bridgeObjectRelease(v73._rawValue);
              swift_beginAccess(v6 + 16, &v162, 0, 0);
              v78 = *((_QWORD *)v6 + 2);
              v79 = *(_QWORD *)v67;
              swift_bridgeObjectRetain(v78);
              if (v79)
                goto LABEL_80;
              v80 = v146;
              sub_100064B54();
              if ((v81 & 1) == 0)
                goto LABEL_80;
              v82 = *(uint64_t *)((char *)&v144->isa + (_QWORD)v80);
              if (!v82)
                goto LABEL_80;
              swift_retain();
              sub_10009DED4((uint64_t)v166);
              swift_release(v82);
              LODWORD(v143) = v6[24];
              if (*(_QWORD *)v67
                || (sub_100064B54(), (v83 & 1) == 0)
                || (v84 = *(uint64_t *)((char *)&v144->isa + (_QWORD)v146)) == 0)
              {
                sub_1001D0668((uint64_t)v166);
                if ((v143 & 1) != 0)
                  goto LABEL_80;
LABEL_56:
                v43 = v167;
                if ((unint64_t)v78 >> 62)
                {
                  if (v78 < 0)
                    v117 = v78;
                  else
                    v117 = v78 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v78);
                  v135 = v117;
                  v9 = _CocoaArrayWrapper.endIndex.getter(v117);
                  swift_bridgeObjectRelease(v78);
                  if (v43 < v9)
                    v9 = v43;
                  if (v9 < 0)
                  {
LABEL_133:
                    __break(1u);
LABEL_134:
                    __break(1u);
                    goto LABEL_135;
                  }
                  swift_bridgeObjectRetain(v78);
                  v118 = v135;
                  v134 = _CocoaArrayWrapper.endIndex.getter(v135);
                  swift_bridgeObjectRelease(v78);
                  if (v134 < 0)
                    goto LABEL_145;
                  swift_bridgeObjectRetain(v78);
                  v43 = _CocoaArrayWrapper.endIndex.getter(v118);
                  swift_bridgeObjectRelease(v78);
                  if (v43 < v9)
                    goto LABEL_134;
                }
                else
                {
                  if (v167 >= *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
                    v9 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
                  else
                    v9 = v167;
                  if (v9 < 0)
                    goto LABEL_133;
                }
                v143 = (unint64_t)v78 >> 62;
                v139 = v27;
                if ((v78 & 0xC000000000000001) != 0 && v9)
                {
                  for (i = 0; i != v9; ++i)
                  {
                    sub_10006922C((uint64_t *)&unk_1006424B0);
                    _ArrayBuffer._typeCheckSlowPath(_:)(i);
                  }
                }
                if (v143)
                {
                  if (v78 < 0)
                    v93 = v78;
                  else
                    v93 = v78 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v78);
                  v91 = _CocoaArrayWrapper.subscript.getter(0, v9, v93);
                  v135 = v94;
                  v143 = v95;
                  v92 = v96;
                  swift_bridgeObjectRelease_n(v78, 2);
                }
                else
                {
                  v143 = 0;
                  v91 = v78 & 0xFFFFFFFFFFFFFF8;
                  v135 = (v78 & 0xFFFFFFFFFFFFFF8) + 32;
                  v92 = (2 * v9) | 1;
                }
                v67 = v141;
                v27 = v139;
                if ((v92 & 1) != 0)
                {
                  v97 = type metadata accessor for __ContiguousArrayStorageBase(0);
                  v98 = swift_unknownObjectRetain_n(v91, 2);
                  v134 = v97;
                  v99 = (_QWORD *)swift_dynamicCastClass(v98, v97);
                  if (!v99)
                  {
                    swift_unknownObjectRelease(v91);
                    v99 = _swiftEmptyArrayStorage;
                  }
                  v100 = v99[2];
                  swift_release(v99);
                  if (__OFSUB__(v92 >> 1, v143))
                  {
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    __break(1u);
                    goto LABEL_144;
                  }
                  if (v100 != (v92 >> 1) - v143)
                  {
                    swift_unknownObjectRelease(v91);
                    goto LABEL_72;
                  }
                  v78 = swift_dynamicCastClass(v91, v134);
                  swift_unknownObjectRelease(v91);
                  if (v78)
                    goto LABEL_80;
                  v78 = (int64_t)_swiftEmptyArrayStorage;
                }
                else
                {
LABEL_72:
                  v78 = (int64_t)sub_10028F34C(v91, v135, v143, v92);
                }
                swift_unknownObjectRelease(v91);
                goto LABEL_80;
              }
              swift_retain();
              sub_10009DED4((uint64_t)&v168);
              swift_release(v84);
              if ((v6[24] & 1) != 0)
                goto LABEL_98;
              if (*(_QWORD *)v67)
                goto LABEL_98;
              sub_100064B54();
              if ((v85 & 1) == 0)
                goto LABEL_98;
              v86 = *(uint64_t *)((char *)&v144->isa + (_QWORD)v146);
              if (!v86)
                goto LABEL_98;
              swift_retain();
              sub_10009DED4((uint64_t)v170);
              swift_release(v86);
              if (!*(_QWORD *)&v146[v133])
                break;
              v87 = *((_QWORD *)v6 + 2);
              if ((unint64_t)v87 >> 62)
              {
                if (v87 < 0)
                  v119 = *((_QWORD *)v6 + 2);
                else
                  v119 = v87 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(*((_QWORD *)v6 + 2));
                v88 = _CocoaArrayWrapper.endIndex.getter(v119);
                swift_bridgeObjectRelease(v87);
              }
              else
              {
                v88 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFF8) + 0x10);
              }
              sub_1001D0668((uint64_t)v170);
              sub_1001D0668((uint64_t)&v168);
              sub_1001D0668((uint64_t)v166);
              v89 = v143;
              if (v170[13] < v88)
              {
                if (((v143 | v169[24]) & 1) == 0)
                  goto LABEL_56;
                goto LABEL_80;
              }
LABEL_99:
              if ((v89 & 1) == 0)
                goto LABEL_56;
LABEL_80:
              v101 = *(_BYTE *)(v155 + 16);
              swift_bridgeObjectRetain(v71);
              swift_bridgeObjectRetain(v5);
              swift_retain();
              if ((v101 & 1) != 0)
              {
                v102 = sub_100069C14(v78);
                if (!v102)
                  goto LABEL_146;
                v103 = v102;
                v157 = v154;
                v158 = v71;
                v159 = v27;
                v160 = v5;
                v161 = v6;
                v104 = v153;
                swift_beginAccess(v153, v156, 33, 0);
                v105 = sub_10006922C((uint64_t *)&unk_100654E80);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 48))(v104, 1, v105) == 1)goto LABEL_141;
                NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v103, &v157, v105);
                swift_endAccess(v156);
                swift_release(v6);
                swift_bridgeObjectRelease(v5);
                swift_bridgeObjectRelease(v71);
                swift_bridgeObjectRelease(v103);
              }
              else
              {
                v106 = sub_10006922C((uint64_t *)&unk_1006424B0);
                All = Array<A>.fpfs_syncFetchAllFPItems()(v78, v106);
                if (!All)
                {
                  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x8000000100516E10, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 252, 0);
                  goto LABEL_150;
                }
                v108 = All;
                v157 = v154;
                v158 = v71;
                v159 = v27;
                v160 = v5;
                v161 = v6;
                v109 = v152;
                swift_beginAccess((char *)v152, v156, 33, 0);
                v110 = sub_10006922C((uint64_t *)&unk_100646C30);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 48))((char *)v109, 1, v110) == 1)goto LABEL_140;
                NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v108, &v157, v110);
                swift_endAccess(v156);
                swift_release(v6);
                swift_bridgeObjectRelease(v5);
                swift_bridgeObjectRelease(v71);
                swift_bridgeObjectRelease(v108);
                v104 = v153;
              }
              if (v151 == 2 || (v147 & 0x100) == 0)
              {
                swift_release(v6);
                swift_bridgeObjectRelease(v5);
                swift_bridgeObjectRelease(v71);
                swift_bridgeObjectRelease(v78);
              }
              else
              {
                if ((*(_BYTE *)(v155 + 16) & 1) != 0)
                {
                  v111 = sub_100069C14(v78);
                  if (!v111)
                  {
                    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000048, 0x8000000100516D70, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 281, 0);
                    goto LABEL_150;
                  }
                  v112._rawValue = v111;
                  swift_beginAccess(v104, &v157, 33, 0);
                  v113 = sub_10006922C((uint64_t *)&unk_100654E80);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v104, 1, v113) == 1)goto LABEL_142;
                  NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v112);
                  swift_endAccess(&v157);
                }
                else
                {
                  v114 = sub_1004B9BF0(v78);
                  if (!v114)
                  {
                    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000043, 0x8000000100516DC0, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 273, 0);
                    goto LABEL_150;
                  }
                  v112._rawValue = v114;
                  v115 = v152;
                  swift_beginAccess((char *)v152, &v157, 33, 0);
                  v116 = sub_10006922C((uint64_t *)&unk_100646C30);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))((char *)v115, 1, v116) == 1)goto LABEL_143;
                  NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v112);
                  swift_endAccess(&v157);
                  v67 = v141;
                }
                swift_bridgeObjectRelease(v5);
                swift_bridgeObjectRelease(v71);
                swift_bridgeObjectRelease(v112._rawValue);
                swift_bridgeObjectRelease(v78);
                swift_release(v6);
              }
              if ((void (*)(uint64_t, uint64_t, char **))++v68 == v150)
              {
                swift_bridgeObjectRelease(v145);
                v54 = v142;
                goto LABEL_116;
              }
            }
            sub_1001D0668((uint64_t)v170);
LABEL_98:
            sub_1001D0668((uint64_t)&v168);
            sub_1001D0668((uint64_t)v166);
            v89 = v143;
            goto LABEL_99;
          }
        }
LABEL_116:
        if (v151 == 2)
        {
          v9 = v140;
          sub_1000A2268(v155, 0, 0);
          sub_1000157B0();
          sub_100097F64();
          v6 = v54;
          v5 = v138;
          v27 = &selRef_viewOptionsRoot;
        }
        else
        {
          v6 = v54;
          v120 = v165;
          v9 = v140;
          sub_10042A038(v155, v165, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
          v5 = v138;
          v27 = &selRef_viewOptionsRoot;
          if ((v120 & 1) == 0)
            sub_1000157B0();
        }
        sub_10018C44C(0);
        sub_100197D0C();
        v43 = (uint64_t)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_100640E10 == -1)
          goto LABEL_121;
        goto LABEL_136;
      }
      v51 = sub_10004FD50();
      DOCItemCollectionViewController.items.setter(v51);
      goto LABEL_21;
    }
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000043, 0x8000000100516D20, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 261, 0);
LABEL_150:
    __break(1u);
  }
  return result;
}

_QWORD *sub_10003B1FC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *result;
  void *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD *v17;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "horizontalSizeClass");

  if (v3 != (id)2)
    return _swiftEmptyArrayStorage;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "supportHistoryNavigation");

  if (!v5)
    return _swiftEmptyArrayStorage;
  sub_10006922C((uint64_t *)&unk_100644190);
  if (qword_100640D60 != -1)
    swift_once(&qword_100640D60, sub_100083BC4);
  v6 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1, qword_100644168);
  KeyPath = swift_getKeyPath(&unk_1004DB240);
  v8 = __chkstk_darwin(KeyPath);
  (*(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t (*)()))((swift_isaMask & *v6) + 0x90))(&v17, v8, sub_1001463E4);

  swift_release(KeyPath);
  v9 = v17;
  v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
  result = (_QWORD *)swift_allocObject(v10, 48, 7);
  *((_OWORD *)result + 1) = xmmword_1004DA350;
  v12 = (void *)v9[7];
  if (v12)
  {
    result[4] = v12;
    v13 = (void *)v9[8];
    if (v13)
    {
      result[5] = v13;
      v17 = result;
      specialized Array._endMutation()(result);
      v14 = v17;
      v15 = v12;
      v16 = v13;
      swift_release(v9);
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003B3C0(char *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v1 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (!v1)
  {
    v5 = objc_msgSend(a1, "identifier");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    if (v6 == v9 && v8 == v10)
    {
      swift_bridgeObjectRelease_n(v8, 2);
    }
    else
    {
      v12 = v10;
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v12);
      if ((v13 & 1) == 0)
      {
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
        if (v14 == v17 && v16 == v18)
        {
          swift_bridgeObjectRelease_n(v16, 2);
        }
        else
        {
          v20 = v18;
          v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRelease(v20);
          if ((v21 & 1) == 0)
          {
            v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTrashedItems);
            v24 = v23;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
            v27 = v25;
            if (v22 == v26 && v24 == v25)
            {
              swift_bridgeObjectRelease_n(v24, 2);
            }
            else
            {
              v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
              swift_bridgeObjectRelease(v24);
              swift_bridgeObjectRelease(v27);
              if ((v31 & 1) == 0)
              {
                v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSearch);
                v34 = v33;
                v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
                v37 = v35;
                if (v32 == v36 && v34 == v35)
                {

                  swift_bridgeObjectRelease_n(v34, 2);
                }
                else
                {
                  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v35, 0);

                  swift_bridgeObjectRelease(v34);
                  swift_bridgeObjectRelease(v37);
                  if ((v38 & 1) == 0)
                    return 0;
                }
                v28 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "searchLocation");
                v29 = objc_msgSend(v28, "displayName");
LABEL_18:
                v3 = v29;

                if (v3)
                {
                  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
                  goto LABEL_20;
                }
                return 0;
              }
            }

            v28 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "trashedItemsLocation");
            v29 = objc_msgSend(v28, "displayName");
            goto LABEL_18;
          }
        }

        v28 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "sharedItemsLocation");
        v29 = objc_msgSend(v28, "displayName");
        goto LABEL_18;
      }
    }

    v28 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
    v29 = objc_msgSend(v28, "displayName");
    goto LABEL_18;
  }
  v2 = v1;
  v3 = (id)DOCLocalizedDisplayName();
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

LABEL_20:
  return v4;
}

char *sub_10003B71C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;

  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10006922C(&qword_10064A600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = v6[5];
    v11 = *(void **)&a2[v10];
    *(_QWORD *)&a1[v10] = v11;
    v12 = v6[6];
    v13 = *(_QWORD *)&a2[v12];
    *(_QWORD *)&a1[v12] = v13;
    v14 = v6[7];
    v15 = *(void **)&a2[v14];
    *(_QWORD *)&a1[v14] = v15;
    v16 = v6[8];
    v17 = *(void **)&a2[v16];
    *(_QWORD *)&a1[v16] = v17;
    v18 = v6[9];
    v30 = &a1[v18];
    v19 = &a2[v18];
    v20 = *(_QWORD *)&a2[v18 + 24];
    v21 = v11;
    swift_bridgeObjectRetain(v13);
    v22 = v15;
    v23 = v17;
    if (v20)
    {
      *((_QWORD *)v30 + 3) = v20;
      (**(void (***)(void))(v20 - 8))();
    }
    else
    {
      v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v19;
      *((_OWORD *)v30 + 1) = v24;
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v25 = *(int *)(a3 + 20);
  v26 = *(int *)(a3 + 24);
  v27 = *(_QWORD *)&a2[v25];
  *(_QWORD *)&a1[v25] = v27;
  v28 = *(_QWORD *)&a2[v26];
  *(_QWORD *)&a1[v26] = v28;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  return a1;
}

void DOCItemCollectionViewController.getCurrentLocation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    {
      v3 = *(_QWORD *)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v3);
LABEL_5:
      v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier");
      objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v4, v3);
      swift_unknownObjectRelease(v3);

      return;
    }
    v3 = *(_QWORD *)(v2 + 8);
    swift_unknownObjectRetain(v3);
    if (v3)
      goto LABEL_5;
    v5 = objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                           + 24));
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_10003BB20(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  _QWORD *v36;

  v3 = a1;
  v36 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_38;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v29 = v3;
      v5 = 0;
      v33 = v3 & 0xFFFFFFFFFFFFFF8;
      v34 = v3 & 0xC000000000000001;
      v32 = v3 + 32;
      v30 = a2 + 7;
      while (1)
      {
        if (v34)
        {
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v29);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v33 + 16))
          {
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
          v6 = *(id *)(v32 + 8 * v5);
        }
        v7 = v6;
        if (__OFADD__(v5++, 1))
          goto LABEL_36;
        v9 = objc_msgSend(v6, "identifier");
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v3 = v11;

        v12 = (_QWORD *)a2[2];
        v35 = v7;
        if (v12)
          break;
LABEL_17:
        swift_bridgeObjectRelease(v3);
        v16 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
        v3 = sub_10038AAC4(v35);

        if ((v12 & 1) != 0 || (v3 & 1) == 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
          v18 = v36[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v35);
          v3 = (uint64_t)&v36;
          specialized ContiguousArray._endMutation()(v19);
        }
        if (v5 == v4)
          return v36;
      }
      v13 = a2[4];
      v14 = a2[5];
      v15 = v13 == v10 && v14 == v3;
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v10, v3, 0) & 1) != 0)
      {
        LOBYTE(v12) = 1;
        goto LABEL_17;
      }
      if (v12 == (_QWORD *)1)
        break;
      v31 = v12;
      v20 = v30;
      v21 = 1;
      while (1)
      {
        v22 = v4;
        v23 = a2;
        a2 = (_QWORD *)(v21 + 1);
        if (__OFADD__(v21, 1))
          break;
        v24 = *(v20 - 1);
        v25 = *v20;
        v26 = v24 == v10 && v25 == v3;
        if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v10, v3, 0) & 1) != 0)
        {
          LOBYTE(v12) = 1;
          a2 = v23;
          v4 = v22;
          goto LABEL_17;
        }
        LOBYTE(v12) = 0;
        v20 += 2;
        ++v21;
        v15 = a2 == v31;
        a2 = v23;
        v4 = v22;
        if (v15)
          goto LABEL_17;
      }
LABEL_37:
      __break(1u);
LABEL_38:
      if (v3 < 0)
        v28 = v3;
      else
        v28 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v28);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v12) = 0;
    goto LABEL_17;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10003BDA0(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);

  return a1;
}

_QWORD *sub_10003BDDC(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t i;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v40;

  v2 = a1;
  v40 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_42;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v33))
  {
    v34 = v2;
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    v6 = v2 & 0xFFFFFFFFFFFFFF8;
    v7 = v2 + 32;
    v37 = v2 & 0xC000000000000001;
    v38 = i;
    v35 = v2 + 32;
    v36 = v2 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v5)
      {
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v34);
      }
      else
      {
        if (v4 >= *(_QWORD *)(v6 + 16))
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        v11 = *(id *)(v7 + 8 * v4);
      }
      v12 = v11;
      if (__OFADD__(v4++, 1))
        goto LABEL_39;
      v14 = type metadata accessor for DOCColumnViewController(0);
      v8 = swift_dynamicCastClass(v12, v14);
      if (v8)
        goto LABEL_5;
      v15 = objc_msgSend(a2, "internalNavigationController");
      v16 = objc_msgSend(v15, "viewControllers");

      v2 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v2);

      if ((unint64_t)v17 >> 62)
        break;
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v17);
      if (v18)
        goto LABEL_14;
LABEL_4:
      v8 = swift_bridgeObjectRelease_n(v17, 2);
      v5 = v37;
      i = v38;
      v7 = v35;
      v6 = v36;
LABEL_5:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = v40[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v12);
      v2 = (uint64_t)&v40;
      specialized ContiguousArray._endMutation()(v10);
LABEL_6:
      if (v4 == i)
        return v40;
    }
    if (v17 < 0)
      v31 = v17;
    else
      v31 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v31);
    if (!v18)
      goto LABEL_4;
LABEL_14:
    if ((v17 & 0xC000000000000001) != 0)
      v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    else
      v19 = *(id *)(v17 + 32);
    v20 = v19;
    v21 = static NSObject.== infix(_:_:)(v19, v12);

    if ((v21 & 1) != 0)
    {
LABEL_17:

      swift_bridgeObjectRelease_n(v17, 2);
      v5 = v37;
      i = v38;
      v7 = v35;
      v6 = v36;
      goto LABEL_6;
    }
    if (v18 == 1)
      goto LABEL_4;
    if ((v17 & 0xC000000000000001) != 0)
    {
      v22 = 1;
      while (1)
      {
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v17);
        v24 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_40;
        v25 = v23;
        v26 = static NSObject.== infix(_:_:)(v23, v12);
        swift_unknownObjectRelease(v25);
        if ((v26 & 1) != 0)
          goto LABEL_17;
        ++v22;
        if (v24 == v18)
          goto LABEL_4;
      }
    }
    v27 = 5;
    while (1)
    {
      v28 = v27 - 3;
      if (__OFADD__(v27 - 4, 1))
        break;
      v29 = *(id *)(v17 + 8 * v27);
      v30 = static NSObject.== infix(_:_:)(v29, v12);

      if ((v30 & 1) != 0)
        goto LABEL_17;
      ++v27;
      if (v28 == v18)
        goto LABEL_4;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    if (v2 < 0)
      v33 = v2;
    else
      v33 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10003C0D0(uint64_t a1)
{
  void *v1;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  Swift::Bool v10;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  void *v15;
  Swift::Bool v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void *v20;
  Swift::Bool v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void *v25;
  Swift::Bool v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v3 = objc_msgSend(v1, "isiCloudDriveProvider");
  v4 = objc_msgSend(v1, "isEnterpriseDomain");
  v5 = objc_msgSend(v1, "isHidden");
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v7 = v6;
  v8._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPv2Managed);
  object = v8._object;
  v10 = String.hasPrefix(_:)(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(object);
  if (v10)
  {
    if (v3)
      return v4 & (v5 ^ 1);
    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v13 = v12;
  v14._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPv2);
  v15 = v14._object;
  v16 = String.hasPrefix(_:)(v14);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    if (v3)
      return (v4 | v5) ^ 1;
    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v18 = v17;
  v19._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPFSManaged);
  v20 = v19._object;
  v21 = String.hasPrefix(_:)(v19);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v20);
  if (!v21)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v23 = v22;
    v24._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPFS);
    v25 = v24._object;
    v26 = String.hasPrefix(_:)(v24);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v25);
    if (!v26)
      return 0;
  }
  v27 = objc_msgSend(v1, "providerID");
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v33 = v31;
  if (v28 == v32 && v30 == v31)
  {
    swift_bridgeObjectRelease_n(v30, 2);
    return 1;
  }
  else
  {
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v33);
    return v34 & 1;
  }
}

id sub_10003C32C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

void sub_10003C384(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  __n128 v5;
  char *v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  void **v14;
  uint64_t v15;
  unint64_t v16;
  void **v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  void **v27;
  id *v28;
  id v29;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void **v39;
  uint64_t v40;
  void **v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  void **v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  id *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unsigned int v67;
  void **aBlock;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  void *v71;
  void (*v72)();
  uint64_t v73;
  uint64_t v74;
  char v75[32];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v75, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (char *)Strong;
    v63 = (id *)DOCLog.Source.unsafeMutableAddressor(v5);
    v7 = *v63;
    v9 = static os_log_type_t.info.getter(v8);
    v10 = sub_10006922C((uint64_t *)&unk_100644560);
    v66 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v66 + 16) = xmmword_1004D4CE0;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v56 = a2;
      else
        v56 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v11 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v74 = v11;
    aBlock = (void **)dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v69 = v12;
    v13._countAndFlagsBits = 0x61746F74206E6920;
    v13._object = (void *)0xE90000000000006CLL;
    String.append(_:)(v13);
    v14 = aBlock;
    v15 = v69;
    *(_QWORD *)(v66 + 56) = &type metadata for String;
    v16 = sub_10006A638();
    *(_QWORD *)(v66 + 64) = v16;
    *(_QWORD *)(v66 + 32) = v14;
    *(_QWORD *)(v66 + 40) = v15;
    v17 = (void **)_swiftEmptyArrayStorage;
    v65 = v6;
    v61 = v16;
    if (v11)
    {
      aBlock = (void **)_swiftEmptyArrayStorage;
      sub_100081774(0, v11 & ~(v11 >> 63), 0);
      if (v11 < 0)
      {
        __break(1u);
        goto LABEL_40;
      }
      v58 = v7;
      v59 = v10;
      v18 = 0;
      v17 = aBlock;
      do
      {
        if ((a2 & 0xC000000000000001) != 0)
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a2);
        else
          v19 = *(id *)(a2 + 8 * v18 + 32);
        v20 = v19;
        v21 = objc_msgSend(v19, "providerName");
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        aBlock = v17;
        v26 = (unint64_t)v17[2];
        v25 = (unint64_t)v17[3];
        if (v26 >= v25 >> 1)
        {
          sub_100081774(v25 > 1, v26 + 1, 1);
          v17 = aBlock;
        }
        ++v18;
        v17[2] = (void *)(v26 + 1);
        v27 = &v17[2 * v26];
        v27[4] = (void *)v22;
        v27[5] = v24;
      }
      while (v11 != v18);
      v28 = v63;
      v6 = v65;
      v7 = v58;
      v10 = v59;
      v9 = v9;
    }
    else
    {
      v28 = v63;
    }
    v64 = sub_10006922C(&qword_10064F390);
    *(_QWORD *)(v66 + 96) = v64;
    v60 = sub_100088210();
    *(_QWORD *)(v66 + 104) = v60;
    *(_QWORD *)(v66 + 72) = v17;
    os_log(_:dso:log:type:_:)("Obtained new list of sources: %{public}@ - %@", 45, 2, &_mh_execute_header, v7, v9, v66);

    v29 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_configuration], "hiddenSourcesIdentifiers", swift_bridgeObjectRelease(v66).n128_f64[0]);
    v30 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for String);

    if (v30[2])
    {
      v31 = swift_bridgeObjectRetain(a2);
      v32 = sub_10003BB20(v31, v30);
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v30);
      a2 = (uint64_t)v32;
    }
    else
    {
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRetain(a2);
    }
    v33 = *v28;
    v67 = static os_log_type_t.info.getter(v34);
    v35 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1004D4CE0;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v57 = a2;
      else
        v57 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v36 = _CocoaArrayWrapper.endIndex.getter(v57);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v36 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v74 = v36;
    aBlock = (void **)dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v69 = v37;
    v38._countAndFlagsBits = 0x61746F74206E6920;
    v38._object = (void *)0xE90000000000006CLL;
    String.append(_:)(v38);
    v39 = aBlock;
    v40 = v69;
    *(_QWORD *)(v35 + 56) = &type metadata for String;
    *(_QWORD *)(v35 + 64) = v61;
    *(_QWORD *)(v35 + 32) = v39;
    *(_QWORD *)(v35 + 40) = v40;
    v62 = (_QWORD *)v35;
    v41 = (void **)_swiftEmptyArrayStorage;
    if (!v36)
    {
LABEL_29:
      v62[12] = v64;
      v62[13] = v60;
      v62[9] = v41;
      os_log(_:dso:log:type:_:)("Obtained new list of sources after filtering: %{public}@ - %@", 61, 2, &_mh_execute_header, v33, v67, v62);

      swift_bridgeObjectRelease(v62);
      v52 = swift_allocObject(&unk_1005E3928, 33, 7);
      *(_QWORD *)(v52 + 16) = v65;
      *(_QWORD *)(v52 + 24) = a2;
      *(_BYTE *)(v52 + 32) = 1;
      v72 = sub_10038B58C;
      v73 = v52;
      aBlock = _NSConcreteStackBlock;
      v69 = 1107296256;
      v70 = sub_10004A82C;
      v71 = &unk_1005E3940;
      v53 = _Block_copy(&aBlock);
      v54 = v73;
      swift_bridgeObjectRetain(a2);
      v55 = v65;
      swift_release(v54);
      DOCRunInMainThread(v53);
      _Block_release(v53);

      swift_bridgeObjectRelease(a2);
      return;
    }
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100081774(0, v36 & ~(v36 >> 63), 0);
    if ((v36 & 0x8000000000000000) == 0)
    {
      v42 = 0;
      v41 = aBlock;
      do
      {
        if ((a2 & 0xC000000000000001) != 0)
          v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, a2);
        else
          v43 = *(id *)(a2 + 8 * v42 + 32);
        v44 = v43;
        v45 = objc_msgSend(v43, "providerName");
        v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
        v48 = v47;

        aBlock = v41;
        v50 = (unint64_t)v41[2];
        v49 = (unint64_t)v41[3];
        if (v50 >= v49 >> 1)
        {
          sub_100081774(v49 > 1, v50 + 1, 1);
          v41 = aBlock;
        }
        ++v42;
        v41[2] = (void *)(v50 + 1);
        v51 = &v41[2 * v50];
        v51[4] = (void *)v46;
        v51[5] = v48;
      }
      while (v36 != v42);
      goto LABEL_29;
    }
LABEL_40:
    __break(1u);
  }
}

void sub_10003C988()
{
  char *v0;
  CGFloat x;
  CGFloat y;
  CGFloat height;
  double Width;
  double *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double MidX;
  double MidY;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  double v28;
  uint64_t v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  double v49;
  BOOL v50;
  double v51;
  id v52;
  double v53;
  double v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  NSString v80;
  id v81;
  Class isa;
  Class v83;
  id v84;
  id v85;
  CGFloat v86;
  CGFloat v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;

  objc_msgSend(v0, "bounds");
  x = v88.origin.x;
  y = v88.origin.y;
  height = v88.size.height;
  Width = CGRectGetWidth(v88);
  v5 = (double *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_minSize];
  if (Width > *(double *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_minSize])
    v6 = Width;
  else
    v6 = *(double *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_minSize];
  v89.origin.x = x;
  v89.origin.y = y;
  v89.size.width = v6;
  v89.size.height = height;
  v7 = CGRectGetHeight(v89);
  if (v7 > v5[1])
    v8 = v7;
  else
    v8 = v5[1];
  v90.origin.x = x;
  v90.origin.y = y;
  v90.size.width = v6;
  v90.size.height = v8;
  v9 = CGRectGetHeight(v90);
  v91.origin.x = x;
  v91.origin.y = y;
  v91.size.width = v6;
  v91.size.height = v8;
  v10 = CGRectGetWidth(v91);
  if (v10 < v9)
    v9 = v10;
  v11 = v9 * 0.5;
  v92.origin.x = x;
  v92.origin.y = y;
  v92.size.width = v6;
  v92.size.height = v8;
  MidX = CGRectGetMidX(v92);
  v93.origin.x = x;
  v93.origin.y = y;
  v93.size.width = v6;
  v93.size.height = v8;
  MidY = CGRectGetMidY(v93);
  objc_msgSend(v0, "frame");
  v14 = 2.0;
  v15 = 2.0;
  if (CGRectGetHeight(v94) <= 50.0)
  {
    v16 = objc_msgSend(v0, "traitCollection");
    objc_msgSend(v16, "displayScale");
    v18 = v17;

    if (v18 < 1.0)
      v15 = 1.0;
    else
      v15 = (1.0 / v18 + 1.0) * 0.5;
  }
  v19 = MidX - v11;
  v20 = MidY - v11;
  objc_msgSend(v0, "frame");
  if (CGRectGetHeight(v95) <= 50.0)
  {
    v21 = objc_msgSend(v0, "traitCollection");
    objc_msgSend(v21, "displayScale");
    v23 = v22;

    if (v23 < 1.0)
      v14 = 1.0;
    else
      v14 = (1.0 / v23 + 1.0) * 0.5;
  }
  v86 = v20;
  v87 = v19;
  v96.origin.x = v19;
  v96.origin.y = v20;
  v96.size.width = v9;
  v96.size.height = v9;
  v97 = CGRectInset(v96, v15, v14);
  v24 = v97.origin.x;
  v25 = v97.origin.y;
  v26 = v97.size.width;
  v27 = v97.size.height;
  v28 = CGRectGetHeight(v97) * 0.5;
  v29 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressLayer;
  v30 = *(id *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressLayer];
  v98.origin.x = v24;
  v98.origin.y = v25;
  v98.size.width = v26;
  v98.size.height = v27;
  v31 = CGRectGetWidth(v98);
  v99.origin.x = v24;
  v99.origin.y = v25;
  v99.size.width = v26;
  v99.size.height = v27;
  v32 = CGRectGetHeight(v99);
  if (v32 >= v31)
    v32 = v31;
  v33 = v32 * 0.5 - v28 * 0.5;
  v100.origin.x = v24;
  v100.origin.y = v25;
  v100.size.width = v26;
  v100.size.height = v27;
  v34 = CGRectGetMidX(v100);
  v101.origin.x = v24;
  v101.origin.y = v25;
  v101.size.width = v26;
  v101.size.height = v27;
  v35 = CGRectGetMidY(v101);
  v36 = (void *)objc_opt_self(UIBezierPath);
  v37 = objc_msgSend(v36, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v34, v35, v33, 4.71238898, 10.9955743);
  objc_msgSend(v37, "setLineWidth:", v28);
  v38 = objc_msgSend(v37, "CGPath");

  objc_msgSend(v30, "setPath:", v38);
  objc_msgSend(*(id *)&v0[v29], "setLineWidth:", v28);
  v39 = *(void **)&v0[v29];
  v40 = (void *)objc_opt_self(UIColor);
  v41 = v39;
  v42 = objc_msgSend(v40, "clearColor");
  v43 = objc_msgSend(v42, "CGColor");

  objc_msgSend(v41, "setFillColor:", v43);
  v44 = *(void **)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressFillColor];
  v45 = *(id *)&v0[v29];
  v46 = objc_msgSend(v44, "CGColor");
  objc_msgSend(v45, "setStrokeColor:", v46);

  objc_msgSend(*(id *)&v0[v29], "setStrokeEnd:", *(double *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_fractionCompleted]);
  v47 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_borderLayer;
  v48 = *(id *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_borderLayer];
  objc_msgSend(v0, "frame");
  v49 = 4.0;
  v50 = CGRectGetHeight(v102) <= 50.0;
  v51 = 4.0;
  if (v50)
  {
    v52 = objc_msgSend(v0, "traitCollection", 4.0);
    objc_msgSend(v52, "displayScale");
    v54 = v53;

    v51 = 2.0;
    if (v54 >= 1.0)
      v51 = 1.0 / v54 + 1.0;
  }
  objc_msgSend(v48, "setBorderWidth:", v51);

  v55 = *(void **)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressBorderColor];
  v56 = *(id *)&v0[v47];
  v57 = objc_msgSend(v55, "CGColor");
  objc_msgSend(v56, "setBorderColor:", v57);

  v58 = *(id *)&v0[v47];
  objc_msgSend(v58, "bounds");
  objc_msgSend(v58, "setCornerRadius:", CGRectGetWidth(v103) * 0.5);

  v59 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_indeterminateLayer;
  v60 = *(id *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_indeterminateLayer];
  objc_msgSend(v0, "frame");
  if (CGRectGetHeight(v104) <= 50.0)
  {
    v61 = objc_msgSend(v0, "traitCollection");
    objc_msgSend(v61, "displayScale");
    v63 = v62;

    if (v63 < 1.0)
      v49 = 2.0;
    else
      v49 = 1.0 / v63 + 1.0;
  }
  v105.origin.x = v87;
  v105.origin.y = v86;
  v105.size.width = v9;
  v105.size.height = v9;
  v64 = CGRectGetWidth(v105);
  v106.origin.x = v87;
  v106.origin.y = v86;
  v106.size.width = v9;
  v106.size.height = v9;
  v65 = CGRectGetHeight(v106);
  if (v65 >= v64)
    v65 = v64;
  v66 = v65 * 0.5 - v49 * 0.5;
  v107.origin.x = v87;
  v107.origin.y = v86;
  v107.size.width = v9;
  v107.size.height = v9;
  v67 = CGRectGetMidX(v107);
  v108.origin.x = v87;
  v108.origin.y = v86;
  v108.size.width = v9;
  v108.size.height = v9;
  v68 = objc_msgSend(v36, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v67, CGRectGetMidY(v108), v66, 4.71238898, 10.3672558);
  objc_msgSend(v68, "setLineWidth:", v49);
  v69 = objc_msgSend(v68, "CGPath");

  objc_msgSend(v60, "setPath:", v69);
  v70 = *(void **)&v0[v47];
  v71 = *(id *)&v0[v59];
  objc_msgSend(v70, "borderWidth");
  objc_msgSend(v71, "setLineWidth:");

  v72 = *(void **)&v0[v47];
  v73 = *(id *)&v0[v59];
  v74 = objc_msgSend(v72, "borderColor");
  objc_msgSend(v73, "setStrokeColor:", v74);

  v75 = *(id *)&v0[v59];
  v76 = objc_msgSend(v40, "clearColor");
  v77 = objc_msgSend(v76, "CGColor");

  objc_msgSend(v75, "setFillColor:", v77);
  objc_msgSend(*(id *)&v0[v59], "setLineCap:", kCALineCapRound);
  if (objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled")
    && (objc_msgSend((id)objc_opt_self(CATransaction), "disableActions") & 1) == 0
    && (objc_msgSend(v0, "isHiddenOrHasHiddenAncestor") & 1) == 0)
  {
    v78 = objc_msgSend(*(id *)&v0[v29], "presentationLayer");
    if (v78)
    {
      v79 = v78;
      objc_msgSend(v78, "strokeEnd");

    }
    else
    {
      objc_msgSend(*(id *)&v0[v29], "strokeEnd");
    }
    v80 = String._bridgeToObjectiveC()();
    v81 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v80);

    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v81, "setFromValue:", isa);

    v83 = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v81, "setToValue:", v83);

    objc_msgSend(v81, "setDuration:", *(double *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_changeAnimationDuration]);
    objc_msgSend(v81, "setFillMode:", kCAFillModeBoth);
    v84 = *(id *)&v0[v29];
    v85 = objc_msgSend(v81, "keyPath");
    objc_msgSend(v84, "addAnimation:forKey:", v81, v85);

  }
  sub_100011D78();
}

void sub_10003DD80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003DDDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  _OWORD v32[2];
  _BYTE v33[24];
  uint64_t v34;
  char v35[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v2, v35, 0, 0);
  if (*v2 == 2)
    goto LABEL_2;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v4)
  {
LABEL_38:
    __break(1u);
    return;
  }
  v5 = v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v5 + 16) & 1) != 0)
  {
    v6 = *(void **)(*(_QWORD *)v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v6);
  }
  else
  {
    v6 = *(void **)(v5 + 8);
    swift_unknownObjectRetain(v6);
    if (!v6)
    {
LABEL_2:
      v3 = 0;
      goto LABEL_8;
    }
  }
  v3 = objc_msgSend(v6, "isShared");
  swift_unknownObjectRelease(v6);
LABEL_8:
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v7)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (*(_BYTE *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) == 1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
    v9 = v8;
    v10 = objc_allocWithZone((Class)NSUserDefaults);
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "initWithSuiteName:", v11, swift_bridgeObjectRelease(v9).n128_f64[0]);

    if (v12)
    {
      v13 = objc_msgSend(v12, "valueForKey:", DOCUserDefaultsKeyFPFSDebugMode);
      if (v13)
      {
        v14 = v13;
        _bridgeAnyObjectToAny(_:)(v32, v13);
        swift_unknownObjectRelease(v14);
      }
      else
      {
        memset(v32, 0, sizeof(v32));
      }
      sub_100070EDC((uint64_t)v32, (uint64_t)v33, &qword_100642730);
      if (v34)
      {
        if ((swift_dynamicCast(&v31, v33, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0
          && v31 == 1)
        {
          v15 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "promptText");
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
          v18 = v17;

          swift_bridgeObjectRelease(v18);
          v19 = HIBYTE(v18) & 0xF;
          if ((v18 & 0x2000000000000000) == 0)
            v19 = v16 & 0xFFFFFFFFFFFFLL;
          if (v19)
            v20 = 1;
          else
            v20 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
          goto LABEL_26;
        }

      }
      else
      {

        sub_10000CB4C((uint64_t)v33, &qword_100642730);
      }
    }
  }
  v21 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "promptText");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  swift_bridgeObjectRelease(v24);
  v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0)
    v25 = v22 & 0xFFFFFFFFFFFFLL;
  v20 = v25 != 0;
LABEL_26:
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView);
  if ((sub_100098DBC() & 1) != 0)
  {
    v27 = *(char **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView);
    if (v27)
    {
      v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel];
      v29 = v27;
      swift_retain();
      v30 = sub_10008DB78();

      swift_release(v28);
      if (((v3 | v20) & 1) != 0 || v26 || (v30 & 1) != 0)
        return;
LABEL_34:
      sub_10004A370();
      return;
    }
  }
  if (((v3 | v20) & 1) == 0 && !v26)
    goto LABEL_34;
}

void sub_10003E148(NSObject *a1, int a2, char *a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  _QWORD *v50;
  uint64_t v51;
  NSObject *v52;
  void *v53;
  _QWORD *v54;
  void *v55;
  void *v56;
  _QWORD *v57;
  NSObject *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  _QWORD *v97;
  uint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t v119;
  uint64_t ObjectType;
  id v121;
  void *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  _QWORD *v130;
  id v131;
  char *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  _QWORD *v136;
  void *v137;
  _QWORD *v138;
  char *v139;
  char *v140;
  id v141;
  _QWORD *v142;
  uint64_t v143;
  __n128 v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  _QWORD *v149;
  NSObject *v150;
  void *v151;
  _QWORD *v152;
  NSObject *v153;
  uint64_t v154;
  _QWORD *v155;
  _BYTE *v156;
  uint64_t v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  __n128 v163;
  NSObject *v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  void *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  NSObject *v179;
  _QWORD *v180;
  _BYTE *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  void *v195;
  NSObject *v196;
  uint64_t v197;
  uint64_t v198;
  char v199[24];
  char v200[24];
  char v201[24];
  _QWORD *v202;
  char v203[24];
  void **aBlock;
  uint64_t v205;
  void *v206;
  void *v207;
  void *v208;
  _QWORD *v209;

  v194 = a3;
  LODWORD(v187) = a2;
  v193 = type metadata accessor for DispatchWorkItemFlags(0);
  v192 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v191 = (char *)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = type metadata accessor for DispatchQoS(0);
  v189 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v188 = (char *)&v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v186 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (_BYTE **)((char *)&v181 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v181 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v181 - v18;
  v20 = swift_allocObject(&unk_1005CF0C8, 32, 7);
  v195 = a4;
  *(_QWORD *)(v20 + 16) = a4;
  *(_QWORD *)(v20 + 24) = a5;
  v198 = v20;
  v197 = a5;
  swift_retain_n(a5, 2);
  v196 = a1;
  v21 = -[NSObject sourceIdentifier](a1, "sourceIdentifier");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierEmptyLocation);
  v24 = v23;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v27 = v25;
  if (v22 != v26 || v24 != v25)
  {
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v27);
    if ((v28 & 1) != 0)
      goto LABEL_5;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTaggedItems);
    v39 = v38;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v42 = v40;
    if (v37 == v41 && v39 == v40)
      goto LABEL_10;
    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v42);
    if ((v43 & 1) != 0)
      goto LABEL_12;
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTrashedItems);
    v39 = v61;
    v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v64 = v62;
    if (v60 == v63 && v39 == v62)
      goto LABEL_10;
    v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v39, v63, v62, 0);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v64);
    if ((v65 & 1) != 0)
      goto LABEL_12;
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
    v39 = v67;
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v70 = v68;
    if (v66 == v69 && v39 == v68)
      goto LABEL_10;
    v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v39, v69, v68, 0);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v70);
    if ((v71 & 1) != 0)
      goto LABEL_12;
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
    v39 = v73;
    v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v76 = v74;
    if (v72 == v75 && v39 == v74)
    {
LABEL_10:
      swift_bridgeObjectRelease_n(v39, 2);
LABEL_12:

      v45 = Logger.UI.unsafeMutableAddressor(v44);
      v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v45, v13);
      v47 = Logger.logObject.getter(v46);
      v48 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v49 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "We don't have to prepare the parent hierarchy for Tags/Trash/RecentsOnly/SharedItems", v49, 2u);
        swift_slowDealloc(v49, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      v50 = (_QWORD *)swift_allocObject(&unk_1005CF3C0, 40, 7);
      v51 = v198;
      v50[2] = sub_1000ABDC0;
      v50[3] = v51;
      v52 = v196;
      v50[4] = v196;
      v53 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
      v54 = (_QWORD *)swift_allocObject(&unk_1005CF3E8, 40, 7);
      v54[2] = sub_1000ABB40;
      v54[3] = v50;
      v54[4] = v52;
      v208 = sub_1001F6B30;
      v209 = v54;
      aBlock = _NSConcreteStackBlock;
      v205 = 1107296256;
      v55 = &unk_1005CF400;
      goto LABEL_15;
    }
    v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v39, v75, v74, 0);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v76);
    if ((v77 & 1) != 0)
      goto LABEL_12;
    v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSearch);
    v80 = v79;
    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v83 = v81;
    if (v78 != v82 || v80 != v81)
    {
      v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v80, v82, v81, 0);
      swift_bridgeObjectRelease(v80);
      swift_bridgeObjectRelease(v83);
      if ((v84 & 1) != 0)
      {
LABEL_60:
        swift_release_n(v197, 2, v85);
        swift_release(v198);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x8000000100517D80, "Files/DOCHierarchyController.swift", 34, 2, 1451, 0);
        __break(1u);
        return;
      }
      v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierDefaultSaveLocation);
      v88 = v87;
      v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v91 = v89;
      if (v86 == v90 && v88 == v89)
      {
        swift_bridgeObjectRelease_n(v88, 2);
LABEL_34:

        type metadata accessor for DOCHierarchyController(0);
        v93 = v194;
        v94 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        v95 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v96 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        v97 = (_QWORD *)swift_allocObject(&unk_1005CF398, 40, 7);
        v97[2] = v93;
        v97[3] = sub_1000ABDC0;
        v98 = v198;
        v97[4] = v198;
        v99 = v96;
        v100 = v93;
        swift_retain();
        sub_1001E44F4(v94, v95, v96, (uint64_t)sub_1001F0B78, (uint64_t)v97);
LABEL_35:
        swift_release(v197);
        swift_release(v98);

        swift_release(v97);
        return;
      }
      v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v88, v90, v89, 0);
      swift_bridgeObjectRelease(v88);
      swift_bridgeObjectRelease(v91);
      if ((v92 & 1) != 0)
        goto LABEL_34;
      v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierDefaultLocation);
      v103 = v102;
      v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v106 = v104;
      if (v101 == v105 && v103 == v104)
      {

        swift_bridgeObjectRelease_n(v103, 2);
LABEL_40:
        type metadata accessor for DOCHierarchyController(0);
        v108 = v194;
        v109 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        v110 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v111 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        v97 = (_QWORD *)swift_allocObject(&unk_1005CF370, 40, 7);
        v97[2] = v108;
        v97[3] = sub_1000ABDC0;
        v98 = v198;
        v97[4] = v198;
        v99 = v111;
        swift_retain();
        v112 = v108;
        sub_1000AC5A0(v109, v110, v111, (uint64_t)sub_1000ABD30, (uint64_t)v97);
        goto LABEL_35;
      }
      v107 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, v103, v105, v104, 0);

      swift_bridgeObjectRelease(v103);
      swift_bridgeObjectRelease(v106);
      if ((v107 & 1) != 0)
        goto LABEL_40;
      v185 = -[NSObject node](v196, "node");
      if (!v185)
      {
        if ((v187 & 1) != 0)
        {
          v131 = -[NSObject sourceIdentifier](v196, "sourceIdentifier");
          v50 = (_QWORD *)swift_allocObject(&unk_1005CF168, 40, 7);
          v132 = v194;
          v50[2] = v194;
          v50[3] = sub_1000ABDC0;
          v133 = v198;
          v50[4] = v198;
          v134 = *(void **)&v132[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
          v135 = *(_QWORD *)&v132[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
          v136 = (_QWORD *)swift_allocObject(&unk_1005CF190, 48, 7);
          v136[2] = sub_1000ABCAC;
          v136[3] = v50;
          v136[4] = v131;
          v136[5] = v132;
          v208 = sub_1000ACB00;
          v209 = v136;
          aBlock = _NSConcreteStackBlock;
          v205 = 1107296256;
          v206 = sub_10002E508;
          v207 = &unk_1005CF1A8;
          v137 = _Block_copy(&aBlock);
          v138 = v209;
          v139 = v132;
          swift_retain();
          v140 = v139;
          swift_retain();
          v141 = v131;
          swift_release(v138);
          objc_msgSend(v134, "retrieveSourcesForConfiguration:usingBlock:", v135, v137);
          _Block_release(v137);
          swift_release(v197);
          swift_release(v133);

          goto LABEL_16;
        }
        v50 = (_QWORD *)swift_allocObject(&unk_1005CF0F0, 40, 7);
        v51 = v198;
        v50[2] = sub_1000ABDC0;
        v50[3] = v51;
        v52 = v196;
        v50[4] = v196;
        v53 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v142 = (_QWORD *)swift_allocObject(&unk_1005CF118, 40, 7);
        v142[2] = sub_1000ABB40;
        v142[3] = v50;
        v142[4] = v52;
        v208 = sub_1000AB9A4;
        v209 = v142;
        aBlock = _NSConcreteStackBlock;
        v205 = 1107296256;
        v55 = &unk_1005CF130;
LABEL_15:
        v206 = sub_10002E508;
        v207 = v55;
        v56 = _Block_copy(&aBlock);
        v57 = v209;
        v58 = v52;
        swift_retain();
        swift_retain();
        swift_release(v57);
        objc_msgSend(v53, "retrieveAllSourcesCompletionBlock:", v56);
        _Block_release(v56);
        swift_release(v197);
        swift_release(v51);
LABEL_16:
        v59 = v50;
        goto LABEL_17;
      }
      v113 = swift_allocObject(&unk_1005CF1E0, 17, 7);
      v187 = v113;
      *(_BYTE *)(v113 + 16) = 0;
      v114 = (_BYTE *)(v113 + 16);
      v115 = swift_allocObject(&unk_1005CF1E0, 17, 7);
      v182 = v115;
      *(_BYTE *)(v115 + 16) = 0;
      v116 = (_BYTE *)(v115 + 16);
      v184 = swift_allocObject(&unk_1005CF208, 24, 7);
      *(_QWORD *)(v184 + 16) = 0;
      v117 = swift_allocObject(&unk_1005CF1E0, 17, 7);
      v183 = v117;
      *(_BYTE *)(v117 + 16) = 0;
      v181 = (_BYTE *)(v117 + 16);
      v118 = dispatch_group_create();
      ObjectType = swift_getObjectType(v185, v119);
      if ((DOCNode.isFPItem.getter(ObjectType) & 1) == 0
        || (v121 = objc_msgSend(v185, "fpfs_fpItem")) == 0)
      {
        *v114 = 1;
        *v116 = 1;
        goto LABEL_54;
      }
      v122 = v121;
      dispatch_group_enter(v118);
      v123 = (_QWORD *)swift_allocObject(&unk_1005CF320, 40, 7);
      v124 = v187;
      v125 = v182;
      v123[2] = v187;
      v123[3] = v125;
      v123[4] = v118;
      swift_retain_n(v124, 2);
      swift_retain_n(v125, 2);
      v126 = v118;
      if ((objc_msgSend(v122, "isRootItem") & 1) == 0
        && !objc_msgSend(v122, "isCollaborationInvitation"))
      {
        v143 = swift_allocObject(&unk_1005CF348, 32, 7);
        *(_QWORD *)(v143 + 16) = sub_1001F0B5C;
        *(_QWORD *)(v143 + 24) = v123;
        v144 = swift_retain();
        FPItemManager.doc_refetchItem(_:completion:)(v122, sub_1001F0B68, v143, v144);
        swift_release(v187);
        swift_release(v123);
        v130 = (_QWORD *)v143;
        goto LABEL_53;
      }
      v127 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      *v12 = static OS_dispatch_queue.main.getter(v127);
      v80 = v186;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v186 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v10);
      v128 = _dispatchPreconditionTest(_:)(v12);
      (*(void (**)(_QWORD *, uint64_t))(v80 + 8))(v12, v10);
      if ((v128 & 1) != 0)
      {
        swift_beginAccess(v114, v200, 1, 0);
        v129 = v187;
        *(_BYTE *)(v187 + 16) = 1;
        swift_beginAccess(v116, v199, 1, 0);
        *v116 = 1;
        dispatch_group_leave(v126);
        swift_release(v129);
        v130 = v123;
LABEL_53:
        swift_release(v130);

        swift_release(v182);
LABEL_54:
        dispatch_group_enter(v118);
        v145 = (_QWORD *)swift_allocObject(&unk_1005CF230, 40, 7);
        v146 = v184;
        v147 = v183;
        v145[2] = v184;
        v145[3] = v147;
        v145[4] = v118;
        v148 = *(void **)&v194[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v149 = (_QWORD *)swift_allocObject(&unk_1005CF258, 40, 7);
        v149[2] = sub_1000ABB70;
        v149[3] = v145;
        v150 = v196;
        v149[4] = v196;
        v208 = sub_1001F6B30;
        v209 = v149;
        aBlock = _NSConcreteStackBlock;
        v205 = 1107296256;
        v206 = sub_10002E508;
        v207 = &unk_1005CF270;
        v151 = _Block_copy(&aBlock);
        v152 = v209;
        v153 = v150;
        v196 = v118;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release(v152);
        objc_msgSend(v148, "retrieveAllSourcesCompletionBlock:", v151);
        _Block_release(v151);
        swift_release(v145);
        v154 = swift_allocObject(&unk_1005CEFC0, 24, 7);
        swift_unknownObjectWeakInit(v154 + 16);
        v155 = (_QWORD *)swift_allocObject(&unk_1005CF2A8, 72, 7);
        v155[2] = v154;
        v155[3] = v146;
        v155[4] = v187;
        v155[5] = v153;
        v155[6] = v185;
        v155[7] = sub_1000ABDC0;
        v155[8] = v198;
        swift_beginAccess(v116, v203, 0, 0);
        if (*v116 == 1)
        {
          v156 = v181;
          swift_beginAccess(v181, v201, 0, 0);
          if (*v156 == 1)
          {
            v157 = v197;
            swift_retain();
            v158 = v153;
            v159 = v198;
            swift_retain();
            v160 = v187;
            swift_retain();
            v161 = v184;
            swift_retain();
            swift_retain();
            v162 = v185;
            swift_unknownObjectRetain(v185);
            sub_1001EEAB0(v154, v161, v160, v158, v162, v195, v157);
            swift_release(v159);
            swift_release(v160);
            swift_release(v182);
            swift_release(v161);
            swift_release(v183);
            swift_unknownObjectRelease(v162);
            swift_release(v155);
            swift_release(v154);

            swift_release_n(v157, 2, v163);
            return;
          }
        }
        sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        v164 = v153;
        v165 = v198;
        swift_retain();
        swift_retain();
        swift_retain();
        v166 = v185;
        v167 = swift_unknownObjectRetain(v185);
        v168 = (void *)static OS_dispatch_queue.main.getter(v167);
        v169 = swift_allocObject(&unk_1005CF2D0, 32, 7);
        *(_QWORD *)(v169 + 16) = sub_1001F0B4C;
        *(_QWORD *)(v169 + 24) = v155;
        v208 = sub_10010DF60;
        v209 = (_QWORD *)v169;
        aBlock = _NSConcreteStackBlock;
        v205 = 1107296256;
        v206 = sub_10004A82C;
        v207 = &unk_1005CF2E8;
        v170 = _Block_copy(&aBlock);
        swift_retain();
        v171 = v188;
        static DispatchQoS.unspecified.getter(v172);
        v202 = _swiftEmptyArrayStorage;
        v173 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v174 = sub_10006922C((uint64_t *)&unk_100647540);
        v175 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
        v176 = v191;
        v177 = v174;
        v178 = v193;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v202, v177, v175, v193, v173);
        v179 = v196;
        OS_dispatch_group.notify(qos:flags:queue:execute:)(v171, v176, v168, v170);
        _Block_release(v170);

        swift_unknownObjectRelease(v166);
        swift_release(v155);

        (*(void (**)(char *, uint64_t))(v192 + 8))(v176, v178);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v171, v190);
        v180 = v209;
        swift_release(v197);
        swift_release(v165);
        swift_release(v187);
        swift_release(v182);
        swift_release(v184);
        swift_release(v183);
        v59 = v180;
LABEL_17:
        swift_release(v59);
        return;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n(v80, 2);
    goto LABEL_60;
  }
  swift_bridgeObjectRelease_n(v24, 2);
LABEL_5:

  v30 = Logger.UI.unsafeMutableAddressor(v29);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v30, v13);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "We don't have to prepare the parent hierarchy for Empty Location", v34, 2u);
    swift_slowDealloc(v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  v35 = v196;
  v36 = v197;
  ((void (*)(void))v195)();
  swift_release(v36);
  swift_release(v198);

}

uint64_t type metadata accessor for DOCNavigationBar()
{
  return objc_opt_self(_TtC5Files16DOCNavigationBar);
}

void sub_10003F554()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  char *v3;
  unint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v1)
    goto LABEL_59;
  v2 = v0;
  v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors];
    swift_bridgeObjectRetain(v4);
  }
  else
  {
    v5 = v3;
    v6 = objc_msgSend(v5, "sortDescriptors");
    v7 = sub_10004F2F0(0, &qword_100645410, NSSortDescriptor_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  }
  v8 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8];
  if (v9)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8], 2);
    v10 = sub_1000882C4(v9, v4);
    swift_bridgeObjectRelease_n(v9, 2);
    swift_bridgeObjectRelease(v4);
    if ((v10 & 1) != 0)
      return;
  }
  else
  {
    swift_bridgeObjectRelease(v4);
  }
  v12 = *(_QWORD *)v8;
  v11 = *((_QWORD *)v8 + 1);
  v13 = *((_QWORD *)v8 + 2);
  if (v11)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v8 + 1));
    swift_bridgeObjectRetain(v13);
    sub_10002F3B0(0);
    sub_100197D0C();
    v14 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                    + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
    v15 = swift_bridgeObjectRetain(v14);
    v16 = Array<A>.displayableModes.getter(v15);
    swift_bridgeObjectRelease(v14);
    LOBYTE(v14) = sub_10000F258(0x5040302010000uLL >> (8 * v12), v16);
    swift_bridgeObjectRelease(v16);
    if ((v14 & 1) == 0)
    {
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v11);
      v19 = *(_QWORD *)v8;
      v20 = *((_QWORD *)v8 + 1);
      v21 = *((_QWORD *)v8 + 2);
      *((_QWORD *)v8 + 1) = 0;
      *((_QWORD *)v8 + 2) = 0;
      *(_QWORD *)v8 = 0;
      v8[24] = 0;
      sub_100144F34(v19, v20, v21);
      return;
    }
    v17 = *(void **)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v13);
      sub_1000B0EFC(v17, v18, 1);
      sub_10032F49C(v11, v13);
      swift_bridgeObjectRelease(v11);
      sub_100008A60(v17, v18, 1);
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      sub_10004F2F0(0, &qword_100645410, NSSortDescriptor_ptr);
      v22 = v17;
      swift_bridgeObjectRetain(v11);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "reorderItemsWithSortDescriptors:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    }
    sub_100144F34(v12, v11, v13);
    v24 = sub_10004FD50();
    v25 = v24;
    if ((unint64_t)v24 >> 62)
    {
      if (v24 >= 0)
        v24 &= 0xFFFFFFFFFFFFFF8uLL;
      v26 = _CocoaArrayWrapper.endIndex.getter(v24);
    }
    else
    {
      v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v25);
    if (!v26 && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0)
      _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
  }
  else
  {
    DOCNodeCollection.reorderItems(with:)(*(_QWORD *)v8, 0, *((void **)v8 + 2));
  }
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    v27 = (uint64_t)sub_100033CA4();
    v28 = v27;
    if ((unint64_t)v27 >> 62)
    {
      if (v27 >= 0)
        v27 &= 0xFFFFFFFFFFFFFF8uLL;
      v29 = _CocoaArrayWrapper.endIndex.getter(v27);
      if (!v29)
        goto LABEL_34;
    }
    else
    {
      v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v29)
      {
LABEL_34:
        swift_bridgeObjectRelease(v28);
        v42 = (uint64_t)sub_10017A578();
        if ((unint64_t)v42 >> 62)
          goto LABEL_50;
        v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
        while (v43)
        {
          v63 = v42;
          v64 = v42 & 0xC000000000000001;
          v44 = 4;
          v62 = v43;
          while (1)
          {
            v45 = v64
                ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v44 - 4, v42)
                : *(id *)(v42 + 8 * v44);
            v46 = v45;
            v47 = v44 - 3;
            if (__OFADD__(v44 - 4, 1))
              break;
            v48 = (*(uint64_t (**)(void))((swift_isaMask & *v45) + 0x1F8))();
            if (v48)
            {
              v49 = (char *)v48;
              v50 = *(_QWORD *)v8;
              v51 = *((_QWORD *)v8 + 1);
              v52 = *((_QWORD *)v8 + 2);
              v53 = &v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
              v54 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
              v55 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor + 8];
              v56 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor + 16];
              v57 = v8[24];
              *(_QWORD *)v53 = *(_QWORD *)v8;
              *((_QWORD *)v53 + 1) = v51;
              *((_QWORD *)v53 + 2) = v52;
              v53[24] = v57;
              sub_1001CEF88(v50, v51, v52);
              sub_100144F34(v54, v55, v56);
              v58 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
              v59 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
              if ((v59 & 0x200) == 0)
              {
                v59 |= 0x200uLL;
                *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v59;
              }
              if (!*(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
                && !sub_10007BAFC())
              {
                *(_QWORD *)&v49[v58] = 0;
                v60 = objc_autoreleasePoolPush();
                sub_10006D2D4(v59, (uint64_t)v49);
                objc_autoreleasePoolPop(v60);
              }

              v43 = v62;
              v42 = v63;
            }

            ++v44;
            if (v47 == v43)
              goto LABEL_54;
          }
          __break(1u);
LABEL_50:
          if (v42 < 0)
            v61 = v42;
          else
            v61 = v42 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v42);
          v43 = _CocoaArrayWrapper.endIndex.getter(v61);
          swift_bridgeObjectRelease(v42);
        }
LABEL_54:
        swift_bridgeObjectRelease(v42);
        return;
      }
    }
    if (v29 >= 1)
    {
      v30 = 0;
      do
      {
        if ((v28 & 0xC000000000000001) != 0)
          v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v28);
        else
          v31 = (char *)*(id *)(v28 + 8 * v30 + 32);
        v32 = v31;
        ++v30;
        v33 = *(_QWORD *)v8;
        v34 = *((_QWORD *)v8 + 1);
        v35 = *((_QWORD *)v8 + 2);
        v36 = &v32[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
        v37 = *(_QWORD *)&v32[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
        v38 = *(_QWORD *)&v32[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8];
        v39 = *(_QWORD *)&v32[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 16];
        v40 = v8[24];
        *(_QWORD *)v36 = *(_QWORD *)v8;
        *((_QWORD *)v36 + 1) = v34;
        *((_QWORD *)v36 + 2) = v35;
        v41 = v36[24];
        v36[24] = v40;
        sub_1001CEF88(v33, v34, v35);
        sub_1001CEF88(v37, v38, v39);
        sub_100144F34(v37, v38, v39);
        sub_1004235B4(v37, v38, v39, v41);
        sub_100144F34(v37, v38, v39);

      }
      while (v29 != v30);
      goto LABEL_34;
    }
    __break(1u);
LABEL_59:
    __break(1u);
  }
}

void sub_10003FB80(uint64_t a1)
{
  id WeakRetained;
  DOCSourceObserverInfos *v3;
  void *v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v6 = WeakRetained;
    v3 = objc_opt_new(DOCSourceObserverInfos);
    -[DOCSourceObserverInfos setBlock:](v3, "setBlock:", *(_QWORD *)(a1 + 48));
    -[DOCSourceObserverInfos setToken:](v3, "setToken:", *(_QWORD *)(a1 + 32));
    -[DOCSourceObserverInfos setConfiguration:](v3, "setConfiguration:", *(_QWORD *)(a1 + 40));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "sourcesSubscribers"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, v5);

    if (objc_msgSend(v6, "hasReceivedFirstFullUpdate"))
      objc_msgSend(v6, "notifySubscriber:", v3);

    WeakRetained = v6;
  }

}

double sub_10003FC44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  char *v32;
  double v33;
  double MinY;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  void *v39;
  objc_class *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  char *v45;
  double v46;
  double v48;
  double MaxY;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  void *v54;
  objc_class *v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  char *v61;
  double v62;
  objc_super v63;
  objc_super v64;
  objc_super v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;

  if (*(_BYTE *)v2 != 1)
    return 0.0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 32, a2);
  if (!Strong)
    return 0.0;
  v4 = Strong;
  v5 = objc_msgSend(Strong, "collectionView");
  if (!v5)
  {
LABEL_24:

    return 0.0;
  }
  v6 = v5;
  v7 = type metadata accessor for DOCItemCollectionView();
  v8 = (void *)swift_dynamicCastClass(v6, v7);
  if (!v8)
  {

    goto LABEL_24;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  objc_msgSend(v9, "_effectiveContentInset");
  v15 = v14;
  objc_msgSend(v9, "safeAreaInsets");
  v17 = v15 + v16;
  v19 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 32, v18);
  v21 = 0.0;
  v22 = 0.0;
  v23 = 0.0;
  if (v19)
  {
    v24 = v19;
    v63.receiver = v19;
    v63.super_class = (Class)type metadata accessor for DOCCollectionViewCompositionalLayout();
    objc_msgSendSuper2(&v63, "collectionViewContentSize");
    v26 = v25;
    v28 = v27;

    if (*(double *)(v2 + 16) > v26)
      v22 = *(double *)(v2 + 16);
    else
      v22 = v26;
    if (*(double *)(v2 + 24) > v28)
      v23 = *(double *)(v2 + 24);
    else
      v23 = v28;
  }
  v29 = v13 - v17;
  v30 = *(double *)(v2 + 8);
  v31 = v23 - v30;
  v32 = (char *)swift_unknownObjectWeakLoadStrong(v2 + 32, v20);
  if (v32)
  {
    v21 = *(double *)&v32[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];

  }
  v66.origin.y = v31 + v21;
  v66.size.height = v30 - v21;
  v33 = 0.0;
  v66.origin.x = 0.0;
  v66.size.width = v22;
  MinY = CGRectGetMinY(v66);
  v67.origin.x = 0.0;
  v67.origin.y = 0.0;
  v67.size.width = v11;
  v67.size.height = v29;
  if (MinY >= CGRectGetMaxY(v67))
    goto LABEL_38;
  v36 = swift_unknownObjectWeakLoadStrong(v2 + 32, v35);
  v38 = 0.0;
  if (v36)
  {
    v39 = (void *)v36;
    v40 = (objc_class *)type metadata accessor for DOCCollectionViewCompositionalLayout();
    v64.receiver = v39;
    v64.super_class = v40;
    objc_msgSendSuper2(&v64, "collectionViewContentSize");
    v33 = v41;
    v43 = v42;

    if (*(double *)(v2 + 16) > v33)
      v33 = *(double *)(v2 + 16);
    if (*(double *)(v2 + 24) > v43)
      v38 = *(double *)(v2 + 24);
    else
      v38 = v43;
  }
  v44 = v38 - v30;
  v45 = (char *)swift_unknownObjectWeakLoadStrong(v2 + 32, v37);
  if (v45)
  {
    v46 = *(double *)&v45[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];

  }
  else
  {
    v46 = 0.0;
  }
  v68.origin.y = v44 + v46;
  v68.size.height = v30 - v46;
  v48 = 0.0;
  v68.origin.x = 0.0;
  v68.size.width = v33;
  MaxY = CGRectGetMaxY(v68);
  v69.origin.x = 0.0;
  v69.origin.y = 0.0;
  v69.size.width = v11;
  v69.size.height = v29;
  if (CGRectGetMaxY(v69) >= MaxY)
  {
LABEL_38:

  }
  else
  {
    v51 = swift_unknownObjectWeakLoadStrong(v2 + 32, v50);
    v53 = 0.0;
    if (v51)
    {
      v54 = (void *)v51;
      v55 = (objc_class *)type metadata accessor for DOCCollectionViewCompositionalLayout();
      v65.receiver = v54;
      v65.super_class = v55;
      objc_msgSendSuper2(&v65, "collectionViewContentSize");
      v57 = v56;
      v59 = v58;

      if (*(double *)(v2 + 16) > v57)
        v48 = *(double *)(v2 + 16);
      else
        v48 = v57;
      if (*(double *)(v2 + 24) > v59)
        v53 = *(double *)(v2 + 24);
      else
        v53 = v59;
    }
    v60 = v53 - v30;
    v61 = (char *)swift_unknownObjectWeakLoadStrong(v2 + 32, v52);
    if (v61)
    {
      v62 = *(double *)&v61[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];

    }
    else
    {
      v62 = 0.0;
    }
    v70.origin.y = v60 + v62;
    v70.size.height = v30 - v62;
    v70.origin.x = 0.0;
    v70.size.width = v48;
    CGRectGetHeight(v70);

  }
  return v11;
}

_QWORD *destroy for DOCBrowserHistoryItem(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6]));
  result = (_QWORD *)(a1 + a2[9]);
  if (result[3])
    return (_QWORD *)sub_100068588(result);
  return result;
}

id sub_10003FFC8(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  void *v10;
  _BYTE *v11;
  NSString *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  objc_super v18;

  v4[OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton] = 0;
  v4[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance] = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle] = UIFontTextStyleBody;
  v9 = OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  v12 = UIFontTextStyleBody;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "secondaryLabelColor");
  v13 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor;
  v14 = (void *)objc_opt_self(DOCDownloadProgressView);
  *(_QWORD *)&v11[v13] = objc_msgSend(v14, "defaultProgressColor");
  v15 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor;
  *(_QWORD *)&v11[v15] = objc_msgSend(v14, "defaultTrackColor");
  v16 = &v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics];
  *v16 = 0;
  v16[1] = 2;
  v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress] = 0;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for DOCItemStatusView();
  return objc_msgSendSuper2(&v18, "initWithFrame:", a1, a2, a3, a4);
}

uint64_t sub_10004014C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unsigned __int8 v20;

  v3 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_nodeCollection, a2);
  if (!Strong)
    return 0;
  v5 = (void *)Strong;
  v6 = sub_10004FD50();
  v7 = v6;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 >= 0)
      v6 &= 0xFFFFFFFFFFFFFF8uLL;
    v8 = _CocoaArrayWrapper.endIndex.getter(v6);
  }
  else
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v7);
  v9._object = (void *)0x8000000100513540;
  v10._countAndFlagsBits = 0x54492E544349442ELL;
  v10._object = (void *)0xEE0064252E534D45;
  v9._countAndFlagsBits = 0xD00000000000002ALL;
  v11 = DOCLocalizedDictionaryString(_:comment:)(v10, v9);
  v12 = sub_10006922C((uint64_t *)&unk_100644560);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v13 + 56) = &type metadata for Int;
  *(_QWORD *)(v13 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v13 + 32) = v8;
  v14 = static String.localizedStringWithFormat(_:_:)(v11._countAndFlagsBits, v11._object, v13);
  v16 = v15;
  swift_bridgeObjectRelease(v11._object);
  swift_bridgeObjectRelease(v13);
  v17 = v3 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration;
  v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration + 24);
  if (v18)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    v19 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
    LOBYTE(v18) = static NSObject.== infix(_:_:)(v18, v19);

  }
  v20 = objc_msgSend(v5, "isGathering");

  if ((v20 & 1) != 0 || *(_BYTE *)(v17 + 16) != 2 || (v18 & 1) != 0 || v8 <= 0)
  {
    swift_bridgeObjectRelease(v16);
    return 0;
  }
  return v14;
}

void sub_100040340(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  void *v48;
  _QWORD *v49;
  void *v50;
  void *v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  _QWORD *v90;
  void (*v91)(void);
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void (*v105)(void);
  id v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  void *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  _QWORD *v124;
  id v125;
  char *v126;
  void (*v127)(void);
  void *v128;
  uint64_t v129;
  _QWORD *v130;
  void *v131;
  _QWORD *v132;
  char *v133;
  char *v134;
  id v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  __n128 v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  _QWORD *v144;
  id v145;
  void *v146;
  _QWORD *v147;
  id v148;
  NSObject *v149;
  uint64_t v150;
  _QWORD *v151;
  void (*v152)(void);
  _BYTE *v153;
  _BYTE *v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  id v160;
  id v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  void *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  uint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  id ObjectType;
  char *v188;
  id v189;
  void (*v190)(void);
  uint64_t v191;
  char v192[24];
  char v193[24];
  char v194[24];
  _QWORD *v195;
  char v196[24];
  void **aBlock;
  uint64_t v198;
  void *v199;
  void *v200;
  uint64_t (*v201)();
  _QWORD *v202;

  v191 = a4;
  v190 = a3;
  LODWORD(v180) = a2;
  ObjectType = (id)swift_getObjectType(v4, a2);
  v186 = type metadata accessor for DispatchWorkItemFlags(0);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v184 = (char *)&v174 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = type metadata accessor for DispatchQoS(0);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v181 = (char *)&v174 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchPredicate(0);
  v179 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (_BYTE **)((char *)&v174 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v174 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v174 - v16;
  v189 = a1;
  v18 = objc_msgSend(a1, "sourceIdentifier");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierEmptyLocation);
  v21 = v20;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v24 = v22;
  if (v19 != v23 || v21 != v22)
  {
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v24);
    if ((v25 & 1) != 0)
      goto LABEL_5;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTaggedItems);
    v34 = v33;
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v37 = v35;
    if (v32 == v36 && v34 == v35)
      goto LABEL_10;
    v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v35, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v37);
    if ((v38 & 1) != 0)
      goto LABEL_12;
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTrashedItems);
    v34 = v55;
    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v58 = v56;
    if (v54 == v57 && v34 == v56)
      goto LABEL_10;
    v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v34, v57, v56, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v58);
    if ((v59 & 1) != 0)
      goto LABEL_12;
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
    v34 = v61;
    v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v64 = v62;
    if (v60 == v63 && v34 == v62)
      goto LABEL_10;
    v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v34, v63, v62, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v64);
    if ((v65 & 1) != 0)
      goto LABEL_12;
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
    v34 = v67;
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v70 = v68;
    if (v66 == v69 && v34 == v68)
    {
LABEL_10:
      swift_bridgeObjectRelease_n(v34, 2);
LABEL_12:

      v40 = Logger.UI.unsafeMutableAddressor(v39);
      v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v40, v11);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "We don't have to prepare the parent hierarchy for Tags/Trash/RecentsOnly/SharedItems", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      v45 = (_QWORD *)swift_allocObject(&unk_1005D0090, 40, 7);
      v46 = v191;
      v45[2] = v190;
      v45[3] = v46;
      v47 = v189;
      v45[4] = v189;
      v48 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
      v49 = (_QWORD *)swift_allocObject(&unk_1005D00B8, 40, 7);
      v49[2] = sub_1000ABB40;
      v49[3] = v45;
      v49[4] = v47;
      v201 = (uint64_t (*)())sub_1001F6B30;
      v202 = v49;
      aBlock = _NSConcreteStackBlock;
      v198 = 1107296256;
      v50 = &unk_1005D00D0;
LABEL_15:
      v199 = sub_10002E508;
      v200 = v50;
      v51 = _Block_copy(&aBlock);
      v52 = v202;
      v53 = v47;
      swift_retain();
      swift_retain();
      swift_release(v52);
      objc_msgSend(v48, "retrieveAllSourcesCompletionBlock:", v51);
      _Block_release(v51);
      goto LABEL_16;
    }
    v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v34, v69, v68, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v70);
    if ((v71 & 1) != 0)
      goto LABEL_12;
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSearch);
    v74 = v73;
    v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v77 = v75;
    if (v72 != v76 || v74 != v75)
    {
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74, v76, v75, 0);
      swift_bridgeObjectRelease(v74);
      swift_bridgeObjectRelease(v77);
      if ((v78 & 1) != 0)
      {
LABEL_59:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x8000000100517D80, "Files/DOCHierarchyController.swift", 34, 2, 1451, 0);
        __break(1u);
        return;
      }
      v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierDefaultSaveLocation);
      v81 = v80;
      v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v84 = v82;
      if (v79 == v83 && v81 == v82)
      {
        swift_bridgeObjectRelease_n(v81, 2);
LABEL_33:

        v86 = v188;
        v87 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        v88 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v89 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        v90 = (_QWORD *)swift_allocObject(&unk_1005D0068, 40, 7);
        v91 = v190;
        v90[2] = v86;
        v90[3] = v91;
        v90[4] = v191;
        v92 = v89;
        v93 = v86;
        swift_retain();
        sub_1001E44F4(v87, v88, v89, (uint64_t)sub_1001F688C, (uint64_t)v90);
LABEL_34:

        swift_release(v90);
        return;
      }
      v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v81, v83, v82, 0);
      swift_bridgeObjectRelease(v81);
      swift_bridgeObjectRelease(v84);
      if ((v85 & 1) != 0)
        goto LABEL_33;
      v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierDefaultLocation);
      v96 = v95;
      v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v99 = v97;
      if (v94 == v98 && v96 == v97)
      {

        swift_bridgeObjectRelease_n(v96, 2);
LABEL_39:
        v101 = v188;
        v102 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        v103 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v104 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        v90 = (_QWORD *)swift_allocObject(&unk_1005D0040, 40, 7);
        v105 = v190;
        v90[2] = v101;
        v90[3] = v105;
        v90[4] = v191;
        v92 = v104;
        swift_retain();
        v106 = v101;
        sub_1000AC5A0(v102, v103, v104, (uint64_t)sub_1001F6888, (uint64_t)v90);
        goto LABEL_34;
      }
      v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v96, v98, v97, 0);

      swift_bridgeObjectRelease(v96);
      swift_bridgeObjectRelease(v99);
      if ((v100 & 1) != 0)
        goto LABEL_39;
      ObjectType = objc_msgSend(v189, "node");
      if (!ObjectType)
      {
        if ((v180 & 1) != 0)
        {
          v125 = objc_msgSend(v189, "sourceIdentifier");
          v45 = (_QWORD *)swift_allocObject(&unk_1005CFE88, 40, 7);
          v126 = v188;
          v127 = v190;
          v45[2] = v188;
          v45[3] = v127;
          v45[4] = v191;
          v128 = *(void **)&v126[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
          v129 = *(_QWORD *)&v126[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
          v130 = (_QWORD *)swift_allocObject(&unk_1005CFEB0, 48, 7);
          v130[2] = sub_1001F687C;
          v130[3] = v45;
          v130[4] = v125;
          v130[5] = v126;
          v201 = sub_1001F6A24;
          v202 = v130;
          aBlock = _NSConcreteStackBlock;
          v198 = 1107296256;
          v199 = sub_10002E508;
          v200 = &unk_1005CFEC8;
          v131 = _Block_copy(&aBlock);
          v132 = v202;
          v133 = v126;
          swift_retain();
          v134 = v133;
          swift_retain();
          v135 = v125;
          swift_release(v132);
          objc_msgSend(v128, "retrieveSourcesForConfiguration:usingBlock:", v129, v131);
          _Block_release(v131);

          goto LABEL_16;
        }
        v45 = (_QWORD *)swift_allocObject(&unk_1005CFE10, 40, 7);
        v136 = v191;
        v45[2] = v190;
        v45[3] = v136;
        v47 = v189;
        v45[4] = v189;
        v48 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v137 = (_QWORD *)swift_allocObject(&unk_1005CFE38, 40, 7);
        v137[2] = sub_1000ABB40;
        v137[3] = v45;
        v137[4] = v47;
        v201 = (uint64_t (*)())sub_1001F6B30;
        v202 = v137;
        aBlock = _NSConcreteStackBlock;
        v198 = 1107296256;
        v50 = &unk_1005CFE50;
        goto LABEL_15;
      }
      v107 = swift_allocObject(&unk_1005CF1E0, 17, 7);
      v180 = v107;
      *(_BYTE *)(v107 + 16) = 0;
      v108 = (_BYTE *)(v107 + 16);
      v109 = swift_allocObject(&unk_1005CF1E0, 17, 7);
      v175 = v109;
      *(_BYTE *)(v109 + 16) = 0;
      v176 = (_BYTE *)(v109 + 16);
      v178 = swift_allocObject(&unk_1005CF208, 24, 7);
      *(_QWORD *)(v178 + 16) = 0;
      v110 = swift_allocObject(&unk_1005CF1E0, 17, 7);
      v177 = v110;
      *(_BYTE *)(v110 + 16) = 0;
      v174 = (_BYTE *)(v110 + 16);
      v111 = dispatch_group_create();
      v113 = swift_getObjectType(ObjectType, v112);
      if ((DOCNode.isFPItem.getter(v113) & 1) == 0
        || (v114 = objc_msgSend(ObjectType, "fpfs_fpItem")) == 0)
      {
        *v108 = 1;
        *v176 = 1;
        goto LABEL_53;
      }
      v115 = v114;
      dispatch_group_enter(v111);
      v116 = (_QWORD *)swift_allocObject(&unk_1005CFFF0, 40, 7);
      v117 = v180;
      v118 = v175;
      v116[2] = v180;
      v116[3] = v118;
      v116[4] = v111;
      swift_retain_n(v117, 2);
      swift_retain_n(v118, 2);
      v119 = v111;
      if ((objc_msgSend(v115, "isRootItem") & 1) == 0
        && !objc_msgSend(v115, "isCollaborationInvitation"))
      {
        v138 = swift_allocObject(&unk_1005D0018, 32, 7);
        *(_QWORD *)(v138 + 16) = sub_1001F6884;
        *(_QWORD *)(v138 + 24) = v116;
        v139 = swift_retain();
        FPItemManager.doc_refetchItem(_:completion:)(v115, sub_1001F6B28, v138, v139);
        swift_release(v180);
        swift_release(v116);
        v124 = (_QWORD *)v138;
        goto LABEL_52;
      }
      v120 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      *v10 = static OS_dispatch_queue.main.getter(v120);
      v121 = v179;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v179 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v8);
      v74 = _dispatchPreconditionTest(_:)(v10);
      (*(void (**)(_QWORD *, uint64_t))(v121 + 8))(v10, v8);
      if ((v74 & 1) != 0)
      {
        swift_beginAccess(v108, v193, 1, 0);
        v122 = v180;
        *(_BYTE *)(v180 + 16) = 1;
        v123 = v176;
        swift_beginAccess(v176, v192, 1, 0);
        *v123 = 1;
        dispatch_group_leave(v119);
        swift_release(v122);
        v124 = v116;
LABEL_52:
        swift_release(v124);

        swift_release(v175);
LABEL_53:
        dispatch_group_enter(v111);
        v140 = (_QWORD *)swift_allocObject(&unk_1005CFF00, 40, 7);
        v141 = v178;
        v142 = v177;
        v140[2] = v178;
        v140[3] = v142;
        v140[4] = v111;
        v143 = *(void **)&v188[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        v144 = (_QWORD *)swift_allocObject(&unk_1005CFF28, 40, 7);
        v144[2] = sub_1001F6880;
        v144[3] = v140;
        v145 = v189;
        v144[4] = v189;
        v201 = (uint64_t (*)())sub_1001F6B30;
        v202 = v144;
        aBlock = _NSConcreteStackBlock;
        v198 = 1107296256;
        v199 = sub_10002E508;
        v200 = &unk_1005CFF40;
        v146 = _Block_copy(&aBlock);
        v147 = v202;
        v148 = v145;
        v149 = v111;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release(v147);
        objc_msgSend(v143, "retrieveAllSourcesCompletionBlock:", v146);
        _Block_release(v146);
        swift_release(v140);
        v150 = swift_allocObject(&unk_1005CEFC0, 24, 7);
        swift_unknownObjectWeakInit(v150 + 16);
        v151 = (_QWORD *)swift_allocObject(&unk_1005CFF78, 72, 7);
        v151[2] = v150;
        v151[3] = v141;
        v151[4] = v180;
        v151[5] = v148;
        v152 = v190;
        v151[6] = ObjectType;
        v151[7] = v152;
        v151[8] = v191;
        v153 = v176;
        swift_beginAccess(v176, v196, 0, 0);
        if (*v153 == 1)
        {
          v154 = v174;
          swift_beginAccess(v174, v194, 0, 0);
          if (*v154 == 1)
          {
            v155 = v148;
            v156 = v191;
            swift_retain();
            v157 = v180;
            swift_retain();
            v158 = v178;
            swift_retain();
            swift_retain();
            v159 = ObjectType;
            swift_unknownObjectRetain(ObjectType);
            sub_100022A04(v150, v158, v157, (void (*)(_QWORD, _QWORD, _QWORD))v155, v159, v190, v156);
            swift_release(v157);
            swift_release(v175);
            swift_release(v158);
            swift_release(v177);
            swift_unknownObjectRelease(v159);
            swift_release(v151);
            swift_release(v150);

            return;
          }
        }
        sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        v160 = v148;
        swift_retain();
        swift_retain();
        swift_retain();
        v161 = ObjectType;
        v162 = swift_unknownObjectRetain(ObjectType);
        v163 = (void *)static OS_dispatch_queue.main.getter(v162);
        v164 = swift_allocObject(&unk_1005CFFA0, 32, 7);
        *(_QWORD *)(v164 + 16) = sub_1001F0B4C;
        *(_QWORD *)(v164 + 24) = v151;
        v201 = sub_10010DF60;
        v202 = (_QWORD *)v164;
        aBlock = _NSConcreteStackBlock;
        v198 = 1107296256;
        v199 = sub_10004A82C;
        v200 = &unk_1005CFFB8;
        v165 = _Block_copy(&aBlock);
        swift_retain();
        v166 = v181;
        static DispatchQoS.unspecified.getter(v167);
        v195 = _swiftEmptyArrayStorage;
        v168 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v169 = sub_10006922C((uint64_t *)&unk_100647540);
        v170 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
        v171 = v184;
        v172 = v169;
        v173 = v186;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v195, v172, v170, v186, v168);
        OS_dispatch_group.notify(qos:flags:queue:execute:)(v166, v171, v163, v165);
        _Block_release(v165);

        swift_unknownObjectRelease(v161);
        swift_release(v151);

        (*(void (**)(char *, uint64_t))(v185 + 8))(v171, v173);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v166, v183);
        v45 = v202;
        swift_release(v180);
        swift_release(v175);
        swift_release(v178);
        swift_release(v177);
LABEL_16:
        swift_release(v45);
        return;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n(v74, 2);
    goto LABEL_59;
  }
  swift_bridgeObjectRelease_n(v21, 2);
LABEL_5:

  v27 = Logger.UI.unsafeMutableAddressor(v26);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v27, v11);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "We don't have to prepare the parent hierarchy for Empty Location", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  ((void (*)(id, _QWORD))v190)(v189, 0);
}

void sub_1000415D4()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  unsigned int v12;

  v1 = objc_msgSend(v0, "arrangedSubviews");
  v2 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v8 = v3;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
    else
      v6 = *(id *)(v3 + 8 * v5 + 32);
    v7 = v6;
    ++v5;
    objc_msgSend(v0, "removeArrangedSubview:", v6);
    objc_msgSend(v7, "removeFromSuperview");

  }
  while (v4 != v5);
LABEL_13:
  swift_bridgeObjectRelease_n(v3, 2);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel])
    objc_msgSend(v0, "addArrangedSubview:");
  v9 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView])
    objc_msgSend(v0, "addArrangedSubview:");
  v10 = sub_1000159B4();
  objc_msgSend(v0, "addArrangedSubview:", v10);

  v11 = sub_1000159B4();
  v12 = objc_msgSend(v11, "isHidden");

  if (v12)
  {
    if (*(_QWORD *)&v0[v9])
      objc_msgSend(v0, "setCustomSpacing:afterView:", 11.0);
  }
}

void sub_1000417B0(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  double v20;
  id v21;
  uint64_t v22;
  char *v23;
  double v24;
  unsigned __int8 v25;
  id v26;
  double left;
  double bottom;
  double right;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  Swift::Int i;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BOOL8 Document;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id *updated;
  id v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  char *v87;
  uint64_t v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  int v95;
  int v96;
  int v97;
  id v98;
  uint64_t v99;
  id *v100;
  __int128 v101;
  id *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  _QWORD v106[23];

  v2 = v1;
  v104 = type metadata accessor for OSSignpostID(0);
  v4 = *(id **)(v104 - 8);
  __chkstk_darwin(v104);
  v103 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = (id *)DOCLog.UI.unsafeMutableAddressor(v6);
  v7 = *v102;
  v8 = static os_log_type_t.default.getter(v7);
  v105 = (char *)sub_10006922C((uint64_t *)&unk_100644560);
  v9 = swift_allocObject(v105, 72, 7);
  v101 = xmmword_1004D9670;
  *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
  v10 = *(char **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v10)
    goto LABEL_73;
  v11 = (_QWORD *)v9;
  v100 = v4;
  v12 = v10;
  if ((v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
    v12 = *(void **)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  v13 = v12;
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v11[7] = v14;
  v15 = sub_100083450((unint64_t *)&unk_100642720, (unint64_t *)&qword_100642430, NSObject_ptr);
  v11[8] = v15;
  v11[4] = v13;
  os_log(_:dso:log:type:_:)("Preloading content for item collection %@", 41, 2, &_mh_execute_header, v7, v8, v11);

  swift_bridgeObjectRelease(v11);
  sub_100028040();
  if (v16 != 0.0)
  {
    v18 = v17;
    if (v17 != 0.0)
    {
      if (*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits])
      {
        v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
      }
      else
      {
        v20 = v16;
        v21 = *v102;
        v22 = static os_log_type_t.error.getter(v21);
        v8 = swift_allocObject(v105, 72, 7);
        *(_OWORD *)(v8 + 16) = v101;
        if ((v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
          v10 = *(char **)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        v23 = v10;
        *(_QWORD *)(v8 + 56) = v14;
        *(_QWORD *)(v8 + 64) = v15;
        *(_QWORD *)(v8 + 32) = v23;
        os_log(_:dso:log:type:_:)("No collection view layout traits found, creating one (item collection: %@)", 74, 2, &_mh_execute_header, v21, v22, v8);

        *(_QWORD *)&v24 = swift_bridgeObjectRelease(v8).n128_u64[0];
        v25 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 16];
        v26 = objc_msgSend(v2, "traitCollection", v24);
        left = UIEdgeInsetsZero.left;
        bottom = UIEdgeInsetsZero.bottom;
        right = UIEdgeInsetsZero.right;
        v30 = type metadata accessor for DOCItemCollectionLayoutTraits();
        swift_allocObject(v30, 960, 7);
        v19 = sub_1002F31D0(v25, v26, v20, v18, UIEdgeInsetsZero.top, left, bottom, right);
      }
      *(_QWORD *)&v31 = swift_retain().n128_u64[0];
      sub_100098254(v31, v18);
      v33 = v32;
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0)
          v91 = a1;
        else
          v91 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v34 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease(a1);
      }
      else
      {
        v34 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v34 >= v33)
        v34 = v33;
      if (v34 < 0)
      {
        __break(1u);
      }
      else
      {
        v99 = v19;
        v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
        v19 = (unint64_t)v15 >> 62;
        if (!((unint64_t)v15 >> 62))
        {
          v35 = *(id *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController
                                                + 8]);
          if ((uint64_t)v35 >= v34)
            goto LABEL_18;
          goto LABEL_69;
        }
      }
      if (v15 < 0)
        v92 = v15;
      else
        v92 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      if (_CocoaArrayWrapper.endIndex.getter(v92) < 0)
        goto LABEL_74;
      swift_bridgeObjectRetain(v15);
      v35 = (id)_CocoaArrayWrapper.endIndex.getter(v92);
      swift_bridgeObjectRelease(v15);
      if ((uint64_t)v35 >= v34)
      {
LABEL_18:
        if (v34 && (v15 & 0xC000000000000001) != 0)
        {
          for (i = 0; i != v34; ++i)
          {
            sub_10006922C((uint64_t *)&unk_1006424B0);
            _ArrayBuffer._typeCheckSlowPath(_:)(i);
          }
        }
        if (v19)
        {
          if (v15 < 0)
            v40 = v15;
          else
            v40 = v15 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v15);
          v38 = _CocoaArrayWrapper.subscript.getter(0, v34, v40);
          v39 = v41;
          v37 = v42;
          v44 = v43;
          swift_bridgeObjectRelease_n(v15, 2);
          v34 = v44 >> 1;
        }
        else
        {
          v37 = 0;
          v38 = v15 & 0xFFFFFFFFFFFFFF8;
          v39 = (v15 & 0xFFFFFFFFFFFFFF8) + 32;
        }
        v15 = (uint64_t)_swiftEmptyArrayStorage;
        v106[0] = _swiftEmptyArrayStorage;
        v45 = v34 - v37;
        if (v34 == v37)
        {
          swift_unknownObjectRelease(v38);
          v8 = (uint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          if (v34 <= v37)
          {
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
            return;
          }
          v46 = (_QWORD *)(v39 + 8 * v37);
          do
          {
            v49 = *v46;
            swift_getObjectType(*v46);
            swift_unknownObjectRetain(v49);
            Document = DOCNode.isCreateDocumentSentinel()();
            if (Document)
            {
              swift_unknownObjectRelease(v49);
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(Document);
              v47 = *(_QWORD *)(v106[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v47);
              v48 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v49);
              specialized ContiguousArray._endMutation()(v48);
            }
            ++v46;
            --v45;
          }
          while (v45);
          swift_unknownObjectRelease(v38);
          v8 = v106[0];
        }
        v35 = *v102;
        static os_log_type_t.debug.getter(v35);
        v13 = (_OWORD *)swift_allocObject(v105, 72, 7);
        v13[1] = v101;
        v51 = ((unint64_t)v8 >> 62) & 1;
        if (v8 < 0)
          LODWORD(v51) = 1;
        LODWORD(v102) = v51;
        v105 = v2;
        if ((_DWORD)v51 != 1)
        {
          v52 = *(_QWORD *)(v8 + 16);
LABEL_41:
          *((_QWORD *)v13 + 7) = &type metadata for Int;
          *((_QWORD *)v13 + 8) = &protocol witness table for Int;
          *((_QWORD *)v13 + 4) = v52;
          os_log(_:dso:log:type:_:)("Preloading model for %d nodes", v97);

          swift_bridgeObjectRelease(v13);
          v54 = static os_signpost_type_t.begin.getter(v53);
          updated = (id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
          v56 = *updated;
          v57 = v103;
          static OSSignpostID.exclusive.getter();
          os_signpost(_:dso:log:name:signpostID:_:_:)(v54, &_mh_execute_header, v56, "Files-Preload", 13, 2, v57, "preloadThumbnails", 17, 2, v15);

          v58 = (void (*)(char *, uint64_t))v100[1];
          v59 = v104;
          v58(v57, v104);
          v60 = objc_msgSend(v105, "traitCollection", sub_10006B5D4((uint64_t)v106));
          sub_10000FE48(v8, (uint64_t)v106, v60);

          v61 = sub_10002A0C4((uint64_t)v106);
          v62 = static os_signpost_type_t.end.getter(v61);
          v63 = *updated;
          static OSSignpostID.exclusive.getter();
          LOBYTE(v94) = 2;
          os_signpost(_:dso:log:name:signpostID:_:_:)(v62, &_mh_execute_header, v63, "Files-Preload", 13, 2, v57, "preloadThumbnails", 17, v94, v15);

          v64 = ((uint64_t (*)(char *, uint64_t))v58)(v57, v59);
          v65 = static os_signpost_type_t.begin.getter(v64);
          v100 = updated;
          v66 = *updated;
          static OSSignpostID.exclusive.getter();
          LOBYTE(v95) = 2;
          os_signpost(_:dso:log:name:signpostID:_:_:)(v65, &_mh_execute_header, v66, "Files-Preload", 13, 2, v57, "prefetchCellContent", 19, v95, _swiftEmptyArrayStorage);

          *(_QWORD *)&v101 = v58;
          v58(v57, v59);
          v67 = (int)v102;
          if ((_DWORD)v102)
          {
            swift_retain();
            v69 = _CocoaArrayWrapper.endIndex.getter(v68);
            swift_release(v8);
          }
          else
          {
            v69 = *(_QWORD *)(v8 + 16);
          }
          v70 = v8;
          if (!v69)
          {
            swift_release(v8);
LABEL_57:
            v88 = static os_signpost_type_t.end.getter(v75);
            v89 = *v100;
            v90 = v103;
            static OSSignpostID.exclusive.getter();
            LOBYTE(v96) = 2;
            os_signpost(_:dso:log:name:signpostID:_:_:)(v88, &_mh_execute_header, v89, "Files-Preload", 13, 2, v90, "prefetchCellContent", 19, v96, _swiftEmptyArrayStorage);
            swift_release(v99);

            ((void (*)(char *, uint64_t))v101)(v90, v104);
            return;
          }
          v71 = *(_QWORD *)&v105[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
          v72 = *(void **)(v71 + 24);
          v105 = v105;
          objc_msgSend(v72, "lock");
          v98 = v72;
          if (v67)
          {
            v73 = swift_bridgeObjectRetain(v8);
            v74 = _CocoaArrayWrapper.endIndex.getter(v73);
            if (!v74)
              goto LABEL_56;
          }
          else
          {
            v74 = *(_QWORD *)(v8 + 16);
            swift_bridgeObjectRetain(v8);
            if (!v74)
            {
LABEL_56:
              *(_QWORD *)&v86 = swift_release(v70).n128_u64[0];
              objc_msgSend(v98, "unlock", v86);
              swift_release(v70);
              v87 = v105;

              goto LABEL_57;
            }
          }
          if (v74 >= 1)
          {
            v76 = 0;
            v77 = v8 & 0xC000000000000001;
            v78 = v70;
            do
            {
              if (v77)
              {
                v79 = specialized _ArrayBuffer._getElementSlowPath(_:)(v76, v70);
              }
              else
              {
                v79 = *(_QWORD *)(v70 + 8 * v76 + 32);
                swift_unknownObjectRetain(v79);
              }
              ++v76;
              v80 = v105;
              v81 = (void *)sub_100093940(v79, (uint64_t)sub_100015958, 0, v71, v80);
              v83 = v82;
              v85 = v84;

              sub_1000628C0(v81, v83, v85);
              swift_unknownObjectRelease(v79);
              v70 = v78;
            }
            while (v74 != v76);
            goto LABEL_56;
          }
          goto LABEL_72;
        }
LABEL_70:
        v93 = swift_bridgeObjectRetain(v8);
        v52 = _CocoaArrayWrapper.endIndex.getter(v93);
        swift_release(v8);
        goto LABEL_41;
      }
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
  }
}

double sub_1000422E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  objc_super v11;
  _BYTE v12[16];
  double v13;
  uint64_t v14;
  _BYTE v15[24];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = v2 + OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout;
  swift_beginAccess(v4, v15, 0, 0);
  sub_1000423F8(v4, (uint64_t)v12, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  v6 = (void *)swift_unknownObjectWeakLoadStrong(&v14, v5);
  if (v6)
  {
    v7 = v6;
    v11.receiver = v6;
    v11.super_class = ObjectType;
    objc_msgSendSuper2(&v11, "collectionViewContentSize");
    v9 = v8;

    if (v13 > v9)
      v9 = v13;
  }
  else
  {
    v9 = 0.0;
  }
  sub_1000423BC((uint64_t)v12);
  return v9;
}

uint64_t sub_1000423BC(uint64_t a1)
{
  destroy for DOCItemCollectionCoreFooterAwareLayout(a1);
  return a1;
}

uint64_t destroy for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1)
{
  return swift_unknownObjectWeakDestroy(a1 + 32);
}

uint64_t sub_1000423F8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  *(_BYTE *)a2 = *(_BYTE *)a1;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  a3(a2 + 32, a1 + 32);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  return a2;
}

void sub_100042448(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  void **v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char *v15;
  id *v16;
  id v17;
  id v18;
  id v19;
  char v20;
  id v21;
  char *v22;
  id *v23;
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];

  v2 = v1;
  v4 = type metadata accessor for DOCItemCollectionCell();
  v5 = (_QWORD *)swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = v5;
    v7 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x1F8))();
    if (v7)
    {
      v8 = (void *)v7;
      v9 = (void **)(v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v26, 0, 0);
      v10 = *v9;
      swift_unknownObjectRetain(v10);
      v11 = a1;

      if (!v10)
      {
LABEL_8:
        v18 = v11;
LABEL_13:

        return;
      }
      (*(void (**)(void))((swift_isaMask & *v6) + 0x210))();
      v12 = objc_msgSend(v10, "fpfs_fpItem");
      v13 = *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
      v14 = objc_msgSend(v13, "sceneIdentifier");
      v15 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v14);

      v16 = (id *)&v15[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
      swift_beginAccess(&v15[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem], v25, 0, 0);
      v17 = *v16;
      v18 = *v16;

      if (v12)
      {
        if (!v17)
        {
          swift_unknownObjectRelease(v10);

          v18 = v12;
          goto LABEL_13;
        }
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v19 = v12;
        v20 = static NSObject.== infix(_:_:)(v19, v18);

        if ((v20 & 1) == 0)
        {
          swift_unknownObjectRelease(v10);
          goto LABEL_8;
        }
      }
      else if (v17)
      {
LABEL_11:
        swift_unknownObjectRelease(v10);

        goto LABEL_13;
      }
      v21 = objc_msgSend(v13, "sceneIdentifier");
      v22 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v21);

      v23 = (id *)&v22[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
      swift_beginAccess(&v22[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem], v24, 1, 0);
      v18 = *v23;
      *v23 = 0;
      sub_10010EDA8(v18);

      goto LABEL_11;
    }
  }
}

uint64_t sub_100042688(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  void (**v20)(__n128);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned __int8 v25;
  _BOOL4 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  void (*v40)(__n128);
  void *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t result;
  void (**v45)(unint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  double v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD aBlock[5];
  uint64_t v77;
  char v78[32];

  v73 = a2;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v71 = *(_QWORD *)(v8 - 8);
  v72 = v8;
  __chkstk_darwin(v8);
  v70 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  __chkstk_darwin(v10);
  v67 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for DispatchTime(0);
  v64 = *(_QWORD *)(v66 - 8);
  v12 = __chkstk_darwin(v66);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v65 = (char *)&v64 - v15;
  v74 = v4;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider, v16);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = swift_allocObject(&unk_1005E6148, 32, 7);
    *(_QWORD *)(v19 + 16) = 0;
    v20 = (void (**)(__n128))(v19 + 16);
    *(_QWORD *)(v19 + 24) = 0;
    v21 = (_QWORD *)swift_allocObject(&unk_1005E6170, 48, 7);
    v21[2] = a3;
    v21[3] = a4;
    v21[4] = a1;
    v21[5] = v19;
    swift_beginAccess(v19 + 16, v78, 1, 0);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v19 + 16) = sub_10009D33C;
    *(_QWORD *)(v19 + 24) = v21;
    swift_retain();
    v24 = a1;
    swift_retain();
    sub_100087534(v22, v23);
    v25 = objc_msgSend(v18, "presentationContextShowsProvidersAsBrowserRoot");
    v75 = v18;
    if ((v25 & 1) != 0)
    {
      v26 = 0;
      v27 = (void *)v73;
    }
    else
    {
      v28 = sub_10005F27C();
      v29 = v28;
      if ((unint64_t)v28 >> 62)
      {
        if (v28 >= 0)
          v28 &= 0xFFFFFFFFFFFFFF8uLL;
        v30 = _CocoaArrayWrapper.endIndex.getter(v28);
      }
      else
      {
        v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v27 = (void *)v73;
      swift_bridgeObjectRelease(v29);
      v26 = v30 == 0;
    }
    v31 = objc_msgSend(v27, "sourceIdentifier");
    v32 = DOCDocumentSourceIdentifierPlaceholderLocation;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v35 = v34;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v38 = v36;
    if (v33 == v37 && v35 == v36)
      v39 = 1;
    else
      v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, v37, v36, 0);

    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v38);
    if (((v26 | v39) & 1) != 0)
    {
      v40 = *v20;
      v41 = v75;
      if (*v20)
      {
        v42 = *(_QWORD *)(v19 + 24);
        v43 = swift_retain();
        v40(v43);
        sub_100087534((uint64_t)v40, v42);
      }
      swift_release(v19);
      return swift_unknownObjectRelease(v41);
    }
    else
    {
      v45 = (void (**)(unint64_t))&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting];
      v46 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting];
      v47 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting + 8];
      *v45 = sub_10009D434;
      v45[1] = (void (*)(unint64_t))v19;
      swift_retain_n(v19, 2);
      sub_100087534(v46, v47);
      sub_1002C3DF0();
      swift_release(v19);
      v48 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v73 = static OS_dispatch_queue.main.getter(v48);
      static DispatchTime.now()(v73);
      objc_msgSend(*(id *)(v74 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_configuration), "thumbnailFetchingTimeOut");
      v49 = v65;
      + infix(_:_:)(v14, v50);
      v51 = *(void (**)(char *, uint64_t))(v64 + 8);
      v52 = v66;
      v51(v14, v66);
      aBlock[4] = sub_10009D3C8;
      v77 = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005E6188;
      v53 = _Block_copy(aBlock);
      v54 = v77;
      swift_retain();
      v55 = swift_release(v54);
      v56 = v67;
      static DispatchQoS.unspecified.getter(v55);
      aBlock[0] = _swiftEmptyArrayStorage;
      v57 = sub_10008BAAC();
      v58 = sub_10006922C((uint64_t *)&unk_100647540);
      v59 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v60 = v70;
      v61 = v58;
      v62 = v72;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v61, v59, v72, v57);
      v63 = (void *)v73;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v49, v56, v60, v53);
      _Block_release(v53);
      swift_unknownObjectRelease(v75);

      (*(void (**)(char *, uint64_t))(v71 + 8))(v60, v62);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v56, v69);
      v51(v49, v52);
      return swift_release(v19);
    }
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x800000010052EF10, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 251, 0);
    __break(1u);
  }
  return result;
}

void sub_100042BD0(char *a1, double a2, double a3, double a4, double a5, double a6)
{
  double *v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  Class isa;
  id v33;

  *(double *)&a1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = a2;
  v8 = (double *)&a1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  *v8 = a3;
  v8[1] = a4;
  v8[2] = a5;
  v8[3] = a6;
  sub_10003DDDC();
  if ((v9 & 1) != 0)
  {
    v10 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v11 = objc_msgSend(v10, "fractionalWidthDimension:", 1.0);
    v12 = objc_msgSend(v10, "estimatedDimension:", 0.0);
    v13 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v11, v12);

    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v14, v15, 1);

    v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);

  }
  v21 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v22 = objc_msgSend(v21, "fractionalWidthDimension:", 1.0);
  v23 = objc_msgSend(v21, "absoluteDimension:", a2);
  v24 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v22, v23);

  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v25, v26, 5);

  v28 = v27;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
  specialized Array._endMutation()(v31);
  v33 = objc_msgSend(a1, "configuration");
  sub_10004F2F0(0, (unint64_t *)&unk_100646C50, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v33, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  objc_msgSend(a1, "setConfiguration:", v33);
}

char *DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t updated;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t (*v43)(char *, _QWORD, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  id v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  char *v69;
  NSString v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  objc_class *ObjectType;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD aBlock[5];
  uint64_t v92;
  objc_super v93;

  v6 = v5;
  v85 = a2;
  v86 = a5;
  v83 = a1;
  v84 = a4;
  v82 = a3;
  ObjectType = (objc_class *)swift_getObjectType(v5, a2);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v80 = *(_QWORD *)(v7 - 8);
  v81 = v7;
  __chkstk_darwin(v7);
  v77 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  __chkstk_darwin(v9);
  v90 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate]);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab] = 2;
  v17 = &v5[OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation];
  updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v17, 1, 1, updated);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locationsBeingRestored] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = 0;
  v19 = &v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  v20 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  v21(&v6[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], 1, 1, v20);
  v22 = &v6[OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock];
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___loadingDisabledAssertions] = 0;
  v6[OBJC_IVAR____TtC5Files22DOCHierarchyController_shouldForceChangeInPreparationQueue] = 0;
  v76 = OBJC_IVAR____TtC5Files22DOCHierarchyController_locationChangePreparationQueue;
  v23 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v24 = v6;
  v73 = static OS_dispatch_queue.main.getter(v24);
  static DispatchQoS.unspecified.getter(v73);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v88 = v25;
  v26 = sub_10006922C((uint64_t *)&unk_100641280);
  v75 = v26;
  v89 = sub_100062698((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = v13;
  v74 = v11;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v89, v11, v25);
  v28 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v29 = v79;
  v78 = *(_QWORD *)(v78 + 104);
  v30 = v90;
  ((void (*)(char *, _QWORD, uint64_t))v78)(v90, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v79);
  v31 = v16;
  v32 = v27;
  v72 = v23;
  v33 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000032, 0x800000010050BFA0, v16, v27, v30, v73);
  *(_QWORD *)&v6[v76] = v33;
  v76 = OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue;
  v35 = v80;
  v34 = v81;
  v36 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v77, enum case for DispatchQoS.QoSClass.userInitiated(_:), v81);
  v73 = static OS_dispatch_queue.global(qos:)(v36);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v34);
  v38 = v31;
  static DispatchQoS.unspecified.getter(v37);
  aBlock[0] = _swiftEmptyArrayStorage;
  v39 = v32;
  v40 = v75;
  v41 = v74;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v75, v89, v74, v88);
  v42 = v90;
  v43 = (uint64_t (*)(char *, _QWORD, uint64_t))v78;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v90, v28, v29);
  v44 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000040, 0x800000010050BFE0, v38, v39, v42, v73);
  *(_QWORD *)&v24[v76] = v44;
  v81 = OBJC_IVAR____TtC5Files22DOCHierarchyController_lastVisitedLocationSavingQueue;
  v45 = v43(v42, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v29);
  static DispatchQoS.unspecified.getter(v45);
  aBlock[0] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v89, v41, v88);
  v46 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000038, 0x800000010050C030, v38, v39, v42, 0);
  *(_QWORD *)&v24[v81] = v46;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserverContext] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___userDefaultsObservedContent] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext] = 0;
  v47 = &v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeOrInflightAppend];
  *(_QWORD *)v47 = 0;
  *((_QWORD *)v47 + 1) = 0;
  v48 = &v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(_QWORD *)v48 = 0;
  v48[8] = 1;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_minParentLocations] = v82;
  v49 = v83;
  v50 = v84;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration] = v83;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager] = v50;
  v52 = v85;
  v51 = v86;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver] = v85;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore] = v51;
  v53 = v49;
  v54 = v50;
  v55 = v52;
  v56 = v51;

  v93.receiver = v24;
  v93.super_class = ObjectType;
  v57 = (char *)objc_msgSendSuper2(&v93, "init");
  v58 = *(void **)&v57[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  v59 = swift_allocObject(&unk_1005CEFC0, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16);
  aBlock[4] = sub_1000AD5E8;
  v92 = v59;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002E508;
  aBlock[3] = &unk_1005CEFD8;
  v60 = _Block_copy(aBlock);
  v61 = v92;
  v62 = v57;
  v63 = v58;
  swift_release(v61);
  v64 = objc_msgSend(v55, "addSubscriberForConfiguration:usingBlock:", v63, v60);
  _Block_release(v60);

  v65 = *(void **)&v62[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserverContext];
  *(_QWORD *)&v62[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserverContext] = v64;

  v66 = (void *)objc_opt_self(NSNotificationCenter);
  v67 = objc_msgSend(v66, "defaultCenter");
  objc_msgSend(v67, "addObserver:selector:name:object:", v62, "tagsDidChangeWithNotification:", DOCTagRegistryTagsDidChangeNotification, 0);

  v68 = objc_msgSend(v66, "defaultCenter");
  v69 = v62;
  v70 = String._bridgeToObjectiveC()();
  objc_msgSend(v68, "addObserver:selector:name:object:", v69, "receiveInvalidateLocationsNotification", v70, 0);

  return v69;
}

void sub_100043720()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  unsigned int (*v18)(char *, uint64_t, int *);
  id v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v1 = sub_10006922C(&qword_100658208);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&aBlock[-1] - v6;
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&aBlock[-1] - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&aBlock[-1] - v11;
  v13 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
  if (v13)
  {
    v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext];
    if (v14)
    {
      v15 = v14
          + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
      swift_beginAccess(v14 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, v32, 0, 0);
      sub_1000271D4(v15, (uint64_t)v12, &qword_100658208);
    }
    else
    {
      v16 = _s23FolderMenuConfigurationVMa(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
    }
    sub_1000271D4((uint64_t)v12, (uint64_t)v10, &qword_100658208);
    v17 = (int *)_s23FolderMenuConfigurationVMa(0);
    v18 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v17 - 1) + 48);
    if (v18(v10, 1, v17) == 1)
    {
      v19 = v13;
      sub_10000CB4C((uint64_t)v10, &qword_100658208);
      v20 = 0;
    }
    else
    {
      v21 = &v10[v17[6]];
      v23 = *(_QWORD *)v21;
      v22 = *((_QWORD *)v21 + 1);
      v24 = v13;
      swift_retain();
      sub_1004A7758((uint64_t)v10);
      aBlock[4] = v23;
      v31 = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001B1644;
      aBlock[3] = &unk_1005F10C0;
      v20 = _Block_copy(aBlock);
      swift_release(v31);
    }
    objc_msgSend(v13, "setTitleMenuProvider:", v20);
    _Block_release(v20);
    sub_1000271D4((uint64_t)v12, (uint64_t)v7, &qword_100658208);
    if (v18(v7, 1, v17) == 1)
    {
      sub_10000CB4C((uint64_t)v7, &qword_100658208);
      v25 = 0;
    }
    else
    {
      v25 = *(id *)&v7[v17[7]];
      sub_1004A7758((uint64_t)v7);
    }
    objc_msgSend(v13, "setDocumentProperties:", v25);

    sub_1000271D4((uint64_t)v12, (uint64_t)v4, &qword_100658208);
    if (v18(v4, 1, v17) == 1)
    {
      sub_10000CB4C((uint64_t)v4, &qword_100658208);
    }
    else
    {
      v26 = *(_QWORD *)&v4[v17[8]];
      swift_retain();
      sub_1004A7758((uint64_t)v4);
      if (v26)
      {
        swift_release(v26);
        v27 = sub_10005A360(&qword_100658210, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for DOCItemCollectionViewController);
        v28 = v0;
LABEL_16:
        sub_100086DAC((uint64_t)v0, v27);
        sub_10000CB4C((uint64_t)v12, &qword_100658208);

        return;
      }
    }
    v0 = 0;
    v27 = 0;
    goto LABEL_16;
  }
}

uint64_t sub_100043A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A74D0);
}

uint64_t initializeWithCopy for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  __int128 v22;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(v17 + 24);
  v19 = v9;
  swift_bridgeObjectRetain(v10);
  v20 = v13;
  v21 = v14;
  if (v18)
  {
    *(_QWORD *)(v16 + 24) = v18;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))(v16, v17, v18);
  }
  else
  {
    v22 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v22;
  }
  return a1;
}

void sub_100043B5C(void *a1)
{
  char *v1;
  char *v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double Width;
  id v25;
  double *v26;
  uint64_t v27;
  void (**v28)();
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  double v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  _QWORD *v42;
  id v43;
  id v44;
  unint64_t v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  double v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  double v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  Class isa;
  id v115;
  NSString v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  _QWORD *v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  _QWORD *v159;
  id v160;
  double *v161;
  id v162;
  id v163;
  id v164;
  char *v165;
  id v167;
  uint64_t v168[23];
  uint64_t v169[23];
  char v170[32];
  CGRect v171;
  CGRect v172;

  v2 = v1;
  sub_10004A48C(a1);
  v3 = *(char **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView];
  v4 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
  v5 = *(void **)&v3[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView] = v4;
  v6 = v4;

  objc_msgSend(v6, "setDelegate:", v1);
  v7 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel];
  objc_msgSend(v7, "setTextAlignment:", 1);
  v8 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel];
  objc_msgSend(v8, "setTextAlignment:", 1);
  v9 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
  objc_msgSend(v9, "setUserInteractionEnabled:", 1);
  v10 = sub_1000AE388();
  objc_msgSend(v2, "addGestureRecognizer:", v10);

  LODWORD(v11) = 1148846080;
  objc_msgSend(v9, "setContentHuggingPriority:forAxis:", 1, v11);
  LODWORD(v12) = 1148846080;
  objc_msgSend(v9, "setContentCompressionResistancePriority:forAxis:", 1, v12);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v8, "setContentHuggingPriority:forAxis:", 1, v13);
  LODWORD(v14) = 1148846080;
  objc_msgSend(v8, "setContentCompressionResistancePriority:forAxis:", 1, v14);
  LODWORD(v15) = 1148846080;
  objc_msgSend(v7, "setContentHuggingPriority:forAxis:", 1, v15);
  LODWORD(v16) = 1148846080;
  objc_msgSend(v7, "setContentCompressionResistancePriority:forAxis:", 1, v16);
  v17 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v170, 0, 0);
  if (*(_QWORD *)v17)
  {
    sub_100070EDC(*(_QWORD *)v17 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v168, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v168, (uint64_t)v169, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v169) == 1)
    {
      __break(1u);
      goto LABEL_39;
    }
    v18 = v169[6];
    v19 = *(_QWORD *)v17;
    if (*(_QWORD *)v17)
    {
LABEL_4:
      sub_100070EDC(v19 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v168, (uint64_t *)&unk_100641300);
      sub_100070EDC((uint64_t)v168, (uint64_t)v169, (uint64_t *)&unk_100641300);
      if (sub_1000A849C(v169) != 1)
      {
        v20 = v169[8];
        v21 = *(_QWORD *)v17;
        if (*(_QWORD *)v17)
          goto LABEL_6;
        goto LABEL_14;
      }
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
  }
  else
  {
    if (qword_1006411F8 != -1)
      swift_once(&qword_1006411F8, sub_10049DF40);
    v18 = qword_100657980;
    v19 = *(_QWORD *)v17;
    if (*(_QWORD *)v17)
      goto LABEL_4;
  }
  if (qword_1006411F8 != -1)
    swift_once(&qword_1006411F8, sub_10049DF40);
  v20 = qword_100657988;
  v21 = *(_QWORD *)v17;
  if (*(_QWORD *)v17)
  {
LABEL_6:
    sub_100070EDC(v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v168, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v168, (uint64_t)v169, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v169) != 1)
    {
      v22 = v169[5];
      goto LABEL_17;
    }
LABEL_40:
    __break(1u);
    return;
  }
LABEL_14:
  if (qword_1006411F8 != -1)
    swift_once(&qword_1006411F8, sub_10049DF40);
  v22 = qword_100657990;
LABEL_17:
  objc_msgSend(v3, "setFrame:", *(double *)&v20 + (*(double *)&v22 - *(double *)&v18) * 0.5, *(double *)&v20, *(double *)&v18, *(double *)&v18);
  v23 = *(char **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView];
  objc_msgSend(v23, "frame");
  Width = CGRectGetWidth(v171);
  objc_msgSend(v23, "frame");
  objc_msgSend(v23, "setFrame:", *(double *)&v20, *(double *)&v18 + *(double *)&v20 + *(double *)&v20, Width, CGRectGetHeight(v172));
  objc_msgSend(a1, "addSubview:", v3);
  objc_msgSend(a1, "addSubview:", v23);
  v25 = sub_10049639C();
  objc_msgSend(a1, "addSubview:", v25);

  objc_msgSend(v3, "addSubview:", v6);
  v26 = (double *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics];
  objc_msgSend(v6, "setDecorationCornerRadius:", *(double *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics]);
  objc_msgSend(v23, "setAxis:", 1);
  objc_msgSend(v23, "setAlignment:", 0);
  objc_msgSend(v23, "addArrangedSubview:", v9);
  objc_msgSend(v23, "addArrangedSubview:", v7);
  v156 = v8;
  objc_msgSend(v23, "addArrangedSubview:", v8);
  v164 = v9;
  objc_msgSend(v23, "setCustomSpacing:afterView:", v9, v26[4]);
  v161 = v26;
  v155 = v7;
  objc_msgSend(v23, "setCustomSpacing:afterView:", v7, v26[5]);
  v27 = swift_allocObject(&unk_1005F08B0, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16);
  v28 = (void (**)())&v23[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews];
  v29 = *(_QWORD *)&v23[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews];
  v30 = *(_QWORD *)&v23[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews
                      + 8];
  *v28 = sub_10049E1C0;
  v28[1] = (void (*)())v27;
  sub_100087534(v29, v30);
  v163 = v6;
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = sub_10049639C();
  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v165 = v23;
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v169[0] = (uint64_t)_swiftEmptyArrayStorage;
  v32 = objc_msgSend(v3, "widthAnchor");
  v33 = objc_msgSend(v3, "heightAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  LODWORD(v35) = 1148829696;
  objc_msgSend(v34, "setPriority:", v35);
  v36 = objc_msgSend(v3, "widthAnchor");
  v37 = objc_msgSend(v36, "constraintEqualToConstant:", *(double *)&v18);

  v38 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint] = v37;
  v39 = v37;

  v40 = v34;
  v41 = objc_msgSend(v3, "centerXAnchor");
  v42 = _swiftEmptyArrayStorage;
  v43 = objc_msgSend(a1, "centerXAnchor");
  v44 = objc_msgSend(v41, "constraintEqualToAnchor:", v43);

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v153 = _swiftEmptyArrayStorage;
    else
      v153 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v154 = v39;
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v45 = _CocoaArrayWrapper.endIndex.getter(v153);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    v45 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    v46 = v39;
  }
  if (__OFADD__(v45, 3))
  {
    __break(1u);
    goto LABEL_37;
  }
  v48 = sub_100088A50(v45 + 3, 1);
  specialized Array._endMutation()(v48);
  v42 = v40;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
  v45 = *(_QWORD *)((v169[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v47 = *(_QWORD *)((v169[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v45 >= v47 >> 1)
LABEL_37:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v45 + 1, 1);
  v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v42);
  specialized Array._endMutation()(v49);
  v50 = v44;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
  v52 = *(_QWORD *)((v169[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v51 = *(_QWORD *)((v169[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v52 >= v51 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
  v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
  specialized Array._endMutation()(v53);
  v54 = v39;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
  v56 = *(_QWORD *)((v169[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v55 = *(_QWORD *)((v169[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v56 >= v55 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
  v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
  specialized Array._endMutation()(v57);

  v159 = v42;
  v58 = objc_msgSend(v3, "topAnchor");
  v59 = objc_msgSend(a1, "topAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v59, *(double *)&v20);

  if (*(double *)&v20 + -1.0 < 0.0)
    v61 = 0.0;
  else
    v61 = *(double *)&v20 + -1.0;
  v62 = objc_msgSend(v165, "leadingAnchor");
  v63 = objc_msgSend(a1, "leadingAnchor");
  v160 = v54;
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v63, v61);

  v65 = objc_msgSend(v165, "trailingAnchor");
  v66 = objc_msgSend(a1, "trailingAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:constant:", v66, -v61);

  v68 = objc_msgSend(a1, "bottomAnchor");
  v69 = objc_msgSend(v165, "bottomAnchor");
  v70 = objc_msgSend(v68, "constraintGreaterThanOrEqualToAnchor:constant:", v69, *(double *)&v20);

  LODWORD(v71) = 1144750080;
  objc_msgSend(v70, "setPriority:", v71);
  v72 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint] = v60;
  v73 = v60;

  v74 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint] = v70;
  v75 = v70;

  v76 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint] = v64;
  v77 = v64;

  v78 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint] = v67;
  v79 = v67;

  v80 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v81 = swift_allocObject(v80, 136, 7);
  *(_OWORD *)(v81 + 16) = xmmword_1004E6DC0;
  *(_QWORD *)(v81 + 32) = v73;
  *(_QWORD *)(v81 + 40) = v75;
  v158 = v73;
  v157 = v75;
  v82 = objc_msgSend(v3, "heightAnchor");
  v83 = objc_msgSend(a1, "heightAnchor");
  v84 = objc_msgSend(v82, "constraintLessThanOrEqualToAnchor:", v83);

  *(_QWORD *)(v81 + 48) = v84;
  v85 = objc_msgSend(v164, "firstBaselineAnchor");
  v86 = objc_msgSend(v3, "bottomAnchor");
  v87 = objc_msgSend(v85, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v86, v161[3]);

  *(_QWORD *)(v81 + 56) = v87;
  *(_QWORD *)(v81 + 64) = v77;
  *(_QWORD *)(v81 + 72) = v79;
  v167 = v77;
  v162 = v79;
  v88 = objc_msgSend(v163, "centerXAnchor");
  v89 = objc_msgSend(v3, "centerXAnchor");
  v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

  *(_QWORD *)(v81 + 80) = v90;
  v91 = objc_msgSend(v163, "bottomAnchor");
  v92 = objc_msgSend(v3, "bottomAnchor");
  v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

  *(_QWORD *)(v81 + 88) = v93;
  v94 = objc_msgSend(v3, "trailingAnchor");
  v95 = objc_msgSend(v163, "trailingAnchor");
  v96 = objc_msgSend(v94, "constraintGreaterThanOrEqualToAnchor:", v95);

  *(_QWORD *)(v81 + 96) = v96;
  v97 = objc_msgSend(v163, "leadingAnchor");
  v98 = objc_msgSend(v3, "leadingAnchor");
  v99 = objc_msgSend(v97, "constraintGreaterThanOrEqualToAnchor:", v98);

  *(_QWORD *)(v81 + 104) = v99;
  v100 = objc_msgSend(v163, "topAnchor");
  v101 = objc_msgSend(v3, "topAnchor");
  v102 = objc_msgSend(v100, "constraintGreaterThanOrEqualToAnchor:", v101);

  *(_QWORD *)(v81 + 112) = v102;
  v103 = objc_msgSend(v163, "bottomAnchor");
  v104 = sub_10049639C();
  v105 = objc_msgSend(v104, "bottomAnchor");

  v106 = objc_msgSend(v103, "constraintEqualToAnchor:constant:", v105, 6.0);
  *(_QWORD *)(v81 + 120) = v106;
  v107 = sub_10049639C();
  v108 = objc_msgSend(v107, "centerXAnchor");

  v109 = objc_msgSend(v163, "centerXAnchor");
  v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

  *(_QWORD *)(v81 + 128) = v110;
  v168[0] = v81;
  specialized Array._endMutation()(v111);
  sub_1000887D0(v168[0]);
  v112 = (void *)objc_opt_self(NSLayoutConstraint);
  v113 = v169[0];
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v112, "activateConstraints:", isa, swift_bridgeObjectRelease(v113).n128_f64[0]);

  v115 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v116 = String._bridgeToObjectiveC()();
  LODWORD(v113) = objc_msgSend(v115, "BOOLForKey:", v116);

  if ((_DWORD)v113)
  {
    v117 = objc_msgSend(v2, "contentView");
    v118 = (void *)objc_opt_self(UIColor);
    v119 = objc_msgSend(v118, "blackColor");
    v120 = objc_msgSend(v117, "layer");
    v121 = objc_msgSend(v119, "colorWithAlphaComponent:", 0.5);
    v122 = objc_msgSend(v121, "CGColor");

    objc_msgSend(v120, "setBorderColor:", v122);
    v123 = objc_msgSend(v117, "layer");
    objc_msgSend(v123, "setBorderWidth:", 0.5);

    v124 = objc_msgSend(v118, "orangeColor");
    v125 = objc_msgSend(v165, "layer");
    v126 = objc_msgSend(v124, "colorWithAlphaComponent:", 0.5);
    v127 = objc_msgSend(v126, "CGColor");

    objc_msgSend(v125, "setBorderColor:", v127);
    v128 = objc_msgSend(v165, "layer");
    objc_msgSend(v128, "setBorderWidth:", 0.5);

    v129 = objc_msgSend(v118, "greenColor");
    v130 = objc_msgSend(v3, "layer");
    v131 = objc_msgSend(v129, "colorWithAlphaComponent:", 0.5);
    v132 = objc_msgSend(v131, "CGColor");

    objc_msgSend(v130, "setBorderColor:", v132);
    v133 = objc_msgSend(v3, "layer");
    objc_msgSend(v133, "setBorderWidth:", 0.5);

    v134 = objc_msgSend(v118, "redColor");
    v135 = objc_msgSend(v164, "layer");
    v136 = objc_msgSend(v134, "colorWithAlphaComponent:", 0.5);
    v137 = objc_msgSend(v136, "CGColor");

    objc_msgSend(v135, "setBorderColor:", v137);
    v138 = objc_msgSend(v164, "layer");
    objc_msgSend(v138, "setBorderWidth:", 0.5);

    v139 = objc_msgSend(v118, "greenColor");
    v140 = objc_msgSend(v155, "layer");
    v141 = objc_msgSend(v139, "colorWithAlphaComponent:", 0.5);
    v142 = objc_msgSend(v141, "CGColor");

    objc_msgSend(v140, "setBorderColor:", v142);
    v143 = objc_msgSend(v155, "layer");
    objc_msgSend(v143, "setBorderWidth:", 0.5);

    v144 = objc_msgSend(v118, "blueColor");
    v145 = objc_msgSend(v156, "layer");
    v146 = objc_msgSend(v144, "colorWithAlphaComponent:", 0.5);
    v147 = objc_msgSend(v146, "CGColor");

    objc_msgSend(v145, "setBorderColor:", v147);
    v148 = objc_msgSend(v156, "layer");
    objc_msgSend(v148, "setBorderWidth:", 0.5);

    v149 = v167;
    v150 = v158;
    v167 = v157;
    v152 = v159;
    v151 = v160;
  }
  else
  {
    v151 = v159;
    v148 = v160;
    v150 = v157;
    v152 = v158;
    v149 = v162;
  }

}

void sub_100044F68()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  NSString v15;
  NSString v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  id v22;
  NSString v23;
  Class isa;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void (*v34)(char *, uint64_t);
  unsigned int v35;
  void **v36;
  void **v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void **v46;
  void ***v47;
  uint64_t v48;
  NSObject *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void ***v75;
  void (*v76)(char *, uint64_t);
  NSObject *v77;
  char *v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  void **aBlock;
  _QWORD v91[4];
  uint64_t v92;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v87 = *(_QWORD *)(v2 - 8);
  v88 = v2;
  __chkstk_darwin(v2);
  v86 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  __chkstk_darwin(v4);
  v83 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS.QoSClass(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  __chkstk_darwin(v6);
  v80 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v75 - v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v15, v16);

  v18 = objc_msgSend((id)objc_opt_self(RBSTarget), "currentProcess");
  v19 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v20 + 32) = v17;
  aBlock = (void **)v20;
  specialized Array._endMutation()(v20);
  v21 = aBlock;
  v22 = objc_allocWithZone((Class)RBSAssertion);
  v79 = v17;
  v23 = String._bridgeToObjectiveC()();
  sub_10004F2F0(0, &qword_100652608, RBSAttribute_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v25 = objc_msgSend(v22, "initWithExplanation:target:attributes:", v23, v18, isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

  objc_msgSend(v1, "setProcessAssertion:", v25);
  v26 = objc_msgSend(v1, "processAssertion");
  if (v26)
  {
    v27 = v26;
    v78 = v12;
    v28 = Logger.UI.unsafeMutableAddressor(v26);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v30 = v29(v14, v28, v8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Acquiring background assertion to save last visited location.", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    v34 = *(void (**)(char *, uint64_t))(v9 + 8);
    v34(v14, v8);
    aBlock = 0;
    v35 = objc_msgSend(v27, "acquireWithError:", &aBlock);
    v36 = aBlock;
    if (v35)
    {
      v37 = aBlock;

    }
    else
    {
      v76 = v34;
      v38 = aBlock;
      v39 = _convertNSErrorToError(_:)(v36);

      swift_willThrow(v40);
      v41 = v78;
      v29(v78, v28, v8);
      swift_errorRetain(v39);
      v42 = swift_errorRetain(v39);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.error.getter(v43);
      v77 = v43;
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc(12, -1);
        v75 = (void ***)swift_slowAlloc(8, -1);
        *(_DWORD *)v45 = 138412290;
        swift_errorRetain(v39);
        v46 = (void **)_swift_stdlib_bridgeErrorToNSError(v39);
        aBlock = v46;
        v41 = v78;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v91);
        v47 = v75;
        *v75 = v46;
        swift_errorRelease(v39);
        swift_errorRelease(v39);
        _os_log_impl((void *)&_mh_execute_header, v77, v44, "Failed to aquired background assertion Error %@.", v45, 0xCu);
        v48 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v47, 1, v48);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v45, -1, -1);
      }
      else
      {
        swift_errorRelease(v39);
        swift_errorRelease(v39);
      }

      v76(v41, v8);
      objc_msgSend(v1, "setProcessAssertion:", 0);

      swift_errorRelease(v39);
    }
  }
  v49 = dispatch_group_create();
  v50 = objc_msgSend(v1, "droppedLocationsAfterSwitchingDisplayMode");
  v51 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v50, v51);

  if ((unint64_t)v52 >> 62)
  {
    if (v52 < 0)
      v60 = v52;
    else
      v60 = v52 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v52);
    v53 = _CocoaArrayWrapper.endIndex.getter(v60);
    if (!v53)
      goto LABEL_22;
  }
  else
  {
    v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v52);
    if (!v53)
      goto LABEL_22;
  }
  if (v53 < 1)
    __break(1u);
  v54 = 0;
  do
  {
    if ((v52 & 0xC000000000000001) != 0)
      v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v52);
    else
      v55 = *(id *)(v52 + 8 * v54 + 32);
    v56 = v55;
    ++v54;
    dispatch_group_enter(v49);
    v57 = objc_msgSend(v1, "hierarchyController");
    v58 = swift_allocObject(&unk_1005E5F40, 24, 7);
    *(_QWORD *)(v58 + 16) = v49;
    v59 = v49;
    sub_1001E024C(v56, 0, 1, 0, 0, (uint64_t)sub_1000A8854, v58);

    swift_release(v58);
  }
  while (v53 != v54);
LABEL_22:
  swift_bridgeObjectRelease_n(v52, 2);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v62 = v80;
  v61 = v81;
  v63 = v82;
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v80, enum case for DispatchQoS.QoSClass.default(_:), v82);
  v64 = (void *)static OS_dispatch_queue.global(qos:)(v62);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
  v65 = swift_allocObject(&unk_1005E5F68, 24, 7);
  *(_QWORD *)(v65 + 16) = v1;
  v91[3] = sub_100084DF8;
  v92 = v65;
  aBlock = _NSConcreteStackBlock;
  v91[0] = 1107296256;
  v91[1] = sub_10004A82C;
  v91[2] = &unk_1005E5F80;
  v66 = _Block_copy(&aBlock);
  v67 = v1;
  v68 = v83;
  static DispatchQoS.unspecified.getter(v67);
  v89 = _swiftEmptyArrayStorage;
  v69 = sub_10008BAAC();
  v70 = sub_10006922C((uint64_t *)&unk_100647540);
  v71 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v72 = v86;
  v73 = v70;
  v74 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v89, v73, v71, v88, v69);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v68, v72, v64, v66);
  _Block_release(v66);

  (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v74);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v68, v85);
  swift_release(v92);
  objc_msgSend(v67, "clearDroppedLocationsAfterSwitchingViewStyle");

}

uint64_t sub_100045810(uint64_t result, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t i;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;

  v7 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v9 = *(id *)(a2 + 32);
    }
    v10 = v9;
    a4 = (_QWORD *)sub_10004F2F0(0, a3, a4);
    v11 = static NSObject.== infix(_:_:)(v10, v7);

    if ((v11 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      a3 = (unint64_t *)(i + 1);
      if (__OFADD__(i, 1))
        break;
      if (a3 == (unint64_t *)v8)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
      }
      else
      {
        if (((unint64_t)a3 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if ((unint64_t)a3 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v13 = *(id *)(a2 + 32 + 8 * (_QWORD)a3);
      }
      v14 = v13;
      v15 = static NSObject.== infix(_:_:)(v13, v7);

      if ((v15 & 1) != 0)
        return (uint64_t)a3;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v16 = a2;
    else
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    result = swift_bridgeObjectRelease(a2);
  }
  return 0;
}

Class sub_1000459A8(uint64_t a1, Swift::OpaquePointer children, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  void *rawValue;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  UIMenuElementSize preferredElementSize;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  void *childrena;
  uint64_t v49;
  char *v50;
  UIImage_optional v51;

  v4 = v3;
  v5 = a3;
  rawValue = children._rawValue;
  v7 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
  v8 = *(_QWORD *)(v7 + 16);
  v50 = v4;
  if (v8)
  {
    childrena = children._rawValue;
    swift_bridgeObjectRetain(v7);
    sub_100081810(0, v8, 0);
    v9 = 0;
    v10 = v7;
    do
    {
      v11 = DOCItemSortDescriptor.init(type:isReversed:)(*(unsigned __int8 *)(v10 + v9 + 32), 0);
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v19 = _swiftEmptyArrayStorage[2];
      v18 = _swiftEmptyArrayStorage[3];
      if (v19 >= v18 >> 1)
        sub_100081810(v18 > 1, v19 + 1, 1);
      ++v9;
      _swiftEmptyArrayStorage[2] = v19 + 1;
      v20 = &_swiftEmptyArrayStorage[4 * v19];
      *((_BYTE *)v20 + 32) = v11;
      v20[5] = v13;
      v20[6] = v15;
      *((_BYTE *)v20 + 56) = v17 & 1;
    }
    while (v8 != v9);
    swift_bridgeObjectRelease(v10);
    v4 = v50;
    rawValue = childrena;
    v5 = a3;
  }
  if (!_swiftEmptyArrayStorage[2])
  {
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return 0;
  }
  if (rawValue)
  {
    v21 = a1;
    v22 = (uint64_t)rawValue;
    v23 = v5;
    v24 = a1;
    goto LABEL_16;
  }
  v26 = (uint64_t *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8];
  if (v22)
  {
    v23 = v26[2];
    v24 = *v26;
    sub_1001CEF88(*v26, *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8], v23);
LABEL_15:
    v21 = a1;
LABEL_16:
    v49 = v24;
    v30 = _swiftEmptyArrayStorage[2];
    if (v30)
      goto LABEL_17;
LABEL_23:
    result = (Class)sub_1001CEF88(v21, (uint64_t)rawValue, v5);
    goto LABEL_24;
  }
  sub_10004F2F0(0, (unint64_t *)&unk_1006443B0, DOCUserInterfaceStateStore_ptr);
  v27 = static DOCUserInterfaceStateStore.retrieveDefaultSortMode(configuration:)(*(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration]);
  v22 = v29;
  if (v29)
  {
    v24 = v27;
    v23 = v28;
    goto LABEL_15;
  }
  v49 = 0;
  v23 = 0;
  v21 = a1;
  v30 = _swiftEmptyArrayStorage[2];
  if (!v30)
    goto LABEL_23;
LABEL_17:
  sub_1001CEF88(v21, (uint64_t)rawValue, v5);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v31 = 32;
  do
  {
    if (v22)
      __asm { BR              X9 }
    v31 += 32;
    --v30;
  }
  while (v30);
  result = (Class)swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v4 = v50;
LABEL_24:
  if (_swiftEmptyArrayStorage[2])
  {
    v33 = LOBYTE(_swiftEmptyArrayStorage[4]);
    v34 = _swiftEmptyArrayStorage[5];
    v35 = _swiftEmptyArrayStorage[6];
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
    sub_100144F34(v49, v22, v23);
    v36 = v33;
    v37 = v34;
    v38 = v35;
    v39 = v4;
    v40 = (uint64_t)sub_1002D3624((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

    if ((unint64_t)v40 >> 62)
    {
      if (v40 < 0)
        v44 = v40;
      else
        v44 = v40 & 0xFFFFFFFFFFFFFF8;
      v45 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v40);
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v44, v45);
      swift_bridgeObjectRelease(v40);
    }
    else
    {
      v41 = swift_bridgeObjectRetain(v40);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v41);
      sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      preferredElementSize = v40;
    }
    swift_bridgeObjectRelease(v40);
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v51.value.super.isa = 0;
    v51.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v43, (Swift::String_optional)0, v51, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)childrena).super.super.isa;
    sub_100144F34(v36, v37, v38);
    return isa;
  }
  __break(1u);
  return result;
}

id sub_100045FB8(void (*a1)(void *), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _QWORD v28[5];

  a1(a3);
  v10 = *(void **)(a4 + 24);
  objc_msgSend(v10, "lock");
  ObjectType = swift_getObjectType(a5, v11);
  DOCNode.identifierKey.getter(v28, ObjectType);
  v13 = (uint64_t *)(a4 + 32);
  swift_beginAccess(a4 + 32, v27, 0, 0);
  v14 = *(_QWORD *)(a4 + 32);
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain(*(_QWORD *)(a4 + 32));
  v15 = sub_100067654((uint64_t)v28);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease(v14);
LABEL_6:
    sub_100067748((uint64_t)v28);
    return objc_msgSend(v10, "unlock", v25);
  }
  v17 = *(_QWORD *)(v14 + 56) + 24 * v15;
  v19 = *(void **)v17;
  v18 = *(_QWORD *)(v17 + 8);
  v20 = *(_QWORD *)(v17 + 16);
  sub_10006A92C(*(void **)v17, v18, v20);
  swift_bridgeObjectRelease(v14);
  sub_100067748((uint64_t)v28);
  if (v20 < 0)
  {
    swift_release(v19);

    if (v18 == a6)
    {
      DOCNode.identifierKey.getter(v28, ObjectType);
      swift_beginAccess(v13, v26, 33, 0);
      v22 = a3;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v13);
      v25 = *v13;
      *v13 = 0x8000000000000000;
      sub_100078950((uint64_t)a3, 0, 0, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
      v24 = *v13;
      *v13 = v25;
      swift_bridgeObjectRelease(v24);
      sub_100067748((uint64_t)v28);
      swift_endAccess(v26);
    }
  }
  else
  {
    sub_1000628C0(v19, v18, v20);
  }
  return objc_msgSend(v10, "unlock", v25);
}

id sub_100046180(uint64_t a1)
{
  id result;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  void **aBlock;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  void *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  Swift::String v24;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v2 = result;
    v24._object = (void *)0x800000010050FEB0;
    v3._countAndFlagsBits = 0x75625B2073676154;
    v3._object = (void *)0xED00005D6E6F7474;
    v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0xA680E273676154;
    v5._object = (void *)0xA700000000000000;
    v24._countAndFlagsBits = 0xD00000000000004FLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v24)._object;

    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierTags);
    v8 = v7;
    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v22 = sub_10011D444;
    v23 = 0;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100120C10;
    v21 = &unk_1005C81B8;
    v12 = _Block_copy(&aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v23);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    objc_msgSend(v13, "setImage:", v15);
    objc_msgSend(v13, "setSupportsMultipleItems:", 1);
    objc_msgSend(v13, "setAvailability:", UIDocumentBrowserActionAvailabilityToolbar | 1);
    objc_msgSend(v13, "setMenuSortOrder:", 10);
    v22 = (void (*)(uint64_t, uint64_t))sub_1001199E8;
    v23 = 0;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100068430;
    v21 = &unk_1005C81E0;
    v16 = _Block_copy(&aBlock);
    v17 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithBlock:", v16);
    _Block_release(v16);
    swift_release(v23);
    objc_msgSend(v13, "setFilteringPredicate:", v17);

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10004644C(void *a1, void *a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  char v53[24];

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v2[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v2[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v11 = &v2[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering];
  v2[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = 0;
  v12 = v9[1];
  *(_OWORD *)v9 = xmmword_1004DBBD0;
  v13 = v2;
  swift_bridgeObjectRelease(v12);
  v14 = &v13[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  v14[16] = 0;
  swift_unknownObjectRetain(a2);
  v49 = a1;
  v15 = a1;
  LOBYTE(v9) = objc_msgSend(v15, "isGathering");
  swift_beginAccess(v11, v53, 1, 0);
  *v11 = (_BYTE)v9;
  v16 = v6;

  v17 = (objc_class *)type metadata accessor for DOCNodeCollection();
  v52.receiver = v13;
  v52.super_class = v17;
  v18 = objc_msgSendSuper2(&v52, "init");
  v19 = Logger.Enumeration.unsafeMutableAddressor(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v19, v5);
  v20 = v18;
  v21 = v15;
  swift_unknownObjectRetain_n(a2, 2);
  v22 = v20;
  v23 = v21;
  v24 = (char *)v22;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v25, (os_log_type_t)v26))
  {

    swift_unknownObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v5);
LABEL_8:
    v42 = v24;
    objc_msgSend(v23, "setDelegate:", v42);

    swift_unknownObjectRelease(a2);
    return;
  }
  v45 = v26;
  v44 = v8;
  v47 = v16;
  v48 = v5;
  v27 = swift_slowAlloc(52, -1);
  v28 = (_QWORD *)swift_slowAlloc(16, -1);
  v46 = swift_slowAlloc(96, -1);
  v51 = v46;
  *(_DWORD *)v27 = 136447234;
  v29 = (uint64_t *)&v24[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
  v30 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
  if (v30)
  {
    v31 = *v29;
    swift_bridgeObjectRetain(v29[1]);
    v50 = sub_1000544FC(v31, v30, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);

    swift_bridgeObjectRelease(v30);
    *(_WORD *)(v27 + 12) = 2082;
    v50 = sub_1000544FC(0xD000000000000022, 0x80000001005126C0, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    *(_WORD *)(v27 + 22) = 2112;
    v50 = (uint64_t)v24;
    v32 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    v43 = v28;
    *v28 = v24;

    *(_WORD *)(v27 + 32) = 2080;
    if (a2)
    {
      v33 = objc_msgSend(a2, "displayName");
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v36 = v35;

    }
    else
    {
      v36 = 0xE300000000000000;
      v34 = 4271950;
    }
    v37 = v44;
    v50 = sub_1000544FC(v34, v36, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v27 + 42) = 2112;
    v50 = (uint64_t)v23;
    v38 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    v39 = v43;
    v43[1] = v49;

    _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v45, "%{public}s %{public}s Init DOCNodeCollection (%@ with FPItem: %s and FPItemCollection %@", (uint8_t *)v27, 0x34u);
    v40 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v39, 2, v40);
    swift_slowDealloc(v39, -1, -1);
    v41 = v46;
    swift_arrayDestroy(v46, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
    goto LABEL_8;
  }

  swift_unknownObjectRelease(a2);
  __break(1u);
}

void sub_10004693C(uint64_t a1, uint64_t a2, void *a3, id *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id *v33;
  id v34;
  Swift::String v35;
  void *object;
  Swift::String v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  Swift::String v60;
  uint64_t v61;
  id *v62;
  id *v63;
  uint64_t (*v64)(uint64_t);
  _QWORD *v65;
  uint64_t (*v66)(uint64_t);
  id v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  id v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t i;
  uint64_t v79;
  void *v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  Swift::String v84;
  Swift::String v85;
  void *v86;
  Swift::String v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  id v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  ValueMetadata *v98;
  id v99;
  void *v100;
  id v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  Swift::String v106;
  void *v107;
  Swift::String v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Swift::String v117;
  void *v118;
  Swift::String v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  int64_t v135;
  NSObject *v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  int64_t v140;
  unint64_t v141;
  int64_t v142;
  id v143;
  void *v144;
  id v145;
  uint64_t v146;
  _BYTE *v147;
  char *v148;
  __int128 v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  char *v153;
  NSObject *v154;
  uint64_t v155;
  double v156;
  const void *v157;
  __n128 v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  char *v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  void *v175;
  dispatch_group_t v176;
  _QWORD *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  dispatch_group_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  int64_t v199;
  id *v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  id v204;
  _QWORD aBlock[5];
  uint64_t v206;
  _OWORD v207[3];
  uint64_t v208;
  _OWORD v209[3];
  uint64_t v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  char v215[8];

  v201 = a5;
  v200 = a4;
  v187 = a2;
  v203 = (void *)a1;
  v186 = type metadata accessor for DispatchWorkItemFlags(0);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v184 = (char *)&v178 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = type metadata accessor for DispatchQoS.QoSClass(0);
  v180 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v179 = (char *)&v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v192 = *(dispatch_group_t *)(v194 - 8);
  __chkstk_darwin(v194);
  v193 = (char *)&v178 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v188);
  v191 = (char *)&v178 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = type metadata accessor for DispatchQoS(0);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v189 = (char *)&v178 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v178 = *((_QWORD *)v11 - 1);
  __chkstk_darwin(v11);
  v13 = (char *)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C(&qword_10064A600);
  v197 = *(_QWORD *)(v14 - 8);
  v198 = *(_QWORD **)(v197 + 64);
  __chkstk_darwin(v14);
  v195 = (uint64_t)&v178 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v178 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_1005EC5A0, 24, 7);
  v190 = v20;
  *(_QWORD *)(v20 + 16) = 0;
  v199 = v20 + 16;
  v21 = UUID.init()(v20);
  v22 = UUID.uuidString.getter(v21);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v25 = sub_100087794(6, v22, v24);
  v27 = v26;
  v202 = v26;
  v29 = v28;
  v31 = v30;
  v196 = v30;
  swift_bridgeObjectRelease(v24);
  v32 = (_QWORD *)swift_allocObject(&unk_1005EC5C8, 40, 7);
  v33 = v200;
  v32[2] = a3;
  v32[3] = v33;
  v32[4] = v201;
  *(_QWORD *)&v211 = 0;
  *((_QWORD *)&v211 + 1) = 0xE000000000000000;
  v34 = a3;
  swift_retain();
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(*((_QWORD *)&v211 + 1));
  *(_QWORD *)&v211 = 91;
  *((_QWORD *)&v211 + 1) = 0xE100000000000000;
  v35._countAndFlagsBits = static String._fromSubstring(_:)(v25, v27, v29, v31);
  object = v35._object;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(object);
  v37._countAndFlagsBits = 0xD00000000000001ALL;
  v37._object = (void *)0x8000000100535A10;
  String.append(_:)(v37);
  v38 = *((_QWORD *)&v211 + 1);
  v39 = v204;
  sub_1000542B0(v211, *((unint64_t *)&v211 + 1));
  swift_bridgeObjectRelease(v38);
  v40 = v195;
  sub_1000271D4((uint64_t)v203, v195, &qword_10064A600);
  v41 = *(unsigned __int8 *)(v197 + 80);
  v42 = (v41 + 72) & ~v41;
  v43 = ((unint64_t)v198 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v44 = (_QWORD *)swift_allocObject(&unk_1005EC5F0, v43 + 8, v41 | 7);
  v44[2] = v39;
  v44[3] = v25;
  v203 = (void *)v25;
  v45 = v202;
  v44[4] = v202;
  v44[5] = v29;
  v46 = v196;
  v44[6] = v196;
  v44[7] = sub_1000A0778;
  v47 = (uint64_t)v44 + v42;
  v44[8] = v32;
  v48 = v40;
  v49 = v190;
  v50 = v46;
  sub_100070EDC(v48, v47, &qword_10064A600);
  *(_QWORD *)((char *)v44 + v43) = v49;
  v51 = v32;
  v52 = v39;
  swift_bridgeObjectRetain(v50);
  swift_retain();
  swift_retain();
  sub_10001A27C(0, (uint64_t)sub_1000A0E74, (uint64_t)v44);
  swift_release(v44);
  v53 = (uint64_t *)v199;
  swift_beginAccess(v199, v215, 0, 0);
  v54 = *v53;
  if (!*v53)
  {
    *(_QWORD *)&v211 = 0;
    *((_QWORD *)&v211 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(51);
    v84._countAndFlagsBits = 91;
    v84._object = (void *)0xE100000000000000;
    String.append(_:)(v84);
    v85._countAndFlagsBits = static String._fromSubstring(_:)(v203, v45, v29, v50);
    v86 = v85._object;
    String.append(_:)(v85);
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v86);
    v87._countAndFlagsBits = 0xD000000000000030;
    v87._object = (void *)0x8000000100535A30;
    String.append(_:)(v87);
    v88 = *((_QWORD *)&v211 + 1);
    sub_1000542B0(v211, *((unint64_t *)&v211 + 1));
    swift_release(v49);
    swift_release(v51);
    swift_bridgeObjectRelease(v88);
    return;
  }
  if (!*(_QWORD *)(v54 + 16))
  {
    *(_QWORD *)&v211 = 0;
    *((_QWORD *)&v211 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease(*((_QWORD *)&v211 + 1));
    *(_QWORD *)&v211 = 91;
    *((_QWORD *)&v211 + 1) = 0xE100000000000000;
    v105 = v196;
    v106._countAndFlagsBits = static String._fromSubstring(_:)(v203, v202, v29, v196);
    v107 = v106._object;
    String.append(_:)(v106);
    swift_bridgeObjectRelease(v105);
    swift_bridgeObjectRelease(v107);
    v108._countAndFlagsBits = 0xD000000000000025;
    v108._object = (void *)0x8000000100535A70;
    String.append(_:)(v108);
    v109 = *((_QWORD *)&v211 + 1);
    sub_1000542B0(v211, *((unint64_t *)&v211 + 1));
    swift_bridgeObjectRelease(v109);
    sub_10001A27C(1, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
    swift_release(v49);
    v110 = v51;
LABEL_66:
    swift_release(v110);
    return;
  }
  *(_QWORD *)&v211 = 0;
  *((_QWORD *)&v211 + 1) = 0xE000000000000000;
  v195 = v54;
  swift_bridgeObjectRetain(v54);
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(*((_QWORD *)&v211 + 1));
  *(_QWORD *)&v211 = 91;
  *((_QWORD *)&v211 + 1) = 0xE100000000000000;
  v55 = (uint64_t)v203;
  v56 = v202;
  v57 = v196;
  v58._countAndFlagsBits = static String._fromSubstring(_:)(v203, v202, v29, v196);
  v59 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60._countAndFlagsBits = 0xD000000000000018;
  v60._object = (void *)0x8000000100535AA0;
  String.append(_:)(v60);
  v61 = *((_QWORD *)&v211 + 1);
  sub_1000542B0(v211, *((unint64_t *)&v211 + 1));
  swift_bridgeObjectRelease(v61);
  *(_QWORD *)&v211 = _swiftEmptyArrayStorage;
  v62 = *(id **)(v195 + 16);
  v198 = v51;
  v201 = v29;
  v204 = v52;
  v200 = v62;
  if (!v62)
  {
    swift_bridgeObjectRelease(v195);
    v89 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_21;
LABEL_35:
    if (v89 < 0)
      v111 = v89;
    else
      v111 = v89 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v89);
    v90 = _CocoaArrayWrapper.endIndex.getter(v111);
    swift_bridgeObjectRelease(v89);
    if (v90)
      goto LABEL_22;
    goto LABEL_39;
  }
  v199 = v195 + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80));
  v197 = *(_QWORD *)(v178 + 72);
  swift_bridgeObjectRetain(v195);
  v63 = 0;
  v64 = type metadata accessor for DOCBrowserHistoryItem;
  do
  {
    v66 = v64;
    sub_10007C6DC(v199 + v197 * (_QWORD)v63, (uint64_t)v13, v64);
    *(_QWORD *)&v209[0] = _swiftEmptyArrayStorage;
    v67 = *(id *)&v13[v11[5]];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
    v69 = *(_QWORD *)(*(_QWORD *)&v209[0] + 16);
    v68 = *(_QWORD *)(*(_QWORD *)&v209[0] + 24);
    if (v69 >= v68 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
    v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v67);
    specialized Array._endMutation()(v70);
    v71 = sub_100081234(*(_QWORD *)&v13[v11[6]]);
    sub_100088638((uint64_t)v71);
    v72 = *(id *)&v13[v11[7]];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
    v74 = *(_QWORD *)(*(_QWORD *)&v209[0] + 16);
    v73 = *(_QWORD *)(*(_QWORD *)&v209[0] + 24);
    if (v74 >= v73 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
    v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v72);
    specialized Array._endMutation()(v75);
    v76 = *(_QWORD *)&v209[0];
    *(_QWORD *)&v207[0] = _swiftEmptyArrayStorage;
    v65 = _swiftEmptyArrayStorage;
    v77 = *(_QWORD *)(*(_QWORD *)&v209[0] + 16);
    if (v77)
    {
      swift_bridgeObjectRetain_n(*(_QWORD *)&v209[0], 2);
      for (i = 0; i != v77; ++i)
      {
        v80 = *(void **)(v76 + 8 * i + 32);
        if (v80)
        {
          v81 = v80;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
          v83 = *(_QWORD *)((*(_QWORD *)&v207[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v82 = *(_QWORD *)((*(_QWORD *)&v207[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v83 >= v82 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
          v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
          specialized Array._endMutation()(v79);
        }
      }
      swift_bridgeObjectRelease(v76);
      v65 = *(_QWORD **)&v207[0];
      v51 = v198;
    }
    else
    {
      swift_bridgeObjectRetain(*(_QWORD *)&v209[0]);
    }
    v63 = (id *)((char *)v63 + 1);
    swift_bridgeObjectRelease(v76);
    swift_bridgeObjectRelease(v76);
    v64 = v66;
    sub_10007C720((uint64_t)v13, v66);
    sub_10008862C((uint64_t)v65);
    v57 = v196;
  }
  while (v63 != v200);
  swift_bridgeObjectRelease_n(v195, 2);
  v89 = v211;
  v29 = v201;
  v56 = v202;
  v55 = (uint64_t)v203;
  if ((unint64_t)v211 >> 62)
    goto LABEL_35;
LABEL_21:
  v90 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v90)
  {
LABEL_22:
    *(_QWORD *)&v211 = _swiftEmptyArrayStorage;
    sub_100081790(0, v90 & ~(v90 >> 63), 0);
    if (v90 < 0)
      goto LABEL_69;
    v200 = (id *)v89;
    v91 = 0;
    v92 = (_QWORD *)v211;
    do
    {
      v93 = v200[v91 + 4];
      v94 = objc_msgSend(v93, "fileProviderItem");
      if (v94)
      {
        v95 = (uint64_t)v94;
        v96 = sub_1000A0258();
        v97 = sub_1000A02E0();
        v98 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
        v89 = v95;
      }
      else
      {
        v99 = objc_msgSend(v93, "representedTag");
        if (v99)
        {
          v100 = v99;
          v101 = v93;
          v89 = (uint64_t)(id)FPTagFromDOCTag(v100);

          v96 = sub_100446EF4();
          v97 = sub_100446F38();
          v98 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
        }
        else
        {
          v96 = sub_100446DA0();
          v97 = sub_100446DE4();
          v98 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
        }
      }
      *(_QWORD *)&v211 = v92;
      v103 = v92[2];
      v102 = v92[3];
      if (v103 >= v102 >> 1)
      {
        sub_100081790(v102 > 1, v103 + 1, 1);
        v92 = (_QWORD *)v211;
      }
      ++v91;
      v92[2] = v103 + 1;
      v104 = &v92[7 * v103];
      v104[4] = v93;
      v104[5] = v93;
      v104[6] = v89;
      v104[8] = v98;
      v104[9] = v96;
      v104[10] = v97;
      v29 = v201;
      v55 = (uint64_t)v203;
    }
    while (v90 != v91);
    swift_bridgeObjectRelease(v200);
    v51 = v198;
    v57 = v196;
    v56 = v202;
    goto LABEL_40;
  }
LABEL_39:
  swift_bridgeObjectRelease(v89);
  v92 = _swiftEmptyArrayStorage;
LABEL_40:
  v112 = swift_allocObject(&unk_1005EC618, 24, 7);
  v113 = sub_100087A00((uint64_t)v92);
  swift_bridgeObjectRelease(v92);
  v178 = v112;
  *(_QWORD *)(v112 + 16) = v113;
  *(_QWORD *)&v211 = &_swiftEmptyDictionarySingleton;
  v114 = v187;
  if (v187)
  {
    __chkstk_darwin(v187);
    *(&v178 - 2) = (uint64_t)&v211;
    sub_100446694(v115, (void (*)(id, id, __n128))sub_100446EEC);
  }
  __chkstk_darwin(v114);
  *(&v178 - 2) = v112 + 16;
  v187 = v116;
  sub_100446978(v116, (void (*)(_BYTE *, _BYTE *))sub_100446E28);
  *(_QWORD *)&v211 = 0;
  *((_QWORD *)&v211 + 1) = 0xE000000000000000;
  v200 = (id *)(v112 + 16);
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(*((_QWORD *)&v211 + 1));
  *(_QWORD *)&v211 = 91;
  *((_QWORD *)&v211 + 1) = 0xE100000000000000;
  v117._countAndFlagsBits = static String._fromSubstring(_:)(v55, v56, v29, v57);
  v118 = v117._object;
  String.append(_:)(v117);
  swift_bridgeObjectRelease(v118);
  v119._object = (void *)0x8000000100535AC0;
  v119._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v119);
  v120 = *((_QWORD *)&v211 + 1);
  sub_1000542B0(v211, *((unint64_t *)&v211 + 1));
  swift_bridgeObjectRelease(v120);
  v121 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v122 = v189;
  static DispatchQoS.unspecified.getter(v121);
  *(_QWORD *)&v211 = _swiftEmptyArrayStorage;
  v123 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v124 = sub_10006922C((uint64_t *)&unk_100641280);
  v125 = sub_10008825C((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280);
  v126 = v191;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v211, v124, v125, v188, v123);
  v127 = v193;
  ((void (*)(char *, _QWORD, uint64_t))v192[13].isa)(v193, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v194);
  v188 = v121;
  v193 = (char *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0, 0xE000000000000000, v122, v126, v127, 0);
  v128 = swift_allocObject(&unk_1005EC640, 24, 7);
  v129 = sub_10008B6D8((uint64_t)_swiftEmptyArrayStorage);
  v195 = v128;
  *(_QWORD *)(v128 + 16) = v129;
  v194 = swift_allocObject(&unk_1005EC668, 24, 7);
  *(_QWORD *)(v194 + 16) = _swiftEmptyArrayStorage;
  v192 = dispatch_group_create();
  v130 = *v200;
  v131 = *((_QWORD *)*v200 + 7);
  v197 = (uint64_t)*v200 + 56;
  v132 = 1 << v130[32];
  v133 = -1;
  if (v132 < 64)
    v133 = ~(-1 << v132);
  v134 = v133 & v131;
  v191 = (char *)OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_itemManager;
  v199 = (unint64_t)(v132 + 63) >> 6;
  swift_bridgeObjectRetain(v130);
  v135 = 0;
  v136 = v192;
  v137 = v195;
  while (1)
  {
    if (v134)
    {
      v138 = __clz(__rbit64(v134));
      v134 &= v134 - 1;
      v139 = v138 | (v135 << 6);
      goto LABEL_62;
    }
    v140 = v135 + 1;
    if (__OFADD__(v135, 1))
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v140 >= v199)
      goto LABEL_65;
    v141 = *(_QWORD *)(v197 + 8 * v140);
    ++v135;
    if (!v141)
    {
      v135 = v140 + 1;
      if (v140 + 1 >= v199)
        goto LABEL_65;
      v141 = *(_QWORD *)(v197 + 8 * v135);
      if (!v141)
      {
        v135 = v140 + 2;
        if (v140 + 2 >= v199)
          goto LABEL_65;
        v141 = *(_QWORD *)(v197 + 8 * v135);
        if (!v141)
          break;
      }
    }
LABEL_61:
    v134 = (v141 - 1) & v141;
    v139 = __clz(__rbit64(v141)) + (v135 << 6);
LABEL_62:
    sub_1000A0110(*((_QWORD *)v130 + 6) + 56 * v139, (uint64_t)&v211);
    v209[0] = v211;
    v209[1] = v212;
    v209[2] = v213;
    v210 = v214;
    v143 = objc_msgSend((id)v211, "fileProviderItem");
    if (v143)
    {
      v144 = v143;
      v145 = objc_msgSend(v143, "itemID");

      if (v145)
      {
        dispatch_group_enter(v136);
        v200 = *(id **)&v191[(_QWORD)v204];
        sub_1000A0110((uint64_t)v209, (uint64_t)v207);
        v146 = swift_allocObject(&unk_1005EC690, 104, 7);
        v147 = v130;
        v148 = v193;
        *(_QWORD *)(v146 + 16) = v193;
        *(_QWORD *)(v146 + 24) = v137;
        v149 = v207[1];
        *(_OWORD *)(v146 + 32) = v207[0];
        *(_OWORD *)(v146 + 48) = v149;
        *(_OWORD *)(v146 + 64) = v207[2];
        v150 = v194;
        *(_QWORD *)(v146 + 80) = v208;
        *(_QWORD *)(v146 + 88) = v150;
        *(_QWORD *)(v146 + 96) = v136;
        aBlock[4] = sub_1000A0CFC;
        v206 = v146;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100083540;
        aBlock[3] = &unk_1005EC6A8;
        v151 = _Block_copy(aBlock);
        v152 = v206;
        v153 = v148;
        v130 = v147;
        swift_retain();
        swift_retain();
        v154 = v136;
        v155 = v152;
        v51 = v198;
        *(_QWORD *)&v156 = swift_release(v155).n128_u64[0];
        objc_msgSend(v200, "fetchItemForItemID:completionHandler:", v145, v151, v156);
        v157 = v151;
        v29 = v201;
        _Block_release(v157);

      }
    }
    sub_1000A00DC((id *)v209);
    v56 = v202;
    v55 = (uint64_t)v203;
  }
  v142 = v140 + 3;
  if (v142 >= v199)
  {
LABEL_65:
    v158 = swift_release(v130);
    v159 = v180;
    v160 = v179;
    v161 = v181;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v180 + 104))(v179, enum case for DispatchQoS.QoSClass.userInitiated(_:), v181, v158);
    v203 = (void *)static OS_dispatch_queue.global(qos:)(v160);
    (*(void (**)(char *, uint64_t))(v159 + 8))(v160, v161);
    v162 = swift_allocObject(&unk_1005EC6E0, 24, 7);
    swift_unknownObjectWeakInit(v162 + 16);
    v163 = (_QWORD *)swift_allocObject(&unk_1005EC708, 88, 7);
    v163[2] = v162;
    v163[3] = v55;
    v163[4] = v56;
    v163[5] = v29;
    v164 = v178;
    v163[6] = v196;
    v163[7] = v164;
    v165 = v195;
    v163[8] = v187;
    v163[9] = v165;
    v163[10] = v194;
    *(_QWORD *)&v213 = sub_1000A0784;
    *((_QWORD *)&v213 + 1) = v163;
    *(_QWORD *)&v211 = _NSConcreteStackBlock;
    *((_QWORD *)&v211 + 1) = 1107296256;
    *(_QWORD *)&v212 = sub_10004A82C;
    *((_QWORD *)&v212 + 1) = &unk_1005EC720;
    v166 = _Block_copy(&v211);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v167 = v189;
    static DispatchQoS.unspecified.getter(v168);
    *(_QWORD *)&v209[0] = _swiftEmptyArrayStorage;
    v169 = v51;
    v170 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v171 = sub_10006922C((uint64_t *)&unk_100647540);
    v172 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    v173 = v184;
    v174 = v186;
    dispatch thunk of SetAlgebra.init<A>(_:)(v209, v171, v172, v186, v170);
    v175 = v203;
    v176 = v192;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v167, v173, v203, v166);
    _Block_release(v166);
    swift_release(v169);

    (*(void (**)(char *, uint64_t))(v185 + 8))(v173, v174);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v167, v183);
    v177 = (_QWORD *)*((_QWORD *)&v213 + 1);
    swift_release(v190);
    swift_release(v164);
    swift_release(v195);
    swift_release(v194);
    swift_release(v162);
    v110 = v177;
    goto LABEL_66;
  }
  v141 = *(_QWORD *)(v197 + 8 * v142);
  if (v141)
  {
    v135 = v142;
    goto LABEL_61;
  }
  while (1)
  {
    v135 = v142 + 1;
    if (__OFADD__(v142, 1))
      break;
    if (v135 >= v199)
      goto LABEL_65;
    v141 = *(_QWORD *)(v197 + 8 * v135);
    ++v142;
    if (v141)
      goto LABEL_61;
  }
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
}

uint64_t sub_100047DC0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_100047F7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100062698(&qword_1006442D8, &qword_1006442D0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10006922C(&qword_1006442D0);
          v13 = sub_1000E0F80(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_100048198(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  void **v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v2 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
LABEL_38:
    v26 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", -1);
    return;
  }
  if (a1 < 0)
    v24 = a1;
  else
    v24 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(a1);
  if (v25 <= 0)
    goto LABEL_38;
  swift_bridgeObjectRetain(a1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v3)
  {
    swift_bridgeObjectRelease(a1);
    __break(1u);
    goto LABEL_38;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v4 = *(id *)(a1 + 32);
  }
  v5 = v4;
  swift_bridgeObjectRelease(a1);
  if (v3 < 0)
  {
LABEL_44:
    __break(1u);
    return;
  }
  if (v2)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v7) < 1)
      goto LABEL_41;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v6)
      goto LABEL_41;
  }
  if (v6 < v3)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if ((a1 & 0xC000000000000001) != 0 && v3 != 1)
  {
    sub_1002438A8();
    v8 = 1;
    do
    {
      v9 = v8 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v8);
      v8 = v9;
    }
    while (v3 != v9);
  }
  if (!v2)
  {
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
    v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v12 = 1;
    v14 = v3 - 1;
    v13 = v3 <= 1;
    if (v3 != 1)
      goto LABEL_23;
LABEL_31:
    swift_unknownObjectRelease(v10);
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v10 = _CocoaArrayWrapper.subscript.getter(1, v3, v19);
  v11 = v20;
  v12 = v21;
  v23 = v22;
  swift_bridgeObjectRelease_n(a1, 2);
  v23 >>= 1;
  v14 = v23 - v12;
  v13 = (uint64_t)v23 <= v12;
  if (v23 == v12)
    goto LABEL_31;
LABEL_23:
  if (v13)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_unknownObjectRetain(v10);
  v15 = (void **)(v11 + 8 * v12);
  do
  {
    v16 = v5;
    v17 = *v15++;
    v18 = v17;
    v5 = objc_msgSend(v5, "configurationByApplyingConfiguration:", v18);

    --v14;
  }
  while (v14);
  swift_unknownObjectRelease_n(v10, 2);
}

void sub_1000485CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100048604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a3;
  v6 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory.Placement(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0);
  v31 = *(_QWORD *)(v13 - 8);
  v32 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v16, "addSubview:", a1);
  isa = (Class)(id)DOCConstraintsToResizeWithSuperview(a1, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  if (!isa)
  {
    v18 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v18);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
  }
  objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "activateConstraints:", isa);

  if (a2)
    objc_msgSend(v16, "setTintColor:", a2);
  v20 = (uint64_t (**)())&v12[*(int *)(sub_10006922C(&qword_10064A0A8) + 48)];
  v21 = enum case for UICellAccessory.DisplayedState.always(_:);
  v22 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v12, v21, v22);
  *v20 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v20[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for UICellAccessory.Placement.trailing(_:), v9);
  v23 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0x520);
  v24 = v16;
  v25 = v23();
  v26 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.actual(_:);
  if ((v25 & 1) != 0)
    v28 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.standard(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v8, *v28, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v8, 0, 1, v26);
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v24, v12, 2, v8, 0, 2);
  static UICellAccessory.customView(configuration:)(v15);

  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v32);
}

id _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  void *v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  id v92;
  void **v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  void *v96;
  uint64_t (*v97)(uint64_t, uint64_t);
  uint64_t v98;

  v9 = *(void **)(a4 + 8);
  v10 = sub_10006922C((uint64_t *)&unk_10064B460);
  v11 = type metadata accessor for UTType(0);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
  v13 = v9;
  static UTType.url.getter(v13);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v14 == v17 && v16 == v18)
  {
    swift_bridgeObjectRelease_n(v16, 2);
    goto LABEL_15;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) != 0)
  {
LABEL_15:
    v36 = (_QWORD *)swift_allocObject(&unk_1005D9330, 40, 7);
    v36[2] = v13;
    v36[3] = v12;
    v36[4] = a3;
    v37 = swift_allocObject(&unk_1005D9358, 32, 7);
    *(_QWORD *)(v37 + 16) = sub_1002ADF08;
    *(_QWORD *)(v37 + 24) = v36;
    v97 = sub_1002ADFC4;
    v98 = v37;
    v93 = _NSConcreteStackBlock;
    v94 = 1107296256;
    v95 = sub_100068430;
    v96 = &unk_1005D9370;
    v38 = _Block_copy(&v93);
    v39 = (void *)objc_opt_self(NSPredicate);
    v13 = v13;
    v40 = a3;
    v41 = objc_msgSend(v39, "predicateWithBlock:", v38);
    goto LABEL_16;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
  v24 = v23;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v22 == v25 && v24 == v26)
  {
    swift_bridgeObjectRelease_n(v24, 2);
    goto LABEL_18;
  }
  v28 = v26;
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 0);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
  {
LABEL_18:
    v45 = (_QWORD *)swift_allocObject(&unk_1005D92B8, 40, 7);
    v45[2] = v13;
    v45[3] = v12;
    v45[4] = a3;
    v46 = swift_allocObject(&unk_1005D92E0, 32, 7);
    *(_QWORD *)(v46 + 16) = sub_1002ADEC4;
    *(_QWORD *)(v46 + 24) = v45;
    v97 = sub_1002ADFC4;
    v98 = v46;
    v93 = _NSConcreteStackBlock;
    v94 = 1107296256;
    v95 = sub_100068430;
    v96 = &unk_1005D92F8;
    v38 = _Block_copy(&v93);
    v47 = (void *)objc_opt_self(NSPredicate);
    v13 = v13;
    v48 = a3;
    v41 = objc_msgSend(v47, "predicateWithBlock:", v38);
    goto LABEL_16;
  }
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTrashedItems);
  v32 = v31;
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v35 = v33;
  if (v30 == v34 && v32 == v33)
  {
    swift_bridgeObjectRelease_n(v32, 2);
LABEL_20:
    swift_bridgeObjectRelease(v12);
    v50 = swift_allocObject(&unk_1005D9240, 24, 7);
    *(_QWORD *)(v50 + 16) = a3;
    v51 = swift_allocObject(&unk_1005D9268, 32, 7);
    *(_QWORD *)(v51 + 16) = sub_1002ADEB8;
    *(_QWORD *)(v51 + 24) = v50;
    v97 = sub_1002ADFC4;
    v98 = v51;
    v93 = _NSConcreteStackBlock;
    v94 = 1107296256;
    v95 = sub_100068430;
    v96 = &unk_1005D9280;
    v38 = _Block_copy(&v93);
    v52 = (void *)objc_opt_self(NSPredicate);
    v53 = a3;
    v41 = objc_msgSend(v52, "predicateWithBlock:", v38);
    goto LABEL_16;
  }
  v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v34, v33, 0);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v35);
  if ((v49 & 1) != 0)
    goto LABEL_20;
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierFavoriteFolders);
  v56 = v55;
  v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v59 = v57;
  if (v54 == v58 && v56 == v57)
  {
    swift_bridgeObjectRelease_n(v56, 2);
LABEL_25:
    swift_bridgeObjectRelease(v12);
    v61 = swift_allocObject(&unk_1005D91C8, 24, 7);
    *(_QWORD *)(v61 + 16) = a3;
    v62 = swift_allocObject(&unk_1005D91F0, 32, 7);
    *(_QWORD *)(v62 + 16) = sub_1002ADEB0;
    *(_QWORD *)(v62 + 24) = v61;
    v97 = sub_1002ADFC4;
    v98 = v62;
    v93 = _NSConcreteStackBlock;
    v94 = 1107296256;
    v95 = sub_100068430;
    v96 = &unk_1005D9208;
    v38 = _Block_copy(&v93);
    v63 = (void *)objc_opt_self(NSPredicate);
    v64 = a3;
    v41 = objc_msgSend(v63, "predicateWithBlock:", v38);
    goto LABEL_16;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v58, v57, 0);
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v59);
  if ((v60 & 1) != 0)
    goto LABEL_25;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSearch);
  v67 = v66;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v70 = v68;
  if (v65 == v69 && v67 == v68)
  {
    swift_bridgeObjectRelease_n(v67, 2);
LABEL_30:
    v72 = (_QWORD *)swift_allocObject(&unk_1005D9150, 40, 7);
    v72[2] = v13;
    v72[3] = v12;
    v72[4] = a3;
    v73 = swift_allocObject(&unk_1005D9178, 32, 7);
    *(_QWORD *)(v73 + 16) = sub_1002ADEA4;
    *(_QWORD *)(v73 + 24) = v72;
    v97 = sub_1002ADFC4;
    v98 = v73;
    v93 = _NSConcreteStackBlock;
    v94 = 1107296256;
    v95 = sub_100068430;
    v96 = &unk_1005D9190;
    v38 = _Block_copy(&v93);
    v74 = (void *)objc_opt_self(NSPredicate);
    v13 = v13;
    v75 = a3;
    v41 = objc_msgSend(v74, "predicateWithBlock:", v38);
    goto LABEL_16;
  }
  v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v67, v69, v68, 0);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v70);
  if ((v71 & 1) != 0)
    goto LABEL_30;
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTaggedItems);
  v78 = v77;
  v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v81 = v79;
  if (v76 == v80 && v78 == v79)
  {
    swift_bridgeObjectRelease_n(v78, 2);
  }
  else
  {
    v82 = _stringCompareWithSmolCheck(_:_:expecting:)(v76, v78, v80, v79, 0);
    swift_bridgeObjectRelease(v78);
    swift_bridgeObjectRelease(v81);
    if ((v82 & 1) == 0)
    {
      swift_bridgeObjectRelease(v12);
      v88 = swift_allocObject(&unk_1005D9060, 32, 7);
      *(_QWORD *)(v88 + 16) = a5;
      *(_QWORD *)(v88 + 24) = a3;
      v89 = swift_allocObject(&unk_1005D9088, 32, 7);
      *(_QWORD *)(v89 + 16) = sub_1000685F0;
      *(_QWORD *)(v89 + 24) = v88;
      v97 = sub_1000684F8;
      v98 = v89;
      v93 = _NSConcreteStackBlock;
      v94 = 1107296256;
      v95 = sub_100068430;
      v96 = &unk_1005D90A0;
      v38 = _Block_copy(&v93);
      v90 = (void *)objc_opt_self(NSPredicate);
      v91 = a5;
      v92 = a3;
      v41 = objc_msgSend(v90, "predicateWithBlock:", v38);
      goto LABEL_16;
    }
  }
  v83 = (_QWORD *)swift_allocObject(&unk_1005D90D8, 48, 7);
  v83[2] = a2;
  v83[3] = v13;
  v83[4] = v12;
  v83[5] = a3;
  v84 = swift_allocObject(&unk_1005D9100, 32, 7);
  *(_QWORD *)(v84 + 16) = sub_1002ADE94;
  *(_QWORD *)(v84 + 24) = v83;
  v97 = sub_1002ADFC4;
  v98 = v84;
  v93 = _NSConcreteStackBlock;
  v94 = 1107296256;
  v95 = sub_100068430;
  v96 = &unk_1005D9118;
  v38 = _Block_copy(&v93);
  v85 = (void *)objc_opt_self(NSPredicate);
  v86 = a2;
  v13 = v13;
  v87 = a3;
  v41 = objc_msgSend(v85, "predicateWithBlock:", v38);
LABEL_16:
  v42 = v41;
  _Block_release(v38);
  v43 = v98;

  swift_release(v43);
  return v42;
}

id sub_100049188(uint64_t a1)
{
  id result;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  id v16;
  _QWORD aBlock[5];
  uint64_t v18;
  Swift::String v19;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v2 = result;
    v19._countAndFlagsBits = 0xD000000000000050;
    v19._object = (void *)0x800000010050FC10;
    v3._object = (void *)0x800000010050FBE0;
    v3._countAndFlagsBits = 0xD000000000000027;
    v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0x6F666E4920746547;
    v5._object = (void *)0xE800000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v19)._object;

    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierInfo);
    v8 = v7;
    v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = sub_10011D210;
    v18 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100120C10;
    aBlock[3] = &unk_1005C7F38;
    v12 = _Block_copy(aBlock);
    v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

    _Block_release(v12);
    swift_release(v18);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    objc_msgSend(v13, "setImage:", v15);
    objc_msgSend(v13, "setSupportsMultipleItems:", 1);
    objc_msgSend(v13, "setNavigationSide:", 2);
    objc_msgSend(v13, "setAvailability:", 1);
    objc_msgSend(v13, "setMenuSortOrder:", 2);
    v16 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithValue:", 1);
    objc_msgSend(v13, "setFilteringPredicate:", v16);

    objc_msgSend(v13, "setRequiresFullyFormedItems:", 0);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004943C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t ObjectType;
  id v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  char v28;
  id *v29;
  uint64_t *v30;
  char *v31;
  char *v32;
  uint64_t *v33;
  char *v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  _QWORD v43[5];
  uint64_t v44;

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCActionManager()), "init");
  objc_msgSend(v3, "setActionManager:", v6);

  v7 = (char *)objc_msgSend(v3, "actionManager");
  v8 = objc_msgSend(v3, "configuration");
  v9 = objc_msgSend(v8, "forbiddenActionIdentifiers");

  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for String);
  v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers];
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = v10;

  v12 = (char *)objc_msgSend(v3, "actionManager", swift_bridgeObjectRelease(v11).n128_f64[0]);
  v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1004D9B40;
  v15 = objc_msgSend(a1, "sourcesActionManager");
  *(_QWORD *)(v14 + 32) = v15;
  v43[0] = v14;
  specialized Array._endMutation()(v15);
  v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers];
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = v43[0];

  objc_msgSend(v3, "setSourceObserver:", a1, swift_bridgeObjectRelease(v16).n128_f64[0]);
  v17 = sub_10013A7CC();
  v18 = swift_allocObject(&unk_1005C99E8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v19 = swift_allocObject(&unk_1005C9A10, 32, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v17;
  v43[4] = sub_100084648;
  v44 = v19;
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 1107296256;
  v43[2] = sub_10002E508;
  v43[3] = &unk_1005C9A28;
  v20 = _Block_copy(v43);
  v21 = v44;
  v22 = v17;
  swift_release(v21);
  objc_msgSend(a1, "retrieveAllSourcesCompletionBlock:", v20);
  _Block_release(v20);
  v23 = objc_msgSend(v3, "configuration");
  v24 = objc_msgSend(v23, "defaultLocation");

  v25 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
  v26 = v25;
  if (!v24)
  {
    if (!v25)
      goto LABEL_6;
LABEL_9:

    goto LABEL_10;
  }
  if (!v25)
  {
    v26 = v24;
    goto LABEL_9;
  }
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v27 = v24;
  v28 = static NSObject.== infix(_:_:)(v27, v26);

  if ((v28 & 1) == 0)
    goto LABEL_10;
LABEL_6:
  if (!DOCUsePhoneIdiomForTraits(0))
  {
LABEL_10:
    v33 = (uint64_t *)sub_100083C0C(0);
    v34 = (char *)objc_msgSend(v3, "displayModeHandler");
    v35 = &v34[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
    *(_QWORD *)v35 = v33;
    v35[8] = 0;

    DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(v33, 0, 0);
    v29 = 0;
    goto LABEL_11;
  }
  v29 = (id *)DOCDocumentSourceIdentifierRecentDocuments;
  v30 = (uint64_t *)sub_100083C0C(DOCDocumentSourceIdentifierRecentDocuments);
  v31 = (char *)objc_msgSend(v3, "displayModeHandler");
  v32 = &v31[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
  *(_QWORD *)v32 = v30;
  v32[8] = 0;

  DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(v30, 0, v29);
LABEL_11:
  v36 = sub_1000838AC((uint64_t)v29);
  sub_100030F5C(v36);
  v37 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v38 = swift_allocObject(v37, 48, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v38 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v38 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v39 = UIViewController.registerForTraitChanges<A>(_:handler:)(v38, sub_100144250, 0, ObjectType);
  swift_unknownObjectRelease(v39);
  v40 = swift_bridgeObjectRelease(v38);
  v41 = UIViewController.registerForUIPDocumentLandingTraitChanges<A>(options:_:)(0, 1, sub_100144270, 0, ObjectType, v40);

  return swift_unknownObjectRelease(v41);
}

void sub_100049DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100049DE4(uint64_t a1, NSObject *a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;
  _OWORD v37[12];
  _OWORD v38[2];
  char v39[32];

  swift_beginAccess(a1 + 16, v39, 0, 0);
  v5 = *(_QWORD *)(a1 + 16);
  v34 = v5 + 64;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(v5);
  v10 = 0;
  if (v8)
    goto LABEL_6;
LABEL_7:
  v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v9)
    {
      v14 = *(_QWORD *)(v34 + 8 * v13);
      ++v10;
      if (v14)
        goto LABEL_22;
      v10 = v13 + 1;
      if (v13 + 1 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v34 + 8 * v10);
      if (v14)
        goto LABEL_22;
      v10 = v13 + 2;
      if (v13 + 2 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v34 + 8 * v10);
      if (v14)
        goto LABEL_22;
      v10 = v13 + 3;
      if (v13 + 3 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v34 + 8 * v10);
      if (v14)
      {
LABEL_22:
        v8 = (v14 - 1) & v14;
        for (i = __clz(__rbit64(v14)) + (v10 << 6); ; i = v11 | (v10 << 6))
        {
          v16 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 224 * i);
          v17 = v16[1];
          v37[0] = *v16;
          v37[1] = v17;
          v18 = v16[5];
          v20 = v16[2];
          v19 = v16[3];
          v37[4] = v16[4];
          v37[5] = v18;
          v37[2] = v20;
          v37[3] = v19;
          v21 = v16[6];
          v22 = v16[7];
          v23 = v16[9];
          v37[8] = v16[8];
          v37[9] = v23;
          v37[6] = v21;
          v37[7] = v22;
          v24 = v16[10];
          v25 = v16[11];
          v26 = v16[12];
          *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)((char *)v16 + 201);
          v37[11] = v25;
          v38[0] = v26;
          v37[10] = v24;
          v27 = *(_QWORD *)&v37[0];
          sub_1002EB2E0(v37);
          dispatch_group_enter(a2);
          sub_1002EB2E0(v37);
          swift_unknownObjectRelease(v27);
          v28 = (void *)*((_QWORD *)&v37[0] + 1);
          swift_unknownObjectRetain(*((_QWORD *)&v37[0] + 1));
          sub_10010CA6C((uint64_t *)v37 + 1);
          v29 = swift_allocObject(&unk_1005E1318, 24, 7);
          *(_QWORD *)(v29 + 16) = a2;
          aBlock[4] = sub_1000A8854;
          v36 = v29;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10004A82C;
          aBlock[3] = &unk_1005E1330;
          v30 = _Block_copy(aBlock);
          v31 = v36;
          v32 = a2;
          LODWORD(v31) = objc_msgSend(v28, "registerGenerationCompletionHandler:", v30, swift_release(v31).n128_f64[0]);
          _Block_release(v30);
          swift_unknownObjectRelease(v28);
          if ((_DWORD)v31)
          {
            sub_100362CFC((uint64_t *)v37);
            *a3 = 1;
            if (!v8)
              goto LABEL_7;
          }
          else
          {
            dispatch_group_leave(v32);
            sub_100362CFC((uint64_t *)v37);
            if (!v8)
              goto LABEL_7;
          }
LABEL_6:
          v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      v15 = v13 + 4;
      if (v15 < v9)
      {
        v14 = *(_QWORD *)(v34 + 8 * v15);
        if (v14)
        {
          v10 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          v10 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_28;
          if (v10 >= v9)
            break;
          v14 = *(_QWORD *)(v34 + 8 * v10);
          ++v15;
          if (v14)
            goto LABEL_22;
        }
      }
    }
LABEL_26:
    swift_release(v5);
    return;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_10004A0D8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10006922C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 1 << *(_BYTE *)(v4 + 32);
    v9 = (_QWORD *)(v4 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 56;
    swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v12)
          goto LABEL_36;
        v19 = v9[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_36;
          v19 = v9[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v12)
              goto LABEL_36;
            v19 = v9[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v12)
              {
LABEL_36:
                swift_release(v4);
                v3 = v31;
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v12)
                    goto LABEL_36;
                  v19 = v9[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_26:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v22 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

uint64_t sub_10004A370()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "isFilesApp"))
  {
    v1 = objc_msgSend((id)objc_opt_self(DOCFeature), "showTips");
    v2 = objc_msgSend(v1, "isEnabled");

    if (v2)
    {
      DOCItemCollectionViewController.getCurrentLocation()();
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "sharedItemsLocation");
      v6 = v5;
      if (v4)
      {
        if (v5)
        {
          sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
          v7 = v4;
          LOBYTE(v2) = static NSObject.== infix(_:_:)(v7, v6);

        }
        else
        {
          LOBYTE(v2) = 0;
          v6 = v4;
        }
      }
      else
      {
        if (!v5)
        {
          LOBYTE(v2) = 1;
          return v2 & 1;
        }
        LOBYTE(v2) = 0;
      }

    }
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

void sub_10004A48C(void *a1)
{
  _QWORD *v1;
  objc_class *v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  objc_msgSend(a1, "_setHostsLayoutEngine:", 1);
  v2 = (objc_class *)type metadata accessor for DOCItemCollectionCellSpringLoadedInteractionBehavior();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files52DOCItemCollectionCellSpringLoadedInteractionBehavior_targetCell]);
  swift_unknownObjectWeakAssign(v4, v1);
  v14.receiver = v3;
  v14.super_class = v2;
  v5 = objc_msgSendSuper2(&v14, "init");
  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x290))();
  v7 = swift_allocObject(&unk_1005D6028, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = objc_allocWithZone((Class)UISpringLoadedInteraction);
  v12[4] = sub_100271EA0;
  v13 = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100271B58;
  v12[3] = &unk_1005D6040;
  v9 = _Block_copy(v12);
  v10 = objc_msgSend(v8, "initWithInteractionBehavior:interactionEffect:activationHandler:", v5, v6, v9, swift_retain().n128_f64[0]);
  _Block_release(v9);
  v11 = v13;
  swift_release(v7);
  swift_release(v11);
  objc_msgSend(v10, "_setPossibleStateDuration:", DOCSpringLoadingPhaseDuration);
  objc_msgSend(v1, "addInteraction:", v10);

  swift_unknownObjectRelease(v6);
}

void sub_10004A62C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  id v18;
  Class isa;
  objc_super v20;

  v2 = v1;
  v4 = type metadata accessor for UICellConfigurationState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for DOCItemCollectionListCell(0);
  v20.receiver = v1;
  v20.super_class = v11;
  objc_msgSendSuper2(&v20, "effectiveAppearanceDidChange:", a1);
  if ((sub_10006D164() & 1) != 0)
  {
    UICollectionViewCell.backgroundConfiguration.getter();
    v12 = type metadata accessor for UIBackgroundConfiguration(0);
    v13 = 0;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12))
      v13 = (void *)UIBackgroundConfiguration.backgroundColor.getter();
    sub_10000CB4C((uint64_t)v10, &qword_100651B30);
    v14 = objc_msgSend(a1, "backgroundColor");
    v15 = v14;
    if (v13)
    {
      if (v14)
      {
        sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
        v16 = v13;
        v17 = static NSObject.== infix(_:_:)(v16, v15);

        if ((v17 & 1) != 0)
          return;
LABEL_12:
        v18 = objc_msgSend(v2, "_bridgedConfigurationState");
        static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

        isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        objc_msgSend(v2, "_bridgedUpdateConfigurationUsingState:", isa);

        return;
      }
      v15 = v13;
LABEL_11:

      goto LABEL_12;
    }
    if (v14)
      goto LABEL_11;
  }
}

uint64_t sub_10004A82C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_10004A858(uint64_t a1, uint64_t a2)
{
  uint64_t object;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t j;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  NSString v64;
  uint64_t v65;
  unint64_t v66;
  char v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  Swift::String v76;
  Swift::Bool v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  Swift::String v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  Swift::String v85;
  void *v86;
  Swift::Bool v87;
  unint64_t v88;
  uint64_t v89;
  Swift::String v90;
  void *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  id v97;
  id v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t result;
  id v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  id v117;
  id v118;
  void *v119;
  unint64_t v121;
  uint64_t v122;
  id v123;
  id v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t inited;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  char v158[64];
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;

  v3 = a1;
  v162 = (uint64_t)_swiftEmptyArrayStorage;
  v163 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      object = a1;
    else
      object = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(object);
    if (!v4)
      goto LABEL_25;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v4)
      goto LABEL_25;
  }
  if (v4 < 1)
  {
    __break(1u);
LABEL_179:
    v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, object);
    goto LABEL_110;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v4; ++i)
    {
      v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      v10 = type metadata accessor for DOCSharedServerSource();
      v11 = swift_dynamicCastClass(v9, v10);
      v12 = v9;
      v13 = v12;
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v7 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v6 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v7 >= v6 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v7 = *(_QWORD *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v7 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v7 + 1, 1);
      }
      v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v13);
      specialized Array._endMutation()(v8);
      swift_unknownObjectRelease(v13);
    }
  }
  else
  {
    v15 = type metadata accessor for DOCSharedServerSource();
    for (j = 0; j != v4; ++j)
    {
      v20 = *(void **)(v3 + 8 * j + 32);
      v21 = swift_dynamicCastClass(v20, v15);
      v22 = v20;
      v23 = v22;
      if (v21)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v18 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v18 = *(_QWORD *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v18 + 1, 1);
      }
      v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v23);
      specialized Array._endMutation()(v19);

    }
  }
LABEL_25:
  v25 = swift_bridgeObjectRelease(v3);
  v160 = (unint64_t)_swiftEmptyArrayStorage;
  v161 = (unint64_t)_swiftEmptyArrayStorage;
  v3 = (unint64_t)*(id *)DOCLog.Source.unsafeMutableAddressor(v25);
  static os_log_type_t.info.getter(v26);
  v27 = sub_10006922C((uint64_t *)&unk_100644560);
  v28 = swift_allocObject(v27, 112, 7);
  v143 = xmmword_1004D4CE0;
  *(_OWORD *)(v28 + 16) = xmmword_1004D4CE0;
  v29 = &type metadata for Int;
  v30 = (unint64_t)&protocol witness table for Int;
  v31 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v28 + 56) = &type metadata for Int;
  *(_QWORD *)(v28 + 64) = &protocol witness table for Int;
  v151 = v31;
  *(_QWORD *)(v28 + 32) = v31;
  object = v163;
  v32 = v163 >> 62;
  if (v163 >> 62)
    goto LABEL_163;
  v33 = *(_QWORD *)((v163 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_27:
  v34 = v162;
  if (!((unint64_t)v162 >> 62))
  {
    v35 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
    v36 = v33 + v35;
    if (!__OFADD__(v33, v35))
      goto LABEL_29;
LABEL_172:
    __break(1u);
LABEL_173:
    if (object < 0)
      v140 = object;
    else
      v140 = object & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(object);
    v37 = _CocoaArrayWrapper.endIndex.getter(v140);
    if (v37)
      goto LABEL_31;
LABEL_42:
    swift_bridgeObjectRelease(object);
    v145 = _swiftEmptyArrayStorage;
    if ((unint64_t)object >> 62)
      goto LABEL_111;
LABEL_43:
    v48 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(object);
    if (!v48)
      goto LABEL_55;
    goto LABEL_44;
  }
  if (v162 < 0)
    v138 = v162;
  else
    v138 = v162 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v162);
  v139 = _CocoaArrayWrapper.endIndex.getter(v138);
  swift_bridgeObjectRelease(v162);
  v36 = v33 + v139;
  if (__OFADD__(v33, v139))
    goto LABEL_172;
LABEL_29:
  *(_QWORD *)(v28 + 96) = v29;
  *(_QWORD *)(v28 + 104) = v30;
  *(_QWORD *)(v28 + 72) = v36;
  os_log(_:dso:log:type:_:)("Sorting sources: %ld ordered source identifiers stored in defaults, %ld sources to sort.", v141, v34);

  swift_bridgeObjectRelease(v28);
  if (v32)
    goto LABEL_173;
  v37 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(object);
  if (!v37)
    goto LABEL_42;
LABEL_31:
  v3 = 0;
  v38 = object & 0xC000000000000001;
  v28 = DOCDocumentSourceIdentifierTrashedItems;
  while (1)
  {
    v39 = v38
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, object)
        : *(id *)(object + 8 * v3 + 32);
    v40 = v39;
    v41 = objc_msgSend(v39, "identifier");
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v32 = v43;
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    if (v42 == v44 && v32 == (_QWORD)v45)
      break;
    v29 = v45;
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v32, v44, v45, 0);

    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v29);
    if ((v30 & 1) != 0)
      goto LABEL_107;
    v47 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_161;
    ++v3;
    if (v47 == v37)
      goto LABEL_42;
  }

  swift_bridgeObjectRelease_n(v32, 2);
LABEL_107:
  swift_bridgeObjectRelease(object);
  v104 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v4 = swift_allocObject(v104, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004D9B40;
  if (v38)
    goto LABEL_179;
  if (v3 >= *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_181;
  }
  v105 = *(id *)(object + 8 * v3 + 32);
LABEL_110:
  *(_QWORD *)(v4 + 32) = v105;
  v159 = (_QWORD *)v4;
  specialized Array._endMutation()(v105);
  v145 = (_QWORD *)v4;

  object = v163;
  if (!(v163 >> 62))
    goto LABEL_43;
LABEL_111:
  if (object < 0)
    v106 = object;
  else
    v106 = object & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(object);
  v48 = _CocoaArrayWrapper.endIndex.getter(v106);
  if (!v48)
  {
LABEL_55:
    swift_bridgeObjectRelease(object);
    v144 = _swiftEmptyArrayStorage;
    if (v151)
    {
LABEL_56:
      v152 = DOCDocumentSourceIdentifierICloudFPv2Managed;
      v149 = DOCDocumentSourceIdentifierICloudFPv2;
      v148 = DOCDocumentSourceIdentifierICloudFPFSManaged;
      v147 = DOCDocumentSourceIdentifierICloudFPFS;
      swift_bridgeObjectRetain(a2);
      object = 0;
      while (1)
      {
        v59 = (uint64_t *)(a2 + 32 + 16 * object);
        v60 = *v59;
        v29 = (void *)v59[1];
        v28 = v163;
        if (v163 >> 62)
        {
          if ((v163 & 0x8000000000000000) != 0)
            v102 = v163;
          else
            v102 = v163 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRetain(v163);
          v61 = _CocoaArrayWrapper.endIndex.getter(v102);
          if (!v61)
          {
LABEL_57:
            swift_bridgeObjectRelease(v29);
            swift_bridgeObjectRelease(v163);
            goto LABEL_58;
          }
        }
        else
        {
          v61 = *(_QWORD *)((v163 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRetain(v163);
          if (!v61)
            goto LABEL_57;
        }
        v150 = object;
        v62 = 0;
        v30 = v163 & 0xC000000000000001;
        v155 = v29;
        v153 = v60;
        v156 = v61;
        while (1)
        {
          if (v30)
            v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v28);
          else
            v63 = *(id *)(v28 + 8 * v62 + 32);
          v64 = v63;
          v32 = (uint64_t)objc_msgSend(v63, "identifier");
          v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
          v3 = v66;

          if (v65 == v60 && v3 == (_QWORD)v29)
          {
            swift_bridgeObjectRelease(v28);

            swift_bridgeObjectRelease(v29);
            goto LABEL_93;
          }
          v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v3, v60, v29, 0);
          swift_bridgeObjectRelease(v3);
          if ((v68 & 1) != 0)
          {
            swift_bridgeObjectRelease(v28);

            goto LABEL_93;
          }
          v69 = type metadata accessor for DOCFileProviderSource();
          v70 = swift_dynamicCastClass(v64, v69);
          if (!v70)
            goto LABEL_85;
          v3 = *(_QWORD *)(v70 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
          if (!v3)
            goto LABEL_85;
          v71 = v64;
          v72 = (id)v3;
          v64 = String._bridgeToObjectiveC()();
          v32 = (uint64_t)objc_msgSend(v72, "isiCloudDriveProvider");
          v73 = objc_msgSend(v72, "isEnterpriseDomain");
          v3 = (unint64_t)objc_msgSend(v72, "isHidden");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
          v75 = v74;
          v76._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v152);
          object = (uint64_t)v76._object;
          v77 = String.hasPrefix(_:)(v76);
          swift_bridgeObjectRelease(v75);
          swift_bridgeObjectRelease(object);
          if (v77)
          {

            v78 = v32 & v73 ^ 1 | v3;
            goto LABEL_76;
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
          v80 = v79;
          v81._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v149);
          v82 = v81._object;
          object = String.hasPrefix(_:)(v81);
          swift_bridgeObjectRelease(v80);
          swift_bridgeObjectRelease(v82);
          if ((object & 1) != 0)
          {

            v78 = v32 ^ 1 | v73 | v3;
LABEL_76:
            v28 = v163;
            v29 = v155;
            v60 = v153;
            v30 = v163 & 0xC000000000000001;
            if ((v78 & 1) == 0)
              goto LABEL_92;
            goto LABEL_86;
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
          v84 = v83;
          v85._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v148);
          v86 = v85._object;
          v87 = String.hasPrefix(_:)(v85);
          swift_bridgeObjectRelease(v84);
          v88 = swift_bridgeObjectRelease(v86).n128_u64[0];
          v29 = v155;
          if (v87)
            break;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
          object = v89;
          v90._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v147);
          v91 = v90._object;
          v3 = String.hasPrefix(_:)(v90);
          swift_bridgeObjectRelease(object);
          v88 = swift_bridgeObjectRelease(v91).n128_u64[0];
          if ((v3 & 1) != 0)
            break;

          v30 = v163 & 0xC000000000000001;
          v28 = v163;
          v60 = v153;
LABEL_85:

LABEL_86:
          v96 = v62 + 1;
          if (__OFADD__(v62, 1))
          {
LABEL_158:
            __break(1u);
            goto LABEL_159;
          }
          ++v62;
          if (v96 == v156)
          {
            swift_bridgeObjectRelease(v29);
            swift_bridgeObjectRelease(v28);
            object = v150;
            goto LABEL_58;
          }
        }
        object = (uint64_t)objc_msgSend(v72, "providerID", *(double *)&v88);
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(object);
        v3 = v92;

        v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
        v95 = v93;
        v28 = v163;
        if (v32 != v94 || v3 != v93)
        {
          object = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v3, v94, v93, 0);

          swift_bridgeObjectRelease(v3);
          swift_bridgeObjectRelease(v95);
          v60 = v153;
          v30 = v163 & 0xC000000000000001;
          if ((object & 1) != 0)
            goto LABEL_92;
          goto LABEL_86;
        }

        swift_bridgeObjectRelease_n(v3, 2);
        v30 = v163 & 0xC000000000000001;
LABEL_92:
        swift_bridgeObjectRelease(v29);
        v29 = (void *)v28;
LABEL_93:
        swift_bridgeObjectRelease(v29);
        if (!v30)
        {
          if (v62 < *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v97 = *(id *)(v28 + 8 * v62 + 32);
            goto LABEL_96;
          }
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          if (object < 0)
            v137 = object;
          else
            v137 = object & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(object);
          v33 = _CocoaArrayWrapper.endIndex.getter(v137);
          swift_bridgeObjectRelease(object);
          goto LABEL_27;
        }
        v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v28);
LABEL_96:
        v98 = v97;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97);
        v100 = *(_QWORD *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v99 = *(_QWORD *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v100 >= v99 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v99 > 1, v100 + 1, 1);
        v101 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v100, v98);
        specialized Array._endMutation()(v101);

        object = v150;
LABEL_58:
        if (++object == v151)
        {
          swift_bridgeObjectRelease(a2);
          v103 = (_QWORD *)v161;
          goto LABEL_122;
        }
      }
    }
    goto LABEL_121;
  }
LABEL_44:
  v3 = 0;
  v49 = object & 0xC000000000000001;
  v28 = DOCDocumentSourceIdentifierSharedItems;
  while (1)
  {
    v50 = v49
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, object)
        : *(id *)(object + 8 * v3 + 32);
    v51 = v50;
    v52 = objc_msgSend(v50, "identifier");
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v32 = v54;
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    if (v53 == v55 && v32 == (_QWORD)v56)
      break;
    v29 = v56;
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v32, v55, v56, 0);

    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v29);
    if ((v30 & 1) != 0)
      goto LABEL_117;
    v58 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_162;
    ++v3;
    if (v58 == v48)
      goto LABEL_55;
  }

  swift_bridgeObjectRelease_n(v32, 2);
LABEL_117:
  swift_bridgeObjectRelease(object);
  v107 = sub_10006922C((uint64_t *)&unk_1006441A0);
  result = swift_allocObject(v107, 40, 7);
  v4 = result;
  *(_OWORD *)(result + 16) = xmmword_1004D9B40;
  if (!v49)
  {
    if (v3 >= *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v109 = *(id *)(object + 8 * v3 + 32);
    goto LABEL_120;
  }
LABEL_181:
  v109 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, object);
LABEL_120:
  *(_QWORD *)(v4 + 32) = v109;
  v159 = (_QWORD *)v4;
  specialized Array._endMutation()(v109);
  v144 = (_QWORD *)v4;

  if (v151)
    goto LABEL_56;
LABEL_121:
  v103 = _swiftEmptyArrayStorage;
LABEL_122:
  v159 = v103;
  v110 = swift_bridgeObjectRetain(v163);
  sub_1000887DC(v110);
  sub_1000887DC((uint64_t)v144);
  sub_1000887DC((uint64_t)v145);
  v111 = v159;
  v154 = v163;
  if (v151)
  {
    swift_bridgeObjectRetain(a2);
    v112 = 0;
    while (1)
    {
      v113 = (uint64_t *)(a2 + 32 + 16 * v112);
      v114 = *v113;
      v28 = v113[1];
      object = v162;
      if ((unint64_t)v162 >> 62)
      {
        if (v162 < 0)
          v128 = v162;
        else
          v128 = v162 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRetain(v162);
        v115 = _CocoaArrayWrapper.endIndex.getter(v128);
        if (v115)
        {
LABEL_128:
          v157 = v112;
          v116 = 0;
          v3 = v162 & 0xC000000000000001;
          while (1)
          {
            if (v3)
              v117 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v116, v162);
            else
              v117 = *(id *)(v162 + 8 * v116 + 32);
            v32 = (uint64_t)v117;
            v118 = objc_msgSend(v117, "identifier");
            v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
            v29 = v119;

            if (v30 == v114 && v29 == (void *)v28)
            {
              swift_bridgeObjectRelease(v162);

              v122 = v28;
              goto LABEL_142;
            }
            v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v29, v114, v28, 0);

            swift_bridgeObjectRelease(v29);
            if ((v30 & 1) != 0)
              break;
            v121 = v116 + 1;
            if (__OFADD__(v116, 1))
            {
              __break(1u);
              goto LABEL_158;
            }
            ++v116;
            if (v121 == v115)
            {
              swift_bridgeObjectRelease(v28);
              swift_bridgeObjectRelease(v162);
              v112 = v157;
              goto LABEL_125;
            }
          }
          v122 = v162;
LABEL_142:
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v122);
          if (v3)
          {
            v123 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v116, v162);
          }
          else
          {
            if (v116 >= *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_160;
            v123 = *(id *)(v162 + 8 * v116 + 32);
          }
          v124 = v123;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v123);
          v126 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v125 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x18);
          v112 = v157;
          if (v126 >= v125 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v125 > 1, v126 + 1, 1);
          v127 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v126, v124);
          specialized Array._endMutation()(v127);

          goto LABEL_125;
        }
      }
      else
      {
        v115 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRetain(v162);
        if (v115)
          goto LABEL_128;
      }
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v162);
LABEL_125:
      if (++v112 == v151)
      {
        swift_bridgeObjectRelease(a2);
        v129 = (_QWORD *)v160;
        v130 = v162;
        v111 = v159;
        goto LABEL_156;
      }
    }
  }
  v129 = _swiftEmptyArrayStorage;
  v130 = v142;
LABEL_156:
  v159 = v129;
  v131 = swift_bridgeObjectRetain(v130);
  sub_1000887DC(v131);
  v132 = v159;
  v133 = sub_10006922C(&qword_100650AB8);
  inited = swift_initStackObject(v133, v158);
  *(_OWORD *)(inited + 16) = v143;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v111;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = v132;
  v135 = sub_1003F95A4(inited);
  swift_setDeallocating(inited);
  v136 = sub_10006922C(&qword_100650AC0);
  swift_arrayDestroy(inited + 32, 2, v136);
  swift_bridgeObjectRelease(v130);
  swift_bridgeObjectRelease(v154);
  return v135;
}

void sub_10004B7D8(unint64_t a1, char *a2, void *a3, char a4)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t ObjectType;
  NSObject *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  void **v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  char v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  void *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char v78;
  unint64_t v79;
  void *v80;
  uint64_t v81;
  id *v82;
  void **aBlock;
  unint64_t v84;
  void *v85;
  void *v86;
  void (*v87)();
  _QWORD *v88;
  unint64_t v89[4];

  v8 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state;
  v9 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state];
  if (v9 != 5)
  {
    sub_1000A850C(a1);
    sub_1000A852C(v9);
    v10 = sub_1002C6DC4(v9, a1);
    sub_1000A851C(a1);
    sub_1000A853C(v9);
    if ((v10 & 1) != 0)
      return;
    v11 = *(_QWORD *)&a2[v8];
    if (v11 != 5)
    {
      sub_1000A852C(*(_QWORD *)&a2[v8]);
      v12 = sub_1002C7500(v11, a1);
      sub_1000A853C(v11);
      if ((v12 & 1) == 0)
        return;
    }
  }
  v80 = a3;
  if (!a3)
  {
    v13 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource], a2);
    v80 = (void *)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 8))(a1, ObjectType, v13);
    if (!v80)
      return;
  }
  v15 = *(NSObject **)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_queue];
  v77 = a3;
  v16 = a3;
  dispatch_suspend(v15);
  v18 = *(id *)DOCLog.UI.unsafeMutableAddressor(v17);
  v19 = static os_log_type_t.debug.getter();
  v20 = sub_10006922C((uint64_t *)&unk_100644560);
  v21 = swift_allocObject(v20, 72, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1004D9670;
  aBlock = 0;
  v84 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  v89[0] = a1;
  _print_unlocked<A, B>(_:_:)(v89, &aBlock, &type metadata for DOCBrowserContainerState, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v22._countAndFlagsBits = 0x747320646C6F202CLL;
  v22._object = (void *)0xEC00000020657461;
  String.append(_:)(v22);
  v89[0] = *(_QWORD *)&a2[v8];
  sub_1000A852C(v89[0]);
  v23 = sub_10006922C(&qword_10064D540);
  v24._countAndFlagsBits = String.init<A>(describing:)(v89, v23);
  object = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(object);
  v26 = aBlock;
  v27 = v84;
  *(_QWORD *)(v21 + 56) = &type metadata for String;
  *(_QWORD *)(v21 + 64) = sub_10006A638();
  *(_QWORD *)(v21 + 32) = v26;
  *(_QWORD *)(v21 + 40) = v27;
  os_log(_:dso:log:type:_:)("About to change state to %@", 27, 2, &_mh_execute_header, v18, v19, v21);

  swift_bridgeObjectRelease(v21);
  v28 = *(_QWORD *)&a2[v8];
  *(_QWORD *)&a2[v8] = a1;
  sub_1000A850C(a1);
  sub_1000A853C(v28);
  v29 = objc_msgSend(a2, "childViewControllers");
  v81 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v81);

  v79 = a1;
  v78 = a4;
  if ((unint64_t)v30 >> 62)
  {
LABEL_41:
    if (v30 < 0)
      v52 = v30;
    else
      v52 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v31 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v30);
    if (v31)
      goto LABEL_9;
  }
  else
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v31)
    {
LABEL_9:
      v82 = (id *)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v89, 0, 0);
      v32 = 4;
      while (1)
      {
        if ((v30 & 0xC000000000000001) != 0)
          v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v30);
        else
          v34 = *(id *)(v30 + 8 * v32);
        v35 = v34;
        v36 = v32 - 3;
        if (__OFADD__(v32 - 4, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        if (!*v82)
          break;
        v37 = *v82;
        v38 = static NSObject.== infix(_:_:)(v35, v37);

        if ((v38 & 1) == 0)
          break;
        v39 = objc_msgSend(v35, "view");
        if (!v39)
        {
          __break(1u);
LABEL_58:
          __break(1u);
          return;
        }
        v33 = v39;
        objc_msgSend(v39, "setHidden:", 1);
        v40 = v35;
LABEL_12:

        ++v32;
        if (v36 == v31)
          goto LABEL_45;
      }
      v41 = objc_msgSend(v35, "presentedViewController");
      v40 = v41;
      if (v41)
      {
        aBlock = (void **)swift_getObjectType(v41, v42);
        v43 = sub_10006922C(&qword_10064D548);
        v44 = String.init<A>(describing:)(&aBlock, v43);
        v46 = v45;
        v47 = type metadata accessor for DOCDocumentPickerViewController();
        if (swift_dynamicCastClass(v40, v47)
          || (v48 = objc_opt_self(QLPreviewController), swift_dynamicCastObjCClass(v40, v48)))
        {
          v49 = v46;
LABEL_25:
          v50 = swift_bridgeObjectRelease(v49).n128_u64[0];
LABEL_30:
          if (objc_msgSend(a2, "_appearState", *(double *)&v50) == 1
            || objc_msgSend(a2, "_appearState") == 2)
          {
            objc_msgSend(v35, "beginAppearanceTransition:animated:", 0, 0);
          }
          sub_1002C4C6C(v35);
          if (objc_msgSend(a2, "_appearState") == 1
            || objc_msgSend(a2, "_appearState") == 2
            || objc_msgSend(a2, "_appearState") == 3)
          {
            objc_msgSend(v35, "endAppearanceTransition");
          }
          v33 = v35;
          goto LABEL_12;
        }
        if (v44 == 0xD000000000000027)
        {
          v49 = 0x8000000100523E90;
          if (v46 == 0x8000000100523E90)
            goto LABEL_25;
        }
      }
      else
      {
        v44 = 0;
        v46 = 0xE000000000000000;
      }
      v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, 0xD000000000000027, 0x8000000100523E90, 0);
      v50 = swift_bridgeObjectRelease(v46).n128_u64[0];
      if (v40 && (v51 & 1) == 0)
        objc_msgSend(v40, "dismissViewControllerAnimated:completion:", 0, 0, *(double *)&v50);
      goto LABEL_30;
    }
  }
LABEL_45:
  v53 = objc_msgSend(a2, "presentedViewController", swift_bridgeObjectRelease(v30).n128_f64[0]);
  if (v53)
  {
    v54 = v53;
    v55 = type metadata accessor for DOCGetInfoErrorPresentingViewController();
    v56 = (void *)swift_dynamicCastClass(v54, v55);
    if (v56)
      objc_msgSend(v56, "dismissViewControllerAnimated:completion:", 0, 0);

  }
  v57 = v80;
  sub_1002C3B58(v80, v58);
  v59 = swift_allocObject(&unk_1005DA640, 32, 7);
  *(_QWORD *)(v59 + 16) = a2;
  *(_QWORD *)(v59 + 24) = v57;
  v60 = (_QWORD *)swift_allocObject(&unk_1005DA668, 40, 7);
  v60[2] = a2;
  v60[3] = v79;
  v60[4] = v57;
  v61 = v57;
  v62 = a2;
  sub_1000A850C(v79);
  v63 = v61;
  v64 = v62;
  sub_100054EB4(v63, (char)objc_msgSend(v64, "isViewLoaded"));
  if (!v77)
  {
    v66 = *(_QWORD *)&v64[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    v67 = swift_getObjectType(*(_QWORD *)&v64[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource], v65);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 16))(v79, v67, v66);
  }
  sub_10000DC70();
  if ((v78 & 1) != 0)
  {
    v68 = objc_msgSend(v64, "view");
    if (!v68)
      goto LABEL_58;
    v69 = v68;
    v70 = (void *)objc_opt_self(UIView);
    v87 = sub_1002C7D24;
    v88 = (_QWORD *)v59;
    aBlock = _NSConcreteStackBlock;
    v84 = 1107296256;
    v85 = sub_10004A82C;
    v86 = &unk_1005DA680;
    v71 = _Block_copy(&aBlock);
    v72 = v88;
    swift_retain();
    swift_release(v72);
    v87 = sub_1002C7D68;
    v88 = v60;
    aBlock = _NSConcreteStackBlock;
    v84 = 1107296256;
    v85 = sub_10016C02C;
    v86 = &unk_1005DA6A8;
    v73 = _Block_copy(&aBlock);
    v74 = v88;
    swift_retain();
    swift_release(v74);
    objc_msgSend(v70, "transitionWithView:duration:options:animations:completion:", v69, 5242880, v71, v73, 0.2);
    swift_release(v60);
    swift_release(v59);

    _Block_release(v73);
    _Block_release(v71);
  }
  else
  {
    v69 = v63;
    sub_1002C3C24(v80, v75);
    sub_1002C3B58(0, v76);
    sub_10002A100(v64, v79, (uint64_t)v69);
    swift_release(v60);
    swift_release(v59);
  }

}

void *sub_10004C010(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_22;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v26))
  {
    v28 = v2;
    v29 = v2 & 0xC000000000000001;
    v4 = 4;
    while (1)
    {
      v5 = v29 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = v3;
      v9 = objc_msgSend(v5, "identifier");
      v10 = objc_msgSend(a2, "sourceIdentifier");
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v16 = v11 == v14 && v13 == v15;
      if (v16)
      {

        swift_bridgeObjectRelease_n(v13, 2);
LABEL_19:
        swift_bridgeObjectRelease(v28);
        return v6;
      }
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);

      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) != 0)
        goto LABEL_19;
      v19 = type metadata accessor for DOCFileProviderSource();
      v20 = swift_dynamicCastClass(v6, v19);
      if (v20)
      {
        v21 = *(void **)(v20 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
        if (v21)
        {
          v22 = v6;
          v23 = v21;
          v24 = objc_msgSend(a2, "sourceIdentifier");
          v25 = sub_10003C0D0((uint64_t)v24);

          if ((v25 & 1) != 0)
            goto LABEL_19;
        }
      }

      ++v4;
      v3 = v8;
      v16 = v7 == v8;
      v2 = v28;
      if (v16)
      {
        swift_bridgeObjectRelease(v28);
        return 0;
      }
    }
    __break(1u);
LABEL_22:
    if (v2 < 0)
      v26 = v2;
    else
      v26 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  swift_bridgeObjectRelease(v2);
  return 0;
}

void sub_10004C254()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v22;
  float64x2_t v23;
  double v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  void *v42;
  uint64_t v43;
  float64x2_t *v44;
  char v45[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v45, 0, 0);
  if (*v1 == 1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v3, "preparedCells");
      if (v4)
      {
        v5 = v4;
        v6 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
        v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

        v42 = v3;
        v43 = v0;
        if ((unint64_t)v7 >> 62)
          goto LABEL_25;
        v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        while (v8)
        {
          v44 = (float64x2_t *)(v43 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics);
          v9 = v7 & 0xC000000000000001;
          v10 = 4;
          while (1)
          {
            v11 = v9
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v7)
                : *(id *)(v7 + 8 * v10);
            v12 = v11;
            v13 = v10 - 3;
            if (__OFADD__(v10 - 4, 1))
              break;
            v14 = type metadata accessor for DOCItemCollectionCell();
            v15 = (_QWORD *)swift_dynamicCastClass(v12, v14);
            if (v15)
            {
              v16 = (*(uint64_t (**)(void))((swift_isaMask & *v15) + 0x1F8))();
              if (v16)
              {
                v17 = (char *)v16;
                v18 = v44[2].f64[0];
                v19 = v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics;
                v21 = *v44;
                v20 = v44[1];
                v23 = *(float64x2_t *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics);
                v22 = *(float64x2_t *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 16);
                v24 = *(double *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 32);
                v25 = *(_BYTE *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40);
                *(float64x2_t *)v19 = *v44;
                *(float64x2_t *)(v19 + 16) = v20;
                *(double *)(v19 + 32) = v18;
                *(_BYTE *)(v19 + 40) = 0;
                if ((v25 & 1) != 0
                  || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v21, v23), (int32x4_t)vceqq_f64(v20, v22))), 0xFuLL))) & 1) == 0|| v18 != v24)
                {
                  v26 = v7;
                  v27 = v8;
                  v28 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                  v29 = *(_QWORD *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
                  if ((v29 & 0x400) == 0)
                  {
                    v29 |= 0x400uLL;
                    *(_QWORD *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v29;
                  }
                  if (!*(_QWORD *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
                    && !sub_10007BAFC())
                  {
                    *(_QWORD *)&v17[v28] = 0;
                    v30 = objc_autoreleasePoolPush();
                    sub_10006D2D4(v29, (uint64_t)v17);
                    objc_autoreleasePoolPop(v30);
                  }
                  v8 = v27;
                  v7 = v26;
                }

              }
            }

            ++v10;
            if (v13 == v8)
              goto LABEL_29;
          }
          __break(1u);
LABEL_25:
          if (v7 < 0)
            v31 = v7;
          else
            v31 = v7 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v7);
          v8 = _CocoaArrayWrapper.endIndex.getter(v31);
          swift_bridgeObjectRelease(v7);
        }
LABEL_29:
        swift_bridgeObjectRelease(v7);
        v32 = (uint64_t)sub_100033CA4();
        v33 = v32;
        if ((unint64_t)v32 >> 62)
        {
          if (v32 >= 0)
            v32 &= 0xFFFFFFFFFFFFFF8uLL;
          v34 = _CocoaArrayWrapper.endIndex.getter(v32);
          if (!v34)
            goto LABEL_40;
        }
        else
        {
          v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v34)
          {
LABEL_40:

            swift_bridgeObjectRelease(v33);
            return;
          }
        }
        if (v34 >= 1)
        {
          v35 = 0;
          v36 = v43 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics;
          do
          {
            if ((v33 & 0xC000000000000001) != 0)
              v37 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
            else
              v37 = (char *)*(id *)(v33 + 8 * v35 + 32);
            v38 = v37;
            ++v35;
            v39 = *(_QWORD *)(v36 + 32);
            v40 = &v37[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
            v41 = *(_OWORD *)(v36 + 16);
            *(_OWORD *)v40 = *(_OWORD *)v36;
            *((_OWORD *)v40 + 1) = v41;
            *((_QWORD *)v40 + 4) = v39;
            sub_100422DD8();

          }
          while (v34 != v35);
          goto LABEL_40;
        }
        __break(1u);
      }
      __break(1u);
    }
  }
}

uint64_t sub_10004C5B4(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

unint64_t sub_10004C6C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006434D0;
  if (!qword_1006434D0)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006434D0);
  }
  return result;
}

uint64_t type metadata accessor for DOCFullDocumentManagerNavigationController()
{
  return objc_opt_self(_TtC5Files42DOCFullDocumentManagerNavigationController);
}

uint64_t sub_10004C720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t Strong;
  void *v41;
  Class isa;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  Class v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t aBlock[5];
  uint64_t v65;

  v5 = v4;
  v63 = a2;
  v9 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v59 = a1;
    else
      v59 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v59);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = _swiftEmptyArrayStorage;
  v61 = v9;
  v62 = a4;
  if (v10)
  {
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    result = specialized ContiguousArray.reserveCapacity(_:)(v10);
    if (v10 < 0)
    {
      __break(1u);
      goto LABEL_48;
    }
    v60 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v13 = 0;
      do
      {
        v14 = v13 + 1;
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
        v16 = *(id *)(v15 + 16);
        v17 = swift_unknownObjectRelease(v15);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v18 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
        specialized ContiguousArray._endMutation()(v19);
        v13 = v14;
      }
      while (v10 != v14);
    }
    else
    {
      v21 = (uint64_t *)(a1 + 32);
      v22 = v10;
      do
      {
        v23 = *v21++;
        v24 = *(id *)(v23 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v25 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
        specialized ContiguousArray._endMutation()(v26);
        --v22;
      }
      while (v22);
    }
    v20 = (_QWORD *)aBlock[0];
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    if ((a1 & 0xC000000000000001) != 0)
    {
      v27 = 0;
      a3 = v60;
      do
      {
        v28 = v27 + 1;
        v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, a1);
        v30 = *(id *)(v29 + 24);
        v31 = swift_unknownObjectRelease(v29);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v32 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
        v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
        specialized ContiguousArray._endMutation()(v33);
        v27 = v28;
      }
      while (v10 != v28);
    }
    else
    {
      v34 = (uint64_t *)(a1 + 32);
      a3 = v60;
      do
      {
        v35 = *v34++;
        v36 = *(id *)(v35 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
        v37 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
        v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v36);
        specialized ContiguousArray._endMutation()(v38);
        --v10;
      }
      while (v10);
    }
    v11 = (_QWORD *)aBlock[0];
  }
  else
  {
    v20 = _swiftEmptyArrayStorage;
  }
  v39 = v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate, a2);
  if (Strong)
  {
    v41 = (void *)Strong;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v41, "hierarchyController:willSet:animated:", v5, isa, v63 & 1);

    swift_unknownObjectRelease(v41);
  }
  DOCHierarchyController.locations.setter((uint64_t)v20);
  v44 = swift_unknownObjectWeakLoadStrong(v39, v43);
  if (v44)
  {
    v45 = (void *)v44;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v46 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v45, "hierarchyController:didSet:animated:", v5, v46, v63 & 1);

    swift_unknownObjectRelease(v45);
  }
  else
  {
    swift_bridgeObjectRelease(v11);
  }
  if (!objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    goto LABEL_39;
  if (v61)
  {
    if (a1 < 0)
      v49 = a1;
    else
      v49 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v49);
    v48 = result;
    if (!result)
      goto LABEL_38;
    goto LABEL_32;
  }
  v48 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(a1);
  if (v48)
  {
LABEL_32:
    if (v48 >= 1)
    {
      v50 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v51 = specialized _ArrayBuffer._getElementSlowPath(_:)(v50, a1);
        }
        else
        {
          v51 = *(_QWORD *)(a1 + 8 * v50 + 32);
          swift_retain();
        }
        ++v50;
        aBlock[0] = v51;
        sub_1001F3508(aBlock, 0xD000000000000038, 0x8000000100518270);
        swift_release(v51);
      }
      while (v48 != v50);
      goto LABEL_38;
    }
LABEL_48:
    __break(1u);
    return result;
  }
LABEL_38:
  swift_bridgeObjectRelease(a1);
LABEL_39:
  v52 = (void *)swift_unknownObjectWeakLoadStrong(v39, v47);
  if (!v52
    || (v53 = v52,
        v54 = objc_msgSend(v52, "hierarchyChangeTransitionCoordinator"),
        swift_unknownObjectRelease(v53),
        !v54))
  {
    v55 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    v54 = objc_msgSend(v55, "_definiteTransitionCoordinator");

  }
  v56 = swift_allocObject(&unk_1005D0298, 32, 7);
  *(_QWORD *)(v56 + 16) = a3;
  *(_QWORD *)(v56 + 24) = v62;
  aBlock[4] = (uint64_t)sub_100066584;
  v65 = v56;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100018CC0;
  aBlock[3] = (uint64_t)&unk_1005D02B0;
  v57 = _Block_copy(aBlock);
  v58 = v65;
  swift_retain();
  swift_release(v58);
  objc_msgSend(v54, "animateAlongsideTransition:completion:", 0, v57);
  _Block_release(v57);
  return swift_unknownObjectRelease(v54);
}

_QWORD *sub_10004CC6C(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  _BYTE *v6;
  _BYTE *v7;
  uint64_t ObjectType;
  char *v14;
  id v15;
  _BYTE *v16;
  id v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  id v21;
  void (*v22)(id);
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  objc_super v29;

  v7 = v6;
  ObjectType = swift_getObjectType(v7, a2);
  v14 = &v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY] = 0;
  v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemStatusBadge] = 0;
  v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemAccessStatusBadge] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___renameGestureRecognizer] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_actions] = _swiftEmptyArrayStorage;
  v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_canShowBackgroundView] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView] = 0;
  v7[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming] = 0;
  v15 = objc_allocWithZone((Class)type metadata accessor for DOCBadgedFittingImageView());
  v16 = v7;
  v17 = objc_msgSend(v15, "initWithFrame:", a3, a4, a5, a6);
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView] = v17;
  v16[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isDummyCell] = a1 != 0;

  v29.receiver = v16;
  v29.super_class = (Class)type metadata accessor for DOCItemCollectionCell();
  v18 = objc_msgSendSuper2(&v29, "initWithFrame:", a3, a4, a5, a6);
  v19 = v18;
  if (a1)
  {
    v20 = v18;
    v21 = a1;
  }
  else
  {
    v21 = objc_msgSend(v18, "contentView");
  }
  v22 = *(void (**)(id))((swift_isaMask & *v19) + 0x268);
  v23 = a1;
  v22(v21);

  v24 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v25 = swift_allocObject(v24, 48, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v25 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v25 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v26 = v19;
  v27 = UIView.registerForTraitChanges<A>(_:handler:)(v25, sub_100271BEC, 0, ObjectType);
  swift_unknownObjectRelease(v27);
  swift_bridgeObjectRelease(v25);

  return v26;
}

uint64_t sub_10004CF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  void *v42;
  _QWORD v43[3];
  char v44[24];
  __int128 v45;
  uint64_t v46;

  v1 = v0;
  v2 = sub_10006922C(&qword_100657830);
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v9, v44, 0, 0);
  v38 = v9;
  sub_1000271D4(v9, (uint64_t)&v45, &qword_100642730);
  if (v46)
  {
    v10 = sub_10006922C((uint64_t *)&unk_1006455F0);
    if ((swift_dynamicCast(v43, &v45, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
    {
      v11 = (id)v43[0];
      goto LABEL_8;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)&v45, &qword_100642730);
  }
  if (qword_1006411E8 != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v11 = (id)qword_100657778;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v12 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v5);
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v12)
  {
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
    result = *(_QWORD *)(v14 + 24);
    v37 = *(_QWORD *)(result + 16);
    if (v37)
    {
      v35 = result + 32;
      v32 = result;
      swift_bridgeObjectRetain_n(result, 2);
      v31 = v14;
      swift_retain();
      v36 = (uint64_t *)(v14 + 32);
      swift_beginAccess(v14 + 32, v43, 0, 0);
      v15 = 0;
      v16 = &qword_100642730;
      v34 = (char *)&type metadata for Any + 8;
      v33 = v4;
      while (1)
      {
        v18 = *(_OWORD *)(v35 + 16 * v15);
        v19 = *v36;
        v20 = *(_QWORD *)(*v36 + 16);
        v41 = v18;
        if (v20)
        {
          v21 = v16;
          sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
          v22 = v41;
          swift_bridgeObjectRetain_n(v19, 2);
          swift_unknownObjectRetain(v22);
          v23 = 32;
          while (1)
          {
            v24 = *(_QWORD *)(v19 + v23);
            v25 = *(_QWORD *)(v24 + 24);
            v26 = *(void **)(v22 + 24);
            swift_unknownObjectRetain(v24);
            v27 = v26;
            LOBYTE(v25) = static NSObject.== infix(_:_:)(v25, v27);

            if ((v25 & 1) != 0)
              break;
            swift_unknownObjectRelease(v24);
            v23 += 16;
            if (!--v20)
              goto LABEL_20;
          }
          swift_unknownObjectRelease(v24);
LABEL_20:
          swift_bridgeObjectRelease_n(v19, 2);
          v16 = v21;
          v4 = v33;
        }
        else
        {
          swift_unknownObjectRetain(v18);
        }
        v28 = sub_1000A6A40();
        v29 = v41;
        swift_unknownObjectRetain(v41);
        NSDiffableDataSourceSectionSnapshot.init()(&_s11OutlineItemVN, v28);
        sub_1000271D4(v38, (uint64_t)&v45, v16);
        if (!v46)
          break;
        v30 = sub_10006922C((uint64_t *)&unk_1006455F0);
        if ((swift_dynamicCast(&v42, &v45, v34, v30, 6) & 1) == 0)
          goto LABEL_25;
        v17 = v42;
LABEL_12:
        ++v15;
        v45 = v41;
        UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)(v4, &v45, 0, 0, 0);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v40);
        swift_unknownObjectRelease_n(v29, 2);
        if (v15 == v37)
        {
          swift_release(v31);
          return swift_bridgeObjectRelease_n(v32, 2);
        }
      }
      sub_10000CB4C((uint64_t)&v45, v16);
LABEL_25:
      if (qword_1006411E8 != -1)
        swift_once(&qword_1006411E8, sub_1000A3F70);
      v17 = (id)qword_100657778;
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t sub_10004D378()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v9[5];
  uint64_t v10;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1005D6078, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_1005D60A0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10027223C;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_10010DB64;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10006655C;
  v9[3] = &unk_1005D60B8;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain();
  swift_release(v5);
  objc_msgSend(v1, "performWithoutAnimation:", v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 101, 52, 40, 1);
  swift_release(v2);
  result = swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_10004D4AC(char a1)
{
  _BYTE *v1;
  double v3;
  double v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double MidX;
  double v22;
  double MidY;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _BYTE *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  _QWORD aBlock[5];
  uint64_t v36;
  CGRect v37;
  CGRect v38;

  if (v1[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode] != 1)
    return;
  objc_msgSend(v1, "frame");
  if (v4 == 0.0 && v3 == 0.0)
    return;
  v5 = objc_msgSend(v1, "effectiveAppearance");
  if (!v5)
    return;
  v6 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  if (!v6)
  {
LABEL_21:

    return;
  }
  v34 = v5;
  v33 = v6;
  objc_msgSend(v1, "frame");
  v8 = v7;
  v10 = v9;
  objc_msgSend(v34, "defaultDocumentAspectRatio");
  v12 = v11;
  objc_msgSend(v34, "defaultDocumentAspectRatio");
  if (v12 >= 1.0)
  {
    v10 = sub_100271DB8(v10 / v13);
    if ((a1 & 1) != 0)
      goto LABEL_15;
  }
  else
  {
    v8 = sub_100271DB8(v8 * v13);
    if ((a1 & 1) != 0)
      goto LABEL_15;
  }
  v14 = objc_msgSend(v33, "image");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "size");
    v17 = v16;
    v19 = v18;

    if (v17 == v8 && v19 == v10)
    {

      v5 = v33;
      goto LABEL_21;
    }
  }
LABEL_15:
  v37.origin.x = 0.0;
  v37.origin.y = 0.0;
  v37.size.width = v8;
  v37.size.height = v10;
  MidX = CGRectGetMidX(v37);
  v22 = sub_100271DB8(MidX);
  v38.origin.x = 0.0;
  v38.origin.y = 0.0;
  v38.size.width = v8;
  v38.size.height = v10;
  MidY = CGRectGetMidY(v38);
  v24 = sub_100271DB8(MidY);
  if (v24 < v22)
    v22 = v24;
  v25 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v8, v10);
  v26 = swift_allocObject(&unk_1005D5EC0, 64, 7);
  *(_QWORD *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + 32) = 0;
  *(_QWORD *)(v26 + 16) = v1;
  *(double *)(v26 + 40) = v8;
  *(double *)(v26 + 48) = v10;
  *(double *)(v26 + 56) = v22;
  v27 = swift_allocObject(&unk_1005D5EE8, 32, 7);
  *(_QWORD *)(v27 + 16) = sub_100271DE4;
  *(_QWORD *)(v27 + 24) = v26;
  aBlock[4] = sub_1000D9F90;
  v36 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10039318C;
  aBlock[3] = &unk_1005D5F00;
  v28 = _Block_copy(aBlock);
  v29 = v36;
  v30 = v1;
  swift_retain();
  swift_release(v29);
  v31 = objc_msgSend(v25, "imageWithActions:", v28);
  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v27, "", 101, 122, 36, 1);
  swift_release(v27);
  if ((v28 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v32 = v31;
    objc_msgSend(v33, "setImage:", v32);
    swift_release(v26);

  }
}

void sub_10004D8F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

id sub_10004D90C(void *a1, void *a2)
{
  _BYTE *v2;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  Class isa;
  objc_super v18;

  v5 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
  *v5 = 0;
  v5[1] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled] = 2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager] = 0;
  *(_OWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier] = xmmword_1004DB490;
  v6 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName];
  *v7 = 0;
  v7[1] = 0;
  *(_OWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName] = xmmword_1004DB490;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isEjectable] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting] = 2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = &off_1005BFC88;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode] = 5;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes] = &off_1005BFCB0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_errorCount] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_supportsImportInDefaultSaveLocation] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain] = 0;
  v8 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
  *(_QWORD *)v8 = a1;
  v8[8] = 1;
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for DOCFileProviderSource();
  v9 = a1;
  v10 = objc_msgSendSuper2(&v18, "init");
  objc_msgSend(v10, "setIdentifier:", a2, v18.receiver, v18.super_class);
  v11 = sub_10006922C((uint64_t *)&unk_10064B460);
  v12 = *(_QWORD *)(type metadata accessor for UTType(0) - 8);
  v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 2 * *(_QWORD *)(v12 + 72), *(unsigned __int8 *)(v12 + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D4CE0;
  v14 = v10;
  v15 = static UTType.content.getter();
  static UTType.item.getter(v15);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setDocumentContentTypes:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  return v14;
}

id sub_10004DB48()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  id v23;
  objc_class *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  int v35;
  int v36;
  int v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  BOOL v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  _QWORD *v50;
  unint64_t v51;
  void *v52;
  char v53;
  uint64_t v54;
  id v55;
  void *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  unsigned __int8 *v62;
  ValueMetadata *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  int v67;
  _OWORD *v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  ValueMetadata *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  __n128 v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char *v106;
  void *v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  char *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  __int128 v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  _QWORD v146[3];
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 v149;
  char v150[8];
  _QWORD v151[5];
  objc_super v152;
  char v153[8];
  char v154[8];
  __int128 v155;
  _BYTE v156[25];

  v1 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v1);
  v3 = (char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)type metadata accessor for IndexPath(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v114 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v129 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v122 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v114 - v10;
  v130 = v0;
  result = objc_msgSend(v0, "splitViewController");
  if (result)
  {
    v13 = result;
    v14 = objc_opt_self(DOCSplitBrowserViewController);
    v15 = (void *)swift_dynamicCastObjCClass(v13, v14);
    if (v15)
    {
      v16 = objc_msgSend(v15, "fullDocumentManagerViewController");

      if (v16)
      {
        v17 = (char *)objc_msgSend(v16, "hierarchyController");

        if (v17)
        {
          v119 = v17;
          v18 = (uint64_t *)&v17[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
          swift_beginAccess(v18, v154, 0, 0);
          v19 = *v18;
          if ((unint64_t)*v18 >> 62)
          {
LABEL_76:
            if (v19 < 0)
              v113 = v19;
            else
              v113 = v19 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v19);
            v20 = _CocoaArrayWrapper.endIndex.getter(v113);
            if (v20)
              goto LABEL_7;
          }
          else
          {
            v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v19);
            if (v20)
            {
LABEL_7:
              v127 = v19 & 0xC000000000000001;
              v132 = &v130[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
              swift_beginAccess(&v130[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource], v153, 0, 0);
              v117 = v19 & 0xFFFFFFFFFFFFFF8;
              v116 = v19 + 32;
              v115 = (char *)&type metadata for Any + 8;
              v126 = v4;
              v125 = v5;
              v4 = v119;
              v5 = v20;
              v120 = v3;
              v124 = v7;
              v123 = v11;
              v128 = v19;
              while (1)
              {
                if (__OFSUB__(v5--, 1))
                {
                  __break(1u);
                  goto LABEL_72;
                }
                if (v127)
                {
                  v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v19);
                }
                else
                {
                  if ((v5 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
LABEL_75:
                    __break(1u);
                    goto LABEL_76;
                  }
                  if (v5 >= *(_QWORD *)(v117 + 16))
                    goto LABEL_75;
                  v23 = *(id *)(v116 + 8 * v5);
                }
                v142 = v23;
                v24 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
                v152.receiver = v130;
                v152.super_class = v24;
                result = objc_msgSendSuper2(&v152, "collectionView");
                if (!result)
                {
                  __break(1u);
                  return result;
                }
                v25 = result;
                v26 = type metadata accessor for DOCSidebarCollectionView();

                sub_1000271D4((uint64_t)v132, (uint64_t)v146, &qword_100642730);
                if (!v147)
                  break;
                v27 = sub_10006922C((uint64_t *)&unk_1006455F0);
                if ((swift_dynamicCast(v151, v146, (char *)&type metadata for Any + 8, v27, 6) & 1) == 0)
                  goto LABEL_21;
                v28 = (id)v151[0];
LABEL_24:
                dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

                v29 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7);
                v30 = *(_QWORD *)(v29 + 16);
                if (v30)
                {
                  v131 = v5;
                  v31 = swift_bridgeObjectRetain(v29);
                  v145 = 0;
                  v32 = 0;
                  v33 = 0;
                  *(_QWORD *)&v141 = v31;
                  v34 = (unsigned __int8 *)(v31 + 72);
                  v35 = 255;
                  do
                  {
                    v37 = *v34;
                    if (v37 != 255 && ~(_BYTE)v35 == 0)
                    {
                      v143 = v32;
                      v144 = v33;
                      v39 = *((_QWORD *)v34 - 5);
                      v40 = (void *)*((_QWORD *)v34 - 3);
                      v41 = *((_QWORD *)v34 - 2);
                      v42 = *((_QWORD *)v34 - 1);
                      sub_1000B1650(v40, v41, v42, v37);
                      sub_1000B1650(v40, v41, v42, v37);
                      swift_unknownObjectRetain(v39);
                      sub_1000B1650(v40, v41, v42, v37);
                      swift_unknownObjectRetain(v39);
                      sub_100201260((uint64_t)v40, v41, v42, v37);
                      v44 = v43;
                      v45 = sub_100373810(v142);

                      v46 = v40;
                      v47 = v41;
                      v48 = v42;
                      v49 = v37;
                      if (!v45)
                      {
                        sub_1000B1664(v40, v41, v42, v37);
                        v49 = 255;
                        v46 = v145;
                        v47 = v143;
                        v48 = v144;
                      }
                      v144 = v48;
                      v36 = v49;
                      swift_unknownObjectRelease(v39);
                      sub_1000B1664(v40, v41, v42, v37);
                      swift_unknownObjectRelease(v39);
                      sub_1000B1664(v40, v41, v42, v37);
                      v35 = v36;
                      v145 = v46;
                      v32 = v47;
                      v33 = v144;
                    }
                    v34 += 48;
                    --v30;
                  }
                  while (v30);
                  v140 = v35;
                  swift_bridgeObjectRelease_n(v141, 2);
                  v3 = *(char **)(v129 + 8);
                  v11 = v123;
                  v7 = v124;
                  ((void (*)(char *, uint64_t))v3)(v123, v124);
                  v50 = v126;
                  v51 = v125;
                  v19 = v128;
                  if ((_BYTE)v140 == 0xFF)
                  {

                    v4 = v119;
                    v5 = v131;
                    goto LABEL_9;
                  }
                  v121 = v3;
                  sub_1000271D4((uint64_t)v132, (uint64_t)v146, &qword_100642730);
                  v3 = v120;
                  v144 = v33;
                  v143 = v32;
                  if (!v147)
                  {
                    v56 = v145;
                    v57 = v140;
                    sub_1000E4F7C(v145, v32, v33, v140);
                    sub_1000E4F7C(v56, v32, v33, v57);
                    sub_10000CB4C((uint64_t)v146, &qword_100642730);
LABEL_41:
                    if (qword_1006411E8 != -1)
                      swift_once(&qword_1006411E8, sub_1000A3F70);
                    v55 = (id)qword_100657778;
                    goto LABEL_44;
                  }
                  v52 = v145;
                  v53 = v140;
                  sub_1000E4F7C(v145, v32, v33, v140);
                  sub_1000E4F7C(v52, v32, v33, v53);
                  v54 = sub_10006922C((uint64_t *)&unk_1006455F0);
                  if ((swift_dynamicCast(v151, v146, v115, v54, 6) & 1) == 0)
                    goto LABEL_41;
                  v55 = (id)v151[0];
LABEL_44:
                  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

                  v58 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7);
                  v59 = v58;
                  v60 = *(_QWORD *)(v58 + 16);
                  v61 = v145;
                  if (!v60)
                  {
LABEL_56:
                    v95 = swift_bridgeObjectRelease(v59);
                    ((void (*)(char *, uint64_t, __n128))v121)(v122, v7, v95);
                    v96 = v61;
                    v97 = v61;
                    v98 = v143;
                    v99 = v144;
                    v100 = v140;
                    sub_1000B1664(v96, v143, v144, v140);
                    (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v51 + 56))(v3, 1, 1, v50);
                    goto LABEL_59;
                  }
                  swift_bridgeObjectRetain(v58);
                  v118 = v59;
                  v62 = (unsigned __int8 *)(v59 + 72);
                  v63 = &_s11OutlineItemVN;
                  while (1)
                  {
                    v65 = (void *)*((_QWORD *)v62 - 3);
                    v64 = *((_QWORD *)v62 - 2);
                    v66 = *((_QWORD *)v62 - 1);
                    v67 = *v62;
                    v141 = *(_OWORD *)(v62 - 40);
                    v155 = v141;
                    *(_QWORD *)v156 = v65;
                    *(_QWORD *)&v156[8] = v64;
                    *(_QWORD *)&v156[16] = v66;
                    v156[24] = v67;
                    v151[3] = v63;
                    v151[4] = &off_1005F0720;
                    v68 = (_OWORD *)swift_allocObject(&unk_1005E74A0, 57, 7);
                    v151[0] = v68;
                    v69 = *(_OWORD *)v156;
                    v68[1] = v155;
                    v68[2] = v69;
                    *(_OWORD *)((char *)v68 + 41) = *(_OWORD *)&v156[9];
                    sub_100092328((uint64_t)v151, (uint64_t)v150);
                    v70 = v141;
                    swift_unknownObjectRetain(v141);
                    sub_1000B1650(v65, v64, v66, v67);
                    swift_unknownObjectRetain(v70);
                    sub_1000B1650(v65, v64, v66, v67);
                    v71 = sub_10006922C(&qword_100652EC8);
                    if (!swift_dynamicCast(v146, v150, v71, v63, 6))
                    {
                      sub_100068588(v151);
                      swift_unknownObjectRelease(v70);
                      sub_1000B1664(v65, v64, v66, v67);
                      goto LABEL_47;
                    }
                    v138 = v64;
                    v139 = v66;
                    v72 = v63;
                    *(_QWORD *)&v141 = v70;
                    v73 = v146[0];
                    v74 = (void *)v146[2];
                    v75 = v147;
                    v76 = v148;
                    v77 = v149;
                    sub_100068588(v151);
                    swift_unknownObjectRelease(v73);
                    if (v77 == 255)
                    {
                      swift_unknownObjectRelease(v141);
                      sub_1000B1664(v65, v138, v139, v67);
                      v63 = v72;
                      goto LABEL_47;
                    }
                    v137 = v67;
                    v78 = v143;
                    v79 = v144;
                    v80 = v140;
                    sub_1000B1650(v145, v143, v144, v140);
                    sub_1000B1650(v74, v75, v76, v77);
                    v133 = v74;
                    v134 = v75;
                    v135 = v76;
                    v136 = v77;
                    sub_100200624((uint64_t)v74, v75, v76, v77);
                    v82 = v81;
                    v84 = v83;
                    sub_100200624((uint64_t)v145, v78, v79, v80);
                    v87 = v86;
                    if (v82 == v85 && v84 == v86)
                      break;
                    v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v82, v84, v85, v86, 0);
                    swift_bridgeObjectRelease(v84);
                    swift_bridgeObjectRelease(v87);
                    v89 = v145;
                    sub_1000B1664(v145, v143, v144, v140);
                    v90 = v133;
                    v91 = v134;
                    v92 = v135;
                    v93 = v136;
                    sub_1000B1664(v133, v134, v135, v136);
                    sub_1000B1664(v90, v91, v92, v93);
                    v94 = v137;
                    if ((v88 & 1) != 0)
                      goto LABEL_58;
                    swift_unknownObjectRelease(v141);
                    sub_1000B1664(v65, v138, v139, v94);
                    v63 = &_s11OutlineItemVN;
LABEL_47:
                    v62 += 48;
                    if (!--v60)
                    {
                      v59 = v118;
                      swift_bridgeObjectRelease(v118);
                      v3 = v120;
                      v50 = v126;
                      v51 = v125;
                      v7 = v124;
                      v11 = v123;
                      v61 = v145;
                      goto LABEL_56;
                    }
                  }
                  swift_bridgeObjectRelease_n(v84, 2);
                  v89 = v145;
                  sub_1000B1664(v145, v143, v144, v140);
                  v101 = v133;
                  v102 = v134;
                  v103 = v135;
                  v104 = v136;
                  sub_1000B1664(v133, v134, v135, v136);
                  sub_1000B1664(v101, v102, v103, v104);
                  v94 = v137;
LABEL_58:
                  swift_bridgeObjectRelease_n(v118, 2);
                  v105 = (uint64_t)v120;
                  v106 = v122;
                  sub_1003E521C(&v155, (uint64_t)v120);
                  v107 = v89;
                  v97 = v89;
                  v98 = v143;
                  v99 = v144;
                  v100 = v140;
                  sub_1000B1664(v107, v143, v144, v140);
                  v7 = v124;
                  ((void (*)(char *, uint64_t))v121)(v106, v124);
                  swift_unknownObjectRelease(v141);
                  v108 = v94;
                  v3 = (char *)v105;
                  sub_1000B1664(v65, v138, v139, v108);
                  v50 = v126;
                  v51 = v125;
                  v11 = v123;
LABEL_59:
                  sub_1000B1664(v97, v98, v99, v100);
                  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v51 + 48))(v3, 1, v50) == 1)
                  {

                    sub_1000B1664(v97, v98, v99, v100);
                    sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_100642710);
                    goto LABEL_66;
                  }
                  v109 = (uint64_t)v114;
                  (*(void (**)(char *, char *, _QWORD *))(v51 + 32))(v114, v3, v50);
                  v110 = sub_1003E1420(v109, 0);
                  if (v110)
                  {
                    v111 = v110;
                    v112 = *(unsigned __int8 *)(v110 + 48);

                    swift_unknownObjectRelease(v111);
                    (*(void (**)(uint64_t, _QWORD *))(v51 + 8))(v109, v50);
                    if (v112 == 1)
                    {

                      swift_bridgeObjectRelease(v128);
                      return v145;
                    }
                  }
                  else
                  {
                    (*(void (**)(uint64_t, _QWORD *))(v51 + 8))(v109, v50);

                  }
                  sub_1000B1664(v145, v143, v144, v140);
LABEL_66:
                  v4 = v119;
                  v5 = v131;
                  v19 = v128;
                  if (!v131)
                  {
LABEL_72:

                    goto LABEL_73;
                  }
                }
                else
                {
                  v21 = swift_bridgeObjectRelease(v29);
                  (*(void (**)(char *, uint64_t, __n128))(v129 + 8))(v11, v7, v21);

LABEL_9:
                  if (!v5)
                    goto LABEL_72;
                }
              }
              sub_10000CB4C((uint64_t)v146, &qword_100642730);
LABEL_21:
              if (qword_1006411E8 != -1)
                swift_once(&qword_1006411E8, sub_1000A3F70);
              v28 = (id)qword_100657778;
              goto LABEL_24;
            }
          }

LABEL_73:
          swift_bridgeObjectRelease(v19);
        }
      }
    }
    else
    {

    }
    return 0;
  }
  return result;
}

void sub_10004EA44()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  __int128 v65;
  __int128 v66;
  Swift::String v67;

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 32);
  if ((_DWORD)v3 != 7)
    goto LABEL_26;
  v3 = *((unsigned __int8 *)*v2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  if (!objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "showCollectionControls"))goto LABEL_26;
  v5 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
  v6 = objc_msgSend(v5, "interfaceStateForConfiguration:", v4);

  if (!v6)
    goto LABEL_26;
  v7 = objc_msgSend(v6, "sortingMode");
  if (!v7)
    goto LABEL_25;
  v8 = v7;
  v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCUserDefaultsSortingModeSortTypeKey);
  v12 = v11;
  if (!*(_QWORD *)(v9 + 16) || (v13 = sub_10007EF08(v10, v11), (v14 & 1) == 0))
  {
    v65 = 0u;
    v66 = 0u;
    swift_bridgeObjectRelease(v12);
    goto LABEL_13;
  }
  sub_100069BD8(*(_QWORD *)(v9 + 56) + 32 * v13, (uint64_t)&v65);
  swift_bridgeObjectRelease(v12);
  if (!*((_QWORD *)&v66 + 1))
  {
LABEL_13:
    v22 = v9;
LABEL_14:
    swift_bridgeObjectRelease(v22);

    sub_10000CB4C((uint64_t)&v65, &qword_100642730);
LABEL_26:
    v26 = 0;
    goto LABEL_27;
  }
  if ((swift_dynamicCast(v64, &v65, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    v23 = v9;
LABEL_24:
    swift_bridgeObjectRelease(v23);
LABEL_25:

    goto LABEL_26;
  }
  v16 = v64[0];
  v15 = (void *)v64[1];
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCUserDefaultsSortingModeReversedKey);
  v19 = v18;
  if (*(_QWORD *)(v9 + 16) && (v20 = sub_10007EF08(v17, v18), (v21 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v9 + 56) + 32 * v20, (uint64_t)&v65);
  }
  else
  {
    v65 = 0u;
    v66 = 0u;
  }
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v9);
  if (!*((_QWORD *)&v66 + 1))
  {
    v22 = (uint64_t)v15;
    goto LABEL_14;
  }
  if ((swift_dynamicCast(v64, &v65, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
    v23 = (uint64_t)v15;
    goto LABEL_24;
  }
  v24 = v64[0];
  v67._countAndFlagsBits = v16;
  v67._object = v15;
  v25 = sub_1001BE2BC(v67);

  v26 = (v25 != 7) & v24;
  if (v25 == 7)
    v3 = v3;
  else
    v3 = v25;
LABEL_27:
  v27 = DOCItemSortDescriptor.init(type:isReversed:)(v3, v26);
  v29 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor;
  v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor);
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8);
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 16);
  *(_QWORD *)v29 = v27;
  *(_QWORD *)(v29 + 8) = v33;
  *(_QWORD *)(v29 + 16) = v34;
  *(_BYTE *)(v29 + 24) = v28 & 1;
  sub_100144F34(v30, v31, v32);
  sub_10003F554();
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v35)
  {
    v36 = v35 + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate;
    *(_QWORD *)(v36 + 8) = &off_1005CC250;
    swift_unknownObjectWeakAssign(v36, v1);
    v37 = v35 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v35 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
    {
      v38 = *(id *)v37;
      v39 = objc_opt_self(FPQueryCollection);
      v40 = swift_dynamicCastObjCClass(v38, v39);
      if (v40)
      {
        *(_QWORD *)&v65 = v40;
        KeyPath = swift_getKeyPath(&unk_1004DC930);
        v42 = swift_allocObject(&unk_1005CBE18, 24, 7);
        swift_unknownObjectWeakInit(v42 + 16);
        v43 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_1001D0940, v42, &protocol witness table for NSObject);
        swift_release(v42);
        swift_release(KeyPath);
        v44 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation) = v43;

        v38 = v44;
      }

    }
    *(_QWORD *)&v65 = *v2;
    v45 = (void *)v65;
    v46 = swift_getKeyPath(&unk_1004DC8F8);
    v47 = 7;
    v48 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v48 + 16);
    v49 = v45;
    v50 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v46, 1, sub_1001D0908, v48, &protocol witness table for NSObject);
    swift_release(v46);
    swift_release(v48);

    v51 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation) = v50;

    v52 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
    v53 = objc_msgSend(*v2, "identifier");
    if (*((_BYTE *)*v2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault) == 1)
      v47 = *((unsigned __int8 *)*v2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode);
    sub_10004F2F0(0, (unint64_t *)&unk_1006443B0, DOCUserInterfaceStateStore_ptr);
    v54 = static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)(v52, v53, v47);

    if (v54 != 7)
    {
      v55 = *v2;
      v56 = sub_100053FC4();

      LOBYTE(v55) = sub_100089A74(v54, (uint64_t)v56);
      swift_bridgeObjectRelease(v56);
      if ((v55 & 1) == 0)
      {
        if (*((_BYTE *)*v2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault) == 1)
          LOBYTE(v54) = *((_BYTE *)*v2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode);
        else
          LOBYTE(v54) = 7;
      }
    }
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior) = v54;
    sub_10002F3B0(0);
    v57 = sub_10004FD50();
    DOCItemCollectionViewController.items.setter(v57);
    v58 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    v59 = swift_bridgeObjectRetain(v58);
    sub_100039F10(v59, 0);
    swift_bridgeObjectRelease(v58);
    v60 = sub_10004FD50();
    DOCItemCollectionViewController.items.setter(v60);
    if ((*(_BYTE *)(v37 + 16) & 1) == 0)
    {
      v61 = *(id *)v37;
      v62 = objc_opt_self(FPExtensionCollection);
      v63 = swift_dynamicCastObjCClass(v61, v62);

      if (v63)
        sub_100190AD4();
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_10004F040(void *a1, void *a2, void *a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t ObjectType;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  objc_super v29;

  v4 = v3;
  ObjectType = swift_getObjectType(v4, a2);
  v9 = &v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);
  v10 = &v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting]);
  v11 = &v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 2;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = 0;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled] = 1;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager] = a2;
  v12 = objc_allocWithZone((Class)type metadata accessor for DOCActionManager());
  v13 = a2;
  v14 = v4;
  v15 = a1;
  v16 = (char *)objc_msgSend(v12, "init");
  if (a3)
  {
    v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v18 + 32) = a3;
    v28 = v18;
    specialized Array._endMutation()(v18);
    v19 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers];
    *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = v28;
    v20 = a3;
    swift_bridgeObjectRelease(v19);
  }
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager] = v16;
  v21 = v16;

  v29.receiver = v14;
  v29.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  v22 = objc_msgSendSuper2(&v29, "initWithNibName:bundle:", 0, 0);
  v23 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v24 = swift_allocObject(v23, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v24 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v24 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v25 = v22;
  v26 = UIViewController.registerForTraitChanges<A>(_:handler:)(v24, sub_1001B9574, 0, ObjectType);

  swift_unknownObjectRelease(v26);
  swift_bridgeObjectRelease(v24);

  return v25;
}

uint64_t sub_10004F2F0(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_10004F4C4@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  char v5;
  void *v6;

  v4 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_10004F510(a2), (v5 & 1) != 0))
  {
    v6 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * result);
    result = v6;
  }
  else
  {
    v6 = 0;
  }
  *a3 = v6;
  return result;
}

unint64_t sub_10004F510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UTType(0);
  v6 = sub_10005A360((unint64_t *)&unk_10064D9C0, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10004F5A8(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (unint64_t *)&qword_100641980, (uint64_t)&protocol conformance descriptor for UTType);
}

unint64_t sub_10004F5A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      v17 = sub_10005A360(v22, v21, v23);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v20, v8, v17);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v18 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_10004F824@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void (*v22)(_OWORD *);
  id v23;
  uint64_t result;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  _OWORD v31[14];
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[2];
  _BYTE v46[225];

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = *(_QWORD *)(v3 + 56);
    v10 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v8);
    v11 = (__int128 *)(v9 + 224 * v8);
    v12 = v11[1];
    v33 = *v11;
    v34 = v12;
    v13 = v11[2];
    v14 = v11[3];
    v15 = v11[5];
    v37 = v11[4];
    v38 = v15;
    v35 = v13;
    v36 = v14;
    v16 = v11[6];
    v17 = v11[7];
    v18 = v11[9];
    v41 = v11[8];
    v42 = v18;
    v39 = v16;
    v40 = v17;
    v19 = v11[10];
    v20 = v11[11];
    v21 = v11[12];
    *(_OWORD *)((char *)v45 + 9) = *(__int128 *)((char *)v11 + 201);
    v44 = v20;
    v45[0] = v21;
    v43 = v19;
    *(_QWORD *)v46 = v10;
    *(_OWORD *)&v46[40] = v35;
    *(_OWORD *)&v46[56] = v36;
    *(_OWORD *)&v46[72] = v37;
    *(_OWORD *)&v46[88] = v38;
    *(_OWORD *)&v46[104] = v39;
    *(_OWORD *)&v46[120] = v40;
    *(_OWORD *)&v46[136] = v41;
    *(_OWORD *)&v46[152] = v18;
    *(_OWORD *)&v46[168] = v19;
    *(_OWORD *)&v46[184] = v20;
    *(_OWORD *)&v46[200] = v21;
    *(_OWORD *)&v46[209] = *(_OWORD *)((char *)v45 + 9);
    *(_OWORD *)&v46[24] = v34;
    *(_OWORD *)&v46[8] = v33;
    v1[3] = v6;
    v1[4] = v7;
    v22 = (void (*)(_OWORD *))v1[5];
    v31[12] = *(_OWORD *)&v46[192];
    v31[13] = *(_OWORD *)&v46[208];
    v32 = v46[224];
    v31[8] = *(_OWORD *)&v46[128];
    v31[9] = *(_OWORD *)&v46[144];
    v31[10] = *(_OWORD *)&v46[160];
    v31[11] = *(_OWORD *)&v46[176];
    v31[4] = *(_OWORD *)&v46[64];
    v31[5] = *(_OWORD *)&v46[80];
    v31[6] = *(_OWORD *)&v46[96];
    v31[7] = *(_OWORD *)&v46[112];
    v31[0] = *(_OWORD *)v46;
    v31[1] = *(_OWORD *)&v46[16];
    v31[2] = *(_OWORD *)&v46[32];
    v31[3] = *(_OWORD *)&v46[48];
    v23 = v10;
    sub_1002EB2E0(&v33);
    v22(v31);
    sub_100362F14((uint64_t)v46);
    return DOCSplitBrowserViewController.didCommitPreview(of:)(a1);
  }
  v25 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v26 = (unint64_t)(v1[2] + 64) >> 6;
    if (v25 < v26)
    {
      v27 = v1[1];
      v28 = *(_QWORD *)(v27 + 8 * v25);
      if (v28)
      {
LABEL_7:
        v7 = (v28 - 1) & v28;
        v8 = __clz(__rbit64(v28)) + (v25 << 6);
        v6 = v25;
        goto LABEL_3;
      }
      v29 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v26)
      {
        v28 = *(_QWORD *)(v27 + 8 * v29);
        if (v28)
        {
LABEL_10:
          v25 = v29;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v26)
        {
          v28 = *(_QWORD *)(v27 + 8 * (v5 + 3));
          if (v28)
          {
            v25 = v5 + 3;
            goto LABEL_7;
          }
          v29 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v26)
          {
            v28 = *(_QWORD *)(v27 + 8 * v29);
            if (v28)
              goto LABEL_10;
            v25 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v26)
            {
              v28 = *(_QWORD *)(v27 + 8 * v25);
              if (v28)
                goto LABEL_7;
              v6 = v26 - 1;
              v30 = v5 + 6;
              while (v26 != v30)
              {
                v28 = *(_QWORD *)(v27 + 8 * v30++);
                if (v28)
                {
                  v25 = v30 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    sub_100362D5C((uint64_t)v46);
    return sub_100070EDC((uint64_t)v46, a1, &qword_10064FFB8);
  }
  return result;
}

void sub_10004FB98()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  __n128 v3;
  uint64_t (*v4)(__n128);
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t v15;
  NSString v16;
  uint64_t v17;

  v1 = v0;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v0
                                                             + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "thumbnail"));
  v3 = swift_unknownObjectRelease(v2);
  if (!v2)
  {
    v4 = *(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x1F8);
    v5 = (char *)v4(v3);
    if (v5)
    {
      v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
      if ((v6 & 0x100) == 0)
        *(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v6 | 0x100;

    }
    v7 = ((uint64_t (*)(void))v4)();
    if (v7)
    {
      v8 = (char *)v7;
      if (!*(_QWORD *)(v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
        && !sub_10007BAFC())
      {
        v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
        *(_QWORD *)&v8[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = 0;
        v10 = objc_autoreleasePoolPush();
        sub_10006D2D4(v9, (uint64_t)v8);
        objc_autoreleasePoolPop(v10);
      }

    }
  }
  v11 = (*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x1F8))(v3);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = *(void **)(v11 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
    v14 = v13;

    if (v13)
    {
      v15 = sub_1001463A0();
      UITraitCollection.subscript.getter(&v17, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v15);

      v16 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setAccessibilityValue:", v16, swift_bridgeObjectRelease(0xE700000000000000).n128_f64[0]);

    }
  }
}

uint64_t sub_10004FD50()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    v3 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
    sub_1000B0EFC(v1, v2, 1);
    swift_retain(v3);
    os_unfair_lock_lock(v3 + 4);
    sub_10006A67C((_QWORD *(*)(uint64_t *__return_ptr))sub_100165118, &v13);
    os_unfair_lock_unlock(v3 + 4);
    v4 = v13;
    swift_release(v3);
    sub_100008A60(v1, v2, 1);
    return v4;
  }
  v5 = v1;
  v6 = objc_msgSend(v5, "items");
  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v4 >> 62))
  {
    v8 = swift_bridgeObjectRetain(v4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);

    swift_bridgeObjectRelease(v4);
    return v4;
  }
  if (v4 < 0)
    v10 = v4;
  else
    v10 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v11 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v12 = _bridgeCocoaArray<A>(_:)(v10, v11);

  swift_bridgeObjectRelease_n(v4, 2);
  return v12;
}

void sub_10004FEF4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  id v25;
  uint64_t *v26;
  NSObject *v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char **v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  double v50;
  unsigned int v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  int v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t Strong;
  uint64_t v110;
  id v111;
  NSString v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  uint64_t v119;
  void (*v120)(__n128);
  __n128 v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t *v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  void *v139;
  id v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  os_log_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  void (*v162)(char *, uint64_t, uint64_t);
  uint64_t *v163;
  unint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171[6];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v156 = (char *)&v153 - v14;
  v15 = __chkstk_darwin(v13);
  v157 = (char *)&v153 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v153 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v153 - v21;
  v23 = Logger.UI.unsafeMutableAddressor(v20);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v161 = v23;
  v162 = v24;
  ((void (*)(char *))v24)(v22);
  v25 = a1;
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain_n(a3, 2);
  swift_bridgeObjectRetain_n(a4, 2);
  v26 = (uint64_t *)v25;
  v27 = Logger.logObject.getter(v26);
  LODWORD(v160) = static os_log_type_t.default.getter(v27);
  v28 = os_log_type_enabled(v27, (os_log_type_t)v160);
  v163 = v26;
  v164 = a4;
  if (v28)
  {
    v154 = v27;
    v155 = v9;
    v158 = v19;
    v159 = v8;
    v165 = v12;
    v29 = swift_slowAlloc(58, -1);
    v153 = swift_slowAlloc(96, -1);
    v171[0] = v153;
    *(_DWORD *)v29 = 136316418;
    v169 = sub_1000544FC(0xD000000000000043, 0x80000001005168E0, v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    *(_WORD *)(v29 + 12) = 2080;
    v166 = (char *)a2;
    v30 = v26;
    v31 = objc_msgSend(v30, "description");
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    v169 = sub_1000544FC(v32, v34, v171);
    v35 = (uint64_t)v166;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);

    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v29 + 22) = 2048;
    if ((unint64_t)v35 >> 62)
    {
      if (v35 < 0)
        v146 = v35;
      else
        v146 = v35 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v35);
      v36 = _CocoaArrayWrapper.endIndex.getter(v146);
      swift_bridgeObjectRelease(v35);
    }
    else
    {
      v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v37 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    swift_bridgeObjectRelease(v35);
    v169 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    v38 = swift_bridgeObjectRelease(v35);
    *(_WORD *)(v29 + 32) = 2048;
    if ((a3 & 0xC000000000000001) != 0)
    {
      if (a3 < 0)
        v39 = a3;
      else
        v39 = a3 & 0xFFFFFFFFFFFFFF8;
      v40 = __CocoaDictionary.count.getter(v39, v38);
    }
    else
    {
      v40 = *(_QWORD *)(a3 + 16);
    }
    swift_bridgeObjectRelease(a3);
    v169 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    swift_bridgeObjectRelease(a3);
    *(_WORD *)(v29 + 42) = 2080;
    v45 = v164;
    v46 = swift_bridgeObjectRetain(v164);
    v47 = Array.description.getter(v46, (char *)&type metadata for Swift.AnyObject + 8);
    v49 = v48;
    swift_bridgeObjectRelease(v45);
    v169 = sub_1000544FC(v47, v49, v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    swift_bridgeObjectRelease_n(v45, 2);
    *(_QWORD *)&v50 = swift_bridgeObjectRelease(v49).n128_u64[0];
    *(_WORD *)(v29 + 52) = 1024;
    v51 = objc_msgSend(v30, "isGathering", v50);

    LODWORD(v169) = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, (char *)&v169 + 4);

    v52 = v154;
    _os_log_impl((void *)&_mh_execute_header, v154, (os_log_type_t)v160, "DOCNodeCollectionDelegate %s nodeCollection: %s update: %ld replaceItemsByFormerID: %ld deletedItemIDs: %s isGathering: %{BOOL}d", (uint8_t *)v29, 0x3Au);
    v53 = v153;
    swift_arrayDestroy(v153, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v29, -1, -1);

    v41 = *(char **)(v155 + 8);
    v43 = v159;
    ((void (*)(char *, uint64_t))v41)(v22, v159);
    v12 = v165;
    a2 = (uint64_t)v166;
    v44 = (uint64_t)v167;
    v19 = v158;
    v42 = v163;
  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a3, 2);

    v41 = *(char **)(v9 + 8);
    ((void (*)(char *, uint64_t))v41)(v22, v8);
    v42 = v26;
    v43 = v8;
    v44 = (uint64_t)v167;
    v37 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
  }
  v54 = (uint64_t)objc_msgSend(v42, v37[484]);
  if ((v54 & 1) != 0)
    return;
  v55 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  if (!*(_QWORD *)(v44 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView)
    || !*(_QWORD *)(v44 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource))
  {
    if (*(_QWORD *)(v44 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
    {
      v60 = sub_10004FD50();
      DOCItemCollectionViewController.items.setter(v60);
      return;
    }
    __break(1u);
    goto LABEL_108;
  }
  v56 = *(_QWORD *)(v44 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v56)
  {
LABEL_108:
    __break(1u);
    return;
  }
  v57 = v56 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  v58 = v43;
  if ((*(_BYTE *)(v57 + 16) & 1) != 0)
  {
    v59 = 0;
  }
  else
  {
    v61 = *(id *)v57;
    v59 = objc_msgSend(v61, "doc_displaysSearchResults");

  }
  v166 = (char *)a2;
  v62 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates;
  v63 = *(_QWORD *)(v44 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates);
  v64 = __OFADD__(v63, 1);
  v65 = v63 + 1;
  if (v64)
    goto LABEL_83;
  v66 = v59 ^ 1;
  *(_QWORD *)(v44 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates) = v65;
  sub_100029CFC(v54);
  v159 = v58;
  v162(v19, v161, v58);
  v167 = (char *)(id)v44;
  v67 = Logger.logObject.getter(v167);
  v68 = static os_log_type_t.debug.getter();
  v69 = os_log_type_enabled(v67, v68);
  v160 = v41;
  v165 = v12;
  v153 = v55;
  v155 = v62;
  LODWORD(v154) = v66;
  if (v69)
  {
    v70 = swift_slowAlloc(28, -1);
    v71 = swift_slowAlloc(32, -1);
    v171[0] = v71;
    *(_DWORD *)v70 = 136315650;
    v169 = sub_1000544FC(0xD000000000000043, 0x80000001005168E0, v171);
    v158 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    *(_WORD *)(v70 + 12) = 1024;
    LODWORD(v169) = v66;
    v41 = v160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, (char *)&v169 + 4);
    *(_WORD *)(v70 + 18) = 2048;
    v169 = *(_QWORD *)(v44 + v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    v72 = v167;

    _os_log_impl((void *)&_mh_execute_header, v67, v68, "DOCNodeCollectionDelegate %s animate: %{BOOL}d performingBatchUpdates: %ld", (uint8_t *)v70, 0x1Cu);
    swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1, -1);
    swift_slowDealloc(v70, -1, -1);

    v73 = v158;
  }
  else
  {

    v72 = v167;
    v73 = v19;
  }
  v62 = v159;
  ((void (*)(char *, uint64_t))v41)(v73, v159);
  v74 = (uint64_t)v166;
  sub_100066A68((uint64_t)v166, 0, 0);
  v75 = (uint64_t *)&v72[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v76 = *(_QWORD *)&v72[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v19 = (char *)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate;
  v77 = *(_QWORD *)&v72[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate];
  *(_QWORD *)&v72[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77);
  v78 = sub_10004FD50();
  DOCItemCollectionViewController.items.setter(v78);
  v79 = *v75;
  v80 = v75[1];
  v163 = v75;
  v81 = v75[2];
  v82 = *(_QWORD *)&v19[(_QWORD)v72];
  a2 = v74;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRetain(v81);
  sub_100035050(v82, v79);
  LOBYTE(v74) = v83;
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(v79);
  v84 = swift_bridgeObjectRelease(v82);
  v158 = (char *)((unint64_t)a2 >> 62);
  if ((v74 & 1) == 0)
  {
    v93 = v156;
    v94 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v162)(v156, v161, v62, v84);
    v95 = Logger.logObject.getter(v94);
    v96 = static os_log_type_t.default.getter(v95);
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(12, -1);
      v98 = swift_slowAlloc(32, -1);
      v171[0] = v98;
      *(_DWORD *)v97 = 136315138;
      v169 = sub_1000544FC(0xD000000000000043, 0x80000001005168E0, v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "DOCNodeCollectionDelegate %s Item collection structure changed. Updating snapshot.", v97, 0xCu);
      swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v97, -1, -1);

      ((void (*)(char *, uint64_t))v160)(v156, v62);
    }
    else
    {

      ((void (*)(char *, uint64_t))v41)(v93, v62);
    }
    v12 = v167;
    v103 = (int)v154;
    v104 = *v163;
    v105 = swift_bridgeObjectRetain(*v163);
    sub_100039F10(v105, v103);
    swift_bridgeObjectRelease(v104);
    v106 = v12;
    v107 = sub_10005CBA4(a2, (uint64_t)v106);

    sub_100065350((uint64_t)v107);
    swift_bridgeObjectRelease(v107);
    v55 = v164;
    if (v158)
      goto LABEL_95;
    goto LABEL_39;
  }
  v85 = v157;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v162)(v157, v161, v62, v84);
  v86 = swift_bridgeObjectRetain_n(a2, 2);
  v87 = Logger.logObject.getter(v86);
  v88 = static os_log_type_t.default.getter(v87);
  if (os_log_type_enabled(v87, v88))
  {
    v89 = swift_slowAlloc(22, -1);
    v90 = swift_slowAlloc(32, -1);
    v171[0] = v90;
    *(_DWORD *)v89 = 136315394;
    v169 = sub_1000544FC(0xD000000000000043, 0x80000001005168E0, v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    *(_WORD *)(v89 + 12) = 2048;
    if (v158)
    {
      if (a2 < 0)
        v152 = a2;
      else
        v152 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v91 = _CocoaArrayWrapper.endIndex.getter(v152);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v91 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a2);
    v169 = v91;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    swift_bridgeObjectRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "DOCNodeCollectionDelegate %s Item collection structure unchanged. Updating %ld items", (uint8_t *)v89, 0x16u);
    swift_arrayDestroy(v90, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1, -1);
    swift_slowDealloc(v89, -1, -1);

    v92 = v157;
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    v92 = v85;
  }
  ((void (*)(char *, uint64_t))v41)(v92, v62);
  v55 = v164;
  v12 = v167;
  v41 = v158;
  if (v158)
    goto LABEL_90;
  if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_94;
LABEL_35:
  v99 = v12;
  v100 = sub_10005CBA4(a2, (uint64_t)v99);

  sub_100065350((uint64_t)v100);
  swift_bridgeObjectRelease(v100);
  if (v41)
  {
LABEL_95:
    if (a2 < 0)
      v151 = a2;
    else
      v151 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v108 = _CocoaArrayWrapper.endIndex.getter(v151);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
LABEL_39:
    v108 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v41 = (char *)v155;
  if (v108 >= 1)
    sub_1000320AC(v12);
  if (!((unint64_t)v55 >> 62))
  {
    if (*(uint64_t *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      goto LABEL_47;
LABEL_44:
    Strong = swift_unknownObjectWeakLoadStrong(&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener], v102);
    if (Strong)
    {
      v110 = Strong;
      v111 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      v112 = String._bridgeToObjectiveC()();
      objc_msgSend(v111, "postNotificationName:object:", v112, 0);
      swift_unknownObjectRelease(v110);

    }
    sub_1000320AC(v12);
    goto LABEL_47;
  }
  while (1)
  {
    if (v55 < 0)
      v147 = v55;
    else
      v147 = v55 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v55);
    v148 = _CocoaArrayWrapper.endIndex.getter(v147);
    swift_bridgeObjectRelease(v55);
    if (v148 >= 1)
      goto LABEL_44;
LABEL_47:
    v113 = *(_QWORD *)&v41[v44];
    v64 = __OFSUB__(v113, 1);
    v114 = v113 - 1;
    if (v64)
    {
      __break(1u);
LABEL_90:
      if (a2 < 0)
        v149 = a2;
      else
        v149 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v150 = _CocoaArrayWrapper.endIndex.getter(v149);
      swift_bridgeObjectRelease(a2);
      if (v150 >= 1)
        goto LABEL_35;
LABEL_94:
      sub_100065350(0);
      if (!v41)
        goto LABEL_39;
      goto LABEL_95;
    }
    *(_QWORD *)&v41[v44] = v114;
    sub_100029CFC(v101);
    v115 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks;
    v116 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks];
    v55 = *(_QWORD *)(v116 + 16);
    if (v55)
    {
      v117 = (char *)v44;
      swift_bridgeObjectRetain(*(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks]);
      v118 = (uint64_t *)(v116 + 40);
      do
      {
        v120 = (void (*)(__n128))*(v118 - 1);
        v119 = *v118;
        v121 = swift_retain();
        v120(v121);
        swift_release(v119);
        v118 += 2;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease(v116);
      v12 = v167;
      v116 = *(_QWORD *)&v167[v115];
      v44 = (uint64_t)v117;
    }
    *(_QWORD *)&v12[v115] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v116);
    v122 = *(_QWORD *)&v19[(_QWORD)v12];
    *(_QWORD *)&v19[(_QWORD)v12] = 0;
    swift_bridgeObjectRelease(v122);
    v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 1;
    sub_100079D3C();
    sub_100064B54();
    v41 = v165;
    if ((v123 & 1) == 0 || !*(_QWORD *)(v44 + v153))
      goto LABEL_70;
    v124 = (uint64_t)sub_100033CA4();
    v125 = v124;
    if ((unint64_t)v124 >> 62)
      break;
    v126 = *(_QWORD *)((v124 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v126)
      goto LABEL_69;
LABEL_56:
    v164 = v125 & 0xC000000000000001;
    v62 = 4;
    v157 = (char *)v125;
    v158 = (char *)v126;
    while (1)
    {
      v127 = v164
           ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v62 - 4, v125)
           : (char *)*(id *)(v125 + 8 * v62);
      v12 = v127;
      if (__OFADD__(v62 - 4, 1))
        break;
      v128 = (uint64_t *)&v127[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
      v55 = *(_QWORD *)&v127[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8];
      if (!v55)
      {

        goto LABEL_69;
      }
      v166 = (char *)(v62 - 3);
      a2 = *v128;
      v129 = v128[2];
      v44 = v128[3];
      v41 = (char *)v128[4];
      v19 = (char *)*v163;
      v130 = sub_1001BC0B0(*v128, v55, (_QWORD *)*v163);
      if ((v131 & 1) != 0)
      {
        sub_1001BC194(a2, v55, v129, v44, (uint64_t)v41);

        swift_release(v41);
        swift_bridgeObjectRelease(v44);
        swift_bridgeObjectRelease(v55);
        v41 = v165;
        goto LABEL_69;
      }
      if ((v130 & 0x8000000000000000) != 0)
        goto LABEL_81;
      if (v130 >= *((_QWORD *)v19 + 2))
        goto LABEL_82;
      v132 = &v19[40 * v130];
      v19 = (char *)*((_QWORD *)v132 + 5);
      v133 = *((_QWORD *)v132 + 6);
      v134 = *((_QWORD *)v132 + 7);
      v135 = *((_QWORD *)v132 + 8);
      v171[0] = *((_QWORD *)v132 + 4);
      v171[1] = (uint64_t)v19;
      v171[2] = v133;
      v171[3] = v134;
      v171[4] = v135;
      sub_1001BC194(a2, v55, v129, v44, (uint64_t)v41);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v134);
      swift_retain();
      sub_100198014(v12, v171);
      v136 = v135;
      v125 = (uint64_t)v157;
      swift_release(v136);
      v137 = v134;
      v138 = v158;
      swift_bridgeObjectRelease(v137);
      swift_bridgeObjectRelease(v19);

      swift_release(v41);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v55);
      ++v62;
      v41 = v165;
      if (v166 == v138)
        goto LABEL_69;
    }
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
  }
  if (v124 >= 0)
    v124 &= 0xFFFFFFFFFFFFFF8uLL;
  v126 = _CocoaArrayWrapper.endIndex.getter(v124);
  if (v126)
    goto LABEL_56;
LABEL_69:
  swift_bridgeObjectRelease(v125);
  v62 = v159;
  v12 = v167;
LABEL_70:
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
  v139 = *(void **)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
  if (v139)
  {
    v140 = v139;
    sub_10003181C();

  }
  sub_10018C44C(0);
  sub_100097624();
  v141 = ((uint64_t (*)(char *, uint64_t, uint64_t))v162)(v41, v161, v62);
  v142 = Logger.logObject.getter(v141);
  v143 = static os_log_type_t.default.getter(v142);
  if (os_log_type_enabled(v142, v143))
  {
    v144 = (uint8_t *)swift_slowAlloc(12, -1);
    v145 = swift_slowAlloc(32, -1);
    v169 = v145;
    *(_DWORD *)v144 = 136315138;
    v168 = sub_1000544FC(0xD000000000000043, 0x80000001005168E0, &v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, &v169);
    _os_log_impl((void *)&_mh_execute_header, v142, v143, "%s - calling resolvePendingNodeContexts", v144, 0xCu);
    swift_arrayDestroy(v145, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v145, -1, -1);
    swift_slowDealloc(v144, -1, -1);
  }

  ((void (*)(char *, uint64_t))v160)(v41, v62);
  sub_10018AFF0();
}

id DOCActionManager.__allocating_init(itemManager:managedPermission:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, "init");
}

void sub_1000511A0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void **v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  void *v35;
  Swift::String v36;
  Swift::String_optional v37;
  Swift::String v38;
  void *object;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  NSString v45;
  void *v46;
  _QWORD v47[4];
  char v48[24];
  char v49[24];
  Swift::String v50;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  if (!DOCUsePadIdiomForTraits(v2))
  {

LABEL_5:
    v4 = objc_msgSend(v1, "splitViewController");
    if (v4)
    {
      v5 = v4;
      v6 = objc_opt_self(DOCSplitBrowserViewController);
      v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
      if (v7)
      {
        v8 = objc_msgSend(v7, "fullDocumentManagerViewController");

        if (v8)
        {
          v9 = objc_msgSend(v1, "navigationItem");
          v10 = objc_msgSend(v9, "title");

          if (!v10)
          {
LABEL_28:

            goto LABEL_36;
          }
          v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v13 = v12;

          v14 = (char *)objc_msgSend(v8, "dataSource");
          v15 = (uint64_t *)&v14[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers];
          swift_beginAccess(&v14[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers], v49, 0, 0);
          v16 = *v15;
          swift_bridgeObjectRetain(v16);

          if (!v16)
          {

            swift_bridgeObjectRelease(v13);
            v23 = 0;
            v17 = 0;
            goto LABEL_35;
          }
          if ((unint64_t)v16 >> 62)
          {
            if (v16 >= 0)
              v42 = v16 & 0xFFFFFFFFFFFFFF8;
            else
              v42 = v16;
            swift_bridgeObjectRetain(v16);
            v17 = (char *)_CocoaArrayWrapper.endIndex.getter(v42);
            swift_bridgeObjectRelease(v16);
            if (v17)
              goto LABEL_12;
          }
          else
          {
            v17 = *(char **)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v17)
            {
LABEL_12:
              if ((v16 & 0xC000000000000001) != 0)
              {
                v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
              }
              else
              {
                if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_44;
                }
                v18 = (char *)*(id *)(v16 + 32);
              }
              v17 = v18;
              swift_bridgeObjectRelease(v16);
              v19 = (void **)&v17[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
              swift_beginAccess(&v17[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v48, 0, 0);
              v20 = *v19;
              if (v20)
              {
                v21 = type metadata accessor for DOCItemCollectionViewController(0);
                v22 = swift_dynamicCastClass(v20, v21);
                v23 = (void *)v22;
                if (v22)
                {
                  v24 = *(void **)(v22
                                 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
                  if (v24)
                  {
                    v25 = v20;
                    v26 = objc_msgSend(v24, "title");
                    if (v26)
                    {
                      v27 = v26;
                      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
                      v30 = v29;

                      v47[2] = v28;
                      v47[3] = v30;
                      v47[0] = v11;
                      v47[1] = v13;
                      v31 = sub_10008B9BC();
                      v32 = StringProtocol.contains<A>(_:)(v47, &type metadata for String, &type metadata for String, v31, v31);
                      swift_bridgeObjectRelease(v13);
                      v33 = swift_bridgeObjectRelease(v30);
                      if ((v32 & 1) != 0)
                      {
                        v34 = (id)_DocumentManagerBundle(v33);
                        if (v34)
                        {
                          v35 = v34;
                          v50._object = (void *)0x800000010051C3E0;
                          v36._countAndFlagsBits = 1801675074;
                          v36._object = (void *)0xE400000000000000;
                          v37.value._countAndFlagsBits = 0x617A696C61636F4CLL;
                          v37.value._object = (void *)0xEB00000000656C62;
                          v38._countAndFlagsBits = 0;
                          v38._object = (void *)0xE000000000000000;
                          v50._countAndFlagsBits = 0xD000000000000018;
                          object = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v35, v38, v50)._object;

                          goto LABEL_37;
                        }
LABEL_44:
                        __break(1u);
                        return;
                      }

                      goto LABEL_28;
                    }
                  }
                  else
                  {
                    v41 = v20;
                  }
                }

                swift_bridgeObjectRelease(v13);
LABEL_35:

                goto LABEL_36;
              }

              v40 = v13;
LABEL_34:
              swift_bridgeObjectRelease(v40);
              v23 = 0;
              goto LABEL_35;
            }
          }

          swift_bridgeObjectRelease(v13);
          v40 = v16;
          goto LABEL_34;
        }
      }
      else
      {

      }
    }
LABEL_36:
    object = 0;
LABEL_37:
    v43 = objc_msgSend(v1, "navigationItem");
    if (!object)
    {
      v44 = objc_msgSend(v1, "navigationItem");
      v45 = objc_msgSend(v44, "title");

      if (!v45)
      {
LABEL_41:
        objc_msgSend(v43, "setBackButtonTitle:", v45);

        return;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      object = v46;

    }
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    goto LABEL_41;
  }
  v3 = objc_msgSend(v2, "horizontalSizeClass");

  if (v3 != (id)2)
    goto LABEL_5;
}

double sub_100051614(uint64_t a1, double *font, uint64_t a3, double a4, double a5, double a6)
{
  const __CTLine *v6;
  double TypographicBounds;
  double TrailingWhitespaceWidth;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  CGFloat Descent;
  CGFloat Leading;
  uint64_t v18;
  const __CTLine *v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  BOOL v37;
  double v38;
  double v39;
  double v40;
  double v41;
  unint64_t v42;
  unint64_t v43;
  double *v44;
  char *v45;
  uint64_t v46;
  double *v47;
  double v48;
  BOOL v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  double *v60;
  uint64_t v62;

  v13 = a1;
  v14 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v62 = a1;
    else
      v62 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v15 = _CocoaArrayWrapper.endIndex.getter(v62);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  CTFontGetAscent((CTFontRef)font);
  Descent = CTFontGetDescent((CTFontRef)font);
  Leading = CTFontGetLeading((CTFontRef)font);
  if (!v14)
  {
    v18 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (v18)
      goto LABEL_5;
LABEL_18:
    v22 = swift_bridgeObjectRelease(v13);
    font = (double *)_swiftEmptyArrayStorage;
    v23 = _swiftEmptyArrayStorage[2];
    if (v23)
      goto LABEL_27;
LABEL_19:
    v22.n128_u64[0] = 0;
    goto LABEL_41;
  }
  if (v13 < 0)
    font = (double *)v13;
  else
    font = (double *)(v13 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(v13);
  v18 = _CocoaArrayWrapper.endIndex.getter(font);
  if (!v18)
    goto LABEL_18;
LABEL_5:
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_75;
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
    v6 = 0;
    font = (double *)_swiftEmptyArrayStorage;
    do
    {
      v19 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v13);
      TypographicBounds = CTLineGetTypographicBounds(v19, 0, 0, 0);
      TrailingWhitespaceWidth = CTLineGetTrailingWhitespaceWidth(v19);
      if ((swift_isUniquelyReferenced_nonNull_native(font) & 1) == 0)
        font = (double *)sub_100081B84(0, *((_QWORD *)font + 2) + 1, 1, font);
      v21 = *((_QWORD *)font + 2);
      v20 = *((_QWORD *)font + 3);
      if (v21 >= v20 >> 1)
        font = (double *)sub_100081B84((_QWORD *)(v20 > 1), v21 + 1, 1, font);
      v6 = (const __CTLine *)((char *)v6 + 1);
      *((_QWORD *)font + 2) = v21 + 1;
      font[v21 + 4] = TypographicBounds - TrailingWhitespaceWidth;
      swift_unknownObjectRelease(v19);
    }
    while ((const __CTLine *)v18 != v6);
  }
  else
  {
    v24 = 0;
    font = (double *)_swiftEmptyArrayStorage;
    do
    {
      v6 = (const __CTLine *)*(id *)(v13 + 8 * v24 + 32);
      TypographicBounds = CTLineGetTypographicBounds(v6, 0, 0, 0);
      TrailingWhitespaceWidth = CTLineGetTrailingWhitespaceWidth(v6);
      if ((swift_isUniquelyReferenced_nonNull_native(font) & 1) == 0)
        font = (double *)sub_100081B84(0, *((_QWORD *)font + 2) + 1, 1, font);
      v26 = *((_QWORD *)font + 2);
      v25 = *((_QWORD *)font + 3);
      if (v26 >= v25 >> 1)
        font = (double *)sub_100081B84((_QWORD *)(v25 > 1), v26 + 1, 1, font);
      ++v24;
      *((_QWORD *)font + 2) = v26 + 1;
      font[v26 + 4] = TypographicBounds - TrailingWhitespaceWidth;

    }
    while (v18 != v24);
  }
  v22 = swift_bridgeObjectRelease(v13);
  v23 = *((_QWORD *)font + 2);
  if (!v23)
    goto LABEL_19;
LABEL_27:
  if (__OFSUB__(v15, 1))
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (v15 == 1)
    v27 = a5;
  else
    v27 = 0.0;
  v22.n128_f64[0] = font[4] + a4 + v27;
  if (v22.n128_f64[0] < 0.0)
    v22.n128_f64[0] = 0.0;
  v28 = v23 - 1;
  if (v28)
  {
    v29 = v15 - 2;
    v30 = font + 5;
    do
    {
      v31 = *v30++;
      v32 = v31;
      if (v29)
        v33 = 0.0;
      else
        v33 = a5;
      v34 = v32 + 0.0 + v33;
      if (v22.n128_f64[0] <= v34)
        v22.n128_f64[0] = v34;
      --v29;
      --v28;
    }
    while (v28);
  }
LABEL_41:
  TypographicBounds = UICeilToScale(v22, a6);
  v6 = (const __CTLine *)*((_QWORD *)font + 2);
  if (!v6)
    goto LABEL_69;
  if (!__OFSUB__(v15, 1))
  {
    v35 = 0.0;
    if (v15 == 1)
      v36 = a5;
    else
      v36 = 0.0;
    if (a3 == 1)
    {
      v35 = a4;
      v37 = v15 == 1;
    }
    else
    {
      v37 = 0;
    }
    v38 = (TypographicBounds - font[4] + a4 - v36) * 0.5 - v35;
    if (!v37)
      v36 = -0.0;
    a4 = UIRectIntegralWithScale(v36 + v38);
    Descent = v39;
    Leading = v40;
    TrailingWhitespaceWidth = v41;
    v13 = (uint64_t)_swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) != 0)
      goto LABEL_52;
    goto LABEL_77;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  v13 = (uint64_t)sub_100051B5C(0, *(_QWORD *)(v13 + 16) + 1, 1, (_QWORD *)v13);
LABEL_52:
  v43 = *(_QWORD *)(v13 + 16);
  v42 = *(_QWORD *)(v13 + 24);
  if (v43 >= v42 >> 1)
    v13 = (uint64_t)sub_100051B5C((_QWORD *)(v42 > 1), v43 + 1, 1, (_QWORD *)v13);
  *(_QWORD *)(v13 + 16) = v43 + 1;
  v44 = (double *)(v13 + 32 * v43);
  v44[4] = a4;
  v44[5] = Descent;
  v44[6] = Leading;
  v44[7] = TrailingWhitespaceWidth;
  v45 = (char *)v6 - 1;
  if (v6 != (const __CTLine *)1)
  {
    v46 = v15 - 2;
    v47 = font + 5;
    do
    {
      if (v46)
        v48 = 0.0;
      else
        v48 = a5;
      v49 = a3 == 1 && v46 == 0;
      v50 = (TypographicBounds - *v47 + 0.0 - v48) * 0.5;
      if (!v49)
        v48 = -0.0;
      v51 = UIRectIntegralWithScale(v48 + v50);
      v53 = v52;
      v55 = v54;
      v57 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
        v13 = (uint64_t)sub_100051B5C(0, *(_QWORD *)(v13 + 16) + 1, 1, (_QWORD *)v13);
      v59 = *(_QWORD *)(v13 + 16);
      v58 = *(_QWORD *)(v13 + 24);
      if (v59 >= v58 >> 1)
        v13 = (uint64_t)sub_100051B5C((_QWORD *)(v58 > 1), v59 + 1, 1, (_QWORD *)v13);
      *(_QWORD *)(v13 + 16) = v59 + 1;
      v60 = (double *)(v13 + 32 * v59);
      v60[4] = v51;
      *((_QWORD *)v60 + 5) = v53;
      *((_QWORD *)v60 + 6) = v55;
      *((_QWORD *)v60 + 7) = v57;
      --v46;
      ++v47;
      --v45;
    }
    while (v45);
  }
LABEL_69:
  swift_bridgeObjectRelease(font);
  return TypographicBounds;
}

_QWORD *sub_100051B5C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644968);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100081D9C(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

void sub_100051C68(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  char *v49;
  id v50;
  id v51;
  uint64_t v52;
  char v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  id v63;
  char *v64;
  id v65;
  NSString v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id *v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  char v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  id v95;
  id v96;
  Class v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  void *v108;
  id v109;
  __n128 v110;
  uint64_t v111;
  void *v112;
  _BYTE *v113;
  id v114;
  char *v115;
  id v116;
  id v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  NSObject *v131;
  NSObject *v132;
  os_log_type_t v133;
  int v134;
  uint8_t *v135;
  _QWORD *v136;
  uint8_t *v137;
  uint64_t v138;
  char v139;
  Class isa;
  double v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  uint8_t *v146;
  int v147;
  id v148;
  id v149;
  int v150;
  void *v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  id v156;
  id v157;
  char *v158;
  char v159;
  NSObject *v160;
  uint64_t v161;

  v153 = a7;
  v152 = a5;
  v150 = a3;
  v16 = type metadata accessor for Logger(0);
  v148 = *(id *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = a8;
  swift_bridgeObjectRetain(a8);
  v19 = a1;
  v157 = a2;
  v151 = a4;
  v20 = a4;
  v155 = a6;
  v156 = a6;
  v149 = v20;
  v21 = objc_msgSend(v20, "node");
  v158 = v19;
  v22 = objc_msgSend(v19, "identifier");
  v23 = DOCDocumentSourceIdentifierTrashedItems;
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v26 = v25;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  if (v24 == v27 && v26 == v28)
  {

    swift_bridgeObjectRelease_n(v26, 2);
    goto LABEL_10;
  }
  v30 = v28;
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v27, v28, 0);

  swift_bridgeObjectRelease(v26);
  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v30).n128_u64[0];
  if ((v31 & 1) != 0)
  {
LABEL_10:
    v41 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v42 = objc_msgSend(v41, "newTrashCollection");

    v43 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
    sub_10004644C(v42, 0);
    v45 = v44;
    swift_unknownObjectRelease(v21);
    v21 = 0;
    v46 = v155;
    v47 = v156;
LABEL_11:
    v48 = v157;
LABEL_12:
    swift_unknownObjectRetain_n(v21, 2);
    v49 = v158;
    v50 = v48;
    v51 = v149;
    v52 = v154;
    swift_bridgeObjectRetain(v154);

    swift_bridgeObjectRelease_n(v52, 2);
    swift_unknownObjectRelease_n(v21, 2);

    *(_QWORD *)a9 = v49;
    *(_QWORD *)(a9 + 8) = v50;
    *(_BYTE *)(a9 + 16) = v150;
    *(_QWORD *)(a9 + 24) = v151;
    *(_BYTE *)(a9 + 32) = v152;
    *(_BYTE *)(a9 + 33) = a10 & 1;
    *(_QWORD *)(a9 + 40) = v153;
    *(_QWORD *)(a9 + 48) = v52;
    *(_QWORD *)(a9 + 56) = v46;
    *(_QWORD *)(a9 + 64) = v21;
    *(_QWORD *)(a9 + 72) = v45;
    return;
  }
  v33 = objc_msgSend(v158, "identifier", v32);
  v34 = DOCDocumentSourceIdentifierSearch;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v37 = v36;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v40 = v38;
  if (v35 == v39 && v37 == v38)
  {

    swift_bridgeObjectRelease_n(v37, 2);
    goto LABEL_14;
  }
  v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);

  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v40);
  if ((v53 & 1) == 0)
  {
    v48 = v157;
    v64 = &v158[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
    if (v158[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] == 1)
    {
      v65 = objc_msgSend(objc_allocWithZone((Class)DOCEnumerationProperties), "init");
      v66 = objc_msgSend(v48, "hostIdentifier");
      if (!v66)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v69 = v68;
        v66 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v67 = swift_bridgeObjectRelease(v69).n128_u64[0];
      }
      objc_msgSend(v65, "setHostIdentifier:", v66, v67);

      v148 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v48, "maximumNumberOfItemsToFetch"));
      if ((v64[8] & 1) == 0)
        goto LABEL_67;
      v70 = *(id *)v64;
      v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierSharedItems);
      v73 = v72;
      v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v76 = v74;
      if (v71 == v75 && v73 == v74)
      {
        v77 = v70;
      }
      else
      {
        v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v73, v75, v74, 0);
        v87 = v70;
        v88 = v70;
        swift_bridgeObjectRelease(v73);
        swift_bridgeObjectRelease(v76);

        if ((v86 & 1) != 0)
          goto LABEL_37;
        v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierTaggedItems);
        v73 = v90;
        v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
        v93 = v91;
        if (v89 != v92 || v73 != v91)
        {
          v94 = _stringCompareWithSmolCheck(_:_:expecting:)(v89, v73, v92, v91, 0);
          v95 = v70;
          swift_bridgeObjectRelease(v73);
          swift_bridgeObjectRelease(v93);

          if ((v94 & 1) == 0)
          {
            v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSpotlightEnumeratedItemIdentifierRecentDocuments);
            v126 = v125;
            v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
            v129 = v127;
            if (v124 == v128 && v126 == v127)
            {
              swift_bridgeObjectRelease_n(v126, 2);

            }
            else
            {
              v139 = _stringCompareWithSmolCheck(_:_:expecting:)(v124, v126, v128, v127, 0);
              swift_bridgeObjectRelease(v126);
              swift_bridgeObjectRelease(v129);

              if ((v139 & 1) == 0)
              {
                objc_msgSend(v65, "setMaximumNumberOfItems:", v148);
                v48 = v157;
                v96 = objc_msgSend(v157, "documentContentTypes");
                goto LABEL_38;
              }
            }
            v48 = v157;
            isa = (Class)objc_msgSend(v157, "recentDocumentsContentTypes");
            if (!isa)
            {
              v142 = type metadata accessor for UTType(0);
              v143 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v142);
              isa = Array._bridgeToObjectiveC()().super.isa;
              *(_QWORD *)&v141 = swift_bridgeObjectRelease(v143).n128_u64[0];
            }
            objc_msgSend(v65, "setAllowedContentTypes:", isa, v141);

            if (objc_msgSend(v48, "maximumNumberOfItemsToFetch") == (id)0x7FFFFFFFFFFFFFFFLL)
            {
              v144 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", DOCRecentsMaximumNumberOfItems);
              objc_msgSend(v65, "setMaximumNumberOfItems:", v144);

            }
            else
            {
              objc_msgSend(v65, "setMaximumNumberOfItems:", v148);
            }
            v46 = v155;
            v47 = v156;
LABEL_41:
            v101 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
            if ((v64[8] & 1) != 0)
            {
              v102 = v101;
              v103 = *(id *)v64;
              v104 = _sSo13FPItemManagerC5FilesE15queryCollection13forIdentifier10properties29supportRemovableFileProvidersSo07FPQueryE0CSo026DOCSpotlightEnumeratedItemG0a_So24DOCEnumerationPropertiesCSbtF_0(*(id *)v64, v65, (int)objc_msgSend(v48, "supportsRemovableFileProviders"));

              v105 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
              v106 = v104;
              sub_10004644C(v106, 0);
              v45 = v107;

              swift_unknownObjectRelease(v21);
              v21 = 0;
              goto LABEL_12;
            }
            goto LABEL_67;
          }
LABEL_37:

          objc_msgSend(v65, "setMaximumNumberOfItems:", v148);
          v48 = v157;
          v96 = objc_msgSend(v157, "recentDocumentsContentTypes");
LABEL_38:
          v97 = (Class)v96;
          if (!v97)
          {
            v99 = type metadata accessor for UTType(0);
            v100 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v99);
            v97 = Array._bridgeToObjectiveC()().super.isa;
            *(_QWORD *)&v98 = swift_bridgeObjectRelease(v100).n128_u64[0];
          }
          objc_msgSend(v65, "setAllowedContentTypes:", v97, v98);

          v46 = v155;
          v47 = v156;
          goto LABEL_41;
        }
      }
      v78 = v70;
      swift_bridgeObjectRelease_n(v73, 2);

      goto LABEL_37;
    }
    if (v21)
    {
      v45 = 0;
      v46 = v155;
      v47 = v156;
      goto LABEL_12;
    }
    v108 = *(void **)&v158[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    v47 = v156;
    if (v108)
    {
      v109 = v108;
      if ((FPProviderDomain.shouldUseDSEnumeration.getter(v110) & 1) != 0)
      {
        type metadata accessor for DOCRootNode(0);
        v111 = static DOCRootNode.rootNode(for:)(v109);
        if (!v111)
        {
          v130 = Logger.UI.unsafeMutableAddressor(0);
          (*((void (**)(char *, uint64_t, uint64_t))v148 + 2))(v18, v130, v16);
          v131 = v109;
          v132 = Logger.logObject.getter(v131);
          v133 = static os_log_type_t.error.getter(v132);
          v134 = v133;
          if (os_log_type_enabled(v132, v133))
          {
            v147 = v134;
            v135 = (uint8_t *)swift_slowAlloc(12, -1);
            v136 = (_QWORD *)swift_slowAlloc(8, -1);
            v146 = v135;
            *(_DWORD *)v135 = 138412290;
            v160 = v131;
            v131 = v131;
            v47 = v156;
            v48 = v157;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, &v161);
            *v136 = v108;

            v137 = v146;
            _os_log_impl((void *)&_mh_execute_header, v132, (os_log_type_t)v147, "Getting nil rootNode for %@", v146, 0xCu);
            v138 = sub_10006922C(&qword_100643AB0);
            swift_arrayDestroy(v136, 1, v138);
            swift_slowDealloc(v136, -1, -1);
            swift_slowDealloc(v137, -1, -1);
          }
          else
          {

            v132 = v131;
          }

          (*((void (**)(char *, uint64_t))v148 + 1))(v18, v16);
          v45 = 0;
          goto LABEL_50;
        }
        v112 = (void *)v111;
        v113 = objc_allocWithZone((Class)type metadata accessor for DOCFileSystemCollection(0));
        v114 = v158;
        v115 = v158;
        v159 = 1;
        v116 = sub_100376EBC(v112, 0, v114, 0x100000000, v113);

        v117 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
        sub_1001621DC(v116);
        v45 = v118;

      }
      else
      {
        v119 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v120 = objc_msgSend(v119, "rootCollectionForProviderDomain:", v109);

        v121 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
        v122 = v120;
        sub_10004644C(v122, 0);
        v45 = v123;

      }
    }
    else
    {
      v45 = 0;
    }
LABEL_50:
    v21 = 0;
    v46 = v155;
    goto LABEL_12;
  }
LABEL_14:
  v46 = v155;
  if (v155)
  {
    v47 = v156;
    v54 = objc_msgSend(v156, "sourceIdentifier");
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;
    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v60 = v58;
    if (v55 == v59 && v57 == v58)
    {

      swift_bridgeObjectRelease_n(v57, 2);
LABEL_19:
      v62 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v63 = objc_msgSend(v62, "newSearchTrashCollection");
LABEL_30:

      v84 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
      sub_10004644C(v63, 0);
      v45 = v85;
      swift_unknownObjectRelease(v21);
      v21 = 0;
      goto LABEL_11;
    }
    v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v57, v59, v58, 0);

    swift_bridgeObjectRelease(v57);
    swift_bridgeObjectRelease(v60);
    if ((v61 & 1) != 0)
      goto LABEL_19;
    v79 = objc_msgSend(objc_allocWithZone((Class)DOCEnumerationProperties), "init");
    v80 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v81 = (id *)&v158[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
    if ((v158[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) != 0)
    {
      v62 = v80;
      v82 = *v81;
      v83 = *v81;
      v63 = _sSo13FPItemManagerC5FilesE15queryCollection13forIdentifier10properties29supportRemovableFileProvidersSo07FPQueryE0CSo026DOCSpotlightEnumeratedItemG0a_So24DOCEnumerationPropertiesCSbtF_0(v83, v79, (int)objc_msgSend(v157, "supportsRemovableFileProviders"));

      goto LABEL_30;
    }
  }
  else
  {
    swift_unknownObjectRelease(v21);
    __break(1u);
  }
LABEL_67:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010051A570, "Files/DOCFileProviderSource.swift", 33, 2, 386, 0);
  __break(1u);
}

uint64_t sub_100052934(const __CFAttributedString *a1, uint64_t a2, double a3, double a4, double a5)
{
  const __CFAttributedString *v9;
  const __CTTypesetter *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  CFIndex v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  const __CTLine *Line;
  id *v21;
  void (*v22)(void);
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  const __CFAttributedString *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  Class isa;
  const __CFAttributedString *v35;
  const __CTLine *v36;
  CTLineRef TruncatedLine;
  CFIndex v38;
  CFIndex v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const __CFAttributedString *v44;
  const __CTLine *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const __CTTypesetter *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];
  double v63;
  uint64_t v64;
  CFRange v65;
  CFRange v66;

  v9 = a1;
  v10 = CTTypesetterCreateWithAttributedString(a1);
  v11 = (uint64_t)_swiftEmptyArrayStorage;
  v64 = (uint64_t)_swiftEmptyArrayStorage;
  v12 = -[__CFAttributedString length](v9, "length");
  if ((uint64_t)v12 > 0)
  {
    v13 = (uint64_t)v12;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      goto LABEL_38;
    if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10) < a2)
    {
      do
      {
        v14 = 0;
        v15 = a2 - 1;
        v60 = v13;
        v61 = a2;
        v58 = v10;
        v59 = a2 - 1;
        while (1)
        {
          if ((unint64_t)v11 >> 62)
          {
            v50 = v11 < 0 ? v11 : v11 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v11);
            v16 = _CocoaArrayWrapper.endIndex.getter(v50);
            swift_bridgeObjectRelease(v11);
          }
          else
          {
            v16 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v17 = v14 ? 0.0 : a4;
          v18 = a3 - v17;
          if (v16 == v15)
          {
            v19 = v18 - a5;
            v63 = v18 - a5;
            v65.location = v14;
            v65.length = 0;
            Line = CTTypesetterCreateLine(v10, v65);
            v21 = (id *)DOCUnicode.horizontalEllipsis.unsafeMutableAddressor();
            v22 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v21) + 0x58);
            v23 = *v21;
            v22();
            v25 = v24;

            v26 = -[__CFAttributedString attributesAtIndex:effectiveRange:](v9, "attributesAtIndex:effectiveRange:", 0, 0);
            type metadata accessor for Key(0);
            v27 = v9;
            v29 = v28;
            v30 = sub_10005FB20();
            v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v26, v29, (char *)&type metadata for Any + 8, v30);

            v32 = objc_allocWithZone((Class)NSAttributedString);
            v33 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v25);
            isa = Dictionary._bridgeToObjectiveC()().super.isa;
            v35 = (const __CFAttributedString *)objc_msgSend(v32, "initWithString:attributes:", v33, isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

            v36 = CTLineCreateWithAttributedString(v35);
            TruncatedLine = CTLineCreateTruncatedLine(Line, v19, kCTLineTruncationMiddle, v36);

            if (TruncatedLine)
            {

              v38 = 0;
              Line = TruncatedLine;
            }
            else
            {
              v40 = sub_100449280();
              v41 = static os_log_type_t.error.getter(v40);
              v42 = sub_10006922C((uint64_t *)&unk_100644560);
              v43 = swift_allocObject(v42, 72, 7);
              *(_OWORD *)(v43 + 16) = xmmword_1004D9670;
              *(_QWORD *)(v43 + 56) = sub_10004F2F0(0, &qword_10064A0C0, NSAttributedString_ptr);
              *(_QWORD *)(v43 + 64) = sub_1004492B4();
              *(_QWORD *)(v43 + 32) = v27;
              v44 = v27;
              os_log(_:dso:log:type:_:)("Failed to create truncated last line for text %@", 48, 2, &_mh_execute_header, v40, v41, v43);

              swift_bridgeObjectRelease(v43);
              v38 = 0;
            }
            v9 = v27;
            v13 = v60;
            a2 = v61;
            v10 = v58;
            v15 = v59;
          }
          else
          {
            v63 = v18;
            v39 = CTTypesetterSuggestLineBreak(v10, v14, v18);
            if (__OFADD__(v14, v39))
              goto LABEL_37;
            v38 = v39;
            if (v14 + v39 >= v13)
            {
              swift_beginAccess(&v63, v62, 1, 0);
              v63 = v63 - a5;
              v38 = CTTypesetterSuggestLineBreak(v10, v14, v63);
            }
            v66.location = v14;
            v66.length = v38;
            Line = CTTypesetterCreateLine(v10, v66);
          }
          v45 = Line;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
          v47 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v46 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v47 >= v46 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
          v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v45);
          v11 = (uint64_t)&v64;
          specialized Array._endMutation()(v48);

          v49 = __OFADD__(v14, v38);
          v14 += v38;
          if (v49)
            break;
          if (v14 >= v13)
          {

            return v64;
          }
          v11 = v64;
          if ((unint64_t)v64 >> 62)
          {
            v51 = v15;
            if (v64 < 0)
              v52 = v64;
            else
              v52 = v64 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v64);
            v53 = v52;
            v15 = v51;
            v54 = _CocoaArrayWrapper.endIndex.getter(v53);
            swift_bridgeObjectRelease(v11);
            if (v54 >= a2)
              goto LABEL_42;
          }
          else if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
          {
            goto LABEL_42;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        if (v11 < 0)
          v55 = v11;
        else
          v55 = v11 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v11);
        v56 = _CocoaArrayWrapper.endIndex.getter(v55);
        swift_bridgeObjectRelease(v11);
      }
      while (v56 < a2);
    }
  }
LABEL_42:

  return v11;
}

void sub_100052EB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100052F10()
{
  char *v0;
  char *v1;
  void *v2;
  id result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  unsigned __int8 v20;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  result = objc_msgSend(v2, "isPickerUI");
  if ((_DWORD)result)
  {
    result = objc_msgSend(v2, "forSavingDocuments");
    if ((result & 1) == 0)
    {
      result = objc_msgSend(v2, "forPickingFolders");
      if (!(_DWORD)result)
        return 0;
    }
  }
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v4)
  {
    v5 = v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v5 + 16) & 1) != 0)
    {
      v6 = *(void **)(*(_QWORD *)v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v6);
    }
    else
    {
      v6 = *(void **)(v5 + 8);
      swift_unknownObjectRetain(v6);
      if (!v6)
        return 0;
    }
    ObjectType = swift_getObjectType(v6, v7);
    if (objc_msgSend(v6, "isFolder") && (objc_msgSend(v6, "isAnyParentTrashed") & 1) == 0)
    {
      v10 = type metadata accessor for DOCActionManager();
      v11 = sub_100359064(v6, v10, ObjectType);
      if (objc_msgSend(v1, "isEditing"))
        v12 = sub_100034068(0);
      else
        v12 = _swiftEmptyArrayStorage;
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v13 = sub_1002D3744((uint64_t)v12);
      v15 = v14;
      swift_bridgeObjectRelease(v12);
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v16);

      v18 = swift_allocObject(&unk_1005DA8E8, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16, v1);
      v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v13, v15, 0, 0, v17, 0, 0, 0, v19, 0, 0, 0, sub_1002D5400, v18);
      objc_msgSend(v9, "setAttributes:", (v11 & 1) == 0);
      v20 = objc_msgSend(v1, "isEditing");
      swift_unknownObjectRelease(v6);
      if ((v20 & 1) == 0)
        return v9;

    }
    else
    {
      swift_unknownObjectRelease(v6);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1000531A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v9;
  void *v10;
  UIFontWeight v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  UIImageSymbolWeight v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  unint64_t v21;
  NSString v22;
  id v23;

  if (a3)
  {
    sub_10000F428(0x5040302010000uLL >> (8 * a2));
    if ((v9 & 1) != 0)
    {
      if (qword_100641148 != -1)
        swift_once(&qword_100641148, sub_1000834CC);
      v10 = (void *)qword_100654AC0;
      v11 = *(double *)&qword_100654AC8;
      v12 = qword_100654AD0;
      v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v14 = swift_allocObject(v13, 56, 7);
      *(_OWORD *)(v14 + 16) = xmmword_1004D9720;
      v15 = v10;
      v16 = _UIImageSymbolWeightForFontWeight(v11);
      v17 = (void *)objc_opt_self(UIImageSymbolConfiguration);
      *(_QWORD *)(v14 + 32) = objc_msgSend(v17, "configurationWithWeight:", v16);
      *(_QWORD *)(v14 + 40) = objc_msgSend(v17, "configurationWithTextStyle:", v15);
      v18 = objc_msgSend(v17, "configurationWithScale:", v12);
      *(_QWORD *)(v14 + 48) = v18;
      specialized Array._endMutation()(v18);
      sub_100048198(v14);
      v20 = v19;
      swift_bridgeObjectRelease(v14);
      if ((DOCItemSortDescriptor.ascending.getter(a2, a3, a4, a5 & 1) & 1) != 0)
        v21 = 0xEA00000000007075;
      else
        v21 = 0xEC0000006E776F64;
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
      v23 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

      if (v23)
      {
        objc_msgSend(v23, "imageWithConfiguration:", v20);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1000533EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _QWORD *a6)
{
  int64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  SEL *v18;
  void *v19;
  id v20;
  unsigned __int8 v21;
  double v22;
  double v23;
  double v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v75;
  _OWORD v76[12];
  _OWORD v77[2];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  unsigned __int8 v91;
  _QWORD *v92;
  _BYTE v93[24];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  unsigned __int8 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;

  v7 = a1;
  v8 = *(_OWORD *)(a4 + 144);
  v116 = *(_OWORD *)(a4 + 128);
  v117 = v8;
  v118 = *(_OWORD *)(a4 + 160);
  v119 = *(_QWORD *)(a4 + 176);
  v9 = *(_OWORD *)(a4 + 80);
  v112 = *(_OWORD *)(a4 + 64);
  v113 = v9;
  v10 = *(_OWORD *)(a4 + 112);
  v114 = *(_OWORD *)(a4 + 96);
  v115 = v10;
  v11 = *(_OWORD *)(a4 + 16);
  v108 = *(_OWORD *)a4;
  v109 = v11;
  v12 = *(_OWORD *)(a4 + 48);
  v110 = *(_OWORD *)(a4 + 32);
  v111 = v12;
  if (a1 >> 62)
    goto LABEL_27;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v13)
  {
    while (1)
    {
      v14 = *(double *)(a4 + 48);
      v15 = *(double *)(a4 + 56);
      v71 = (id)objc_opt_self(DOCThumbnailGenerator);
      v69 = v13 - 1;
      if (v13 < 1)
        break;
      v16 = 0;
      v17 = a6 + 2;
      v70 = v7 & 0xC000000000000001;
      v18 = (SEL *)&off_10061F000;
      v68 = v7;
      while (1)
      {
        v75 = v16;
        if (v70)
        {
          v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v7);
        }
        else
        {
          v19 = *(void **)(v7 + 8 * v16 + 32);
          swift_unknownObjectRetain(v19);
        }
        sub_100070B28(a4);
        v20 = a5;
        v21 = objc_msgSend(v19, v18[426]);
        v22 = 0.0;
        if ((v21 & 1) == 0)
        {
          v23 = *(double *)(a4 + 80);
          if (v23 >= v14)
            v23 = v14;
          v22 = floor(v23) / 1.41421356;
        }
        objc_msgSend(v20, "displayScale", v68);
        v25 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:minimumSize:scale:style:isFolded:isInteractive:isFolder:", a3, 1, 1, objc_msgSend(v19, v18[426]), v14, v15, v22, v24);
        v26 = objc_msgSend(v71, "sharedGenerator");
        v27 = objc_msgSend(v26, "thumbnailForNode:descriptor:", v19, v25);

        *(_QWORD *)&v94 = v27;
        *((_QWORD *)&v94 + 1) = a3;
        v103 = v116;
        v104 = v117;
        v105 = v118;
        *(_QWORD *)&v106 = v119;
        v99 = v112;
        v100 = v113;
        v101 = v114;
        v102 = v115;
        v95 = v108;
        v96 = v109;
        v97 = v110;
        v98 = v111;
        *((_QWORD *)&v106 + 1) = v20;
        v107 = v21;
        v28 = objc_msgSend(v19, "thumbnailIdentifier");
        swift_beginAccess(v17, v93, 33, 0);
        swift_unknownObjectRetain(v19);
        sub_100362D84(&v94);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
        v92 = (_QWORD *)*v17;
        a6 = v92;
        *v17 = 0x8000000000000000;
        v7 = sub_1000667B0((uint64_t)v28);
        v31 = a6[2];
        v32 = (v30 & 1) == 0;
        v33 = v31 + v32;
        if (__OFADD__(v31, v32))
          break;
        v34 = v30;
        if (a6[3] >= v33)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1002E9E50();
        }
        else
        {
          sub_10001E3E4(v33, isUniquelyReferenced_nonNull_native);
          v35 = sub_1000667B0((uint64_t)v28);
          if ((v34 & 1) != (v36 & 1))
            goto LABEL_33;
          v7 = v35;
        }
        v88 = v104;
        v89 = v105;
        v90 = v106;
        v91 = v107;
        v84 = v100;
        v85 = v101;
        v86 = v102;
        v87 = v103;
        v80 = v96;
        v81 = v97;
        v82 = v98;
        v83 = v99;
        v78 = v94;
        v79 = v95;
        if ((v34 & 1) != 0)
        {
          a6 = v92;
          v37 = v92[7] + 224 * v7;
          v38 = *(_OWORD *)(v37 + 16);
          v76[0] = *(_OWORD *)v37;
          v76[1] = v38;
          v39 = *(_OWORD *)(v37 + 80);
          v41 = *(_OWORD *)(v37 + 32);
          v40 = *(_OWORD *)(v37 + 48);
          v76[4] = *(_OWORD *)(v37 + 64);
          v76[5] = v39;
          v76[2] = v41;
          v76[3] = v40;
          v42 = *(_OWORD *)(v37 + 144);
          v44 = *(_OWORD *)(v37 + 96);
          v43 = *(_OWORD *)(v37 + 112);
          v76[8] = *(_OWORD *)(v37 + 128);
          v76[9] = v42;
          v76[6] = v44;
          v76[7] = v43;
          v46 = *(_OWORD *)(v37 + 176);
          v45 = *(_OWORD *)(v37 + 192);
          v47 = *(_OWORD *)(v37 + 160);
          *(_OWORD *)((char *)v77 + 9) = *(_OWORD *)(v37 + 201);
          v76[11] = v46;
          v77[0] = v45;
          v76[10] = v47;
          sub_100362CFC((uint64_t *)v76);
          v48 = v89;
          *(_OWORD *)(v37 + 168) = v88;
          *(_OWORD *)(v37 + 184) = v48;
          *(_OWORD *)(v37 + 200) = v90;
          v49 = v85;
          *(_OWORD *)(v37 + 104) = v84;
          *(_OWORD *)(v37 + 120) = v49;
          v50 = v87;
          *(_OWORD *)(v37 + 136) = v86;
          *(_OWORD *)(v37 + 152) = v50;
          v51 = v81;
          *(_OWORD *)(v37 + 40) = v80;
          *(_OWORD *)(v37 + 56) = v51;
          v52 = v83;
          *(_OWORD *)(v37 + 72) = v82;
          *(_OWORD *)(v37 + 88) = v52;
          v53 = v79;
          *(_OWORD *)(v37 + 8) = v78;
          *(_QWORD *)v37 = v19;
          *(_BYTE *)(v37 + 216) = v91;
          *(_OWORD *)(v37 + 24) = v53;
        }
        else
        {
          a6 = v92;
          v92[((unint64_t)v7 >> 6) + 8] |= 1 << v7;
          *(_QWORD *)(a6[6] + 8 * v7) = v28;
          v54 = a6[7] + 224 * v7;
          v55 = v79;
          *(_OWORD *)(v54 + 8) = v78;
          *(_OWORD *)(v54 + 24) = v55;
          v56 = v82;
          *(_OWORD *)(v54 + 88) = v83;
          *(_OWORD *)(v54 + 72) = v56;
          v57 = v80;
          *(_OWORD *)(v54 + 56) = v81;
          *(_OWORD *)(v54 + 40) = v57;
          v58 = v86;
          *(_OWORD *)(v54 + 152) = v87;
          *(_OWORD *)(v54 + 136) = v58;
          v59 = v84;
          *(_OWORD *)(v54 + 120) = v85;
          *(_OWORD *)(v54 + 104) = v59;
          *(_OWORD *)(v54 + 200) = v90;
          v60 = v88;
          *(_OWORD *)(v54 + 184) = v89;
          *(_QWORD *)v54 = v19;
          *(_BYTE *)(v54 + 216) = v91;
          *(_OWORD *)(v54 + 168) = v60;
          v61 = a6[2];
          v62 = __OFADD__(v61, 1);
          v63 = v61 + 1;
          if (v62)
            goto LABEL_26;
          a6[2] = v63;
          v64 = v28;
        }
        v65 = *v17;
        *v17 = a6;

        swift_bridgeObjectRelease(v65);
        swift_endAccess(v93);
        sub_10010CA6C((uint64_t *)&v94);
        swift_unknownObjectRelease(v19);
        v7 = v68;
        if (v69 == v75)
        {
          swift_bridgeObjectRelease(v68);
          return;
        }
        v16 = v75 + 1;
        v18 = (SEL *)&off_10061F000;
      }
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      if (v7 < 0)
        v66 = v7;
      else
        v66 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v13 = _CocoaArrayWrapper.endIndex.getter(v66);
      if (!v13)
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    v67 = sub_10004F2F0(0, (unint64_t *)&unk_1006443F0, DOCNodeThumbnailIdentifier_ptr);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v67);
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_bridgeObjectRelease(v7);
  }
}

char *sub_100053C4C(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  unsigned int v12;
  char v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  objc_super v37;

  v3 = &v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
  *v3 = 0;
  v3[1] = 0;
  v4 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager] = 0;
  *(_OWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier] = xmmword_1004DB490;
  v5 = &v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName];
  *v6 = 0;
  v6[1] = 0;
  *(_OWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName] = xmmword_1004DB490;
  v7 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_isEjectable;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isEjectable] = 0;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 0;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = &off_1005C0228;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault] = 0;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode] = 5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes] = &off_1005C0250;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_errorCount] = 0;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_supportsImportInDefaultSaveLocation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain] = a1;
  v8 = v1;
  v9 = a1;
  v10 = objc_msgSend(v9, "providerID");
  v11 = &v8[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
  *(_QWORD *)v11 = v10;
  v11[8] = 0;
  v12 = objc_msgSend(v9, "isEnabled");
  v13 = 0;
  if (v12)
    v13 = objc_msgSend(v9, "isHidden") ^ 1;
  v1[v4] = v13;
  v1[v7] = objc_msgSend(v9, "canDisconnect");

  v37.receiver = v8;
  v37.super_class = (Class)type metadata accessor for DOCFileProviderSource();
  v14 = (char *)objc_msgSendSuper2(&v37, "init");
  v15 = objc_msgSend(v9, "topLevelBundleIdentifier");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = (uint64_t *)&v14[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier];
  v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier];
  v21 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier
                      + 8];
  *v19 = v16;
  v19[1] = v18;
  sub_10008A644(v20, v21);
  v22 = v14;
  v23 = objc_msgSend(v9, "identifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setIdentifier:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v27 = objc_msgSend(v9, "supportedFileTypes");
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, &type metadata for String);

  v29 = static UTType.doc_contentTypes(forIdentifiers:)(v28);
  swift_bridgeObjectRelease(v28);
  v30 = *(_QWORD *)(v29 + 16);
  v31 = v22;
  if (!v30)
  {
    swift_bridgeObjectRelease(v29);
    v32 = sub_10006922C((uint64_t *)&unk_10064B460);
    v33 = *(_QWORD *)(type metadata accessor for UTType(0) - 8);
    v29 = swift_allocObject(v32, ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ 2 * *(_QWORD *)(v33 + 72), *(unsigned __int8 *)(v33 + 80) | 7);
    *(_OWORD *)(v29 + 16) = xmmword_1004D4CE0;
    v34 = static UTType.content.getter();
    static UTType.item.getter(v34);
  }
  type metadata accessor for UTType(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v31, "setDocumentContentTypes:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  return v31;
}

_QWORD *sub_100053FC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes));
    __asm { BR              X8 }
  }
  v2 = _swiftEmptyArrayStorage;
  if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
    v2 = sub_100153554(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_100153554((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 32) = 6;
  return v2;
}

uint64_t sub_1000542B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID + 8);
  v11 = swift_bridgeObjectRetain(v9);
  v12 = Logger.BrowserHistory.unsafeMutableAddressor(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v12, v5);
  swift_bridgeObjectRetain_n(a2, 2);
  v13 = swift_bridgeObjectRetain(v9);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v22 = v5;
    v17 = v16;
    v18 = swift_slowAlloc(64, -1);
    v21 = a1;
    v19 = v18;
    v24 = v18;
    *(_DWORD *)v17 = 136315394;
    swift_bridgeObjectRetain(v9);
    v23 = sub_1000544FC(v10, v9, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v23 = sub_1000544FC(v21, a2, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[History:%s] %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(v9, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1000544FC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[3];
  void *ObjectType;

  v6 = sub_1000545CC(v13, 0, 0, 1, a1, a2);
  v8 = v13[0];
  if (v6)
  {
    v9 = v6;
    ObjectType = (void *)swift_getObjectType(v6, v7);
    v13[0] = v9;
    v10 = *a3;
    if (*a3)
    {
      sub_100069BD8((uint64_t)v13, *a3);
      *a3 = v10 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    v11 = *a3;
    if (*a3)
    {
      sub_100069BD8((uint64_t)v13, *a3);
      *a3 = v11 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100068588(v13);
  return v8;
}

uint64_t sub_1000545CC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100082278(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

Class sub_100054784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  Class result;
  uint64_t v7;
  Class v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  uint64_t v32;
  objc_class *v33;
  objc_class *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  NSBundle v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  NSString v53;
  uint64_t v54;
  objc_class *v55;
  NSString v56;
  uint64_t v57;
  objc_class *v58;
  uint64_t v59;
  uint64_t v60;
  UIMenuElementSize v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v66;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71[24];
  _QWORD *v72;
  UIImage_optional v73;

  v4 = a2;
  v5 = v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
  result = (Class)swift_unknownObjectWeakLoadStrong(v5, a2);
  if (!result)
    return result;
  v8 = result;
  v9 = *(_QWORD *)(v5 + 8);
  ObjectType = swift_getObjectType(result, v7);
  v11 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(ObjectType, v9);
  swift_unknownObjectRelease(v8);
  v72 = v11;
  if (!v11[2])
  {
LABEL_13:
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  v12 = *(_QWORD *)(v68 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v12)
    goto LABEL_68;
  v13 = v12 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v13 + 16) & 1) != 0)
    goto LABEL_35;
  v14 = *(id *)v13;
  v15 = objc_msgSend(v14, "doc_displaysSearchResults");

  if (!v15)
    goto LABEL_35;
  v16 = v11[2];
  if (v16)
  {
    if (v11[4] == 2)
    {
      v17 = 0;
LABEL_9:
      v18 = v17 + 1;
      if (!__OFADD__(v17, 1))
      {
        if (v18 == v16)
        {
LABEL_11:
          if ((uint64_t)v16 < v17)
          {
            __break(1u);
            goto LABEL_13;
          }
          goto LABEL_34;
        }
        v19 = v17 + 5;
        while ((v18 & 0x8000000000000000) == 0)
        {
          if (v19 - 4 >= v16)
            goto LABEL_60;
          v21 = v11[v19];
          if (v21 != 2)
          {
            if (v19 - 4 != v17)
            {
              if (v17 >= v16)
                goto LABEL_63;
              v22 = v11[v17 + 4];
              if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
                v11 = sub_100452BE0(v11);
              v11[v17 + 4] = v21;
              v11[v19] = v22;
              v72 = v11;
            }
            if (__OFADD__(v17++, 1))
              goto LABEL_61;
            v16 = v11[2];
          }
          v20 = v19 - 3;
          ++v19;
          if (v20 == v16)
            goto LABEL_11;
        }
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
      }
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      v69 = v3;
      result = (Class)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, &v69, &type metadata for DOCDisplayMode, &type metadata for Int);
      __break(1u);
      return result;
    }
    if (v16 == 1)
    {
      v17 = 1;
    }
    else
    {
      v24 = 5;
      do
      {
        v17 = v24 - 4;
        if (v11[v24] == 2)
          goto LABEL_9;
        v25 = v24 - 3;
        if (__OFADD__(v17, 1))
          goto LABEL_62;
        ++v24;
      }
      while (v25 != v16);
      v17 = v11[2];
    }
  }
  else
  {
    v17 = 0;
  }
LABEL_34:
  sub_10045BA80(v17, v16);
LABEL_35:
  if ((v4 & 1) != 0)
  {
    v26 = (uint64_t *)(v68 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
    swift_beginAccess(v68 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v71, 0, 0);
    a1 = *v26;
  }
  v27 = v72;
  v28 = v72[2];
  if (v28)
  {
    v70 = (unint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v72);
    specialized ContiguousArray.reserveCapacity(_:)(v28);
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v29 = 0;
    while (1)
    {
      v3 = v27[v29 + 4];
      v52 = v3 == a1;
      if (v3)
      {
        if (v3 != 1)
        {
          if (v3 != 2)
            goto LABEL_69;
          v53 = String._bridgeToObjectiveC()();
          v31 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v53);

          v55 = (objc_class *)(id)_DocumentManagerBundle(v54);
          if (!v55)
            goto LABEL_67;
          v34 = v55;
          v42 = 0xD000000000000028;
          preferredElementSize = 0x8000000100524460;
          v35 = 0x736E6D756C6F43;
          v36 = 0xE700000000000000;
          v37 = 0x617A696C61636F4CLL;
          v38 = 0xEB00000000656C62;
          v39.super.isa = v34;
          v40 = 0;
          v41 = 0xE000000000000000;
          goto LABEL_42;
        }
        v30 = String._bridgeToObjectiveC()();
        v31 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v30);

        v33 = (objc_class *)(id)_DocumentManagerBundle(v32);
        if (!v33)
          goto LABEL_65;
        v34 = v33;
        preferredElementSize = 0x8000000100524490;
        v35 = 1953720652;
        v36 = 0xE400000000000000;
        v37 = 0x617A696C61636F4CLL;
        v38 = 0xEB00000000656C62;
        v39.super.isa = v34;
        v40 = 1953720652;
        v41 = 0xE400000000000000;
      }
      else
      {
        v56 = String._bridgeToObjectiveC()();
        v31 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v56);

        v58 = (objc_class *)(id)_DocumentManagerBundle(v57);
        if (!v58)
          goto LABEL_66;
        v34 = v58;
        preferredElementSize = 0x8000000100524410;
        v35 = 0x736E6F6349;
        v36 = 0xE500000000000000;
        v37 = 0x617A696C61636F4CLL;
        v38 = 0xEB00000000656C62;
        v39.super.isa = v34;
        v40 = 0;
        v41 = 0xE000000000000000;
      }
      v42 = 0xD000000000000026;
LABEL_42:
      v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v35, *(Swift::String_optional *)&v37, v39, *(Swift::String *)&v40, *(Swift::String *)(&preferredElementSize - 1));

      ++v29;
      v69 = v3;
      dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v45 = v44;
      v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v45);
      v47 = swift_allocObject(&unk_1005DA8E8, 24, 7);
      swift_unknownObjectWeakInit(v47 + 16);
      v49 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v43._countAndFlagsBits, v43._object, 0, 0, v31, 0, v46, 0, v48, 0, 0, v52, sub_1002D53F8, v47);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v49);
      v50 = *(_QWORD *)(v70 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v50);
      v51 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v49);
      specialized ContiguousArray._endMutation()(v51);
      if (v28 == v29)
      {
        v59 = v70;
        swift_bridgeObjectRelease_n(v27, 2);
        if (!(v70 >> 62))
          goto LABEL_51;
LABEL_55:
        if (v59 < 0)
          v63 = v59;
        else
          v63 = v59 & 0xFFFFFFFFFFFFFF8;
        v64 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
        swift_bridgeObjectRetain(v59);
        v61 = _bridgeCocoaArray<A>(_:)(v63, v64);
        swift_bridgeObjectRelease(v59);
        goto LABEL_52;
      }
    }
  }
  swift_bridgeObjectRelease(v72);
  v59 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_55;
LABEL_51:
  v60 = swift_bridgeObjectRetain(v59);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v60);
  sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
  v61 = v59;
LABEL_52:
  swift_bridgeObjectRelease(v59);
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  v73.value.super.isa = 0;
  v73.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v62, (Swift::String_optional)0, v73, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v61, v66).super.super.isa;
}

void sub_100054EB4(_QWORD *a1, char a2)
{
  char *v2;
  char *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void *v15;
  uint64_t Strong;
  void (*v17)(uint64_t, _UNKNOWN **);
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;

  v3 = v2;
  v6 = objc_msgSend(v2, "childViewControllers");
  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v9 = sub_1000897B0((uint64_t)a1, v8);
  if (objc_msgSend(a1, "wantsAppearanceOverride", swift_bridgeObjectRelease(v8).n128_f64[0])
    && (v9 & 1) == 0)
  {
    if ((sub_10000A360() & 1) != 0)
      goto LABEL_9;
LABEL_7:
    v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource], v10);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
    if (v14)
    {
      v15 = (void *)v14;
      objc_msgSend(a1, "setAppearance:", v14);

    }
    goto LABEL_9;
  }
  v11 = objc_msgSend(a1, "wantsAppearanceOverride");
  if ((v9 & 1) != 0)
    goto LABEL_21;
  if (v11)
    goto LABEL_7;
LABEL_9:
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_actionReporting], v10);
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x110))(Strong);
  v17 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *a1) + 0xE0);
  v18 = swift_unknownObjectRetain(v3);
  v17(v18, &off_1005DA140);
  v19 = (char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing;
  *((_QWORD *)v19 + 1) = &off_1005DA150;
  swift_unknownObjectWeakAssign(v19, v3);
  v20 = *(void **)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  if (v20)
    v21 = *(id *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  else
    v21 = objc_msgSend(v3, "navigationItem");
  v22 = *(void **)((char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem) = v21;
  v23 = v21;
  v24 = v20;

  v25 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
  *((_BYTE *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
  v26 = objc_msgSend(a1, "viewIfLoaded");
  v27 = objc_msgSend(v26, "window");

  if (v27)
    sub_1000926C8();

  v28 = &v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate];
  v30 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate], v29);
  v31 = (char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v28 + 1);
  swift_unknownObjectWeakAssign(v31, v30);
  swift_unknownObjectRelease(v30);
  v32 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems];
  v33 = *(_QWORD *)((char *)a1
                  + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems);
  *(_QWORD *)((char *)a1
            + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems) = v32;
  swift_bridgeObjectRetain(v32);
  *(_QWORD *)&v34 = swift_bridgeObjectRelease(v33).n128_u64[0];
  *((_BYTE *)a1 + v25) = 0;
  v35 = objc_msgSend(a1, "viewIfLoaded", v34);
  v36 = objc_msgSend(v35, "window");

  if (v36)
    sub_1000926C8();
  v37 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems];
  v38 = *(_QWORD *)((char *)a1
                  + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
  *(_QWORD *)((char *)a1
            + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems) = v37;
  swift_bridgeObjectRetain(v37);
  *(_QWORD *)&v39 = swift_bridgeObjectRelease(v38).n128_u64[0];
  *((_BYTE *)a1 + v25) = 0;
  v40 = objc_msgSend(a1, "viewIfLoaded", v39);
  v41 = objc_msgSend(v40, "window");

  if (v41)
    sub_1000926C8();
  sub_10009255C(v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems]);
  if (objc_msgSend(v3, "_appearState") == 1 || objc_msgSend(v3, "_appearState") == 2)
    objc_msgSend(a1, "beginAppearanceTransition:animated:", 1, 0);
LABEL_21:
  objc_msgSend(v3, "addChildViewController:", a1);
  if ((a2 & 1) != 0)
  {
    v42 = objc_msgSend(a1, "view");
    if (!v42)
    {
      __break(1u);
      goto LABEL_43;
    }
    v43 = v42;
    v44 = objc_msgSend(v42, "superview");

    v45 = objc_msgSend(v3, "view");
    v46 = v45;
    if (v44)
    {

      if (v46)
      {

        if (v44 == v46)
          goto LABEL_35;
      }
LABEL_29:
      v47 = objc_msgSend(a1, "view");
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend(v3, "view");
        if (v49)
        {
          v50 = v49;
          objc_msgSend(v49, "bounds");
          v52 = v51;
          v54 = v53;
          v56 = v55;
          v58 = v57;

          objc_msgSend(v48, "setFrame:", v52, v54, v56, v58);
          v59 = objc_msgSend(a1, "view");
          if (v59)
          {
            v60 = v59;
            objc_msgSend(v59, "setAutoresizingMask:", 18);

            v61 = objc_msgSend(v3, "view");
            if (v61)
            {
              v62 = v61;
              v63 = objc_msgSend(a1, "view");
              if (v63)
              {
                v64 = v63;
                objc_msgSend(v62, "addSubview:", v63);

                goto LABEL_35;
              }
LABEL_47:
              __break(1u);
              return;
            }
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v45)
    {

      goto LABEL_29;
    }
  }
LABEL_35:
  v65 = objc_msgSend(a1, "viewIfLoaded");
  if (v65)
  {
    v66 = v65;
    objc_msgSend(v65, "setHidden:", 0);

  }
  if ((v9 & 1) == 0)
  {
    objc_msgSend(a1, "didMoveToParentViewController:", v3);
    if (objc_msgSend(v3, "_appearState") == 1 || objc_msgSend(v3, "_appearState") == 2)
      objc_msgSend(a1, "endAppearanceTransition");
  }
}

void sub_1000554D8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char v8;
  char v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v20;
  void *v21;
  _BOOL8 v23;
  void *v24;
  char *v25;
  int v26;
  char **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void *v69;
  uint64_t v70;
  void *v71;
  void *v72;
  char **v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  _BYTE *v79;
  uint64_t (*v80)(_QWORD);
  _BYTE *v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t (*v89)(_QWORD);
  _BYTE *v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  unsigned int v95;
  id v96;
  void *v97;
  id v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  unint64_t v102;
  _OWORD v103[8];
  _OWORD v104[8];
  uint64_t v105[16];
  uint64_t v106;
  _OWORD v107[8];
  _QWORD v108[16];
  _QWORD v109[16];
  _QWORD v110[16];
  _OWORD v111[11];
  uint64_t v112;
  char v113[9];
  char v114;
  _BYTE v115[9];
  uint64_t v116;
  char v117;
  _OWORD v118[11];
  uint64_t v119;
  _OWORD v120[8];
  _OWORD v121[8];
  _OWORD v122[8];
  _QWORD v123[25];

  v1 = v0;
  if (!objc_msgSend(v0, "isViewLoaded"))
    return;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (!v2)
    return;
  v3 = (void *)objc_opt_self(UIView);
  LODWORD(v4) = objc_msgSend(v3, "areAnimationsEnabled", swift_retain().n128_f64[0]);
  objc_msgSend(v3, "setAnimationsEnabled:", 0);
  objc_msgSend(v0, "loadViewIfNeeded");
  v5 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v6 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v6)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v7 = objc_msgSend(v6, "panGestureRecognizer");
  v95 = objc_msgSend(v7, "isEnabled");

  sub_10009DED4((uint64_t)v115);
  sub_100071B10();
  v9 = v8;
  v10 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &v114, 0, 0);
  v11 = *(_QWORD *)v10;
  v12 = (char *)sub_10001B43C();
  v13 = (uint64_t)&v12[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  swift_beginAccess(&v12[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout], v113, 0, 0);
  v105[3] = (uint64_t)&type metadata for DOCItemCollectionCoreFooterAwareLayout;
  v105[4] = (uint64_t)&off_1005D1A00;
  v105[0] = swift_allocObject(&unk_1005CDC18, 64, 7);
  sub_10008F04C(v13, v105[0] + 16);

  v14 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext], v123, 33, 0);
  sub_10008BB40((uint64_t)v105, v14, &qword_100646B40);
  swift_endAccess(v123);
  objc_msgSend(v1, "loadViewIfNeeded");
  v15 = *(void **)&v1[v5];
  if (!v15)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v16 = v11 - 1;
  v17 = (unint64_t)(v11 - 1) >= 2;
  v18 = v116;
  v20 = !v17 || v116 == 0;
  objc_msgSend(v15, "setAlwaysBounceVertical:", v20);
  objc_msgSend(v1, "loadViewIfNeeded");
  v21 = *(void **)&v1[v5];
  if (!v21)
    goto LABEL_92;
  v23 = v16 > 1 && v18 == 1;
  objc_msgSend(v21, "setAlwaysBounceHorizontal:", v23);
  objc_msgSend(v1, "loadViewIfNeeded");
  v99 = v5;
  v24 = *(void **)&v1[v5];
  if (!v24)
    goto LABEL_93;
  v25 = v1;
  v26 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled];
  if (v26 == 2)
  {
    v17 = v16 >= 2;
    v27 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    v28 = v5;
    if (v17)
      v9 = v117;
  }
  else
  {
    v9 = v26 & 1;
    v27 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    v28 = v5;
  }
  objc_msgSend(v24, "setScrollEnabled:", v9 & 1);
  objc_msgSend(v25, v27[496]);
  v29 = *(void **)&v25[v28];
  if (!v29)
    goto LABEL_94;
  objc_msgSend(v29, "setShowsVerticalScrollIndicator:", v20);
  v30 = (void *)objc_opt_self(DOCThumbnailGenerator);
  v31 = objc_msgSend(v30, "sharedGenerator");
  v98 = objc_msgSend(v31, "startBatching");

  objc_msgSend(v25, v27[496]);
  v32 = *(void **)&v25[v28];
  if (!v32)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v33 = objc_msgSend(v32, "preparedCells");
  if (!v33)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  v34 = v33;
  v100 = v25;
  v35 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

  v37 = v36;
  v101 = v36;
  v97 = v3;
  v96 = v30;
  if ((unint64_t)v36 >> 62)
  {
    if (v36 < 0)
      v62 = v36;
    else
      v62 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v63 = v62;
    v37 = v36;
    v38 = _CocoaArrayWrapper.endIndex.getter(v63);
    swift_bridgeObjectRelease(v36);
    if (v38)
      goto LABEL_30;
  }
  else
  {
    v38 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v38)
    {
LABEL_30:
      if (v38 >= 1)
      {
        v39 = 0;
        v94 = 0;
        v102 = v37 & 0xC000000000000001;
        while (1)
        {
          if (v102)
            v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v37);
          else
            v40 = *(id *)(v37 + 8 * v39 + 32);
          v41 = v40;
          v42 = type metadata accessor for DOCItemCollectionCell();
          v43 = (_QWORD *)swift_dynamicCastClass(v41, v42);
          if (!v43)
          {

            goto LABEL_33;
          }
          v44 = *(uint64_t (**)(void))((swift_isaMask & *v43) + 0x1F8);
          v45 = v44();
          if (v45)
          {
            v46 = (void *)v45;
            sub_10006B5D4((uint64_t)v118);
            v111[9] = v118[9];
            v111[10] = v118[10];
            v112 = v119;
            v111[4] = v118[4];
            v111[5] = v118[5];
            v111[6] = v118[6];
            v111[7] = v118[7];
            v111[8] = v118[8];
            v111[0] = v118[0];
            v111[1] = v118[1];
            v111[2] = v118[2];
            v111[3] = v118[3];
            DOCSplitBrowserViewController.didCommitPreview(of:)(v111);
            v47 = (uint64_t)v46 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
            sub_100070EDC((uint64_t)v46 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v123, (uint64_t *)&unk_100641300);
            sub_100070EDC(v47, (uint64_t)v105, (uint64_t *)&unk_100641300);
            sub_100070EDC((uint64_t)v111, v47, (uint64_t *)&unk_100641300);
            sub_1000716DC(v123, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
            sub_100070B28((uint64_t)v118);
            sub_1000716DC(v105, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
            sub_100070B64(v123);
            sub_10002A0C4((uint64_t)v118);
            sub_1000716DC(v123, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);

          }
          v48 = v44();
          if (!v48)
          {

            v37 = v101;
            goto LABEL_33;
          }
          v49 = (char *)v48;
          sub_10006B424((uint64_t)v120);
          v107[4] = v120[4];
          v107[5] = v120[5];
          v107[6] = v120[6];
          v107[7] = v120[7];
          v107[0] = v120[0];
          v107[1] = v120[1];
          v107[2] = v120[2];
          v107[3] = v120[3];
          DOCSplitBrowserViewController.didCommitPreview(of:)(v107);
          v50 = (uint64_t)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
          sub_100070EDC((uint64_t)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits], (uint64_t)v108, &qword_100658670);
          sub_100070EDC(v50, (uint64_t)v109, &qword_100658670);
          sub_100070EDC((uint64_t)v107, v50, &qword_100658670);
          sub_1000717C0(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
          sub_100027B74((uint64_t)v120);
          sub_1000717C0(v109, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
          sub_100070EDC(v50, (uint64_t)v110, &qword_100658670);
          sub_100070EDC((uint64_t)v110, (uint64_t)v111, &qword_100658670);
          if (sub_1000A849C((uint64_t *)v111) == 1)
          {
            sub_100070EDC((uint64_t)v108, (uint64_t)v105, &qword_100658670);
            if (sub_1000A849C(v105) == 1)
              goto LABEL_54;
          }
          else
          {
            sub_100070EDC((uint64_t)v108, (uint64_t)v105, &qword_100658670);
            if (sub_1000A849C(v105) != 1)
            {
              sub_100070EDC((uint64_t)v108, (uint64_t)v103, &qword_100658670);
              v122[4] = v103[4];
              v122[5] = v103[5];
              v122[6] = v103[6];
              v122[7] = v103[7];
              v122[0] = v103[0];
              v122[1] = v103[1];
              v122[2] = v103[2];
              v122[3] = v103[3];
              sub_100070EDC((uint64_t)v110, (uint64_t)v104, &qword_100658670);
              v121[4] = v104[4];
              v121[5] = v104[5];
              v121[6] = v104[6];
              v121[7] = v104[7];
              v121[0] = v104[0];
              v121[1] = v104[1];
              v121[2] = v104[2];
              v121[3] = v104[3];
              sub_1000717C0(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
              sub_1000717C0(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
              v60 = sub_10007C194((uint64_t)v121, (uint64_t)v122);
              sub_1000717C0(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
              sub_1000717C0(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
              if (v60)
                goto LABEL_54;
              goto LABEL_47;
            }
          }
          sub_100070EDC((uint64_t)v110, (uint64_t)v105, &qword_100658670);
          sub_100070EDC((uint64_t)v108, (uint64_t)&v106, &qword_100658670);
          sub_1000717C0(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
          sub_1000717C0(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
          sub_1001D07F0((uint64_t)v105);
LABEL_47:
          sub_100070EDC(v50, (uint64_t)v104, &qword_100658670);
          sub_100070EDC((uint64_t)v104, (uint64_t)v105, &qword_100658670);
          if (sub_1000A849C(v105) == 1)
            goto LABEL_54;
          v51 = *(void **)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
          *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

          v52 = &v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle];
          v53 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8];
          *(_QWORD *)v52 = 0;
          *((_QWORD *)v52 + 1) = 0;
          swift_bridgeObjectRelease(v53);
          v54 = &v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle];
          v55 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle
                              + 8];
          *(_QWORD *)v54 = 0;
          *((_QWORD *)v54 + 1) = 0;
          swift_bridgeObjectRelease(v55);
          v56 = &v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle];
          v57 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle
                              + 8];
          *(_QWORD *)v56 = 0;
          *((_QWORD *)v56 + 1) = 0;
          swift_bridgeObjectRelease(v57);
          v58 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
          v59 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
          v37 = v101;
          if ((v59 & 0x200) == 0)
          {
            v59 |= 0x200uLL;
            *(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v59;
          }
          if (!*(_QWORD *)&v49[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount])
          {
            if (!sub_10007BAFC())
            {
              *(_QWORD *)&v49[v58] = 0;
              v61 = objc_autoreleasePoolPush();
              sub_10006D2D4(v59, (uint64_t)v49);
              objc_autoreleasePoolPop(v61);
            }
LABEL_54:
            sub_10003BDA0((uint64_t)v120);
            sub_1000717C0(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);

            v37 = v101;
            goto LABEL_33;
          }
          sub_10003BDA0((uint64_t)v120);
          sub_1000717C0(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);

LABEL_33:
          if (v38 == ++v39)
            goto LABEL_61;
        }
      }
      __break(1u);
      goto LABEL_89;
    }
  }
LABEL_61:
  swift_bridgeObjectRelease(v37);
  v64 = (uint64_t)sub_100033CA4();
  v65 = v64;
  if ((unint64_t)v64 >> 62)
  {
    if (v64 >= 0)
      v64 &= 0xFFFFFFFFFFFFFF8uLL;
    v66 = _CocoaArrayWrapper.endIndex.getter(v64);
    if (v66)
      goto LABEL_63;
  }
  else
  {
    v66 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v66)
    {
LABEL_63:
      if (v66 < 1)
      {
LABEL_89:
        __break(1u);
        goto LABEL_90;
      }
      v67 = 0;
      do
      {
        if ((v65 & 0xC000000000000001) != 0)
          v68 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v67, v65);
        else
          v68 = (char *)*(id *)(v65 + 8 * v67 + 32);
        v69 = v68;
        ++v67;
        v70 = *(_QWORD *)&v68[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits];
        *(_QWORD *)&v68[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = v2;
        swift_retain_n(v2, 2);
        swift_release(v70);
        sub_100426320();

        swift_release(v2);
      }
      while (v66 != v67);
    }
  }
  if (objc_msgSend(v100, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkippedWork", swift_bridgeObjectRelease(v65).n128_f64[0]))
  {
    v100[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_updateSnapshot] = 1;
    objc_msgSend(v100, "loadViewIfNeeded");
    v71 = *(void **)&v100[v99];
    v72 = v97;
    v4 = v4;
    v73 = &selRef_viewOptionsRoot;
    if (!v71)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    v74 = objc_msgSend(v71, "collectionViewLayout");
    objc_msgSend(v74, "invalidateLayout");

  }
  else
  {
    v75 = *(_QWORD *)&v100[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    v76 = swift_bridgeObjectRetain(v75);
    sub_100039F10(v76, 2);
    swift_bridgeObjectRelease(v75);
    v72 = v97;
    v4 = v4;
    v73 = &selRef_viewOptionsRoot;
  }
  if ((v100[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(_QWORD *)&v100[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || v100[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] == 1))
  {
    objc_msgSend(v100, "loadViewIfNeeded", v94);
    v77 = *(void **)&v100[v99];
    if (!v77)
    {
LABEL_99:
      __break(1u);
      return;
    }
    v78 = objc_msgSend(v77, "panGestureRecognizer");
    objc_msgSend(v78, "setEnabled:", v95);

    sub_1001847F4();
  }
  v80 = sub_1001793C8((uint64_t)v105);
  if (*v79 != 2)
  {
    v81 = v79;
    v82 = objc_msgSend(v100, "view");
    if (!v82)
    {
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    v83 = v82;
    objc_msgSend(v82, "bounds");
    v85 = v84;
    v87 = v86;

    *((_QWORD *)v81 + 1) = v85;
    *((_QWORD *)v81 + 2) = v87;
  }
  ((void (*)(uint64_t *, _QWORD))v80)(v105, 0);
  v89 = sub_1001793C8((uint64_t)v105);
  if (*v88 != 2)
  {
    v90 = v88;
    v91 = sub_10001F69C();
    v92 = objc_msgSend(v91, "horizontalSizeClass");

    *((_QWORD *)v90 + 3) = v92;
  }
  ((void (*)(uint64_t *, _QWORD))v89)(v105, 0);
  v93 = objc_msgSend(v96, "sharedGenerator");
  objc_msgSend(v93, "endBatching:", v98);

  sub_1001D0668((uint64_t)v115);
  objc_msgSend(v72, v73[194], v4);
  swift_release(v2);
}

_QWORD *sub_100056180()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, "childViewControllers");
  v2 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v3);
    return _swiftEmptyArrayStorage;
  }
  if (v3 < 0)
    v15 = v3;
  else
    v15 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v15);
  v4 = (uint64_t)result;
  if (!result)
    goto LABEL_19;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v7 = *(id *)(v3 + 8 * i + 32);
      v8 = v7;
      v9 = type metadata accessor for DOCBrowserContainedViewController();
      v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
      {
        v11 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v14);
      }
      else
      {

      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCBrowserContainedViewController()
{
  return objc_opt_self(_TtC5Files33DOCBrowserContainedViewController);
}

void sub_100056354(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  _BYTE v22[32];
  _BYTE v23[24];

  v6 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v10);
  if (!Strong)
  {
    v14 = type metadata accessor for UIListSeparatorConfiguration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a3, a1, v14);
    return;
  }
  v12 = (char *)Strong;
  if ((sub_10006BCB4() & 1) != 0)
  {
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics
                        + 8];
  }
  else
  {
    objc_msgSend(v12, "loadViewIfNeeded");
    v15 = *(void **)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v15)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v15, "directionalLayoutMargins");
    v13 = v16;
  }
  v17 = type metadata accessor for UIListSeparatorConfiguration(0);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a3, a1, v17);
  if (!IndexPath.row.getter(v18))
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v6);
    UIListSeparatorConfiguration.topSeparatorVisibility.setter(v9);
  }
  v19 = (void (*)(_BYTE *, _QWORD))UIListSeparatorConfiguration.bottomSeparatorInsets.modify(v22);
  *(_QWORD *)(v20 + 24) = v13;
  v19(v22, 0);

}

void sub_1000564F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v24;
  uint64_t v25;

  v6 = 0;
  v25 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v10)
      goto LABEL_24;
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v6;
    if (!v19)
    {
      v6 = v18 + 1;
      if (v18 + 1 >= v10)
        goto LABEL_24;
      v19 = *(_QWORD *)(v25 + 8 * v6);
      if (!v19)
      {
        v6 = v18 + 2;
        if (v18 + 2 >= v10)
          goto LABEL_24;
        v19 = *(_QWORD *)(v25 + 8 * v6);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v9 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain(v15);
    v16 = String.count.getter(v14, v15);
    v17 = *(_QWORD *)(a4 + 24);
    swift_bridgeObjectRelease(v15);
    if (v16 != v17)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1000566CC(a1, a2, v24, a3);
        return;
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v10)
    goto LABEL_24;
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v6 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v6 >= v10)
      goto LABEL_24;
    v19 = *(_QWORD *)(v25 + 8 * v6);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

Swift::Int sub_1000566CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10006922C(&qword_1006533F0);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(v8[6] + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

__int128 *_s14OutlineSectionVwCP(__int128 *a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  return a1;
}

char *sub_100056990(void *a1, void *a2, char a3, char a4)
{
  void *v4;
  id v5;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  char *v40;
  _UNKNOWN **v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t Strong;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  id v80;
  unsigned __int8 v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  unsigned int v109;
  id v110;
  id v111;
  unsigned __int8 v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  unsigned __int8 v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  double v135;
  uint64_t v136;
  id v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  unsigned __int8 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t i;
  unsigned __int8 *v154;
  void *v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v174;
  char v175;
  double v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  uint64_t v182;
  id v183;
  void *v184;
  id v185;
  char *v186;
  uint64_t v187;
  char *v188;
  id v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  char *v197;
  id v198;
  id v199;
  id v200;
  char *v201;
  id v203;
  char *v204;
  id v205;
  char *v206;
  id v207;
  id v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  id v212;

  v5 = v4;
  v10 = objc_msgSend(a1, "sourceIdentifier");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierEmptyLocation);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v16 = v11 == v14 && v13 == v15;
  v203 = v5;
  v205 = a1;
  if (v16)
  {
    swift_bridgeObjectRelease_n(v13, 2);
    goto LABEL_15;
  }
  v17 = v15;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) != 0)
  {
LABEL_15:

    v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(v33);
    v35 = static os_log_type_t.default.getter(v34);
    os_log(_:dso:log:type:_:)("Will provide an instance of DOCEmptyDataSource.", 47, 2, &_mh_execute_header, v34, v35, _swiftEmptyArrayStorage);

    v36 = objc_msgSend(v5, "configuration");
    v37 = objc_msgSend(v5, "documentManager");
    v38 = objc_msgSend(v5, "actionManager");
    v39 = type metadata accessor for DOCEmptyDataSource();
    v40 = (char *)swift_allocObject(v39, 40, 7);
    *((_QWORD *)v40 + 2) = v36;
    *((_QWORD *)v40 + 3) = v37;
    *((_QWORD *)v40 + 4) = v38;
    v41 = &off_1005C2DC0;
    goto LABEL_16;
  }
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierPlaceholderLocation);
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  if (v19 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n(v21, 2);
    goto LABEL_32;
  }
  v25 = v23;
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) != 0)
  {
LABEL_32:

    v62 = objc_msgSend(v5, "configuration");
    v63 = objc_msgSend(v5, "documentManager");
    v64 = objc_msgSend(v5, "actionManager");
    v65 = type metadata accessor for DOCPlaceholderDataSource();
    v40 = (char *)swift_allocObject(v65, 24, 7);
    *(_QWORD *)((char *)objc_allocWithZone((Class)type metadata accessor for DOCPlaceHolderViewController())
              + OBJC_IVAR____TtC5FilesP33_A5A64235B1E100244B7B9EBD6441597E28DOCPlaceHolderViewController_location) = a1;
    v66 = a1;
    *((_QWORD *)v40 + 2) = sub_10004F040(v62, v63, v64);
    v41 = &off_1005F1818;
    goto LABEL_16;
  }
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
  v29 = v28;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    swift_bridgeObjectRelease_n(v29, 2);
    goto LABEL_34;
  }
  v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v32);
  if ((v67 & 1) != 0)
  {
LABEL_34:

    if (a2)
    {
      v68 = type metadata accessor for DOCFileProviderSource();
      v69 = swift_dynamicCastClass(a2, v68);
      if (v69)
      {
        v70 = (char *)v69;
        v71 = a2;
        v72 = objc_msgSend(v5, "configuration");
        v73 = objc_msgSend(v72, "copy");
        _bridgeAnyObjectToAny(_:)(&v209, v73);
        swift_unknownObjectRelease(v73);
        v74 = sub_10004F2F0(0, (unint64_t *)&qword_100649C20, DOCConfiguration_ptr);
        swift_dynamicCast(&v212, &v209, (char *)&type metadata for Any + 8, v74, 7);
        v75 = v212;

        v207 = v70;
        v76 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
        if (*(_QWORD *)(v76 + 16))
        {
          swift_bridgeObjectRetain_n(v76, 2);
          __asm { BR              X9 }
        }
        objc_msgSend(v75, "setPreferLastUsedDate:", 0);
        v77 = objc_msgSend(v5, "itemCollectionViewPool");
        v78 = objc_msgSend(v5, "documentManager");
        v79 = objc_msgSend(v5, "actionManager");
        v80 = objc_msgSend(v5, "effectiveAppearance");
        if ((a3 & 1) != 0)
        {
          v81 = 1;
LABEL_41:
          v82 = objc_msgSend(v5, "hierarchyController");
          v83 = type metadata accessor for DOCItemCollectionContainerDataSource();
          v84 = swift_allocObject(v83, 120, 7);
          *(_QWORD *)(v84 + 104) = 0;
          *(_QWORD *)(v84 + 112) = 0;
          *(_QWORD *)(v84 + 16) = v75;
          *(_QWORD *)(v84 + 24) = v77;
          v40 = (char *)v84;
          *(_QWORD *)(v84 + 32) = v78;
          *(_QWORD *)(v84 + 40) = v205;
          *(_QWORD *)(v84 + 48) = v207;
          *(_QWORD *)(v84 + 56) = v79;
          *(_QWORD *)(v84 + 64) = v80;
          v85 = v205;
          *(_BYTE *)(v84 + 72) = v81;
          *(_QWORD *)(v84 + 80) = v82;
          *(_QWORD *)(v84 + 88) = &off_1005CF000;
          *(_WORD *)(v84 + 96) = 0;
LABEL_42:
          v86 = v85;
          v41 = &off_1005F23B0;
          goto LABEL_16;
        }
LABEL_40:
        v81 = objc_msgSend(v5, "isActivated");
        goto LABEL_41;
      }
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x800000010052EB80, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 911, 0);
    while (1)
    {
LABEL_128:
      __break(1u);
LABEL_129:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x800000010052EB80, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 924, 0);
    }
  }
  v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
  v89 = v88;
  v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v92 = v90;
  if (v87 == v91 && v89 == v90)
  {

    swift_bridgeObjectRelease_n(v89, 2);
LABEL_47:
    if (!a2)
      goto LABEL_129;
    v94 = type metadata accessor for DOCFileProviderSource();
    v95 = swift_dynamicCastClass(a2, v94);
    if (!v95)
      goto LABEL_129;
    v96 = (char *)v95;
    v97 = a2;
    v98 = objc_msgSend(v5, "configuration");
    v99 = objc_msgSend(v98, "copy");
    _bridgeAnyObjectToAny(_:)(&v209, v99);
    swift_unknownObjectRelease(v99);
    v100 = sub_10004F2F0(0, (unint64_t *)&qword_100649C20, DOCConfiguration_ptr);
    swift_dynamicCast(&v212, &v209, (char *)&type metadata for Any + 8, v100, 7);
    v75 = v212;

    v207 = v96;
    v101 = *(_QWORD *)&v96[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
    if (*(_QWORD *)(v101 + 16))
    {
      swift_bridgeObjectRetain_n(v101, 2);
      __asm { BR              X9 }
    }
    objc_msgSend(v75, "setPreferLastUsedDate:", 0);
    v77 = objc_msgSend(v5, "itemCollectionViewPool");
    v78 = objc_msgSend(v5, "documentManager");
    v79 = objc_msgSend(v5, "actionManager");
    v80 = objc_msgSend(v5, "effectiveAppearance");
    if ((a3 & 1) != 0)
    {
      v81 = 1;
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v89, v91, v90, 0);

  swift_bridgeObjectRelease(v89);
  swift_bridgeObjectRelease(v92);
  if ((v93 & 1) != 0)
    goto LABEL_47;
  if (!a2
    || (v102 = type metadata accessor for DOCFileProviderSource(), (v103 = swift_dynamicCastClass(a2, v102)) == 0))
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x800000010052EB80, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 937, 0);
    goto LABEL_128;
  }
  v104 = (char *)v103;
  v105 = a2;
  v106 = objc_msgSend(a1, "node");
  swift_unknownObjectRelease(v106);
  if (!v106)
    goto LABEL_62;
  v107 = objc_msgSend(a1, "node");
  if (v107)
  {
    v108 = v107;
    v109 = objc_msgSend(v107, "isFolder");
    swift_unknownObjectRelease(v108);
    if (v109)
    {
      v110 = objc_msgSend(a1, "node");
      if (!v110
        || (v111 = v110,
            v112 = objc_msgSend(v110, "doc_isCollaborationInvitation"),
            swift_unknownObjectRelease(v111),
            (v112 & 1) == 0))
      {
LABEL_62:
        v118 = objc_msgSend(v5, "configuration");
        v119 = v118;
        v120 = *(_QWORD *)&v104[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
        v208 = v104;
        if (*(_QWORD *)(v120 + 16))
        {
          swift_bridgeObjectRetain_n(v120, 2);
          __asm { BR              X9 }
        }
        objc_msgSend(v118, "setPreferLastUsedDate:", 0);

        v121 = objc_msgSend(v5, "configuration");
        v122 = objc_msgSend(v5, "itemCollectionViewPool");
        v123 = objc_msgSend(v5, "documentManager");
        v124 = objc_msgSend(v5, "actionManager");
        v125 = objc_msgSend(v5, "effectiveAppearance");
        if ((a3 & 1) != 0)
          v126 = 1;
        else
          v126 = objc_msgSend(v5, "isActivated");
        v127 = objc_msgSend(v5, "hierarchyController");
        v128 = type metadata accessor for DOCItemCollectionContainerDataSource();
        v129 = swift_allocObject(v128, 120, 7);
        *(_QWORD *)(v129 + 104) = 0;
        *(_QWORD *)(v129 + 112) = 0;
        *(_QWORD *)(v129 + 16) = v121;
        *(_QWORD *)(v129 + 24) = v122;
        v40 = (char *)v129;
        *(_QWORD *)(v129 + 32) = v123;
        *(_QWORD *)(v129 + 40) = v205;
        *(_QWORD *)(v129 + 48) = v208;
        *(_QWORD *)(v129 + 56) = v124;
        v85 = v205;
        *(_QWORD *)(v129 + 64) = v125;
        *(_BYTE *)(v129 + 72) = v126;
        *(_QWORD *)(v129 + 80) = v127;
        *(_QWORD *)(v129 + 88) = &off_1005CF000;
        *(_BYTE *)(v129 + 96) = a4 & 1;
        *(_BYTE *)(v129 + 97) = 0;
        goto LABEL_42;
      }
    }
  }
  v113 = objc_msgSend(v5, "configuration");
  v114 = objc_msgSend(v5, "documentManager");
  v115 = a1;
  v116 = objc_msgSend(v5, "actionManager");
  v117 = type metadata accessor for DOCItemInfoContainerDataSource();
  swift_allocObject(v117, 64, 7);
  v40 = (char *)sub_100476EB0((uint64_t)v113, (uint64_t)v114, v115, (uint64_t)v116);

  v41 = &off_1005EEA10;
LABEL_16:
  objc_allocWithZone((Class)type metadata accessor for DOCBrowserContainerController());
  v42 = swift_unknownObjectRetain(v40);
  v204 = v40;
  v206 = sub_1002C44B0(v42, (uint64_t)v41);
  v43 = &v206[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_actionReporting];
  Strong = swift_unknownObjectWeakLoadStrong(&v206[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_actionReporting], v44);
  v46 = swift_unknownObjectWeakAssign(v43, v5);
  v48 = swift_unknownObjectWeakLoadStrong(v46, v47);
  if (v48)
  {
    v50 = v48;
    v51 = v5;
    swift_unknownObjectRelease(v50);
    if (Strong && v50 == Strong)
    {
      swift_unknownObjectRelease(Strong);

      goto LABEL_72;
    }
  }
  else
  {
    if (!Strong)
      goto LABEL_72;
    v52 = v5;
  }
  v53 = (uint64_t)v206;
  v54 = (uint64_t)sub_100056180();
  v55 = v54;
  if ((unint64_t)v54 >> 62)
  {
    if (v54 >= 0)
      v54 &= 0xFFFFFFFFFFFFFF8uLL;
    v56 = _CocoaArrayWrapper.endIndex.getter(v54);
    if (v56)
      goto LABEL_24;
  }
  else
  {
    v56 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v56)
    {
LABEL_24:
      if (v56 < 1)
      {
        __break(1u);
        goto LABEL_125;
      }
      v57 = 0;
      v40 = (char *)(v55 & 0xC000000000000001);
      do
      {
        if (v40)
          v58 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v55);
        else
          v58 = *(id *)(v55 + 8 * v57 + 32);
        v60 = v58;
        ++v57;
        v61 = swift_unknownObjectWeakLoadStrong(v43, v59);
        (*(void (**)(uint64_t))((swift_isaMask & *v60) + 0x110))(v61);

      }
      while (v56 != v57);
    }
  }
  swift_unknownObjectRelease(Strong);

  swift_bridgeObjectRelease(v55);
LABEL_72:
  v130 = &v206[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate];
  v131 = swift_unknownObjectWeakLoadStrong(&v206[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate], v49);
  *((_QWORD *)v130 + 1) = &off_1005C9778;
  v132 = swift_unknownObjectWeakAssign(v130, v5);
  v134 = swift_unknownObjectWeakLoadStrong(v132, v133);
  if (v134)
  {
    v136 = v134;
    v137 = v5;
    swift_unknownObjectRelease(v136);
    if (v131 && v136 == v131)
    {
      swift_unknownObjectRelease(v131);

      goto LABEL_92;
    }
  }
  else
  {
    if (!v131)
      goto LABEL_92;
    v138 = v5;
  }
  v139 = (uint64_t)sub_100056180();
  v53 = v139;
  if ((unint64_t)v139 >> 62)
  {
    if (v139 >= 0)
      v139 &= 0xFFFFFFFFFFFFFF8uLL;
    v140 = _CocoaArrayWrapper.endIndex.getter(v139);
    if (v140)
    {
LABEL_80:
      if (v140 >= 1)
      {
        v141 = v5;
        v142 = 0;
        do
        {
          if ((v53 & 0xC000000000000001) != 0)
            v143 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v142, v53);
          else
            v143 = (char *)*(id *)(v53 + 8 * v142 + 32);
          v145 = v143;
          ++v142;
          v146 = swift_unknownObjectWeakLoadStrong(v130, v144);
          v147 = &v145[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate];
          *((_QWORD *)v147 + 1) = *((_QWORD *)v130 + 1);
          swift_unknownObjectWeakAssign(v147, v146);

          swift_unknownObjectRelease(v146);
        }
        while (v140 != v142);
        swift_unknownObjectRelease(v131);
        v5 = v141;
        goto LABEL_91;
      }
LABEL_125:
      __break(1u);
LABEL_126:
      swift_once(&qword_100641180, sub_10009EEE4);
LABEL_116:
      if ((byte_1006565B0 & 1) == 0)
      {
        v194 = swift_unknownObjectWeakLoadStrong(v53, v193);
        swift_unknownObjectRelease(v194);
        if (v194)
        {
          v195 = objc_msgSend(v40, "presentingViewController");

          if (!v195)
            sub_100012D88(1, v196);
        }
      }

      v197 = &v40[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
      *((_QWORD *)v197 + 1) = &off_1005C97D8;
      swift_unknownObjectWeakAssign(v197, v5);
      v198 = objc_msgSend(v206, "navigationItem");
      objc_msgSend(v198, "setSearchController:", v40);

      v199 = objc_msgSend(v206, "navigationItem");
      objc_msgSend(v199, "setHidesSearchBarWhenScrolling:", 0);

      v200 = objc_msgSend(v206, "navigationItem");
      objc_msgSend(v200, "_setPreserveSearchBarAcrossTransitions:", 1);

      v201 = v206;
      objc_msgSend(v201, "setDefinesPresentationContext:", 1);

      goto LABEL_122;
    }
  }
  else
  {
    v140 = *(_QWORD *)((v139 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v140)
      goto LABEL_80;
  }
  swift_unknownObjectRelease(v131);
LABEL_91:

  *(_QWORD *)&v135 = swift_bridgeObjectRelease(v53).n128_u64[0];
LABEL_92:
  v148 = objc_msgSend(v5, "allowsPickingMultipleItems", v135);
  v149 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems;
  v206[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems] = v148;
  v150 = (uint64_t)sub_100056180();
  v151 = v150;
  if (!((unint64_t)v150 >> 62))
  {
    v152 = *(_QWORD *)((v150 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v152)
      goto LABEL_110;
    goto LABEL_94;
  }
  if (v150 >= 0)
    v150 &= 0xFFFFFFFFFFFFFF8uLL;
  v152 = _CocoaArrayWrapper.endIndex.getter(v150);
  if (v152)
  {
LABEL_94:
    if (v152 < 1)
    {
      __break(1u);
      JUMPOUT(0x100057EB4);
    }
    for (i = 0; i != v152; ++i)
    {
      if ((v151 & 0xC000000000000001) != 0)
        v154 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v151);
      else
        v154 = (unsigned __int8 *)*(id *)(v151 + 8 * i + 32);
      v155 = v154;
      v154[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = v206[v149];
      v156 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
      v157 = v154[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
      if (v157 != 2)
      {
        v158 = sub_10002DA34();
        v159 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v158 + 152))(v158);
        swift_release(v158);
        if ((v159 & 1) == 0 && (objc_msgSend(v155, "doc_hasAppearedOrIsAppearing") & 1) != 0)
        {
          v212 = v155;
          v160 = type metadata accessor for DOCBrowserContainedViewController();
          v161 = v155;
          v162 = sub_10006922C(&qword_10064D510);
          if (swift_dynamicCast(&v209, &v212, v160, v162, 6))
          {
            v163 = v157 & 1;
            v165 = *((_QWORD *)&v210 + 1);
            v164 = v211;
            sub_10007E7A0(&v209, *((uint64_t *)&v210 + 1));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 8))(v163, v165, v164);
            sub_100068588(&v209);
          }
          else
          {
            v211 = 0;
            v209 = 0u;
            v210 = 0u;
            sub_1001F7F28((uint64_t)&v209);
          }
          *((_BYTE *)v155 + v156) = 2;
        }
      }

    }
  }
LABEL_110:
  v166 = objc_msgSend(v205, "sourceIdentifier", swift_bridgeObjectRelease(v151).n128_f64[0]);
  v167 = DOCDocumentSourceIdentifierPlaceholderLocation;
  v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v166);
  v170 = v169;
  v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
  if (v168 == v171 && v170 == v172)
  {

    swift_bridgeObjectRelease_n(v170, 2);
    goto LABEL_122;
  }
  v174 = v172;
  v175 = _stringCompareWithSmolCheck(_:_:expecting:)(v168, v170, v171, v172, 0);

  swift_bridgeObjectRelease(v170);
  *(_QWORD *)&v176 = swift_bridgeObjectRelease(v174).n128_u64[0];
  if ((v175 & 1) == 0)
  {
    v177 = objc_msgSend(v203, "configuration", v176);
    v178 = objc_msgSend(v203, "itemCollectionViewPool");
    v179 = objc_msgSend(v203, "documentManager");
    v180 = objc_msgSend(v203, "actionManager");
    v181 = objc_msgSend(v177, "copy");
    _bridgeAnyObjectToAny(_:)(&v209, v181);
    swift_unknownObjectRelease(v181);
    v182 = sub_10004F2F0(0, (unint64_t *)&qword_100649C20, DOCConfiguration_ptr);
    swift_dynamicCast(&v212, &v209, (char *)&type metadata for Any + 8, v182, 7);
    v183 = v212;
    objc_msgSend(v212, "setPresentingMakesCollectionFirstResponder:", 0);
    v184 = (void *)sub_100028490(v205, v183, v178, v179, v180);
    v185 = objc_allocWithZone((Class)type metadata accessor for DOCSearchController());
    v186 = (char *)sub_10045DF98(v183, v184);

    v187 = OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController;
    v188 = *(char **)&v186[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
    swift_unknownObjectWeakAssign(&v188[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], v203);
    v189 = v203;
    v40 = v186;
    v190 = v188;
    sub_10002C4B8();

    v191 = *(_QWORD *)&v186[v187] + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
    *(_QWORD *)(v191 + 8) = &off_1005C9778;
    swift_unknownObjectWeakAssign(v191, v189);
    v53 = (uint64_t)&v40[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate];
    swift_unknownObjectWeakAssign(&v40[OBJC_IVAR____TtC5Files19DOCSearchController_presentationDelegate], v189);
    v192 = qword_100641180;
    v5 = v189;
    if (v192 == -1)
      goto LABEL_116;
    goto LABEL_126;
  }
LABEL_122:
  swift_unknownObjectRelease(v204);
  return v206;
}

uint64_t sub_100057F7C()
{
  _BYTE *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  int64_t v23;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  Class v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  char *v74;
  char *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  int v80;
  uint64_t v81;
  void *v82;
  _BYTE *v83;
  uint64_t v84;

  v3 = (uint64_t)v0;
  v84 = (uint64_t)_swiftEmptyArrayStorage;
  v4 = (void *)objc_opt_self(DOCFeature);
  if ((objc_msgSend(v4, "_UIPTabInfrastructureEnabled") & 1) == 0)
    sub_1002CCDF8(&v84, v0);
  if ((objc_msgSend(v0, "isEditing") & 1) == 0)
    goto LABEL_27;
LABEL_4:
  v5 = _swiftEmptyArrayStorage;
  v6 = _swiftEmptyArrayStorage;
LABEL_5:
  sub_1000887E8((uint64_t)v5);
  v7 = v84;
  v82 = v4;
  v83 = (_BYTE *)v3;
  v81 = (uint64_t)v6;
  if ((unint64_t)v84 >> 62)
    goto LABEL_65;
  v5 = *(_QWORD **)((v84 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v84);
  if (v5)
  {
LABEL_7:
    v1 = 0;
    v4 = (void *)(v7 + 32);
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v7);
      else
        v9 = *((id *)v4 + v1);
      v2 = (unint64_t)v9;
      if (objc_msgSend(v9, "systemItem") == (id)1)
      {
        v10 = v84;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v84)
          || v10 < 0
          || (v10 & 0x4000000000000000) != 0)
        {
          v10 = sub_1000818A0(v10);
          v84 = v10;
        }
        v11 = v10 & 0xFFFFFFFFFFFFFF8;
        v12 = *(_QWORD *)(v11 + 16);
        if (v1 >= v12)
        {
          __break(1u);
LABEL_65:
          if (v7 < 0)
            v23 = v7;
          else
            v23 = v7 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v7);
          v43 = _CocoaArrayWrapper.endIndex.getter(v23);
          if (v43 < 0)
          {
            __break(1u);
LABEL_70:
            if (v23 < 0)
              v44 = v23;
            else
              v44 = v23 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(v23, 2);
            v7 = _CocoaArrayWrapper.endIndex.getter(v44);
            swift_bridgeObjectRelease(v23);
            if (v7 >= 2)
              v7 = 2;
            if (v7 < 0)
            {
              __break(1u);
            }
            else
            {
              swift_bridgeObjectRetain(v23);
              if ((_CocoaArrayWrapper.endIndex.getter(v44) & 0x8000000000000000) == 0)
              {
                swift_bridgeObjectRetain(v23);
                v6 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v44);
                v35 = swift_bridgeObjectRelease(v23);
                if ((uint64_t)v6 < v7)
                {
                  __break(1u);
LABEL_79:
                  __break(1u);
                  goto LABEL_80;
                }
LABEL_37:
                if ((v23 & 0xC000000000000001) != 0 && v7 != 0)
                {
                  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
                  v25 = 0;
                  do
                  {
                    v26 = v25 + 1;
                    _ArrayBuffer._typeCheckSlowPath(_:)(v25);
                    v25 = v26;
                  }
                  while (v7 != v26);
                }
                if (!v5)
                {
                  v6 = 0;
                  v5 = (_QWORD *)(v23 & 0xFFFFFFFFFFFFFF8);
                  v1 = (v23 & 0xFFFFFFFFFFFFFF8) + 32;
                  v2 = (2 * v7) | 1;
                  goto LABEL_50;
                }
                if (v23 < 0)
                  v27 = v23;
                else
                  v27 = v23 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v23);
                v5 = (_QWORD *)_CocoaArrayWrapper.subscript.getter(0, v7, v27);
                v1 = v28;
                v6 = v29;
                v2 = v30;
                swift_bridgeObjectRelease_n(v23, 2);
                if ((v2 & 1) != 0)
                {
LABEL_50:
                  v31 = type metadata accessor for __ContiguousArrayStorageBase(0);
                  v32 = swift_unknownObjectRetain_n(v5, 2);
                  v33 = (_QWORD *)swift_dynamicCastClass(v32, v31);
                  if (!v33)
                  {
                    swift_unknownObjectRelease(v5);
                    v33 = _swiftEmptyArrayStorage;
                  }
                  v34 = v33[2];
                  v35 = swift_release(v33);
                  if (!__OFSUB__(v2 >> 1, v6))
                  {
                    v35 = (uint64_t)v5;
                    if (v34 == (v2 >> 1) - (_QWORD)v6)
                    {
                      v6 = (_QWORD *)swift_dynamicCastClass(v5, v31);
                      if (!v6)
                      {
                        swift_unknownObjectRelease(v5);
                        v6 = _swiftEmptyArrayStorage;
                      }
                      goto LABEL_56;
                    }
                    goto LABEL_81;
                  }
                  goto LABEL_79;
                }
                while (1)
                {
                  v6 = sub_10028F01C((uint64_t)v5, v1, (uint64_t)v6, v2);
LABEL_56:
                  swift_unknownObjectRelease(v5);
                  swift_bridgeObjectRetain(v23);
                  v7 = sub_1001EE3C4(v7, v23);
                  v5 = v36;
                  v1 = v37;
                  v2 = v38;
                  swift_bridgeObjectRelease(v23);
                  if ((v2 & 1) == 0)
                    goto LABEL_57;
                  v39 = type metadata accessor for __ContiguousArrayStorageBase(0);
                  v40 = swift_unknownObjectRetain_n(v7, 2);
                  v41 = (_QWORD *)swift_dynamicCastClass(v40, v39);
                  if (!v41)
                  {
                    swift_unknownObjectRelease(v7);
                    v41 = _swiftEmptyArrayStorage;
                  }
                  v42 = v41[2];
                  v35 = swift_release(v41);
                  if (!__OFSUB__(v2 >> 1, v1))
                    break;
LABEL_80:
                  __break(1u);
LABEL_81:
                  swift_unknownObjectRelease(v35);
                }
                if (v42 != (v2 >> 1) - v1)
                {
                  swift_unknownObjectRelease(v7);
LABEL_57:
                  v5 = sub_10028F01C(v7, (uint64_t)v5, v1, v2);
                  swift_bridgeObjectRelease(v23);
                  swift_unknownObjectRelease(v7);
                  goto LABEL_5;
                }
                v5 = (_QWORD *)swift_dynamicCastClass(v7, v39);
                swift_bridgeObjectRelease(v23);
                swift_unknownObjectRelease(v7);
                if (!v5)
                {
                  swift_unknownObjectRelease(v7);
                  v5 = _swiftEmptyArrayStorage;
                }
                goto LABEL_5;
              }
            }
            __break(1u);
LABEL_85:
            LOBYTE(v80) = 2;
            v43 = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v80, 1046, 0);
            __break(1u);
          }
          v5 = (_QWORD *)v43;
          if (v43)
            goto LABEL_7;
          break;
        }
        v13 = v12 - 1;
        v14 = v12 - 1 - v1;
        if (v14 < 0)
          goto LABEL_85;
        v15 = v11 + 8 * v1;
        v3 = *(_QWORD *)(v15 + 32);
        v16 = memmove((void *)(v15 + 32), (const void *)(v15 + 40), 8 * v14);
        *(_QWORD *)(v11 + 16) = v13;
        specialized Array._endMutation()(v16);

        v17 = v84;
        if ((unint64_t)v84 >> 62)
        {
          if (v84 < 0)
            v18 = v84;
          else
            v18 = v84 & 0xFFFFFFFFFFFFFF8;
          v19 = (id)v2;
          swift_bridgeObjectRetain(v17);
          v3 = _CocoaArrayWrapper.endIndex.getter(v18);
          swift_bridgeObjectRelease(v17);
          if (v3 < 0)
          {
            __break(1u);
LABEL_27:
            if (!objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "isPickerUI"))
            {
              v23 = *(_QWORD *)(v3
                              + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
              v5 = (_QWORD *)((unint64_t)v23 >> 62);
              if ((unint64_t)v23 >> 62)
                goto LABEL_70;
              if (*(uint64_t *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
                v7 = 2;
              else
                v7 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n(*(_QWORD *)(v3+ OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems), 2);
              goto LABEL_37;
            }
            v20 = objc_msgSend((id)v3, "splitViewController");
            if (!v20
              || (v21 = v20,
                  v22 = objc_msgSend(v20, "doc_splitViewState"),
                  v21,
                  LOBYTE(v21) = objc_msgSend(v22, "isSidebarShown"),
                  v22,
                  (v21 & 1) == 0))
            {
              if ((sub_1002CCB98() & 1) == 0)
              {
                v5 = *(_QWORD **)(v3
                                + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
                swift_bridgeObjectRetain(v5);
                v6 = _swiftEmptyArrayStorage;
                goto LABEL_5;
              }
            }
            goto LABEL_4;
          }
        }
        else
        {
          v8 = (id)v2;
        }
        sub_1004588E0(0, 0, v2);
      }
      ++v1;

    }
    while ((_QWORD *)v1 != v5);
  }
  swift_bridgeObjectRelease(v7);
  if (!sub_1002CCD54() || objc_msgSend(v83, "isEditing"))
  {
    v45 = sub_1002CD61C();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
    v47 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v46 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v47 >= v46 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
    v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v45);
    specialized Array._endMutation()(v48);
    sub_1002CC2F8(v45);

  }
  v49 = sub_100097344();
  v50 = sub_1002CD78C();
  if ((objc_msgSend(v82, "_UIPTabInfrastructureEnabled") & 1) != 0 || (v51 = sub_10009A6F8(1)) == 0)
  {
    v57 = sub_1002CD9A8();
    v56 = v57;
    if (v49 != 2)
    {
      objc_msgSend(v57, "setEnabled:", v49 & 1);
      v56 = v56;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v59 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v58 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v59 >= v58 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
      v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v56);
      specialized Array._endMutation()(v60);
    }
  }
  else
  {
    v52 = v51;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    v54 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v53 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v54 >= v53 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
    v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
    specialized Array._endMutation()(v55);

    v56 = sub_1002CD9A8();
  }

  if (sub_1002CCD54() && (objc_msgSend(v83, "isEditing") & 1) == 0)
  {
    v61 = sub_1002CDAC0();
    v62 = sub_100061A38();
    objc_msgSend(v61, "setMenu:", v62);
    sub_1000385C4();

    v63 = sub_1002CDAC0();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
    v65 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v64 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v65 >= v64 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
    v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
    specialized Array._endMutation()(v66);
  }
  if (objc_msgSend(v82, "_UIPTabInfrastructureEnabled"))
    sub_1002CCDF8(&v84, v83);
  v67 = sub_1002CDBF0();
  v68 = v67;
  if (v50 != 2)
  {
    objc_msgSend(v67, "setEnabled:", v50 & 1);
    v69 = v68;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v71 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v70 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v71 >= v70 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
    v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
    specialized Array._endMutation()(v72);
  }

  if (objc_msgSend(v82, "_UIPTabInfrastructureEnabled"))
  {
    v73 = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "fixedSpaceItemOfWidth:", 20.0);
    sub_1002CD520(&v84, v73);

  }
  if ((v83[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0)
  {
    v74 = sub_10001F428();
    if (v74)
    {
      v75 = v74;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
      v77 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v76 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v77 >= v76 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
      v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
      specialized Array._endMutation()(v78);

    }
  }
  sub_1000887E8(v81);
  return v84;
}

uint64_t sub_10005897C(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  __n128 v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  _QWORD v51[7];
  _QWORD v52[7];
  uint64_t v53[6];

  sub_100184394(a1, *(double *)&a2, *(double *)&a3, a4 & 1, a5, 0, (uint64_t)v51);
  v7 = v51[0];
  sub_100070EDC((uint64_t)v51, (uint64_t)v52, (uint64_t *)&unk_100646CD8);
  v8 = v52[0];
  if (v52[0])
  {
    v9 = *(double *)&v52[2];
    v10 = *(double *)&v52[3];
    v11 = *(double *)&v52[4];
    v12 = *(double *)&v52[5];
    v13 = *(double *)&v52[6];
    *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader) = 0;
    *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter) = 0;
    v14 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits) = v8;
    swift_retain_n(v7, 2);
    swift_release(v14);
    *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics) = 1;
    sub_100079D3C();
    sub_100197D0C();
    v15 = (char *)sub_10001B43C();
    sub_100042BD0(v15, v9, v10, v11, v12, v13);

    sub_1000554D8();
    v17 = v16;
    if ((a5 & 1) != 0 || (sub_100064B54(), (v19 & 1) != 0) || (sub_100063820(v18) & 1) != 0)
    {
      sub_100064B54();
      if ((v20 & 1) != 0)
      {
        if (*(_QWORD *)(v5 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView))
        {
          v21 = (uint64_t)sub_100033CA4();
          v44 = v17;
          if ((unint64_t)v21 >> 62)
            goto LABEL_30;
          for (i = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v43))
          {
            v47 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
            v48 = v21 & 0xC000000000000001;
            v23 = 4;
            v45 = i;
            v46 = v21;
            while (1)
            {
              v24 = v23 - 4;
              if (!v48)
                break;
              v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v23 - 4, v21);
              v26 = v23 - 3;
              if (__OFADD__(v24, 1))
                goto LABEL_27;
LABEL_15:
              v27 = (uint64_t *)&v25[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
              v28 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                                  + 8];
              if (!v28)
              {

                goto LABEL_24;
              }
              v49 = v26;
              v50 = v25;
              v29 = *v27;
              v31 = v27[2];
              v30 = v27[3];
              v32 = v27[4];
              v33 = *(_QWORD **)(v5 + v47);
              v34 = sub_1001BC0B0(*v27, v28, v33);
              if ((v35 & 1) != 0)
              {
                sub_1001BC194(v29, v28, v31, v30, v32);

                swift_release(v32);
                swift_bridgeObjectRelease(v30);
                swift_bridgeObjectRelease(v28);
                goto LABEL_24;
              }
              if ((v34 & 0x8000000000000000) != 0)
                goto LABEL_28;
              if (v34 >= v33[2])
                goto LABEL_29;
              v36 = &v33[5 * v34];
              v37 = v36[5];
              v38 = v36[6];
              v39 = v36[7];
              v40 = v36[8];
              v53[0] = v36[4];
              v53[1] = v37;
              v53[2] = v38;
              v53[3] = v39;
              v53[4] = v40;
              sub_1001BC194(v29, v28, v31, v30, v32);
              swift_bridgeObjectRetain(v37);
              swift_bridgeObjectRetain(v39);
              swift_retain();
              sub_100198014((char *)v50, v53);
              v41 = v40;
              v21 = v46;
              swift_release(v41);
              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease(v37);

              swift_release(v32);
              swift_bridgeObjectRelease(v30);
              swift_bridgeObjectRelease(v28);
              ++v23;
              if (v49 == v45)
                goto LABEL_24;
            }
            v25 = (char *)*(id *)(v21 + 8 * v23);
            v26 = v23 - 3;
            if (!__OFADD__(v24, 1))
              goto LABEL_15;
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
LABEL_30:
            if (v21 < 0)
              v43 = v21;
            else
              v43 = v21 & 0xFFFFFFFFFFFFFF8;
          }
LABEL_24:
          swift_bridgeObjectRelease(v21);
          v17 = v44;
        }
      }
    }
    sub_1001D1404(v51);
    sub_1001D1404(v51);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_100058CC0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(void **)a1;
  v4 = *(void **)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 136);
  v16 = *(_QWORD *)(a1 + 152);
  v17 = *(_QWORD *)(a1 + 144);
  v14 = *(_QWORD *)(a1 + 168);
  v15 = *(_QWORD *)(a1 + 160);
  v12 = *(_QWORD *)(a1 + 184);
  v13 = *(_QWORD *)(a1 + 176);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  swift_bridgeObjectRelease(v3);

  sub_100059B10(v5, v6, v7, v8, v9, v10);
  sub_100059B10(v17, v16, v15, v14, v13, v12);
  return a1;
}

double sub_100058D84@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  __n128 v47;
  double v48;
  __n128 v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t inited;
  uint64_t v56;
  NSString *v57;
  double *v58;
  NSString *v59;
  id v60;
  unint64_t v61;
  id v62;
  NSString v63;
  Class isa;
  const __CFAttributedString *v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  double result;
  double v74;
  uint64_t v76;
  uint64_t v77;
  double v78;
  double v79;
  uint64_t v83;
  double v84;
  _OWORD v85[4];
  _BYTE v86[112];
  _QWORD v87[6];
  _QWORD v88[6];
  _QWORD v89[4];
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[4];
  uint64_t v93;
  uint64_t v94;

  sub_100070EDC(a4, (uint64_t)v88, &qword_100655D38);
  v74 = *(double *)v88;
  v18 = *(double *)&v88[2];
  v84 = *(double *)&v88[1];
  v19 = v88[3];
  v20 = v88[5];
  v83 = v88[4];
  sub_100070EDC(a3, (uint64_t)v87, &qword_100655D38);
  v22 = *(double *)v87;
  v21 = *(double *)&v87[1];
  v24 = *(double *)&v87[2];
  v23 = v87[3];
  v26 = v87[4];
  v25 = v87[5];
  sub_100070EDC(a3, (uint64_t)v92, &qword_100655D38);
  v27 = v93;
  v28 = 0.0;
  if (v93)
  {
    v29 = v92[0];
    v30 = v92[1];
    v32 = *(double *)&v92[2];
    v31 = *(double *)&v92[3];
    v33 = v94;
    v34 = swift_retain();
    v34.n128_u64[0] = v29;
    v22 = UICeilToScale(v34, a11);
    v35.n128_u64[0] = v30;
    v78 = UICeilToScale(v35, a11);
    v24 = UIPointRoundToScale(v36, v32, v31, a11);
    v77 = v37;
    v38 = v22 + v24;
    v76 = v27;
    v25 = v33;
  }
  else
  {
    v76 = v26;
    v77 = v23;
    v78 = v21;
    v38 = 0.0;
  }
  v79 = v22;
  sub_100070EDC(a4, (uint64_t)v89, &qword_100655D38);
  v40 = v90;
  v41 = v20;
  if (v90)
  {
    v42 = v89[0];
    v43 = v89[1];
    v44 = *(double *)&v89[2];
    v45 = *(double *)&v89[3];
    v46 = v91;
    v47 = swift_retain();
    v47.n128_u64[0] = v42;
    v48 = UICeilToScale(v47, a11);
    v49.n128_u64[0] = v43;
    v84 = UICeilToScale(v49, a11);
    v51 = UIPointRoundToScale(v50, v44, v45, a11);
    v19 = v52;
    v28 = v48 + v51;
    v83 = v40;
    v41 = v46;
  }
  else
  {
    v48 = v74;
    v51 = v18;
  }
  v39.n128_f64[0] = a10;
  v53 = UICeilToScale(v39, a11);
  v54 = sub_10006922C((uint64_t *)&unk_1006424D0);
  inited = swift_initStackObject(v54, v86);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v56 = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
  *(_QWORD *)(inited + 40) = a6;
  *(_QWORD *)(inited + 64) = v56;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 104) = sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  *(_QWORD *)(inited + 80) = a7;
  swift_bridgeObjectRetain(a2);
  v57 = NSFontAttributeName;
  v58 = a6;
  v59 = NSForegroundColorAttributeName;
  v60 = a7;
  v61 = sub_100076434(inited);
  v62 = objc_allocWithZone((Class)NSAttributedString);
  v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  type metadata accessor for Key(0);
  sub_10005FB20();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v65 = (const __CFAttributedString *)objc_msgSend(v62, "initWithString:attributes:", v63, isa, swift_bridgeObjectRelease(v61).n128_f64[0]);

  v66 = sub_100052934(v65, a5, v53, v38, v28);
  v67 = sub_100051614(v66, v58, a8, v38, v28, a11);
  v69 = v68;
  sub_100030BB4(v68, a1, a2, (uint64_t)v58, (uint64_t)v85, v67);
  v70 = v85[3];
  v71 = v85[0];
  v72 = v85[1];
  *(_OWORD *)a9 = v85[2];
  *(_OWORD *)(a9 + 16) = v70;
  *(_OWORD *)(a9 + 32) = v71;
  *(_OWORD *)(a9 + 48) = v72;
  *(_QWORD *)(a9 + 64) = v65;
  *(_QWORD *)(a9 + 72) = v66;
  *(_QWORD *)(a9 + 80) = v69;
  *(double *)(a9 + 88) = v79;
  *(double *)(a9 + 96) = v78;
  *(double *)(a9 + 104) = v24;
  *(_QWORD *)(a9 + 112) = v77;
  *(_QWORD *)(a9 + 120) = v76;
  *(_QWORD *)(a9 + 128) = v25;
  result = v84;
  *(double *)(a9 + 136) = v48;
  *(double *)(a9 + 144) = v84;
  *(double *)(a9 + 152) = v51;
  *(_QWORD *)(a9 + 160) = v19;
  *(_QWORD *)(a9 + 168) = v83;
  *(_QWORD *)(a9 + 176) = v41;
  *(_QWORD *)(a9 + 184) = a8;
  return result;
}

void sub_10005914C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double v15;
  void *v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(CGContext *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  void *v37;
  id v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  Class isa;
  id v47;
  void *v48;
  _BOOL8 v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  double v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _BYTE v112[200];
  _QWORD v113[23];
  _OWORD v114[12];
  void *v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  _QWORD v128[25];
  _BYTE v129[200];
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  _BYTE v144[184];
  uint64_t v145[23];
  uint64_t v146;
  _BYTE v147[184];
  uint64_t v148[23];
  _QWORD v149[6];
  _QWORD v150[6];
  _QWORD v151[25];
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;

  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
  sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v151, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v151, (uint64_t)&v152, (uint64_t *)&unk_100641310);
  if (sub_1000A849C(&v152) != 1)
  {
    v11 = v165;
    v110 = v164;
    v111 = v163;
    v108 = v162;
    v109 = v159;
    v106 = v161;
    v107 = v160;
    v12 = v152;
    v13 = v158;
    v104 = v155;
    v105 = v157;
    v102 = v153;
    v103 = v156;
    v101 = v154;
LABEL_35:
    sub_10044930C(v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B2804);
    *(_QWORD *)a1 = v12;
    *(_OWORD *)(a1 + 8) = v102;
    *(_OWORD *)(a1 + 24) = v101;
    *(_OWORD *)(a1 + 40) = v104;
    *(_OWORD *)(a1 + 56) = v103;
    *(_OWORD *)(a1 + 72) = v105;
    *(_QWORD *)(a1 + 88) = v13;
    v92 = v107;
    *(_OWORD *)(a1 + 96) = v109;
    *(_OWORD *)(a1 + 112) = v92;
    v93 = v108;
    *(_OWORD *)(a1 + 128) = v106;
    *(_OWORD *)(a1 + 144) = v93;
    v94 = v110;
    *(_OWORD *)(a1 + 160) = v111;
    *(_OWORD *)(a1 + 176) = v94;
    *(_QWORD *)(a1 + 192) = v11;
    return;
  }
  *(_QWORD *)&v106 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (v8)
  {
    objc_msgSend(v8, "displayScale");
    v10 = v9;
  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v14, "scale");
    v10 = v15;

  }
  *(_QWORD *)&v105 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
  sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v147, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v147, (uint64_t)v148, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v148) == 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  v16 = (void *)v148[0];
  v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v146, 0, 0);
  v18 = *v17;
  v98 = v7;
  v100 = v16;
  if (v18)
  {
    v19 = *(void **)(v1 + v106);
    if (v19)
    {
      v20 = v16;
      objc_msgSend(v19, "displayScale");
      v22 = v21;
    }
    else
    {
      v37 = (void *)objc_opt_self(UIScreen);
      v38 = v16;
      v39 = objc_msgSend(v37, "mainScreen");
      objc_msgSend(v39, "scale");
      v22 = v40;

    }
    objc_msgSend(v16, "capHeight");
    v42 = v41 * 0.5;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for FloatingPointRoundingRule.down(_:), v3);
    v43 = CGFloat.init(_:roundedBy:inScale:)(v6, v42, v22);
    if (v43 < 5.0)
      v44 = 10.0;
    else
      v44 = v43 + v43;
    v45 = sub_10006F894();
    sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
    swift_bridgeObjectRetain(v45);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v45);
    v47 = objc_msgSend((id)objc_opt_self(DOCTagRenderingRequest), "requestForChainedTags:tagDimension:", isa, v44);

    if (v47)
    {
      v48 = *(void **)(v1 + v106);
      if (v48)
        v49 = objc_msgSend(v48, "layoutDirection") == (id)1;
      else
        v49 = 0;
      objc_msgSend(v47, "setLayoutDirection:", v49);
      objc_msgSend(v47, "setSpacingType:", 1);
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing) == 1)
        v50 = objc_msgSend((id)objc_opt_self(UIColor), "lightTextColor");
      else
        v50 = 0;
      objc_msgSend(v47, "setSelectionOutlineColor:", v50);

      v51 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
      objc_msgSend(v51, "sizeOfTagContentForRenderingRequest:", v47);
      v53 = v52;
      v55 = v54;

      *(_QWORD *)&v107 = swift_allocObject(&unk_1005F1A78, 24, 7);
      *(_QWORD *)(v107 + 16) = v47;
      *(_QWORD *)&v108 = v53;
      *(_QWORD *)&v111 = v55;
      v36 = sub_1004B0728;
      *(_QWORD *)&v110 = 0x4018000000000000;
    }
    else
    {
      *(_QWORD *)&v108 = 0;
      *(_QWORD *)&v111 = 0;
      *(_QWORD *)&v110 = 0;
      v36 = 0;
      *(_QWORD *)&v107 = 0;
    }
    v56 = sub_10006926C();
    sub_1000605F4(*(uint64_t *)&v44, 0, v56);
    v32 = (uint64_t)v57;
    if (v57)
    {
      objc_msgSend(v57, "size");
      v59 = v58;
      v61 = v60;
      sub_1004AE884(v100);
      v63 = v62;
      v64 = swift_allocObject(&unk_1005F18F8, 24, 7);
      swift_unknownObjectWeakInit(v64 + 16);
      v65 = swift_allocObject(&unk_1005F1A50, 32, 7);
      *(_QWORD *)(v65 + 16) = v64;
      *(_QWORD *)(v65 + 24) = v32;
      v32 = v65;
      v27 = v59;
      v28 = v61;
      v30 = v63;
      v31 = sub_1004B06FC;
      *(_QWORD *)&v109 = 0x4010000000000000;
    }
    else
    {
      v27 = 0;
      v28 = 0;
      *(_QWORD *)&v109 = 0;
      v30 = 0;
      v31 = 0;
    }
    sub_100076450();
    v96 = v66;
    v97 = v67;
    swift_bridgeObjectRetain(v67);
    v34 = v111;
    v35 = v110;
    v29 = v109;
    v6 = (char *)v107;
    v33 = v108;
LABEL_29:
    v68 = v105;
    *(_QWORD *)&v104 = v27;
    v150[0] = v27;
    *(_QWORD *)&v103 = v28;
    v150[1] = v28;
    *(_QWORD *)&v109 = v29;
    v150[2] = v29;
    *(_QWORD *)&v102 = v30;
    v150[3] = v30;
    *(_QWORD *)&v101 = v31;
    v150[4] = v31;
    v99 = v32;
    v150[5] = v32;
    *(_QWORD *)&v108 = v33;
    v149[0] = v33;
    *(_QWORD *)&v111 = v34;
    v149[1] = v34;
    *(_QWORD *)&v110 = v35;
    v149[2] = v35;
    v149[3] = 0;
    *(_QWORD *)&v105 = v36;
    v149[4] = v36;
    v149[5] = v6;
    sub_100070EDC(v68, (uint64_t)v144, (uint64_t *)&unk_100641300);
    sub_100070EDC((uint64_t)v144, (uint64_t)v145, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v145) != 1)
    {
      *(_QWORD *)&v107 = v6;
      v69 = v100;
      v100 = sub_10006CB98();
      v70 = *(void **)(v1 + v106);
      v95 = a1;
      if (v70)
        *(_QWORD *)&v106 = objc_msgSend(v70, "layoutDirection") == (id)1;
      else
        *(_QWORD *)&v106 = 0;
      v71 = *(double *)&v145[5];
      sub_100070EDC((uint64_t)v144, (uint64_t)v113, (uint64_t *)&unk_100641300);
      v72 = v113[1];
      v73 = v69;
      v74 = v104;
      v75 = v103;
      v76 = v109;
      v77 = v102;
      v78 = v101;
      v79 = v99;
      sub_100059B00(v104, v103, v109, v102, v101, v99);
      sub_100059B00(v108, v111, v110, 0, v105, v107);
      v80 = v97;
      v81 = v72;
      v82 = v73;
      v83 = v73;
      v84 = v100;
      sub_100058D84(v96, v97, (uint64_t)v149, (uint64_t)v150, v81, v83, v100, v106, (uint64_t)v114, v71, v10);

      sub_100059B10(v74, v75, v76, v77, v78, v79);
      v85 = v108;
      v86 = v111;
      v87 = v110;
      v88 = v105;
      v89 = v107;
      sub_100059B10(v108, v111, v110, 0, v105, v107);
      swift_bridgeObjectRelease(v80);
      v124 = v114[8];
      v125 = v114[9];
      v126 = v114[10];
      v127 = v114[11];
      v120 = v114[4];
      v121 = v114[5];
      v122 = v114[6];
      v123 = v114[7];
      v116 = v114[0];
      v117 = v114[1];
      v118 = v114[2];
      v119 = v114[3];
      v90 = v82;
      v115 = v82;
      DOCSplitBrowserViewController.didCommitPreview(of:)(&v115);
      v91 = v98;
      sub_100070EDC(v98, (uint64_t)v128, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)&v115, v91, (uint64_t *)&unk_100641310);
      sub_10044930C(v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
      sub_100059B10(v85, v86, v87, 0, v88, v89);
      sub_100059B10(v104, v103, v109, v102, v101, v79);
      sub_100070EDC(v91, (uint64_t)v129, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)v129, (uint64_t)&v130, (uint64_t *)&unk_100641310);
      if (sub_1000A849C(&v130) != 1)
      {
        sub_100070EDC((uint64_t)v129, (uint64_t)v112, (uint64_t *)&unk_100641310);
        sub_1000B2740((uint64_t)v112);

        v11 = v143;
        v110 = v142;
        v111 = v141;
        v108 = v140;
        v109 = v137;
        v106 = v139;
        v107 = v138;
        v12 = v130;
        v13 = v136;
        v104 = v133;
        v105 = v135;
        v102 = v131;
        v103 = v134;
        v101 = v132;
        a1 = v95;
        goto LABEL_35;
      }
      goto LABEL_38;
    }
LABEL_37:
    sub_100059B10(v108, v111, v110, 0, v105, (uint64_t)v6);
    sub_100059B10(v104, v103, v109, v102, v101, v99);
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v23 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  if (v23)
  {
    v24 = v16;
    v25 = objc_msgSend(v23, "collectionCreateButtonTitle");
    v96 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v97 = v26;

    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v6 = 0;
    goto LABEL_29;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_100059B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a5)
    return swift_retain(a6);
  return result;
}

uint64_t sub_100059B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a5)
    return swift_release(a6);
  return result;
}

void sub_100059B20()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  UIFontTextStyle v6;
  NSString *v7;
  char *v8;
  void *v9;
  NSString *v10;
  id v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char v45;
  char v46;
  id v47;
  void *v48;
  uint64_t v49;
  NSString *v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  NSArray v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  NSString *v81;
  uint64_t v82;
  id v83;
  int v84;
  int v85;
  _QWORD v86[16];
  uint64_t v87[16];
  char v88[32];

  v1 = v0;
  v2 = sub_10006922C(&qword_100645FB8);
  __chkstk_darwin(v2);
  v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v5, v88, 0, 0);
  if (*v5)
  {
    sub_100070EDC(*v5 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v86, &qword_100658670);
    sub_100070EDC((uint64_t)v86, (uint64_t)v87, &qword_100658670);
    if (sub_1000A849C(v87) == 1)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v6 = (UIFontTextStyle)v87[9];
  }
  else
  {
    v6 = UIFontTextStyleBody;
  }
  v7 = v6;
  v8 = *(char **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView);
  v9 = *(void **)&v8[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle];
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle] = v7;
  v10 = v7;

  sub_10006CBE8();
  v11 = sub_10006E680();
  objc_msgSend(v11, "setNeedsUpdateConfiguration");

  objc_msgSend(v8, "removeFromSuperview");
  v12 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton;
  v13 = *(id *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton);
  if (v13)
    v13 = objc_msgSend(v13, "removeFromSuperview");
  v14 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x520))(v13);
  v15 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints);
  v81 = v10;
  v82 = v12;
  v83 = v8;
  if ((v14 & 1) != 0)
  {
    swift_beginAccess(v15, v87, 0, 0);
    v23 = *v15;
    v24 = (unint64_t)*v15 >> 62;
    v79 = v4;
    v80 = v1;
    if (v24)
    {
      if (v23 < 0)
        v68 = v23;
      else
        v68 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v23, 2);
      v25 = _CocoaArrayWrapper.endIndex.getter(v68);
      if (!v25)
        goto LABEL_37;
    }
    else
    {
      v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v23, 2);
      if (!v25)
        goto LABEL_37;
    }
    type metadata accessor for UILayoutPriority(0);
    if (v25 < 1)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v27 = v26;
    v28 = 0;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
        v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v23);
      else
        v29 = *(id *)(v23 + 8 * v28 + 32);
      v30 = v29;
      ++v28;
      v84 = 1065353216;
      v85 = 1148846080;
      v31 = sub_10005A360((unint64_t *)&unk_10064A060, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
      static _UIKitNumericRawRepresentable.- infix(_:_:)(v86, &v85, &v84, v27, v31);
      LODWORD(v32) = v86[0];
      objc_msgSend(v30, "setPriority:", v32);

    }
    while (v25 != v28);
LABEL_37:
    swift_bridgeObjectRelease_n(v23, 2);
    v69 = (uint64_t)v83;
    objc_msgSend(v83, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
    v70 = v80;
    v71 = v82;
    v72 = *(void **)((char *)v80 + v82);
    if (v72)
      objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
    v73 = (uint64_t)v79;
    sub_100048604(v69, 0, (uint64_t)v79);
    v74 = type metadata accessor for UICellAccessory(0);
    v75 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
    v75(v73, 0, 1, v74);
    v76 = (uint64_t)v70 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory;
    swift_beginAccess((char *)v70 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory, v86, 33, 0);
    sub_10006F454(v73, v76);
    swift_endAccess(v86);
    sub_100068748();
    sub_10000CB4C(v73, &qword_100645FB8);
    v77 = *(void **)((char *)v70 + v71);
    v50 = v81;
    if (!v77)
      goto LABEL_42;
    v67.super.isa = (Class)v77;
    sub_100048604((uint64_t)v67.super.isa, 0, v73);
    v75(v73, 0, 1, v74);
    v78 = (uint64_t)v70 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory;
    swift_beginAccess((char *)v70 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory, v86, 33, 0);
    sub_10006F454(v73, v78);
    swift_endAccess(v86);
    sub_100068748();
    sub_10000CB4C(v73, &qword_100645FB8);
    goto LABEL_41;
  }
  swift_beginAccess(v15, v87, 0, 0);
  v16 = *v15;
  v17 = (char *)v1;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v33 = v16;
    else
      v33 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v16, 2);
    v18 = _CocoaArrayWrapper.endIndex.getter(v33);
    if (!v18)
      goto LABEL_28;
  }
  else
  {
    v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v16, 2);
    if (!v18)
      goto LABEL_28;
  }
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_44;
  }
  v19 = 0;
  do
  {
    if ((v16 & 0xC000000000000001) != 0)
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v16);
    else
      v20 = *(id *)(v16 + 8 * v19 + 32);
    v22 = v20;
    ++v19;
    LODWORD(v21) = 1148846080;
    objc_msgSend(v20, "setPriority:", v21);

  }
  while (v18 != v19);
LABEL_28:
  swift_bridgeObjectRelease_n(v16, 2);
  objc_msgSend(v83, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v34 = v17;
  v35 = *(void **)&v17[v82];
  if (v35)
    objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v36 = type metadata accessor for UICellAccessory(0);
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v37(v4, 1, 1, v36);
  v38 = (uint64_t)&v34[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory];
  swift_beginAccess(&v34[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory], v86, 33, 0);
  sub_10006F454((uint64_t)v4, v38);
  swift_endAccess(v86);
  sub_100068748();
  sub_10000CB4C((uint64_t)v4, &qword_100645FB8);
  v39 = *(void **)&v34[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView];
  v40 = objc_msgSend(v39, "arrangedSubviews");
  v41 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);

  v43 = *(id *)&v34[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel];
  v44 = sub_1000875E0((uint64_t)v43, v42);
  v46 = v45;
  swift_bridgeObjectRelease(v42);

  if ((v46 & 1) == 0)
  {
    v47 = v83;
    objc_msgSend(v39, "insertArrangedSubview:atIndex:", v83, v44);
    v48 = *(void **)&v34[v82];
    v49 = (uint64_t)v4;
    v50 = v81;
    if (!v48)
    {
LABEL_42:

      return;
    }
    v37((char *)v49, 1, 1, v36);
    v51 = (uint64_t)&v34[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory];
    swift_beginAccess(&v34[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory], v86, 33, 0);
    v52 = v48;
    sub_10006F454(v49, v51);
    swift_endAccess(v86);
    sub_100068748();
    sub_10000CB4C(v49, &qword_100645FB8);
    v53 = objc_msgSend(v34, "contentView");
    objc_msgSend(v53, "insertSubview:aboveSubview:", v52, v39);

    v54 = (void *)objc_opt_self(NSLayoutConstraint);
    v55 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v56 = swift_allocObject(v55, 48, 7);
    *(_OWORD *)(v56 + 16) = xmmword_1004DA350;
    v57 = v47;
    v58 = objc_msgSend(v52, "centerXAnchor");
    v59 = objc_msgSend(v47, "centerXAnchor");
    v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

    *(_QWORD *)(v56 + 32) = v60;
    v61 = objc_msgSend(v52, "centerYAnchor");
    v62 = v57;
    v50 = v81;
    v63 = objc_msgSend(v62, "centerYAnchor");
    v64 = objc_msgSend(v61, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v56 + 40) = v64;
    v86[0] = v56;
    specialized Array._endMutation()(v65);
    v66 = v86[0];
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v67.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v54, "activateConstraints:", v67.super.isa, swift_bridgeObjectRelease(v66).n128_f64[0]);

LABEL_41:
    goto LABEL_42;
  }
LABEL_46:
  __break(1u);
}

uint64_t sub_10005A360(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10005A3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, __n128);
  uint64_t v34;
  id v35;
  id v36;
  int v37;
  unsigned int *v38;
  char *v39;
  unsigned int *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  __int128 v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char v59[24];
  __int128 v60;
  uint64_t v61;
  char v62[32];

  v52 = a2;
  v5 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  __chkstk_darwin(v5);
  v49 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v54 = *(_QWORD *)(v11 - 8);
  v55 = v11;
  __chkstk_darwin(v11);
  v53 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v56 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v62, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v21 = (void *)Strong;
    v22 = Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, v59, 0, 0);
    sub_1000271D4(v22, (uint64_t)&v60, &qword_100642730);
    if (v61)
    {
      v23 = sub_10006922C((uint64_t *)&unk_1006455F0);
      v24 = swift_dynamicCast(&v58, &v60, (char *)&type metadata for Any + 8, v23, 6);
      if ((v24 & 1) != 0)
      {
        v25 = v58;
        goto LABEL_10;
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)&v60, &qword_100642730);
    }
    if (qword_1006411E8 != -1)
      swift_once(&qword_1006411E8, sub_1000A3F70);
    v24 = (uint64_t)(id)qword_100657778;
    v25 = (void *)v24;
LABEL_10:
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v24);

    v27 = IndexPath.init(row:section:)(0, a1);
    v28 = IndexPath.section.getter(v27);
    v29 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v57);
    v30 = v29;
    if ((v28 & 0x8000000000000000) != 0 || v28 >= *(_QWORD *)(v29 + 16))
    {
      v46 = swift_bridgeObjectRelease(v29);
      (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v46);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v57);

      return 0;
    }
    v48 = *(_OWORD *)(v29 + 16 * v28 + 32);
    v31 = v48;
    swift_unknownObjectRetain(v48);
    v32 = swift_bridgeObjectRelease(v30);
    v33 = *(void (**)(char *, uint64_t, __n128))(v14 + 8);
    v34 = v31;
    v33(v16, v13, v32);
    v35 = objc_msgSend(v21, "traitCollection");
    v36 = objc_msgSend(v35, "sourceOutlineStyle");

    v37 = *(unsigned __int8 *)(v31 + 73);
    v38 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:);
    if (v36 != (id)1)
      v38 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.sidebar(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v38, v7);
    v39 = v53;
    UICollectionLayoutListConfiguration.init(appearance:)(v10);
    v40 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.firstItemInSection(_:);
    if (!v37)
      v40 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
    v41 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, *v40, v51);
    UICollectionLayoutListConfiguration.headerMode.setter(v41);
    v42 = swift_allocObject(&unk_1005F0430, 24, 7);
    swift_unknownObjectWeakInit(v42 + 16);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_100494540, v42);
    v43 = swift_allocObject(&unk_1005F0430, 24, 7);
    swift_unknownObjectWeakInit(v43 + 16);
    UICollectionLayoutListConfiguration._willBeginSwipingHandler.setter(sub_100494548, v43);
    v44 = swift_allocObject(&unk_1005F0430, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16);
    UICollectionLayoutListConfiguration._didEndSwipingHandler.setter(sub_100494568, v44);
    sub_10004F2F0(0, &qword_100646D18, NSCollectionLayoutSection_ptr);
    v26 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v39, v52);
    v60 = v48;
    v45 = v57;
    if (NSDiffableDataSourceSnapshot.numberOfItems(inSection:)(&v60, v57) <= 0)
    {
      if (qword_1006411F0 != -1)
        swift_once(&qword_1006411F0, sub_10009F088);
      if (byte_100657780 == 1)
      {
        swift_unknownObjectRelease(v34);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v45);
        return 0;
      }
      objc_msgSend(v26, "contentInsets");
      objc_msgSend(v26, "setContentInsets:", 0.0);
      objc_msgSend(v26, "contentInsets");
      objc_msgSend(v26, "setContentInsets:");
    }
    swift_unknownObjectRelease(v34);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v45);
    return v26;
  }
  return 0;
}

id sub_10005A93C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  __n128 v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  Class isa;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  _QWORD aBlock[5];
  uint64_t v58;

  v53 = a1;
  v52 = type metadata accessor for UIShape(0);
  v1 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C((uint64_t *)&unk_1006492B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v51 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v51 - v17;
  v56 = (char *)&v51 - v17;
  static UIButton.Configuration.borderless()(v16);
  type metadata accessor for DOCButton();
  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v19(v15, v18, v8);
  v55 = v8;
  v19(v12, v15, v8);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v21 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v20, 0, 0, 0, DOCSplitBrowserViewController.didCommitPreview(of:), 0);
  v22 = (void *)UIButton.init(configuration:primaryAction:)(v12, v21);
  v54 = *(void (**)(char *, uint64_t))(v9 + 8);
  v54(v15, v8);
  objc_msgSend(v22, "setUserInteractionEnabled:", 0);
  objc_msgSend(v22, "setMinimumContentSizeCategory:", UIContentSizeCategoryLarge);
  objc_msgSend(v22, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityLarge);
  sub_10004F2F0(0, &qword_100649070, UIHoverStyle_ptr);
  v23 = v22;
  v24 = static UIShape.circle.getter();
  UIShape.inset(by:)(v24, -5.0);
  v25 = v52;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v25);
  v26 = (void *)UIHoverStyle.init(shape:)(v6);
  objc_msgSend(v23, "setHoverStyle:", v26);

  v27 = swift_allocObject(&unk_1005E8A18, 24, 7);
  v28 = v53;
  swift_unknownObjectWeakInit(v27 + 16);
  aBlock[4] = sub_10006031C;
  v58 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000602CC;
  aBlock[3] = &unk_1005E8A30;
  v29 = _Block_copy(aBlock);
  v30 = v58;
  v31 = v23;
  swift_release(v30);
  objc_msgSend(v31, "setConfigurationUpdateHandler:", v29);
  _Block_release(v29);

  objc_msgSend(v28, "addSubview:", v31);
  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v32 = (void *)objc_opt_self(NSLayoutConstraint);
  v33 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v34 = swift_allocObject(v33, 64, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1004DAC10;
  v35 = objc_msgSend(v31, "leadingAnchor");
  v36 = objc_msgSend(v28, "leadingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v34 + 32) = v37;
  v38 = objc_msgSend(v28, "trailingAnchor");
  v39 = objc_msgSend(v31, "trailingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v34 + 40) = v40;
  v41 = objc_msgSend(v31, "topAnchor");
  v42 = objc_msgSend(v28, "topAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v34 + 48) = v43;
  v44 = objc_msgSend(v28, "bottomAnchor");
  v45 = objc_msgSend(v31, "bottomAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v34 + 56) = v46;
  aBlock[0] = v34;
  specialized Array._endMutation()(v47);
  v48 = aBlock[0];
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "activateConstraints:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

  v54(v56, v55);
  return v31;
}

void sub_10005AEDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t i;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *Strong;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void **v59;
  void **v60;
  id v61;
  void *v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  void **aBlock;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  void *v78;
  void *v79;
  uint64_t v80;
  _QWORD v81[3];
  uint64_t v82;
  void **v83;

  v73 = a3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(void ***)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS.QoSClass(0);
  v65 = *(_QWORD *)(v14 - 8);
  v66 = v14;
  __chkstk_darwin(v14);
  v64 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = (uint64_t)_swiftEmptyArrayStorage;
  v83 = (void **)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v51 = a1;
    else
      v51 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v16 = _CocoaArrayWrapper.endIndex.getter(v51);
  }
  else
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  v71 = v7;
  v72 = v6;
  v69 = v10;
  v70 = v9;
  v67 = v13;
  v68 = v11;
  if (v16)
  {
    if (v16 < 1)
    {
      __break(1u);
      goto LABEL_44;
    }
    v63 = a4;
    v74 = 0;
    for (i = 0; i != v16; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v20 = *(id *)(a1 + 8 * i + 32);
      v21 = v20;
      v22 = type metadata accessor for DOCFileProviderSource();
      v23 = swift_dynamicCastClass(v21, v22);
      if (v23)
      {
        v24 = (char *)v23;
        v25 = v21;
        v26 = sub_10005B700();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v28 = *(_QWORD *)(((unint64_t)v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v27 = *(_QWORD *)(((unint64_t)v83 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v28 >= v27 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
        v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
        specialized Array._endMutation()(v29);
        if (((unint64_t)objc_msgSend(v24, "status") | 2) == 2)
        {
          v30 = *(void **)&v24[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
          if (v30)
          {
            v31 = objc_msgSend(v30, "isMainiCloudDriveDomain");
            v74 |= v31;
          }
        }
        if (objc_msgSend(v24, "isiCloudBased", v63))
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v33 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v32 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v33 >= v32 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
          v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v24);
          specialized Array._endMutation()(v19);
        }

      }
    }
    v34 = swift_bridgeObjectRelease(a1);
    v35 = v82;
    a4 = v63;
    LOBYTE(v13) = v74;
  }
  else
  {
    v34 = swift_bridgeObjectRelease(a1);
    LOBYTE(v13) = 0;
    v35 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v36 = v73 + 16;
  if ((unint64_t)v35 >> 62)
  {
    if (v35 < 0)
      v52 = v35;
    else
      v52 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v53 = _CocoaArrayWrapper.endIndex.getter(v52);
    v34 = swift_bridgeObjectRelease(v35);
    if (v53 <= 0)
      goto LABEL_35;
  }
  else if (*(uint64_t *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
    goto LABEL_35;
  }
  if (FPIsCloudDocsWithFPFSEnabled(v34))
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v38 = v65;
    v37 = v66;
    v39 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v64, enum case for DispatchQoS.QoSClass.default(_:), v66);
    v40 = (void *)static OS_dispatch_queue.global(qos:)(v39);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    v41 = v82;
    v42 = swift_allocObject(&unk_1005C9AD8, 24, 7);
    *(_QWORD *)(v42 + 16) = v41;
    v79 = sub_100084640;
    v80 = v42;
    aBlock = _NSConcreteStackBlock;
    v76 = 1107296256;
    v77 = sub_10004A82C;
    v78 = &unk_1005C9AF0;
    v43 = _Block_copy(&aBlock);
    v44 = v67;
    static DispatchQoS.unspecified.getter(v43);
    v81[0] = _swiftEmptyArrayStorage;
    v45 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v46 = sub_10006922C((uint64_t *)&unk_100647540);
    v47 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v48 = v70;
    v49 = v46;
    v50 = v72;
    dispatch thunk of SetAlgebra.init<A>(_:)(v81, v49, v47, v72, v45);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v44, v48, v43);
    _Block_release(v43);

    ((void (*)(char *, uint64_t))v71[1])(v48, v50);
    (*(void (**)(char *, unint64_t))(v68 + 8))(v44, v69);
    swift_release(v80);
    goto LABEL_36;
  }
LABEL_35:
  swift_bridgeObjectRelease(v35);
LABEL_36:
  swift_beginAccess(v36, v81, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v36, v54);
  if (Strong)
  {
    v56 = Strong;
    v16 = (uint64_t)objc_msgSend(Strong, "actionManager");

    v7 = v83;
    aBlock = v83;
    v9 = a4;
    v57 = swift_bridgeObjectRetain(v7);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v57);
    v10 = *(_QWORD *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    v17 = *(_QWORD *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v10 < v17 >> 1)
    {
LABEL_38:
      v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
      specialized Array._endMutation()(v58);
      v59 = aBlock;
      swift_bridgeObjectRelease(v7);
      v60 = *(void ***)(v16 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers);
      *(_QWORD *)(v16 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers) = v59;

      goto LABEL_40;
    }
LABEL_44:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v10 + 1, 1);
    goto LABEL_38;
  }
  v60 = v83;
LABEL_40:
  swift_bridgeObjectRelease(v60);
  if ((v13 & 1) != 0)
  {
    v61 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
    v79 = sub_10008461C;
    v80 = 0;
    aBlock = _NSConcreteStackBlock;
    v76 = 1107296256;
    v77 = sub_10004A82C;
    v78 = &unk_1005C9AA0;
    v62 = _Block_copy(&aBlock);
    objc_msgSend(v61, "performAfterLaunch:", v62);
    _Block_release(v62);

  }
}

id sub_10005B700()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager);
  }
  else
  {
    v4 = sub_10005B760(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10005B760(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  objc_super v12;

  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8) & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCActionManager()), "init");
  v1 = *(void **)(a1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (!v1)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCActionManager()), "init");
  v2 = swift_allocObject(&unk_1005D8F98, 24, 7);
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCLazyActionManager());
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions] = 0;
  v4 = &v3[OBJC_IVAR____TtC5Files20DOCLazyActionManager_actionsClosure];
  *(_QWORD *)v4 = sub_1002ADDE0;
  *((_QWORD *)v4 + 1) = v2;
  v5 = (void *)objc_opt_self(FPItemManager);
  v6 = v1;
  v7 = objc_msgSend(v5, "defaultManager", swift_retain().n128_f64[0]);
  v8 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
  v9 = &v3[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = v7;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = v8;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for DOCActionManager();
  v10 = objc_msgSendSuper2(&v12, "init");

  swift_release(v2);
  return v10;
}

uint64_t type metadata accessor for DOCActionManager()
{
  return objc_opt_self(_TtC5Files16DOCActionManager);
}

Class sub_10005B950(int a1, UIMenuIdentifier_optional a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  Class result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  uint64_t i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  void *v40;
  void *v41;
  id v42;
  NSString v43;
  NSString v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  Class v48;
  Swift::String v49;
  Swift::String_optional v50;
  Swift::String v51;
  Swift::String v52;
  unint64_t v53;
  uint64_t v54;
  UIMenuElementSize v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  Swift::OpaquePointer v63;
  uint64_t v64;
  NSString *value;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  UIImage_optional v72;
  Swift::String v73;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (Class)__chkstk_darwin(v6);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v11)
    goto LABEL_44;
  v12 = v11 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v12 + 16) & 1) == 0)
  {
    v13 = *(id *)v12;
    v14 = objc_msgSend(v13, "doc_displaysSearchResults");

    if ((v14 & 1) != 0)
    {
      v16 = Logger.UI.unsafeMutableAddressor(v15);
      v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v16, v6);
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(12, -1);
        v21 = swift_slowAlloc(32, -1);
        v71 = v21;
        *(_DWORD *)v20 = 136315138;
        v70 = (_QWORD *)sub_1000544FC(0xD000000000000027, 0x8000000100524790, (uint64_t *)&v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s grouping by section not supported. Not adding Use Groups menu item", v20, 0xCu);
        swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      return 0;
    }
  }
  v23 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  v24 = *(id *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  v25 = sub_100053FC4();

  isa = (Class)v25[2];
  swift_bridgeObjectRelease(v25);
  if (!isa)
    return isa;
  v26 = *(id *)(v3 + v23);
  v27 = sub_100053FC4();

  v28 = v27[2];
  v69 = v3;
  if (v28)
  {
    value = a2.value;
    HIDWORD(v64) = a1;
    v29 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior);
    swift_bridgeObjectRetain(v27);
    for (i = 0; i != v28; ++i)
    {
      if (v29 != 7)
        __asm { BR              X9 }
    }
    swift_bridgeObjectRelease(v27);
    v31 = v27[2];
    v66 = 7;
    if (v31)
    {
      v70 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v31);
      v68 = sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      objc_opt_self(DOCAXIdentifier);
      v67 = 7;
      JUMPOUT(0x10005BFE4);
    }
    LOBYTE(a1) = BYTE4(v64);
    a2.value = value;
  }
  else
  {
    v66 = 7;
  }
  v32 = swift_bridgeObjectRelease(v27);
  v71 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 1) == 0)
    goto LABEL_25;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    if (!*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_25;
    goto LABEL_20;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v58 = _swiftEmptyArrayStorage;
  else
    v58 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v59 = _CocoaArrayWrapper.endIndex.getter(v58);
  v32 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v59)
  {
LABEL_20:
    v33 = DOCItemGroupingBehavior.localizedName.getter(7);
    v35 = v34;
    v36 = (_DWORD)v66 == 7;
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v37 = swift_allocObject(&unk_1005DA8E8, 24, 7);
    swift_unknownObjectWeakInit(v37 + 16);
    v38 = swift_allocObject(&unk_1005DAD70, 25, 7);
    *(_QWORD *)(v38 + 16) = v37;
    *(_BYTE *)(v38 + 24) = 7;
    v40 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v33, v35, 0, 0, 0, 0, 0, 0, v39, 0, 0, v36, sub_1002D56BC, v38);
    v41 = (void *)objc_opt_self(DOCAXIdentifier);
    v42 = v40;
    v43 = String._bridgeToObjectiveC()();
    v44 = objc_msgSend(v41, "groupByMenuItemForGrouping:", v43);

    if (!v44)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v46 = v45;
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v46);
    }
    objc_msgSend(v42, "setAccessibilityIdentifier:", v44);

    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
      v47 = v42;
LABEL_24:
      sub_100458ED8(0, 0, (uint64_t)v42);

      goto LABEL_25;
    }
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v60 = _swiftEmptyArrayStorage;
    else
      v60 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v61 = v42;
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v62 = _CocoaArrayWrapper.endIndex.getter(v60);
    result = (Class)swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if ((v62 & 0x8000000000000000) == 0)
      goto LABEL_24;
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_25:
  result = (Class)(id)_DocumentManagerBundle(v32);
  if (result)
  {
    v48 = result;
    v73._countAndFlagsBits = 0xD00000000000003CLL;
    v73._object = (void *)0x8000000100524750;
    v49._countAndFlagsBits = 0x79422070756F7247;
    v49._object = (void *)0xE90000000000003ALL;
    v50.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v50.value._object = (void *)0xEB00000000656C62;
    v51._countAndFlagsBits = 0x79422070756F7247;
    v51._object = (void *)0xE90000000000003ALL;
    v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v73);

    v53 = v71;
    if (v71 >> 62)
    {
      if ((v71 & 0x8000000000000000) != 0)
        v56 = v71;
      else
        v56 = v71 & 0xFFFFFFFFFFFFFF8;
      v57 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v53);
      v55 = _bridgeCocoaArray<A>(_:)(v56, v57);
      swift_bridgeObjectRelease(v53);
    }
    else
    {
      v54 = swift_bridgeObjectRetain(v71);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v54);
      sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      v55 = v53;
    }
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v72.value.super.isa = 0;
    v72.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v52, (Swift::String_optional)0, v72, a2, 0xFFFFFFFFFFFFFFFFLL, v55, v63).super.super.isa;
    swift_bridgeObjectRelease(v53);
    return isa;
  }
LABEL_45:
  __break(1u);
  return result;
}

_BYTE *sub_10005C528(_BYTE *a1, _BYTE *a2)
{
  _s3TagOwCP(a2, a1);
  return a2;
}

_BYTE *_s3TagOwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

_QWORD *sub_10005C570(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  CGFloat bottom;
  CGFloat trailing;
  char *v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  __int128 v57;
  uint64_t v58;
  _OWORD v60[3];
  _OWORD __src[17];

  v10 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView;
  v11 = objc_allocWithZone((Class)UIStackView);
  v12 = v5;
  *(_QWORD *)&v5[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailContainerView;
  v14 = type metadata accessor for DOCImageViewContainerView();
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  v15 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_titleStackView;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v16 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView;
  v17 = objc_msgSend(objc_allocWithZone((Class)DOCChainedTagsView), "init");
  objc_msgSend(v17, "setOpaque:", 0);
  objc_msgSend(v17, "setSpacing:", 0);
  objc_msgSend(v17, "setAlignmentOffset:", 0.0, 0.5);
  *(_QWORD *)&v12[v16] = v17;
  v18 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel;
  v58 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)DOCLabel), "init");
  objc_msgSend(v19, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v12[v18] = v19;
  v20 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress;
  *(_QWORD *)&v12[v20] = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "init");
  v21 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel;
  v22 = objc_msgSend(objc_allocWithZone((Class)DOCLabel), "init");
  v23 = (void *)objc_opt_self(UIColor);
  v24 = v22;
  v25 = objc_msgSend(v23, "secondaryLabelColor");
  objc_msgSend(v24, "setTextColor:", v25);

  objc_msgSend(v24, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v12[v21] = v24;
  v26 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel;
  v27 = objc_msgSend(objc_allocWithZone((Class)DOCLabel), "init");
  v28 = objc_msgSend(v23, "secondaryLabelColor");
  objc_msgSend(v27, "setTextColor:", v28);

  *(_QWORD *)&v12[v26] = v27;
  v29 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel;
  v30 = objc_msgSend(objc_allocWithZone((Class)DOCLabel), "init");
  v31 = objc_msgSend(v23, "secondaryLabelColor");
  objc_msgSend(v30, "setTextColor:", v31);

  *(_QWORD *)&v12[v29] = v30;
  v32 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel;
  v33 = objc_msgSend(objc_allocWithZone((Class)DOCLabel), "init");
  v34 = objc_msgSend(v23, "secondaryLabelColor");
  objc_msgSend(v33, "setTextColor:", v34);

  *(_QWORD *)&v12[v32] = v33;
  v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_previousStatusViewLocation] = 2;
  v35 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView;
  v36 = type metadata accessor for DOCItemStatusView();
  *(_QWORD *)&v12[v35] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v36)), "init");
  v37 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailCellHeightConstraint;
  *(_QWORD *)&v12[v37] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v38 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewLeadingConstraint;
  *(_QWORD *)&v12[v38] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v39 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTrailingConstraint;
  *(_QWORD *)&v12[v39] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v40 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTopConstraint;
  *(_QWORD *)&v12[v40] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v41 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewBottomConstraint;
  *(_QWORD *)&v12[v41] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize] = 0x403B000000000000;
  v42 = &v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics];
  sub_1000D07E4(v60);
  v57 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  LOBYTE(__src[0]) = 1;
  sub_100070EDC((uint64_t)v60, (uint64_t)__src + 8, &qword_100658670);
  *((_QWORD *)&__src[8] + 1) = 0x4026000000000000;
  *(_QWORD *)&__src[9] = 0;
  BYTE8(__src[9]) = 1;
  __src[10] = 0uLL;
  __src[11] = v57;
  *(CGFloat *)&__src[12] = bottom;
  *((CGFloat *)&__src[12] + 1) = trailing;
  __src[13] = xmmword_1004DE980;
  __src[14] = xmmword_1004DE990;
  __src[15] = xmmword_1004DE9A0;
  __src[16] = xmmword_1004DE9B0;
  memcpy(v42, __src, 0x110uLL);
  v45 = &v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory];
  v46 = type metadata accessor for UICellAccessory(0);
  v47 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v46 - 8) + 56);
  v47(v45, 1, 1, v46);
  v47(&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory], 1, 1, v46);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewObserver] = 0;
  v48 = objc_msgSend(*(id *)&v12[v26], "widthAnchor");
  v49 = objc_msgSend(v48, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateConstraint] = v49;
  v50 = objc_msgSend(*(id *)&v12[v29], "widthAnchor");
  v51 = objc_msgSend(v50, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeConstraint] = v51;
  v52 = objc_msgSend(*(id *)&v12[v32], "widthAnchor");
  v53 = objc_msgSend(v52, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindConstraint] = v53;
  v54 = *(id *)&v12[v58];
  objc_msgSend(v54, "setLineBreakMode:", 5);

  return sub_10004CC6C(a1, v55, a2, a3, a4, a5);
}

char *sub_10005CBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *result;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;

  v3 = v2;
  v38 = a2;
  v5 = sub_10006922C((uint64_t *)&unk_100642710);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v30 - v9;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v37 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v31 = (char *)&v30 - v15;
  if (!((unint64_t)a1 >> 62))
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v16)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease(a1);
    return (char *)_swiftEmptyArrayStorage;
  }
LABEL_23:
  if (a1 < 0)
    v29 = a1;
  else
    v29 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v16 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v16)
    goto LABEL_27;
LABEL_3:
  v30 = v3;
  v36 = a1 & 0xC000000000000001;
  v34 = v8;
  v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource;
  v17 = (char *)_swiftEmptyArrayStorage;
  v18 = 4;
  v32 = a1;
  v33 = v16;
  while (1)
  {
    v8 = (char *)(v18 - 4);
    if (v36)
    {
      result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, a1);
      v20 = result;
      v3 = v18 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_22;
    }
    else
    {
      v20 = *(char **)(a1 + 8 * v18);
      result = (char *)swift_unknownObjectRetain(v20);
      v3 = v18 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    v21 = *(_QWORD *)(v38 + v35);
    if (!v21)
      break;
    swift_retain();
    v22 = (uint64_t)v34;
    sub_100429954(v20, (uint64_t)v34);
    swift_release(v21);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (v23(v22, 1, v11) == 1)
    {
      sub_10000CB4C(v22, (uint64_t *)&unk_100642710);
      v24 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v10, v22, v11);
      v24 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v24, 1, v11);
    swift_unknownObjectRelease(v20);
    if (v23((uint64_t)v10, 1, v11) == 1)
    {
      sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
    }
    else
    {
      v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v26 = v31;
      v25(v31, v10, v11);
      v25(v37, v26, v11);
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = (char *)sub_100153D0C(0, *((_QWORD *)v17 + 2) + 1, 1, (unint64_t)v17);
      v28 = *((_QWORD *)v17 + 2);
      v27 = *((_QWORD *)v17 + 3);
      if (v28 >= v27 >> 1)
        v17 = (char *)sub_100153D0C(v27 > 1, v28 + 1, 1, (unint64_t)v17);
      *((_QWORD *)v17 + 2) = v28 + 1;
      v25(&v17[((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v28], v37, v11);
    }
    a1 = v32;
    ++v18;
    if (v3 == v33)
    {
      swift_bridgeObjectRelease(v32);
      return v17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10005CEF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FileEntityIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_10005CF30(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  Class isa;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailContainerView);
  v4 = objc_msgSend(v3, "heightAnchor");
  v5 = objc_msgSend(a1, "heightAnchor");
  v6 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v5, 0.0);

  v7 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailCellHeightConstraint;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailCellHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailCellHeightConstraint) = v6;

  v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView);
  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(a1, "topAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, 0.0);

  v13 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTopConstraint;
  v14 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTopConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTopConstraint) = v12;

  v15 = objc_msgSend(v9, "bottomAnchor");
  v16 = objc_msgSend(a1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, 0.0);

  v18 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewBottomConstraint;
  v19 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewBottomConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewBottomConstraint) = v17;

  v20 = (void *)objc_opt_self(NSLayoutConstraint);
  v21 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v22 = swift_allocObject(v21, 112, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004DE9C0;
  v23 = *(void **)(v1 + v13);
  v24 = *(void **)(v1 + v18);
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v24;
  v25 = v23;
  v26 = v24;
  v27 = objc_msgSend(v3, "widthAnchor");
  v28 = objc_msgSend(v3, "heightAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  v30 = *(void **)(v1 + v7);
  *(_QWORD *)(v22 + 48) = v29;
  *(_QWORD *)(v22 + 56) = v30;
  v31 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
  v32 = v30;
  v33 = objc_msgSend(v31, "centerXAnchor");
  v34 = objc_msgSend(v3, "centerXAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v22 + 64) = v35;
  v36 = objc_msgSend(v31, "centerYAnchor");
  v37 = objc_msgSend(v3, "centerYAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v22 + 72) = v38;
  v39 = objc_msgSend(v3, "bottomAnchor");
  v40 = objc_msgSend(v31, "bottomAnchor");
  v41 = objc_msgSend(v39, "constraintGreaterThanOrEqualToAnchor:", v40);

  *(_QWORD *)(v22 + 80) = v41;
  v42 = objc_msgSend(v3, "trailingAnchor");
  v43 = objc_msgSend(v31, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintGreaterThanOrEqualToAnchor:", v43);

  *(_QWORD *)(v22 + 88) = v44;
  v45 = objc_msgSend(v31, "topAnchor");
  v46 = objc_msgSend(v3, "topAnchor");
  v47 = objc_msgSend(v45, "constraintGreaterThanOrEqualToAnchor:", v46);

  *(_QWORD *)(v22 + 96) = v47;
  v48 = objc_msgSend(v31, "leadingAnchor");
  v49 = objc_msgSend(v3, "leadingAnchor");
  v50 = objc_msgSend(v48, "constraintGreaterThanOrEqualToAnchor:", v49);

  *(_QWORD *)(v22 + 104) = v50;
  specialized Array._endMutation()(v51);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

}

void sub_10005D434(uint64_t a1, char *a2, int a3)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  Class v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t i;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  id v61;
  id v62;
  int v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)();
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  id v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  Class isa;
  id v84;
  _QWORD *v85;
  uint64_t v86;
  id v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  id v92;
  Class v93;
  id v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t j;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  uint64_t v115;
  id v116;
  id v117;
  int v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)();
  uint64_t v127;
  void **v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  id v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t Strong;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  id v159;
  BOOL v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  uint64_t k;
  char *v165;
  void *v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  uint64_t v180;
  id v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  uint64_t v189;
  BOOL v190;
  id v191;
  uint64_t v192;
  id v193;
  id v194;
  void *v195;
  _BYTE *v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  _BOOL8 v200;
  char v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  double v212;
  id v213;
  uint64_t v214;
  id v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  id v226;
  double v227;
  double v228;
  int64_t v229;
  uint64_t v230;
  double v231;
  double v232;
  char *v233;
  uint64_t v234;
  _QWORD *v235;
  int64_t v236;
  void (*v237)(int64_t, void *);
  uint64_t v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  id v258;
  id v259;
  id v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  uint64_t v265;
  id v266;
  uint64_t v267;
  Class v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  void *v272;
  int64_t v273;
  char *v274;
  void (*v275)(int64_t, void *);
  void *v276;
  uint64_t v277;
  void *v278;
  uint64_t v279;
  unint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  id v286;
  uint64_t v287;
  id v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _QWORD *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  int64_t v298;
  void *v299;
  char *v300;
  char *v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  id v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  id v317;
  int v318;
  char *v319;
  char v320[24];
  char v321[8];
  char v322[8];
  char v323[8];
  _BYTE *v324;
  __int128 aBlock;
  __int128 v326;
  void (*v327)();
  uint64_t v328;

  v4 = v3;
  v318 = a3;
  v319 = a2;
  v316 = a1;
  v307 = type metadata accessor for DispatchWorkItemFlags(0);
  v306 = *(_QWORD *)(v307 - 8);
  __chkstk_darwin(v307);
  v305 = (char *)&v291 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v304 = type metadata accessor for DispatchQoS(0);
  v303 = *(_QWORD *)(v304 - 8);
  __chkstk_darwin(v304);
  v7 = (char *)&v291 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)type metadata accessor for DispatchTimeInterval(0);
  v9 = *((_QWORD *)v8 - 1);
  __chkstk_darwin(v8);
  v11 = (char *)&v291 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (int64_t)&v291 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v291 - v17;
  v19 = v4;
  v20 = (char *)objc_msgSend(v4, "locationChangePacer");
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];

  if (v21)
  {
    v319 = (char *)*(id *)DOCLog.UI.unsafeMutableAddressor(v22);
    v23 = static os_log_type_t.default.getter(v319);
    os_log(_:dso:log:type:_:)("Skipping update after dataSource update, since location change pacer has pending change requests.", 97, 2, &_mh_execute_header, v319, v23, _swiftEmptyArrayStorage);

    return;
  }
  v292 = v11;
  v293 = v9;
  v294 = (uint64_t)v8;
  v298 = v16;
  v296 = v13;
  v297 = v18;
  v299 = (void *)v12;
  v300 = v7;
  objc_msgSend(v19, "updateCustomActions");
  v295 = swift_allocObject(&unk_1005E5E78, 24, 7);
  v24 = v295;
  v25 = v319;
  *(_QWORD *)(v295 + 16) = v319;
  v26 = (_QWORD *)(v24 + 16);
  swift_bridgeObjectRetain(v25);
  v27 = objc_msgSend(v19, "rootViewController");
  v302 = v26;
  v28 = v316;
  LOBYTE(v16) = v318;
  v29 = v19;
  if (v27)
  {
    v30 = (uint64_t)v27;
    v31 = *v26;
    if ((unint64_t)v31 >> 62)
    {
      if (v31 < 0)
        v287 = v31;
      else
        v287 = v31 & 0xFFFFFFFFFFFFFF8;
      v288 = v27;
      swift_bridgeObjectRetain(v31);
      v202 = _CocoaArrayWrapper.endIndex.getter(v287);
      swift_bridgeObjectRelease(v31);
      if (v202 < 0)
      {
        __break(1u);
        goto LABEL_222;
      }
    }
    else
    {
      v32 = v27;
    }
    v26 = v302;
    sub_100088C48(0, 0, v30);

  }
  v33 = *v26;
  v34 = v29;
  v35 = swift_bridgeObjectRetain(v33);
  v36 = (uint64_t)v34;
  v37 = (uint64_t)sub_10003BDDC(v35, v34);
  swift_bridgeObjectRelease(v33);

  if ((unint64_t)v37 >> 62)
    goto LABEL_172;
  v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
  v317 = (id)v36;
  if (v38)
  {
    v39 = 0;
    v312 = v37 & 0xC000000000000001;
    v309 = v37 & 0xFFFFFFFFFFFFFF8;
    v308 = v37 + 32;
    v301 = (char *)&type metadata for Any + 8;
    v310 = v37;
    v311 = v38;
    do
    {
      if (v312)
      {
        v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v37);
      }
      else
      {
        if (v39 >= *(_QWORD *)(v309 + 16))
          goto LABEL_168;
        v41 = *(id *)(v308 + 8 * v39);
      }
      v36 = (uint64_t)v41;
      v42 = __OFADD__(v39++, 1);
      if (v42)
      {
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        if (v37 < 0)
          v192 = v37;
        else
          v192 = v37 & 0xFFFFFFFFFFFFFF8;
        v38 = _CocoaArrayWrapper.endIndex.getter(v192);
        goto LABEL_9;
      }
      v43 = type metadata accessor for DOCBrowserContainerController();
      v319 = (char *)swift_dynamicCastClass(v36, v43);
      if (!v319)
      {
        v72 = type metadata accessor for DOCColumnViewController(0);
        v73 = swift_dynamicCastClass(v36, v72);
        if (!v73)
          goto LABEL_14;
        v74 = v73;
        v75 = v39;
        v40 = (id)v36;
        v76 = objc_msgSend(v317, "additionalLeadingNavigationBarButtonItems");
        v77 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
        v78 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v76, v77);

        v79 = sub_100012BA0((unint64_t)v78);
        if (v79)
        {
          v80 = v79;
          v81 = sub_100080FF8((uint64_t)v79);
          swift_bridgeObjectRelease(v80);
          v82 = objc_allocWithZone((Class)NSArray);
          isa = Array._bridgeToObjectiveC()().super.isa;
          v84 = objc_msgSend(v82, "initWithArray:copyItems:", isa, 1, swift_bridgeObjectRelease(v81).n128_f64[0]);

          *(_QWORD *)&aBlock = 0;
          static Array._conditionallyBridgeFromObjectiveC(_:result:)(v84, &aBlock, v77);

          v85 = (_QWORD *)aBlock;
          swift_bridgeObjectRelease(v78);
          if (v85)
            v78 = v85;
          else
            v78 = _swiftEmptyArrayStorage;
        }
        v86 = *(_QWORD *)(v74 + OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems);
        *(_QWORD *)(v74 + OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems) = v78;
        swift_bridgeObjectRelease(v86);
        sub_10037E9C0();
        v87 = objc_msgSend(v317, "additionalTrailingNavigationBarButtonItems");
        v88 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v87, v77);

        v89 = sub_100012BA0((unint64_t)v88);
        if (v89)
        {
          v90 = v89;
          v91 = sub_100080FF8((uint64_t)v89);
          swift_bridgeObjectRelease(v90);
          v92 = objc_allocWithZone((Class)NSArray);
          v93 = Array._bridgeToObjectiveC()().super.isa;
          v94 = objc_msgSend(v92, "initWithArray:copyItems:", v93, 1, swift_bridgeObjectRelease(v91).n128_f64[0]);

          *(_QWORD *)&aBlock = 0;
          static Array._conditionallyBridgeFromObjectiveC(_:result:)(v94, &aBlock, v77);

          v95 = (_QWORD *)aBlock;
          swift_bridgeObjectRelease(v88);
          if (v95)
            v88 = v95;
          else
            v88 = _swiftEmptyArrayStorage;
        }
        v28 = v316;
        LOBYTE(v16) = v318;
        v37 = v310;
        v39 = v75;
        v96 = *(_QWORD *)(v74
                        + OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems);
        *(_QWORD *)(v74 + OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems) = v88;
        swift_bridgeObjectRelease(v96);
        sub_10037E9DC();
        v36 = (uint64_t)v40;
LABEL_88:
        v38 = v311;
        goto LABEL_13;
      }
      v314 = v39;
      v313 = (id)v36;
      v44 = objc_msgSend(v317, "additionalLeadingNavigationBarButtonItems");
      v37 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v37);

      v45 = sub_100012BA0(v16);
      v315 = v37;
      if (v45)
      {
        v46 = v45;
        v47 = sub_100080FF8((uint64_t)v45);
        swift_bridgeObjectRelease(v46);
        v48 = objc_allocWithZone((Class)NSArray);
        v49 = Array._bridgeToObjectiveC()().super.isa;
        v50 = objc_msgSend(v48, "initWithArray:copyItems:", v49, 1, swift_bridgeObjectRelease(v47).n128_f64[0]);

        *(_QWORD *)&aBlock = 0;
        static Array._conditionallyBridgeFromObjectiveC(_:result:)(v50, &aBlock, v37);

        v37 = aBlock;
        swift_bridgeObjectRelease(v16);
        if (v37)
          v16 = v37;
        else
          v16 = (int64_t)_swiftEmptyArrayStorage;
      }
      v51 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems;
      v52 = *(_QWORD *)&v319[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems];
      *(_QWORD *)&v319[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems] = v16;
      swift_bridgeObjectRelease(v52);
      v53 = (uint64_t)sub_100056180();
      v28 = v53;
      if ((unint64_t)v53 >> 62)
      {
        if (v53 < 0)
          v97 = v53;
        else
          v97 = v53 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v53);
        v36 = _CocoaArrayWrapper.endIndex.getter(v97);
        if (!v36)
          goto LABEL_55;
      }
      else
      {
        v36 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v53);
        if (!v36)
          goto LABEL_55;
      }
      if (v36 < 1)
        goto LABEL_166;
      for (i = 0; i != v36; ++i)
      {
        if ((v28 & 0xC000000000000001) != 0)
          v55 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
        else
          v55 = *(id *)(v28 + 8 * i + 32);
        v56 = v55;
        v57 = *(_QWORD *)&v319[v51];
        v58 = *(_QWORD *)&v56[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems];
        *(_QWORD *)&v56[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = v57;
        swift_bridgeObjectRetain(v57);
        *(_QWORD *)&v59 = swift_bridgeObjectRelease(v58).n128_u64[0];
        v60 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        v56[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        v61 = objc_msgSend(v56, "viewIfLoaded", v59);
        v62 = objc_msgSend(v61, "window");

        if (v62)
        {
          v63 = v56[v60];
          if (v63 != 2)
          {
            v64 = sub_10002DA34();
            v65 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v64 + 152))(v64);
            swift_release(v64);
            if ((v65 & 1) == 0 && (objc_msgSend(v56, "doc_hasAppearedOrIsAppearing") & 1) != 0)
            {
              v324 = v56;
              v66 = type metadata accessor for DOCBrowserContainedViewController();
              v67 = v56;
              v68 = sub_10006922C(&qword_10064D510);
              if (swift_dynamicCast(&aBlock, &v324, v66, v68, 6))
              {
                v69 = v63 & 1;
                v71 = *((_QWORD *)&v326 + 1);
                v70 = v327;
                sub_10007E7A0(&aBlock, *((uint64_t *)&v326 + 1));
                (*((void (**)(uint64_t, uint64_t, void (*)()))v70 + 1))(v69, v71, v70);
                sub_100068588(&aBlock);
              }
              else
              {
                v327 = 0;
                v326 = 0u;
                aBlock = 0u;
                sub_1001F7F28((uint64_t)&aBlock);
              }
              v56[v60] = 2;
            }
          }
        }

      }
LABEL_55:
      swift_bridgeObjectRelease_n(v28, 2);
      v98 = objc_msgSend(v317, "additionalTrailingNavigationBarButtonItems");
      v37 = v315;
      v99 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v98, v315);

      v100 = sub_100012BA0((unint64_t)v99);
      if (v100)
      {
        v101 = v100;
        v102 = sub_100080FF8((uint64_t)v100);
        swift_bridgeObjectRelease(v101);
        v103 = objc_allocWithZone((Class)NSArray);
        v28 = (uint64_t)Array._bridgeToObjectiveC()().super.isa;
        v104 = objc_msgSend(v103, "initWithArray:copyItems:", v28, 1, swift_bridgeObjectRelease(v102).n128_f64[0]);

        *(_QWORD *)&aBlock = 0;
        static Array._conditionallyBridgeFromObjectiveC(_:result:)(v104, &aBlock, v37);

        v37 = aBlock;
        swift_bridgeObjectRelease(v99);
        if (v37)
          v99 = (_QWORD *)v37;
        else
          v99 = _swiftEmptyArrayStorage;
      }
      LOBYTE(v16) = v318;
      v105 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems;
      v106 = *(_QWORD *)&v319[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems];
      *(_QWORD *)&v319[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems] = v99;
      swift_bridgeObjectRelease(v106);
      v107 = (uint64_t)sub_100056180();
      v108 = v107;
      if ((unint64_t)v107 >> 62)
      {
        if (v107 < 0)
          v127 = v107;
        else
          v127 = v107 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v107);
        v36 = _CocoaArrayWrapper.endIndex.getter(v127);
        if (!v36)
          goto LABEL_79;
      }
      else
      {
        v36 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v107);
        if (!v36)
          goto LABEL_79;
      }
      if (v36 < 1)
        goto LABEL_167;
      for (j = 0; j != v36; ++j)
      {
        if ((v108 & 0xC000000000000001) != 0)
          v110 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v108);
        else
          v110 = *(id *)(v108 + 8 * j + 32);
        v111 = v110;
        v112 = *(_QWORD *)&v319[v105];
        v113 = *(_QWORD *)&v111[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems];
        *(_QWORD *)&v111[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = v112;
        swift_bridgeObjectRetain(v112);
        *(_QWORD *)&v114 = swift_bridgeObjectRelease(v113).n128_u64[0];
        v115 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        v111[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        v116 = objc_msgSend(v111, "viewIfLoaded", v114);
        v117 = objc_msgSend(v116, "window");

        if (v117)
        {
          v118 = v111[v115];
          if (v118 != 2)
          {
            v119 = sub_10002DA34();
            v120 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v119 + 152))(v119);
            swift_release(v119);
            if ((v120 & 1) == 0 && (objc_msgSend(v111, "doc_hasAppearedOrIsAppearing") & 1) != 0)
            {
              v324 = v111;
              v121 = type metadata accessor for DOCBrowserContainedViewController();
              v122 = v111;
              v123 = sub_10006922C(&qword_10064D510);
              if (swift_dynamicCast(&aBlock, &v324, v121, v123, 6))
              {
                v124 = v118 & 1;
                v125 = *((_QWORD *)&v326 + 1);
                v126 = v327;
                sub_10007E7A0(&aBlock, *((uint64_t *)&v326 + 1));
                (*((void (**)(uint64_t, uint64_t, void (*)()))v126 + 1))(v124, v125, v126);
                sub_100068588(&aBlock);
              }
              else
              {
                v327 = 0;
                v326 = 0u;
                aBlock = 0u;
                sub_1001F7F28((uint64_t)&aBlock);
              }
              v111[v115] = 2;
            }
          }
        }

        LOBYTE(v16) = v318;
      }
LABEL_79:
      swift_bridgeObjectRelease_n(v108, 2);
      v128 = (void **)&v319[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v319[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v321, 0, 0);
      v129 = *v128;
      if (*v128)
      {
        v130 = type metadata accessor for DOCItemCollectionViewController(0);
        v131 = swift_dynamicCastClass(v129, v130);
        v28 = v316;
        v39 = v314;
        if (v131)
        {
          v132 = v131;
          v36 = v129;
          v133 = (char *)objc_msgSend(v317, "dataSource");
          v134 = *(_QWORD *)&v133[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

          v135 = (uint64_t *)(v132 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
          swift_beginAccess(v132 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v320, 1, 0);
          v136 = *v135;
          *v135 = v134;
          v160 = v136 == v134;
          v37 = v310;
          v38 = v311;
          if (!v160)
          {
            v137 = *(_QWORD *)(v132 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
            v138 = *(_QWORD *)(v137 + 16);
            if (v138)
            {
              v139 = (uint64_t *)(v137 + 64);
              do
              {
                v140 = *v139;
                v139 += 5;
                *(_BYTE *)(v140 + 24) = *(_BYTE *)(v140 + 25);
                --v138;
              }
              while (v138);
            }
            sub_100026A34();
          }
          v40 = v313;

          goto LABEL_13;
        }
        v40 = v313;
        v36 = (uint64_t)v313;
        v37 = v310;
        goto LABEL_88;
      }
      v40 = v313;
      v36 = (uint64_t)v313;
      v28 = v316;
      v37 = v310;
      v38 = v311;
      v39 = v314;
LABEL_13:

LABEL_14:
      v36 = (uint64_t)v317;
    }
    while (v39 != v38);
  }
  swift_bridgeObjectRelease(v37);
  v141 = *v302;
  if (*v302 >> 62)
  {
    if (v141 < 0)
      v37 = *v302;
    else
      v37 = v141 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v302);
    v142 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v142)
      goto LABEL_91;
  }
  else
  {
    v142 = *(_QWORD *)((v141 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v302);
    if (v142)
    {
LABEL_91:
      v143 = 0;
      v319 = (char *)(v141 & 0xC000000000000001);
      v314 = v141 & 0xFFFFFFFFFFFFFF8;
      v313 = (id)(v141 + 32);
      v315 = v142;
      v312 = v141;
      while (1)
      {
        if (v319)
        {
          v144 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v143, v141);
        }
        else
        {
          if (v143 >= *(_QWORD *)(v314 + 16))
            goto LABEL_169;
          v144 = *((id *)v313 + v143);
        }
        v145 = v144;
        v42 = __OFADD__(v143++, 1);
        if (v42)
          goto LABEL_165;
        v146 = type metadata accessor for DOCBrowserContainerController();
        v147 = swift_dynamicCastClass(v145, v146);
        if (v147)
        {
          v37 = v147 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
          swift_beginAccess(v147 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, v322, 0, 0);
          v148 = *(void **)v37;
          if (!*(_QWORD *)v37)
            goto LABEL_93;
          v149 = type metadata accessor for DOCItemCollectionViewController(0);
          v150 = swift_dynamicCastClass(v148, v149);
          if (!v150)
            goto LABEL_93;
          v152 = (void *)v150;
          v37 = v150 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
          Strong = swift_unknownObjectWeakLoadStrong(v150 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate, v151);
          *(_QWORD *)(v37 + 8) = &off_1005C9738;
          v154 = swift_unknownObjectWeakAssign(v37, v36);
          v156 = swift_unknownObjectWeakLoadStrong(v154, v155);
          if (v156)
          {
            v157 = v156;
            v158 = (id)v36;
            v37 = v145;
            v159 = v148;
            swift_unknownObjectRelease(v157);
            if (Strong)
              v160 = v157 == Strong;
            else
              v160 = 0;
            if (v160)
            {

              swift_unknownObjectRelease(Strong);
            }
            else
            {
LABEL_127:
              if (objc_msgSend(v152, "doc_hasAppearedOrIsAppearing"))
                sub_100014AAC();

              swift_unknownObjectRelease(Strong);
            }
            v142 = v315;
          }
          else
          {
            if (Strong)
            {
              v175 = (id)v36;
              v176 = v145;
              v177 = v148;
              goto LABEL_127;
            }
            v178 = v148;
          }

          LOBYTE(v16) = v318;
          goto LABEL_93;
        }
        v161 = type metadata accessor for DOCColumnViewController(0);
        v162 = swift_dynamicCastClass(v145, v161);
        if (v162)
          break;
LABEL_93:

        v28 = v316;
        if (v143 == v142)
          goto LABEL_180;
      }
      v37 = v162 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers;
      swift_beginAccess(v162 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, &v324, 0, 0);
      v16 = *(_QWORD *)v37;
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      if ((unint64_t)v16 >> 62)
      {
        if (v16 < 0)
          v37 = v16;
        else
          v37 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v16, 2);
        v179 = v145;
        v28 = _CocoaArrayWrapper.endIndex.getter(v37);
        if (v28)
          goto LABEL_112;
      }
      else
      {
        v28 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v16, 2);
        v163 = v145;
        if (v28)
        {
LABEL_112:
          if (v28 < 1)
            goto LABEL_170;
          for (k = 0; k != v28; ++k)
          {
            if ((v16 & 0xC000000000000001) != 0)
              v165 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v16);
            else
              v165 = (char *)*(id *)(v16 + 8 * k + 32);
            v166 = v165;
            v167 = (uint64_t *)&v165[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
            swift_beginAccess(&v165[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v323, 0, 0);
            v37 = *v167;
            if (v37
              && (v168 = type metadata accessor for DOCItemCollectionViewController(0),
                  (v169 = swift_dynamicCastClass(v37, v168)) != 0))
            {
              v170 = v169;
              v171 = (id)v37;

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v172);
              v37 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
              v173 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v37 >= v173 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v173 > 1, v37 + 1, 1);
              v174 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v170);
              specialized Array._endMutation()(v174);
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v16);
          v28 = aBlock;
          v36 = (uint64_t)v317;
          goto LABEL_138;
        }
      }
      swift_bridgeObjectRelease(v16);
      v28 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_138:
      swift_bridgeObjectRelease(v16);
      if ((unint64_t)v28 >> 62)
      {
        if (v28 < 0)
          v37 = v28;
        else
          v37 = v28 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v28);
        v16 = _CocoaArrayWrapper.endIndex.getter(v37);
        if (v16)
        {
LABEL_140:
          if (v16 < 1)
            goto LABEL_171;
          v180 = 0;
          while (2)
          {
            if ((v28 & 0xC000000000000001) != 0)
              v182 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v180, v28);
            else
              v182 = (char *)*(id *)(v28 + 8 * v180 + 32);
            v181 = v182;
            v37 = (uint64_t)&v182[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
            v184 = swift_unknownObjectWeakLoadStrong(&v182[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate], v183);
            *(_QWORD *)(v37 + 8) = &off_1005C9738;
            v185 = swift_unknownObjectWeakAssign(v37, v36);
            v187 = swift_unknownObjectWeakLoadStrong(v185, v186);
            if (v187)
            {
              v188 = (void *)v36;
              v189 = v187;
              v37 = v188;
              swift_unknownObjectRelease(v189);
              if (v184)
                v190 = v189 == v184;
              else
                v190 = 0;
              if (!v190)
              {
LABEL_156:
                if (objc_msgSend(v181, "doc_hasAppearedOrIsAppearing"))
                  sub_100014AAC();

                swift_unknownObjectRelease(v184);
                v36 = (uint64_t)v317;
                v181 = v317;
LABEL_143:

                if (v16 == ++v180)
                  goto LABEL_92;
                continue;
              }

              swift_unknownObjectRelease(v184);
              v181 = (id)v37;
            }
            else if (v184)
            {
              v191 = v317;
              goto LABEL_156;
            }
            break;
          }
          v36 = (uint64_t)v317;
          goto LABEL_143;
        }
      }
      else
      {
        v16 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v28);
        if (v16)
          goto LABEL_140;
      }
LABEL_92:

      swift_bridgeObjectRelease_n(v28, 2);
      LOBYTE(v16) = v318;
      v141 = v312;
      v142 = v315;
      goto LABEL_93;
    }
  }
LABEL_180:
  v8 = &off_10061F000;
  v193 = objc_msgSend((id)v36, "internalNavigationController", swift_bridgeObjectRelease(v141).n128_f64[0]);
  v194 = objc_msgSend(v193, "viewControllers");

  v31 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v195 = (void *)v36;
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v194, v31);

  v196 = objc_msgSend(v195, "hierarchyController");
  v197 = *(_QWORD *)&v196[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  v198 = v196[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation + 8];

  if ((v16 & 1) == 0)
  {
    v200 = 0;
    goto LABEL_200;
  }
  v199 = *(_QWORD *)(v28 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle);
  v200 = v199 != 2;
  if (v199 == 2)
    v201 = 1;
  else
    v201 = v198;
  if ((v201 & 1) == 0)
  {
    if (v197 != 2)
      goto LABEL_198;
    v202 = *v302;
    if (*v302 >> 62)
      goto LABEL_228;
    v203 = *(char **)((v202 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v302);
    if (!v203)
      goto LABEL_232;
LABEL_188:
    v204 = v203 - 1;
    if (__OFSUB__(v203, 1))
    {
      __break(1u);
    }
    else if ((v202 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v204 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v204 < *(_QWORD *)((v202 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v205 = (char *)*(id *)(v202 + 8 * (_QWORD)v204 + 32);
        goto LABEL_193;
      }
      __break(1u);
      goto LABEL_237;
    }
    v205 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v204, v202);
LABEL_193:
    v203 = v205;
    swift_bridgeObjectRelease(v202);
    if (!((unint64_t)v30 >> 62))
    {
      v206 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_195:
      v207 = v302;
      if (v206)
      {
        v208 = *v302;
        v209 = sub_1003C3C6C();
        v210 = swift_bridgeObjectRetain(v208);
        LOBYTE(v209) = Array<A>.hasAny(_:)(v210, v30, v31, v209);
        swift_bridgeObjectRelease(v208);
        if ((v209 & 1) == 0)
        {
          __chkstk_darwin(v211);
          v239 = v317;
          *(&v291 - 4) = v30;
          *(&v291 - 3) = (uint64_t)v239;
          *(&v291 - 2) = (uint64_t)v207;
          DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)(0, sub_1003C3CC4);
          v286 = objc_msgSend(v239, *((SEL *)v8 + 407), swift_bridgeObjectRelease(v30).n128_f64[0]);

          goto LABEL_212;
        }
      }

LABEL_198:
      v200 = 1;
      goto LABEL_200;
    }
LABEL_237:
    if (v30 < 0)
      v290 = v30;
    else
      v290 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v206 = _CocoaArrayWrapper.endIndex.getter(v290);
    swift_bridgeObjectRelease(v30);
    goto LABEL_195;
  }
LABEL_200:
  while (1)
  {
    *(_QWORD *)&v212 = swift_bridgeObjectRelease(v30).n128_u64[0];
    v213 = objc_msgSend(v317, *((SEL *)v8 + 407), v212);
    v30 = (uint64_t)objc_msgSend(v213, "transitionCoordinator");

    if (!v30)
      break;
    v215 = objc_msgSend((id)v30, "viewControllerForKey:", UITransitionContextToViewControllerKey);
    if (!v215
      || (v216 = v215,
          v217 = objc_opt_self(UIAlertController),
          v218 = swift_dynamicCastObjCClass(v216, v217),
          v216,
          !v218))
    {
      v214 = swift_unknownObjectRelease(v30);
      break;
    }
    v220 = *(void **)DOCLog.UI.unsafeMutableAddressor(v219);
    v221 = sub_10006922C((uint64_t *)&unk_100644560);
    v31 = swift_allocObject(v221, 112, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004D4CE0;
    v202 = v220;
    v222 = objc_msgSend(v317, "shortDebugID");
    v223 = static String._unconditionallyBridgeFromObjectiveC(_:)(v222);
    v225 = v224;

    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = sub_10006A638();
    *(_QWORD *)(v31 + 32) = v223;
    *(_QWORD *)(v31 + 40) = v225;
    v226 = objc_msgSend((id)v30, "transitionDuration");
    v228 = v227 * 1000.0;
    if ((~*(_QWORD *)&v228 & 0x7FF0000000000000) == 0)
    {
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
      goto LABEL_227;
    }
    v8 = v299;
    v229 = v298;
    if (v228 <= -9.22337204e18)
      goto LABEL_223;
    if (v228 >= 9.22337204e18)
      goto LABEL_224;
    *(_QWORD *)(v31 + 96) = &type metadata for Int;
    *(_QWORD *)(v31 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v31 + 72) = (uint64_t)v228;
    v230 = static os_log_type_t.default.getter(v226);
    os_log(_:dso:log:type:_:)("There's an alert controller transition in progress when updating VCs for self:(%@). Delaying by %d ms", 101, 2, &_mh_execute_header, v202, v230, v31);

    swift_bridgeObjectRelease(v31);
    v31 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v319 = (char *)static OS_dispatch_queue.main.getter(v31);
    static DispatchTime.now()(v319);
    objc_msgSend((id)v30, "transitionDuration");
    v232 = v231 * 1000.0;
    if ((~*(_QWORD *)&v232 & 0x7FF0000000000000) == 0)
      goto LABEL_225;
    v233 = v297;
    v31 = v296;
    v202 = v294;
    v234 = v293;
    v235 = v292;
    if (v232 <= -9.22337204e18)
      goto LABEL_226;
    if (v232 < 9.22337204e18)
    {
      *v292 = (uint64_t)v232;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v234 + 104))(v235, enum case for DispatchTimeInterval.milliseconds(_:), v202);
      + infix(_:_:)(v229, v235);
      (*(void (**)(_QWORD *, uint64_t))(v234 + 8))(v235, v202);
      v236 = v229;
      v237 = *(void (**)(int64_t, void *))(v31 + 8);
      v237(v236, v8);
      v238 = swift_allocObject(&unk_1005E5EA0, 24, 7);
      v239 = v317;
      swift_unknownObjectWeakInit(v238 + 16);
      v240 = swift_allocObject(&unk_1005E5EF0, 33, 7);
      v241 = v295;
      *(_QWORD *)(v240 + 16) = v238;
      *(_QWORD *)(v240 + 24) = v241;
      *(_BYTE *)(v240 + 32) = v200;
      v327 = sub_1003C3C60;
      v328 = v240;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v326 = sub_10004A82C;
      *((_QWORD *)&v326 + 1) = &unk_1005E5F08;
      v242 = _Block_copy(&aBlock);
      v243 = v328;
      swift_retain();
      v244 = swift_release(v243);
      static DispatchQoS.unspecified.getter(v244);
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      v245 = sub_10008BAAC();
      v246 = sub_10006922C((uint64_t *)&unk_100647540);
      v247 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v248 = v8;
      v249 = v305;
      v250 = v246;
      v251 = v307;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v250, v247, v307, v245);
      v252 = v319;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v233, v300, v249, v242);
      _Block_release(v242);
      swift_unknownObjectRelease(v30);

      v253 = v249;
      v254 = v300;
      (*(void (**)(char *, uint64_t))(v306 + 8))(v253, v251);
      (*(void (**)(char *, uint64_t))(v303 + 8))(v254, v304);
      v237((int64_t)v233, v248);
      goto LABEL_213;
    }
LABEL_227:
    __break(1u);
LABEL_228:
    if (v202 < 0)
      v289 = v202;
    else
      v289 = v202 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v202);
    v203 = (char *)_CocoaArrayWrapper.endIndex.getter(v289);
    if (v203)
      goto LABEL_188;
LABEL_232:
    swift_bridgeObjectRelease(v30);
    v200 = 1;
    v30 = v202;
  }
  v255 = *(void **)DOCLog.UI.unsafeMutableAddressor(v214);
  v256 = sub_10006922C((uint64_t *)&unk_100644560);
  v257 = swift_allocObject(v256, 72, 7);
  *(_OWORD *)(v257 + 16) = xmmword_1004D9670;
  v258 = v255;
  v259 = v317;
  v260 = objc_msgSend(v317, "shortDebugID");
  v261 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
  v263 = v262;

  *(_QWORD *)(v257 + 56) = &type metadata for String;
  v264 = sub_10006A638();
  *(_QWORD *)(v257 + 64) = v264;
  *(_QWORD *)(v257 + 32) = v261;
  *(_QWORD *)(v257 + 40) = v263;
  v265 = static os_log_type_t.default.getter(v264);
  os_log(_:dso:log:type:_:)("There's no transition in progress self:(%@). Setting VCs directly ", 66, 2, &_mh_execute_header, v258, v265, v257);

  v266 = objc_msgSend(v259, *((SEL *)v8 + 407), swift_bridgeObjectRelease(v257).n128_f64[0]);
  v267 = *v302;
  swift_bridgeObjectRetain(*v302);
  v268 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v266, "setViewControllers:animated:", v268, v200, swift_bridgeObjectRelease(v267).n128_f64[0]);

  v239 = v259;
LABEL_212:
  v254 = v300;
LABEL_213:
  objc_msgSend(v239, "setEditing:animated:", 0, 0);
  sub_100017600(0);
  v269 = (char *)objc_msgSend(v239, "dataSource");
  v270 = *(_QWORD *)&v269[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v270 == 2)
    objc_msgSend(v239, "establishFirstResponder");
  v271 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v272 = (void *)static OS_dispatch_queue.main.getter(v271);
  v273 = v298;
  static DispatchTime.now()(v272);
  v274 = v297;
  + infix(_:_:)(v273, 0.1);
  v275 = *(void (**)(int64_t, void *))(v296 + 8);
  v276 = v299;
  v275(v273, v299);
  v277 = swift_allocObject(&unk_1005E5EA0, 24, 7);
  swift_unknownObjectWeakInit(v277 + 16);
  v327 = sub_100084814;
  v328 = v277;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v326 = sub_10004A82C;
  *((_QWORD *)&v326 + 1) = &unk_1005E5EB8;
  v278 = _Block_copy(&aBlock);
  v279 = swift_release(v328);
  static DispatchQoS.unspecified.getter(v279);
  *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
  v280 = sub_10008BAAC();
  v281 = sub_10006922C((uint64_t *)&unk_100647540);
  v282 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v283 = v305;
  v284 = v281;
  v285 = v307;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v284, v282, v307, v280);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v274, v254, v283, v278);
  _Block_release(v278);

  (*(void (**)(char *, uint64_t))(v306 + 8))(v283, v285);
  (*(void (**)(char *, uint64_t))(v303 + 8))(v254, v304);
  v275((int64_t)v274, v276);
  swift_release(v295);
}

uint64_t sub_10005F27C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2)
  {
    v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers, v13, 0, 0);
    v1 = *v6;
    if (v1)
    {
      v7 = v1 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)v1 >> 62)
      {
        if (v1 < 0)
          v7 = v1;
        v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
        swift_bridgeObjectRetain(v1);
        v11 = _bridgeCocoaArray<A>(_:)(v7, v10);
        v12 = v1;
        v1 = v11;
        v9 = v12;
        goto LABEL_10;
      }
LABEL_9:
      v8 = swift_bridgeObjectRetain_n(v1, 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v9 = v1;
LABEL_10:
      swift_bridgeObjectRelease(v9);
      return v1;
    }
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000056, 0x800000010052F010, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 87, 0);
LABEL_17:
    __break(1u);
    return result;
  }
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (!v1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000004FLL, 0x800000010052F070, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 81, 0);
    goto LABEL_17;
  }
  v2 = v1 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v1 >> 62))
    goto LABEL_9;
  if (v1 < 0)
    v2 = v1;
  v3 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  swift_bridgeObjectRetain(v1);
  v4 = _bridgeCocoaArray<A>(_:)(v2, v3);
  swift_bridgeObjectRelease(v1);
  return v4;
}

double sub_10005F460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v42;
  uint64_t v43;

  v2 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for UIButton.Configuration(0, v5);
  v6 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10005F79C(a1, 0, 0);
  v10 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v9);

  v11 = DOCItemSortMode.DisplayableMode.compatibleSortModes.getter(a1);
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = *(unsigned __int8 *)(v11 + 32);
    swift_bridgeObjectRelease(v11);
    v13 = DOCItemSortDescriptor.init(type:isReversed:)(v12, 0);
    v15 = v14;
    v17 = v16;
    sub_1000531A4(a1, v13, v14, v16, v18 & 1);
    v20 = v19;
    swift_bridgeObjectRelease(v17);
    v21 = swift_bridgeObjectRelease(v15).n128_u64[0];
    if (v20)
    {
      v22 = sub_10004F2F0(0, (unint64_t *)&qword_100643F10, NSMutableAttributedString_ptr);
      v23 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v20);
      v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(v22), "attributedStringWithAttachment:", v23);

      v25 = *(id *)DOCUnicode.nonBreakingSpace.unsafeMutableAddressor();
      NSMutableAttributedString.append(_:)();

      objc_msgSend(v10, "appendAttributedString:", v24);
    }
  }
  else
  {
    v21 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  v26 = objc_msgSend(v10, "string", *(double *)&v21);
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30 = (void *)objc_opt_self(UIDevice);
  static UIButton.Configuration.borderless()(v31);
  v32 = sub_10005F79C(a1, v27, v29);
  AttributedString.init(_:)();
  v33 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v4, 0, 1, v33);
  UIButton.Configuration.attributedTitle.setter(v4);
  UIButton.Configuration.image.setter(0);
  UIButton.Configuration.imagePadding.setter(4.0);
  UIButton.Configuration.imagePlacement.setter(8);

  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  v34 = swift_bridgeObjectRelease(v29);
  UIButton.Configuration.contentInsets.getter(v34);
  v36 = v35;
  v38 = v37;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v43);
  objc_msgSend(v10, "size");
  v40 = v39;

  return v38 + v36 + v40;
}

id sub_10005F79C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  NSString *v20;
  void *v21;
  double v22;
  void *v23;
  id v24;
  id result;
  id v26;
  unint64_t v27;
  id v28;
  NSString v29;
  Class isa;
  id v31;
  _BYTE v33[72];

  v5 = a1;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (v5 == 6)
  {
    if (a3)
    {
      swift_bridgeObjectRetain(a3);
    }
    else
    {
      v11 = Logger.UI.unsafeMutableAddressor(v8);
      v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "ERROR: sortHeaderTitle(...) must be provided a displayableSortMode or a sectionTitle", v15, 2u);
        swift_slowDealloc(v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      a3 = 0xE000000000000000;
    }
  }
  else
  {
    if (a3)
      __asm { BR              X10 }
    DOCItemSortMode.DisplayableMode.localizedName.getter(a1);
    a3 = v16;
  }
  v17 = sub_10006922C((uint64_t *)&unk_1006424D0);
  inited = swift_initStackObject(v17, v33);
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v19 = qword_100641148;
  v20 = NSFontAttributeName;
  if (v19 != -1)
    swift_once(&qword_100641148, sub_1000834CC);
  v21 = (void *)qword_100654AC0;
  v22 = *(double *)&qword_100654AC8;
  v23 = (void *)objc_opt_self(UIFont);
  v24 = v21;
  result = objc_msgSend(v23, "_preferredFontForTextStyle:weight:", v24, v22);
  if (result)
  {
    v26 = result;

    *(_QWORD *)(inited + 64) = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v26;
    v27 = sub_100076434(inited);
    v28 = objc_allocWithZone((Class)NSMutableAttributedString);
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    type metadata accessor for Key(0);
    sub_10005FB20();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v31 = objc_msgSend(v28, "initWithString:attributes:", v29, isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

    return v31;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10005FB20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006424E0;
  if (!qword_1006424E0)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_1004D93A8, v1);
    atomic_store(result, (unint64_t *)&qword_1006424E0);
  }
  return result;
}

void sub_10005FB68(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  double v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  double v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  double v36;
  double v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  Class isa;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  int v61;
  int v62;

  v2 = v1;
  sub_10004A48C(a1);
  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel);
  objc_msgSend(v4, "setTextAlignment:", 0);
  v5 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel);
  objc_msgSend(v5, "setTextAlignment:", 0);
  v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_titleStackView);
  v7 = objc_msgSend(v6, "setAxis:", 1);
  v8 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x610))(v7);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x618))(v8);
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics + 152) & 1) == 0)
    objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setDecorationCornerRadius:", *(double *)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics + 144));
  v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = *(char **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailContainerView);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v59 = *(id *)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView);
  objc_msgSend(v59, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "addSubview:", v9);
  v13 = *(void **)&v10[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView] = v9;
  v14 = v9;

  objc_msgSend(a1, "addSubview:", v12);
  v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress);
  LODWORD(v16) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v16);
  objc_msgSend(v15, "setHidden:", 1);
  objc_msgSend(v6, "addArrangedSubview:", *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel));
  objc_msgSend(v6, "addArrangedSubview:", v15);
  v17 = objc_msgSend(v6, "addArrangedSubview:", *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel));
  (*(void (**)(id))((swift_isaMask & *v2) + 0x620))(v17);
  v18 = objc_msgSend(v12, "leadingAnchor");
  v19 = objc_msgSend(a1, "layoutMarginsGuide");
  v20 = objc_msgSend(v19, "leadingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  v22 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewLeadingConstraint;
  v23 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewLeadingConstraint);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewLeadingConstraint) = v21;

  v24 = *(void **)((char *)v2 + v22);
  type metadata accessor for UILayoutPriority(0);
  v26 = v25;
  v61 = 1065353216;
  v62 = 1148846080;
  v27 = sub_10005A360((unint64_t *)&unk_10064A060, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  v28 = v24;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v60, &v62, &v61, v26, v27);
  LODWORD(v29) = v60;
  objc_msgSend(v28, "setPriority:", v29);

  v30 = objc_msgSend(a1, "layoutMarginsGuide");
  v31 = objc_msgSend(v30, "trailingAnchor");

  v32 = objc_msgSend(v12, "trailingAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  v34 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTrailingConstraint;
  v35 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTrailingConstraint);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackViewTrailingConstraint) = v33;

  objc_msgSend(*(id *)((char *)v2 + v34), "setConstant:", 0.0);
  LODWORD(v36) = 1148846080;
  objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 0, v36);
  LODWORD(v37) = 1148846080;
  objc_msgSend(v11, "setContentHuggingPriority:forAxis:", 0, v37);
  v38 = objc_msgSend(v59, "widthAnchor");
  sub_1000601F4(v38, 0.0);

  v39 = objc_msgSend(v59, "heightAnchor");
  sub_1000601F4(v39, 0.0);

  v40 = (void *)objc_opt_self(NSLayoutConstraint);
  v41 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v42 = swift_allocObject(v41, 72, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1004D9710;
  v43 = *(void **)((char *)v2 + v22);
  v44 = *(void **)((char *)v2 + v34);
  *(_QWORD *)(v42 + 32) = v43;
  *(_QWORD *)(v42 + 40) = v44;
  v45 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateConstraint);
  v46 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeConstraint);
  *(_QWORD *)(v42 + 48) = v45;
  *(_QWORD *)(v42 + 56) = v46;
  v47 = *(void **)((char *)v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindConstraint);
  *(_QWORD *)(v42 + 64) = v47;
  v60 = v42;
  specialized Array._endMutation()(v42);
  v48 = v60;
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  v49 = v43;
  v50 = v44;
  v51 = v45;
  v52 = v46;
  v53 = v47;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v40, "activateConstraints:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

  if ((*((_BYTE *)v2 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isDummyCell) & 1) == 0)
  {
    v55 = objc_msgSend(v2, "separatorLayoutGuide");
    v56 = objc_msgSend(v55, "leadingAnchor");

    v57 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x608))();
    v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

    objc_msgSend(v58, "setActive:", 1);
  }
  (*(void (**)(void *))((swift_isaMask & *v2) + 0x628))(a1);
  sub_100059B20();
}

void sub_1000601F4(void *a1, double a2)
{
  uint64_t v2;
  id v3;
  _QWORD *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = objc_msgSend(a1, "constraintEqualToConstant:", *(double *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize) + a2);
  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints);
  swift_beginAccess(v4, v9, 33, 0);
  v5 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v7 >= v6 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
  v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
  specialized Array._endMutation()(v8);
  swift_endAccess(v9);
  objc_msgSend(v5, "setActive:", 1);

}

void sub_1000602CC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_10006031C(void *a1)
{
  uint64_t v1;

  return sub_100060324(a1, v1);
}

uint64_t sub_100060324(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  _BYTE v27[24];

  v4 = sub_10006922C((uint64_t *)&unk_10064A080);
  v5 = __chkstk_darwin(v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v27[-v8 - 8];
  v11 = type metadata accessor for UIButton.Configuration(0, v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2, v15);
  if (result)
  {
    v17 = (char *)result;
    UIButton.configuration.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
    {

      return sub_10026187C((uint64_t)v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v9, v11);
      sub_1000605F4(0, 1, v17[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance]);
      UIButton.Configuration.image.setter(v18);
      v19 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", *(_QWORD *)&v17[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle], *(_QWORD *)&v17[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics + 8]);
      UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v19);

      UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
      v20 = objc_msgSend(v17, "traitCollection");
      v21 = objc_msgSend(v20, "userInterfaceIdiom");

      if (v21 == (id)6)
        v22 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
      else
        v22 = *(id *)&v17[OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor];
      UIButton.Configuration.baseForegroundColor.setter(v22);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      v23 = UIButton.configuration.setter(v7);
      v24 = (void *)UIButton.Configuration.image.getter(v23);
      v25 = v24;
      if (v24)

      objc_msgSend(a1, "setHidden:", v25 == 0);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  return result;
}

void sub_1000605F4(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_100060648(uint64_t a1, char a2)
{
  id v3;
  NSString v4;
  id v5;
  id v6;
  void *v7;
  NSString v8;
  id v9;
  NSString v10;
  uint64_t result;
  void *v12;
  NSString v13;
  Swift::String v14;

  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(0x8000000100525A00);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0x8000000100525A00);
    v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

    if (!v5)
    {
      v12 = (void *)objc_opt_self(UIImage);
      swift_bridgeObjectRetain(0x8000000100525A00);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(0x8000000100525A00);
      v5 = objc_msgSend(v12, "_systemImageNamed:withConfiguration:", v13, 0);

      if (v5)
        goto LABEL_4;
      goto LABEL_9;
    }
LABEL_6:
    swift_bridgeObjectRelease(0x8000000100525A00);
    return (uint64_t)v5;
  }
  v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *(double *)&a1);
  swift_bridgeObjectRetain(0x8000000100525A00);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x8000000100525A00);
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v4, v3);

  if (v5)
    goto LABEL_6;
  v6 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *(double *)&a1);
  v7 = (void *)objc_opt_self(UIImage);
  swift_bridgeObjectRetain(0x8000000100525A00);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x8000000100525A00);
  v9 = objc_msgSend(v7, "_systemImageNamed:withConfiguration:", v8, v6);

  v5 = v9;
  if (v5)
  {
LABEL_4:
    swift_bridgeObjectRelease(0x8000000100525A00);

    return (uint64_t)v5;
  }
LABEL_9:
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(0xE000000000000000);
  v14._countAndFlagsBits = 0xD000000000000015;
  v14._object = (void *)0x8000000100525A00;
  String.append(_:)(v14);
  result = ((uint64_t (*)(const char *, uint64_t, uint64_t, unint64_t, unint64_t, const char *, uint64_t, uint64_t, uint64_t, _DWORD))_assertionFailure(_:_:file:line:flags:))("Fatal error", 11, 2, 0xD00000000000001BLL, 0x800000010052D590, "Files/DOCNodeStatusAppearance.swift", 35, 2, 65, 0);
  __break(1u);
  return result;
}

id sub_100060984(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "configuration"));
  v5 = objc_msgSend(v3, "isValidForConfiguration:", v4);

  return v5;
}

uint64_t DOCFileProviderSource.isValid(for:)(void *a1)
{
  char *v1;
  void *v3;
  uint64_t result;
  id v5;
  id v6;
  unsigned __int8 v7;
  int v8;
  int v9;
  id v10;
  unsigned int v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  char v34;
  objc_super v35;

  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (!v3)
    goto LABEL_12;
  if ((objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain], "isHiddenByProvider") & 1) != 0)return 0;
  v5 = v3;
  if ((objc_msgSend(a1, "supportsRemovableFileProviders") & 1) != 0)
  {

  }
  else
  {
    if (objc_msgSend(v5, "canDisconnect"))
    {
LABEL_24:

      return 0;
    }
    v32 = objc_msgSend(v5, "identifier");
    v33 = DOCProviderDomainIDIsExternalDevice(v32);

    if ((v33 & 1) != 0)
      return 0;
  }
  v5 = objc_msgSend(v5, "identifier");
  if (DOCProviderDomainIDIsExternalDevice(v5))
  {
    v6 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
    v7 = objc_msgSend(v6, "isUSBAccessAllowed");

    if ((v7 & 1) == 0)
      goto LABEL_24;
  }
  v8 = DOCProviderDomainIDIsWebDAV(v5);
  v9 = DOCProviderDomainIDIsSharedServerDomainID(v5);
  v10 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v11 = objc_msgSend(v10, "isNetworkDriveAllowed");

  if ((v8 | v9) == 1 && v11 == 0)
    return 0;
LABEL_12:
  v13 = objc_msgSend(v1, "identifier");
  v14 = DOCDocumentSourceIdentifierSMBFileProvider;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  if (v15 == v18 && v17 == v19)
  {

    swift_bridgeObjectRelease_n(v17, 2);
    return 0;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);

  swift_bridgeObjectRelease(v17);
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
  result = 0;
  if ((v22 & 1) != 0)
    return result;
  if ((objc_msgSend(v1, "isAvailableSystemWide", v23) & 1) == 0)
  {
    if (!v3)
      return 0;
    v24 = objc_msgSend(v3, "topLevelBundleIdentifier");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28 = objc_msgSend(a1, "hostIdentifier");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    if (v25 == v29 && v27 == v31)
    {
      swift_bridgeObjectRelease_n(v27, 2);
    }
    else
    {
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v29, v31, 0);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v27);
      result = 0;
      if ((v34 & 1) == 0)
        return result;
    }
  }
  if ((objc_msgSend(a1, "forPickingDocuments") & 1) != 0)
    return 1;
  v35.receiver = v1;
  v35.super_class = (Class)type metadata accessor for DOCFileProviderSource();
  return (uint64_t)objc_msgSendSuper2(&v35, "isValidForConfiguration:", a1);
}

uint64_t type metadata accessor for DOCFileProviderSource()
{
  return objc_opt_self(_TtC5Files21DOCFileProviderSource);
}

void sub_100060DF4()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  __objc2_prot *v11;

  sub_10013A618();
  v1 = objc_msgSend(v0, "fullDocumentManagerDelegate");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "hierarchyController");
    v4 = objc_msgSend(v0, "displayedRootLocation");
    objc_msgSend(v2, "fullDocumentManagerViewController:didUpdateHierarchy:displayedRootLocation:", v0, v3, v4);
    swift_unknownObjectRelease(v2);

  }
  v5 = objc_msgSend(v0, "delegate");
  if (v5)
  {
    v6 = v5;
    v11 = &OBJC_PROTOCOL___DOCFullDocumentManagerViewControllerDelegate;
    v7 = swift_dynamicCastObjCProtocolConditional(v5, 1, &v11);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = objc_msgSend(v0, "hierarchyController");
      v10 = objc_msgSend(v0, "displayedRootLocation");
      objc_msgSend(v8, "fullDocumentManagerViewController:didUpdateHierarchy:displayedRootLocation:", v0, v9, v10);
      swift_unknownObjectRelease(v6);

    }
    else
    {
      swift_unknownObjectRelease(v6);
    }
  }
}

void sub_100060F98()
{
  void *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  char *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v1 = v0;
  v2 = (char *)objc_msgSend(v0, "dataSource");
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  v4 = (char *)objc_msgSend(v0, "hierarchyController");
  v5 = v4;
  if (v3 != 2)
  {
    v9 = (uint64_t *)&v4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&v4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v18, 0, 0);
    v10 = *v9;
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v15 = v10;
      else
        v15 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (!v11)
        goto LABEL_11;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v10);
      if (!v11)
      {
LABEL_11:

        goto LABEL_30;
      }
    }
    v12 = v11 - 1;
    if (__OFSUB__(v11, 1))
    {
      __break(1u);
    }
    else if ((v10 & 0xC000000000000001) == 0)
    {
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v12 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v13 = *(id *)(v10 + 8 * v12 + 32);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_26;
    }
    specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
    goto LABEL_11;
  }
  v6 = (void *)sub_100038378();

  v7 = (char *)objc_msgSend(v1, "hierarchyController");
  v8 = v7;
  if (v6)
  {
    sub_100038378();

    return;
  }
  v14 = (uint64_t *)&v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v18, 0, 0);
  v10 = *v14;
  swift_bridgeObjectRetain(v10);

  if (!((unint64_t)v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_14;
LABEL_30:
    swift_bridgeObjectRelease(v10);
    return;
  }
LABEL_26:
  if (v10 < 0)
    v16 = v10;
  else
    v16 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v17 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v10);
  if (!v17)
    goto LABEL_30;
LABEL_14:
  if ((v10 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
    goto LABEL_30;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    *(id *)(v10 + 32);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_10006142C(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_100061478()
{
  char *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  NSString v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v22;

  v3 = DOCItemSortMode.DisplayableMode.localizedName.getter(0);
  *(_QWORD *)(v2 - 72) = v4;
  if (v1)
    v5 = 0xEC00000065746144;
  else
    v5 = 0x800000010050B9E0;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  if (*((_QWORD *)v0 + 1))
  {
    v22 = v3;
    sub_10006186C(*v0);
    v8 = *((_QWORD *)v0 + 1);
    if (v8)
    {
      v9 = v7 & 1;
      v10 = *((_QWORD *)v0 + 2);
      v11 = v0[24] & 1;
      v12 = *v0;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v10);
      v13 = DOCItemSortDescriptor.ascending.getter(v12, v8, v10, v11);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v8);
      if (v9)
      {
        if ((v13 & 1) != 0)
          v14 = 0xEA00000000007075;
        else
          v14 = 0xEC0000006E776F64;
        v15 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
        v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v14);
        v17 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v16, v15);

      }
      else
      {
        v17 = 0;
      }
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v18 = swift_allocObject(&unk_1005DA8E8, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16);
      v19 = v17;
      v20 = v6;
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22, *(_QWORD *)(v2 - 72), 0, 0, v17, 0, v6, 0, v21, 0, 0, v9, sub_1002D53F0, v18);
      __asm { BR              X10 }
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10006186C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1000618B8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10006194C + 4 * byte_1004E5A6D[a2]))(0x646573557473616CLL);
}

uint64_t sub_10006194C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x646573557473616CLL && v1 == 0xEC00000065746144)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x646573557473616CLL, 0xEC00000065746144, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEC00000065746144);
  return v2 & 1;
}

Class sub_100061A38()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  Class result;
  Class v6;
  UIMenuElementSize v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  __n128 v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  Class v35;
  Swift::String v36;
  Swift::String_optional v37;
  Swift::String v38;
  Swift::String v39;
  NSString v40;
  uint64_t v41;
  __n128 v42;
  void *v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  UIMenuElementSize v60;
  uint64_t v61;
  UIMenuElementSize preferredElementSize;
  Swift::String v63;
  UIMenu v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  Class v68;
  objc_class *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  Swift::OpaquePointer v73;
  Class v74;
  objc_class *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  UIMenuElementSize v80;
  Class v81;
  Swift::String v82;
  Swift::String_optional v83;
  Swift::String v84;
  Swift::String v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  Swift::String v89;
  objc_class *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  UIMenuElementSize v94;
  uint64_t v95;
  UIMenuElementSize v96;
  Swift::String v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  Swift::OpaquePointer v102;
  Swift::OpaquePointer v103;
  Swift::OpaquePointer v104;
  UIMenuElementSize v105[4];
  uint64_t v106;
  UIImage_optional v107;
  UIImage_optional v108;
  UIImage_optional v109;
  Swift::String v110;
  Swift::String v111;
  Swift::String v112;

  v1 = v0;
  v106 = (uint64_t)_swiftEmptyArrayStorage;
  if ((objc_msgSend(v0, "isEditing") & 1) != 0)
    goto LABEL_8;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPickerUI");
  if ((v3 & 1) != 0)
  {
    if (objc_msgSend(v2, "forPickingDocuments"))
    {
      v4 = sub_100038208();
      if (v4)
      {

        goto LABEL_6;
      }
    }
LABEL_8:
    v17 = 0;
    goto LABEL_9;
  }
LABEL_6:
  result = (Class)(id)_DocumentManagerBundle(v3);
  if (!result)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v6 = result;
  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v110._countAndFlagsBits = 0xD000000000000027;
  v110._object = (void *)0x8000000100524320;
  v8._countAndFlagsBits = 0x5B207463656C6553;
  v8._object = (void *)0xED00005D756E656DLL;
  v9.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v9.value._object = (void *)0xEB00000000656C62;
  v10._countAndFlagsBits = 0x7463656C6553;
  v10._object = (void *)0xE600000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v6, v10, v110);

  v12 = swift_allocObject(&unk_1005DA8E8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v14 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11._countAndFlagsBits, v11._object, 0, 0, 0, 0, 0, 0, v13, 0, 0, 0, sub_1002D506C, v12);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

  objc_msgSend(v14, "setImage:", v16);
  v105[3] = v7;
  v105[0] = (UIMenuElementSize)v14;
  v17 = v14;
  sub_100027934((uint64_t)v105);
  sub_100068588(v105);
LABEL_9:
  v18 = sub_100052F10();
  if ((objc_msgSend(v1, "isEditing") & 1) != 0
    || (v19 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration],
        (objc_msgSend(v19, "isFilesApp") & 1) == 0)
    || (objc_msgSend(v19, "isPickerUI") & 1) != 0
    || !objc_msgSend((id)objc_opt_self(VNDocumentCameraViewController), "isSupported"))
  {
    v27 = 0;
  }
  else
  {
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v20);

    if (qword_100640FA0 != -1)
      swift_once(&qword_100640FA0, sub_1000AD6D8);
    v23 = *((_QWORD *)&xmmword_10064CEA0 + 1);
    v22 = xmmword_10064CEA0;
    swift_bridgeObjectRetain(*((_QWORD *)&xmmword_10064CEA0 + 1));
    v24 = String._bridgeToObjectiveC()();
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v25 = swift_allocObject(&unk_1005DA9D8, 24, 7);
    swift_unknownObjectWeakInit(v25 + 16);
    v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22, v23, 0, 0, v21, 0, v24, 0, v26, 0, 0, 0, sub_10023D290, v25);
  }
  if ((objc_msgSend(v1, "isEditing") & 1) != 0
    || (v28 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration],
        v29 = (void *)objc_opt_self(DOCTabbedBrowserViewController),
        v30 = objc_msgSend(v28, "sceneIdentifier"),
        v31 = objc_msgSend(v29, "globalTabbedBrowserControllerForIdentifier:", v30),
        v30,
        !v31))
  {
LABEL_24:
    v43 = 0;
    v105[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
    if (!v17)
      goto LABEL_28;
    goto LABEL_25;
  }
  if ((sub_10003796C(v28) & 1) == 0)
  {

    goto LABEL_24;
  }
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v32);

  result = (Class)(id)_DocumentManagerBundle(v34);
  if (!result)
  {
LABEL_68:
    __break(1u);
    return result;
  }
  v35 = result;
  v36._countAndFlagsBits = 0xD000000000000011;
  v111._countAndFlagsBits = 0xD00000000000003FLL;
  v111._object = (void *)0x800000010051C640;
  v36._object = (void *)0x800000010051C620;
  v37.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v37.value._object = (void *)0xEB00000000656C62;
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v35, v38, v111);

  v40 = String._bridgeToObjectiveC()();
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v41 = swift_allocObject(&unk_1005DA9B0, 32, 7);
  *(_BYTE *)(v41 + 16) = 2;
  *(_QWORD *)(v41 + 24) = v31;
  v43 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v39._countAndFlagsBits, v39._object, 0, 0, v33, 0, v40, 0, v42, 0, 0, 0, sub_10023D260, v41);
  v105[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
  if (v17)
  {
LABEL_25:
    v44 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
    v46 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v45 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v46 >= v45 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
    v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
    specialized Array._endMutation()(v47);
  }
LABEL_28:
  if (v18)
  {
    v48 = v18;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
    v50 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v49 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v50 >= v49 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
    v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
    specialized Array._endMutation()(v51);
  }
  if (v27)
  {
    v52 = v27;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    v54 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v53 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v54 >= v53 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
    v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
    specialized Array._endMutation()(v55);
  }
  if (v43)
  {
    v56 = v43;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
    v58 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v57 = *(_QWORD *)((v105[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v58 >= v57 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
    v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
    specialized Array._endMutation()(v59);
  }
  v60 = v105[0];

  if ((unint64_t)v60 >> 62)
  {
    if (v60 < UIMenuElementSizeSmall)
      v98 = v60;
    else
      v98 = v60 & 0xFFFFFFFFFFFFFF8;
    v99 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v60);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v98, v99);
    swift_bridgeObjectRelease(v60);
  }
  else
  {
    v61 = swift_bridgeObjectRetain(v60);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v61);
    sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    preferredElementSize = v60;
  }
  swift_bridgeObjectRelease(v60);
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v63._countAndFlagsBits = 0;
  v63._object = (void *)0xE000000000000000;
  v107.value.super.isa = 0;
  v107.is_nil = 0;
  v64.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v63, (Swift::String_optional)0, v107, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v102).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64.super.super.isa);
  v66 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v65 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v66 >= v65 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
  v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64.super.super.isa);
  specialized Array._endMutation()(v67);
  v68 = sub_100054784(0, 1);
  if (v68)
  {
    v69 = v68;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v71 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v70 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v71 >= v70 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
    v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
    specialized Array._endMutation()(v72);

  }
  v73._rawValue = 0;
  v74 = sub_1000459A8(0, v73, 0);
  if (v74)
  {
    v75 = v74;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
    v77 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v76 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v77 >= v76 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
    v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
    specialized Array._endMutation()(v78);

  }
  v79 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v80 = swift_allocObject(v79, 40, 7);
  *(_OWORD *)(v80 + 16) = xmmword_1004D9B40;
  result = (Class)(id)_DocumentManagerBundle(v80);
  if (!result)
  {
    __break(1u);
    goto LABEL_67;
  }
  v81 = result;
  v112._countAndFlagsBits = 0xD000000000000025;
  v112._object = (void *)0x8000000100524370;
  v82._countAndFlagsBits = 0x74704F2077656956;
  v82._object = (void *)0xEC000000736E6F69;
  v83.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v83.value._object = (void *)0xEB00000000656C62;
  v84._countAndFlagsBits = 0x74704F2077656956;
  v84._object = (void *)0xEC000000736E6F69;
  v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v112);

  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v86 = swift_allocObject(&unk_1005DA8E8, 24, 7);
  swift_unknownObjectWeakInit(v86 + 16);
  v88 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v85._countAndFlagsBits, v85._object, 0, 0, 0, 0, 0, 0, v87, 0, 0, 0, sub_1002D5074, v86);
  *(_QWORD *)(v80 + 32) = v88;
  v105[0] = v80;
  specialized Array._endMutation()(v88);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  v108.value.super.isa = 0;
  v108.is_nil = 0;
  v90 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v89, (Swift::String_optional)0, v108, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v105[0], v103).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v90);
  v92 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v91 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v92 >= v91 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v91 > 1, v92 + 1, 1);
  v93 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v92, v90);
  specialized Array._endMutation()(v93);

  v94 = v106;
  if ((unint64_t)v106 >> 62)
  {
    if (v106 < 0)
      v100 = v106;
    else
      v100 = v106 & 0xFFFFFFFFFFFFFF8;
    v101 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v94);
    v96 = _bridgeCocoaArray<A>(_:)(v100, v101);
    swift_bridgeObjectRelease(v94);
  }
  else
  {
    v95 = swift_bridgeObjectRetain(v106);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v95);
    sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    v96 = v94;
  }
  swift_bridgeObjectRelease(v94);
  v97._countAndFlagsBits = 0;
  v97._object = (void *)0xE000000000000000;
  v109.value.super.isa = 0;
  v109.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v97, (Swift::String_optional)0, v109, 0, 0xFFFFFFFFFFFFFFFFLL, v96, v104).super.super.isa;
}

uint64_t sub_100062658(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100062698(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10007E830(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000626D8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 16))(a1, a2, *a3);
}

_QWORD *sub_1000626FC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100062704(a1, a2, a3, v3);
}

_QWORD *sub_100062704(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7, v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = _s5Files31DOCItemCollectionViewControllerC010collectionD0_11cellForNode2atSo012UICollectionD4CellCSo0kD0C_So7DOCNode_p10Foundation9IndexPathVtF_0(a1, a3, a2);

  }
  else
  {
    v12 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v13 = static os_log_type_t.fault.getter();
    v14 = sub_10006922C((uint64_t *)&unk_100644560);
    v15 = swift_allocObject(v14, 112, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D4CE0;
    ObjectType = swift_getObjectType(a3);
    v17 = DOCNode.nodeDescription.getter(ObjectType);
    v19 = v18;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    v20 = sub_10006A638();
    *(_QWORD *)(v15 + 64) = v20;
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v19;
    v21 = type metadata accessor for IndexPath(0);
    v22 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v23 = dispatch thunk of CustomStringConvertible.description.getter(v21, v22);
    *(_QWORD *)(v15 + 96) = &type metadata for String;
    *(_QWORD *)(v15 + 104) = v20;
    *(_QWORD *)(v15 + 72) = v23;
    *(_QWORD *)(v15 + 80) = v24;
    os_log(_:dso:log:type:_:)("Collection view asked for cell for item %@ at index path %@ but none was returned [self was deallocated].", 105, 2, &_mh_execute_header, v12, v13, v15);

    swift_bridgeObjectRelease(v15);
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  }
  return v11;
}

BOOL sub_100062898(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  return sub_100173AD4(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, (uint64_t *)&unk_100642710);
}

void sub_1000628C0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;

  if (a3 < 0)
  {
    v3 = (void *)(a3 & 0x7FFFFFFFFFFFFFFFLL);
    swift_release(a1);

  }
  else
  {

  }
}

void sub_1000628EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
  if (a1)
  {
    if (v4)
    {
      v5 = a1;
      sub_10004F2F0(0, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
      v6 = v4;
      v7 = v5;
      LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v6);

      if ((v5 & 1) != 0)
        return;
    }
  }
  else if (!v4)
  {
    return;
  }
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance) = 10;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory) = 2;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = 2;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 2;
  v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
  if ((v9 & 4) == 0)
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v9 | 4;
  v10 = *(void **)(v2 + v3);
  if (v10 && (objc_msgSend(v10, "isFinished") & 1) == 0)
  {
    v11 = *(void **)(v2 + v3);
    v12 = v11;
  }
  else
  {
    v11 = 0;
  }
  sub_1000787B4((uint64_t)v11);
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_10007BAFC())
  {
    v13 = *(_QWORD *)(v2 + v8);
    *(_QWORD *)(v2 + v8) = 0;
    v14 = objc_autoreleasePoolPush();
    sub_10006D2D4(v13, v2);
    objc_autoreleasePoolPop(v14);
  }
}

void sub_100062A70(void *a1)
{
  uint64_t v1;
  id *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  char v13[24];

  v3 = (id *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v13, 1, 0);
  v4 = (char *)*v3;
  if (*v3)
  {
    v5 = &v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate];
    *((_QWORD *)v5 + 1) = 0;
    swift_unknownObjectWeakAssign(v5, 0);
    v6 = qword_100641218;
    v7 = v4;
    if (v6 != -1)
      swift_once(&qword_100641218, sub_10009FD48);
    v8 = qword_100672F08;
    v9 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    *(_QWORD *)&v7[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = qword_100672F08;
    if (!*(_QWORD *)&v7[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
      && !sub_10007BAFC())
    {
      *(_QWORD *)&v7[v9] = 0;
      v10 = objc_autoreleasePoolPush();
      sub_10006D2D4(v8, (uint64_t)v7);
      objc_autoreleasePoolPop(v10);
    }

    if (*v3)
    {
      v11 = *v3;
      sub_10009FBA0();

      v4 = (char *)*v3;
    }
    else
    {
      v4 = 0;
    }
  }
  *v3 = a1;
  v12 = a1;

  sub_100062BAC();
}

void sub_100062BAC()
{
  char *v0;
  void **v1;
  char *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BYTE *v10;
  void *v11;
  _BYTE *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  NSString v20;
  NSString v21;
  char v22[24];

  v1 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v22, 0, 0);
  v2 = (char *)*v1;
  if (*v1)
  {
    v3 = &v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate];
    *((_QWORD *)v3 + 1) = &protocol witness table for DOCItemCollectionCell;
    swift_unknownObjectWeakAssign(v3, v0);
    v4 = qword_100641218;
    v5 = v2;
    v6 = v0;
    if (v4 != -1)
      swift_once(&qword_100641218, sub_10009FD48);
    v7 = qword_100672F08;
    v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    *(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = qword_100672F08;
    if (!*(_QWORD *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
      && !sub_10007BAFC())
    {
      *(_QWORD *)&v5[v8] = 0;
      v9 = objc_autoreleasePoolPush();
      sub_10006D2D4(v7, (uint64_t)v5);
      objc_autoreleasePoolPop(v9);
    }

    v10 = *v1;
    if (*v1)
    {
      v11 = *(void **)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
      if (v11)
      {
        v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress] = 1;
        v12 = v10;
        v13 = v11;
        v14 = *(void **)DOCLog.UI.unsafeMutableAddressor(v13);
        v15 = sub_10006922C((uint64_t *)&unk_100644560);
        v16 = swift_allocObject(v15, 72, 7);
        *(_OWORD *)(v16 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v16 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
        *(_QWORD *)(v16 + 64) = sub_1000E8324();
        *(_QWORD *)(v16 + 32) = v13;
        v17 = v13;
        v18 = v14;
        v19 = static os_log_type_t.default.getter(v18);
        os_log(_:dso:log:type:_:)("Progress: [CELL CONTENT] ADD fractionCompleted observer for: %{public}@", 71, 2, &_mh_execute_header, v18, v19, v16);

        swift_bridgeObjectRelease(v16);
        v20 = String._bridgeToObjectiveC()();
        objc_msgSend(v17, "addObserver:forKeyPath:options:context:", v12, v20, 1, &unk_100658630);

        v21 = String._bridgeToObjectiveC()();
        objc_msgSend(v17, "addObserver:forKeyPath:options:context:", v12, v21, 1, &unk_100658630);

      }
    }
  }
}

void sub_100062E3C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  int *v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = sub_10006922C((uint64_t *)&unk_100643900);
  __chkstk_darwin(v4);
  v70 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v73 = (uint64_t)&v63 - v7;
  __chkstk_darwin(v8);
  v69 = (char *)&v63 - v9;
  v10 = (int *)type metadata accessor for DOCFileEntity(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SiriVocabulary.DynamicTerm(0, v11);
  v67 = *(_QWORD *)(v14 - 8);
  v68 = v14;
  __chkstk_darwin(v14);
  v71 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a1);
  sub_1000875F4(a2, a1);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(a1).n128_u64[0];
  v74 = (uint64_t)_swiftEmptyArrayStorage;
  v25 = (uint64_t)_swiftEmptyArrayStorage;
  v26 = __OFSUB__(v23 >> 1, v21);
  v27 = (v23 >> 1) - v21;
  if (v27)
  {
    if ((v27 < 0) ^ v26 | (v27 == 0))
    {
LABEL_33:
      __break(1u);
      return;
    }
    v28 = (id *)(v19 + 8 * v21);
    do
    {
      v30 = objc_msgSend(*v28, "fpfs_fpItem", v24);
      if (v30)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v32 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v31 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v32 >= v31 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
        v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32);
        specialized Array._endMutation()(v29);
      }
      ++v28;
      --v27;
    }
    while (v27);
    v25 = v74;
  }
  swift_unknownObjectRelease(v17);
  if (!((unint64_t)v25 >> 62))
  {
    v33 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v33)
      goto LABEL_12;
LABEL_31:
    swift_bridgeObjectRelease(v25);
    return;
  }
  if (v25 < 0)
    v62 = v25;
  else
    v62 = v25 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v25);
  v33 = _CocoaArrayWrapper.endIndex.getter(v62);
  swift_bridgeObjectRelease(v25);
  if (!v33)
    goto LABEL_31;
LABEL_12:
  v74 = (uint64_t)_swiftEmptyArrayStorage;
  sub_100081874(0, v33 & ~(v33 >> 63), 0);
  if (v33 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  v34 = (_QWORD *)v74;
  v64 = v25 & 0xC000000000000001;
  v63 = sub_10006922C((uint64_t *)&unk_100643910);
  v35 = 0;
  v65 = v33;
  v66 = v25;
  do
  {
    if (v64)
      v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v25);
    else
      v36 = *(id *)(v25 + 8 * v35 + 32);
    v37 = v36;
    v38 = objc_msgSend(v36, "filename", v63);
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v40 = v39;

    v41 = v10[5];
    v42 = v37;
    *(_QWORD *)&v13[v41] = EntityProperty<>.init()();
    v43 = v10[6];
    *(_QWORD *)&v13[v43] = EntityProperty<>.init()();
    FileEntityIdentifier.init(fileProviderItemID:)(objc_msgSend(v42, "itemID"));
    v44 = v10;
    *(_QWORD *)&v13[v10[7]] = v42;
    v45 = v42;
    v46 = objc_msgSend(v45, "creationDate");
    if (v46)
    {
      v47 = v46;
      v48 = (uint64_t)v69;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v46);

      v49 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
    }
    else
    {
      v50 = type metadata accessor for Date(0);
      v48 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v69, 1, 1, v50);
    }
    v51 = v73;
    sub_1001114C4(v48, v73);
    EntityProperty.wrappedValue.setter(v51);
    sub_10011150C(v48);
    v52 = objc_msgSend(v45, "contentModificationDate");
    if (v52)
    {
      v53 = v52;
      v54 = (uint64_t)v70;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v52);

      v55 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
    }
    else
    {
      v56 = type metadata accessor for Date(0);
      v54 = (uint64_t)v70;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v70, 1, 1, v56);
    }
    v10 = v44;
    v57 = v73;
    sub_1001114C4(v54, v73);
    EntityProperty.wrappedValue.setter(v57);
    sub_10011150C(v54);

    v58 = sub_100063368();
    v59 = v71;
    SiriVocabulary.DynamicTerm.init<A>(_:entity:)(v72, v40, v13, v44, v58);

    v74 = (uint64_t)v34;
    v61 = v34[2];
    v60 = v34[3];
    if (v61 >= v60 >> 1)
    {
      sub_100081874(v60 > 1, v61 + 1, 1);
      v59 = v71;
      v34 = (_QWORD *)v74;
    }
    ++v35;
    v34[2] = v61 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))((unint64_t)v34+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72) * v61, v59, v68);
    v25 = v66;
  }
  while (v65 != v35);
  swift_bridgeObjectRelease(v66);
}

unint64_t sub_100063368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100643D40;
  if (!qword_100643D40)
  {
    v1 = type metadata accessor for DOCFileEntity(255);
    result = swift_getWitnessTable(&unk_1004DAF80, v1);
    atomic_store(result, (unint64_t *)&qword_100643D40);
  }
  return result;
}

void sub_100063478(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *, _QWORD);
  unint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  _QWORD aBlock[5];
  uint64_t v43;
  char v44[24];
  uint64_t v45[6];

  v3 = v2;
  sub_100064B54();
  if ((v7 & 1) != 0 || (sub_100063820(v6) & 1) != 0)
  {
    v8 = type metadata accessor for DOCItemCollectionViewSectionHeader();
    v9 = swift_dynamicCastClass(a1, v8);
    if (v9)
    {
      v10 = v9;
      v41 = a1;
      if (IndexPath.count.getter(v41) == 2)
      {
        v11 = IndexPath.section.getter(2);
      }
      else
      {
        v12 = type metadata accessor for IndexPath(0);
        v13 = sub_10005A360(&qword_100646CC0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        dispatch thunk of Collection.startIndex.getter(v12);
        dispatch thunk of Collection.endIndex.getter(aBlock, v12, v13);
        if (v45[0] == aBlock[0])
        {
LABEL_17:
          __break(1u);
          return;
        }
        v14 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(aBlock, v45, v12, v13);
        v11 = *v15;
        v14(aBlock, 0);
      }
      if ((v11 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
        if (v11 < *(_QWORD *)(v16 + 16))
        {
          v37 = a2;
          v17 = (_QWORD *)(v16 + 40 * v11);
          v18 = v17[4];
          v19 = v17[5];
          v20 = v17[6];
          v21 = v17[7];
          v22 = v17[8];
          v23 = (uint64_t *)(v10 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection);
          sub_100070EDC(v10 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection, (uint64_t)v45, &qword_100646CC8);
          v24 = (char *)v10;
          v25 = *v23;
          v26 = v23[1];
          v27 = v23[2];
          v39 = v23[3];
          v40 = v24;
          v38 = v23[4];
          *v23 = v18;
          v23[1] = v19;
          v23[2] = v20;
          v23[3] = v21;
          v23[4] = v22;
          swift_bridgeObjectRetain_n(v19, 3);
          swift_bridgeObjectRetain_n(v21, 3);
          swift_retain_n(v22, 3);
          sub_1001D0FDC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001BC194);
          v28 = v40;
          sub_1001D09CC(v25, v26, v27, v39, v38);
          sub_100423F04(v45);
          swift_release(v22);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v19);
          sub_1001D0FDC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D09CC);
          v29 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
          swift_beginAccess(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v44, 0, 0);
          if (*v29)
            goto LABEL_12;
          v30 = *(_BYTE *)(v22 + 24);
          v31 = (void *)objc_opt_self(UIView);
          v32 = swift_allocObject(&unk_1005CE4D8, 25, 7);
          *(_QWORD *)(v32 + 16) = v40;
          *(_BYTE *)(v32 + 24) = v30;
          v33 = swift_allocObject(&unk_1005CE500, 32, 7);
          *(_QWORD *)(v33 + 16) = sub_1001D25E4;
          *(_QWORD *)(v33 + 24) = v32;
          aBlock[4] = sub_10010DF60;
          v43 = v33;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10006655C;
          aBlock[3] = &unk_1005CE518;
          v34 = _Block_copy(aBlock);
          v35 = v43;
          v36 = v41;
          swift_retain();
          v28 = v40;
          swift_release(v35);
          objc_msgSend(v31, "performWithoutAnimation:", v34, v37);
          _Block_release(v34);
          LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(v33, "", 114, 384, 40, 1);
          swift_release(v32);
          swift_release(v33);
          if ((v34 & 1) == 0)
          {
LABEL_12:
            sub_10017DEA0(v28, v37);

            swift_release(v22);
            swift_bridgeObjectRelease(v21);
            swift_bridgeObjectRelease(v19);
            return;
          }
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
  }
}

uint64_t sub_100063820(__n128 a1)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  Swift::Bool Document;
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  char v19;
  char v20[24];

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v13 = v4;
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    a1 = swift_bridgeObjectRelease(v4);
    if (v14 != 1)
    {
LABEL_18:
      v11 = 1;
      if (!DOCDeviceIsPad(a1))
        goto LABEL_22;
      goto LABEL_19;
    }
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_18;
  }
  v5 = *((_QWORD *)v3 + 1);
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*((_QWORD *)v3 + 1));
    if (v6)
      goto LABEL_5;
    goto LABEL_17;
  }
  if (v5 < 0)
    v15 = *((_QWORD *)v3 + 1);
  else
    v15 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*((_QWORD *)v3 + 1));
  result = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!result)
  {
LABEL_17:
    a1 = swift_bridgeObjectRelease(v5);
    goto LABEL_18;
  }
LABEL_5:
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(_QWORD *)(v5 + 32);
    swift_unknownObjectRetain(v8);
    swift_bridgeObjectRelease(v5);
    swift_getObjectType(v8, v9);
    Document = DOCNode.isCreateDocumentSentinel()();
    swift_unknownObjectRelease(v8);
    v11 = !Document;
    if (!DOCDeviceIsPad(v12))
      goto LABEL_22;
LABEL_19:
    v16 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v20, 0, 0);
    if (*(_QWORD *)v16 == 1 && sub_10017CC5C())
    {
      v17 = objc_msgSend(v2, "traitCollection");
      v18 = objc_msgSend(v17, "preferredContentSizeCategory");

      LOBYTE(v17) = UIContentSizeCategory.isAccessibilityCategory.getter(v18);
      v19 = (v17 ^ 1) & v11;
      return v19 & 1;
    }
LABEL_22:
    v19 = 0;
    return v19 & 1;
  }
  __break(1u);
  return result;
}

void DOCItemCollectionViewController.items.setter(unint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  __int128 v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  _BYTE *v45;
  char v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  id *v56;
  id v57;
  id *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  __int16 v70;
  __int16 v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t ObjectType;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t i;
  uint64_t v131;
  char *v132;
  void *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  unint64_t v141;
  char v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  char *v156;
  _QWORD *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  _BYTE *v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  char v172[24];
  char v173[24];
  _QWORD v174[5];
  char v175[16];
  char v176[8];
  char v177[8];
  uint64_t v178[5];

  v165 = a1;
  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  v3 = __chkstk_darwin(v2);
  v159 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v158 = (char *)&v153 - v6;
  v7 = __chkstk_darwin(v5);
  v160 = (char *)&v153 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v153 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v153 - v12;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v153 - v19;
  v21 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  v163 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  v166 = v15;
  if (v23)
  {
    v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v24, v172, 0, 0);
    sub_1000271D4(v24, (uint64_t)v13, (uint64_t *)&unk_100642710);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v25 = v166;
      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v20, v13, v14);
      swift_bridgeObjectRetain(v22);
      v26 = sub_10017A754((uint64_t)v20, 0);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v14);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  swift_bridgeObjectRetain(v22);
  sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_100642710);
  v26 = 0;
LABEL_6:
  v27 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode], v177, 0, 0);
  v161 = v27;
  sub_1000271D4(v27, (uint64_t)v11, (uint64_t *)&unk_100642710);
  v28 = v166;
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v166 + 48))(v11, 1, v14);
  v167 = v1;
  v30 = v165;
  v169 = v26;
  v162 = v22;
  v164 = v14;
  if (v29 == 1)
  {
    sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_100642710);
    v170 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v18, v11, v14);
    v170 = sub_10017A754((uint64_t)v18, 0);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v14);
  }
  v31 = (_QWORD *)*v21;
  v32 = *(_QWORD *)(*v21 + 16);
  v168 = v21;
  if (v32)
  {
    v33 = (char *)v21[1];
    v34 = (_QWORD *)v21[2];
    swift_bridgeObjectRetain_n(v31, 2);
    v156 = v33;
    swift_bridgeObjectRetain(v33);
    v155 = v34;
    swift_bridgeObjectRetain(v34);
    v157 = v31;
    v35 = v31 + 7;
    v36 = _swiftEmptyArrayStorage;
    do
    {
      if (*(unsigned __int8 *)(v35[1] + 24) != *(unsigned __int8 *)(v35[1] + 25))
      {
        v42 = *(v35 - 3);
        v41 = *(v35 - 2);
        v43 = *(v35 - 1);
        v171 = *(_OWORD *)v35;
        swift_bridgeObjectRetain(v41);
        swift_bridgeObjectRetain(v171);
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
        v178[0] = (uint64_t)v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000817C8(0, v36[2] + 1, 1);
          v36 = (_QWORD *)v178[0];
        }
        v38 = v36[2];
        v37 = v36[3];
        v39 = v171;
        if (v38 >= v37 >> 1)
        {
          sub_1000817C8(v37 > 1, v38 + 1, 1);
          v39 = v171;
          v36 = (_QWORD *)v178[0];
        }
        v36[2] = v38 + 1;
        v40 = &v36[5 * v38];
        v40[4] = v42;
        v40[5] = v41;
        v40[6] = v43;
        *(_OWORD *)(v40 + 7) = v39;
      }
      v35 += 5;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease(v155);
    swift_bridgeObjectRelease(v156);
    swift_bridgeObjectRelease_n(v157, 2);
    v21 = v168;
    v30 = v165;
  }
  else
  {
    v36 = _swiftEmptyArrayStorage;
  }
  v45 = v167;
  sub_100064B54();
  if ((v46 & 1) == 0)
  {
    v49 = *(_QWORD *)&v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v49)
    {
      if ((objc_msgSend(*(id *)&v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection], "isGathering") & 1) != 0)v50 = 0;
      else
        v50 = v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton];
      if ((*(_BYTE *)(v49 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
      {
        v56 = (id *)FISentinelNode.createSentinelNode.unsafeMutableAddressor();
        swift_beginAccess(v56, v176, 0, 0);
        v57 = *v56;
      }
      else
      {
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v57 = (id)static FPItem.createDocumentSentinelItem()();
      }
      v60 = (uint64_t)v57;
      v61 = v30;
      v62 = 8;
      v63 = 0;
      v64 = v50;
      goto LABEL_40;
    }
    __break(1u);
LABEL_128:
    __break(1u);
    return;
  }
  v47 = *(void **)&v45[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if ((objc_msgSend(v47, "isFilesApp") & 1) != 0)
  {
    v48 = 0;
  }
  else
  {
    v51 = objc_msgSend(v47, "recentDocumentsContentTypes");
    v52 = type metadata accessor for UTType(0);
    v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v52);

  }
  v53 = *(_QWORD *)&v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v53)
    goto LABEL_128;
  v54 = v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior];
  if ((objc_msgSend(*(id *)&v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection], "isGathering") & 1) != 0)v55 = 0;
  else
    v55 = v45[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton];
  if ((*(_BYTE *)(v53 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
    v58 = (id *)FISentinelNode.createSentinelNode.unsafeMutableAddressor();
    swift_beginAccess(v58, v176, 0, 0);
    v59 = *v58;
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v59 = (id)static FPItem.createDocumentSentinelItem()();
  }
  v60 = (uint64_t)v59;
  v61 = v30;
  v62 = v54;
  v63 = v48;
  v64 = v55;
LABEL_40:
  v65 = sub_100067220(v61, v62, v63, v64, v60);
  v67 = v66;
  v69 = v68;
  v71 = v70;
  swift_bridgeObjectRelease(v30);
  v72 = (_QWORD *)*v21;
  v73 = (_QWORD *)v21[1];
  v74 = (_QWORD *)v21[2];
  *v21 = v65;
  v21[1] = (uint64_t)v67;
  v21[2] = (uint64_t)v69;
  *((_BYTE *)v21 + 24) = v71;
  *((_BYTE *)v21 + 25) = HIBYTE(v71) & 1;
  swift_bridgeObjectRetain(v65);
  v75 = swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v75);
  swift_bridgeObjectRelease(v65);
  swift_bridgeObjectRelease(v74);
  swift_bridgeObjectRelease(v73);
  swift_bridgeObjectRelease(v72);
  sub_1000650E8((uint64_t)v36, (_QWORD *)*v21);
  swift_release(v36);
  if (v169)
  {
    v76 = *(char **)&v45[v163];
    if (!v76)
      goto LABEL_68;
    v77 = (_QWORD *)*v21;
    v154 = *(_QWORD *)(*v21 + 16);
    if (!v154)
    {
      v101 = v169;
      swift_unknownObjectRetain(v169);
      v102 = v76;
      v100 = 1;
      v80 = (uint64_t)v160;
      goto LABEL_66;
    }
    v157 = v77 + 4;
    swift_unknownObjectRetain(v169);
    v78 = v76;
    swift_bridgeObjectRetain(v77);
    v79 = 0;
    v156 = v76;
    v155 = v77;
    while (1)
    {
      if (v79 >= v77[2])
        goto LABEL_121;
      v81 = &v157[5 * v79];
      v82 = v81[1];
      v83 = v81[3];
      v84 = v81[4];
      swift_beginAccess(v84 + 16, v173, 0, 0);
      v85 = *(_QWORD *)(v84 + 16);
      *(_QWORD *)&v171 = v83;
      v165 = v82;
      if ((unint64_t)v85 >> 62)
      {
        if (v85 < 0)
          v95 = v85;
        else
          v95 = v85 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v85, 2);
        swift_bridgeObjectRetain(v82);
        swift_bridgeObjectRetain(v83);
        swift_retain();
        v86 = _CocoaArrayWrapper.endIndex.getter(v95);
        swift_bridgeObjectRelease(v85);
        if (v86)
        {
LABEL_48:
          ObjectType = swift_getObjectType(v169, v87);
          v89 = 0;
          while (1)
          {
            if ((v85 & 0xC000000000000001) != 0)
            {
              v91 = specialized _ArrayBuffer._getElementSlowPath(_:)(v89, v85);
              v92 = v89 + 1;
              if (__OFADD__(v89, 1))
                goto LABEL_116;
            }
            else
            {
              v91 = *(_QWORD *)(v85 + 8 * v89 + 32);
              swift_unknownObjectRetain(v91);
              v92 = v89 + 1;
              if (__OFADD__(v89, 1))
              {
LABEL_116:
                __break(1u);
                goto LABEL_117;
              }
            }
            v93 = swift_getObjectType(v91, v90);
            DOCNode.identifierKey.getter(v178, v93);
            DOCNode.identifierKey.getter(v174, ObjectType);
            v94 = static AnyHashable.== infix(_:_:)(v178, v174);
            sub_100067748((uint64_t)v174);
            sub_100067748((uint64_t)v178);
            if ((v94 & 1) != 0)
              break;
            swift_unknownObjectRelease(v91);
            ++v89;
            if (v92 == v86)
              goto LABEL_44;
          }
          swift_bridgeObjectRelease(v155);
          swift_bridgeObjectRelease(v85);
          v80 = (uint64_t)v160;
          IndexPath.init(item:section:)(v89, v79);
          swift_release(v84);
          swift_bridgeObjectRelease(v171);
          swift_bridgeObjectRelease(v165);
          swift_unknownObjectRelease(v91);
          v100 = 0;
          v45 = v167;
          v21 = v168;
          v101 = v169;
          v76 = v156;
LABEL_66:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v166 + 56))(v80, v100, 1, v164);
          v98 = *(_QWORD *)&v76[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState];
          v103 = v98 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
          swift_beginAccess(v98 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v178, 33, 0);
          swift_retain();
          sub_10008BB40(v80, v103, (uint64_t *)&unk_100642710);
          swift_endAccess(v178);
          swift_unknownObjectRelease(v101);
LABEL_67:

          swift_release(v98);
          goto LABEL_68;
        }
      }
      else
      {
        v86 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v85);
        swift_bridgeObjectRetain(v82);
        swift_bridgeObjectRetain(v83);
        swift_retain();
        if (v86)
          goto LABEL_48;
      }
LABEL_44:
      ++v79;
      swift_bridgeObjectRelease(v165);
      swift_bridgeObjectRelease(v85);
      swift_release(v84);
      swift_bridgeObjectRelease(v171);
      v21 = v168;
      v80 = (uint64_t)v160;
      v76 = v156;
      v77 = v155;
      if (v79 == v154)
      {
        swift_bridgeObjectRelease(v155);
        v100 = 1;
        v45 = v167;
        v101 = v169;
        goto LABEL_66;
      }
    }
  }
  v96 = *(char **)&v45[v163];
  if (v96)
  {
    v97 = (uint64_t)v158;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v158, 1, 1, v164);
    v98 = *(_QWORD *)&v96[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState];
    v99 = v98 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v98 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v178, 33, 0);
    v76 = v96;
    swift_retain();
    sub_10008BB40(v97, v99, (uint64_t *)&unk_100642710);
    swift_endAccess(v178);
    goto LABEL_67;
  }
LABEL_68:
  if (v170)
  {
    v104 = (char *)*v21;
    v157 = *(_QWORD **)(*v21 + 16);
    if (v157)
    {
      v160 = v104 + 32;
      swift_unknownObjectRetain(v170);
      swift_bridgeObjectRetain(v104);
      v105 = 0;
      v158 = v104;
      do
      {
        if (v105 >= *((_QWORD *)v104 + 2))
          goto LABEL_120;
        v106 = &v160[40 * v105];
        v107 = *((_QWORD *)v106 + 1);
        v108 = *((_QWORD *)v106 + 3);
        v109 = *((_QWORD *)v106 + 4);
        swift_beginAccess(v109 + 16, v175, 0, 0);
        v110 = *(_QWORD *)(v109 + 16);
        *(_QWORD *)&v171 = v108;
        v165 = v107;
        if ((unint64_t)v110 >> 62)
        {
          if (v110 < 0)
            v120 = v110;
          else
            v120 = v110 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v110, 2);
          swift_bridgeObjectRetain(v107);
          swift_bridgeObjectRetain(v108);
          swift_retain();
          v111 = _CocoaArrayWrapper.endIndex.getter(v120);
          swift_bridgeObjectRelease(v110);
          if (v111)
          {
LABEL_75:
            v113 = swift_getObjectType(v170, v112);
            v114 = 0;
            do
            {
              if ((v110 & 0xC000000000000001) != 0)
              {
                v116 = specialized _ArrayBuffer._getElementSlowPath(_:)(v114, v110);
                v117 = v114 + 1;
                if (__OFADD__(v114, 1))
                  goto LABEL_115;
              }
              else
              {
                v116 = *(_QWORD *)(v110 + 8 * v114 + 32);
                swift_unknownObjectRetain(v116);
                v117 = v114 + 1;
                if (__OFADD__(v114, 1))
                {
LABEL_115:
                  __break(1u);
                  goto LABEL_116;
                }
              }
              v118 = swift_getObjectType(v116, v115);
              DOCNode.identifierKey.getter(v178, v118);
              DOCNode.identifierKey.getter(v174, v113);
              v119 = static AnyHashable.== infix(_:_:)(v178, v174);
              sub_100067748((uint64_t)v174);
              sub_100067748((uint64_t)v178);
              if ((v119 & 1) != 0)
              {
                swift_bridgeObjectRelease(v158);
                swift_bridgeObjectRelease(v110);
                v123 = (uint64_t)v159;
                IndexPath.init(item:section:)(v114, v105);
                swift_release(v109);
                swift_bridgeObjectRelease(v171);
                swift_bridgeObjectRelease(v165);
                swift_unknownObjectRelease(v116);
                v124 = 0;
                v45 = v167;
                v21 = v168;
                v125 = v170;
                goto LABEL_93;
              }
              swift_unknownObjectRelease(v116);
              ++v114;
            }
            while (v117 != v111);
          }
        }
        else
        {
          v111 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v110);
          swift_bridgeObjectRetain(v107);
          swift_bridgeObjectRetain(v108);
          swift_retain();
          if (v111)
            goto LABEL_75;
        }
        ++v105;
        swift_bridgeObjectRelease(v165);
        swift_bridgeObjectRelease(v110);
        swift_release(v109);
        swift_bridgeObjectRelease(v171);
        v45 = v167;
        v21 = v168;
        v104 = v158;
      }
      while ((_QWORD *)v105 != v157);
      swift_bridgeObjectRelease(v158);
      v124 = 1;
      v125 = v170;
    }
    else
    {
      v125 = v170;
      swift_unknownObjectRetain(v170);
      v124 = 1;
    }
    v123 = (uint64_t)v159;
LABEL_93:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v166 + 56))(v123, v124, 1, v164);
    v126 = v161;
    swift_beginAccess(v161, v178, 33, 0);
    sub_10008BB40(v123, v126, (uint64_t *)&unk_100642710);
    swift_endAccess(v178);
    swift_unknownObjectRelease(v125);
  }
  else
  {
    v121 = (uint64_t)v158;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v158, 1, 1, v164);
    v122 = v161;
    swift_beginAccess(v161, v178, 33, 0);
    sub_10008BB40(v121, v122, (uint64_t *)&unk_100642710);
    swift_endAccess(v178);
  }
  v127 = v21[1];
  swift_bridgeObjectRetain(v127);
  v128 = v162;
  sub_100064F80(v162, v127);
  swift_bridgeObjectRelease(v127);
  objc_msgSend(v45, "docSetNeedsUpdateContentUnavailableConfiguration", swift_bridgeObjectRelease(v128).n128_f64[0]);
  sub_100064B54();
  if ((v129 & 1) != 0 && *(_QWORD *)&v45[v163])
  {
    v166 = (uint64_t)sub_100033CA4();
    if ((unint64_t)v166 >> 62)
      goto LABEL_122;
    for (i = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v152))
    {
      v165 = v166 & 0xC000000000000001;
      v131 = 4;
      v164 = i;
      while (1)
      {
        v132 = v165
             ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v131 - 4, v166)
             : (char *)*(id *)(v166 + 8 * v131);
        v133 = v132;
        if (__OFADD__(v131 - 4, 1))
          break;
        v134 = (uint64_t *)&v132[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
        v135 = *(_QWORD *)&v132[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                              + 8];
        if (!v135)
        {

          goto LABEL_111;
        }
        v136 = *v134;
        v137 = v134[2];
        v138 = v134[3];
        v139 = v134[4];
        v140 = (_QWORD *)*v168;
        v141 = sub_1001BC0B0(*v134, *(_QWORD *)&v132[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection+ 8], (_QWORD *)*v168);
        if ((v142 & 1) != 0)
        {
          sub_1001BC194(v136, v135, v137, v138, v139);

          swift_release(v139);
          swift_bridgeObjectRelease(v138);
          swift_bridgeObjectRelease(v135);
          goto LABEL_111;
        }
        if ((v141 & 0x8000000000000000) != 0)
          goto LABEL_118;
        if (v141 >= v140[2])
          goto LABEL_119;
        v143 = &v140[5 * v141];
        v144 = v143[4];
        v145 = v143[5];
        *(_QWORD *)&v171 = v131 - 3;
        v146 = (char *)v133;
        v147 = v143[6];
        v148 = v143[7];
        v149 = v143[8];
        v178[0] = v144;
        v178[1] = v145;
        v178[2] = v147;
        v178[3] = v148;
        v178[4] = v149;
        sub_1001BC194(v136, v135, v137, v138, v139);
        swift_bridgeObjectRetain(v145);
        swift_bridgeObjectRetain(v148);
        swift_retain();
        sub_100198014(v146, v178);
        v150 = v149;
        v151 = v164;
        swift_release(v150);
        swift_bridgeObjectRelease(v148);
        swift_bridgeObjectRelease(v145);

        swift_release(v139);
        swift_bridgeObjectRelease(v138);
        swift_bridgeObjectRelease(v135);
        ++v131;
        if ((_QWORD)v171 == v151)
          goto LABEL_111;
      }
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      if (v166 < 0)
        v152 = v166;
      else
        v152 = v166 & 0xFFFFFFFFFFFFFF8;
    }
LABEL_111:
    swift_bridgeObjectRelease(v166);
  }
  swift_unknownObjectRelease(v169);
  swift_unknownObjectRelease(v170);
}

void sub_100064B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0
      || (v3 = *(id *)v2,
          v4 = objc_msgSend(v3, "doc_displaysSearchResults"),
          v3,
          (v4 & 1) == 0))
    {
      __asm { BR              X9 }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100064F80(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  char v20[24];

  v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails];
  result = swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails], v20, 0, 0);
  if ((*v5 & 1) != 0)
    return result;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v17);
    result = swift_bridgeObjectRelease(a1);
    if (!((unint64_t)a2 >> 62))
      goto LABEL_4;
LABEL_13:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    result = swift_bridgeObjectRelease(a2);
    goto LABEL_5;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)a2 >> 62)
    goto LABEL_13;
LABEL_4:
  v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  if ((v8 == 0) == (v9 != 0))
  {
    v10 = &v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
    result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting], v7);
    if (result)
    {
      v12 = result;
      v13 = *((_QWORD *)v10 + 1);
      ObjectType = swift_getObjectType(result, v11);
      v19[3] = type metadata accessor for DOCItemCollectionViewController(0);
      v19[0] = v2;
      v15 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8);
      v16 = v2;
      v15(v19, v9, 1, 1, ObjectType, v13);
      swift_unknownObjectRelease(v12);
      return sub_100068588(v19);
    }
  }
  return result;
}

uint64_t sub_1000650E8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return result;
  v3 = 0;
  v4 = a2[2];
  v31 = result + 32;
  v5 = 2;
  if (v4 > 2)
    v5 = a2[2];
  v29 = v5;
  while (1)
  {
    if (!v4)
      goto LABEL_8;
    v7 = (uint64_t *)(v31 + 40 * v3);
    v8 = *v7;
    v9 = v7[1];
    v10 = v7[4];
    v11 = a2[4];
    v12 = a2[5];
    v13 = v11 == *v7 && v12 == v9;
    if (!v13)
      break;
    v6 = 0;
LABEL_6:
    if (v6 >= v4)
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    *(_BYTE *)(a2[5 * v6 + 8] + 24) = *(_BYTE *)(v10 + 24);
LABEL_8:
    if (++v3 == v2)
      return result;
  }
  v30 = v7[4];
  v14 = v2;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v8, v9, 0);
  if ((result & 1) != 0)
    goto LABEL_15;
  if (v4 == 1)
    goto LABEL_8;
  v15 = a2[9];
  v16 = a2[10];
  v17 = v15 == v8 && v16 == v9;
  if (v17 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v8, v9, 0), (result & 1) != 0))
  {
LABEL_15:
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v8, v9, 0);
    if ((result & 1) != 0)
    {
      v6 = 0;
      v2 = v14;
      v10 = v30;
    }
    else
    {
      v2 = v14;
      if (v4 == 1)
        goto LABEL_8;
      result = a2[9];
      v24 = a2[10];
      if (result != v8 || v24 != v9)
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v24, v8, v9, 0);
        if ((result & 1) == 0)
        {
          v25 = a2 + 15;
          v26 = 2;
          while (v4 != v26)
          {
            v6 = v26;
            if (v29 == v26)
              goto LABEL_51;
            result = *(v25 - 1);
            v27 = *v25;
            if (result == v8 && v27 == v9)
            {
              v10 = v30;
              goto LABEL_6;
            }
            result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v27, v8, v9, 0);
            v26 = v6 + 1;
            v25 += 5;
            v10 = v30;
            if ((result & 1) != 0)
              goto LABEL_6;
          }
          goto LABEL_8;
        }
      }
      v6 = 1;
      v10 = v30;
    }
    goto LABEL_6;
  }
  if (v4 == 2)
    goto LABEL_8;
  v18 = a2 + 15;
  v19 = 2;
  while (1)
  {
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    v21 = *(v18 - 1);
    v22 = *v18;
    if (v21 == v8 && v22 == v9)
      goto LABEL_15;
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v8, v9, 0);
    if ((result & 1) != 0)
      goto LABEL_15;
    v18 += 5;
    ++v19;
    v13 = v20 == v4;
    v2 = v14;
    if (v13)
      goto LABEL_8;
  }
LABEL_52:
  __break(1u);
  return result;
}

void sub_100065350(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  __n128 v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(_QWORD, _QWORD, _QWORD);
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(char *, char *, uint64_t);
  _BOOL4 v45;
  uint64_t (*v46)(char *, char *, uint64_t);
  int v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void *v74;
  double v75;
  char *v76;
  void *v77;
  id v78;
  Class isa;
  id v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t (*v83)(void);
  unsigned __int8 *v84;
  uint64_t v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  NSString v96;
  id v97;
  uint64_t v98;
  _BYTE *v99;
  _QWORD *v100;
  void *v101;
  unsigned __int8 v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  void *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  BOOL v111;
  char v112;
  uint64_t v113;
  void *v114;
  void *v115;
  id v116;
  void **v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  NSString v125;
  NSString v126;
  uint64_t v127;
  NSString v128;
  id v129;
  void (*v130)(char *, uint64_t);
  id v131;
  unint64_t v132;
  char *v133;
  __int128 v134;
  int v135;
  uint64_t (*v136)(void);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(_QWORD, _QWORD, _QWORD);
  char *v153;
  char v154[24];
  uint64_t v155;
  char v156[8];
  uint64_t (*v157)(_QWORD, _QWORD, _QWORD);

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v146 = (char *)&v128 - v8;
  v9 = __chkstk_darwin(v7);
  v147 = (char *)&v128 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v128 - v11;
  v13 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v13);
  v15 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  v149 = v12;
  if (!a1)
  {
    v21 = *(void **)&v153[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v21)
      return;
    v22 = objc_msgSend(v21, "indexPathsForVisibleItems");
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v2);

    v12 = v149;
  }
  v148 = v6;
  v23 = swift_bridgeObjectRetain(a1);
  v24 = Logger.UI.unsafeMutableAddressor(v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v24, v16);
  v25 = swift_bridgeObjectRetain(v20);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  v28 = os_log_type_enabled(v26, v27);
  v140 = v3;
  v138 = v20;
  if (v28)
  {
    v29 = swift_slowAlloc(22, -1);
    v152 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc(32, -1);
    v157 = v152;
    *(_DWORD *)v29 = 136315394;
    v155 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100516380, (uint64_t *)&v157);
    v3 = v140;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, v156);
    *(_WORD *)(v29 + 12) = 2048;
    v155 = *(_QWORD *)(v138 + 16);
    v12 = v149;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, v156);
    swift_bridgeObjectRelease(v138);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "DOCNodeCollectionDelegate %s updating contents of %ld cells", (uint8_t *)v29, 0x16u);
    v30 = v152;
    swift_arrayDestroy(v152, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v31 = v29;
    v20 = v138;
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    v32 = swift_bridgeObjectRelease(v20);
  }
  (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v32);
  v33 = v147;
  v34 = *(_QWORD *)(v20 + 16);
  if (v34)
  {
    v145 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    v35 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v139 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
    v36 = v20 + v35;
    v141 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
    v137 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    v143 = *(_QWORD *)(v3 + 72);
    v37 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 16);
    v134 = xmmword_1004D9670;
    v133 = "bserver for: %{public}@";
    v132 = 0x8000000100516310;
    v144 = v15;
    v152 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v37;
    v37(v15, v20 + v35, v2);
    while (1)
    {
      v142 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v142(v15, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2) == 1)
        goto LABEL_79;
      v150 = v36;
      v151 = v34;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v12, v15, v2);
      v40 = *(_QWORD *)&v153[v145];
      if (!v40)
        goto LABEL_87;
      v41 = objc_msgSend(*(id *)&v153[v145], "isGathering");
      v42 = v146;
      v43 = v3;
      if ((v41 & 1) != 0)
      {
        v37(v33, v12, v2);
        v44 = (uint64_t (*)(char *, char *, uint64_t))v37;
        v45 = 0;
      }
      else
      {
        v46 = (uint64_t (*)(char *, char *, uint64_t))v37;
        v47 = v153[v139];
        v48 = v46(v33, v12, v2);
        v45 = v47 == 1 && IndexPath.item.getter(v48) == 0;
        v44 = (uint64_t (*)(char *, char *, uint64_t))v152;
      }
      v49 = *(void (**)(char *, uint64_t))(v43 + 8);
      v49(v33, v2);
      v50 = v44(v42, v12, v2);
      if (v45)
      {
        v51 = IndexPath.section.getter(v50);
        v49(v42, v2);
        v3 = v43;
        if (!v51)
          goto LABEL_11;
      }
      else
      {
        v49(v42, v2);
        v3 = v43;
      }
      v52 = *(_QWORD *)&v153[v141];
      v53 = swift_bridgeObjectRetain(v52);
      v54 = IndexPath.section.getter(v53);
      v55 = v12;
      v56 = *(_QWORD *)(v52 + 16);
      v57 = v148;
      v58 = v152(v148, v55, v2);
      if (v54 >= v56)
      {
        v38 = swift_bridgeObjectRelease(v52);
        ((void (*)(char *, uint64_t, __n128))v49)(v57, v2, v38);
LABEL_10:
        v33 = v147;
        v12 = v149;
LABEL_11:
        v49(v12, v2);
        v39 = v151;
        v37 = (void (*)(_QWORD, _QWORD, _QWORD))v152;
        goto LABEL_12;
      }
      v59 = IndexPath.item.getter(v58);
      v60 = IndexPath.section.getter(v59);
      if ((v60 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
        return;
      }
      if (v60 >= *(_QWORD *)(v52 + 16))
        goto LABEL_82;
      v61 = *(_QWORD *)(v52 + 32 + 40 * v60 + 32);
      v62 = swift_beginAccess(v61 + 16, &v157, 0, 0);
      v63 = *(_QWORD *)(v61 + 16);
      if ((unint64_t)v63 >> 62)
      {
        if (v63 < 0)
          v127 = v63;
        else
          v127 = v63 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v63);
        v64 = _CocoaArrayWrapper.endIndex.getter(v127);
        v62 = swift_bridgeObjectRelease(v63);
      }
      else
      {
        v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v65 = ((uint64_t (*)(char *, uint64_t, __n128))v49)(v148, v2, v62);
      if (v59 >= v64)
      {
        swift_bridgeObjectRelease(v52);
        v3 = v140;
        goto LABEL_10;
      }
      v66 = IndexPath.section.getter(v65);
      if ((v66 & 0x8000000000000000) != 0)
        goto LABEL_83;
      if (v66 >= *(_QWORD *)(v52 + 16))
        goto LABEL_84;
      v67 = (_QWORD *)(v52 + 32 + 40 * v66);
      v68 = v67[1];
      v69 = v67[3];
      v70 = v67[4];
      swift_bridgeObjectRetain(v68);
      swift_bridgeObjectRetain(v69);
      swift_retain();
      swift_bridgeObjectRelease(v52);
      swift_bridgeObjectRelease(v69);
      swift_bridgeObjectRelease(v68);
      v72 = IndexPath.item.getter(v71);
      swift_beginAccess(v70 + 16, &v155, 0, 0);
      v73 = *(_QWORD *)(v70 + 16);
      swift_bridgeObjectRetain(v73);
      swift_release(v70);
      if ((v73 & 0xC000000000000001) != 0)
      {
        v74 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v72, v73);
        v3 = v140;
        v33 = v147;
      }
      else
      {
        v3 = v140;
        v33 = v147;
        if ((v72 & 0x8000000000000000) != 0)
          goto LABEL_85;
        if (v72 >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_86;
        v74 = *(void **)(v73 + 8 * v72 + 32);
        swift_unknownObjectRetain(v74);
      }
      *(_QWORD *)&v75 = swift_bridgeObjectRelease(v73).n128_u64[0];
      v76 = v153;
      objc_msgSend(v153, "loadViewIfNeeded", v75);
      v77 = *(void **)&v76[v137];
      if (!v77)
        goto LABEL_88;
      v78 = v77;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v80 = objc_msgSend(v78, "cellForItemAtIndexPath:", isa);

      v37 = (void (*)(_QWORD, _QWORD, _QWORD))v152;
      if (!v80)
        goto LABEL_45;
      v81 = type metadata accessor for DOCItemCollectionCell();
      v82 = (_QWORD *)swift_dynamicCastClass(v80, v81);
      if (!v82)
      {

        v33 = v147;
LABEL_45:
        swift_unknownObjectRelease(v74);
        v12 = v149;
        v49(v149, v2);
        v39 = v151;
        goto LABEL_12;
      }
      v83 = *(uint64_t (**)(void))((swift_isaMask & *v82) + 0x1F8);
      v84 = (unsigned __int8 *)v83();
      if (v84)
      {
        v135 = v84[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress];

      }
      else
      {
        v135 = 0;
      }
      v85 = v83();
      v136 = v83;
      if (v85)
      {
        v86 = (void *)v85;
        v87 = *(void **)(v85 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
        if (v87 && *(_BYTE *)(v85 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) == 1)
        {
          *(_BYTE *)(v85 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) = 0;
          v88 = v87;
          v89 = *(void **)DOCLog.UI.unsafeMutableAddressor(v88);
          v90 = sub_10006922C((uint64_t *)&unk_100644560);
          v91 = swift_allocObject(v90, 72, 7);
          *(_OWORD *)(v91 + 16) = v134;
          v131 = v80;
          v130 = v49;
          *(_QWORD *)(v91 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
          *(_QWORD *)(v91 + 64) = sub_100083450((unint64_t *)&qword_10064A920, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
          *(_QWORD *)(v91 + 32) = v88;
          v92 = v88;
          v129 = v92;
          v93 = v89;
          v94 = static os_log_type_t.default.getter(v93);
          os_log(_:dso:log:type:_:)("Progress: [CELL CONTENT] REMOVE fractionCompleted observer for: %{public}@", 74, 2, &_mh_execute_header, v93, v94, v91);

          v95 = v91;
          v3 = v140;
          swift_bridgeObjectRelease(v95);
          v96 = String._bridgeToObjectiveC()();
          objc_msgSend(v92, "removeObserver:forKeyPath:context:", v86, v96, &unk_100658630);

          v128 = String._bridgeToObjectiveC()();
          v80 = v131;
          v97 = v129;
          v49 = v130;
          objc_msgSend(v129, "removeObserver:forKeyPath:context:", v86, v128, &unk_100658630);

          v86 = v128;
          v83 = v136;
        }

      }
      v98 = v83();
      if (v98)
        break;
LABEL_58:
      v103 = v49;
      v104 = v83();
      if (v104)
      {
        v105 = (void *)v104;
        v106 = (uint64_t *)(v104 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess(v104 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v154, 1, 0);
        v107 = *v106;
        *v106 = (uint64_t)v74;
        v83 = v136;
        swift_unknownObjectRetain_n(v74, 2);
        v108 = v107;
        v3 = v140;
        swift_unknownObjectRelease(v108);
        sub_10007804C();

        v104 = swift_unknownObjectRelease(v74);
      }
      v109 = ((uint64_t (*)(uint64_t))v83)(v104);
      v39 = v151;
      if (v109)
      {
        v110 = (_BYTE *)v109;
        v111 = sub_10007181C(v74);
        v112 = v110[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable];
        v110[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable] = v111;
        sub_1000719D4(v112);

      }
      if (v135)
      {
        v113 = v136();
        v12 = v149;
        if (v113)
        {
          v114 = (void *)v113;
          v115 = *(void **)(v113 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
          if (v115)
          {
            *(_BYTE *)(v113 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) = 1;
            v116 = v115;
            v117 = (void **)DOCLog.UI.unsafeMutableAddressor(v116);
            v131 = v80;
            v118 = *v117;
            v119 = sub_10006922C((uint64_t *)&unk_100644560);
            v120 = swift_allocObject(v119, 72, 7);
            *(_OWORD *)(v120 + 16) = v134;
            *(_QWORD *)(v120 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
            *(_QWORD *)(v120 + 64) = sub_100083450((unint64_t *)&qword_10064A920, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
            *(_QWORD *)(v120 + 32) = v116;
            v121 = v116;
            v122 = v118;
            v123 = static os_log_type_t.default.getter(v122);
            os_log(_:dso:log:type:_:)("Progress: [CELL CONTENT] ADD fractionCompleted observer for: %{public}@", 71, 2, &_mh_execute_header, v122, v123, v120);

            v124 = v120;
            v3 = v140;
            swift_bridgeObjectRelease(v124);
            v125 = String._bridgeToObjectiveC()();
            objc_msgSend(v121, "addObserver:forKeyPath:options:context:", v114, v125, 1, &unk_100658630);

            v126 = String._bridgeToObjectiveC()();
            objc_msgSend(v121, "addObserver:forKeyPath:options:context:", v114, v126, 1, &unk_100658630);
            swift_unknownObjectRelease(v74);

            v12 = v149;
          }
          else
          {
            swift_unknownObjectRelease(v74);

          }
          v103(v12, v2);
          goto LABEL_71;
        }
      }
      else
      {
        v12 = v149;
      }
      v103(v12, v2);
      swift_unknownObjectRelease(v74);

LABEL_71:
      v33 = v147;
      v37 = (void (*)(_QWORD, _QWORD, _QWORD))v152;
LABEL_12:
      v15 = v144;
      v36 = v150 + v143;
      v34 = v39 - 1;
      if (!v34)
      {
        v142(v144, 1, 1, v2);
        goto LABEL_79;
      }
      v37(v144, v36, v2);
    }
    v99 = (_BYTE *)v98;
    v100 = (_QWORD *)(v40 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if ((*(_BYTE *)(v40 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v101 = *(void **)(*v100 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v101);
    }
    else
    {
      v101 = (void *)v100[1];
      swift_unknownObjectRetain(v101);
      if (!v101)
      {
        v102 = 0;
        goto LABEL_57;
      }
    }
    v102 = objc_msgSend(v101, "isShared");
    swift_unknownObjectRelease(v101);
LABEL_57:
    v83 = v136;
    v99[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isParentItemShared] = v102;

    v3 = v140;
    goto LABEL_58;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v15, 1, 1, v2);
LABEL_79:
  swift_bridgeObjectRelease(v138);
}

void sub_100066164(uint64_t a1)
{
  double *v1;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double v22;
  void *v23;
  objc_class *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t Strong;
  uint64_t v35;
  unint64_t v36;
  objc_super v37;
  unint64_t v38;

  if (!a1)
    return;
  v3 = v1;
  if (*(_BYTE *)v1 != 1)
  {
    swift_bridgeObjectRetain(a1);
    return;
  }
  v38 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v18 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (v4)
      goto LABEL_5;
LABEL_25:
    swift_bridgeObjectRelease(a1);
    v17 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_42;
    goto LABEL_26;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(a1, 2);
  if (!v4)
    goto LABEL_25;
LABEL_5:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_46;
  }
  v5 = 0;
  v36 = 0x8000000100513910;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    else
      v6 = *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = objc_msgSend(v6, "representedElementKind", v36);
    if (!v8)
    {
LABEL_7:

      goto LABEL_8;
    }
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    if (v10 == 0xD000000000000024 && v12 == v36)
    {
      swift_bridgeObjectRelease(0x8000000100513910);
    }
    else
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, 0xD000000000000024, 0x8000000100513910, 0);
      swift_bridgeObjectRelease(v12);
      if ((v14 & 1) == 0)
        goto LABEL_7;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)(v38 + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
    v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v7);
    specialized ContiguousArray._endMutation()(v16);
LABEL_8:
    ++v5;
  }
  while (v4 != v5);
  swift_bridgeObjectRelease(a1);
  v17 = v38;
  if ((v38 & 0x8000000000000000) == 0)
  {
LABEL_26:
    if ((v17 & 0x4000000000000000) != 0)
      goto LABEL_42;
    v19 = *(_QWORD *)(v17 + 16);
    v20 = swift_retain();
    if (v19)
      goto LABEL_28;
LABEL_43:
    swift_release_n(v17, 2, v20);
    return;
  }
LABEL_42:
  swift_retain();
  v19 = _CocoaArrayWrapper.endIndex.getter(v35);
  if (!v19)
    goto LABEL_43;
LABEL_28:
  if (v19 >= 1)
  {
    v21 = 0;
    v22 = v3[1];
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v17);
      else
        v31 = *(id *)(v17 + 8 * v21 + 32);
      v33 = v31;
      Strong = swift_unknownObjectWeakLoadStrong(v3 + 4, v32);
      if (Strong)
      {
        v23 = (void *)Strong;
        v24 = (objc_class *)type metadata accessor for DOCCollectionViewCompositionalLayout();
        v37.receiver = v23;
        v37.super_class = v24;
        objc_msgSendSuper2(&v37, "collectionViewContentSize");
        v26 = v25;
        v28 = v27;

        if (v3[2] > v26)
          v29 = v3[2];
        else
          v29 = v26;
        if (v3[3] > v28)
          v30 = v3[3];
        else
          v30 = v28;
      }
      else
      {
        v29 = 0.0;
        v30 = 0.0;
      }
      ++v21;
      objc_msgSend(v33, "setFrame:", 0.0, v30 - v22, v29, v22);

    }
    while (v19 != v21);
    goto LABEL_43;
  }
LABEL_46:
  __break(1u);
}

uint64_t sub_100066464(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_1000664EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10006655C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10006657C()
{
  uint64_t v0;

  return sub_1000665A4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100066584()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000665A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000665C4()
{
  uint64_t v0;

  return sub_1000665D0(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1000665D0(uint64_t a1, id a2, uint64_t *a3)
{
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[224];
  _BYTE v10[224];
  uint64_t v11;
  uint64_t v12[27];

  v5 = objc_msgSend(a2, "thumbnailIdentifier");
  swift_beginAccess(a1 + 16, &v11, 33, 0);
  sub_1000666B8((uint64_t)v5, v9);
  swift_endAccess(&v11);

  sub_100070EDC((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_100655C10);
  sub_100070EDC((uint64_t)v10, (uint64_t)&v11, (uint64_t *)&unk_100655C10);
  result = sub_1000A849C(&v11);
  if ((_DWORD)result != 1)
  {
    swift_unknownObjectRelease(v11);
    v7 = v12[0];
    swift_unknownObjectRetain(v12[0]);
    sub_10010CA6C(v12);
    v8 = *a3;
    *a3 = v7;
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_1000666B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[14];

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1000667B0(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    *(_QWORD *)&v13[0] = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002E9E50();
      v10 = *(_QWORD *)&v13[0];
    }

    memmove(a2, (const void *)(*(_QWORD *)(v10 + 56) + 224 * v7), 0xD9uLL);
    sub_10001F780(v7, v10);
    v11 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v11);
    return DOCSplitBrowserViewController.didCommitPreview(of:)(a2);
  }
  else
  {
    sub_100447730(v13);
    return sub_100070EDC((uint64_t)v13, (uint64_t)a2, (uint64_t *)&unk_100655C10);
  }
}

unint64_t sub_1000667B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000667FC(a1, v4, (unint64_t *)&unk_1006443F0, DOCNodeThumbnailIdentifier_ptr);
}

unint64_t sub_1000667FC(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  id v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  i = a2 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_10004F2F0(0, a3, a4);
    v9 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
    v10 = static NSObject.== infix(_:_:)(v9, a1);

    if ((v10 & 1) == 0)
    {
      v11 = ~v6;
      for (i = (i + 1) & v11; ((*(_QWORD *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v11)
      {
        v12 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
        v13 = static NSObject.== infix(_:_:)(v12, a1);

        if ((v13 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_10006690C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(id *)(v3 + 24);
  LOBYTE(v4) = static NSObject.== infix(_:_:)(v4, v5);

  return v4 & 1;
}

Swift::Int sub_100066978()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  id v6;
  _BYTE v7[40];
  _QWORD v8[9];

  v1 = *v0;
  Hasher.init(_seed:)(v8, 0);
  v6 = *(id *)(v1 + 24);
  v2 = sub_10004F2F0(0, &qword_100642B88, NSUUID_ptr);
  v3 = sub_100066A10();
  v4 = v6;
  AnyHashable.init<A>(_:)(&v6, v2, v3);
  AnyHashable.hash(into:)(v8);
  sub_100067748((uint64_t)v7);
  return Hasher._finalize()();
}

unint64_t sub_100066A10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100642B90;
  if (!qword_100642B90)
  {
    v1 = sub_10004F2F0(255, &qword_100642B88, NSUUID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100642B90);
  }
  return result;
}

id sub_100066A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v8 = *(void **)(v4 + 24);
  objc_msgSend(v8, "lock");
  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(a1);
    if (v9)
      goto LABEL_3;
    return objc_msgSend(v8, "unlock", swift_bridgeObjectRelease(a1).n128_f64[0]);
  }
  if (a1 < 0)
    v13 = a1;
  else
    v13 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v13);
  v9 = (uint64_t)result;
  if (!result)
    return objc_msgSend(v8, "unlock", swift_bridgeObjectRelease(a1).n128_f64[0]);
LABEL_3:
  if (v9 >= 1)
  {
    v11 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
      }
      else
      {
        v12 = *(_QWORD *)(a1 + 8 * v11 + 32);
        swift_unknownObjectRetain(v12);
      }
      ++v11;
      v14 = v12;
      sub_100066B90(&v14, v4, a2, a3);
      swift_unknownObjectRelease(v12);
    }
    while (v9 != v11);
    return objc_msgSend(v8, "unlock", swift_bridgeObjectRelease(a1).n128_f64[0]);
  }
  __break(1u);
  return result;
}

void sub_100066B90(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  __n128 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[5];
  _QWORD *v52;
  _QWORD v53[3];
  char v54[32];
  uint64_t v55;

  v50 = a4;
  v55 = a3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType(*a1, v13);
  DOCNode.identifierKey.getter(aBlock, ObjectType);
  v15 = a2 + 32;
  swift_beginAccess(a2 + 32, v54, 0, 0);
  v16 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain(*(_QWORD *)(a2 + 32));
  v17 = sub_100067654((uint64_t)aBlock);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease(v16);
LABEL_6:
    sub_100067748((uint64_t)aBlock);
    goto LABEL_12;
  }
  v45 = v7;
  v46 = v4;
  v19 = *(_QWORD *)(v16 + 56) + 24 * v17;
  v21 = *(void **)v19;
  v20 = *(_QWORD *)(v19 + 8);
  v22 = *(_QWORD *)(v19 + 16);
  sub_10006A92C(*(void **)v19, v20, v22);
  swift_bridgeObjectRelease(v16);
  sub_100067748((uint64_t)aBlock);
  if (v22 < 0)
  {
    v24 = (void *)(v22 & 0x7FFFFFFFFFFFFFFFLL);
    dispatch thunk of DispatchWorkItem.cancel()(v23);
    if (v55)
    {
      v44 = v21;
      v25 = qword_100640D10;
      v26 = v50;
      swift_retain();
      if (v25 != -1)
        swift_once(&qword_100640D10, sub_100093588);
      v43 = qword_100643520;
      v27 = (_QWORD *)swift_allocObject(&unk_1005C7A40, 40, 7);
      v28 = v55;
      v27[2] = v55;
      v27[3] = v26;
      v27[4] = v24;
      aBlock[4] = sub_100093E6C;
      v52 = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005C7A58;
      v41 = _Block_copy(aBlock);
      sub_10008BA00(v28, v26);
      v42 = v24;
      static DispatchQoS.unspecified.getter(v42);
      v53[0] = _swiftEmptyArrayStorage;
      v29 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v30 = sub_10006922C((uint64_t *)&unk_100647540);
      v31 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
      v32 = v30;
      v33 = v45;
      dispatch thunk of SetAlgebra.init<A>(_:)(v53, v32, v31, v45, v29);
      v34 = v41;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v41);
      swift_release(v44);
      _Block_release(v34);

      sub_100087534(v28, v50);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v33);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v48);
      swift_release(v52);
    }
    else
    {
      swift_release(v21);

    }
  }
  else
  {
    sub_1000628C0(v21, v20, v22);
  }
LABEL_12:
  DOCNode.identifierKey.getter(aBlock, ObjectType);
  swift_beginAccess(v15, v53, 33, 0);
  v35 = (void *)sub_100066F44((uint64_t)aBlock);
  v37 = v36;
  v39 = v38;
  sub_100067748((uint64_t)aBlock);
  swift_endAccess(v53);
  sub_10006702C(v35, v37, v39);
}

unint64_t sub_100066F44(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100067654(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0xF000000000000007;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002E7B4C();
    v8 = v12;
  }
  sub_100067748(*(_QWORD *)(v8 + 48) + 40 * v5);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 24 * v5);
  sub_100067044(v5, v8);
  v10 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v10);
  return v9;
}

void sub_10006702C(void *a1, uint64_t a2, uint64_t a3)
{
  if ((~((unint64_t)a1 & a3) & 0xF000000000000007) != 0)
    sub_1000628C0(a1, a2, a3);
}

unint64_t sub_100067044(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  __int128 *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_10006777C(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
        result = sub_100067748((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = v19 + 24 * v3;
            v21 = (__int128 *)(v19 + 24 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= (unint64_t)v21 + 24))
            {
              v9 = *v21;
              *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
              *(_OWORD *)v20 = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100067220(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  _QWORD *inited;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  _QWORD *v52;
  _QWORD v53[5];
  _BYTE v54[24];
  _BYTE v55[24];
  _BYTE v56[48];

  isUniquelyReferenced_nonNull_native = a1;
  v10 = sub_100067D0C(a1);
  v11 = type metadata accessor for DOCItemCollectionViewNodeGrouper();
  inited = (_QWORD *)swift_initStackObject(v11, v56);
  sub_100067AE8(v10, a2, a3);
  v50 = isUniquelyReferenced_nonNull_native;
  if ((a4 & 1) != 0)
  {
    swift_beginAccess(inited + 3, v51, 0, 0);
    v13 = (_QWORD *)inited[3];
    if (v13[2])
    {
      v14 = v13[5];
      v15 = v13[7];
      v16 = v13[8];
      swift_beginAccess(v16 + 16, v53, 33, 0);
      v17 = *(_QWORD *)(v16 + 16);
      if ((unint64_t)v17 >> 62)
      {
        if (v17 < 0)
          v45 = *(_QWORD *)(v16 + 16);
        else
          v45 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRetain(v15);
        swift_retain(v16);
        swift_unknownObjectRetain(a5);
        swift_bridgeObjectRetain(v17);
        v46 = _CocoaArrayWrapper.endIndex.getter(v45);
        swift_bridgeObjectRelease(v17);
        if (v46 < 0)
        {
          __break(1u);
LABEL_44:
          result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
          __break(1u);
          return result;
        }
      }
      else
      {
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRetain(v15);
        swift_retain(v16);
        swift_unknownObjectRetain(a5);
      }
      sub_100458BFC(0, 0, a5);
      swift_endAccess(v53);
      swift_release(v16);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v14);
      isUniquelyReferenced_nonNull_native = v50;
    }
  }
  swift_beginAccess(inited + 3, v55, 0, 0);
  v18 = inited[3];
  v53[0] = _swiftEmptyArrayStorage;
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain_n(v18, 2);
    v20 = 64;
    do
    {
      v21 = *(_QWORD *)(v18 + v20);
      swift_beginAccess(v21 + 16, v54, 0, 0);
      v22 = swift_bridgeObjectRetain(*(_QWORD *)(v21 + 16));
      sub_1000683EC(v22);
      v20 += 40;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    swift_bridgeObjectRetain(v18);
  }
  v48 = a5;
  if ((unint64_t)isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_35;
  v23 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(isUniquelyReferenced_nonNull_native);
LABEL_13:
  v47 = inited;
  if (v23)
  {
    v49 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    inited = &_swiftEmptyDictionarySingleton;
    v24 = 4;
    do
    {
      v27 = v18;
      v28 = v24 - 4;
      if (v49)
      {
        v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, isUniquelyReferenced_nonNull_native);
        v30 = v24 - 3;
        if (__OFADD__(v28, 1))
          goto LABEL_32;
      }
      else
      {
        v18 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v24);
        swift_unknownObjectRetain(v18);
        v30 = v24 - 3;
        if (__OFADD__(v28, 1))
        {
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          if (isUniquelyReferenced_nonNull_native < 0)
            v44 = isUniquelyReferenced_nonNull_native;
          else
            v44 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(isUniquelyReferenced_nonNull_native);
          v23 = _CocoaArrayWrapper.endIndex.getter(v44);
          goto LABEL_13;
        }
      }
      ObjectType = swift_getObjectType(v18, v29);
      DOCNode.identifierKey.getter(v53, ObjectType);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(inited);
      v52 = inited;
      v33 = sub_100067654((uint64_t)v53);
      v34 = inited[2];
      v35 = (v32 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
        goto LABEL_33;
      v37 = v32;
      if (inited[3] >= v36)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1002E701C();
      }
      else
      {
        sub_1000677B8(v36, isUniquelyReferenced_nonNull_native);
        v38 = sub_100067654((uint64_t)v53);
        if ((v37 & 1) != (v39 & 1))
          goto LABEL_44;
        v33 = v38;
      }
      isUniquelyReferenced_nonNull_native = v50;
      inited = v52;
      if ((v37 & 1) != 0)
      {
        v25 = v52[7];
        v26 = 8 * v33;
        swift_unknownObjectRelease(*(_QWORD *)(v25 + v26));
        *(_QWORD *)(v25 + v26) = v18;
      }
      else
      {
        v52[(v33 >> 6) + 8] |= 1 << v33;
        sub_10006777C((uint64_t)v53, inited[6] + 40 * v33);
        *(_QWORD *)(inited[7] + 8 * v33) = v18;
        v40 = inited[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_34;
        inited[2] = v42;
      }
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_100067748((uint64_t)v53);
      ++v24;
      v18 = v27;
    }
    while (v30 != v23);
  }
  swift_unknownObjectRelease(v48);
  swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
  swift_release(v47);
  return v18;
}

unint64_t sub_100067654(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100067684(a1, v4);
}

unint64_t sub_100067684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_10006777C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_100067748((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_100067748(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10006777C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

void sub_1000677B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10006922C(&qword_10064DB70);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_25;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v20 >= v38)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v39 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v38)
        goto LABEL_37;
      v22 = *(_QWORD *)(v39 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v38)
        {
LABEL_37:
          swift_release(v5);
          v3 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v22 = *(_QWORD *)(v39 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_46;
            if (v13 >= v38)
              goto LABEL_37;
            v22 = *(_QWORD *)(v39 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_24;
          }
        }
        v13 = v23;
      }
    }
LABEL_24:
    v11 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_25:
    v24 = *(_QWORD *)(v5 + 48) + 40 * v19;
    if ((a2 & 1) != 0)
    {
      v25 = *(_OWORD *)v24;
      v26 = *(_OWORD *)(v24 + 16);
      v42 = *(_QWORD *)(v24 + 32);
      v40 = v25;
      v41 = v26;
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_10006777C(v24, (uint64_t)&v40);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      swift_unknownObjectRetain(v27);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
    v16 = v40;
    v17 = v41;
    *(_QWORD *)(v15 + 32) = v42;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v27;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v37;
  v21 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v21, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

uint64_t type metadata accessor for DOCItemCollectionViewNodeGrouper()
{
  return objc_opt_self(_TtC5Files32DOCItemCollectionViewNodeGrouper);
}

_QWORD *sub_100067AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  char v10;
  _BYTE v12[24];

  v3[3] = _swiftEmptyArrayStorage;
  v3[4] = _swiftEmptyArrayStorage;
  v7 = v3 + 3;
  v8 = a2;
  v3[2] = a1;
  v9 = swift_bridgeObjectRetain(a1);
  v10 = sub_1002B81F4(v9);
  swift_bridgeObjectRelease(a1);
  if (v8 == 8 || (v10 & 1) != 0)
  {
    swift_bridgeObjectRelease(a3);
    sub_100067C04();
  }
  else
  {
    switch((char)a2)
    {
      case 0:
      case 1:
        sub_1002B2DA8(a2);
        break;
      case 4:
        sub_1002B4108();
        break;
      case 5:
        sub_1002B2074(a3);
        break;
      case 6:
        sub_1002B4A64();
        break;
      default:
        sub_100067C04();
        break;
    }
    swift_bridgeObjectRelease(a3);
    swift_beginAccess(v3 + 3, v12, 0, 0);
    if (*(_QWORD *)(*v7 + 16) == 1)
      *(_WORD *)(*(_QWORD *)(*v7 + 64) + 24) = 257;
  }
  return v3;
}

uint64_t sub_100067C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = sub_10006922C(&qword_100644B00);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004D9670;
  v4 = *(_QWORD *)(v0 + 16);
  v5 = type metadata accessor for DOCCollectionNodes();
  v6 = swift_allocObject(v5, 40, 7);
  *(_QWORD *)(v6 + 16) = _swiftEmptyArrayStorage;
  *(_WORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  swift_beginAccess(v6 + 16, v10, 33, 0);
  v7 = swift_bridgeObjectRetain(v4);
  sub_1000683EC(v7);
  swift_endAccess(v10);
  *(_BYTE *)(v6 + 24) = 1;
  *(_QWORD *)(v3 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v3 + 40) = 0x8000000100522C30;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0xE000000000000000;
  *(_QWORD *)(v3 + 64) = v6;
  swift_beginAccess(v1 + 24, v10, 1, 0);
  v8 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v3;
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_100067D0C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Bool Document;
  uint64_t v9;
  uint64_t v10;
  Swift::Bool v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Bool v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = a1;
  v38 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_69;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(a1, 2);
  if (v3)
  {
    while ((v1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      while (1)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
        swift_getObjectType(v6, v7);
        Document = DOCNode.isCreateDocumentSentinel()();
        swift_unknownObjectRelease(v6);
        if (Document)
          goto LABEL_18;
        v9 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        ++v5;
        if (v9 == v3)
          goto LABEL_13;
      }
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      if (v1 < 0)
        v33 = v1;
      else
        v33 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v1, 2);
      v3 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (!v3)
        goto LABEL_13;
    }
    v5 = 0;
    while (1)
    {
      v10 = *(_QWORD *)(v1 + 8 * v5 + 32);
      swift_getObjectType(v10, v4);
      swift_unknownObjectRetain(v10);
      v11 = DOCNode.isCreateDocumentSentinel()();
      swift_unknownObjectRelease(v10);
      if (v11)
        break;
      v12 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_61;
      ++v5;
      if (v12 == v3)
        goto LABEL_13;
    }
LABEL_18:
    swift_bridgeObjectRelease(v1);
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
    }
    else if (!v2)
    {
      if (v15 == *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_15;
LABEL_21:
      v2 = v5 + 5;
      while (1)
      {
        v16 = v2 - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v2 - 4, v1);
        }
        else
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_58;
          if (v16 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_59;
          v17 = *(_QWORD *)(v1 + 8 * v2);
          swift_unknownObjectRetain(v17);
        }
        swift_getObjectType(v17, v18);
        v19 = DOCNode.isCreateDocumentSentinel()();
        swift_unknownObjectRelease(v17);
        if (!v19)
        {
          if (v16 != v5)
          {
            if ((v1 & 0xC000000000000001) != 0)
            {
              v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
              v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v2 - 4, v1);
            }
            else
            {
              if (v5 < 0)
                goto LABEL_63;
              v20 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v5 >= v20)
                goto LABEL_64;
              v21 = *(_QWORD *)(v1 + 8 * v5 + 32);
              swift_unknownObjectRetain(v21);
              if ((v16 & 0x8000000000000000) != 0)
                goto LABEL_65;
              if (v16 >= v20)
                goto LABEL_66;
              v22 = *(_QWORD *)(v1 + 8 * v2);
              swift_unknownObjectRetain(v22);
            }
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v1)
              || v1 < 0
              || (v1 & 0x4000000000000000) != 0)
            {
              v1 = sub_1000818A0(v1);
              v38 = v1;
            }
            v23 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
            *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v22;
            v24 = swift_unknownObjectRelease(v23);
            specialized Array._endMutation()(v24);
            v25 = v38;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v38)
              || v38 < 0
              || (v38 & 0x4000000000000000) != 0)
            {
              v25 = sub_1000818A0(v38);
              v38 = v25;
            }
            if ((v16 & 0x8000000000000000) != 0)
              goto LABEL_67;
            v26 = v25 & 0xFFFFFFFFFFFFFF8;
            if (v16 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_68;
            v27 = *(_QWORD *)(v26 + 8 * v2);
            *(_QWORD *)(v26 + 8 * v2) = v21;
            v28 = swift_unknownObjectRelease(v27);
            specialized Array._endMutation()(v28);
          }
          v29 = __OFADD__(v5++, 1);
          if (v29)
            goto LABEL_62;
        }
        v29 = __OFADD__(v16, 1);
        v30 = v2 - 3;
        if (v29)
          goto LABEL_60;
        v1 = v38;
        if ((unint64_t)v38 >> 62)
        {
          if (v38 < 0)
            v32 = v38;
          else
            v32 = v38 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v38);
          v31 = _CocoaArrayWrapper.endIndex.getter(v32);
          swift_bridgeObjectRelease(v38);
        }
        else
        {
          v31 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v2;
        if (v30 == v31)
          goto LABEL_15;
      }
    }
    if (v1 < 0)
      v36 = v1;
    else
      v36 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v1);
    if (v15 == v37)
      goto LABEL_15;
    goto LABEL_21;
  }
LABEL_13:
  swift_bridgeObjectRelease(v1);
  if (v2)
    goto LABEL_79;
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  while (!((unint64_t)v1 >> 62))
  {
    v13 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13 >= v5)
      goto LABEL_17;
LABEL_78:
    __break(1u);
LABEL_79:
    if (v1 < 0)
      v35 = v1;
    else
      v35 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v1);
  }
  if (v1 < 0)
    v34 = v1;
  else
    v34 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v13 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v1);
  if (v13 < v5)
    goto LABEL_78;
LABEL_17:
  sub_10006811C(v5, v13);
  return v38;
}

uint64_t sub_10006811C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v5);
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain(v5);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  v14 = (void *)swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain(v5);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    v14 = (void *)swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000683EC(uint64_t a1)
{
  return sub_1001300FC(a1, (uint64_t *)&unk_1006424B0, &qword_100644418, (uint64_t *)&unk_100643CB0, (uint64_t *)sub_1000E0FD8);
}

uint64_t type metadata accessor for DOCCollectionNodes()
{
  return objc_opt_self(_TtC5Files18DOCCollectionNodes);
}

uint64_t sub_100068430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(__int128 *, uint64_t);
  char v7;
  __int128 v9;
  __int128 v10;

  v3 = a3;
  v6 = *(uint64_t (**)(__int128 *, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (!a2)
  {
    v9 = 0u;
    v10 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v10 + 1) = swift_getObjectType(a2, a2);
  *(_QWORD *)&v9 = a2;
  if (v3)
LABEL_3:
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain(a2);
  v7 = v6(&v9, v3);
  swift_release(v5);
  swift_bridgeObjectRelease(v3);
  sub_10000CB4C((uint64_t)&v9, &qword_100642730);
  return v7 & 1;
}

uint64_t sub_1000684F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100068500(a1, a2, *(uint64_t (**)(_QWORD *, uint64_t))(v2 + 16));
}

uint64_t sub_100068500(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *, uint64_t))
{
  _QWORD v7[4];

  v7[3] = sub_10006922C(&qword_100642730);
  v7[0] = swift_allocObject(&unk_1005D93A8, 48, 7);
  sub_1000685A8(a1, v7[0] + 16);
  LOBYTE(a3) = a3(v7, a2);
  sub_100068588(v7);
  return a3 & 1;
}

uint64_t sub_100068588(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1000685A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100642730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000685F0(uint64_t a1, objc_class *a2)
{
  uint64_t v2;

  return sub_1000685F8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1000685F8(uint64_t a1, Class isa, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  unsigned __int8 v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  _BYTE v15[32];

  sub_100069BD8(a1, (uint64_t)v15);
  v7 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if ((swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    return 1;
  v8 = v14;
  if (a3)
  {
    swift_unknownObjectRetain(v14);
    if (isa)
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(a3, "evaluateWithObject:substitutionVariables:", v8, isa);
    swift_unknownObjectRelease(v8);

  }
  else
  {
    v10 = 1;
  }
  v11 = objc_opt_self(FPItem);
  v12 = (void *)swift_dynamicCastObjCClass(v8, v11);
  if (v12 && objc_msgSend(v12, "isTrashed") || (v10 & 1) == 0)
  {
    swift_unknownObjectRelease(v8);
    return 0;
  }
  else
  {
    v9 = objc_msgSend(a4, "canHostAppPerformAction:targetNode:", 2, v8);
    swift_unknownObjectRelease(v8);
  }
  return (uint64_t)v9;
}

void sub_100068748()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void **v38;
  char *v39;
  void *v40;
  char *v41;
  id v42;
  id v43;
  int v44;
  char v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  _QWORD *v56;
  uint64_t v57;
  _BOOL4 v58;
  _BYTE *v59;
  char v60;
  int v61;
  id v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  void *v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unsigned int *v79;
  char *v80;
  char *v81;
  char *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  void (*v89)(unint64_t, char *, uint64_t);
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  char *v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  unint64_t v97;
  unint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  char *v100;
  char *v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  void (*v105)(char *, _QWORD, uint64_t);
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  int v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  unint64_t v117;
  id v118;
  uint64_t v119;
  _QWORD *v120;
  void (*v121)(char *, uint64_t, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  _BYTE v137[24];
  _BYTE v138[128];
  uint64_t v139[10];
  char v140;
  char v141[32];

  v1 = sub_10006922C(&qword_100645FB8);
  v2 = __chkstk_darwin(v1);
  v110 = (uint64_t)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v125 = (uint64_t)&v104 - v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v104 - v6;
  v123 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0);
  v127 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v126 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v108 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v109 = (char *)&v104 - v14;
  v15 = __chkstk_darwin(v13);
  v112 = (char *)&v104 - v16;
  v17 = __chkstk_darwin(v15);
  v122 = (char *)&v104 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v104 - v20;
  v22 = __chkstk_darwin(v19);
  v113 = (char *)&v104 - v23;
  __chkstk_darwin(v22);
  v129 = (char *)&v104 - v24;
  v25 = sub_10006922C(&qword_10064A0A0);
  v26 = __chkstk_darwin(v25);
  v124 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v130 = (char *)&v104 - v28;
  v29 = type metadata accessor for UICellAccessory.MultiselectOptions(0);
  v131 = *(_QWORD *)(v29 - 8);
  v132 = v29;
  __chkstk_darwin(v29);
  v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v32 = *(_QWORD *)(v134 - 8);
  v33 = __chkstk_darwin(v134);
  v128 = (char *)&v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v36 = (char *)&v104 - v35;
  v37 = v0;
  v38 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(v38, v141, 0, 0);
  v39 = (char *)*v38;
  if (!v39)
    return;
  v104 = v21;
  v107 = v7;
  v40 = *(void **)&v39[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
  v119 = v9;
  v133 = v10;
  v41 = v39;
  if (v40)
    v42 = v40;
  else
    v42 = objc_msgSend(v37, "traitCollection");
  v43 = v40;
  v111 = sub_10006964C();
  LODWORD(v121) = v39[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable];
  v44 = v39[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable];
  v135 = v39;
  v45 = v39[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
  v46 = objc_msgSend(v42, "horizontalSizeClass");
  v120 = v37;
  v118 = v42;
  if (v46 == (id)1)
  {
    v116 = 1;
  }
  else
  {
    v47 = objc_msgSend(v42, "preferredContentSizeCategory");
    v116 = UIContentSizeCategory.isAccessibilityCategory.getter(v47);

  }
  v48 = sub_10006922C((uint64_t *)&unk_10064A0B0);
  v49 = *(unsigned __int8 *)(v133 + 80);
  v50 = (v49 + 32) & ~v49;
  v115 = *(_QWORD *)(v133 + 72);
  v51 = swift_allocObject(v48, v50 + v115, v49 | 7);
  *(_OWORD *)(v51 + 16) = xmmword_1004D9670;
  v117 = v51;
  v114 = v50;
  v52 = v134;
  v105 = *(void (**)(char *, _QWORD, uint64_t))(v32 + 104);
  v105(v36, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v134);
  LOBYTE(v50) = ((v121 & v44 & 1) == 0) | v45;
  v53 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v106 = *(_QWORD *)(v53 - 8);
  v54 = v130;
  v121 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56);
  v121(v130, 1, 1, v53);
  UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(v50 & 1, v54, 0, 0);
  static UICellAccessory.multiselect(displayed:options:)(v36, v31);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v31, v132);
  v55 = *(void (**)(char *, uint64_t))(v32 + 8);
  v55(v36, v52);
  sub_100070EDC((uint64_t)v135 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v138, &qword_100658670);
  sub_100070EDC((uint64_t)v138, (uint64_t)v139, &qword_100658670);
  if (sub_1000A849C(v139) == 1)
  {
    __break(1u);
    return;
  }
  v56 = v120;
  if ((v140 & 1) == 0)
  {
    v57 = v53;
    v58 = 0;
    if ((v116 & 1) == 0)
      goto LABEL_16;
    goto LABEL_13;
  }
  if ((v116 & 1) != 0)
  {
    v57 = v53;
    v58 = (v111 & 1) == 0;
LABEL_13:
    if (sub_10006926C() == 3 || sub_10006926C() == 4)
      v58 = 0;
LABEL_16:
    v59 = *(_BYTE **)((char *)v56 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView);
    if (v59[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance] != 2)
    {
      v60 = 0;
      v61 = 0;
      if (!v58)
        goto LABEL_25;
      goto LABEL_24;
    }
    goto LABEL_21;
  }
  v57 = v53;
  v59 = *(_BYTE **)((char *)v120 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView);
  if (v59[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance] != 2)
  {
    v60 = 0;
    goto LABEL_24;
  }
  LOBYTE(v58) = 1;
LABEL_21:
  v60 = (*(uint64_t (**)(void))((swift_isaMask & *v56) + 0x688))();
  if (v58)
  {
LABEL_24:
    v60 |= (*(uint64_t (**)(void))((swift_isaMask & *v56) + 0x520))();
    v61 = 1;
    goto LABEL_25;
  }
  v61 = 0;
LABEL_25:
  v62 = objc_msgSend(v59, "layer", v104);
  v63 = objc_msgSend(v62, "isHidden");

  if ((v60 & 1) != v63)
    objc_msgSend(v59, "setHidden:");
  if (v61)
  {
    v64 = ((uint64_t (*)(char *, _QWORD, uint64_t))v105)(v128, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v134);
    if ((v111 & 1) != 0)
      v65 = 1;
    else
      v65 = *((unsigned __int8 *)v56 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
    v77 = v123;
    v78 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v56) + 0x520))(v64);
    v79 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.actual(_:);
    if ((v78 & 1) != 0)
      v79 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.standard(_:);
    v80 = v124;
    (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v124, *v79, v57);
    v121(v80, 0, 1, v57);
    v81 = v126;
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(v65, v80, 0);
    v82 = v128;
    static UICellAccessory.disclosureIndicator(displayed:options:)(v128, v81);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v81, v77);
    v55(v82, v134);
    v73 = v117;
    v84 = *(_QWORD *)(v117 + 16);
    v83 = *(_QWORD *)(v117 + 24);
    if (v84 >= v83 >> 1)
      v73 = sub_1000697E0(v83 > 1, v84 + 1, 1, v117);
    v72 = v118;
    v85 = v119;
    v86 = v133;
    v87 = (uint64_t)v107;
    *(_QWORD *)(v73 + 16) = v84 + 1;
    v88 = v73 + v114 + v84 * v115;
    v89 = *(void (**)(unint64_t, char *, uint64_t))(v86 + 32);
    v89(v88, v129, v85);
    if ((v63 & 1) == 0)
    {
      v90 = (uint64_t)v56 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory;
      swift_beginAccess((char *)v56 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory, v137, 0, 0);
      sub_1000271D4(v90, v87, &qword_100645FB8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v87, 1, v85) == 1)
      {
        sub_10000CB4C(v87, &qword_100645FB8);
      }
      else
      {
        v96 = v113;
        v89((unint64_t)v113, (char *)v87, v85);
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v104, v96, v85);
        v98 = *(_QWORD *)(v73 + 16);
        v97 = *(_QWORD *)(v73 + 24);
        if (v98 >= v97 >> 1)
          v73 = sub_1000697E0(v97 > 1, v98 + 1, 1, v73);
        *(_QWORD *)(v73 + 16) = v98 + 1;
        v89(v73 + v114 + v98 * v115, v104, v85);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v113, v85);
      }
    }
  }
  else
  {
    v66 = (char *)v56 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory;
    swift_beginAccess((char *)v56 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory, v137, 0, 0);
    v67 = (uint64_t)v66;
    v68 = v125;
    sub_1000271D4(v67, v125, &qword_100645FB8);
    v69 = v133;
    v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
    v71 = v119;
    if (v70(v68, 1, v119) == 1)
    {
      sub_10000CB4C(v68, &qword_100645FB8);
      v73 = v117;
      v72 = v118;
      if ((v63 & 1) == 0)
      {
        v74 = (char *)v56 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory;
        swift_beginAccess((char *)v56 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory, &v136, 0, 0);
        v75 = (uint64_t)v74;
        v76 = v110;
        sub_1000271D4(v75, v110, &qword_100645FB8);
        if (v70(v76, 1, v71) == 1)
        {
          sub_10000CB4C(v76, &qword_100645FB8);
        }
        else
        {
          v99 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 32);
          v100 = v109;
          v99(v109, v76, v71);
          v101 = v108;
          (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v108, v100, v71);
          v103 = *(_QWORD *)(v73 + 16);
          v102 = *(_QWORD *)(v73 + 24);
          if (v103 >= v102 >> 1)
            v73 = sub_1000697E0(v102 > 1, v103 + 1, 1, v73);
          *(_QWORD *)(v73 + 16) = v103 + 1;
          v99((char *)(v73 + v114 + v103 * v115), (uint64_t)v101, v71);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v109, v71);
        }
      }
    }
    else
    {
      v91 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 32);
      v92 = v122;
      v91(v122, v68, v71);
      v93 = v112;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v112, v92, v71);
      v73 = v117;
      v72 = v118;
      v95 = *(_QWORD *)(v117 + 16);
      v94 = *(_QWORD *)(v117 + 24);
      if (v95 >= v94 >> 1)
        v73 = sub_1000697E0(v94 > 1, v95 + 1, 1, v117);
      *(_QWORD *)(v73 + 16) = v95 + 1;
      v91((char *)(v73 + v114 + v95 * v115), (uint64_t)v93, v71);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v122, v71);
    }
  }
  UICollectionViewListCell.accessories.setter(v73);

}

uint64_t sub_10006922C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10006926C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v12;
  id v13;
  id v14;
  int v15;
  id v16;
  void *v17;
  __n128 v18;
  char v19;
  _BYTE v20[24];
  _BYTE v21[88];
  _OWORD v22[5];
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance);
  if ((_DWORD)v3 == 10)
  {
    v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v20, 0, 0);
    v6 = *v4;
    if (!*v4)
      goto LABEL_8;
    ObjectType = swift_getObjectType(*v4, v5);
    swift_unknownObjectRetain(v6);
    sub_10006FA3C(ObjectType, (uint64_t)v21);
    swift_unknownObjectRelease(v6);
    sub_100070EDC((uint64_t)v21, (uint64_t)v22, (uint64_t *)&unk_10064A070);
    if (*(_QWORD *)&v22[0] != 1)
    {
      v26 = v22[2];
      v27 = v22[3];
      v28 = v22[4];
      v29 = v23;
      v24 = v22[0];
      v25 = v22[1];
      v3 = sub_1000D2B10();
      sub_1002617E4((uint64_t)v21);
      goto LABEL_10;
    }
    v9 = (void *)*v4;
    if (!v9)
    {
LABEL_8:
      v3 = 2;
LABEL_10:
      *(_BYTE *)(v1 + v2) = v3;
      return v3;
    }
    v10 = swift_getObjectType(v9, v8);
    if (objc_msgSend((id)swift_unknownObjectRetain(v9), "isExcludedFromSync")
      && objc_msgSend(v9, "isExternalDownloadPlaceholder"))
    {
      swift_unknownObjectRelease(v9);
      goto LABEL_8;
    }
    if (objc_msgSend(v9, "isExcludedFromSync"))
    {
      swift_unknownObjectRelease(v9);
      v3 = 4;
      goto LABEL_10;
    }
    v12 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
    if (v12 && !objc_msgSend(v12, "isFinished") || (objc_msgSend(v9, "isCopying") & 1) != 0)
    {
LABEL_17:
      swift_unknownObjectRelease(v9);
      v3 = 7;
      goto LABEL_10;
    }
    if (objc_msgSend(v9, "isDownloading"))
    {
      v13 = objc_msgSend(v9, "downloadingError");
      if (!v13)
        goto LABEL_17;

    }
    if (objc_msgSend(v9, "isCloudItem")
      && (objc_msgSend(v9, "isDownloading") & 1) == 0
      && (objc_msgSend(v9, "isExternalDownloadPlaceholder") & 1) == 0)
    {
      if (!objc_msgSend(v9, "isDownloaded"))
        goto LABEL_47;
      if (!objc_msgSend(v9, "isFolder"))
        goto LABEL_24;
      v16 = objc_msgSend(v9, "cachedDomain");
      if (!v16)
        goto LABEL_24;
      v17 = v16;
      if (objc_msgSend(v16, "isiCloudDriveProvider"))
      {
        v19 = FPProviderDomain.shouldUseDSEnumeration.getter(v18);

        if ((v19 & 1) == 0)
          goto LABEL_24;
      }
      else
      {

      }
      if ((objc_msgSend(v9, "isRecursivelyDownloaded") & 1) == 0)
      {
LABEL_47:
        swift_unknownObjectRelease(v9);
        v3 = 1;
        goto LABEL_10;
      }
    }
LABEL_24:
    v14 = objc_msgSend(v9, "uploadingError");
    if (v14 || (v14 = objc_msgSend(v9, "downloadingError")) != 0)
    {
      swift_unknownObjectRelease(v9);

      v3 = 3;
      goto LABEL_10;
    }
    if (objc_msgSend(v9, "isCloudItem")
      && objc_msgSend(v9, "isItemPinned")
      && (objc_msgSend(v9, "isExternalDownloadPlaceholder") & 1) == 0)
    {
      swift_unknownObjectRelease(v9);
      v3 = 9;
      goto LABEL_10;
    }
    if (objc_msgSend(v9, "isCloudItem")
      && (objc_msgSend(v9, "isUploaded") & 1) == 0
      && (objc_msgSend(v9, "isExternalDownloadPlaceholder") & 1) == 0)
    {
      swift_unknownObjectRelease(v9);
      v3 = 5;
      goto LABEL_10;
    }
    v15 = DOCNode.collaborationType.getter(v10);
    swift_unknownObjectRelease(v9);
    if (v15 == 2)
    {
      v3 = 8;
      goto LABEL_10;
    }
    if (v15 != 3)
    {
      v3 = (v15 << 31 >> 31) & 6;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  return v3;
}

uint64_t sub_10006964C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  id *v3;
  id v4;
  void *v5;
  uint64_t v6;
  int v7;
  unsigned __int8 v8;
  uint64_t result;
  _BYTE v10[24];

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory);
  if (v2 != 2)
    return v2 & 1;
  v3 = (id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v10, 0, 0);
  v4 = *v3;
  if (!*v3)
    goto LABEL_15;
  if (!objc_msgSend((id)swift_unknownObjectRetain(*v3), "isActionable")
    || (v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress)) != 0
    && !objc_msgSend(v5, "isFinished"))
  {
LABEL_14:
    swift_unknownObjectRelease(v4);
    goto LABEL_15;
  }
  v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
  v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
  if (v7 == 2)
  {
    if (*v3)
    {
      v8 = objc_msgSend(*v3, "isFolder");
      *(_BYTE *)(v0 + v6) = v8;
      swift_unknownObjectRelease(v4);
      if ((v8 & 1) == 0)
        goto LABEL_15;
LABEL_12:
      result = 0;
      *(_BYTE *)(v0 + v1) = 0;
      return result;
    }
    *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 0;
    goto LABEL_14;
  }
  swift_unknownObjectRelease(v4);
  if ((v7 & 1) != 0)
    goto LABEL_12;
LABEL_15:
  result = 1;
  *(_BYTE *)(v0 + v1) = 1;
  return result;
}

uint64_t variable initialization expression of DOCButton.hoverEffectsAllowedIfInteractionDisabled()
{
  return 0;
}

id sub_10006976C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id result;
  _BYTE v4[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v4, 0, 0);
  if (!*v1)
    return 0;
  v2 = *(void **)(*v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (!v2)
    return 0;
  result = objc_msgSend(v2, "horizontalSizeClass");
  if (result != (id)1)
    return 0;
  return result;
}

uint64_t sub_1000697E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, (uint64_t *)&unk_10064A0B0, (uint64_t (*)(_QWORD))&type metadata accessor for UICellAccessory);
}

uint64_t sub_1000697F4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10006922C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100082160(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_100069A04()
{
  uint64_t v0;
  uint64_t v1;
  Class isa;
  uint64_t v3;
  Class v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[32];
  uint64_t v17;
  _QWORD v18[4];
  unint64_t v19;

  v1 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors);
  sub_10004F2F0(0, &qword_100645410, NSSortDescriptor_ptr);
  swift_bridgeObjectRetain(v3);
  v4 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  v5 = -[objc_class sortedArrayUsingDescriptors:](isa, "sortedArrayUsingDescriptors:", v4);

  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, (char *)&type metadata for Any + 8);
  v7 = _swiftEmptyArrayStorage;
  v19 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    v9 = v6 + 32;
    swift_bridgeObjectRetain(v6);
    do
    {
      sub_100069BD8(v9, (uint64_t)v18);
      sub_100069BD8((uint64_t)v18, (uint64_t)v16);
      if ((swift_dynamicCast(&v17, v16, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
        v17 = 0;
      v11 = sub_100068588(v18);
      v12 = v17;
      if (v17)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v14 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
        specialized Array._endMutation()(v10);
      }
      v9 += 32;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(v6);
    v7 = (_QWORD *)v19;
  }
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100069BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_100069C14(unint64_t a1)
{
  return sub_10007B918(a1, FINode_ptr);
}

uint64_t sub_100069C20(Swift::Int *a1, void *a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  Swift::Int v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_1004445F8(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_10004A0D8(v29, &qword_100653160);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_100444640(v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_10006A6D0((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native, &qword_100653160, (unint64_t *)&unk_100641970, FINode_ptr);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_100069EDC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t **v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  uint64_t isa;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t aBlock[5];
  uint64_t v63;
  char v64[24];
  char v65[32];

  v1 = v0;
  v56 = type metadata accessor for Logger(0);
  v59 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v58 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_10064F398);
  v4 = __chkstk_darwin(v3);
  v57 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v53 - v6;
  v8 = type metadata accessor for DispatchTime(0);
  v60 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (uint64_t **)((char *)&v53 - v13);
  __chkstk_darwin(v12);
  v16 = (char *)&v53 - v15;
  v17 = type metadata accessor for DispatchPredicate(0);
  isa = (uint64_t)v17[-1].isa;
  __chkstk_darwin(v17);
  v20 = (uint64_t *)((char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, NSObject *))(isa + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  v22 = v21;
  v23 = _dispatchPreconditionTest(_:)(v20);
  v24 = (*(uint64_t (**)(_QWORD *, NSObject *))(isa + 8))(v20, v17);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  static DispatchTime.now()(v24);
  v23 = (uint64_t)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates], v65, 1, 0);
  v25 = *(_QWORD *)v23;
  if ((*(_QWORD *)v23 & 0xC000000000000001) != 0)
  {
    if (v25 < 0)
      v26 = *(_QWORD *)v23;
    else
      v26 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v23);
    v27 = __CocoaSet.count.getter(v26);
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    v27 = *(_QWORD *)(v25 + 16);
  }
  isa = v8;
  if (v27 < 1)
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v16, v8);
  v28 = sub_10006A52C();
  v29 = v60;
  if ((v28 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v16, v8);
  v30 = (uint64_t)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime], v64, 0, 0);
  v55 = v30;
  sub_100339178(v30, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1, v8) == 1)
  {
    sub_10000CB4C((uint64_t)v7, &qword_10064F398);
    goto LABEL_19;
  }
  (*(void (**)(uint64_t **, char *, uint64_t))(v29 + 32))(v14, v7, v8);
  DispatchTime.advanced(by:)(&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval]);
  if ((static DispatchTime.< infix(_:_:)(v16, v11) & 1) == 0)
  {
    v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v33(v11, v8);
    v33((char *)v14, v8);
    isa = v8;
LABEL_19:
    v34 = *(_QWORD *)v23;
    v35 = swift_bridgeObjectRetain(*(_QWORD *)v23);
    v14 = sub_10007EC24(v35);
    v36 = swift_bridgeObjectRelease(v34);
    v37 = Logger.Enumeration.unsafeMutableAddressor(v36);
    v39 = v58;
    v38 = v59;
    v8 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v37, v56);
    v40 = swift_retain_n(v14, 2);
    v17 = Logger.logObject.getter(v40);
    v54 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v17, (os_log_type_t)v54))
    {

      swift_release_n(v14, 2, v43);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v8);
      goto LABEL_25;
    }
    v7 = (char *)swift_slowAlloc(22, -1);
    v53 = swift_slowAlloc(32, -1);
    aBlock[0] = v53;
    *(_DWORD *)v7 = 136446466;
    v61 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100528BF0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, aBlock);
    *((_WORD *)v7 + 6) = 2048;
    if (((unint64_t)v14 & 0x8000000000000000) == 0 && ((unint64_t)v14 & 0x4000000000000000) == 0)
    {
      v41 = (uint64_t)v14[2];
LABEL_23:
      v29 = v60;
      swift_release(v14);
      v61 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, aBlock);
      swift_release(v14);
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v54, "[DSEnumeration] %{public}s: updated %ld nodes", (uint8_t *)v7, 0x16u);
      v42 = v53;
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v8);
LABEL_25:
      v44 = *(_QWORD *)v23;
      *(_QWORD *)v23 = &_swiftEmptySetSingleton;
      swift_bridgeObjectRelease(v44);
      v45 = (uint64_t)v57;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v57, v16, isa);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v45, 0, 1, isa);
      v46 = v55;
      swift_beginAccess(v55, aBlock, 33, 0);
      sub_10008BA10(v45, v46);
      swift_endAccess(aBlock);
      v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] = 0;
      v47 = swift_allocObject(&unk_1005DE948, 32, 7);
      *(_QWORD *)(v47 + 16) = v1;
      *(_QWORD *)(v47 + 24) = v14;
      aBlock[4] = (uint64_t)sub_1000A9404;
      v63 = v47;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005DE960;
      v48 = _Block_copy(aBlock);
      v49 = v29;
      v50 = v63;
      v51 = v1;
      swift_release(v50);
      DOCRunInMainThread(v48);
      _Block_release(v48);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v16, isa);
    }
LABEL_27:
    v52 = swift_bridgeObjectRetain(v14);
    v41 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_release(v14);
    goto LABEL_23;
  }
  if (v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] != 1)
  {
    v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] = 1;
    sub_10000884C((uint64_t)v11);
  }
  v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v11, v8);
  v32((char *)v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v32)(v16, v8);
}

uint64_t sub_10006A52C()
{
  _BYTE *v0;
  id v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  unsigned __int8 v5;

  if (v0[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] == 2)
    return 0;
  v1 = objc_msgSend(v0, "isGathering");
  if ((v1 & 1) != 0)
    return 0;
  v3 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
  __chkstk_darwin(v1);
  swift_retain(v3);
  os_unfair_lock_lock(v3 + 4);
  sub_10006A620(&v5);
  v2 = v5;
  os_unfair_lock_unlock(v3 + 4);
  swift_release(v3);
  return v2;
}

uint64_t sub_10006A608@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_10032E3F8(*(_QWORD *)(v1 + 16), a1);
}

void sub_10006A620(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving);
}

unint64_t sub_10006A638()
{
  unint64_t result;

  result = qword_1006424F0;
  if (!qword_1006424F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1006424F0);
  }
  return result;
}

_QWORD *sub_10006A67C@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_10006A6B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes);
  *a1 = v2;
  return swift_bridgeObjectRetain(v2);
}

void sub_10006A6D0(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5, _QWORD *a6)
{
  uint64_t *v6;
  uint64_t *v9;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v9 = v6;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_14;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10004A0D8(v14, a4);
  }
  else
  {
    if (v13 > v12)
    {
      sub_1000CD298(a4);
      goto LABEL_14;
    }
    sub_100082DD0(v14, a4);
  }
  v15 = *v6;
  v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v6 + 40));
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = sub_10004F2F0(0, a5, a6);
    v19 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
    v20 = static NSObject.== infix(_:_:)(v19, a1);

    if ((v20 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v18);
      __break(1u);
    }
    else
    {
      v21 = ~v17;
      while (1)
      {
        a2 = (a2 + 1) & v21;
        if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
        v23 = static NSObject.== infix(_:_:)(v22, a1);

        if ((v23 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v24 = *v9;
  *(_QWORD *)(*v9 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * a2) = a1;
  v25 = *(_QWORD *)(v24 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v27;
}

void sub_10006A860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  void *v4;
  void **v5;
  void *v6;
  id v7;

  v1 = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return;
    goto LABEL_3;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = _CocoaArrayWrapper.endIndex.getter(a1);
  if (v2)
  {
LABEL_3:
    if (v2 < 1)
    {
      __break(1u);
    }
    else if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        sub_100069C20((Swift::Int *)&v7, v4);

      }
    }
    else
    {
      v5 = (void **)(v1 + 32);
      do
      {
        v6 = *v5++;
        sub_100069C20((Swift::Int *)&v7, v6);

        --v2;
      }
      while (v2);
    }
  }
}

id sub_10006A92C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;

  if ((a3 & 0x8000000000000000) == 0)
    return a1;
  v4 = (void *)(a3 & 0x7FFFFFFFFFFFFFFFLL);
  swift_retain(a1);
  return v4;
}

void sub_10006A958(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void **v15;
  __int128 v16;
  void *v17;
  void *v18;
  int v19;
  unsigned int v20;
  int v21;
  id v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char v26;
  _BOOL4 v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void *v44;
  void *v45;
  char *v46;
  id v47;
  char v48;
  id v49;
  int v50;
  void *v51;
  uint64_t ObjectType;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BOOL4 v62;
  id v63;
  char *v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  void *v69;
  _OWORD *v70;
  unsigned int v71;
  unsigned int v72;
  id v73;
  uint64_t v74;
  float64x2_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _QWORD v83[16];
  float64x2_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  _OWORD v96[11];
  uint64_t v97;
  _QWORD v98[25];

  v2 = v1;
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v66 - v9;
  v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits;
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (v12)
  {
    swift_retain();
    sub_10006B5D4((uint64_t)&v84);
    swift_release(v12);
    v96[8] = v92;
    v96[9] = v93;
    v96[10] = v94;
    v97 = v95;
    v96[4] = v88;
    v96[5] = v89;
    v96[6] = v90;
    v96[7] = v91;
    v96[0] = v84;
    v96[1] = v85;
    v96[2] = v86;
    v96[3] = v87;
    DOCSplitBrowserViewController.didCommitPreview(of:)(v96);
  }
  else
  {
    sub_1000D07C0((uint64_t)v96);
  }
  sub_100070EDC((uint64_t)v96, (uint64_t)v98, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v98, (uint64_t)v96, (uint64_t *)&unk_100641300);
  v13 = *(_QWORD *)&v2[v11];
  v14 = v10;
  if (v13)
  {
    swift_retain();
    sub_10006B424((uint64_t)&v75);
    swift_release(v13);
    v88 = v79;
    v89 = v80;
    v90 = v81;
    v91 = v82;
    v84 = v75;
    v85 = v76;
    v86 = v77;
    v87 = v78;
    DOCSplitBrowserViewController.didCommitPreview(of:)(&v84);
  }
  else
  {
    sub_1000D07E4(&v84);
  }
  sub_100070EDC((uint64_t)&v84, (uint64_t)v83, &qword_100658670);
  sub_100070EDC((uint64_t)v83, (uint64_t)&v84, &qword_100658670);
  v73 = a1;
  v15 = (void **)&a1[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], &v74, 0, 0);
  v69 = *v15;
  v16 = *(_OWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 16];
  v75 = *(float64x2_t *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
  v76 = v16;
  *(_QWORD *)&v77 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 32];
  v70 = sub_10006B078();
  v17 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v72 = objc_msgSend(v17, "preferLastUsedDate");
  v71 = objc_msgSend(v2, "isEditing");
  v18 = *v15;
  if (*v15)
  {
    v67 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
    v19 = v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
    swift_unknownObjectRetain(v18);
    if (v19 == 1)
      v20 = objc_msgSend(v18, "isFolder") ^ 1;
    else
      v20 = 1;
    v68 = v20;
    if (sub_10007181C(v18))
    {
      v22 = objc_msgSend(v18, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v22);

      static UTType.folder.getter(v23);
      LOBYTE(v22) = static UTType.== infix(_:_:)(v14, v8);
      v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v8, v4);
      v24(v14, v4);
      if ((v22 & 1) != 0
        && objc_msgSend(v17, "forPickingDocuments")
        && objc_msgSend(v2, "isEditing"))
      {
        v21 = v2[v67];
      }
      else
      {
        v21 = 1;
      }
    }
    else
    {
      v21 = 0;
    }
    swift_unknownObjectRelease(v18);
  }
  else
  {
    v68 = 0;
    v21 = 1;
  }
  v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v25)
  {
    v26 = *(_BYTE *)(v25 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
    LODWORD(v67) = v21;
    if ((v26 & 1) != 0)
    {
      v27 = 0;
    }
    else
    {
      v28 = *(id *)(v25 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      v29 = objc_opt_self(FPQueryCollection);
      v27 = swift_dynamicCastObjCClass(v28, v29) != 0;

    }
    if ((*(_BYTE *)(v25 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v30 = 0;
    }
    else
    {
      v31 = *(id *)(v25 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      v32 = objc_opt_self(FPQueryCollection);
      v33 = (void *)swift_dynamicCastObjCClass(v31, v32);
      if (v33)
        v30 = objc_msgSend(v33, "itemsOrigin");
      else
        v30 = 0;

    }
    v34 = *(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    v35 = objc_msgSend(v34, "identifier");
    v36 = DOCDocumentSourceIdentifierTrashedItems;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v42 = v40;
    if (v37 == v41 && v39 == v40)
      v43 = 1;
    else
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);

    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v42);
    v44 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
    if (v44)
    {
      v45 = *v15;
      if (*v15)
      {
        v46 = v44;
        swift_unknownObjectRetain(v45);
        if (v43 & 1 | (v30 == (id)1)
          || v27
          && ((v47 = objc_msgSend(v45, "providerDomainID"),
               v48 = DOCProviderDomainIDIsSharedServerDomainID(v47),
               v47,
               (v48 & 1) != 0)
           || (v49 = objc_msgSend(v45, "providerDomainID"),
               v50 = DOCProviderDomainIDIsExternalDevice(v49),
               v49,
               v50)))
        {
          v51 = *(void **)&v46[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver];
          ObjectType = swift_getObjectType(v45);
          v53 = v51;
          v54 = (void *)DOCNode.sourceIdentifier.getter(ObjectType);
          static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
          v56 = v55;

          v57 = String._bridgeToObjectiveC()();
          v58 = objc_msgSend(v53, "cachedDisplayNameForSourceIdentifier:", v57, swift_bridgeObjectRelease(v56).n128_f64[0]);

          if (v58)
          {
            v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
            v61 = v60;

            swift_unknownObjectRelease(v45);
LABEL_44:
            v62 = v69 == 0;
            v63 = v73;
            sub_1000716DC(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
            sub_1000717C0(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
            v64 = v2;
            v65 = v70;
            swift_bridgeObjectRetain(v61);
            sub_1004B0734((uint64_t)v63, (uint64_t)v63, v96, &v84, v64, v62, &v75, v65, v72, v68, v71, 0, (uint64_t)v30, v67, v59, v61);

            swift_bridgeObjectRelease(v61);
            sub_1000717C0(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
            sub_1000716DC(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);

            sub_1000716DC(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
            sub_1000717C0(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
            swift_bridgeObjectRelease(v61);

            return;
          }
        }

        swift_unknownObjectRelease(v45);
      }
    }
    v59 = 0;
    v61 = 0xE000000000000000;
    goto LABEL_44;
  }
  __break(1u);
}

_OWORD *sub_10006B078()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  _BYTE *v11;
  _QWORD *v12;
  _BYTE *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _QWORD *v24;
  _BYTE *v25;

  v2 = objc_msgSend(v0, "effectiveAppearance");
  if (v2)
    return v2;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
  if (v3)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser, v1);
    if (Strong)
    {
      v5 = Strong;
      v2 = objc_msgSend(Strong, "effectiveAppearance");

      if (v2)
      {
        v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(v6);
        v8 = static os_log_type_t.debug.getter();
        v9 = sub_10006922C((uint64_t *)&unk_100644560);
        result = (_OWORD *)swift_allocObject(v9, 72, 7);
        result[1] = xmmword_1004D9670;
        v11 = *(_BYTE **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
        if (v11)
        {
          v12 = result;
          if ((v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
            v11 = *(_BYTE **)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
          v13 = v11;
          v12[7] = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
          v12[8] = sub_100083450((unint64_t *)&unk_100642720, (unint64_t *)&qword_100642430, NSObject_ptr);
          v12[4] = v13;
          os_log(_:dso:log:type:_:)("falling back on document browser's appearance (item collection: %@)", 67, 2, &_mh_execute_header, v7, v8, v12);
LABEL_15:

          swift_bridgeObjectRelease(v12);
          return v2;
        }
        goto LABEL_23;
      }
    }
  }
  v14 = objc_msgSend((id)objc_opt_self(DOCUISession), "anyWindowPreferingKeyWindow");
  if (v14)
  {
    v15 = v14;
    v2 = objc_msgSend(v14, "effectiveAppearance");

    if (v2)
    {
      v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(v14);
      v16 = static os_log_type_t.debug.getter();
      v17 = sub_10006922C((uint64_t *)&unk_100644560);
      result = (_OWORD *)swift_allocObject(v17, 72, 7);
      result[1] = xmmword_1004D9670;
      v18 = *(_BYTE **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (v18)
      {
        v12 = result;
        if ((v18[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
          v18 = *(_BYTE **)&v18[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        v19 = v18;
        v12[7] = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
        v12[8] = sub_100083450((unint64_t *)&unk_100642720, (unint64_t *)&qword_100642430, NSObject_ptr);
        v12[4] = v19;
        os_log(_:dso:log:type:_:)("falling back on key window's appearance (item collection: %@)", 61, 2, &_mh_execute_header, v7, v16, v12);
        goto LABEL_15;
      }
      goto LABEL_22;
    }
  }
  v20 = *(id *)DOCLog.UI.unsafeMutableAddressor(v14);
  v21 = static os_log_type_t.debug.getter();
  v22 = sub_10006922C((uint64_t *)&unk_100644560);
  result = (_OWORD *)swift_allocObject(v22, 72, 7);
  result[1] = xmmword_1004D9670;
  v23 = *(_BYTE **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v23)
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  v24 = result;
  if ((v23[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
    v23 = *(_BYTE **)&v23[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  v25 = v23;
  v24[7] = sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v24[8] = sub_100083450((unint64_t *)&unk_100642720, (unint64_t *)&qword_100642430, NSObject_ptr);
  v24[4] = v25;
  os_log(_:dso:log:type:_:)("falling back on default appearance (item collection: %@)", 56, 2, &_mh_execute_header, v20, v21, v24);

  swift_bridgeObjectRelease(v24);
  return objc_msgSend(objc_allocWithZone((Class)DOCAppearance), "init");
}

__n128 sub_10006B424@<Q0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __n128 v15;
  _OWORD v16[8];
  _QWORD v17[16];
  __int128 v18;
  __int128 v19;
  _BYTE v20[48];
  _BYTE v21[48];
  _QWORD v22[16];
  _OWORD v23[2];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __n128 v30;
  uint64_t v31;

  v3 = (uint64_t)(v1 + 52);
  sub_100070EDC((uint64_t)(v1 + 52), (uint64_t)v22, &qword_100658670);
  sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_100658670);
  if (sub_1000A849C((uint64_t *)v23) == 1)
  {
    sub_10000E5B0(v1, (uint64_t)&v18);
    v16[4] = *(_OWORD *)&v20[32];
    v16[5] = *(_OWORD *)v21;
    v16[6] = *(_OWORD *)&v21[16];
    v16[7] = *(_OWORD *)&v21[32];
    v16[0] = v18;
    v16[1] = v19;
    v16[2] = *(_OWORD *)v20;
    v16[3] = *(_OWORD *)&v20[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v16);
    sub_100070EDC(v3, (uint64_t)v17, &qword_100658670);
    sub_100070EDC((uint64_t)v16, v3, &qword_100658670);
    sub_100027B74((uint64_t)&v18);
    sub_1000717C0(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
    v4 = *(_QWORD *)&v21[40];
    v14 = *(_OWORD *)&v21[8];
    v15 = *(__n128 *)&v21[24];
    v5 = v21[0];
    v12 = *(_OWORD *)&v20[24];
    v13 = *(_OWORD *)&v20[8];
    v6 = *(_QWORD *)&v20[40];
    v7 = *(_QWORD *)v20;
    v11 = v19;
    v8 = v18;
  }
  else
  {
    v4 = v31;
    v14 = v29;
    v15 = v30;
    v5 = v28;
    v12 = v26;
    v13 = v25;
    v6 = v27;
    v7 = v24;
    v11 = v23[1];
    v8 = v23[0];
  }
  v10 = v8;
  sub_1000717C0(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 88) = v14;
  result = v15;
  *(__n128 *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 120) = v4;
  return result;
}

double sub_10006B5D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  UIFont v13;
  char v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  char v28;
  char v29;
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  char v56;
  double v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  _OWORD v70[11];
  uint64_t v71;
  _QWORD v72[23];
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81[9];
  _QWORD v82[23];
  uint64_t v83[9];
  char v84;
  char v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  uint64_t v98;

  v2 = v1;
  v4 = v1 + 136;
  sub_100070EDC(v1 + 136, (uint64_t)v82, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v82, (uint64_t)v83, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v83) == 1)
  {
    swift_beginAccess(v1 + 608, v72, 33, 0);
    sub_1002F4858(&v73);
    swift_endAccess(v72);
    v5 = v78;
    v6 = (void *)objc_opt_self(UIFont);
    v7 = *((_QWORD *)&v73 + 1);
    v8 = v74;
    v47 = v4;
    v9 = v75;
    v10 = v76;
    v56 = v77;
    v11 = *(_QWORD *)(v2 + 552);
    v46 = objc_msgSend(v6, "preferredFontForTextStyle:compatibleWithTraitCollection:", (_QWORD)v73, v11);
    v12 = objc_msgSend(v6, "preferredFontForTextStyle:compatibleWithTraitCollection:", v8, v11);
    v13.super.isa = UIFont.doc_withFeatureMonospacedDigits()().super.isa;
    v45 = v80;
    v55 = v79;
    v14 = v56 & 1;
    sub_10009E100(v81);
    v15 = v81[0];
    v16 = v81[1];
    v57 = v81[2];
    v17 = v81[4];
    v43 = v81[3];
    v44 = v81[5];
    v18 = v81[6];
    v19 = v81[7];
    v20 = v81[8];
    sub_1002F4F58();
    v41 = v22;
    v42 = v21;
    v24 = v23;
    v26 = v25;
    sub_1001456E8((void **)&v73);
    *(_QWORD *)&v58 = v46;
    *((_QWORD *)&v58 + 1) = v7;
    v27 = v7;
    *(_QWORD *)&v59 = v12;
    *((UIFont *)&v59 + 1) = v13;
    v48 = v9;
    *(_QWORD *)&v60 = v9;
    v28 = v14;
    v29 = v10 & 1;
    v30 = v20;
    *((_QWORD *)&v60 + 1) = v45;
    *(_QWORD *)&v61 = v5;
    *((_QWORD *)&v61 + 1) = v5;
    *(_QWORD *)&v62 = v55;
    BYTE8(v62) = v10 & 1;
    BYTE9(v62) = v28;
    v53 = v16;
    v54 = v15;
    *(double *)&v63 = v15;
    *((double *)&v63 + 1) = v16;
    v31 = v5;
    v32 = v26;
    v33 = v43;
    *(double *)&v64 = v57;
    *((double *)&v64 + 1) = v43;
    v51 = v18;
    v52 = v17;
    *(double *)&v65 = v17;
    v34 = v44;
    v35 = v41;
    *((double *)&v65 + 1) = v44;
    *(double *)&v66 = v18;
    v49 = v19;
    v50 = v32;
    *((double *)&v66 + 1) = v19;
    v36 = v45;
    *(double *)&v67 = v20;
    v37 = v42;
    *((_QWORD *)&v67 + 1) = v42;
    *(_QWORD *)&v68 = v24;
    *((double *)&v68 + 1) = v32;
    v69 = v41;
    v70[6] = v64;
    v70[7] = v65;
    v70[4] = v62;
    v70[5] = v63;
    v70[2] = v60;
    v70[3] = v61;
    v70[0] = v58;
    v70[1] = v59;
    v71 = v41;
    v70[9] = v67;
    v70[10] = v68;
    v70[8] = v66;
    DOCSplitBrowserViewController.didCommitPreview(of:)(v70);
    sub_100070EDC(v47, (uint64_t)v72, (uint64_t *)&unk_100641300);
    v38 = (uint64_t)v46;
    sub_100070EDC((uint64_t)v70, v47, (uint64_t *)&unk_100641300);
    sub_100070B28((uint64_t)&v58);
    sub_1000716DC(v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
    v39 = v31;
  }
  else
  {
    v37 = v95;
    v24 = v96;
    v35 = v98;
    v53 = v87;
    v54 = v86;
    v33 = v89;
    v52 = v90;
    v34 = v91;
    v50 = v97;
    v51 = v92;
    v49 = v93;
    v30 = v94;
    v28 = v85;
    v29 = v84;
    v55 = v83[8];
    v57 = v88;
    v39 = v83[7];
    v31 = v83[6];
    v36 = v83[5];
    v48 = v83[4];
    v13.super.isa = (Class)v83[3];
    v12 = (id)v83[2];
    v27 = v83[1];
    v38 = v83[0];
  }
  sub_1000716DC(v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  *(_QWORD *)a1 = v38;
  *(_QWORD *)(a1 + 8) = v27;
  *(_QWORD *)(a1 + 16) = v12;
  *(UIFont *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = v48;
  *(_QWORD *)(a1 + 40) = v36;
  *(_QWORD *)(a1 + 48) = v31;
  *(_QWORD *)(a1 + 56) = v39;
  *(_QWORD *)(a1 + 64) = v55;
  *(_BYTE *)(a1 + 72) = v29;
  *(_BYTE *)(a1 + 73) = v28;
  *(double *)(a1 + 80) = v54;
  *(double *)(a1 + 88) = v53;
  *(double *)(a1 + 96) = v57;
  *(double *)(a1 + 104) = v33;
  *(double *)(a1 + 112) = v52;
  *(double *)(a1 + 120) = v34;
  *(double *)(a1 + 128) = v51;
  *(double *)(a1 + 136) = v49;
  *(double *)(a1 + 144) = v30;
  *(_QWORD *)(a1 + 152) = v37;
  *(_QWORD *)(a1 + 160) = v24;
  result = v50;
  *(double *)(a1 + 168) = v50;
  *(_QWORD *)(a1 + 176) = v35;
  return result;
}

void sub_10006BA4C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  BOOL v11;
  Class isa;
  objc_class *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  objc_super v22;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_10064A090);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v1, "traitCollection");
  v11 = sub_10007B5C0(4);

  if (v11)
  {
    isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
    v13 = (objc_class *)type metadata accessor for DOCItemCollectionListCell(0);
    v22.receiver = v2;
    v22.super_class = v13;
    objc_msgSendSuper2(&v22, "_bridgedUpdateConfigurationUsingState:", isa);

    sub_10006BE00(a1);
    v14 = type metadata accessor for UIBackgroundConfiguration(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
    UICollectionViewCell.backgroundConfiguration.setter(v9);
    v15 = type metadata accessor for UICellConfigurationState(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v6, a1, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v6, 0, 1, v15);
    sub_10006BFC4((uint64_t)v6);
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_10064A090);
    v17 = objc_msgSend(v2, "contentView");
    v18 = type metadata accessor for DOCItemCollectionView();
    v19 = (void *)UIView.doc_nearestAncestor<A>(ofType:)(v18, v18);

    if (v19)
    {
      v20 = objc_msgSend(v19, "doc_nearestAncestorViewController");

      if (v20)
      {
        v21 = type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass(v20, v21))
        {
          if ((sub_10006BCB4() & 1) != 0)
          {
            objc_msgSend(v2, "directionalLayoutMargins");
            objc_msgSend(v2, "setDirectionalLayoutMargins:");
          }
        }

      }
    }
  }
}

uint64_t sub_10006BCB4()
{
  _BYTE *v0;
  uint64_t result;
  _QWORD *v2;
  __n128 v3;
  unsigned int v4;
  id v5;
  uint64_t v6;
  id v7;
  _BYTE v8[24];

  if ((v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics] & 1) != 0)
    return 1;
  v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  v3 = swift_beginAccess(&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v8, 0, 0);
  if (*v2 == 2)
    return 0;
  result = DOCDeviceIsPad(v3);
  if ((_DWORD)result)
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPickerUI");
    v5 = objc_msgSend(v0, "traitCollection");
    if (v4)
    {
      v6 = UITraitCollection.modifyingTraits(_:)(sub_100190A98, 0);

      v5 = (id)v6;
    }
    v7 = objc_msgSend(v5, "horizontalSizeClass");

    return v7 == (id)2;
  }
  return result;
}

uint64_t sub_10006BDA4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t type metadata accessor for DOCItemCollectionViewController(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100646348, (uint64_t)&nominal type descriptor for DOCItemCollectionViewController);
}

uint64_t type metadata accessor for DOCItemCollectionListCell(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_100649F60, (uint64_t)&nominal type descriptor for DOCItemCollectionListCell);
}

uint64_t sub_10006BE00(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  char *v15;
  _QWORD v18[5];

  v2 = v1;
  v4 = type metadata accessor for UIBackgroundConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics + 136];
  static UIBackgroundConfiguration.listCell()(v6);
  v10 = type metadata accessor for UICellConfigurationState(0);
  v18[3] = v10;
  v18[4] = &protocol witness table for UICellConfigurationState;
  v11 = sub_10006CBAC(v18);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, a1, v10);
  UIBackgroundConfiguration.updated(for:)(v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_100068588(v18);
  if ((sub_10006D164() & 1) != 0)
  {
    v12 = objc_msgSend(v2, "effectiveAppearance");
    if (!v12
      || (v13 = v12,
          v14 = objc_msgSend(v12, "backgroundColor"),
          v13,
          !v14))
    {
      v14 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    }
    UIBackgroundConfiguration.backgroundColor.setter(v14);
  }
  v15 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v18, 0, 0);
  if (!*(_QWORD *)v15
    || (*(_BYTE *)(*(_QWORD *)v15 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_roundedCorners) & 1) == 0)
  {
    v9 = 0.0;
  }
  return UIBackgroundConfiguration.cornerRadius.setter(v9);
}

void sub_10006BFC4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id *v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  _QWORD *v27;
  void (*v28)(char *, uint64_t);
  id v29;
  void *v30;
  Class isa;
  objc_class *v32;
  id v33;
  void *v34;
  objc_class *v35;
  char v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  char **v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  objc_class *v70;
  id v71;
  id v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  char **v93;
  id v94;
  void *v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  uint64_t v102;
  id v103;
  id v104;
  void *v105;
  void *v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  id v114;
  void *v115;
  id v116;
  id v117;
  uint64_t v118;
  void *v119;
  id v120;
  id v121;
  void *v122;
  uint64_t v123;
  char *v124;
  id v125;
  id v126;
  id v127;
  char v128;
  objc_class *v129;
  uint64_t v130;
  id v131;
  char *v132;
  _QWORD v133[5];
  char v134[24];

  v2 = v1;
  v4 = type metadata accessor for UIBackgroundConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v129 - v9;
  v11 = sub_10006922C((uint64_t *)&unk_10064A090);
  __chkstk_darwin(v11);
  v13 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICellConfigurationState(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  v19 = v18;
  sub_1000271D4(v17, (uint64_t)v13, (uint64_t *)&unk_10064A090);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v14) == 1)
  {
    v20 = v19;
    v21 = objc_msgSend(v2, "_bridgedConfigurationState");
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    v19 = v20;
    sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_10064A090);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v13, v14);
  }
  v22 = (id *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v134, 0, 0);
  v24 = *v22;
  v132 = v16;
  if (v24)
  {
    v25 = v24;
    v131 = sub_10006CB98();

    if (*v22)
    {
      v23 = sub_10006F62C();
      v26 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    v131 = 0;
  }
  v26 = 0;
LABEL_9:
  static UIBackgroundConfiguration.listCell()(v23);
  v133[3] = v14;
  v133[4] = &protocol witness table for UICellConfigurationState;
  v27 = sub_10006CBAC(v133);
  v130 = v19;
  (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 16))(v27, v132, v14);
  UIBackgroundConfiguration.updated(for:)(v133);
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v8, v4);
  sub_100068588(v133);
  v29 = objc_msgSend(v2, "tintColor");
  if (!v29)
  {
    __break(1u);
LABEL_49:

    __break(1u);
    goto LABEL_50;
  }
  v30 = v29;
  isa = UIBackgroundConfiguration.resolvedBackgroundColor(for:)((UIColor)v29).super.isa;

  v28(v10, v4);
  v32 = isa;
  v33 = objc_msgSend(v2, "tintColor");
  v129 = v32;
  if (!v33)
  {

    goto LABEL_25;
  }
  v34 = v33;
  sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  v35 = v32;
  v36 = static NSObject.== infix(_:_:)(v35, v34);

  if ((v36 & 1) == 0)
  {
LABEL_25:
    v83 = *v22;
    if (*v22)
    {
      v84 = (void *)objc_opt_self(UIColor);
      v85 = v83;
      v86 = objc_msgSend(v84, "labelColor");
      sub_10006D2C8(v86);

      v87 = *v22;
      if (*v22)
      {
        v88 = (void *)objc_opt_self(UIColor);
        v89 = v87;
        v90 = objc_msgSend(v88, "secondaryLabelColor");
        sub_10006D2BC(v90);

      }
    }
    v91 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel];
    v92 = (void *)objc_opt_self(UIColor);
    v93 = &selRef_quaternaryLabelColor;
    if ((v26 & 1) == 0)
      v93 = &selRef_secondaryLabelColor;
    v94 = objc_msgSend(v92, *v93, v129);
    objc_msgSend(v91, "setTextColor:", v94);

    v95 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel];
    v96 = (void *)objc_opt_self(UIColor);
    v97 = objc_msgSend(v96, "secondaryLabelColor");
    objc_msgSend(v95, "setTextColor:", v97);

    v98 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel];
    v99 = objc_msgSend(v96, "secondaryLabelColor");
    objc_msgSend(v98, "setTextColor:", v99);

    v100 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel];
    v101 = objc_msgSend(v96, "secondaryLabelColor");
    objc_msgSend(v100, "setTextColor:", v101);

    v102 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView];
    v103 = objc_msgSend(v96, "secondaryLabelColor");
    v104 = objc_msgSend(v2, "tintColor");
    if (v104)
    {
      v105 = v104;
      v106 = *(void **)(v102 + OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor);
      *(_QWORD *)(v102 + OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor) = v103;
      v107 = v103;

      v108 = *(void **)(v102 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor);
      *(_QWORD *)(v102 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor) = v105;
      v109 = v105;

      v110 = objc_msgSend((id)objc_opt_self(DOCDownloadProgressView), "defaultTrackColor");
      v111 = *(void **)(v102 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor);
      *(_QWORD *)(v102 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor) = v110;

      sub_10006CBE8();
      v112 = sub_10006E680();
      objc_msgSend(v112, "setNeedsUpdateConfiguration");

      v113 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress];
      v114 = objc_msgSend(v2, "tintColor");
      objc_msgSend(v113, "setTintColor:", v114);

      v115 = *(void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
      if (v115)
      {
        v116 = v115;
        v117 = objc_msgSend(v2, "tintColor");
        objc_msgSend(v116, "setTintColor:", v117);

      }
      v118 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
      v119 = *(void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
      if (v119)
      {
        v120 = v119;
        v121 = objc_msgSend(v96, "labelColor");
        objc_msgSend(v120, "setTextColor:", v121);

        v122 = *(void **)&v2[v118];
        if (v122)
          objc_msgSend(v122, "setTintColor:", 0);
      }
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView], "setSelectionOutlineColor:", 0);
      v82 = v131;
      v70 = v129;
LABEL_37:

      v123 = v130;
      v124 = v132;
      if (*v22)
      {
        v125 = *v22;
        v126 = sub_10006CB98();

        if (v82)
        {
          if (v126)
          {
            sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
            v127 = v82;
            v128 = static NSObject.== infix(_:_:)(v127, v126);

            if ((v128 & 1) != 0)
              goto LABEL_47;
          }
LABEL_46:
          sub_100072D74();

          (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v14);
          return;
        }
        if (v126)
        {

          goto LABEL_46;
        }
      }
      else if (v82)
      {
        goto LABEL_46;
      }
LABEL_47:
      (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v14);

      return;
    }
    goto LABEL_49;
  }
  v37 = *v22;
  if (*v22)
  {
    v38 = (void *)objc_opt_self(UIColor);
    v39 = v37;
    v40 = objc_msgSend(v38, "whiteColor");
    sub_10006D2C8(v40);

    v41 = *v22;
    if (*v22)
    {
      v42 = (void *)objc_opt_self(UIColor);
      v43 = v41;
      v44 = objc_msgSend(v42, "lightTextColor");
      sub_10006D2BC(v44);

    }
  }
  v45 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel];
  v46 = (void *)objc_opt_self(UIColor);
  v47 = &selRef_quaternaryLabelColor;
  if ((v26 & 1) == 0)
    v47 = &selRef_lightTextColor;
  v48 = objc_msgSend(v46, *v47, v129);
  objc_msgSend(v45, "setTextColor:", v48);

  v49 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel];
  v50 = (void *)objc_opt_self(UIColor);
  v51 = objc_msgSend(v50, "lightTextColor");
  objc_msgSend(v49, "setTextColor:", v51);

  v52 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel];
  v53 = objc_msgSend(v50, "lightTextColor");
  objc_msgSend(v52, "setTextColor:", v53);

  v54 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel];
  v55 = objc_msgSend(v50, "lightTextColor");
  objc_msgSend(v54, "setTextColor:", v55);

  v56 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView];
  v57 = objc_msgSend(v50, "lightTextColor");
  v58 = objc_msgSend(v2, "tintColor");
  if (v58)
  {
    v59 = v58;
    v60 = *(void **)(v56 + OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor);
    *(_QWORD *)(v56 + OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor) = v57;
    v61 = v57;

    v62 = *(void **)(v56 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor);
    *(_QWORD *)(v56 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor) = v61;
    v63 = v61;

    v64 = objc_msgSend((id)objc_opt_self(DOCDownloadProgressView), "defaultTrackColorOnSelectedBackground");
    v65 = *(void **)(v56 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor);
    *(_QWORD *)(v56 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor) = v64;

    sub_10006CBE8();
    v66 = sub_10006E680();
    objc_msgSend(v66, "setNeedsUpdateConfiguration");

    v67 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress];
    v68 = objc_msgSend(v50, "lightTextColor");
    objc_msgSend(v67, "setTintColor:", v68);

    v69 = *(void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
    v70 = v129;
    if (v69)
    {
      v71 = v69;
      v72 = objc_msgSend(v50, "lightTextColor");
      objc_msgSend(v71, "setTintColor:", v72);

    }
    v73 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
    v74 = *(void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
    if (v74)
    {
      v75 = v74;
      v76 = objc_msgSend(v50, "whiteColor");
      objc_msgSend(v75, "setTextColor:", v76);

      v77 = *(void **)&v2[v73];
      if (v77)
      {
        v78 = v77;
        v79 = objc_msgSend(v50, "whiteColor");
        objc_msgSend(v78, "setTintColor:", v79);

      }
    }
    v80 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView];
    v81 = objc_msgSend(v50, "lightTextColor");
    objc_msgSend(v80, "setSelectionOutlineColor:", v81);

    v82 = v131;
    goto LABEL_37;
  }
LABEL_50:

  __break(1u);
}

id sub_10006CAEC(SEL *a1, _QWORD *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  char v6;
  char v8;

  v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim);
  if (v3 == 2)
  {
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode) & 1) == 0)
    {
      v4 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
      v5 = (v4 & 1) != 0 || v4 == 2;
      v6 = !v5;
      *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = v6;
      if (!v5)
        return objc_msgSend((id)objc_opt_self(UIColor), *a1);
      return *(id *)(v2 + *a2);
    }
    v8 = *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = v8 & 1;
    if ((v8 & 1) == 0)
      return *(id *)(v2 + *a2);
  }
  else if ((v3 & 1) == 0)
  {
    return *(id *)(v2 + *a2);
  }
  return objc_msgSend((id)objc_opt_self(UIColor), *a1);
}

id sub_10006CB98()
{
  return sub_10006CAEC((SEL *)&selRef_tertiaryLabelColor, &OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleColor);
}

_QWORD *sub_10006CBAC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

void sub_10006CBE8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  _BOOL8 v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress);
    v7 = *(id *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView);
    if (v2)
    {
      v3 = v1;
      v4 = (objc_msgSend(v2, "isFinished") & 1) != 0
        || *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance) != 7;
      v6 = v7;
    }
    else
    {
      v5 = v7;
      v6 = v7;
      v4 = 1;
    }
    objc_msgSend(v6, "setHidden:", v4);
    objc_msgSend(v7, "setCanShowStopButton:", *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton));
    objc_msgSend(v7, "setActiveStrokeColor:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor));
    objc_msgSend(v7, "setInactiveStrokeColor:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor));

  }
}

void sub_10006CCEC(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _BYTE v16[200];
  _QWORD v17[25];

  v3 = v2;
  v5 = *a2;
  v6 = *(void **)(v2 + *a2);
  sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  v7 = v6;
  v8 = static NSObject.== infix(_:_:)(a1, v7);

  if ((v8 & 1) == 0)
  {
    v9 = *(void **)(v3 + v5);
    *(_QWORD *)(v3 + v5) = a1;
    v10 = a1;

    v11 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8);
    *v11 = 0;
    v11[1] = 0;
    swift_bridgeObjectRelease(v12);
    v13 = *(void **)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000D07FC((uint64_t)v16);
    v14 = v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_100070EDC(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v17, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v16, v14, (uint64_t *)&unk_100641310);
    sub_10044930C(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
    v15 = *(void **)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

  }
}

uint64_t type metadata accessor for DOCItemCollectionView()
{
  return objc_opt_self(_TtC5Files21DOCItemCollectionView);
}

void DOCItemCollectionCell.updateConfiguration(using:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  Class isa;
  objc_class *v12;
  uint64_t v13;
  _BYTE *v14;
  char v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  void (*v22)(_BYTE *, uint64_t);
  int v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _BYTE v30[16];
  _BYTE v31[200];
  _BYTE v32[200];
  objc_super v33;

  v2 = v1;
  v4 = type metadata accessor for UICellConfigurationState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v30[-v9];
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v12 = (objc_class *)type metadata accessor for DOCItemCollectionCell();
  v33.receiver = v2;
  v33.super_class = v12;
  objc_msgSendSuper2(&v33, "_bridgedUpdateConfigurationUsingState:", isa);

  v13 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x1F8))();
  if (v13)
  {
    v14 = (_BYTE *)v13;
    v15 = UICellConfigurationState.isFocused.getter();
    v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
    v17 = v16(v10, a1, v4);
    if ((v15 & 1) != 0)
    {
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
      v18 = v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing];
      v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing] = 1;
      if ((v18 & 1) != 0)
      {
LABEL_14:

        return;
      }
    }
    else
    {
      v19 = UICellConfigurationState.isSelected.getter(v17);
      v20 = v16(v8, (uint64_t)v10, v4);
      if ((v19 & 1) != 0)
        v21 = UICellConfigurationState.isEditing.getter(v20) ^ 1;
      else
        v21 = 0;
      v22 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v22(v8, v4);
      v22(v10, v4);
      v23 = v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing];
      v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing] = v21 & 1;
      if ((v21 & 1) == v23)
        goto LABEL_14;
    }
    v24 = *(void **)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

    sub_1000D07FC((uint64_t)v31);
    v25 = (uint64_t)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
    sub_100070EDC((uint64_t)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v32, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v31, v25, (uint64_t *)&unk_100641310);
    sub_1001BF860((uint64_t)v32);
    v26 = *(void **)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

    v27 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v28 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
    if ((v28 & 0x10) == 0)
    {
      v28 |= 0x10uLL;
      *(_QWORD *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v28;
    }
    if (!*(_QWORD *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
      && !sub_10007BAFC())
    {
      *(_QWORD *)&v14[v27] = 0;
      v29 = objc_autoreleasePoolPush();
      sub_10006D2D4(v28, (uint64_t)v14);
      objc_autoreleasePoolPop(v29);
    }
    goto LABEL_14;
  }
}

uint64_t type metadata accessor for DOCItemCollectionCell()
{
  return objc_opt_self(_TtC5Files21DOCItemCollectionCell);
}

uint64_t sub_10006D164()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v19;

  v1 = type metadata accessor for UICellConfigurationState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v19 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = objc_msgSend(v0, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v11) = UICellConfigurationState.isFocused.getter();
  v12 = *(uint64_t (**)(char *, char *, uint64_t))(v2 + 16);
  v13 = v12(v8, v10, v1);
  if ((v11 & 1) != 0)
    v14 = 1;
  else
    v14 = UICellConfigurationState.isHighlighted.getter(v13);
  v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v8, v1);
  v16 = v12(v5, v10, v1);
  if ((v14 & 1) != 0)
    v17 = 0;
  else
    v17 = UICellConfigurationState.isSelected.getter(v16) ^ 1;
  v15(v5, v1);
  v15(v10, v1);
  return v17 & 1;
}

void sub_10006D2BC(void *a1)
{
  sub_10006CCEC(a1, &OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__suffixColor);
}

void sub_10006D2C8(void *a1)
{
  sub_10006CCEC(a1, &OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleColor);
}

uint64_t sub_10006D2D4(uint64_t result, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  void (*v40)(__n128);
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = result;
  if ((result & 1) != 0)
  {
    v4 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v5 = result;
      v6 = *(_QWORD *)(v4 + 8);
      ObjectType = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
      result = swift_unknownObjectRelease(v5);
    }
  }
  if ((v3 & 2) != 0)
  {
    v8 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v9 = result;
      v10 = *(_QWORD *)(v8 + 8);
      v11 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10);
      result = swift_unknownObjectRelease(v9);
    }
  }
  if ((v3 & 4) != 0)
  {
    v12 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v13 = result;
      v14 = *(_QWORD *)(v12 + 8);
      v15 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v15, v14);
      result = swift_unknownObjectRelease(v13);
    }
  }
  if ((v3 & 8) != 0)
  {
    v16 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v17 = result;
      v18 = *(_QWORD *)(v16 + 8);
      v19 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v19, v18);
      result = swift_unknownObjectRelease(v17);
    }
  }
  if ((v3 & 0x10) != 0)
  {
    v20 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v21 = result;
      v22 = *(_QWORD *)(v20 + 8);
      v23 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v22 + 40))(v23, v22);
      result = swift_unknownObjectRelease(v21);
    }
  }
  if ((v3 & 0x20) != 0)
  {
    v24 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v25 = result;
      v26 = *(_QWORD *)(v24 + 8);
      v27 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v26 + 48))(v27, v26);
      result = swift_unknownObjectRelease(v25);
    }
  }
  if ((v3 & 0x80) != 0)
  {
    v28 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v29 = result;
      v30 = *(_QWORD *)(v28 + 8);
      v31 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v30 + 56))(v31, v30);
      result = swift_unknownObjectRelease(v29);
    }
  }
  if ((v3 & 0x100) != 0)
  {
    v32 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (Strong)
    {
      v35 = Strong;
      v36 = *(_QWORD *)(v32 + 8);
      v37 = swift_getObjectType(Strong, v34);
      (*(void (**)(uint64_t, uint64_t))(v36 + 64))(v37, v36);
      swift_unknownObjectRelease(v35);
    }
    v38 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock;
    objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock), "lock");
    v39 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
    v40 = *(void (**)(__n128))(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
    if (v40)
    {
      v41 = v39[1];
      v42 = swift_retain();
      v40(v42);
      sub_100087534((uint64_t)v40, v41);
      v43 = *v39;
      v44 = v39[1];
      *v39 = 0;
      v39[1] = 0;
      sub_100087534(v43, v44);
    }
    result = (uint64_t)objc_msgSend(*(id *)(a2 + v38), "unlock");
  }
  if ((v3 & 0x200) != 0)
  {
    v45 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v46 = result;
      v47 = *(_QWORD *)(v45 + 8);
      v48 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v47 + 72))(v48, v47);
      result = swift_unknownObjectRelease(v46);
    }
  }
  if ((v3 & 0x400) != 0)
  {
    v49 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v50 = result;
      v51 = *(_QWORD *)(v49 + 8);
      v52 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v51 + 80))(v52, v51);
      result = swift_unknownObjectRelease(v50);
    }
  }
  if ((v3 & 0x800) != 0)
  {
    v53 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v54 = result;
      v55 = *(_QWORD *)(v53 + 8);
      v56 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v55 + 88))(v56, v55);
      result = swift_unknownObjectRelease(v54);
    }
  }
  if ((v3 & 0x1000) != 0)
  {
    v57 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate, a2);
    if (result)
    {
      v58 = result;
      v59 = *(_QWORD *)(v57 + 8);
      v60 = swift_getObjectType(result, a2);
      (*(void (**)(uint64_t, uint64_t))(v59 + 96))(v60, v59);
      result = swift_unknownObjectRelease(v58);
    }
  }
  if ((v3 & 0x2000) != 0)
  {
    v61 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    result = swift_unknownObjectWeakLoadStrong(v61, a2);
    if (result)
    {
      v63 = result;
      v64 = *(_QWORD *)(v61 + 8);
      v65 = swift_getObjectType(result, v62);
      (*(void (**)(uint64_t, uint64_t))(v64 + 104))(v65, v64);
      return swift_unknownObjectRelease(v63);
    }
  }
  return result;
}

uint64_t sub_10006D688()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x328))();
}

void sub_10006D6A4()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  id v4;
  NSString v5;
  unsigned __int8 v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id *v19;
  double v20;
  void *v21;
  void **v22;
  double v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  char *v30;
  uint64_t v31;
  char v32[24];
  char v33[24];
  char v34[24];
  _BYTE v35[88];
  uint64_t v36[11];

  v1 = v0;
  sub_10006EBD8();
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v34, 0, 0);
  if (*v2)
  {
    v3 = (char *)*v2;
    sub_100068748();
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "BOOLForKey:", v5);

    if ((v6 & 1) != 0 || *v2 && (v7 = *v2, v8 = sub_10006F328(), v7, (v8 & 1) != 0))
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress), "setObservedProgress:", *(_QWORD *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress]);
    if ((sub_10006D9D0() & 1) != 0)
    {
      v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView);
      v10 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress;
      v11 = *(void **)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
      v12 = OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress;
      v13 = *(void **)(v9 + OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress);
      *(_QWORD *)(v9 + OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress) = v11;
      v14 = v11;

      v15 = *(void **)(v9 + v12);
      if (v15)
      {
        v16 = v15;
        if ((objc_msgSend(v16, "isFinished") & 1) == 0)
          sub_1003FDA04();

      }
      sub_10006CBE8();
      v17 = sub_10006E680();
      objc_msgSend(v17, "setNeedsUpdateConfiguration");

      v18 = *(void **)&v3[v10];
      if (v18
        && (objc_msgSend(v18, "isFinished") & 1) == 0
        && (v19 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node],
            *(_QWORD *)&v20 = swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], &v31, 0, 0).n128_u64[0], *v19)&& ((objc_msgSend(*v19, "isDownloading", v20) & 1) != 0|| *v19 && (objc_msgSend(*v19, "isExternalDownloadPlaceholder") & 1) != 0))
      {
        LOBYTE(v21) = 1;
      }
      else
      {
        v22 = (void **)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
        *(_QWORD *)&v23 = swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v33, 0, 0).n128_u64[0];
        v21 = *v22;
        if (*v22)
          LOBYTE(v21) = objc_msgSend(v21, "isCopying", v23);
      }
      v24 = OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton;
      *(_BYTE *)(v9 + OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton) = (_BYTE)v21;
      sub_10006CBE8();
      v25 = sub_10006E680();
      objc_msgSend(v25, "setNeedsUpdateConfiguration");

      v26 = &v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
      swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v32, 0, 0);
      v28 = *(_QWORD *)v26;
      if (v28)
      {
        ObjectType = swift_getObjectType(v28, v27);
        swift_unknownObjectRetain(v28);
        sub_10006FA3C(ObjectType, (uint64_t)v35);
        swift_unknownObjectRelease(v28);
        sub_1002617E4((uint64_t)v35);
        sub_100070EDC((uint64_t)v35, (uint64_t)v36, (uint64_t *)&unk_10064A070);
        if (v36[0] != 1)
        {
          *(_BYTE *)(v9 + v24) = 1;
          sub_10006CBE8();
          v30 = (char *)sub_10006E680();
          objc_msgSend(v30, "setNeedsUpdateConfiguration");

          v3 = v30;
        }
      }
    }

  }
}

uint64_t sub_10006D9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  unsigned __int8 v8;
  uint64_t v9;
  int v10;
  void **v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t result;
  unsigned __int8 v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[88];
  _OWORD v23[5];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  id v31;
  id v32;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews) & 1) != 0)
  {
    v3 = 0;
LABEL_3:
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = v3;
    goto LABEL_8;
  }
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v21, 0, 0);
  v6 = *v4;
  if (v6)
  {
    ObjectType = swift_getObjectType(v6, v5);
    swift_unknownObjectRetain(v6);
    sub_10006FA3C(ObjectType, (uint64_t)v22);
    swift_unknownObjectRelease(v6);
    sub_100070EDC((uint64_t)v22, (uint64_t)v23, (uint64_t *)&unk_10064A070);
    if (*(_QWORD *)&v23[0] != 1)
    {
      v27 = v23[2];
      v28 = v23[3];
      v29 = v23[4];
      v30 = v24;
      v25 = v23[0];
      v26 = v23[1];
      sub_100070EDC((uint64_t)&v30, (uint64_t)&v31, &qword_1006588B8);
      sub_10007C3B8(&v31);
      sub_1002617E4((uint64_t)v22);
      sub_100070EDC((uint64_t)&v31, (uint64_t)&v32, &qword_1006588B8);
      if (v32)
      {
        v8 = objc_msgSend(v32, "isFinished");
        sub_10007C390(&v31);
        if ((v8 & 1) == 0)
        {
          v3 = 1;
          goto LABEL_3;
        }
      }
    }
  }
LABEL_8:
  v9 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView;
  v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView);
  if (v10 != 2)
    return v10 & 1;
  v11 = (void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v20, 0, 0);
  v12 = *v11;
  if (!v12)
    goto LABEL_20;
  v13 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
  if (!v13 || (*(_BYTE *)(v1 + v2) & 1) != 0)
    goto LABEL_20;
  swift_unknownObjectRetain(v12);
  v14 = v13;
  if ((objc_msgSend(v14, "isIndeterminate") & 1) != 0)
  {

LABEL_17:
    v18 = swift_getObjectType(v12, v15);
    if ((objc_msgSend(v12, "isExternalDownloadPlaceholder") & 1) == 0
      && (DOCNode.doc_isAppContainerRoot.getter(v18) & 1) == 0)
    {
      v19 = objc_msgSend(v12, "isTrashed");
      swift_unknownObjectRelease(v12);
      result = v19 ^ 1;
      *(_BYTE *)(v1 + v9) = v19 ^ 1;
      return result;
    }
    goto LABEL_19;
  }
  v17 = objc_msgSend(v14, "isFinished");

  if ((v17 & 1) == 0)
    goto LABEL_17;
LABEL_19:
  swift_unknownObjectRelease(v12);
LABEL_20:
  result = 0;
  *(_BYTE *)(v1 + v9) = 0;
  return result;
}

void sub_10006DC28()
{
  sub_100072D74();
  sub_10006F49C();
}

void sub_10006DC3C()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  int v6;
  _BYTE v7[24];

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v2, v7, 0, 0);
  if (*v2)
  {
    v3 = (char *)*v2;
    sub_10006DD34();
    v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    if (v4)
    {
      v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
      swift_unknownObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail]);
      objc_msgSend(v5, "updateImage:addDecoration:", v4, (unint64_t)sub_10006DF10() & 1);
      swift_unknownObjectRelease(v4);
    }
    else
    {
      v6 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
      if (v6 == 2)
      {
        __break(1u);
        return;
      }
      if ((v6 & 1) == 0)
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setThumbnail:", 0);
    }

  }
}

void sub_10006DD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  void *v5;
  void *v6;
  uint64_t v7;
  int v8;
  id v9;
  char v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[23];
  _OWORD v14[11];
  uint64_t v15;
  _BYTE v16[24];
  _OWORD v17[11];
  uint64_t v18;

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail))
  {
    v2 = v0;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool);
    if (v3)
    {
      v4 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v16, 0, 0);
      v5 = *v4;
      if (*v4)
      {
        v6 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
        if (v6)
        {
          sub_100070EDC(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v13, (uint64_t *)&unk_100641300);
          sub_100070EDC((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_100641300);
          if (sub_1000A849C((uint64_t *)v14) != 1)
          {
            v17[8] = v14[8];
            v17[9] = v14[9];
            v17[10] = v14[10];
            v18 = v15;
            v17[4] = v14[4];
            v17[5] = v14[5];
            v17[6] = v14[6];
            v17[7] = v14[7];
            v17[0] = v14[0];
            v17[1] = v14[1];
            v17[2] = v14[2];
            v17[3] = v14[3];
            v7 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
            v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
            swift_retain();
            swift_unknownObjectRetain(v5);
            v9 = v6;
            sub_1000716DC(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
            if (v8 == 2)
            {
              v10 = objc_msgSend(v5, "isFolder");
              *(_BYTE *)(v2 + v7) = v10;
            }
            else
            {
              v10 = v8 & 1;
            }
            v11 = sub_100362340(v5, (uint64_t)v17, v9, v10);
            v12 = *(void **)(v2 + v1);
            *(_QWORD *)(v2 + v1) = v11;
            swift_unknownObjectRetain(v11);
            sub_100078678(v12);
            swift_unknownObjectRelease(v12);
            swift_unknownObjectRelease(v11);
            sub_1000716DC(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
            swift_release(v3);
            swift_unknownObjectRelease(v5);

          }
        }
      }
    }
  }
}

id sub_10006DF10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int v3;
  void **v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  _BYTE v9[24];

  sub_10006DD34();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  if (v1)
  {
    v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
    v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
    if (v3 == 2)
    {
      v4 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v9, 0, 0);
      v5 = *v4;
      if (v5)
      {
        swift_unknownObjectRetain(v1);
        v6 = objc_msgSend(v5, "isFolder");
        *(_BYTE *)(v0 + v2) = v6;
        if ((v6 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        *(_BYTE *)(v0 + v2) = 0;
        swift_unknownObjectRetain(v1);
      }
    }
    else
    {
      swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail));
      if ((v3 & 1) != 0)
      {
LABEL_8:
        v7 = 0;
LABEL_11:
        swift_unknownObjectRelease(v1);
        return v7;
      }
    }
    v7 = objc_msgSend(v1, "isRepresentativeIcon");
    goto LABEL_11;
  }
  return 0;
}

void sub_10006DFF4()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  _BYTE *v3;
  unsigned __int8 v4;
  uint64_t v5;
  int v6;
  id v7;
  uint64_t v8;
  int v9;
  id *v10;
  double v11;
  unsigned __int8 v12;
  unsigned __int8 *v13;
  id v14;
  void *v15;
  uint64_t v16;
  Class isa;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  void *v63;
  void *v64;
  id v65;
  NSString v66;
  unsigned __int8 v67;
  char v68;
  id v69;
  char v70;
  void *v71;
  id v72;
  id v73;
  NSString v74;
  unsigned __int8 v75;
  char v76;
  id v77;
  char v78;
  _BYTE v79[24];
  _BYTE v80[24];

  v1 = v0;
  sub_10006EBD8();
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v80, 0, 0);
  if (!*v2)
    return;
  v3 = *v2;
  v4 = sub_10006926C();
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView);
  v6 = v4;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance) = v4;
  sub_10006CBE8();
  v7 = sub_10006E680();
  objc_msgSend(v7, "setNeedsUpdateConfiguration");

  if (v6 != 1)
    goto LABEL_8;
  v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
  v9 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder];
  if (v9 == 2)
  {
    v10 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
    *(_QWORD *)&v11 = swift_beginAccess(&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v79, 0, 0).n128_u64[0];
    if (*v10)
    {
      v12 = objc_msgSend(*v10, "isFolder", v11);
      v3[v8] = v12;
      if ((v12 & 1) == 0)
        goto LABEL_10;
LABEL_8:
      v13 = (unsigned __int8 *)(v5 + OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled);
      *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled) = 0;
      goto LABEL_11;
    }
    v3[v8] = 0;
  }
  else if ((v9 & 1) != 0)
  {
    goto LABEL_8;
  }
LABEL_10:
  v13 = (unsigned __int8 *)(v5 + OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled) = 1;
LABEL_11:
  v14 = sub_10006E680();
  sub_10006F7D0((id)*v13);

  sub_100072D74();
  v15 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView);
  v16 = sub_10006F894();
  sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
  swift_bridgeObjectRetain(v16);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v15, "setTags:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel);
  v19 = objc_msgSend(v18, "text");
  if (!v19)
  {
    sub_10006E6E0();
LABEL_18:
    sub_10006E6E0();
    v29 = v28;
    swift_bridgeObjectRetain(v28);
    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v18, "setText:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

    goto LABEL_19;
  }
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v23 = v22;

  sub_10006E6E0();
  if (!v23)
    goto LABEL_18;
  if (v21 == v24 && v23 == v25)
  {
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v23).n128_u64[0];
    goto LABEL_19;
  }
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v24, v25, 0);
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v23).n128_u64[0];
  if ((v27 & 1) == 0)
    goto LABEL_18;
LABEL_19:
  v31 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel);
  v32 = objc_msgSend(v31, "text", v26);
  if (!v32)
  {
    sub_10006E8BC();
    v39 = v40;
    goto LABEL_25;
  }
  v33 = v32;
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v36 = v35;

  v37 = sub_10006E8BC();
  v39 = v38;
  if (!v36)
  {
LABEL_25:
    swift_bridgeObjectRelease(v39);
LABEL_26:
    sub_10006E8BC();
    v42 = v41;
    v43 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setText:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

    goto LABEL_27;
  }
  if (v34 == v37 && v36 == v38)
  {
    swift_bridgeObjectRelease_n(v36, 2);
    goto LABEL_27;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, v37, v38, 0);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v39);
  if ((v52 & 1) == 0)
    goto LABEL_26;
LABEL_27:
  v44 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel);
  v45 = objc_msgSend(v44, "text");
  if (!v45)
  {
    sub_10006F690();
LABEL_36:
    sub_10006F690();
    v55 = v54;
    swift_bridgeObjectRetain(v54);
    v56 = String._bridgeToObjectiveC()();
    objc_msgSend(v44, "setText:", v56, swift_bridgeObjectRelease(v55).n128_f64[0]);

    goto LABEL_37;
  }
  v46 = v45;
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v49 = v48;

  v50 = sub_10006F690();
  if (!v49)
    goto LABEL_36;
  if (v47 == v50 && v49 == v51)
  {
    swift_bridgeObjectRelease(v49);
    goto LABEL_37;
  }
  v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v50, v51, 0);
  swift_bridgeObjectRelease(v49);
  if ((v53 & 1) == 0)
    goto LABEL_36;
LABEL_37:
  sub_100068748();
  v57 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode;
  v58 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
  if (v58 == 2)
  {
    __break(1u);
LABEL_58:
    __break(1u);
    return;
  }
  v59 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_thumbnailContainerView);
  v60 = v58 & 1;
  v61 = *(unsigned __int8 *)(v59 + OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode);
  *(_BYTE *)(v59 + OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode) = v60;
  if ((((v60 == 0) ^ v61) & 1) == 0)
    sub_10004D4AC(0);
  v62 = v3[v57];
  if (v62 == 2)
    goto LABEL_58;
  if ((v62 & 1) != 0)
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setAddDecoration:", 1);
  v63 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress);
  v64 = (void *)objc_opt_self(NSUserDefaults);
  v65 = objc_msgSend(v64, "standardUserDefaults");
  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v65, "BOOLForKey:", v66);

  if ((v67 & 1) != 0)
  {
    v68 = 0;
  }
  else if (*v2)
  {
    v69 = *v2;
    v70 = sub_10006F328();

    v68 = v70 ^ 1;
  }
  else
  {
    v68 = 1;
  }
  objc_msgSend(v63, "setHidden:", v68 & 1);
  v71 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton);
  if (v71)
  {
    v72 = v71;
    v73 = objc_msgSend(v64, "standardUserDefaults");
    v74 = String._bridgeToObjectiveC()();
    v75 = objc_msgSend(v73, "BOOLForKey:", v74);

    if ((v75 & 1) != 0)
    {
      v76 = 0;
    }
    else if (*v2)
    {
      v77 = *v2;
      v78 = sub_10006F328();

      v76 = v78 ^ 1;
    }
    else
    {
      v76 = 1;
    }
    objc_msgSend(v72, "setHidden:", v76 & 1);

  }
  sub_10007B338();
  sub_10006F49C();

}

id sub_10006E680()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton];
  }
  else
  {
    v4 = sub_10005A93C(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10006E6E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date + 8))
  {
    v2 = v0;
    v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v21, 0, 0);
    v4 = *v3;
    if (v4)
    {
      v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
      if (v5)
      {
        swift_unknownObjectRetain(v4);
        v6 = v5;
        if (sub_10007B5C0(1))
        {
          v7 = objc_msgSend(v6, "preferredContentSizeCategory");
          v8 = UIContentSizeCategory.isAccessibilityCategory.getter(v7);

          if ((v8 & 1) != 0)
            v10 = 1;
          else
            v10 = (uint64_t)objc_msgSend(v6, "horizontalSizeClass");
          v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate);
          if (v14 == 2)
            goto LABEL_20;
          v15 = v14 & 1;
          ObjectType = swift_getObjectType(v4, v9);
          v17 = DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)(v10, v15, ObjectType);
          if (v18)
            v19 = v17;
          else
            v19 = 0;
          v20 = 0xE000000000000000;
          v13 = v1[1];
          if (v18)
            v20 = v18;
          *v1 = v19;
          v1[1] = v20;
          swift_unknownObjectRelease(v4);

LABEL_9:
          swift_bridgeObjectRelease(v13);
          if (v1[1])
            return;
          __break(1u);
LABEL_20:
          __break(1u);
          return;
        }
        v11 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v12 = String._bridgeToObjectiveC()();
        objc_msgSend(v11, "BOOLForKey:", v12);
        swift_unknownObjectRelease(v4);

      }
    }
    v13 = v1[1];
    *(_OWORD *)v1 = xmmword_1004EA390;
    goto LABEL_9;
  }
}

uint64_t sub_10006E8BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t *v3;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  double v8;
  id v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned __int8 v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *object;
  __n128 v21;
  uint64_t v22;
  Swift::String v23;
  id v24;
  void *v25;
  uint64_t v26;
  char v28[24];
  _BYTE v29[88];
  _QWORD v30[17];
  __int128 v31;
  __int128 v32;
  _BYTE v33[16];
  _BYTE v34[16];
  char v35[8];
  uint64_t v36;
  char v37[8];
  uint64_t v38;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sizeLock);
  objc_msgSend(v2, "lock");
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
  countAndFlagsBits = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
  v5 = v3[1];
  swift_bridgeObjectRetain(v5);
  objc_msgSend(v2, "unlock");
  if (!v5)
  {
    v6 = (id *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    *(_QWORD *)&v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v28, 0, 0).n128_u64[0];
    v9 = *v6;
    if (*v6)
    {
      ObjectType = swift_getObjectType(*v6, v7);
      swift_unknownObjectRetain(v9);
      sub_10006FA3C(ObjectType, (uint64_t)v29);
      swift_unknownObjectRelease(v9);
      sub_100070EDC((uint64_t)v29, (uint64_t)v30, (uint64_t *)&unk_10064A070);
      if (v30[0] != 1)
      {
        *(_OWORD *)&v30[15] = *(_OWORD *)&v30[4];
        v31 = *(_OWORD *)&v30[6];
        v32 = *(_OWORD *)&v30[8];
        *(_OWORD *)&v30[11] = *(_OWORD *)v30;
        *(_OWORD *)&v30[13] = *(_OWORD *)&v30[2];
        sub_100070EDC((uint64_t)&v31, (uint64_t)v34, &qword_100648C80);
        sub_100070EDC((uint64_t)v34, (uint64_t)v35, &qword_100648C80);
        if (v36)
        {
          sub_100070EDC((uint64_t)&v32, (uint64_t)v33, &qword_100648C80);
          sub_100070EDC((uint64_t)v33, (uint64_t)v37, &qword_100648C80);
          v11 = v38;
          sub_1002617E4((uint64_t)v29);
          if (v11)
            goto LABEL_20;
        }
        else
        {
          sub_1002617E4((uint64_t)v29);
        }
      }
    }
    v12 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
    v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
    if (v13 == 2)
    {
      if (!*v6)
      {
        *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 0;
        v15 = *v6;
        if (!*v6)
          goto LABEL_20;
        goto LABEL_18;
      }
      v14 = objc_msgSend(*v6, "isFolder", v8);
      *(_BYTE *)(v1 + v12) = v14;
      if ((v14 & 1) == 0)
      {
LABEL_11:
        v15 = *v6;
        if (!*v6)
          goto LABEL_20;
LABEL_18:
        swift_getObjectType(v15, v7);
        if ((objc_msgSend((id)swift_unknownObjectRetain(v15), "isExternalDownloadPlaceholder") & 1) == 0)
        {
          v23 = DOCNode.localizedSizeDescription()();
          countAndFlagsBits = v23._countAndFlagsBits;
          object = v23._object;
          swift_unknownObjectRelease(v15);
          goto LABEL_23;
        }
        swift_unknownObjectRelease(v15);
LABEL_20:
        countAndFlagsBits = 0;
        object = (void *)0xE000000000000000;
LABEL_23:
        objc_msgSend(v2, "lock");
        v26 = v3[1];
        *v3 = countAndFlagsBits;
        v3[1] = (uint64_t)object;
        swift_bridgeObjectRetain(object);
        objc_msgSend(v2, "unlock", swift_bridgeObjectRelease(v26).n128_f64[0]);
        return countAndFlagsBits;
      }
    }
    else if ((v13 & 1) == 0)
    {
      goto LABEL_11;
    }
    v16 = *v6;
    if (*v6)
    {
      v17 = swift_getObjectType(*v6, v7);
      v18 = swift_allocObject(&unk_1005F18F8, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16);
      swift_retain();
      swift_unknownObjectRetain(v16);
      countAndFlagsBits = DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)(1, sub_1004B06C0, v18, v17);
      object = v19;
      v22 = swift_release_n(v18, 2, v21);
      if (object)
      {
        swift_unknownObjectRelease(v16);
      }
      else
      {
        v24 = (id)DOCLocalizedMetadataStringForUnavailablePropertyValue(v22);
        countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        object = v25;
        swift_unknownObjectRelease(v16);

      }
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  return countAndFlagsBits;
}

void sub_10006EBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id *v20;
  id v21;
  void *v22;
  id v23;
  NSString v24;
  unsigned __int8 v25;
  id v26;
  char v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  NSString v33;
  id v34;
  void *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  void *v43;
  void (*v44)(char *, uint64_t);
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  void *v52;
  uint64_t *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  id v71;
  id v72;
  uint64_t v73;
  _QWORD v74[2];
  id v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  _BYTE v82[128];
  uint64_t v83[17];
  char v84[32];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v2);
  v4 = (char *)v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0, v5);
  v80 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v79 = (char *)v74 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v74 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)v74 - v15;
  v17 = sub_10006922C(&qword_100645FB8);
  __chkstk_darwin(v17);
  v19 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v20, v84, 0, 0);
  v21 = *v20;
  if (*v20)
  {
    v77 = v4;
    v78 = v9;
    v22 = (void *)objc_opt_self(NSUserDefaults);
    v81 = (char *)v21;
    v23 = objc_msgSend(v22, "standardUserDefaults");
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v23, "BOOLForKey:", v24);

    if ((v25 & 1) != 0 || *v20 && (v26 = *v20, v27 = sub_10006F328(), v26, (v27 & 1) != 0))
    {
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton))
      {
LABEL_18:
        v63 = v81;
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress), "setObservedProgress:", *(_QWORD *)&v81[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress]);
        goto LABEL_19;
      }
      v76 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton;
      sub_100070EDC((uint64_t)&v81[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits], (uint64_t)v82, &qword_100658670);
      sub_100070EDC((uint64_t)v82, (uint64_t)v83, &qword_100658670);
      if (sub_1000A849C(v83) != 1)
      {
        v28 = (void *)v83[9];
        v29 = (void *)objc_opt_self(UIDevice);
        v30 = v28;

        static UIButton.Configuration.borderless()(v31);
        v32 = (void *)objc_opt_self(UIImage);
        v33 = String._bridgeToObjectiveC()();
        v34 = objc_msgSend(v32, "__systemImageNamedSwift:", v33);

        UIButton.Configuration.image.setter(v34);
        v35 = (void *)objc_opt_self(UIImageSymbolConfiguration);
        v75 = v30;
        UIButton.Configuration.preferredSymbolConfigurationForImage.setter(objc_msgSend(v35, "configurationWithTextStyle:", v30));

        v74[1] = sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
        v36 = v80;
        v37 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
        v37(v14, v16, v6);
        v38 = swift_allocObject(&unk_1005D5718, 24, 7);
        swift_unknownObjectWeakInit(v38 + 16);
        v39 = v79;
        v37(v79, v14, v6);
        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v40 = swift_allocObject(&unk_1005D5768, 32, 7);
        *(_QWORD *)(v40 + 16) = sub_100267A18;
        *(_QWORD *)(v40 + 24) = v38;
        swift_retain_n(v38, 2);
        v42 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v41, 0, 0, 0, sub_1000D9F90, v40);
        v43 = (void *)UIButton.init(configuration:primaryAction:)(v39, v42);
        swift_release(v38);
        v44 = *(void (**)(char *, uint64_t))(v36 + 8);
        v44(v14, v6);
        swift_release(v38);
        objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v45 = *(void **)(v1 + v76);
        *(_QWORD *)(v1 + v76) = v43;
        v46 = v43;

        v47 = ((uint64_t (*)(char *, uint64_t))v44)(v16, v6);
        v48 = (uint64_t)v77;
        UIButton.configuration.getter(v47);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v48, 1, v6) == 1)
        {
          v49 = v78;
          static UIButton.Configuration.plain()();
          sub_10000CB4C(v48, (uint64_t *)&unk_10064A080);
        }
        else
        {
          v49 = v78;
          v50.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v36 + 32))(v78, v48, v6);
        }
        v64 = UIButton.Configuration.contentInsets.getter(v50);
        v66 = v65;
        v68 = v67;
        v70 = v69;
        v44(v49, v6);
        v71 = objc_msgSend(v46, "widthAnchor");
        sub_1000601F4(v71, v66 + v70);

        v72 = objc_msgSend(v46, "heightAnchor");
        sub_1000601F4(v72, v64 + v68);

        sub_100059B20();
        goto LABEL_18;
      }
LABEL_26:
      __break(1u);
      return;
    }
    v51 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton;
    v52 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton);
    if (!v52)
      goto LABEL_14;
    v53 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints);
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints, v83, 33, 0);
    v54 = v52;
    v55 = sub_100266F9C(v53, v54);
    v56 = v55;
    v57 = *v53;
    if ((unint64_t)*v53 >> 62)
    {
      if (v57 < 0)
        v73 = *v53;
      else
        v73 = v57 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v53);
      v58 = _CocoaArrayWrapper.endIndex.getter(v73);
      swift_bridgeObjectRelease(v57);
      if (v58 >= v56)
      {
LABEL_12:
        sub_10045BBEC(v56, v58);
        swift_endAccess(v83);

        v59 = *(void **)(v1 + v51);
        if (v59)
        {
          objc_msgSend(v59, "removeFromSuperview");
          v60 = *(void **)(v1 + v51);
LABEL_15:
          *(_QWORD *)(v1 + v51) = 0;

          v61 = type metadata accessor for UICellAccessory(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v19, 1, 1, v61);
          v62 = v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory;
          swift_beginAccess(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory, v83, 33, 0);
          sub_10006F454((uint64_t)v19, v62);
          swift_endAccess(v83);
          sub_100068748();
          sub_10000CB4C((uint64_t)v19, &qword_100645FB8);
          objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalProgress), "setHidden:", 1);
          v63 = v81;
LABEL_19:

          return;
        }
LABEL_14:
        v60 = 0;
        goto LABEL_15;
      }
    }
    else
    {
      v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v58 >= v55)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_26;
  }
}

uint64_t sub_10006F328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  id v8;
  unsigned int v9;
  _BYTE v10[24];

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews) == 1)
    *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 0;
  v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView);
  if (v3 != 2)
    return v3 & 1;
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v10, 0, 0);
  v5 = *v4;
  if (!v5)
  {
LABEL_9:
    result = 0;
    *(_BYTE *)(v0 + v2) = 0;
    return result;
  }
  if (!objc_msgSend((id)swift_unknownObjectRetain(v5), "isExternalDownloadPlaceholder")
    || (v6 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress)) == 0
    || (*(_BYTE *)(v0 + v1) & 1) != 0)
  {
    swift_unknownObjectRelease(v5);
    goto LABEL_9;
  }
  v8 = v6;
  if (objc_msgSend(v8, "isIndeterminate"))
  {
    swift_unknownObjectRelease(v5);

    result = 1;
    *(_BYTE *)(v0 + v2) = 1;
  }
  else
  {
    v9 = objc_msgSend(v8, "isFinished");
    swift_unknownObjectRelease(v5);

    result = v9 ^ 1;
    *(_BYTE *)(v0 + v2) = v9 ^ 1;
  }
  return result;
}

uint64_t sub_10006F454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100645FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10006F49C()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  char v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  _BYTE v12[24];

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming) & 1) == 0)
  {
    v1 = v0;
    v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v12, 0, 0);
    v3 = *v2;
    if (*v2)
    {
      v4 = sub_10006F62C();
      v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
      v6 = v3;
      v7 = objc_msgSend(v5, "superview");
      v8 = v7;
      if ((v4 & 1) != 0)
      {
        if (v7)
        {
          objc_msgSend(v7, "setAlpha:", 0.35);

        }
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView), "setAlpha:", 0.35);
        v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton);
        if (!v9)
          goto LABEL_13;
        v10 = v9;
        objc_msgSend(v10, "setAlpha:", 0.35);
      }
      else
      {
        if (v7)
        {
          objc_msgSend(v7, "setAlpha:", 1.0);

        }
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView), "setAlpha:", 1.0);
        v11 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton);
        if (!v11)
          goto LABEL_13;
        v10 = v11;
        objc_msgSend(v10, "setAlpha:", 1.0);
      }

LABEL_13:
    }
  }
}

uint64_t sub_10006F62C()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim);
  if (v1 != 2)
    return v1 & 1;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode) & 1) != 0)
  {
    result = *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) & 1;
    *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = *(_BYTE *)(v0
                                                                                                + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) & 1;
  }
  else
  {
    v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
    result = (v2 & 1) == 0 && v2 != 2;
    *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = result;
  }
  return result;
}

uint64_t sub_10006F690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v15[24];

  v1 = type metadata accessor for UTType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind + 8))
    return *v5;
  v6 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v6, v15, 0, 0);
  v7 = *v6;
  if (*v6)
  {
    v8 = objc_msgSend((id)swift_unknownObjectRetain(*v6), "contentType");
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    v9 = UTType.localizedDescription.getter();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v11)
    {
      v12 = v5[1];
      *v5 = v9;
      v5[1] = v11;
      swift_unknownObjectRelease(v7);
      goto LABEL_7;
    }
    swift_unknownObjectRelease(v7);
  }
  v12 = v5[1];
  *(_OWORD *)v5 = xmmword_1004EA390;
LABEL_7:
  result = swift_bridgeObjectRelease(v12);
  if (v5[1])
    return *v5;
  __break(1u);
  return result;
}

id sub_10006F7D0(id result)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;
  id v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled;
  v3 = v1[OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled];
  v1[OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled] = (_BYTE)result;
  if (v3 != (result & 1))
  {
    v4 = objc_msgSend(v1, "isUserInteractionEnabled");
    v5 = &v1[v2];
    v6 = v1[v2];
    v7 = OBJC_IVAR____TtC5Files9DOCButton__userInteractionStateDeterminesLayerHitTestState_override;
    v1[OBJC_IVAR____TtC5Files9DOCButton__userInteractionStateDeterminesLayerHitTestState_override] = 2;
    objc_msgSend(v1, "setUserInteractionEnabled:", v6 ^ 1);
    objc_msgSend(v1, "setUserInteractionEnabled:", v6);
    v1[v7] = (*v5 & 1) == 0;
    return objc_msgSend(v1, "setUserInteractionEnabled:", v4);
  }
  return result;
}

uint64_t sub_10006F894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE v15[24];
  _BYTE v16[88];
  _OWORD v17[5];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags;
  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags);
  if (!result)
  {
    v3 = v0;
    v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v15, 0, 0);
    v6 = *v4;
    if (*v4)
    {
      ObjectType = swift_getObjectType(*v4, v5);
      swift_unknownObjectRetain(v6);
      sub_10006FA3C(ObjectType, (uint64_t)v16);
      swift_unknownObjectRelease(v6);
      sub_100070EDC((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_10064A070);
      if (*(_QWORD *)&v17[0] != 1)
      {
        v21 = v17[2];
        v22 = v17[3];
        v23 = v17[4];
        v24 = v18;
        v19 = v17[0];
        v20 = v17[1];
        v14 = sub_1000D2920();
        sub_1002617E4((uint64_t)v16);
        v13 = *(_QWORD *)(v3 + v1);
        *(_QWORD *)(v3 + v1) = v14;
LABEL_8:
        swift_bridgeObjectRelease(v13);
        result = *(_QWORD *)(v3 + v1);
        if (!result)
          __break(1u);
        return result;
      }
      v8 = *v4;
      if (*v4)
      {
        v9 = objc_msgSend((id)swift_unknownObjectRetain(*v4), "tags");
        v10 = (id)DOCTagsFromFPTags();

        v11 = sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
        v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

        v13 = *(_QWORD *)(v3 + v1);
        *(_QWORD *)(v3 + v1) = v12;
        swift_unknownObjectRelease(v8);
        goto LABEL_8;
      }
    }
    v13 = *(_QWORD *)(v3 + v1);
    *(_QWORD *)(v3 + v1) = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_10006FA3C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD v17[5];
  uint64_t v18;

  v4 = qword_1006420A0;
  if (qword_1006420A0)
  {
    v5 = result;
    swift_unknownObjectRetain(v2);
    swift_retain();
    sub_1000D3F78(v2, v4, v5, (uint64_t *)v17);
    v15 = v17[1];
    v16 = v17[0];
    v13 = v17[3];
    v14 = v17[2];
    v12 = v17[4];
    v6 = v18;
    swift_release(v4);
    result = swift_unknownObjectRelease(v2);
    v8 = v12;
    v7 = v13;
    v10 = v14;
    v9 = v15;
    v11 = v16;
  }
  else
  {
    v6 = 0;
    v11 = xmmword_1004D9660;
    v9 = 0uLL;
    v10 = 0uLL;
    v7 = 0uLL;
    v8 = 0uLL;
  }
  *(_OWORD *)a2 = v11;
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 48) = v7;
  *(_OWORD *)(a2 + 64) = v8;
  *(_QWORD *)(a2 + 80) = v6;
  return result;
}

uint64_t sub_10006FB10()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x308))();
}

uint64_t sub_10006FB30()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x330))();
}

uint64_t sub_10006FB4C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2F8))();
}

Swift::Void __swiftcall DOCItemCollectionCell.didUpdateItemAccessStatusBadge()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v2)
  {
    v10 = (id)v2;
    if ((sub_10006FCE8() & 1) != 0
      || *((_BYTE *)v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded) == 1)
    {
      sub_10026F5F0();
      v3 = sub_10026F0F8();
      objc_msgSend(v3, "setHidden:", (sub_10006FCE8() & 1) == 0);

      v4 = sub_10026F0F8();
      v5 = sub_1004AFCAC();
      objc_msgSend(v4, "setImage:", v5);

      v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX);
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v7, "setActive:", sub_10006FCE8() & 1);

      }
      v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v9, "setActive:", sub_10006FCE8() & 1);

      }
      (*(void (**)(void))((swift_isaMask & *v1) + 0x280))();
    }

  }
}

uint64_t sub_10006FCE8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  id *v3;
  id v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  uint64_t result;
  unsigned int v9;
  _BYTE v10[24];

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge);
  if (v2 != 2)
    return v2 & 1;
  v3 = (id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v10, 0, 0);
  if (!*v3)
    goto LABEL_6;
  v4 = objc_msgSend(*v3, "fpfs_fpItem");
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = objc_msgSend(v4, "itemID");
  v7 = objc_msgSend(v6, "isPlaceholder");

  if ((v7 & 1) != 0)
  {

LABEL_6:
    result = 0;
    *(_BYTE *)(v0 + v1) = 0;
    return result;
  }
  if ((objc_msgSend(v5, "isWritable") & 1) != 0)
  {
    v9 = objc_msgSend(v5, "isReadable");

    result = v9 ^ 1;
    *(_BYTE *)(v0 + v1) = v9 ^ 1;
  }
  else
  {

    result = 1;
    *(_BYTE *)(v0 + v1) = 1;
  }
  return result;
}

Swift::Void __swiftcall DOCItemCollectionCell.didUpdateItemStatusBadge()()
{
  _QWORD *v0;
  _QWORD *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  int v4;
  void *v5;
  id v6;
  int v7;
  void *v8;
  void *v9;
  int v10;
  id v11;
  id v12;
  void *v13;
  int v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  int v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  unsigned __int8 *v27;

  v1 = v0;
  v2 = (unsigned __int8 *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v2)
  {
    v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge;
    v4 = v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge];
    v27 = v2;
    if (v4 == 2)
    {
      sub_100070070();
      if (v5)
      {

        v27[v3] = 1;
        goto LABEL_10;
      }
      v2 = v27;
      v27[v3] = 0;
    }
    else if ((v4 & 1) != 0)
    {
      goto LABEL_10;
    }
    if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded) != 1)
    {
LABEL_30:

      return;
    }
LABEL_10:
    sub_10026F304();
    v6 = sub_10026F0E4();
    v7 = v27[v3];
    if (v7 == 2)
    {
      sub_100070070();
      v9 = v8;
      v10 = v8 != 0;
      if (v8)

      v27[v3] = v9 != 0;
    }
    else
    {
      v10 = v7 & 1;
    }
    objc_msgSend(v6, "setHidden:", v10 ^ 1u);

    v11 = sub_10026F0E4();
    v12 = sub_1004AFB18();
    objc_msgSend(v11, "setImage:", v12);

    v13 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX);
    if (v13)
    {
      v14 = v27[v3];
      if (v14 == 2)
      {
        v15 = v13;
        sub_100070070();
        v17 = v16;
        v18 = v16 != 0;
        if (v16)

        v27[v3] = v17 != 0;
      }
      else
      {
        v18 = v14 & 1;
        v19 = v13;
      }
      objc_msgSend(v13, "setActive:", v18);

    }
    v20 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY);
    if (v20)
    {
      v21 = v27[v3];
      if (v21 == 2)
      {
        v22 = v20;
        sub_100070070();
        v24 = v23;
        v25 = v23 != 0;
        if (v23)

        v27[v3] = v24 != 0;
      }
      else
      {
        v25 = v21 & 1;
        v26 = v20;
      }
      objc_msgSend(v20, "setActive:", v25);

    }
    (*(void (**)(void))((swift_isaMask & *v1) + 0x278))();
    v2 = v27;
    goto LABEL_30;
  }
}

void sub_100070070()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  id *v4;
  id v5;
  NSString v6;
  unsigned int v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *object;
  Swift::String v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  Swift::String v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  Swift::String v59;
  objc_class *v60;
  char *v61;
  char *v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  Swift::String v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  char v85;
  double v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  objc_super v98;
  unint64_t v99;
  unint64_t v100;
  _BYTE v101[24];
  _BYTE v102[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v102, 0, 0);
  v2 = *v1;
  if (!v2)
    return;
  v3 = swift_unknownObjectRetain(v2);
  if (DOCIsInternalBuild(v3))
  {
    v4 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
    swift_beginAccess(v4, v101, 0, 0);
    if (*v4)
    {
      v5 = *v4;
      v6 = String._bridgeToObjectiveC()();
      v7 = objc_msgSend(v5, "BOOLForKey:", v6);

      if (v7)
      {
        v9 = *(_QWORD *)"locked";
        v8 = (char *)0xE600000000000000;
        swift_bridgeObjectRetain(0xE600000000000000);
        v10 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v12 = v11;

        object = String.lowercased()()._object;
        swift_bridgeObjectRelease(v12);
        v14._countAndFlagsBits = *(_QWORD *)"locked";
        v14._object = (void *)0xE600000000000000;
        LOBYTE(v12) = String.hasPrefix(_:)(v14);
        swift_bridgeObjectRelease(object);
        if ((v12 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xE600000000000000);
        v9 = 0x72616D6B63656863;
        v8 = (char *)0xE90000000000006BLL;
        swift_bridgeObjectRetain(0xE90000000000006BLL);
        v15 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v17 = v16;

        v18 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v17);
        LOBYTE(v15) = String.hasPrefix(_:)((Swift::String)xmmword_1005BEF98);
        swift_bridgeObjectRelease(v18);
        if ((v15 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xE90000000000006BLL);
        v9 = 0x73746E656D6D6F63;
        v8 = (char *)0xE800000000000000;
        swift_bridgeObjectRetain(0xE800000000000000);
        v19 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v21 = v20;

        v22 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v21);
        LOBYTE(v19) = String.hasPrefix(_:)((Swift::String)xmmword_1005BEFA8);
        swift_bridgeObjectRelease(v22);
        if ((v19 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xE800000000000000);
        v9 = 0x6C6F662D706F7264;
        v8 = (char *)0xEB00000000726564;
        swift_bridgeObjectRetain(0xEB00000000726564);
        v23 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v25 = v24;

        v26 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v25);
        LOBYTE(v23) = String.hasPrefix(_:)((Swift::String)xmmword_1005BEFB8);
        swift_bridgeObjectRelease(v26);
        if ((v23 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xEB00000000726564);
        v9 = *(_QWORD *)"heart";
        v8 = (char *)0xE500000000000000;
        swift_bridgeObjectRetain(0xE500000000000000);
        v27 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v29 = v28;

        v30 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v29);
        v31._countAndFlagsBits = *(_QWORD *)"heart";
        v31._object = (void *)0xE500000000000000;
        LOBYTE(v27) = String.hasPrefix(_:)(v31);
        swift_bridgeObjectRelease(v30);
        if ((v27 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xE500000000000000);
        v9 = 0x65697665722D6E69;
        v8 = (char *)0xE900000000000077;
        swift_bridgeObjectRetain(0xE900000000000077);
        v32 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v34 = v33;

        v35 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v34);
        LOBYTE(v32) = String.hasPrefix(_:)((Swift::String)xmmword_1005BEFD8);
        swift_bridgeObjectRelease(v35);
        if ((v32 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xE900000000000077);
        v9 = 0xD000000000000016;
        v8 = "RecentsAppPopover";
        swift_bridgeObjectRetain("RecentsAppPopover");
        v36 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
        v38 = v37;

        v39 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v38);
        v40._countAndFlagsBits = 0xD000000000000016;
        v40._object = "RecentsAppPopover";
        LOBYTE(v36) = String.hasPrefix(_:)(v40);
        swift_bridgeObjectRelease(v39);
        if ((v36 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease("RecentsAppPopover");
        v9 = 0x622D64656B636F6CLL;
        v8 = (char *)0xEE00726573752D79;
        swift_bridgeObjectRetain(0xEE00726573752D79);
        v41 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v43 = v42;

        v44 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v43);
        LOBYTE(v41) = String.hasPrefix(_:)((Swift::String)xmmword_1005BEFF8);
        swift_bridgeObjectRelease(v44);
        if ((v41 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xEE00726573752D79);
        v9 = 0x2D65746176697270;
        v8 = (char *)0xEE007265646C6F66;
        swift_bridgeObjectRetain(0xEE007265646C6F66);
        v45 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
        v47 = v46;

        v48 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v47);
        LOBYTE(v45) = String.hasPrefix(_:)((Swift::String)xmmword_1005BF008);
        swift_bridgeObjectRelease(v48);
        if ((v45 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xEE007265646C6F66);
        v9 = *(_QWORD *)"syncing";
        v8 = (char *)0xE700000000000000;
        swift_bridgeObjectRetain(0xE700000000000000);
        v49 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v51 = v50;

        v52 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v51);
        v53._countAndFlagsBits = *(_QWORD *)"syncing";
        v53._object = (void *)0xE700000000000000;
        LOBYTE(v49) = String.hasPrefix(_:)(v53);
        swift_bridgeObjectRelease(v52);
        if ((v49 & 1) != 0)
          goto LABEL_16;
        swift_bridgeObjectRelease(0xE700000000000000);
        v9 = 0x676E69646E657274;
        v8 = (char *)0xE800000000000000;
        swift_bridgeObjectRetain(0xE800000000000000);
        v54 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
        v56 = v55;

        v57 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v56);
        LOBYTE(v54) = String.hasPrefix(_:)((Swift::String)xmmword_1005BF028);
        swift_bridgeObjectRelease(v57);
        if ((v54 & 1) != 0)
        {
LABEL_16:
          v58 = v2;
LABEL_17:
          swift_arrayDestroy("locked", 12, &type metadata for String);
          v99 = 0xD000000000000020;
          v100 = 0x800000010053B930;
          v59._countAndFlagsBits = v9;
          v59._object = v8;
          String.append(_:)(v59);
          swift_bridgeObjectRelease(v8);
          v60 = (objc_class *)type metadata accessor for DOCFakeFPItemDecoration();
          v61 = (char *)objc_allocWithZone(v60);
          v62 = &v61[OBJC_IVAR____TtC5FilesP33_0D3D84D98814A1E39FA4FAA1E54BDD7A23DOCFakeFPItemDecoration_ut];
          *(_QWORD *)v62 = 0xD000000000000020;
          *((_QWORD *)v62 + 1) = 0x800000010053B930;
          v98.receiver = v61;
          v98.super_class = v60;
          objc_msgSendSuper2(&v98, "init");
          v63 = v58;
LABEL_54:
          swift_unknownObjectRelease(v63);
          return;
        }
        swift_bridgeObjectRelease(0xE800000000000000);
        v9 = *(_QWORD *)"warning";
        v8 = (char *)0xE700000000000000;
        swift_bridgeObjectRetain(0xE700000000000000);
        v58 = v2;
        v64 = objc_msgSend(v2, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
        v66 = v65;

        v67 = String.lowercased()()._object;
        swift_bridgeObjectRelease(v66);
        v68._countAndFlagsBits = *(_QWORD *)"warning";
        v68._object = (void *)0xE700000000000000;
        LOBYTE(v64) = String.hasPrefix(_:)(v68);
        swift_bridgeObjectRelease(v67);
        if ((v64 & 1) != 0)
          goto LABEL_17;
        swift_bridgeObjectRelease(0xE700000000000000);
        swift_arrayDestroy("locked", 12, &type metadata for String);
      }
    }
  }
  v69 = (uint64_t)objc_msgSend(v2, "itemDecorations");
  v70 = sub_10004F2F0(0, &qword_100658928, FPItemDecoration_ptr);
  v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, v70);

  v99 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v71 >> 62)
  {
    if (v71 < 0)
      v69 = v71;
    else
      v69 = v71 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v71);
    v72 = _CocoaArrayWrapper.endIndex.getter(v69);
    swift_bridgeObjectRelease(v71);
    if (v72)
      goto LABEL_22;
LABEL_47:
    swift_bridgeObjectRelease(v71);
    v69 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_55;
    goto LABEL_48;
  }
  v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v72)
    goto LABEL_47;
LABEL_22:
  if (v72 < 1)
  {
    __break(1u);
    goto LABEL_59;
  }
  v73 = 0;
  v74 = FPItemDecorationTypeBadge;
  do
  {
    if ((v71 & 0xC000000000000001) != 0)
      v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v73, v71);
    else
      v75 = *(id *)(v71 + 8 * v73 + 32);
    v76 = v75;
    v77 = objc_msgSend(v75, "type");
    v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
    v80 = v79;
    v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
    if (v78 == v81 && v80 == v82)
    {

      swift_bridgeObjectRelease_n(v80, 2);
    }
    else
    {
      v84 = v82;
      v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v80, v81, v82, 0);

      swift_bridgeObjectRelease(v80);
      *(_QWORD *)&v86 = swift_bridgeObjectRelease(v84).n128_u64[0];
      if ((v85 & 1) == 0)
        goto LABEL_24;
    }
    v87 = objc_msgSend(v76, "decorationIdentifier", v86);
    v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
    v90 = v89;

    if (v88 == 0x64656E6E6950 && v90 == 0xE600000000000000)
    {

      swift_bridgeObjectRelease(0xE600000000000000);
    }
    else
    {
      v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90, 0x64656E6E6950, 0xE600000000000000, 0);
      swift_bridgeObjectRelease(v90);
      if ((v91 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v92);
      v93 = *(_QWORD *)(v99 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v93);
      v94 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v93, v76);
      specialized ContiguousArray._endMutation()(v94);
    }
LABEL_25:
    ++v73;
  }
  while (v72 != v73);
  swift_bridgeObjectRelease(v71);
  v69 = v99;
  if ((v99 & 0x8000000000000000) == 0)
  {
LABEL_48:
    if ((v69 & 0x4000000000000000) != 0)
      goto LABEL_55;
    if (*(_QWORD *)(v69 + 16))
      goto LABEL_50;
LABEL_56:
    swift_release(v69);
    swift_unknownObjectRelease(v2);
    return;
  }
LABEL_55:
  v96 = swift_bridgeObjectRetain(v69);
  v97 = _CocoaArrayWrapper.endIndex.getter(v96);
  swift_release(v69);
  if (!v97)
    goto LABEL_56;
LABEL_50:
  if ((v69 & 0xC000000000000001) != 0)
  {
LABEL_59:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v69);
LABEL_53:
    swift_release(v69);
    v63 = v2;
    goto LABEL_54;
  }
  if (*(_QWORD *)(v69 + 16))
  {
    v95 = *(id *)(v69 + 32);
    goto LABEL_53;
  }
  __break(1u);
}

uint64_t sub_100070B28(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);
  v4 = *(id *)a1;
  v5 = v2;
  v6 = v3;
  return a1;
}

void sub_100070B64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  _OWORD v13[11];
  uint64_t v14;
  _BYTE v15[184];
  uint64_t v16[23];
  _OWORD v17[11];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[184];
  uint64_t v21[23];
  _OWORD v22[11];
  uint64_t v23;
  _OWORD v24[11];
  uint64_t v25;
  _BYTE v26[184];
  _QWORD v27[23];
  uint64_t v28[23];

  sub_100070EDC((uint64_t)a1, (uint64_t)v20, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v20, (uint64_t)v26, (uint64_t *)&unk_100641300);
  v3 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
  sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v27, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v27, (uint64_t)v28, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v28) == 1)
  {
    sub_100070EDC((uint64_t)a1, (uint64_t)v24, (uint64_t *)&unk_100641300);
    if (sub_1000A849C((uint64_t *)v24) == 1)
      return;
  }
  else
  {
    sub_100070EDC((uint64_t)a1, (uint64_t)v21, (uint64_t *)&unk_100641300);
    if (sub_1000A849C(v21) != 1)
    {
      sub_100070EDC((uint64_t)v26, (uint64_t)v13, (uint64_t *)&unk_100641300);
      v24[8] = v13[8];
      v24[9] = v13[9];
      v24[10] = v13[10];
      v25 = v14;
      v24[4] = v13[4];
      v24[5] = v13[5];
      v24[6] = v13[6];
      v24[7] = v13[7];
      v24[0] = v13[0];
      v24[1] = v13[1];
      v24[2] = v13[2];
      v24[3] = v13[3];
      sub_100070EDC((uint64_t)v27, (uint64_t)v17, (uint64_t *)&unk_100641300);
      v22[8] = v17[8];
      v22[9] = v17[9];
      v22[10] = v17[10];
      v23 = v18;
      v22[4] = v17[4];
      v22[5] = v17[5];
      v22[6] = v17[6];
      v22[7] = v17[7];
      v22[0] = v17[0];
      v22[1] = v17[1];
      v22[2] = v17[2];
      v22[3] = v17[3];
      sub_1000716DC(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
      sub_1000716DC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
      v12 = sub_100078AD8((uint64_t)v22, (uint64_t)v24);
      sub_1000716DC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
      sub_1000716DC(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
      if (v12)
        return;
      goto LABEL_6;
    }
  }
  sub_100070EDC((uint64_t)v27, (uint64_t)v17, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v26, (uint64_t)&v19, (uint64_t *)&unk_100641300);
  sub_1000716DC(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  sub_1000716DC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  sub_1004B0D28((uint64_t)v17);
LABEL_6:
  sub_100070EDC(v3, (uint64_t)v15, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v15, (uint64_t)v16, (uint64_t *)&unk_100641300);
  if (sub_1000A849C(v16) != 1)
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
    sub_100078678(v4);
    swift_unknownObjectRelease(v4);
    v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8);
    *v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease(v6);
    sub_1000D07FC((uint64_t)v13);
    v7 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v17, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v13, v7, (uint64_t *)&unk_100641310);
    sub_10044930C(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
    v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    v9 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x3300;
    if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x3300) != 0)
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v10;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(v1 + v9) = 0;
      v11 = objc_autoreleasePoolPush();
      sub_10006D2D4(v10, v1);
      objc_autoreleasePoolPop(v11);
    }
  }
}

uint64_t sub_100070EDC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10006922C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100070F20(uint64_t a1, _QWORD *a2, _QWORD *a3, char *a4, char a5, float64x2_t *a6, void *a7, int a8, unsigned __int8 a9, char a10, unsigned __int8 a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15)
{
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  double v32;
  int v33;
  float64x2_t v34;
  float64x2_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unsigned __int8 v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t result;
  void *v84;
  float64x2_t v85;
  float64x2_t v86;
  _QWORD v87[16];
  _QWORD v88[23];
  _QWORD v89[23];
  _QWORD v90[17];

  v85 = a6[1];
  v86 = *a6;
  v22 = a6[2].f64[0];
  v23 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
  sub_100070EDC(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v88, (uint64_t *)&unk_100641300);
  sub_100070EDC(v23, (uint64_t)v89, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)a2, v23, (uint64_t *)&unk_100641300);
  sub_1000716DC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  sub_1000716DC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  sub_1000716DC(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071748);
  sub_1000716DC(v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
  sub_100070B64(v88);
  sub_1000716DC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
  sub_1000716DC(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071784);
  v24 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits;
  sub_100070EDC(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v87, &qword_100658670);
  sub_100070EDC(v24, (uint64_t)v90, &qword_100658670);
  sub_100070EDC((uint64_t)a3, v24, &qword_100658670);
  sub_1000717C0(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  sub_1000717C0(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  sub_1000717C0(v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  sub_1000717C0(v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  sub_100071C48(v87);
  sub_1000717C0(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  sub_1000717C0(v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  v25 = *(_QWORD *)&a4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (v25)
  {
    swift_retain();
    v26 = sub_100071B10();
    swift_release(v25);
  }
  else
  {
    v26 = 0.0;
  }
  v27 = *(double *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumRowHeight);
  *(double *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumRowHeight) = v26;
  if (v26 != v27)
  {
    v28 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v29 & 0x200) == 0)
    {
      v29 |= 0x200uLL;
      *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v29;
    }
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(a1 + v28) = 0;
      v84 = objc_autoreleasePoolPush();
      sub_10006D2D4(v29, a1);
      objc_autoreleasePoolPop(v84);
    }
  }
  v30 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode) = a5 & 1;
  sub_100071F10(v30);
  v31 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics;
  v32 = *(double *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 32);
  v33 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40);
  *(double *)(v31 + 32) = v22;
  *(_BYTE *)(v31 + 40) = 0;
  v34 = *(float64x2_t *)v31;
  v35 = *(float64x2_t *)(v31 + 16);
  *(float64x2_t *)v31 = v86;
  *(float64x2_t *)(v31 + 16) = v85;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v34, v86), (int32x4_t)vceqq_f64(v35, v85))), 0xFuLL))) & 1) == 0|| v33|| v32 != v22)
  {
    v36 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v37 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v37 & 0x400) == 0)
    {
      v37 |= 0x400uLL;
      *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v37;
    }
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(a1 + v36) = 0;
      v38 = objc_autoreleasePoolPush();
      sub_10006D2D4(v37, a1);
      objc_autoreleasePoolPop(v38);
    }
  }
  v39 = *(void **)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance) = a7;
  v40 = a7;
  sub_1000722BC(v39);

  v41 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate) = a8 & 1;
  if (v41 == 2 || ((((v41 & 1) == 0) ^ a8) & 1) == 0)
  {
    v42 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
    v43 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date + 8);
    *v42 = 0;
    v42[1] = 0;
    swift_bridgeObjectRelease(v43);
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      v44 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
      *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = 0;
      v45 = objc_autoreleasePoolPush();
      sub_10006D2D4(v44, a1);
      objc_autoreleasePoolPop(v45);
    }
  }
  v46 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable) = a9 & 1;
  if (v46 == 2 || ((((v46 & 1) == 0) ^ a9) & 1) == 0)
  {
    v47 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v48 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 9;
    if ((~*(_DWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 9) != 0)
      *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v48;
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(a1 + v47) = 0;
      v49 = objc_autoreleasePoolPush();
      sub_10006D2D4(v48, a1);
      objc_autoreleasePoolPop(v49);
    }
  }
  v50 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) = a10 & 1;
  sub_100072180(v50);
  v51 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping) = a11 & 1;
  if (v51 == 2 || ((((v51 & 1) == 0) ^ a11) & 1) == 0)
  {
    v52 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v53 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v53 & 0x800) == 0)
    {
      v53 |= 0x800uLL;
      *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v53;
    }
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(a1 + v52) = 0;
      v54 = objc_autoreleasePoolPush();
      sub_10006D2D4(v53, a1);
      objc_autoreleasePoolPop(v54);
    }
  }
  v56 = a14;
  v55 = a15;
  v57 = *(void **)&a4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v58 = objc_msgSend(v57, "isPickerUI", *(_OWORD *)&v85, *(_OWORD *)&v86);
  v59 = objc_msgSend(a4, "traitCollection");
  if ((v58 & 1) != 0)
  {
    v60 = UITraitCollection.modifyingTraits(_:)(sub_100190A98, 0);

    v59 = (id)v60;
  }
  sub_100072444(v59);
  v61 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin;
  v62 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin);
  v63 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin + 8);
  *(_QWORD *)v61 = a12;
  *(_BYTE *)(v61 + 8) = 0;
  if ((v63 & 1) != 0 || v62 != a12)
  {
    v64 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v65 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v65 & 1) == 0)
    {
      v65 |= 1uLL;
      *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v65;
    }
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(a1 + v64) = 0;
      v66 = objc_autoreleasePoolPush();
      sub_10006D2D4(v65, a1);
      objc_autoreleasePoolPop(v66);
    }
  }
  v67 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable) = a13 & 1;
  sub_1000719D4(v67);
  v68 = *(_QWORD *)&a4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool];
  swift_retain();
  sub_100071BC0(v69);
  swift_release(v68);
  swift_bridgeObjectRetain(a15);
  if (String.count.getter(a14, a15) <= 0)
  {
    swift_bridgeObjectRelease(a15);
    v56 = 0;
    v55 = 0;
  }
  v70 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName);
  v71 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8);
  *v70 = v56;
  v70[1] = v55;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews) = objc_msgSend(v57, "isPopoverOrWidget", swift_bridgeObjectRelease(v71).n128_f64[0]);
  v72 = *(_QWORD *)&a4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  v73 = *(_QWORD *)&a4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 8];
  v74 = *(_QWORD *)&a4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 16];
  v75 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor;
  v76 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor);
  v77 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor + 8);
  v78 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor + 16);
  v79 = a4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor + 24];
  *(_QWORD *)v75 = v72;
  *(_QWORD *)(v75 + 8) = v73;
  *(_QWORD *)(v75 + 16) = v74;
  *(_BYTE *)(v75 + 24) = v79;
  sub_1001CEF88(v72, v73, v74);
  sub_100144F34(v76, v77, v78);
  v80 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  v81 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
  if ((v81 & 0x200) == 0)
  {
    v81 |= 0x200uLL;
    *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v81;
  }
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_10007BAFC())
  {
    *(_QWORD *)(a1 + v80) = 0;
    v82 = objc_autoreleasePoolPush();
    sub_10006D2D4(v81, a1);
    objc_autoreleasePoolPop(v82);
  }
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_useSystemHighlightStyle) = 1;
  result = sub_10006BCB4();
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_roundedCorners) = result & 1;
  return result;
}

_QWORD *sub_1000716DC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

id sub_100071748(id result, uint64_t a2, void *a3, void *a4)
{
  id v5;
  id v6;

  if (result)
  {
    v5 = result;
    v6 = a3;
    return a4;
  }
  return result;
}

void sub_100071784(void *a1, uint64_t a2, void *a3, void *a4)
{
  if (a1)
  {

  }
}

_QWORD *sub_1000717C0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

BOOL sub_10007181C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  Swift::Bool v8;
  id v10;
  id v11;
  Swift::OpaquePointer v12;
  uint64_t v13;

  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, "isActionable")
    || !objc_msgSend(a1, "isReadable")
    || (objc_msgSend(a1, "isCopying") & 1) != 0
    || !objc_msgSend(a1, "isFullyFormed"))
  {
    return 0;
  }
  if (((v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration),
         (objc_msgSend(v7, "forMovingDocuments") & 1) != 0)
     || (objc_msgSend(v7, "forSavingDocuments") & 1) != 0
     || objc_msgSend(v7, "forPickingFoldersOnly"))
    && !objc_msgSend(a1, "isFolder"))
  {
    return 0;
  }
  else if ((objc_msgSend(a1, "isFolder") & 1) != 0)
  {
    return 1;
  }
  else
  {
    v10 = objc_msgSend(a1, "contentType");
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    v11 = objc_msgSend(v7, "documentContentTypes");
    v12._rawValue = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v8 = UTType.doc_conformsToAny(inContentTypes:)(v12);
    swift_bridgeObjectRelease(v12._rawValue);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v8;
}

void sub_1000719D4(char a1)
{
  uint64_t v1;
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v9[200];
  _QWORD v10[26];

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
  if (v2 != 2 && (a1 == 2 || ((((a1 & 1) == 0) ^ v2) & 1) == 0))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = 2;
    v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000D07FC((uint64_t)v9);
    v4 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v10, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v9, v4, (uint64_t *)&unk_100641310);
    sub_10044930C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
    v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x28;
    if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x28) != 0)
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v7;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(v1 + v6) = 0;
      v8 = objc_autoreleasePoolPush();
      sub_10006D2D4(v7, v1);
      objc_autoreleasePoolPop(v8);
    }
  }
}

double sub_100071B10()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  void *v3;
  double v4;
  char v5;
  _BYTE v7[184];
  __int128 v8[10];
  __int128 v9;
  __int128 v10;

  if (*(_BYTE *)(v0 + 408) != 2)
    return *(double *)(v0 + 400);
  v1 = *(_OWORD *)(v0 + 912);
  v8[8] = *(_OWORD *)(v0 + 896);
  v8[9] = v1;
  v2 = *(_OWORD *)(v0 + 944);
  v9 = *(_OWORD *)(v0 + 928);
  v10 = v2;
  v3 = *(void **)(v0 + 552);
  sub_10006B5D4((uint64_t)v7);
  sub_10006B424((uint64_t)v8);
  v4 = sub_10002EB1C(v3, (uint64_t)v7, v8);
  sub_10003BDA0((uint64_t)v8);
  sub_10002A0C4((uint64_t)v7);
  v5 = BYTE8(v9);
  *(double *)(v0 + 400) = v4;
  *(_BYTE *)(v0 + 408) = v5;
  return v4;
}

void sub_100071BC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool);
  if (!v2)
  {
    if (!a1)
      return;
    v2 = 0;
    goto LABEL_7;
  }
  if (!a1 || v2 != a1)
  {
LABEL_7:
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool) = a1;
    swift_retain();
    swift_release(v2);
    v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
    sub_100078678(v3);
    swift_unknownObjectRelease(v3);
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v4 & 0x100) == 0)
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v4 | 0x100;
  }
}

void sub_100071C48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  BOOL v14;
  _OWORD v15[8];
  _OWORD v16[8];
  _OWORD v17[8];
  uint64_t v18;
  _BYTE v19[128];
  uint64_t v20[16];
  _OWORD v21[8];
  _BYTE v22[128];
  _QWORD v23[16];
  uint64_t v24[16];

  sub_100070EDC((uint64_t)a1, (uint64_t)v19, &qword_100658670);
  sub_100070EDC((uint64_t)v19, (uint64_t)v22, &qword_100658670);
  v3 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits;
  sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v23, &qword_100658670);
  sub_100070EDC((uint64_t)v23, (uint64_t)v24, &qword_100658670);
  if (sub_1000A849C(v24) == 1)
  {
    sub_100070EDC((uint64_t)a1, (uint64_t)v21, &qword_100658670);
    if (sub_1000A849C((uint64_t *)v21) == 1)
      return;
  }
  else
  {
    sub_100070EDC((uint64_t)a1, (uint64_t)v20, &qword_100658670);
    if (sub_1000A849C(v20) != 1)
    {
      sub_100070EDC((uint64_t)v22, (uint64_t)v15, &qword_100658670);
      v17[4] = v15[4];
      v17[5] = v15[5];
      v17[6] = v15[6];
      v17[7] = v15[7];
      v17[0] = v15[0];
      v17[1] = v15[1];
      v17[2] = v15[2];
      v17[3] = v15[3];
      sub_100070EDC((uint64_t)v23, (uint64_t)v16, &qword_100658670);
      v21[4] = v16[4];
      v21[5] = v16[5];
      v21[6] = v16[6];
      v21[7] = v16[7];
      v21[0] = v16[0];
      v21[1] = v16[1];
      v21[2] = v16[2];
      v21[3] = v16[3];
      sub_1000717C0(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
      sub_1000717C0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
      v14 = sub_10007C194((uint64_t)v21, (uint64_t)v17);
      sub_1000717C0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
      sub_1000717C0(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
      if (v14)
        return;
      goto LABEL_6;
    }
  }
  sub_100070EDC((uint64_t)v23, (uint64_t)v17, &qword_100658670);
  sub_100070EDC((uint64_t)v22, (uint64_t)&v18, &qword_100658670);
  sub_1000717C0(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  sub_1000717C0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  sub_1001D07F0((uint64_t)v17);
LABEL_6:
  sub_100070EDC(v3, (uint64_t)v15, &qword_100658670);
  sub_100070EDC((uint64_t)v15, (uint64_t)v16, &qword_100658670);
  if (sub_1000A849C((uint64_t *)v16) != 1)
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8);
    *v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease(v6);
    v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle + 8);
    *v7 = 0;
    v7[1] = 0;
    swift_bridgeObjectRelease(v8);
    v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle + 8);
    *v9 = 0;
    v9[1] = 0;
    swift_bridgeObjectRelease(v10);
    v11 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v12 & 0x200) == 0)
    {
      v12 |= 0x200uLL;
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v12;
    }
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(v1 + v11) = 0;
      v13 = objc_autoreleasePoolPush();
      sub_10006D2D4(v12, v1);
      objc_autoreleasePoolPop(v13);
    }
  }
}

void sub_100071F10(char a1)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _BYTE v25[200];
  _QWORD v26[26];

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode);
  if (v2 != 2 && (a1 == 2 || ((((a1 & 1) == 0) ^ v2) & 1) == 0))
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size + 8);
    *v3 = 0;
    v3[1] = 0;
    swift_bridgeObjectRelease(v4);
    v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString + 8);
    *v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease(v6);
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags) = 0;
    swift_bridgeObjectRelease(v7);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 2;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync) = 2;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = 2;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 2;
    v8 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date + 8);
    *v8 = 0;
    v8[1] = 0;
    swift_bridgeObjectRelease(v9);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance) = 10;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
    v10 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
    sub_100078678(v10);
    swift_unknownObjectRelease(v10);
    v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8);
    *v11 = 0;
    v11[1] = 0;
    swift_bridgeObjectRelease(v12);
    sub_1000D07FC((uint64_t)v25);
    v13 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v26, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v25, v13, (uint64_t *)&unk_100641310);
    sub_10044930C(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
    v14 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    v15 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    v16 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8);
    *v16 = 0;
    v16[1] = 0;
    swift_bridgeObjectRelease(v17);
    v18 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle + 8);
    *v18 = 0;
    v18[1] = 0;
    swift_bridgeObjectRelease(v19);
    v20 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle + 8);
    *v20 = 0;
    v20[1] = 0;
    swift_bridgeObjectRelease(v21);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory) = 2;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = 2;
    v22 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x109;
    if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x109) != 0)
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v23;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(v1 + v22) = 0;
      v24 = objc_autoreleasePoolPush();
      sub_10006D2D4(v23, v1);
      objc_autoreleasePoolPop(v24);
    }
  }
}

void sub_100072180(char a1)
{
  uint64_t v1;
  int v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v9[200];
  _QWORD v10[26];

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting);
  if (v2 != 2 && (a1 == 2 || ((((a1 & 1) == 0) ^ v2) & 1) == 0))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = 2;
    v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000D07FC((uint64_t)v9);
    v4 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v10, (uint64_t *)&unk_100641310);
    sub_100070EDC((uint64_t)v9, v4, (uint64_t *)&unk_100641310);
    sub_10044930C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
    v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
    v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v7 & 8) == 0)
    {
      v7 |= 8uLL;
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v7;
    }
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_10007BAFC())
    {
      *(_QWORD *)(v1 + v6) = 0;
      v8 = objc_autoreleasePoolPush();
      sub_10006D2D4(v7, v1);
      objc_autoreleasePoolPop(v8);
    }
  }
}

void sub_1000722BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  char v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _BYTE v17[200];
  _QWORD v18[25];

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  if (v4)
  {
    if (!a1
      || (sub_10004F2F0(0, (unint64_t *)&qword_100648EF0, DOCAppearance_ptr),
          v6 = a1,
          v7 = v4,
          v8 = static NSObject.== infix(_:_:)(v7, v6),
          v7,
          v6,
          (v8 & 1) == 0)
      && *(_QWORD *)(v2 + v3))
    {
      v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

      v10 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
      v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8);
      *v10 = 0;
      v10[1] = 0;
      swift_bridgeObjectRelease(v11);
      sub_1000D07FC((uint64_t)v17);
      v12 = v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
      sub_100070EDC(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v18, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)v17, v12, (uint64_t *)&unk_100641310);
      sub_10044930C(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
      v13 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

      v14 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
      if ((v15 & 1) == 0)
      {
        v15 |= 1uLL;
        *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v15;
      }
      if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
        && !sub_10007BAFC())
      {
        *(_QWORD *)(v2 + v14) = 0;
        v16 = objc_autoreleasePoolPush();
        sub_10006D2D4(v15, v2);
        objc_autoreleasePoolPop(v16);
      }
    }
  }
}

void sub_100072444(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  _BOOL4 v11;
  void *v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  _BYTE v32[200];
  _QWORD v33[25];

  if (a1)
  {
    v2 = v1;
    v31 = a1;
    if (sub_10007B5C0(4))
    {
      objc_msgSend(v31, "displayScale");
      v5 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection;
      v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
      v11 = !v6
         || (v7 = v4, objc_msgSend(v6, "displayScale"), v7 != v8)
         || (v9 = objc_msgSend(v31, "userInterfaceStyle"), (v10 = *(void **)(v2 + v5)) == 0)
         || v9 != objc_msgSend(v10, "userInterfaceStyle");
      v12 = *(void **)(v2 + v5);
      *(_QWORD *)(v2 + v5) = a1;
      v13 = v31;

      v14 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
      v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date + 8);
      *v14 = 0;
      v14[1] = 0;
      swift_bridgeObjectRelease(v15);
      v16 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

      v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
      v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8);
      *v17 = 0;
      v17[1] = 0;
      swift_bridgeObjectRelease(v18);
      if (v11)
      {
        v19 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
        *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
        sub_100078678(v19);
        swift_unknownObjectRelease(v19);
      }
      sub_1000D07FC((uint64_t)v32);
      v20 = v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
      sub_100070EDC(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v33, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)v32, v20, (uint64_t *)&unk_100641310);
      sub_10044930C(v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
      v21 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

      v22 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
      v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString + 8);
      *v22 = 0;
      v22[1] = 0;
      swift_bridgeObjectRelease(v23);
      v24 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
      v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle + 8);
      *v24 = 0;
      v24[1] = 0;
      swift_bridgeObjectRelease(v25);
      v26 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
      v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle + 8);
      *v26 = 0;
      v26[1] = 0;
      swift_bridgeObjectRelease(v27);
      v28 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x182;
      if ((~*(_DWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x182) != 0)
        *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v29;
      if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
        && !sub_10007BAFC())
      {
        *(_QWORD *)(v2 + v28) = 0;
        v30 = objc_autoreleasePoolPush();
        sub_10006D2D4(v29, v2);
        objc_autoreleasePoolPop(v30);
      }

    }
    else
    {

    }
  }
}

void sub_1000726CC()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  char *v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  _BOOL4 v39;
  _QWORD *v40;
  _BOOL4 v41;
  _QWORD *v42;
  _BOOL4 v43;
  id v44;
  unsigned int v45;
  id v46;
  unsigned int v47;
  id v48;
  unsigned int v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  char v57[32];
  void *v58;
  _BYTE v59[128];
  uint64_t v60[16];
  _QWORD v61[16];
  id v62[2];
  uint64_t v63;
  char v64[32];

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v2, v64, 0, 0);
  v3 = (char *)*v2;
  if (*v2)
  {
    v4 = &v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
    sub_100070EDC((uint64_t)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits], (uint64_t)v61, &qword_100658670);
    sub_100070EDC((uint64_t)v61, (uint64_t)v62, &qword_100658670);
    if (sub_1000A849C((uint64_t *)v62) != 1)
    {
      v52 = (uint64_t)v4;
      v5 = v62[1];
      v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel);
      v7 = v62[0];
      v8 = v5;
      v9 = v3;
      sub_1000717C0(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
      v56 = v6;
      v10 = objc_msgSend(v6, "font");
      if (!v10)
        goto LABEL_5;
      v11 = v10;
      sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      v12 = v7;
      v13 = v11;
      LOBYTE(v11) = static NSObject.== infix(_:_:)(v13, v12);

      if ((v11 & 1) == 0)
LABEL_5:
        objc_msgSend(v56, "setFont:", v7);
      v14 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel);
      v15 = objc_msgSend(v14, "font");
      v54 = v14;
      if (!v15)
        goto LABEL_8;
      v16 = v15;
      sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      v17 = v8;
      v18 = v16;
      LOBYTE(v16) = static NSObject.== infix(_:_:)(v18, v17);

      if ((v16 & 1) == 0)
LABEL_8:
        objc_msgSend(v14, "setFont:", v8);
      v53 = v8;
      v19 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel);
      v20 = objc_msgSend(v19, "font");
      if (!v20)
        goto LABEL_11;
      v21 = v20;
      sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      v22 = v7;
      v23 = v21;
      LOBYTE(v21) = static NSObject.== infix(_:_:)(v23, v22);

      if ((v21 & 1) == 0)
LABEL_11:
        objc_msgSend(v19, "setFont:", v7);
      v55 = *(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel);
      v24 = objc_msgSend(v55, "font");
      if (!v24)
        goto LABEL_14;
      v25 = v24;
      sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      v26 = v7;
      v27 = v25;
      LOBYTE(v25) = static NSObject.== infix(_:_:)(v27, v26);

      if ((v25 & 1) == 0)
LABEL_14:
        objc_msgSend(v55, "setFont:", v7);
      v28 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel);
      v29 = objc_msgSend(v28, "font");
      if (!v29)
        goto LABEL_17;
      v30 = v29;
      sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      v31 = v7;
      v32 = v30;
      LOBYTE(v30) = static NSObject.== infix(_:_:)(v32, v31);

      if ((v30 & 1) == 0)
LABEL_17:
        objc_msgSend(v28, "setFont:", v7);
      v33 = (uint64_t *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
      v34 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor + 8];
      if (v34)
      {
        v35 = v33[2];
        v36 = *v33;
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v35);
        sub_100144F34(v36, v34, v35);
        __asm { BR              X10 }
      }
      v37 = v63;
      v38 = sub_100075C04(6, v63);
      v39 = sub_100076430(2, (uint64_t)v38);
      swift_bridgeObjectRelease(v38);
      v40 = sub_100075C04(6, v37);
      v41 = sub_100076430(1, (uint64_t)v40);
      swift_bridgeObjectRelease(v40);
      v42 = sub_100075C04(6, v37);
      v43 = sub_100076430(3, (uint64_t)v42);
      v44 = objc_msgSend(v19, "layer", swift_bridgeObjectRelease(v42).n128_f64[0]);
      v45 = objc_msgSend(v44, "isHidden");

      if (((v39 ^ v45) & 1) == 0)
        objc_msgSend(v19, "setHidden:", !v39);
      v46 = objc_msgSend(v55, "layer");
      v47 = objc_msgSend(v46, "isHidden");

      if (((v41 ^ v47) & 1) == 0)
        objc_msgSend(v55, "setHidden:", !v41);
      v48 = objc_msgSend(v28, "layer");
      v49 = objc_msgSend(v48, "isHidden");

      if (((v43 ^ v49) & 1) == 0)
        objc_msgSend(v28, "setHidden:", !v43);
      sub_100072D74();
      sub_100068748();
      sub_100070EDC(v52, (uint64_t)v59, &qword_100658670);
      sub_100070EDC((uint64_t)v59, (uint64_t)v60, &qword_100658670);
      if (sub_1000A849C(v60) == 1)
      {
        __break(1u);
      }
      else
      {
        v50 = (id)v60[3];
        sub_100070EDC((uint64_t)v59, (uint64_t)v57, &qword_100658670);
        v51 = v58;
        if (objc_msgSend(v56, "numberOfLines") != v50)
          objc_msgSend(v56, "setNumberOfLines:", v50);
        if (objc_msgSend(v54, "numberOfLines") != v51)
          objc_msgSend(v54, "setNumberOfLines:", v51);
        sub_100077D40();
        sub_100077A4C();

        sub_1000717C0(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
      }
    }
  }
}

void sub_100072D74()
{
  _QWORD *v0;
  _QWORD *v1;
  void **v2;
  void *v3;
  uint64_t (*v4)(id);
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  NSString v22;
  int v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL4 v31;
  char *v32;
  void *v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  unsigned int v38;
  void *v39;
  uint64_t v40;
  unsigned __int8 v41;
  _QWORD v42[16];
  uint64_t v43[16];
  char v44[32];

  v1 = v0;
  v2 = (void **)((char *)v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v44, 0, 0);
  v3 = *v2;
  if (!*v2)
    return;
  sub_100070EDC((uint64_t)v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v42, &qword_100658670);
  sub_100070EDC((uint64_t)v42, (uint64_t)v43, &qword_100658670);
  if (sub_1000A849C(v43) == 1)
    return;
  v4 = *(uint64_t (**)(id))((swift_isaMask & *v1) + 0x678);
  v5 = v3;
  sub_1000717C0(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  v6 = (void *)v4(v5);
  v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel);
  v8 = objc_msgSend(v7, "attributedText");
  if (!v8)
    goto LABEL_5;
  v9 = v8;
  sub_10004F2F0(0, &qword_10064A0C0, NSAttributedString_ptr);
  v10 = v6;
  v11 = v9;
  LOBYTE(v9) = static NSObject.== infix(_:_:)(v11, v10);

  if ((v9 & 1) == 0)
LABEL_5:
    objc_msgSend(v7, "setAttributedText:", v6);
  v39 = v6;
  v12 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x680))(v5);
  v14 = v13;
  v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel);
  v16 = objc_msgSend(v15, "text");
  if (!v16)
    goto LABEL_12;
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v20 = v19;

  if (v18 == v12 && v20 == v14)
  {
    swift_bridgeObjectRelease_n(v14, 2);
    goto LABEL_13;
  }
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v12, v14, 0);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) != 0)
  {
    swift_bridgeObjectRelease(v14);
  }
  else
  {
LABEL_12:
    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setText:", v22, swift_bridgeObjectRelease(v14).n128_f64[0]);

  }
LABEL_13:
  v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x668))(v43[2]);
  v24 = objc_msgSend(v15, "text");
  if (v24)
  {

    v25 = objc_msgSend(v15, "text");
    if (!v25)
    {
      __break(1u);
      return;
    }
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

    swift_bridgeObjectRelease(v29);
    v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0)
      v30 = v27 & 0xFFFFFFFFFFFFLL;
    v31 = v30 == 0;
    v32 = (char *)*v2;
    if (!*v2)
    {
LABEL_23:
      if (((v23 | v31) & 1) == 0)
      {
        v36 = 0;
        goto LABEL_26;
      }
      goto LABEL_24;
    }
  }
  else
  {
    v31 = 1;
    v32 = (char *)*v2;
    if (!*v2)
      goto LABEL_23;
  }
  v33 = *(void **)&v32[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
  if (!v33)
    goto LABEL_23;
  v34 = sub_1001463A0();
  v35 = v33;
  UITraitCollection.subscript.getter(&v40, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v34);

  if (((v23 | v31) & 1) != 0)
  {
LABEL_24:
    v36 = 1;
    goto LABEL_26;
  }
  v36 = v41 ^ 1u;
LABEL_26:
  v37 = objc_msgSend(v15, "layer");
  v38 = objc_msgSend(v37, "isHidden");

  if ((_DWORD)v36 != v38)
    objc_msgSend(v15, "setHidden:", v36);

  sub_1000717C0(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
}

id sub_100073158()
{
  return sub_10007317C();
}

id sub_10007317C()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  NSString *v40;
  unint64_t v41;
  id v42;
  NSString v43;
  Class v44;
  id v45;
  void *v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSString *v52;
  id v53;
  unint64_t v54;
  Class v55;
  void *v56;
  uint64_t v57;
  uint64_t inited;
  NSString *v59;
  id v60;
  uint64_t v61;
  id v62;
  NSString *v63;
  unint64_t v64;
  id v65;
  NSString v66;
  Class isa;
  id v68;
  void *v69;
  NSString *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  _BYTE v74[112];
  _BYTE v75[72];
  _BYTE v76[112];
  _BYTE v77[128];
  id v78[16];
  _BYTE v79[128];
  uint64_t v80[2];
  uint64_t v81;
  Swift::String v82;

  v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle;
  result = *(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  if (result)
    return result;
  sub_100076450();
  v4 = v3;
  v6 = v5;
  v7 = v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits;
  sub_100070EDC(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v79, &qword_100658670);
  sub_100070EDC((uint64_t)v79, (uint64_t)v80, &qword_100658670);
  result = (id)sub_1000A849C(v80);
  if ((_DWORD)result == 1)
    goto LABEL_23;
  v8 = v81;
  swift_bridgeObjectRetain(v6);
  if ((v8 & 4) != 0)
  {
    sub_100076A5C();
    v9 = v11;
    v10 = v12;
    swift_bridgeObjectRetain(v12);
  }
  else
  {
    v9 = 0;
    v10 = 0xE000000000000000;
  }
  sub_100070EDC(v7, (uint64_t)v77, &qword_100658670);
  sub_100070EDC((uint64_t)v77, (uint64_t)v78, &qword_100658670);
  result = (id)sub_1000A849C((uint64_t *)v78);
  if ((_DWORD)result == 1)
    goto LABEL_24;
  if ((v10 & 0x2000000000000000) != 0)
    v13 = HIBYTE(v10) & 0xF;
  else
    v13 = v9 & 0xFFFFFFFFFFFFLL;
  v14 = v78[0];
  v15 = v14;
  if (!v13)
  {
    swift_bridgeObjectRelease(v10);
    v57 = sub_10006922C((uint64_t *)&unk_1006424D0);
    inited = swift_initStackObject(v57, v74);
    *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
    v59 = NSForegroundColorAttributeName;
    v60 = sub_10006CB98();
    v61 = sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
    *(_QWORD *)(inited + 40) = v60;
    *(_QWORD *)(inited + 64) = v61;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    *(_QWORD *)(inited + 104) = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
    *(_QWORD *)(inited + 80) = v15;
    v62 = v15;
    v63 = NSFontAttributeName;
    v64 = sub_100076434(inited);
    v65 = objc_allocWithZone((Class)NSAttributedString);
    v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    type metadata accessor for Key(0);
    sub_10005A360((unint64_t *)&qword_1006424E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1004D93A8);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v68 = objc_msgSend(v65, "initWithString:attributes:", v66, isa, swift_bridgeObjectRelease(v64).n128_f64[0]);

    v69 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v68;

    result = *(id *)(v0 + v1);
    if (result)
      return result;
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v73 = v1;
  result = (id)_DocumentManagerBundle(v14);
  if (!result)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  v16 = result;
  v82._object = (void *)0x800000010053B7E0;
  v17._countAndFlagsBits = 0x25209380E2204025;
  v17._object = (void *)0xA900000000000040;
  v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v18.value._object = (void *)0xEB00000000656C62;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v82._countAndFlagsBits = 0x1000000000000053;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v82);

  v21 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (v21 && objc_msgSend(v21, "layoutDirection") == (id)1)
    v22 = 2;
  else
    v22 = 1;
  v23 = String.wrappedInDirectionalIsolation(_:)(v22, v20._countAndFlagsBits, v20._object);
  v25 = v24;
  swift_bridgeObjectRelease(v20._object);
  v26 = String.wrappedInDirectionalIsolation(_:)(0, v4, v6);
  v28 = v27;
  swift_bridgeObjectRelease(v6);
  v29 = String.wrappedInDirectionalIsolation(_:)(0, v9, v10);
  v31 = v30;
  swift_bridgeObjectRelease(v10);
  v32 = sub_10006922C((uint64_t *)&unk_100644560);
  v33 = swift_allocObject(v32, 112, 7);
  *(_OWORD *)(v33 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v33 + 56) = &type metadata for String;
  v34 = sub_10006A638();
  *(_QWORD *)(v33 + 32) = v26;
  *(_QWORD *)(v33 + 40) = v28;
  *(_QWORD *)(v33 + 96) = &type metadata for String;
  *(_QWORD *)(v33 + 104) = v34;
  *(_QWORD *)(v33 + 64) = v34;
  *(_QWORD *)(v33 + 72) = v29;
  *(_QWORD *)(v33 + 80) = v31;
  swift_bridgeObjectRetain(v28);
  String.init(format:_:)(v23, v25, v33);
  v36 = v35;
  swift_bridgeObjectRelease(v25);
  v71 = sub_10006922C((uint64_t *)&unk_1006424D0);
  v37 = swift_initStackObject(v71, v76);
  *(_OWORD *)(v37 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v37 + 32) = NSForegroundColorAttributeName;
  v70 = NSForegroundColorAttributeName;
  v38 = sub_1004AEAEC();
  v39 = sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  *(_QWORD *)(v37 + 40) = v38;
  *(_QWORD *)(v37 + 64) = v39;
  *(_QWORD *)(v37 + 72) = NSFontAttributeName;
  *(_QWORD *)(v37 + 104) = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
  *(_QWORD *)(v37 + 80) = v15;
  v72 = v15;
  v40 = NSFontAttributeName;
  v41 = sub_100076434(v37);
  v42 = objc_allocWithZone((Class)NSMutableAttributedString);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  type metadata accessor for Key(0);
  sub_10005A360((unint64_t *)&qword_1006424E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1004D93A8);
  v44 = Dictionary._bridgeToObjectiveC()().super.isa;
  v45 = objc_msgSend(v42, "initWithString:attributes:", v43, v44, swift_bridgeObjectRelease(v41).n128_f64[0]);

  result = objc_msgSend(v45, "string");
  if (!result)
    goto LABEL_26;
  v46 = result;
  v47 = String._bridgeToObjectiveC()();
  v48 = objc_msgSend(v46, "rangeOfString:", v47, swift_bridgeObjectRelease(v28).n128_f64[0]);
  v50 = v49;

  if (v48 != (id)NSNotFound.getter())
  {
    v51 = swift_initStackObject(v71, v75);
    *(_OWORD *)(v51 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v51 + 32) = v70;
    v52 = v70;
    v53 = sub_10006CB98();
    *(_QWORD *)(v51 + 64) = v39;
    *(_QWORD *)(v51 + 40) = v53;
    v54 = sub_100076434(v51);
    v55 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v45, "addAttributes:range:", v55, v48, v50, swift_bridgeObjectRelease(v54).n128_f64[0]);

  }
  v56 = *(void **)(v0 + v73);
  *(_QWORD *)(v0 + v73) = v45;

  result = *(id *)(v0 + v73);
  if (!result)
    goto LABEL_22;
  return result;
}

uint64_t sub_1000737F4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10007382C();
  swift_bridgeObjectRetain(v1);
  return v0;
}

uint64_t sub_10007382C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  int v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  unint64_t v99;
  char v100;
  uint64_t v101;
  Swift::String v102;
  Swift::String v103;
  void *object;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  Swift::String v112;
  Swift::String v113;
  void *v114;
  char v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  Swift::String v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  Swift::String v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Swift::String v127;
  Swift::String v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  unint64_t v134;
  uint64_t v135;
  Swift::String v136;
  Swift::String v137;
  void *v138;
  unint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  Swift::String v143;
  Swift::String v144;
  void *v145;
  Swift::String v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  int v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  char v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  unint64_t v178;
  uint64_t v179;
  Swift::String v180;
  char v181;
  unint64_t v182;
  uint64_t v183;
  Swift::String v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  unint64_t v188;
  char v189;
  uint64_t v190;
  Swift::String v191;
  uint64_t v192;
  uint64_t v193;
  Swift::String v194;
  Swift::String v195;
  void *v196;
  uint64_t v197;
  Swift::String v198;
  Swift::String v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char v204;
  uint64_t v205;
  Swift::String v206;
  Swift::String v207;
  void *v208;
  Swift::String v209;
  uint64_t v210;
  uint64_t v211;
  Swift::String v212;
  void *v213;
  BOOL v214;
  int v215;
  uint64_t v216;
  char v217;
  unint64_t v218;
  uint64_t v219;
  Swift::String v220;
  uint64_t v221;
  uint64_t v222;
  BOOL v223;
  _BOOL4 v224;
  unint64_t v225;
  char v226;
  uint64_t v227;
  Swift::String v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  uint64_t v232;
  Swift::String v233;
  Swift::String v234;
  void *v235;
  Swift::String v236;
  uint64_t v237;
  uint64_t v238;
  Swift::String v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  int v243;
  _QWORD *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char v286[24];
  _BYTE v287[89];
  uint64_t v288;
  uint64_t v289;
  _BYTE v290[88];
  _QWORD v291[15];
  _OWORD v292[3];
  _BYTE v293[16];
  uint64_t v294;
  uint64_t v295;

  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8))
  {
    sub_100070EDC(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v287, &qword_100658670);
    sub_100070EDC((uint64_t)v287, (uint64_t)&v288, &qword_100658670);
    if (sub_1000A849C(&v288) == 1)
    {
      __break(1u);
      goto LABEL_379;
    }
    v5 = v289;
    v6 = swift_allocObject(&unk_1005F1AF0, 32, 7);
    *(_QWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v6 + 24) = 0;
    v1 = swift_allocObject(&unk_1005F1AF0, 32, 7);
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    v2 = swift_allocObject(&unk_1005F1AF0, 32, 7);
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    v7 = swift_allocObject(&unk_1005F1AF0, 32, 7);
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v3 = swift_allocObject(&unk_1005F1AF0, 32, 7);
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = 0;
    v8 = swift_allocObject(&unk_1005F1AF0, 32, 7);
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    v263 = v8;
    v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v286, 0, 0);
    v11 = *v9;
    v262 = v0;
    if (*v9)
    {
      v257 = v5;
      v12 = v4;
      v13 = v1;
      v14 = v7;
      ObjectType = swift_getObjectType(v11, v10);
      swift_unknownObjectRetain(v11);
      sub_10006FA3C(ObjectType, (uint64_t)v290);
      swift_unknownObjectRelease(v11);
      sub_100070EDC((uint64_t)v290, (uint64_t)v291, (uint64_t *)&unk_10064A070);
      if (v291[0] != 1)
      {
        v292[0] = *(_OWORD *)&v291[4];
        v292[1] = *(_OWORD *)&v291[6];
        v292[2] = *(_OWORD *)&v291[8];
        *(_OWORD *)&v291[11] = *(_OWORD *)v291;
        *(_OWORD *)&v291[13] = *(_OWORD *)&v291[2];
        sub_100070EDC((uint64_t)v292, (uint64_t)v293, &qword_100648C80);
        sub_1001D0760((uint64_t)v293);
        sub_1002617E4((uint64_t)v290);
        sub_100070EDC((uint64_t)v293, (uint64_t)&v294, &qword_100648C80);
        v16 = v295;
        if (v295)
        {
          v17 = v294;
          v7 = v14;
          v1 = v13;
          v4 = v12;
          goto LABEL_128;
        }
      }
      v18 = *v9;
      v7 = v14;
      v1 = v13;
      v4 = v12;
      v5 = v257;
      if (v18)
      {
        if (objc_msgSend((id)swift_unknownObjectRetain(v18), "isExternalDownloadPlaceholder"))
        {
          v17 = sub_10049AA60(v7, v0, (uint64_t (*)(void))sub_100076C48);
          v16 = v19;
          swift_unknownObjectRelease(v18);
          goto LABEL_128;
        }
        swift_unknownObjectRelease(v18);
      }
    }
    if ((v5 & 8) != 0)
    {
      v45 = sub_1004AFEC4(v1, v0, (uint64_t (*)(void))sub_100076A5C);
      v47 = v46;
      swift_bridgeObjectRelease(v46);
      v48 = HIBYTE(v47) & 0xF;
      if ((v47 & 0x2000000000000000) == 0)
        v48 = v45 & 0xFFFFFFFFFFFFLL;
      if (v48)
      {
        v49 = sub_1004AFEC4(v1, v0, (uint64_t (*)(void))sub_100076A5C);
LABEL_127:
        v17 = v49;
        v16 = v50;
        goto LABEL_128;
      }
LABEL_121:
      v49 = sub_10049AA60(v7, v0, (uint64_t (*)(void))sub_100076C48);
      goto LABEL_127;
    }
    if ((v5 & 2) == 0)
    {
      v20 = v7;
      v21 = v6;
      v22 = sub_1004AFEC4(v6, v0, (uint64_t (*)(void))sub_10006E6E0);
      v24 = v23;
      v247 = v1;
      v25 = sub_1004AFEC4(v1, v0, (uint64_t (*)(void))sub_100076A5C);
      v26 = v2;
      v27 = v20;
      v29 = v28;
      v254 = v26;
      v253 = sub_10049AA60(v26, v0, sub_10006E8BC);
      v31 = v30;
      v248 = v27;
      v250 = v3;
      v252 = sub_10049AA60(v27, v0, (uint64_t (*)(void))sub_100076C48);
      v33 = v32;
      v34 = v3;
      v35 = v22;
      v6 = v21;
      v36 = v0;
      v37 = v25;
      v245 = sub_1004AFF58(v34, v36);
      v39 = v38;
      v258 = v24;
      if (v35)
        v40 = 0;
      else
        v40 = v24 == 0xE000000000000000;
      v41 = v31;
      v42 = v29;
      v43 = v40;
      if (!v40 && (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
        goto LABEL_64;
      if ((!v37 && v42 == 0xE000000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v42, 0) & 1) != 0)
        && (!v253 && v41 == 0xE000000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v41, 0) & 1) != 0))
      {
        if (!v252 && v33 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease(v39);
          v44 = 0xE000000000000000;
LABEL_62:
          swift_bridgeObjectRelease(v44);
          v7 = v248;
          v3 = v250;
          v1 = v247;
LABEL_94:
          v2 = v254;
          swift_bridgeObjectRelease(v258);
          v90 = v42;
LABEL_126:
          swift_bridgeObjectRelease(v90);
          swift_bridgeObjectRelease(v41);
          v49 = sub_1004AFF58(v3, v262);
          goto LABEL_127;
        }
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v39);
          v44 = v33;
          goto LABEL_62;
        }
      }
      if ((v43 & 1) == 0)
      {
LABEL_64:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
          goto LABEL_96;
      }
      v243 = v43;
      v244 = (_QWORD *)v35;
      v246 = v21;
      v7 = v248;
      v3 = v250;
      v1 = v247;
      if (!v37 && v42 == 0xE000000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v42, 0) & 1) != 0)
      {
        v242 = v39;
        v76 = v41;
        v77 = sub_10049AAF0(v263);
        v79 = v78;
        if (v77 == v253 && v78 == v76)
        {
          swift_bridgeObjectRelease(v76);
          v41 = v76;
          v39 = v242;
        }
        else
        {
          v82 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, v253, v76, 0);
          swift_bridgeObjectRelease(v79);
          v41 = v76;
          v39 = v242;
          if ((v82 & 1) == 0)
            goto LABEL_95;
        }
        if (!v252 && v33 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease(v39);
          v83 = 0xE000000000000000;
LABEL_93:
          swift_bridgeObjectRelease(v83);
          v6 = v246;
          goto LABEL_94;
        }
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v39);
          v83 = v33;
          goto LABEL_93;
        }
      }
LABEL_95:
      v6 = v246;
      v35 = (uint64_t)v244;
      v43 = v243;
      if ((v243 & 1) != 0)
      {
LABEL_97:
        if (!v37 && v42 == 0xE000000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v42, 0) & 1) != 0)
        {
          if (!v253 && v41 == 0xE000000000000000)
          {
            swift_bridgeObjectRelease(v39);
            swift_bridgeObjectRelease(0xE000000000000000);
LABEL_138:
            swift_bridgeObjectRelease(v258);
            swift_bridgeObjectRelease(v42);
            swift_bridgeObjectRelease(v33);
            v3 = v250;
            v264 = sub_1004AFF58(v250, v262);
            v275 = v101;
            v102._countAndFlagsBits = 2108704;
            v102._object = (void *)0xE300000000000000;
            String.append(_:)(v102);
            v7 = v248;
            v103._countAndFlagsBits = sub_10049AA60(v248, v262, (uint64_t (*)(void))sub_100076C48);
            object = v103._object;
            String.append(_:)(v103);
            swift_bridgeObjectRelease(object);
            v17 = v264;
            v16 = v275;
            v1 = v247;
            v2 = v254;
            goto LABEL_128;
          }
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v41, 0) & 1) != 0)
          {
            swift_bridgeObjectRelease(v39);
            swift_bridgeObjectRelease(v41);
            goto LABEL_138;
          }
        }
        if ((v43 & 1) != 0)
        {
LABEL_108:
          v246 = v6;
          if (!v37 && v42 == 0xE000000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v42, 0) & 1) != 0)
          {
            v91 = sub_10049AAF0(v263);
            v93 = v41;
            v94 = v92;
            if (v91 == v253 && v92 == v93)
            {
              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease_n(v93, 2);
LABEL_137:
              v6 = v246;
              goto LABEL_138;
            }
            v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v91, v92, v253, v93, 0);
            swift_bridgeObjectRelease(v94);
            v41 = v93;
            if ((v100 & 1) != 0)
            {
              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease(v93);
              goto LABEL_137;
            }
          }
          v6 = v246;
          if ((v43 & 1) != 0)
          {
LABEL_141:
            if ((!v37 && v42 == 0xE000000000000000
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v42, 0) & 1) != 0)
              && (!v252 && v33 == 0xE000000000000000
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0))
            {
              swift_bridgeObjectRelease(v42);
              swift_bridgeObjectRelease(v258);
              swift_bridgeObjectRelease(v33);
              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease(v41);
              v2 = v254;
              v17 = sub_10049AA60(v254, v262, sub_10006E8BC);
              v16 = v105;
              v7 = v248;
              v3 = v250;
              v1 = v247;
              goto LABEL_128;
            }
            if ((v43 & 1) != 0)
            {
LABEL_159:
              if (!v37 && v42 == 0xE000000000000000
                || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v42, 0) & 1) != 0)
              {
                swift_bridgeObjectRelease(v41);
                swift_bridgeObjectRelease(v258);
                swift_bridgeObjectRelease(v42);
                swift_bridgeObjectRelease(v39);
                swift_bridgeObjectRelease(v33);
                v2 = v254;
                v265 = sub_10049AA60(v254, v262, sub_10006E8BC);
                v276 = v111;
                v112._countAndFlagsBits = 2108704;
                v112._object = (void *)0xE300000000000000;
                String.append(_:)(v112);
                v7 = v248;
                v113._countAndFlagsBits = sub_10049AA60(v248, v262, (uint64_t (*)(void))sub_100076C48);
                v114 = v113._object;
                String.append(_:)(v113);
                swift_bridgeObjectRelease(v114);
                v17 = v265;
                v16 = v276;
                v3 = v250;
                v1 = v247;
                goto LABEL_128;
              }
              if ((v43 & 1) != 0)
              {
LABEL_186:
                if ((!v252 && v33 == 0xE000000000000000
                   || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0)
                  && (!v245 && v39 == 0xE000000000000000
                   || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v39, 0) & 1) != 0))
                {
                  swift_bridgeObjectRelease(v42);
                  swift_bridgeObjectRelease(v258);
                  swift_bridgeObjectRelease(v39);
                  swift_bridgeObjectRelease(v33);
                  swift_bridgeObjectRelease(v41);
                  v1 = v247;
                  v17 = sub_1004AFEC4(v247, v262, (uint64_t (*)(void))sub_100076A5C);
                  v16 = v125;
                  v3 = v250;
LABEL_199:
                  v7 = v248;
                  v2 = v254;
                  goto LABEL_128;
                }
                if ((v43 & 1) != 0)
                {
LABEL_195:
                  if (!v252 && v33 == 0xE000000000000000
                    || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0)
                  {
                    swift_bridgeObjectRelease(v42);
                    swift_bridgeObjectRelease(v258);
                    swift_bridgeObjectRelease(v33);
                    swift_bridgeObjectRelease(v39);
                    swift_bridgeObjectRelease(v41);
                    v1 = v247;
                    v267 = sub_1004AFEC4(v247, v262, (uint64_t (*)(void))sub_100076A5C);
                    v278 = v126;
                    v127._countAndFlagsBits = 2108704;
                    v127._object = (void *)0xE300000000000000;
                    String.append(_:)(v127);
                    v3 = v250;
                    v128._countAndFlagsBits = sub_1004AFF58(v250, v262);
                    v129 = v128._object;
                    String.append(_:)(v128);
                    swift_bridgeObjectRelease(v129);
                    v17 = v267;
                    v16 = v278;
                    goto LABEL_199;
                  }
                  if ((v43 & 1) != 0)
                  {
LABEL_213:
                    if (!v245 && v39 == 0xE000000000000000
                      || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v39, 0) & 1) != 0)
                    {
                      swift_bridgeObjectRelease(v42);
                      swift_bridgeObjectRelease(v258);
                      swift_bridgeObjectRelease(v39);
                      swift_bridgeObjectRelease(v33);
                      swift_bridgeObjectRelease(v41);
                      v1 = v247;
                      v268 = sub_1004AFEC4(v247, v262, (uint64_t (*)(void))sub_100076A5C);
                      v279 = v135;
                      v136._countAndFlagsBits = 2108704;
                      v136._object = (void *)0xE300000000000000;
                      String.append(_:)(v136);
                      v7 = v248;
                      v137._countAndFlagsBits = sub_10049AA60(v248, v262, (uint64_t (*)(void))sub_100076C48);
                      v138 = v137._object;
                      String.append(_:)(v137);
                      swift_bridgeObjectRelease(v138);
                      v17 = v268;
                      v16 = v279;
                      v3 = v250;
                      v2 = v254;
                      goto LABEL_128;
                    }
                    if (v43)
                    {
                      swift_bridgeObjectRelease(v41);
                      swift_bridgeObjectRelease(v42);
                      swift_bridgeObjectRelease(0xE000000000000000);
                      v140 = v262;
LABEL_230:
                      v7 = v248;
                      v3 = v250;
                      v1 = v247;
                      swift_bridgeObjectRelease(v39);
                      swift_bridgeObjectRelease(v33);
                      v269 = sub_1004AFEC4(v247, v140, (uint64_t (*)(void))sub_100076A5C);
                      v280 = v142;
                      v143._countAndFlagsBits = 2108704;
                      v143._object = (void *)0xE300000000000000;
                      String.append(_:)(v143);
                      v144._countAndFlagsBits = sub_1004AFF58(v250, v140);
                      v145 = v144._object;
                      String.append(_:)(v144);
                      swift_bridgeObjectRelease(v145);
                      v146._countAndFlagsBits = 2108704;
                      v146._object = (void *)0xE300000000000000;
                      String.append(_:)(v146);
                      v147 = sub_10049AA60(v248, v140, (uint64_t (*)(void))sub_100076C48);
LABEL_231:
                      v149 = v148;
                      String.append(_:)(*(Swift::String *)&v147);
                      swift_bridgeObjectRelease(v149);
                      v17 = v269;
                      v16 = v280;
                      v2 = v254;
                      goto LABEL_128;
                    }
LABEL_228:
                    v240 = v41;
                    v241 = v33;
                    v246 = v6;
                    v141 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0);
                    swift_bridgeObjectRelease(v258);
                    if ((v141 & 1) != 0)
                    {
                      swift_bridgeObjectRelease(v240);
                      swift_bridgeObjectRelease(v42);
                      v140 = v262;
                      goto LABEL_230;
                    }
                    v261 = v42;
                    if (v37)
                      v150 = 0;
                    else
                      v150 = v42 == 0xE000000000000000;
                    v151 = v150;
                    if (!v150
                      && (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v261, 0) & 1) == 0)
                    {
                      goto LABEL_272;
                    }
                    if ((!v253 && v240 == 0xE000000000000000
                       || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v240, 0) & 1) != 0)
                      && (!v252 && v33 == 0xE000000000000000
                       || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0))
                    {
                      if (!v245 && v39 == 0xE000000000000000)
                      {
                        swift_bridgeObjectRelease(v33);
                        v152 = 0xE000000000000000;
LABEL_270:
                        swift_bridgeObjectRelease(v152);
                        v1 = v247;
                        v161 = v261;
                        v160 = v262;
                        v7 = v248;
                        v3 = v250;
                        v2 = v254;
                        swift_bridgeObjectRelease(v240);
LABEL_288:
                        swift_bridgeObjectRelease(v161);
                        v49 = sub_1004AFEC4(v6, v160, (uint64_t (*)(void))sub_10006E6E0);
                        goto LABEL_127;
                      }
                      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v39, 0) & 1) != 0)
                      {
                        swift_bridgeObjectRelease(v33);
                        v152 = v39;
                        goto LABEL_270;
                      }
                    }
                    if ((v151 & 1) == 0)
                    {
LABEL_272:
                      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v261, 0) & 1) == 0)
                      {
                        swift_bridgeObjectRelease(v39);
                        v7 = v248;
                        v3 = v250;
                        v1 = v247;
LABEL_290:
                        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v261, 0) & 1) == 0)
                        {
LABEL_301:
                          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v261, 0) & 1) == 0)
                          {
                            v244 = v4;
                            v168 = v3;
                            v169 = v7;
                            v170 = v254;
                            swift_bridgeObjectRelease(v240);
                            goto LABEL_322;
                          }
LABEL_302:
                          v244 = v4;
                          v168 = v3;
                          v169 = v7;
                          v170 = v254;
                          v171 = sub_10049AAF0(v263);
                          v173 = v172;
                          if (v171 == v253 && v172 == v240)
                          {
                            swift_bridgeObjectRelease_n(v240, 2);
                          }
                          else
                          {
                            v177 = _stringCompareWithSmolCheck(_:_:expecting:)(v171, v172, v253, v240, 0);
                            swift_bridgeObjectRelease(v240);
                            swift_bridgeObjectRelease(v173);
                            if ((v177 & 1) == 0)
                              goto LABEL_320;
                          }
                          if (!v252 && v241 == 0xE000000000000000)
                          {
                            swift_bridgeObjectRelease(v261);
                            v178 = 0xE000000000000000;
LABEL_318:
                            swift_bridgeObjectRelease(v178);
                            v7 = v169;
                            v3 = v168;
                            v4 = v244;
                            goto LABEL_319;
                          }
                          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v241, 0) & 1) != 0)
                          {
                            swift_bridgeObjectRelease(v261);
                            v178 = v241;
                            goto LABEL_318;
                          }
LABEL_320:
                          if (v151)
                          {
                            swift_bridgeObjectRelease(0xE000000000000000);
LABEL_323:
                            if (!v252 && v241 == 0xE000000000000000)
                            {
                              v182 = 0xE000000000000000;
LABEL_328:
                              swift_bridgeObjectRelease(v182);
                              v270 = sub_1004AFEC4(v6, v262, (uint64_t (*)(void))sub_10006E6E0);
                              v281 = v183;
                              v184._countAndFlagsBits = 2108704;
                              v184._object = (void *)0xE300000000000000;
                              String.append(_:)(v184);
                              v185 = sub_10049AA60(v170, v262, sub_10006E8BC);
                              goto LABEL_338;
                            }
                            if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v241, 0) & 1) != 0)
                            {
                              v182 = v241;
                              goto LABEL_328;
                            }
LABEL_329:
                            if (v252 || v241 != 0xE000000000000000)
                            {
                              v189 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v241, 0);
                              swift_bridgeObjectRelease(v241);
                              if ((v189 & 1) == 0)
                              {
                                v272 = sub_1004AFEC4(v6, v262, (uint64_t (*)(void))sub_10006E6E0);
                                v283 = v197;
                                v198._countAndFlagsBits = 2108704;
                                v198._object = (void *)0xE300000000000000;
                                String.append(_:)(v198);
                                v7 = v169;
                                v199._countAndFlagsBits = sub_10049AA60(v169, v262, (uint64_t (*)(void))sub_100076C48);
                                v200 = v199._object;
                                String.append(_:)(v199);
                                swift_bridgeObjectRelease(v200);
                                v17 = v272;
                                v16 = v283;
                                goto LABEL_339;
                              }
                            }
                            else
                            {
                              swift_bridgeObjectRelease(0xE000000000000000);
                            }
                            v270 = sub_1004AFEC4(v6, v262, (uint64_t (*)(void))sub_10006E6E0);
                            v281 = v190;
                            v191._countAndFlagsBits = 2108704;
                            v191._object = (void *)0xE300000000000000;
                            String.append(_:)(v191);
                            v185 = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
LABEL_338:
                            v192 = v186;
                            String.append(_:)(*(Swift::String *)&v185);
                            swift_bridgeObjectRelease(v192);
                            v17 = v270;
                            v16 = v281;
                            v7 = v169;
LABEL_339:
                            v2 = v170;
                            v3 = v168;
                            v4 = v244;
                            goto LABEL_128;
                          }
LABEL_322:
                          v181 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v37, v261, 0);
                          swift_bridgeObjectRelease(v261);
                          if ((v181 & 1) == 0)
                            goto LABEL_329;
                          goto LABEL_323;
                        }
LABEL_291:
                        if (!v253 && v240 == 0xE000000000000000
                          || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v240, 0) & 1) != 0)
                        {
                          if (!v252 && v33 == 0xE000000000000000)
                          {
                            swift_bridgeObjectRelease(v240);
                            v167 = 0xE000000000000000;
LABEL_299:
                            swift_bridgeObjectRelease(v167);
                            swift_bridgeObjectRelease(v261);
LABEL_319:
                            v269 = sub_1004AFEC4(v6, v262, (uint64_t (*)(void))sub_10006E6E0);
                            v280 = v179;
                            v180._countAndFlagsBits = 2108704;
                            v180._object = (void *)0xE300000000000000;
                            String.append(_:)(v180);
                            v147 = sub_1004AFF58(v3, v262);
                            goto LABEL_231;
                          }
                          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0)
                          {
                            swift_bridgeObjectRelease(v240);
                            v167 = v33;
                            goto LABEL_299;
                          }
                        }
                        if ((v151 & 1) != 0)
                          goto LABEL_302;
                        goto LABEL_301;
                      }
                    }
                    v162 = sub_10049AAF0(v263);
                    v164 = v163;
                    if (v162 == v253 && v163 == v240)
                    {
                      swift_bridgeObjectRelease(v240);
                    }
                    else
                    {
                      v165 = _stringCompareWithSmolCheck(_:_:expecting:)(v162, v163, v253, v240, 0);
                      swift_bridgeObjectRelease(v164);
                      if ((v165 & 1) == 0)
                        goto LABEL_284;
                    }
                    if (!v252 && v33 == 0xE000000000000000
                      || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v252, v33, 0) & 1) != 0)
                    {
                      if (!v245 && v39 == 0xE000000000000000)
                      {
                        swift_bridgeObjectRelease(v240);
                        swift_bridgeObjectRelease(v33);
                        swift_bridgeObjectRelease(0xE000000000000000);
                        v1 = v247;
                        v161 = v261;
                        v160 = v262;
                        v7 = v248;
                        v3 = v250;
LABEL_287:
                        v2 = v254;
                        goto LABEL_288;
                      }
                      v166 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v39, 0);
                      swift_bridgeObjectRelease(v39);
                      v7 = v248;
                      v3 = v250;
                      v1 = v247;
                      if ((v166 & 1) != 0)
                      {
                        swift_bridgeObjectRelease(v240);
                        swift_bridgeObjectRelease(v33);
                        v161 = v261;
                        v160 = v262;
                        goto LABEL_287;
                      }
LABEL_289:
                      if ((v151 & 1) != 0)
                        goto LABEL_291;
                      goto LABEL_290;
                    }
LABEL_284:
                    swift_bridgeObjectRelease(v39);
                    v7 = v248;
                    v3 = v250;
                    v1 = v247;
                    goto LABEL_289;
                  }
LABEL_212:
                  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
                    goto LABEL_228;
                  goto LABEL_213;
                }
LABEL_194:
                if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
                  goto LABEL_212;
                goto LABEL_195;
              }
LABEL_185:
              if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
                goto LABEL_194;
              goto LABEL_186;
            }
LABEL_158:
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
              goto LABEL_185;
            goto LABEL_159;
          }
LABEL_140:
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
            goto LABEL_158;
          goto LABEL_141;
        }
LABEL_107:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
          goto LABEL_140;
        goto LABEL_108;
      }
LABEL_96:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v35, v258, 0) & 1) == 0)
        goto LABEL_107;
      goto LABEL_97;
    }
    if ((v5 & 1) == 0)
    {
      v51 = sub_10049AA60(v2, v0, sub_10006E8BC);
      v52 = v0;
      v54 = v53;
      v259 = sub_1004AFEC4(v1, v0, (uint64_t (*)(void))sub_100076A5C);
      v56 = v55;
      v57 = sub_10049AA60(v7, v52, (uint64_t (*)(void))sub_100076C48);
      v252 = v58;
      v253 = v57;
      v59 = v52;
      v41 = v56;
      v245 = sub_1004AFF58(v3, v59);
      v61 = v60;
      if (v51)
        v62 = 0;
      else
        v62 = v54 == 0xE000000000000000;
      v63 = v62;
      v251 = v63;
      if ((v62 || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v51, v54, 0) & 1) != 0)
        && (!v259 && v41 == 0xE000000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v259, v41, 0) & 1) != 0))
      {
        if (!v253 && v252 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease(v61);
          v64 = 0xE000000000000000;
LABEL_80:
          swift_bridgeObjectRelease(v64);
LABEL_125:
          v90 = v54;
          goto LABEL_126;
        }
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v252, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v61);
          v64 = v252;
          goto LABEL_80;
        }
      }
      v256 = v2;
      v247 = v61;
      v249 = v41;
      v246 = v6;
      v84 = sub_10049AAF0(v263);
      v86 = v85;
      if (v84 == v51 && v85 == v54)
      {
        swift_bridgeObjectRelease(v54);
        v41 = v249;
        v87 = v252;
      }
      else
      {
        v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v84, v85, v51, v54, 0);
        swift_bridgeObjectRelease(v86);
        v41 = v249;
        v87 = v252;
        if ((v88 & 1) == 0)
          goto LABEL_130;
      }
      if (!v259 && v41 == 0xE000000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v259, v41, 0) & 1) != 0)
      {
        if (!v253 && v87 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease(v247);
          v89 = 0xE000000000000000;
LABEL_124:
          swift_bridgeObjectRelease(v89);
          v2 = v256;
          goto LABEL_125;
        }
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v87, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v247);
          v89 = v87;
          goto LABEL_124;
        }
      }
LABEL_130:
      v2 = v256;
      if ((v251 & 1) != 0
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v51, v54, 0) & 1) != 0)
      {
        if (!v259 && v41 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease(v247);
          v99 = 0xE000000000000000;
LABEL_153:
          swift_bridgeObjectRelease(v99);
LABEL_174:
          swift_bridgeObjectRelease(v54);
          swift_bridgeObjectRelease(v87);
          v266 = sub_1004AFF58(v3, v262);
          v277 = v122;
          v123._countAndFlagsBits = 2108704;
          v123._object = (void *)0xE300000000000000;
          String.append(_:)(v123);
          v120 = sub_10049AA60(v7, v262, (uint64_t (*)(void))sub_100076C48);
          goto LABEL_175;
        }
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v259, v41, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v247);
          v99 = v41;
          goto LABEL_153;
        }
      }
      v107 = sub_10049AAF0(v263);
      v109 = v108;
      if (v107 == v51 && v108 == v54)
      {
        swift_bridgeObjectRelease(v54);
        v110 = v249;
      }
      else
      {
        v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v107, v108, v51, v54, 0);
        swift_bridgeObjectRelease(v109);
        v110 = v249;
        if ((v115 & 1) == 0)
        {
LABEL_176:
          if (((v251 & 1) != 0
             || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v51, v54, 0) & 1) != 0)
            && (!v253 && v87 == 0xE000000000000000
             || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v87, 0) & 1) != 0))
          {
            v2 = v256;
            if (!v245 && v247 == 0xE000000000000000)
            {
              swift_bridgeObjectRelease(v87);
              swift_bridgeObjectRelease(0xE000000000000000);
LABEL_220:
              swift_bridgeObjectRelease(v54);
              swift_bridgeObjectRelease(v110);
              v49 = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
              goto LABEL_127;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v247, 0) & 1) != 0)
              goto LABEL_218;
          }
          v130 = sub_10049AAF0(v263);
          v132 = v131;
          if (v130 == v51 && v131 == v54)
          {
            swift_bridgeObjectRelease(v54);
            v110 = v249;
          }
          else
          {
            v133 = _stringCompareWithSmolCheck(_:_:expecting:)(v130, v131, v51, v54, 0);
            swift_bridgeObjectRelease(v132);
            v110 = v249;
            if ((v133 & 1) == 0)
              goto LABEL_221;
          }
          if (!v253 && v87 == 0xE000000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v87, 0) & 1) != 0)
          {
            if (!v245 && v247 == 0xE000000000000000)
            {
              swift_bridgeObjectRelease(v87);
              v134 = 0xE000000000000000;
LABEL_219:
              swift_bridgeObjectRelease(v134);
              v2 = v256;
              goto LABEL_220;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v247, 0) & 1) != 0)
            {
LABEL_218:
              swift_bridgeObjectRelease(v87);
              v134 = v247;
              goto LABEL_219;
            }
          }
LABEL_221:
          v2 = v256;
          if ((v251 & 1) != 0
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v51, v54, 0) & 1) != 0)
          {
            if (!v253 && v87 == 0xE000000000000000)
            {
              swift_bridgeObjectRelease(v247);
              v139 = 0xE000000000000000;
LABEL_251:
              swift_bridgeObjectRelease(v139);
LABEL_262:
              swift_bridgeObjectRelease(v54);
              swift_bridgeObjectRelease(v110);
              v118 = v262;
              v266 = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
              v277 = v158;
              goto LABEL_170;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v87, 0) & 1) != 0)
            {
              swift_bridgeObjectRelease(v247);
              v139 = v87;
              goto LABEL_251;
            }
          }
          v153 = sub_10049AAF0(v263);
          v155 = v154;
          if (v153 == v51 && v154 == v54)
          {
            swift_bridgeObjectRelease(v54);
          }
          else
          {
            v156 = _stringCompareWithSmolCheck(_:_:expecting:)(v153, v154, v51, v54, 0);
            swift_bridgeObjectRelease(v155);
            if ((v156 & 1) == 0)
              goto LABEL_263;
          }
          if (!v253 && v87 == 0xE000000000000000)
          {
            swift_bridgeObjectRelease(v247);
            v157 = 0xE000000000000000;
LABEL_261:
            swift_bridgeObjectRelease(v157);
            v110 = v249;
            v2 = v256;
            goto LABEL_262;
          }
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v87, 0) & 1) != 0)
          {
            swift_bridgeObjectRelease(v247);
            v157 = v87;
            goto LABEL_261;
          }
LABEL_263:
          if ((v251 & 1) != 0
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v51, v54, 0) & 1) != 0)
          {
            if (!v245 && v247 == 0xE000000000000000)
            {
              swift_bridgeObjectRelease(v87);
              v159 = 0xE000000000000000;
LABEL_308:
              swift_bridgeObjectRelease(v159);
              v2 = v256;
LABEL_343:
              swift_bridgeObjectRelease(v54);
              swift_bridgeObjectRelease(v249);
              v271 = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
              v282 = v193;
              v194._countAndFlagsBits = 2108704;
              v194._object = (void *)0xE300000000000000;
              String.append(_:)(v194);
              v195._countAndFlagsBits = sub_10049AA60(v7, v262, (uint64_t (*)(void))sub_100076C48);
              v196 = v195._object;
              String.append(_:)(v195);
              swift_bridgeObjectRelease(v196);
              v17 = v271;
              v16 = v282;
              while (1)
              {
LABEL_128:
                v97 = v4[1];
                *v4 = v17;
                v4[1] = v16;
                swift_release(v6);
                swift_release(v1);
                swift_release(v2);
                swift_release(v7);
                swift_release(v3);
                swift_release(v263);
                swift_bridgeObjectRelease(v97);
                if (v4[1])
                  return *v4;
LABEL_379:
                __break(1u);
LABEL_380:
                if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v252, 0) & 1) != 0)
                {
                  v218 = v252;
LABEL_382:
                  swift_bridgeObjectRelease(v218);
                  swift_bridgeObjectRelease(v247);
                  v274 = sub_10049AA60(v2, v262, sub_10006E8BC);
                  v285 = v219;
                  v220._countAndFlagsBits = 2108704;
                  v220._object = (void *)0xE300000000000000;
                  String.append(_:)(v220);
                  v221 = v3;
                  v222 = v262;
                  goto LABEL_402;
                }
LABEL_383:
                v223 = !v253 && v252 == 0xE000000000000000;
                v224 = v223;
                if (!v223
                  && (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v252, 0) & 1) == 0)
                {
                  break;
                }
                if (v245 || v247 != 0xE000000000000000)
                {
                  v226 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v247, 0);
                  swift_bridgeObjectRelease(v247);
                  if ((v226 & 1) != 0)
                  {
                    v225 = v252;
                    goto LABEL_396;
                  }
                  if (v224)
                  {
                    swift_bridgeObjectRelease(0xE000000000000000);
LABEL_401:
                    v274 = sub_10049AA60(v2, v262, sub_10006E8BC);
                    v285 = v232;
                    v233._countAndFlagsBits = 2108704;
                    v233._object = (void *)0xE300000000000000;
                    String.append(_:)(v233);
                    v234._countAndFlagsBits = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
                    v235 = v234._object;
                    String.append(_:)(v234);
                    swift_bridgeObjectRelease(v235);
                    v236._countAndFlagsBits = 2108704;
                    v236._object = (void *)0xE300000000000000;
                    String.append(_:)(v236);
                    v221 = v3;
                    v222 = v262;
LABEL_402:
                    v229 = sub_1004AFF58(v221, v222);
                    goto LABEL_403;
                  }
LABEL_400:
                  v231 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v252, 0);
                  swift_bridgeObjectRelease(v252);
                  if ((v231 & 1) != 0)
                    goto LABEL_401;
                  v273 = sub_10049AA60(v2, v262, sub_10006E8BC);
                  v284 = v238;
                  v239._countAndFlagsBits = 2108704;
                  v239._object = (void *)0xE300000000000000;
                  String.append(_:)(v239);
                  v7 = (uint64_t)v4;
                  v210 = (uint64_t)v4;
                  v211 = v262;
LABEL_356:
                  v212._countAndFlagsBits = sub_10049AA60(v210, v211, (uint64_t (*)(void))sub_100076C48);
                  v213 = v212._object;
                  String.append(_:)(v212);
                  swift_bridgeObjectRelease(v213);
                  v17 = v273;
                  v16 = v284;
                  v6 = v246;
                  v4 = v244;
                }
                else
                {
                  swift_bridgeObjectRelease(v252);
                  v225 = 0xE000000000000000;
LABEL_396:
                  swift_bridgeObjectRelease(v225);
                  v274 = sub_10049AA60(v2, v262, sub_10006E8BC);
                  v285 = v227;
                  v228._countAndFlagsBits = 2108704;
                  v228._object = (void *)0xE300000000000000;
                  String.append(_:)(v228);
                  v229 = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
LABEL_403:
                  v237 = v230;
                  String.append(_:)(*(Swift::String *)&v229);
                  swift_bridgeObjectRelease(v237);
                  v17 = v274;
                  v16 = v285;
LABEL_404:
                  v6 = v246;
                  v7 = (uint64_t)v4;
                  v4 = v244;
                }
              }
              swift_bridgeObjectRelease(v247);
              goto LABEL_400;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v247, 0) & 1) != 0)
            {
              swift_bridgeObjectRelease(v87);
              v159 = v247;
              goto LABEL_308;
            }
          }
          v244 = v4;
          v4 = (_QWORD *)v7;
          v2 = v256;
          v174 = sub_10049AAF0(v263);
          v176 = v175;
          if (v174 == v51 && v175 == v54)
          {
            swift_bridgeObjectRelease(v54);
          }
          else
          {
            v187 = _stringCompareWithSmolCheck(_:_:expecting:)(v174, v175, v51, v54, 0);
            swift_bridgeObjectRelease(v176);
            if ((v187 & 1) == 0)
              goto LABEL_344;
          }
          if (!v245 && v247 == 0xE000000000000000)
          {
            swift_bridgeObjectRelease(v252);
            v188 = 0xE000000000000000;
LABEL_342:
            swift_bridgeObjectRelease(v188);
            v7 = (uint64_t)v4;
            v4 = v244;
            goto LABEL_343;
          }
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v247, 0) & 1) != 0)
          {
            swift_bridgeObjectRelease(v252);
            v188 = v247;
            goto LABEL_342;
          }
LABEL_344:
          if (v251)
          {
            swift_bridgeObjectRelease(v247);
            swift_bridgeObjectRelease(0xE000000000000000);
          }
          else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v51, v54, 0) & 1) != 0)
          {
            swift_bridgeObjectRelease(v247);
            swift_bridgeObjectRelease(v54);
          }
          else
          {
            v201 = sub_10049AAF0(v263);
            v203 = v202;
            if (v201 == v51 && v202 == v54)
            {
              swift_bridgeObjectRelease(v252);
              swift_bridgeObjectRelease(v247);
              swift_bridgeObjectRelease(v54);
              v252 = v54;
              swift_bridgeObjectRelease(v54);
LABEL_355:
              swift_bridgeObjectRelease(v249);
              v273 = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
              v284 = v205;
              v206._countAndFlagsBits = 2108704;
              v206._object = (void *)0xE300000000000000;
              String.append(_:)(v206);
              v207._countAndFlagsBits = sub_1004AFF58(v3, v262);
              v208 = v207._object;
              String.append(_:)(v207);
              swift_bridgeObjectRelease(v208);
              v209._countAndFlagsBits = 2108704;
              v209._object = (void *)0xE300000000000000;
              String.append(_:)(v209);
              v7 = (uint64_t)v4;
              v210 = (uint64_t)v4;
              v211 = v262;
              goto LABEL_356;
            }
            v204 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v202, v51, v54, 0);
            swift_bridgeObjectRelease(v54);
            swift_bridgeObjectRelease(v203);
            if ((v204 & 1) == 0)
            {
              if (v259)
                v214 = 0;
              else
                v214 = v249 == 0xE000000000000000;
              v215 = v214;
              if (!v214
                && (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v259, v249, 0) & 1) == 0)
              {
                goto LABEL_374;
              }
              if ((!v253 && v252 == 0xE000000000000000
                 || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v253, v252, 0) & 1) != 0)
                && (!v245 && v247 == 0xE000000000000000
                 || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v245, v247, 0) & 1) != 0))
              {
                swift_bridgeObjectRelease(v252);
                swift_bridgeObjectRelease(v249);
                swift_bridgeObjectRelease(v247);
                v17 = sub_10049AA60(v256, v262, sub_10006E8BC);
                v16 = v216;
                goto LABEL_404;
              }
              if (v215)
              {
                swift_bridgeObjectRelease(0xE000000000000000);
              }
              else
              {
LABEL_374:
                v217 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v259, v249, 0);
                swift_bridgeObjectRelease(v249);
                if ((v217 & 1) == 0)
                  goto LABEL_383;
              }
              if (!v253 && v252 == 0xE000000000000000)
              {
                v218 = 0xE000000000000000;
                goto LABEL_382;
              }
              goto LABEL_380;
            }
            swift_bridgeObjectRelease(v252);
            v252 = v247;
          }
          swift_bridgeObjectRelease(v252);
          goto LABEL_355;
        }
      }
      if (!v259 && v110 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease(v247);
        v116 = 0xE000000000000000;
LABEL_173:
        swift_bridgeObjectRelease(v116);
        v2 = v256;
        goto LABEL_174;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v259, v110, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(v247);
        v116 = v110;
        goto LABEL_173;
      }
      goto LABEL_176;
    }
    v255 = v2;
    v65 = sub_10049AA60(v7, v0, (uint64_t (*)(void))sub_100076C48);
    v67 = v66;
    v68 = sub_1004AFEC4(v1, v0, (uint64_t (*)(void))sub_100076A5C);
    v70 = v69;
    v260 = sub_1004AFF58(v3, v0);
    v72 = v71;
    if (v65)
      v73 = 0;
    else
      v73 = v67 == 0xE000000000000000;
    v74 = v73;
    LODWORD(v253) = v74;
    if (v73 || (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v65, v67, 0) & 1) != 0)
    {
      if (!v68 && v70 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease(v72);
        swift_bridgeObjectRelease(v67);
        v75 = 0xE000000000000000;
LABEL_73:
        swift_bridgeObjectRelease(v75);
        v17 = sub_1004AFF58(v3, v262);
        v16 = v81;
        v2 = v255;
        goto LABEL_128;
      }
      v80 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v68, v70, 0);
      swift_bridgeObjectRelease(v70);
      if ((v80 & 1) != 0)
      {
        swift_bridgeObjectRelease(v72);
        v75 = v67;
        goto LABEL_73;
      }
      if ((v253 & 1) != 0)
        goto LABEL_116;
    }
    else
    {
      swift_bridgeObjectRelease(v70);
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v65, v67, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(v72);
      v2 = v255;
      v0 = v262;
LABEL_120:
      v96 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v65, v67, 0);
      swift_bridgeObjectRelease(v67);
      if ((v96 & 1) != 0)
      {
LABEL_169:
        v266 = sub_1004AFEC4(v1, v0, (uint64_t (*)(void))sub_100076A5C);
        v277 = v117;
        v118 = v0;
LABEL_170:
        v119._countAndFlagsBits = 2108704;
        v119._object = (void *)0xE300000000000000;
        String.append(_:)(v119);
        v120 = sub_1004AFF58(v3, v118);
LABEL_175:
        v124 = v121;
        String.append(_:)(*(Swift::String *)&v120);
        swift_bridgeObjectRelease(v124);
        v17 = v266;
        v16 = v277;
        goto LABEL_128;
      }
      goto LABEL_121;
    }
LABEL_116:
    v2 = v255;
    if (!v260 && v72 == 0xE000000000000000)
    {
      swift_bridgeObjectRelease(v67);
      v95 = 0xE000000000000000;
LABEL_150:
      swift_bridgeObjectRelease(v95);
      v49 = sub_1004AFEC4(v1, v262, (uint64_t (*)(void))sub_100076A5C);
      goto LABEL_127;
    }
    v106 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, v260, v72, 0);
    swift_bridgeObjectRelease(v72);
    if ((v106 & 1) != 0)
    {
      v95 = v67;
      goto LABEL_150;
    }
    v0 = v262;
    if ((_DWORD)v253)
    {
      swift_bridgeObjectRelease(0xE000000000000000);
      goto LABEL_169;
    }
    goto LABEL_120;
  }
  return *v4;
}

uint64_t sub_100075BFC(unint64_t a1)
{
  return (a1 >> 2) & 1;
}

_QWORD *sub_100075C04(char a1, char a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  BOOL v9;
  void *v10;
  _QWORD *v12;

  v4 = sub_10006922C((uint64_t *)&unk_100644A00);
  v5 = (_QWORD *)swift_allocObject(v4, 33, 7);
  *((_OWORD *)v5 + 1) = xmmword_1004D9670;
  *((_BYTE *)v5 + 32) = 0;
  v6 = off_100645FC8;
  if ((a2 & 2) != 0)
  {
    if ((a2 & 1) != 0)
    {
      swift_bridgeObjectRetain(off_100645FC8);
      v7 = sub_10015331C((_QWORD *)1, 2, 1, v5);
      v7[2] = 2;
      *((_BYTE *)v7 + 33) = 2;
      v12 = v7;
      if (a1 != 6)
        __asm { BR              X10 }
      sub_10012FB1C((uint64_t)&off_1005BEF40);
      v5 = v12;
      if (v6 && v12[2] == v6[2])
      {
        if (a1 != 6)
          __asm { BR              X10 }
        goto LABEL_29;
      }
    }
    else
    {
      if (a1 != 6)
        __asm { BR              X10 }
      swift_bridgeObjectRetain(off_100645FC8);
      v5 = sub_10015331C((_QWORD *)1, 2, 1, v5);
      v5[2] = 2;
      *((_BYTE *)v5 + 33) = 2;
      if (v6 && v6[2] == 2)
      {
        if (a1 != 6)
          __asm { BR              X10 }
        goto LABEL_29;
      }
    }
  }
  else
  {
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain(off_100645FC8);
      goto LABEL_23;
    }
    if (a1 != 6)
      __asm { BR              X10 }
    swift_bridgeObjectRetain(off_100645FC8);
    v5 = sub_10015331C((_QWORD *)1, 2, 1, v5);
    v5[2] = 2;
    *((_BYTE *)v5 + 33) = 1;
    if (v6 && v6[2] == 2)
    {
      if (a1 != 6)
        __asm { BR              X10 }
LABEL_29:
      swift_bridgeObjectRelease(v5);
      return v6;
    }
  }
LABEL_23:
  if (v5[2] == 1)
  {
    swift_bridgeObjectRelease(v6);
    v8 = off_100645FC8;
    off_100645FC8 = 0;
LABEL_28:
    swift_bridgeObjectRelease(v8);
    return v5;
  }
  if (!v6 || (v9 = sub_10023D710((uint64_t)v5, (uint64_t)v6), swift_bridgeObjectRelease(v6), !v9))
  {
    v10 = off_100645FC8;
    off_100645FC8 = v5;
    swift_bridgeObjectRetain(v5);
    v8 = v10;
    goto LABEL_28;
  }
  return v5;
}

void sub_100076358()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(v0);
  swift_bridgeObjectRelease(v1);
  JUMPOUT(0x100076310);
}

void sub_100076370()
{
  uint64_t v0;

  _stringCompareWithSmolCheck(_:_:expecting:)(1936154996, v0, 1702125924, 0xE400000000000000, 0);
  JUMPOUT(0x100076138);
}

BOOL sub_1000763D0(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_100076434(uint64_t a1)
{
  return sub_100079A00(a1, &qword_100653140, &qword_100653148, sub_100079D38);
}

void sub_100076450()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  double v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8))
  {
    v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    *(_QWORD *)&v3 = swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v14, 0, 0).n128_u64[0];
    v4 = *v2;
    if (v4)
    {
      v5 = (void *)swift_unknownObjectRetain(v4);
      v6 = sub_100076538(v5);
      v7 = v1[1];
      *v1 = (uint64_t)v6;
      v1[1] = v8;
      swift_unknownObjectRelease(v4);
    }
    else
    {
      v9 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
      if (!v9)
        goto LABEL_9;
      v10 = objc_msgSend(v9, "collectionCreateButtonTitle", v3);
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      v7 = v1[1];
      *v1 = v11;
      v1[1] = v13;
    }
    swift_bridgeObjectRelease(v7);
    if (v1[1])
      return;
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

id sub_100076538(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;

  sub_100076688();
  v5 = v4;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8);
  if (!v6)
  {
    swift_getObjectType(a1, v3);
    return (id)DOCNode.displayName(withHiddenPathExtension:)((v5 & 1) == 0)._countAndFlagsBits;
  }
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8));
  result = objc_msgSend(a1, "filename");
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend(result, "pathExtension");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    if ((v5 & 1) != 0)
    {
      v14._countAndFlagsBits = v11;
      v14._object = v13;
      String.append(_:)(v14);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRetain(v6);
      v15._countAndFlagsBits = 46;
      v15._object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      swift_bridgeObjectRelease(0xE100000000000000);
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      swift_bridgeObjectRelease(v13);
    }

    return (id)v7;
  }
  __break(1u);
  return result;
}

void sub_100076688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void **v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  _BYTE v19[24];

  v1 = type metadata accessor for UTType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v19, 0, 0);
  v6 = *v5;
  if (!v6)
    return;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8))
  {
    v7 = objc_msgSend((id)swift_unknownObjectRetain(v6), "filename");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "pathExtension");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v13 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
      if (v13)
      {
        if ((objc_msgSend(v13, "shouldShowFileExtensions") & 1) != 0)
          goto LABEL_9;
        if (qword_1006410A8 != -1)
          swift_once(&qword_1006410A8, sub_1000AA544);
        v14 = objc_msgSend(v6, "contentType");
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v14);

        v15 = sub_10007693C((uint64_t)v4);
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        if ((v15 & 1) != 0)
        {
LABEL_9:
          String.count.getter(v10, v12);
          swift_unknownObjectRelease(v6);
          swift_bridgeObjectRelease(v12);

        }
        else
        {
          swift_unknownObjectRelease(v6);
          swift_bridgeObjectRelease(v12);

        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  v16 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  if (!v16)
    goto LABEL_20;
  swift_unknownObjectRetain(v6);
  if (objc_msgSend(v16, "shouldShowFileExtensions"))
  {
    swift_unknownObjectRelease(v6);
  }
  else
  {
    if (qword_1006410A8 != -1)
      swift_once(&qword_1006410A8, sub_1000AA544);
    v17 = objc_msgSend(v6, "contentType");
    static UTType._unconditionallyBridgeFromObjectiveC(_:)(v17);

    sub_10007693C((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_unknownObjectRelease(v6);
  }
}

uint64_t sub_10007693C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *(*v7)(id *__return_ptr, unint64_t (*)@<X0>(unint64_t@<X0>, _QWORD *@<X8>), uint64_t *, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  id v16;

  v2 = v1;
  v4 = objc_msgSend(*(id *)(v1 + 40), "forceDisplayFilenameExtensions");
  if ((v4 & 1) != 0)
    return 1;
  v6 = *(_QWORD *)(v1 + 32);
  __chkstk_darwin(v4);
  v13 = a1;
  v7 = *(_QWORD *(**)(id *__return_ptr, unint64_t (*)@<X0>(unint64_t@<X0>, _QWORD *@<X8>), uint64_t *, uint64_t))(*(_QWORD *)v6 + 160);
  v8 = sub_10006922C(&qword_100651048);
  v9 = v7(&v16, sub_10007D798, &v12, v8);
  v10 = v16;
  if (v16)
  {
    v5 = objc_msgSend(v16, "BOOLValue");

  }
  else
  {
    __chkstk_darwin(v9);
    v13 = a1;
    v14 = v2;
    (*(void (**)(unsigned __int8 *__return_ptr, uint64_t (*)@<X0>(uint64_t *@<X0>, char *@<X8>)))(*(_QWORD *)v6 + 168))(&v15, sub_1000AA910);
    return v15;
  }
  return (uint64_t)v5;
}

void sub_100076A5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[24];
  _BYTE v16[88];
  _QWORD v17[17];
  _OWORD v18[2];
  _BYTE v19[16];
  char v20[8];
  uint64_t v21;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString + 8))
  {
    v2 = v0;
    v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v15, 0, 0);
    v5 = *v3;
    if (!*v3)
      goto LABEL_14;
    ObjectType = swift_getObjectType(*v3, v4);
    swift_unknownObjectRetain(v5);
    sub_10006FA3C(ObjectType, (uint64_t)v16);
    swift_unknownObjectRelease(v5);
    sub_100070EDC((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_10064A070);
    if (v17[0] != 1)
    {
      *(_OWORD *)&v17[15] = *(_OWORD *)&v17[4];
      v18[0] = *(_OWORD *)&v17[6];
      v18[1] = *(_OWORD *)&v17[8];
      *(_OWORD *)&v17[11] = *(_OWORD *)v17;
      *(_OWORD *)&v17[13] = *(_OWORD *)&v17[2];
      sub_100070EDC((uint64_t)v18, (uint64_t)v19, &qword_100648C80);
      sub_1001D0760((uint64_t)v19);
      sub_1002617E4((uint64_t)v16);
      sub_100070EDC((uint64_t)v19, (uint64_t)v20, &qword_100648C80);
      if (v21)
      {
        v7 = v1[1];
        sub_100070EDC((uint64_t)v19, (uint64_t)v1, &qword_100648C80);
        goto LABEL_15;
      }
    }
    v8 = *v3;
    if (!*v3)
      goto LABEL_14;
    v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
    if (v9)
    {
      swift_unknownObjectRetain(*v3);
      v9 = objc_msgSend(v9, "horizontalSizeClass") == (id)1
         ? *(void **)FPItem.SharingStatusOptions.compact.unsafeMutableAddressor()
         : 0;
    }
    else
    {
      swift_unknownObjectRetain(*v3);
    }
    v11 = swift_getObjectType(v8, v10);
    v12 = DOCNode.localizedSharingStatusDescription(type:options:)(0, v9, v11);
    v14 = v13;
    swift_unknownObjectRelease(v8);
    if (v14)
    {
      v7 = v1[1];
      *v1 = v12;
      v1[1] = v14;
    }
    else
    {
LABEL_14:
      v7 = v1[1];
      *(_OWORD *)v1 = xmmword_1004EA390;
    }
LABEL_15:
    swift_bridgeObjectRelease(v7);
    if (!v1[1])
      __break(1u);
  }
}

objc_class *sub_100076C48()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  id v4;
  id v5;
  objc_class *result;
  objc_class *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t countAndFlagsBits;
  unint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  NSBundle v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  id v38;
  void *v39;
  unsigned int v40;
  id v41;
  objc_class *v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  id v46;
  void *v47;
  unsigned int v48;
  id v49;
  objc_class *v50;
  Swift::String v51;
  Swift::String_optional v52;
  Swift::String v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  Swift::Double v63;
  NSNumber v64;
  objc_class *v65;
  objc_class *v66;
  uint64_t v67;
  void *object;
  Swift::String v69;
  Swift::String_optional v70;
  Swift::String v71;
  Swift::String v72;
  uint64_t v73;
  void *v74;
  id v75;
  objc_class *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  Swift::String_optional v80;
  Swift::String v81;
  Swift::String v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  objc_class *v93;
  Swift::String v94;
  Swift::String_optional v95;
  Swift::String v96;
  Swift::String v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  double v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  objc_class *v108;
  Swift::String v109;
  Swift::String_optional v110;
  Swift::String v111;
  Swift::String v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char v117[24];
  Swift::String v118;
  Swift::String v119;
  Swift::String v120;
  Swift::String v121;
  Swift::String v122;

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v117, 0, 0);
  v3 = *v2;
  if (!v3)
    return 0;
  if (objc_msgSend((id)swift_unknownObjectRetain(v3), "isExcludedFromSync")
    && !objc_msgSend(v3, "isExternalDownloadPlaceholder"))
  {
    goto LABEL_72;
  }
  v4 = objc_msgSend(v3, "downloadingError");
  if (v4)
  {

    v5 = *(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
    if (v5)
    {
      v5 = objc_msgSend(v5, "horizontalSizeClass");
      if (v5 == (id)1)
      {
        result = (objc_class *)(id)_DocumentManagerBundle(1);
        if (result)
        {
          v7 = result;
          v8 = 0x6F727245209386E2;
          v9 = 0xD00000000000003ALL;
          v115 = 0x800000010053B760;
LABEL_17:
          v11 = 0xA900000000000072;
          goto LABEL_20;
        }
        goto LABEL_108;
      }
    }
    result = (objc_class *)(id)_DocumentManagerBundle(v5);
    if (result)
    {
      v7 = result;
      v9 = 0xD000000000000030;
      v115 = 0x800000010053B720;
      v8 = 0x64616F6C6E776F44;
      v11 = 0xEE00726F72724520;
LABEL_20:
      v14 = 0x617A696C61636F4CLL;
      v15 = 0xEB00000000656C62;
      v16.super.isa = v7;
      v17 = 0;
      v18 = 0xE000000000000000;
LABEL_21:
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, *(Swift::String_optional *)&v14, v16, *(Swift::String *)&v17, *(Swift::String *)&v9)._countAndFlagsBits;

LABEL_22:
      v19 = objc_msgSend(v3, "isDownloading");
      goto LABEL_23;
    }
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  v12 = objc_msgSend(v3, "uploadingError");
  if (v12)
  {

    v13 = *(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
    if (v13)
    {
      v13 = objc_msgSend(v13, "horizontalSizeClass");
      if (v13 == (id)1)
      {
        result = (objc_class *)(id)_DocumentManagerBundle(1);
        if (result)
        {
          v7 = result;
          v9 = 0xD000000000000038;
          v115 = 0x800000010053B6E0;
          v8 = 0x6F727245209186E2;
          goto LABEL_17;
        }
        goto LABEL_110;
      }
    }
    result = (objc_class *)(id)_DocumentManagerBundle(v13);
    if (result)
    {
      v7 = result;
      v9 = 0xD00000000000002ELL;
      v115 = 0x800000010053B6B0;
      v8 = 0x452064616F6C7055;
      v11 = 0xEC000000726F7272;
      goto LABEL_20;
    }
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  if ((objc_msgSend(v3, "isUploaded") & 1) == 0
    && (objc_msgSend(v3, "isActionable") & 1) == 0
    && (objc_msgSend(v3, "isExternalDownloadPlaceholder") & 1) == 0)
  {
    v21 = objc_msgSend(v3, "providerID");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocal);
    v27 = v25;
    if (v22 == v26 && v24 == v25)
    {
      v28 = 1;
      v27 = v24;
    }
    else
    {
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
    }
    swift_bridgeObjectRelease(v27);
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierExternalDeviceFileProvider);
    v31 = v29;
    if (v22 == v30 && v24 == v29)
    {
      v32 = 1;
      v31 = v24;
    }
    else
    {
      v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v30, v29, 0);
    }
    swift_bridgeObjectRelease(v31);
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSMBFileProvider);
    v35 = v33;
    if (v22 == v34 && v24 == v33)
    {
      swift_bridgeObjectRelease_n(v24, 2);
    }
    else
    {
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v34, v33, 0);
      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v24);
      if (((v28 | v32) & 1) == 0 && (v36 & 1) == 0)
      {
        result = (objc_class *)(id)_DocumentManagerBundle(v37);
        if (result)
        {
          v7 = result;
          v115 = 0x800000010053B4B0;
          v8 = 0x6F6C705520746F4ELL;
          v11 = 0xEC00000064656461;
          v14 = 0x617A696C61636F4CLL;
          v15 = 0xEB00000000656C62;
          v16.super.isa = v7;
          v17 = 0;
          v18 = 0xE000000000000000;
          v9 = 0xD000000000000029;
          goto LABEL_21;
        }
        goto LABEL_114;
      }
    }
  }
  v38 = objc_msgSend(v3, "downloadingProgress");
  if (v38)
  {
    v39 = v38;
    v40 = objc_msgSend(v38, "doc_isPending");

    v41 = objc_msgSend(v3, "isDownloading");
    if ((_DWORD)v41 && v40)
    {
      result = (objc_class *)(id)_DocumentManagerBundle(v41);
      if (!result)
      {
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      v42 = result;
      v118._countAndFlagsBits = 0x1000000000000046;
      v43._countAndFlagsBits = 0x74696157209386E2;
      v118._object = (void *)0x800000010053B660;
      v43._object = (void *)0xAE00A680E2676E69;
      v44.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v44.value._object = (void *)0xEB00000000656C62;
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v118)._countAndFlagsBits;

      v19 = objc_msgSend(v3, "isDownloading");
LABEL_23:
      if ((v19 & 1) != 0)
        goto LABEL_73;
      goto LABEL_24;
    }
  }
  else
  {
    objc_msgSend(v3, "isDownloading");
  }
  v46 = objc_msgSend(v3, "uploadingProgress");
  if (v46)
  {
    v47 = v46;
    v48 = objc_msgSend(v46, "doc_isPending");

    v49 = objc_msgSend(v3, "isUploading");
    if ((_DWORD)v49 && v48)
    {
      result = (objc_class *)(id)_DocumentManagerBundle(v49);
      if (!result)
      {
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      v50 = result;
      v119._countAndFlagsBits = 0x1000000000000044;
      v119._object = (void *)0x800000010053B610;
      v51._countAndFlagsBits = 0x74696157209186E2;
      v51._object = (void *)0xAE00A680E2676E69;
      v52.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v52.value._object = (void *)0xEB00000000656C62;
      v53._countAndFlagsBits = 0;
      v53._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v50, v53, v119)._countAndFlagsBits;

      if ((objc_msgSend(v3, "isDownloading") & 1) != 0)
        goto LABEL_73;
LABEL_24:
      if ((objc_msgSend(v3, "isUploading") & 1) == 0)
      {
LABEL_25:
        v20 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress;
        *(_QWORD *)v20 = 0;
        *(_BYTE *)(v20 + 8) = 1;
      }
LABEL_73:
      swift_unknownObjectRelease(v3);
      return (objc_class *)countAndFlagsBits;
    }
  }
  else
  {
    objc_msgSend(v3, "isUploading");
  }
  if (objc_msgSend(v3, "isExternalDownloadPlaceholder"))
  {
    v54 = objc_msgSend(v3, "downloadingProgress");
    if (v54)
    {
      v55 = v54;
      if ((objc_msgSend(v54, "isFinished") & 1) == 0)
      {
        sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
        objc_msgSend(v55, "fractionCompleted");
        v64.super.super.isa = NSNumber.init(floatLiteral:)(v63).super.super.isa;
        if (qword_100641220 != -1)
          swift_once(&qword_100641220, sub_1004ADEA0);
        v65 = (objc_class *)objc_msgSend((id)qword_100672F10, "stringFromNumber:", v64.super.super.isa);
        if (v65)
        {
          v66 = v65;
          v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
        }
        else
        {
          result = (objc_class *)(id)_DocumentManagerBundle(0);
          if (!result)
          {
LABEL_115:
            __break(1u);
            goto LABEL_116;
          }
          v66 = result;
          v120._countAndFlagsBits = 0x100000000000003ALL;
          v120._object = (void *)0x800000010053B540;
          v69._countAndFlagsBits = 4271950;
          v69._object = (void *)0xE300000000000000;
          v70.value._countAndFlagsBits = 0x617A696C61636F4CLL;
          v70.value._object = (void *)0xEB00000000656C62;
          v71._countAndFlagsBits = 0;
          v71._object = (void *)0xE000000000000000;
          v72 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, v70, (NSBundle)v66, v71, v120);
          object = v72._object;
          v67 = v72._countAndFlagsBits;
        }
        v73 = v67;
        v74 = object;

        v75 = *(id *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
        if (v75 && (v75 = objc_msgSend(v75, "horizontalSizeClass"), v75 == (id)1))
        {
          result = (objc_class *)(id)_DocumentManagerBundle(1);
          if (!result)
          {
LABEL_116:
            __break(1u);
            goto LABEL_117;
          }
          v76 = result;
          v77 = 0x100000000000002ELL;
          v116 = 0x800000010053B5E0;
          v78 = 0x4025209386E2;
          v79 = 0xA600000000000000;
        }
        else
        {
          result = (objc_class *)(id)_DocumentManagerBundle(v75);
          if (!result)
          {
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
            goto LABEL_115;
          }
          v76 = result;
          v77 = 0x1000000000000038;
          v116 = 0x800000010053B5A0;
          v79 = 0x800000010053B580;
          v78 = 0x1000000000000011;
        }
        v80.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v80.value._object = (void *)0xEB00000000656C62;
        v81._countAndFlagsBits = 0;
        v81._object = (void *)0xE000000000000000;
        v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v78, v80, (NSBundle)v76, v81, *(Swift::String *)&v77);

        v83 = sub_10006922C((uint64_t *)&unk_100644560);
        v84 = swift_allocObject(v83, 72, 7);
        *(_OWORD *)(v84 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v84 + 56) = &type metadata for String;
        *(_QWORD *)(v84 + 64) = sub_10006A638();
        *(_QWORD *)(v84 + 32) = v73;
        *(_QWORD *)(v84 + 40) = v74;
        countAndFlagsBits = String.init(format:_:)(v82._countAndFlagsBits, v82._object, v84);

        swift_bridgeObjectRelease(v82._object);
        goto LABEL_22;
      }

    }
  }
  v56 = objc_msgSend(v3, "fileSize");
  if (!v56 || (v57 = v56, v58 = (uint64_t)objc_msgSend(v56, "longLongValue"), v57, v58 < 1))
  {
LABEL_71:
    if ((objc_msgSend(v3, "isDownloading") & 1) == 0)
    {
      countAndFlagsBits = 0;
      if ((objc_msgSend(v3, "isUploading") & 1) != 0)
        goto LABEL_73;
      goto LABEL_25;
    }
LABEL_72:
    countAndFlagsBits = 0;
    goto LABEL_73;
  }
  if (objc_msgSend(v3, "isDownloading"))
  {
    v59 = objc_msgSend(v3, "downloadingProgress");
    if (v59)
    {
      v60 = v59;
      if ((objc_msgSend(v59, "isFinished") & 1) != 0)
      {

        goto LABEL_67;
      }
      result = (objc_class *)objc_msgSend(v60, "fractionCompleted");
      v86 = (1.0 - v85) * (double)v58;
      if ((~*(_QWORD *)&v86 & 0x7FF0000000000000) != 0)
      {
        if (v86 > -9.22337204e18)
        {
          if (v86 < 9.22337204e18)
          {
            v87 = sub_1004AF92C((uint64_t)v86, v58);
            v88 = objc_msgSend((id)objc_opt_self(NSByteCountFormatter), "stringFromByteCount:countStyle:", v87, 0);
            v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
            v91 = v90;

            result = (objc_class *)(id)_DocumentManagerBundle(v92);
            if (!result)
            {
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
            v93 = result;
            v121._countAndFlagsBits = 0x100000000000002DLL;
            v121._object = (void *)0x800000010053B510;
            v94._countAndFlagsBits = 0x4025209386E2;
            v94._object = (void *)0xA600000000000000;
            v95.value._countAndFlagsBits = 0x617A696C61636F4CLL;
            v95.value._object = (void *)0xEB00000000656C62;
            v96._countAndFlagsBits = 0;
            v96._object = (void *)0xE000000000000000;
            v97 = NSLocalizedString(_:tableName:bundle:value:comment:)(v94, v95, (NSBundle)v93, v96, v121);

            v98 = sub_10006922C((uint64_t *)&unk_100644560);
            v99 = swift_allocObject(v98, 72, 7);
            *(_OWORD *)(v99 + 16) = xmmword_1004D9670;
            *(_QWORD *)(v99 + 56) = &type metadata for String;
            *(_QWORD *)(v99 + 64) = sub_10006A638();
            *(_QWORD *)(v99 + 32) = v89;
            *(_QWORD *)(v99 + 40) = v91;
            countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v97._countAndFlagsBits, v97._object, v99);

            swift_bridgeObjectRelease(v97._object);
            swift_bridgeObjectRelease(v99);
            v19 = objc_msgSend(v3, "isDownloading");
            goto LABEL_23;
          }
          goto LABEL_103;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
  }
LABEL_67:
  if (!objc_msgSend(v3, "isUploading"))
    goto LABEL_71;
  v61 = objc_msgSend(v3, "uploadingProgress");
  if (!v61)
    goto LABEL_71;
  v62 = v61;
  if ((objc_msgSend(v61, "isFinished") & 1) != 0)
  {

    goto LABEL_71;
  }
  result = (objc_class *)objc_msgSend(v62, "fractionCompleted");
  v101 = (1.0 - v100) * (double)v58;
  if ((~*(_QWORD *)&v101 & 0x7FF0000000000000) == 0)
    goto LABEL_104;
  if (v101 <= -9.22337204e18)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  if (v101 >= 9.22337204e18)
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  v102 = sub_1004AF92C((uint64_t)v101, v58);
  v103 = objc_msgSend((id)objc_opt_self(NSByteCountFormatter), "stringFromByteCount:countStyle:", v102, 0);
  v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
  v106 = v105;

  result = (objc_class *)(id)_DocumentManagerBundle(v107);
  if (result)
  {
    v108 = result;
    v109._countAndFlagsBits = 0x4025209186E2;
    v122._countAndFlagsBits = 0x100000000000002BLL;
    v122._object = (void *)0x800000010053B4E0;
    v109._object = (void *)0xA600000000000000;
    v110.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v110.value._object = (void *)0xEB00000000656C62;
    v111._countAndFlagsBits = 0;
    v111._object = (void *)0xE000000000000000;
    v112 = NSLocalizedString(_:tableName:bundle:value:comment:)(v109, v110, (NSBundle)v108, v111, v122);

    v113 = sub_10006922C((uint64_t *)&unk_100644560);
    v114 = swift_allocObject(v113, 72, 7);
    *(_OWORD *)(v114 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v114 + 56) = &type metadata for String;
    *(_QWORD *)(v114 + 64) = sub_10006A638();
    *(_QWORD *)(v114 + 32) = v104;
    *(_QWORD *)(v114 + 40) = v106;
    countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v112._countAndFlagsBits, v112._object, v114);

    swift_bridgeObjectRelease(v112._object);
    if ((objc_msgSend(v3, "isDownloading", swift_bridgeObjectRelease(v114).n128_f64[0]) & 1) != 0)
      goto LABEL_73;
    goto LABEL_24;
  }
LABEL_118:
  __break(1u);
  return result;
}

void sub_100077A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void **v5;
  uint64_t v6;
  void *v7;
  void *v8;
  float64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  char *v18;
  float64x2_t v19;
  float64x2_t *v20;
  _BYTE v22[128];
  uint64_t v23[5];
  float64x2_t v24;
  float64x2_t v25;
  char v26[24];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded) != 1)
    return;
  v5 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v26, 0, 0);
  v7 = *v5;
  if (v7)
  {
    v8 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX);
    if (v8)
    {
      sub_100070EDC((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v22, &qword_100658670);
      sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_100658670);
      if (sub_1000A849C(v23) == 1)
        goto LABEL_20;
      v9 = -v25.f64[0];
      v10 = v7;
      objc_msgSend(v8, "setConstant:", v9);
    }
    else
    {
      v16 = v7;
    }
    v17 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY);
    if (v17)
    {
      sub_100070EDC((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v22, &qword_100658670);
      sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_100658670);
      if (sub_1000A849C(v23) == 1)
      {
LABEL_21:
        __break(1u);
        return;
      }
      objc_msgSend(v17, "setConstant:", v25.f64[1]);
    }
    v18 = (char *)sub_10026F0F8();
    sub_100070EDC((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v22, &qword_100658670);
    sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_100658670);
    if (sub_1000A849C(v23) != 1)
    {
      v19 = v25;
      v20 = (float64x2_t *)&v18[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits];
      if ((v18[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits + 32] & 1) != 0
        || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v20, v24), (int32x4_t)vceqq_f64(v20[1], v25))), 0xFuLL))) & 1) == 0)
      {
        *v20 = v24;
        v20[1] = v19;
        LOBYTE(v20[2].f64[0]) = 0;
        objc_msgSend(v18, "invalidateIntrinsicContentSize");
      }

      return;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v11 = Logger.UI.unsafeMutableAddressor(v6);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v4, v11, v1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v14, "Cannot update constraints in updateItemAccessStatusConstraints because cellContent is nil", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_100077D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void **v5;
  uint64_t v6;
  void *v7;
  void *v8;
  double v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  char *v18;
  float64x2_t v19;
  float64x2_t *v20;
  _BYTE v22[128];
  uint64_t v23[5];
  float64x2_t v24;
  float64x2_t v25;
  char v26[24];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded) != 1)
    return;
  v5 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v26, 0, 0);
  v7 = *v5;
  if (v7)
  {
    v8 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX);
    if (v8)
    {
      sub_100070EDC((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v22, &qword_100658670);
      sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_100658670);
      if (sub_1000A849C(v23) == 1)
        goto LABEL_20;
      v9 = v25.f64[0];
      v10 = v7;
      objc_msgSend(v8, "setConstant:", v9);
    }
    else
    {
      v16 = v7;
    }
    v17 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY);
    if (v17)
    {
      sub_100070EDC((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v22, &qword_100658670);
      sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_100658670);
      if (sub_1000A849C(v23) == 1)
      {
LABEL_21:
        __break(1u);
        return;
      }
      objc_msgSend(v17, "setConstant:", v25.f64[1]);
    }
    v18 = (char *)sub_10026F0E4();
    sub_100070EDC((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v22, &qword_100658670);
    sub_100070EDC((uint64_t)v22, (uint64_t)v23, &qword_100658670);
    if (sub_1000A849C(v23) != 1)
    {
      v19 = v25;
      v20 = (float64x2_t *)&v18[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits];
      if ((v18[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits + 32] & 1) != 0
        || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v20, v24), (int32x4_t)vceqq_f64(v20[1], v25))), 0xFuLL))) & 1) == 0)
      {
        *v20 = v24;
        v20[1] = v19;
        LOBYTE(v20[2].f64[0]) = 0;
        objc_msgSend(v18, "invalidateIntrinsicContentSize");
      }

      return;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v11 = Logger.UI.unsafeMutableAddressor(v6);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v4, v11, v1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v14, "Cannot update constraints in updateItemStatusConstraints because cellContent is nil", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100078030()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x338))();
}

void sub_10007804C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t ObjectType;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  _BYTE v56[200];
  _QWORD v57[25];
  _BYTE v58[24];
  _BYTE v59[88];
  _QWORD v60[10];
  id v61;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v58, 0, 0);
  v3 = (void *)*v2;
  if (!*v2)
    return;
  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size + 8);
  *v4 = 0;
  v4[1] = 0;
  swift_unknownObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString + 8);
  *v6 = 0;
  v6[1] = 0;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags) = 0;
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 2;
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date + 8);
  *v9 = 0;
  v9[1] = 0;
  swift_bridgeObjectRelease(v10);
  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind + 8);
  *v11 = 0;
  v11[1] = 0;
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance) = 10;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
  v13 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
  sub_100078678(v13);
  swift_unknownObjectRelease(v13);
  v14 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8);
  *v14 = 0;
  v14[1] = 0;
  swift_bridgeObjectRelease(v15);
  sub_1000D07FC((uint64_t)v56);
  v16 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
  sub_100070EDC(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v57, (uint64_t *)&unk_100641310);
  sub_100070EDC((uint64_t)v56, v16, (uint64_t *)&unk_100641310);
  sub_10044930C(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000786EC);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

  v18 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

  v19 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8);
  *v19 = 0;
  v19[1] = 0;
  swift_bridgeObjectRelease(v20);
  v21 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle + 8);
  *v21 = 0;
  v21[1] = 0;
  swift_bridgeObjectRelease(v22);
  v23 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle + 8);
  *v23 = 0;
  v23[1] = 0;
  swift_bridgeObjectRelease(v24);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory) = 2;
  v26 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle + 8);
  if (v27)
  {
    v28 = *v26;
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle
                                       + 8));
    v29 = objc_msgSend(v3, "filename");
    if (!v29)
    {
      __break(1u);
      return;
    }
    v30 = v29;
    v31 = objc_msgSend(v29, "stringByDeletingPathExtension");

    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    if (v28 == v32 && v27 == v34)
    {
      swift_bridgeObjectRelease(v34);
      v35 = v27;
    }
    else
    {
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v27, v32, v34, 0);
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v27);
      if ((v36 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
      v38 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
      v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8);
      *v37 = 0;
      v37[1] = 0;
      sub_1004AE738(v38, v39);
      swift_bridgeObjectRelease(v39);
      v35 = v26[1];
      *v26 = 0;
      v26[1] = 0;
    }
    swift_bridgeObjectRelease(v35);
  }
LABEL_10:
  v40 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
  v41 = (void *)*v2;
  if (*v2)
  {
    ObjectType = swift_getObjectType(*v2, v25);
    v43 = v40;
    swift_unknownObjectRetain(v41);
    sub_10006FA3C(ObjectType, (uint64_t)v59);
    swift_unknownObjectRelease(v41);
    sub_100070EDC((uint64_t)v59, (uint64_t)v60, (uint64_t *)&unk_10064A070);
    if (v60[0] != 1)
    {
      v44 = v61;
      v45 = v61;
      sub_1002617E4((uint64_t)v59);
      if (v44)
      {

        v40 = v44;
        goto LABEL_34;
      }
    }
  }
  else
  {
    v46 = v40;
  }
  if (objc_msgSend(v3, "isExternalDownloadPlaceholder"))
  {
    v47 = objc_msgSend(v3, "downloadingProgress");
    if (v47)
      goto LABEL_27;
  }
  if (objc_msgSend(v3, "isCloudItem") && objc_msgSend(v3, "isDownloading"))
  {
    v48 = objc_msgSend(v3, "downloadingError");
    if (v48)
    {

    }
    else
    {
      v47 = objc_msgSend(v3, "downloadingProgress");
      if (v47)
        goto LABEL_27;
    }
  }
  if (objc_msgSend(v3, "isCloudItem") && objc_msgSend(v3, "isUploading"))
  {
    v49 = objc_msgSend(v3, "uploadingError");
    if (v49)
    {

      goto LABEL_25;
    }
    v47 = objc_msgSend(v3, "uploadingProgress");
    if (!v47)
      goto LABEL_25;
LABEL_27:
    v45 = v47;

    v40 = v45;
    goto LABEL_34;
  }
LABEL_25:
  if (objc_msgSend(v3, "isCopying"))
  {
    v47 = objc_msgSend(v3, "copyingProgress");
    if (v47)
      goto LABEL_27;
  }
  if ((objc_msgSend(v3, "isActionable") & 1) == 0)
  {
    v51 = objc_msgSend((id)objc_opt_self(NSProgress), "progressWithTotalUnitCount:", -1);

    v40 = v51;
    goto LABEL_32;
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress))
  {
LABEL_32:
    if (!v40)
    {
LABEL_35:
      v50 = 0;
      goto LABEL_37;
    }
    v45 = v40;
LABEL_34:
    if ((objc_msgSend(v45, "isFinished") & 1) == 0)
    {
      v52 = v40;
      v50 = (uint64_t)v40;
      goto LABEL_37;
    }
    goto LABEL_35;
  }

  v50 = 0;
  v40 = 0;
LABEL_37:
  sub_1000787B4(v50);
  v53 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  v54 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x3185;
  if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x3185) != 0)
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v54;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_10007BAFC())
  {
    *(_QWORD *)(v1 + v53) = 0;
    v55 = objc_autoreleasePoolPush();
    sub_10006D2D4(v54, v1);
    objc_autoreleasePoolPop(v55);
  }
  swift_unknownObjectRelease(v3);

}

id sub_100078678(id result)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
  v3 = *(id *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  if (!v3)
  {
    if (!result)
      return result;
    goto LABEL_7;
  }
  if (!result || v3 != result)
  {
    if (!result)
      return objc_msgSend(v3, "addListener:", v1);
LABEL_7:
    result = objc_msgSend(result, "removeListener:", v1);
    v3 = *(id *)(v1 + v2);
    if (!v3)
      return result;
    return objc_msgSend(v3, "addListener:", v1);
  }
  return result;
}

void *sub_1000786EC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (result)
  {

    swift_bridgeObjectRelease(a11);
    swift_bridgeObjectRelease(a12);
    sub_100059B10(a13, a14, a15, a16, a17, a18);
    return (void *)sub_100059B10(a19, a20, a21, a22, a23, a24);
  }
  return result;
}

void sub_1000787B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  NSString v12;
  NSString v13;

  v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
  if (v4 && *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) = 0;
    v5 = v4;
    v6 = *(void **)DOCLog.UI.unsafeMutableAddressor(v5);
    v7 = sub_10006922C((uint64_t *)&unk_100644560);
    v8 = swift_allocObject(v7, 72, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v8 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
    *(_QWORD *)(v8 + 64) = sub_1000E8324();
    *(_QWORD *)(v8 + 32) = v5;
    v9 = v5;
    v10 = v6;
    v11 = static os_log_type_t.default.getter(v10);
    os_log(_:dso:log:type:_:)("Progress: [CELL CONTENT] REMOVE fractionCompleted observer for: %{public}@", 74, 2, &_mh_execute_header, v10, v11, v8);

    swift_bridgeObjectRelease(v8);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "removeObserver:forKeyPath:context:", v1, v12, &unk_100658630);

    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "removeObserver:forKeyPath:context:", v1, v13, &unk_100658630);

    v4 = *(void **)(v1 + v3);
  }
  *(_QWORD *)(v1 + v3) = a1;

}

void sub_100078950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;

  v6 = v5;
  v12 = *v5;
  v14 = sub_100067654(a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1002E7B4C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 24 * v14;
      sub_1000628C0(*(void **)v21, *(_QWORD *)(v21 + 8), *(_QWORD *)(v21 + 16));
      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      *(_QWORD *)(v21 + 16) = a3;
      return;
    }
    goto LABEL_11;
  }
  sub_100009E20(v17, a5 & 1);
  v22 = sub_100067654(a4);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_16:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = (_QWORD *)*v6;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10006777C(a4, (uint64_t)v31);
  v20[(v14 >> 6) + 8] |= 1 << v14;
  v24 = v20[6] + 40 * v14;
  v25 = v32;
  v26 = v31[1];
  *(_OWORD *)v24 = v31[0];
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = v25;
  v27 = (_QWORD *)(v20[7] + 24 * v14);
  *v27 = a1;
  v27[1] = a2;
  v27[2] = a3;
  v28 = v20[2];
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (v29)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v20[2] = v30;
}

BOOL sub_100078AD8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[4];
  uint64_t v10;
  _OWORD v11[4];
  uint64_t v12;

  sub_10007C3E0();
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
    return 0;
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0)
    return 0;
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24)) & 1) == 0)
    return 0;
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
    return 0;
  if (*(double *)(a1 + 40) != *(double *)(a2 + 40))
    return 0;
  if (*(double *)(a1 + 48) != *(double *)(a2 + 48))
    return 0;
  if (*(double *)(a1 + 56) != *(double *)(a2 + 56))
    return 0;
  if (*(double *)(a1 + 64) != *(double *)(a2 + 64))
    return 0;
  if (((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0)
    return 0;
  if (((*(unsigned __int8 *)(a1 + 73) ^ *(unsigned __int8 *)(a2 + 73)) & 1) != 0)
    return 0;
  v4 = *(_OWORD *)(a1 + 128);
  v11[2] = *(_OWORD *)(a1 + 112);
  v11[3] = v4;
  v12 = *(_QWORD *)(a1 + 144);
  v5 = *(_OWORD *)(a1 + 96);
  v11[0] = *(_OWORD *)(a1 + 80);
  v11[1] = v5;
  v6 = *(_OWORD *)(a2 + 128);
  v9[2] = *(_OWORD *)(a2 + 112);
  v9[3] = v6;
  v10 = *(_QWORD *)(a2 + 144);
  v7 = *(_OWORD *)(a2 + 96);
  v9[0] = *(_OWORD *)(a2 + 80);
  v9[1] = v7;
  if (!sub_100078C50((uint64_t)v11, (uint64_t)v9))
    return 0;
  return *(double *)(a1 + 152) == *(double *)(a2 + 152)
      && *(double *)(a1 + 160) == *(double *)(a2 + 160)
      && *(double *)(a1 + 168) == *(double *)(a2 + 168)
      && *(double *)(a1 + 176) == *(double *)(a2 + 176);
}

BOOL sub_100078C50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v3;

  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16)
    && *(double *)(a1 + 24) == *(double *)(a2 + 24)
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && (*(double *)(a1 + 40) == *(double *)(a2 + 40) ? (v2 = *(double *)(a1 + 48) == *(double *)(a2 + 48)) : (v2 = 0),
        v2 ? (v3 = *(double *)(a1 + 56) == *(double *)(a2 + 56)) : (v3 = 0),
        v3))
  {
    return *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64);
  }
  else
  {
    return 0;
  }
}

id DOCItemCollectionCellContent.init()()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  _BYTE *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  objc_super v30;
  _BYTE v31[184];
  _OWORD v32[8];
  _BYTE v33[200];

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = 0;
  v1 = (uint64_t)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits];
  sub_1000D07C0((uint64_t)v31);
  sub_100070EDC((uint64_t)v31, v1, (uint64_t *)&unk_100641300);
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
  sub_1000D07E4(v32);
  sub_100070EDC((uint64_t)v32, v2, &qword_100658670);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumRowHeight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_useSystemHighlightStyle] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_roundedCorners] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node] = 0;
  v3 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0;
  *(_QWORD *)v3 = 0;
  v3[24] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isParentItemShared] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode] = 2;
  v4 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable] = 2;
  v5 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v5[40] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress] = 0;
  v6 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock];
  *v6 = 0;
  v6[1] = 0;
  v7 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock;
  v8 = objc_allocWithZone((Class)NSLock);
  v9 = v0;
  *(_QWORD *)&v0[v7] = objc_msgSend(v8, "init");
  v10 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleColor;
  v14 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v9[v13] = objc_msgSend(v14, "labelColor");
  v15 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor;
  *(_QWORD *)&v9[v15] = objc_msgSend(v14, "secondaryLabelColor");
  v16 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__suffixColor;
  *(_QWORD *)&v9[v16] = objc_msgSend(v14, "labelColor");
  v17 = (uint64_t)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
  sub_1000D07FC((uint64_t)v33);
  sub_100070EDC((uint64_t)v33, v17, (uint64_t *)&unk_100641310);
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;
  v18 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date];
  *v18 = 0;
  v18[1] = 0;
  v19 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sizeLock;
  *(_QWORD *)&v9[v19] = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v20 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size];
  *v20 = 0;
  v20[1] = 0;
  v21 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind];
  *v21 = 0;
  v21[1] = 0;
  v22 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumProgressFractionForStatusTextUpdate] = 0x3FA999999999999ALL;
  v23 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString];
  *v23 = 0;
  v23[1] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags] = 0;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder] = 2;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync] = 2;
  v24 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName];
  *v24 = 0;
  v24[1] = 0;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge] = 2;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge] = 2;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews] = 0;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView] = 2;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView] = 2;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim] = 2;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail] = 2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool] = 0;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance] = 10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;
  v25 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle];
  *v25 = 0;
  v25[1] = 0;
  v26 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle];
  *v26 = 0;
  v26[1] = 0;
  v27 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle];
  *v27 = 0;
  v27[1] = 0;
  v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory] = 2;
  v28 = &v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate];
  *((_QWORD *)v28 + 1) = 0;
  swift_unknownObjectWeakInit(v28);

  v30.receiver = v9;
  v30.super_class = (Class)type metadata accessor for DOCItemCollectionCellContent();
  return objc_msgSendSuper2(&v30, "init");
}

uint64_t type metadata accessor for DOCItemCollectionCellContent()
{
  return objc_opt_self(_TtC5Files28DOCItemCollectionCellContent);
}

unint64_t sub_1000791AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100641270;
  if (!qword_100641270)
  {
    v1 = sub_10007E830((uint64_t *)&unk_100647540);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100641270);
  }
  return result;
}

void sub_1000791F8()
{
  uint64_t v0;
  void **v1;
  char *v2;
  double *v3;
  double v4;
  void *v5;
  char *v6;
  char v7[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v7, 0, 0);
  v2 = (char *)*v1;
  if (*v1)
  {
    v3 = (double *)&v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics];
    if ((v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40] & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v4 = *v3;
      v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateConstraint);
      v6 = v2;
      objc_msgSend(v5, "setConstant:", v4);
      if (((_BYTE)v3[5] & 1) == 0)
      {
        objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeConstraint), "setConstant:", v3[1]);
        if (((_BYTE)v3[5] & 1) == 0)
        {
          objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindConstraint), "setConstant:", v3[2]);
          if (((_BYTE)v3[5] & 1) == 0)
          {
            objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView), "setTagDimension:", v3[3]);
            sub_10007B338();

            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_100079320()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id *v7;
  void *v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  void *v24;
  id v25;
  double v26;
  int v27;
  uint64_t v28;
  int v29;
  id v30;
  Class isa;
  id v32;
  _BYTE v33[24];

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend(v0, "traitCollection");
  if (!sub_10007B5C0(1))
  {
    v19 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "BOOLForKey:", v32);

    return;
  }

  v7 = (id *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v33, 0, 0);
  if (!*v7)
    return;
  v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel);
  v9 = (char *)*v7;
  v10 = objc_msgSend(v8, "text");
  if (!v10)
  {
    sub_10006E6E0();
    goto LABEL_13;
  }
  v11 = v10;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v14 = v13;

  sub_10006E6E0();
  if (!v14)
    goto LABEL_13;
  if (v12 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease(v14);
    goto LABEL_15;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
  swift_bridgeObjectRelease(v14);
  if ((v18 & 1) == 0)
  {
LABEL_13:
    sub_10006E6E0();
    v21 = v20;
    swift_bridgeObjectRetain(v20);
    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "setText:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  }
LABEL_15:
  sub_100072D74();
  v23 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView);
  v24 = *(void **)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
  if (!v24 || (v25 = objc_msgSend(v24, "horizontalSizeClass"), v26 = 1.5, v25 != (id)1))
    v26 = 2.0;
  objc_msgSend(v23, "setKnockOutBorderWidth:", v26);
  sub_10007B338();
  v27 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x520))() & 1;
  v28 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_previousStatusViewLocation;
  v29 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_previousStatusViewLocation);
  if (v29 == 2 || v27 != (v29 & 1))
  {
    sub_100059B20();
    *((_BYTE *)v1 + v28) = v27;
  }
  v30 = objc_msgSend(v1, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v30);

  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v1, "_bridgedUpdateConfigurationUsingState:", isa);

}

uint64_t sub_100079660()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x340))();
}

uint64_t sub_10007967C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x310))();
}

uint64_t sub_100079698()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x320))();
}

uint64_t sub_1000796B8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x300))();
}

void sub_1000796D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  double v9;
  unint64_t v10;
  unint64_t i;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  NSString v19;
  uint64_t v20;
  uint64_t inited;
  void *v22;
  NSString *v23;
  id v24;
  unint64_t v25;
  Class isa;
  double v27;
  double v28;
  _BYTE v29[72];
  uint64_t v30[2];
  _BYTE v31[24];
  void *v32;

  v1 = v0;
  v32 = &_swiftEmptySetSingleton;
  swift_beginAccess(v0 + 16, v31, 0, 0);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = v2 + 56;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  v8 = 0;
  v9 = 0.0;
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v17)) + (v8 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v14 = *v12;
    v13 = v12[1];
    swift_bridgeObjectRetain_n(v13, 2);
    v15 = sub_10007AB00(v30, v14, v13);
    swift_bridgeObjectRelease(v30[1]);
    if ((v15 & 1) != 0)
    {
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      v20 = sub_10006922C((uint64_t *)&unk_1006424D0);
      inited = swift_initStackObject(v20, v29);
      *(_OWORD *)(inited + 16) = xmmword_1004D9670;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      v22 = *(void **)(v1 + 40);
      *(_QWORD *)(inited + 64) = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v22;
      v23 = NSFontAttributeName;
      v24 = v22;
      v25 = sub_100076434(inited);
      type metadata accessor for Key(0);
      sub_10005A360((unint64_t *)&qword_1006424E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1004D93A8);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v19, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);
      v28 = v27;

      if (v9 < v28)
        v9 = v28;
      if (v6)
        goto LABEL_4;
    }
    else
    {
      swift_bridgeObjectRelease(v13);
      if (v6)
        goto LABEL_4;
    }
LABEL_7:
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v7)
      goto LABEL_25;
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v7)
        goto LABEL_25;
      v17 = *(_QWORD *)(v3 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v7)
          goto LABEL_25;
        v17 = *(_QWORD *)(v3 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v6 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v7)
  {
LABEL_25:
    swift_release(v2);
    swift_bridgeObjectRelease(v32);
    return;
  }
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v7)
      goto LABEL_25;
    v17 = *(_QWORD *)(v3 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641BA8, (uint64_t)&unk_1005C2000);
}

void sub_1000799BC(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

unint64_t sub_100079A00(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000271D4(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_100079B28(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_OWORD *sub_100079B28(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100079B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_100079BC4(a1, v7);
}

unint64_t sub_100079BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void sub_100079D3C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  unsigned int v6;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  void *v14;
  double v15;
  id v16;
  id v17;
  char v18;
  double v19;
  id v20;
  id v21;
  double v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  double v31;
  double v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t inited;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t ObjectType;
  id v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t countAndFlagsBits;
  void *object;
  double v56;
  Swift::String v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  NSString v73;
  uint64_t v74;
  uint64_t v75;
  NSString *v76;
  id v77;
  unint64_t v78;
  Class isa;
  double v80;
  double v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  unint64_t v92;
  double *v93;
  void *v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  double v102;
  __int128 v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int v107;
  uint64_t v108;
  NSString v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116[16];
  id v117[16];
  id v118[16];
  id v119[17];

  v1 = v0;
  v2 = type metadata accessor for UTType(0);
  v108 = *(_QWORD *)(v2 - 8);
  v109 = (NSString)v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v6 = objc_msgSend(v5, "isPickerUI");
  v7 = objc_msgSend(v1, "traitCollection");
  if (v6)
  {
    v110 = v7;
    v8 = UITraitCollection.modifyingTraits(_:)(sub_100190A98, 0);

    v7 = (id)v8;
  }
  v110 = v7;
  if (!sub_10007B5C0(1))
  {
    v20 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v109 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "BOOLForKey:", v109);

    v21 = v109;
LABEL_48:

    return;
  }
  v9 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  if (!((unint64_t)v10 >> 62))
  {
    if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_6;
    goto LABEL_47;
  }
  if (v10 < 0)
    v64 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  else
    v64 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8]);
  v65 = _CocoaArrayWrapper.endIndex.getter(v64);
  swift_bridgeObjectRelease(v10);
  if (v65 < 1)
  {
LABEL_47:
    v21 = v110;
    goto LABEL_48;
  }
LABEL_6:
  v11 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &v115, 0, 0);
  if (!*(_QWORD *)v11
    || (v12 = *(double *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits],
        v12 == 0.0)
    || (v13 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics,
        (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] & 1) == 0))
  {

    return;
  }
  v101 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits;
  v102 = v12;
  v14 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits];
  if (v14)
  {
    sub_10004F2F0(0, &qword_100646BC8, UITraitCollection_ptr);
    v15 = v102;
    swift_retain();
    v16 = v110;
    v17 = v14;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    if ((v18 & 1) != 0
      && objc_msgSend(v1, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkippedWork"))
    {
      swift_release(*(_QWORD *)&v15);

      v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_computeStackMetrics] = 1;
      return;
    }
  }
  else
  {
    v15 = v102;
    *(_QWORD *)&v19 = swift_retain().n128_u64[0];
  }
  v1[v13] = 0;
  if (objc_msgSend(v110, "horizontalSizeClass", v19, v101) == (id)2)
    v22 = 15.0;
  else
    v22 = 11.0;
  v23 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v23, "scaledValueForValue:compatibleWithTraitCollection:", v110, v22);
  v25 = v24;

  if (objc_msgSend(v110, "horizontalSizeClass") == (id)1)
  {
    v26 = sub_10006B078();
    objc_msgSend(v26, "compactHorizontalTableStackSpacing");
  }
  else
  {
    v28 = objc_msgSend(v1, "viewIfLoaded");
    if (v28)
    {
      v29 = v28;
      v26 = objc_msgSend(v28, "window");

      if (v26)
      {
        v30 = objc_msgSend(v26, "frame");
        if (DOCSizeIsFullScreenSize(v30, v31, v32))
        {
          v33 = sub_10006B078();
          objc_msgSend(v33, "fullHorizontalTableStackSpacing");
          v35 = v34;

          goto LABEL_28;
        }

      }
    }
    v26 = sub_10006B078();
    objc_msgSend(v26, "regularHorizontalTableStackSpacing");
  }
  v35 = v27;
LABEL_28:

  v107 = objc_msgSend(v5, "preferLastUsedDate");
  sub_10006B424((uint64_t)v116);
  v36 = v116[0];
  sub_10003BDA0((uint64_t)v116);
  v37 = type metadata accessor for DOCItemCollectionViewController.StringWidthCalculationContext();
  inited = swift_initStackObject(v37, &v114);
  *(_QWORD *)(inited + 16) = &_swiftEmptySetSingleton;
  v103 = xmmword_1004DB590;
  *(_OWORD *)(inited + 24) = xmmword_1004DB590;
  v105 = inited;
  *(_QWORD *)(inited + 40) = v36;
  sub_10006B424((uint64_t)v117);
  v39 = v117[0];
  sub_10003BDA0((uint64_t)v117);
  v40 = swift_initStackObject(v37, &v113);
  *(_QWORD *)(v40 + 16) = &_swiftEmptySetSingleton;
  *(_OWORD *)(v40 + 24) = v103;
  v106 = v40;
  *(_QWORD *)(v40 + 40) = v39;
  sub_10006B424((uint64_t)v118);
  v41 = v118[0];
  sub_10003BDA0((uint64_t)v118);
  v42 = swift_initStackObject(v37, &v112);
  *(_QWORD *)(v42 + 16) = &_swiftEmptySetSingleton;
  *(_OWORD *)(v42 + 24) = v103;
  *(_QWORD *)&v103 = v42;
  *(_QWORD *)(v42 + 40) = v41;
  v43 = *((_QWORD *)v9 + 1);
  if ((unint64_t)v43 >> 62)
  {
    if (v43 < 0)
      v66 = *((_QWORD *)v9 + 1);
    else
      v66 = v43 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*((_QWORD *)v9 + 1));
    v44 = _CocoaArrayWrapper.endIndex.getter(v66);
    if (v44)
      goto LABEL_30;
LABEL_53:
    swift_bridgeObjectRelease(v43);
LABEL_54:
    sub_1000796D4();
    v68 = v67;
    sub_1000796D4();
    v70 = v69;
    sub_1000796D4();
    v72 = v71;
    v73 = String._bridgeToObjectiveC()();
    v74 = sub_10006922C((uint64_t *)&unk_1006424D0);
    v75 = swift_initStackObject(v74, &v111);
    *(_OWORD *)(v75 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v75 + 32) = NSFontAttributeName;
    v76 = NSFontAttributeName;
    sub_10006B424((uint64_t)v119);
    v77 = v119[0];
    sub_10003BDA0((uint64_t)v119);
    *(_QWORD *)(v75 + 64) = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
    *(_QWORD *)(v75 + 40) = v77;
    v78 = sub_100076434(v75);
    type metadata accessor for Key(0);
    sub_10005A360((unint64_t *)&qword_1006424E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1004D93A8);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v73, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);
    v81 = v80;

    if (v68 <= 0.0)
    {
      if (v70 <= 0.0)
        goto LABEL_58;
    }
    else
    {
      v83 = v81 + sub_10005F460(0);
      if (v68 < v83)
        v68 = v83;
      if (v70 <= 0.0)
      {
LABEL_58:
        if (v72 <= 0.0)
        {
LABEL_61:
          v85 = ceil(v68);
          v86 = ceil(v70);
          v87 = ceil(v72);
          v88 = *(id *)DOCLog.UI.unsafeMutableAddressor(v82);
          static os_log_type_t.debug.getter();
          v89 = sub_10006922C((uint64_t *)&unk_100644560);
          v90 = swift_allocObject(v89, 192, 7);
          *(_OWORD *)(v90 + 16) = xmmword_1004D9B50;
          v91 = objc_msgSend(v110, "horizontalSizeClass");
          *(_QWORD *)(v90 + 56) = &type metadata for Int;
          *(_QWORD *)(v90 + 64) = &protocol witness table for Int;
          *(_QWORD *)(v90 + 32) = v91;
          *(_QWORD *)(v90 + 96) = &type metadata for CGFloat;
          v92 = sub_1000B3368();
          *(_QWORD *)(v90 + 104) = v92;
          *(double *)(v90 + 72) = v85;
          *(_QWORD *)(v90 + 136) = &type metadata for CGFloat;
          *(_QWORD *)(v90 + 144) = v92;
          *(double *)(v90 + 112) = v86;
          *(_QWORD *)(v90 + 176) = &type metadata for CGFloat;
          *(_QWORD *)(v90 + 184) = v92;
          *(double *)(v90 + 152) = v87;
          os_log(_:dso:log:type:_:)("Updating the stackMetrics for horizontal class %ld. New dateWidth: %f sizeWidth:%f kindWidth:%f tagsWidth:%f", v101, v102, *(double *)&v103, *((double *)&v103 + 1), v104);

          swift_bridgeObjectRelease(v90);
          v93 = (double *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
          *v93 = v85;
          v93[1] = v86;
          v93[2] = v87;
          *((_QWORD *)v93 + 3) = v25;
          *((_QWORD *)v93 + 4) = v35;
          v94 = *(void **)&v1[v101];
          v95 = v110;
          *(_QWORD *)&v1[v101] = v110;
          v96 = v95;

          sub_10004C254();
          swift_release(*(_QWORD *)&v15);

          v97 = v103;
          swift_setDeallocating(v103);
          swift_bridgeObjectRelease(*(_QWORD *)(v97 + 16));

          v98 = v106;
          swift_setDeallocating(v106);
          swift_bridgeObjectRelease(*(_QWORD *)(v98 + 16));

          v99 = v105;
          swift_setDeallocating(v105);
          swift_bridgeObjectRelease(*(_QWORD *)(v99 + 16));

          return;
        }
LABEL_59:
        v84 = v81 + sub_10005F460(4);
        if (v72 < v84)
          v72 = v84;
        goto LABEL_61;
      }
    }
    v100 = v81 + sub_10005F460(3);
    if (v70 < v100)
      v70 = v100;
    if (v72 <= 0.0)
      goto LABEL_61;
    goto LABEL_59;
  }
  v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*((_QWORD *)v9 + 1));
  if (!v44)
    goto LABEL_53;
LABEL_30:
  if (v44 >= 1)
  {
    v46 = 0;
    while (1)
    {
      v47 = *(void **)(v43 + 8 * v46 + 32);
      ObjectType = swift_getObjectType(v47, v45);
      swift_unknownObjectRetain(v47);
      v49 = objc_msgSend(v110, "horizontalSizeClass");
      v50 = DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)(v49, v107, ObjectType);
      if (v51)
      {
        v53 = v51;
        sub_10007A700(v50, v51);
        *(_QWORD *)&v52 = swift_bridgeObjectRelease(v53).n128_u64[0];
      }
      if ((objc_msgSend(v47, "isFolder", v52) & 1) != 0)
      {
        countAndFlagsBits = DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)(0, 0, 0, ObjectType);
        if (!object)
          goto LABEL_40;
      }
      else
      {
        v57 = DOCNode.localizedSizeDescription()();
        object = v57._object;
        countAndFlagsBits = v57._countAndFlagsBits;
      }
      v58 = object;
      sub_10007A700(countAndFlagsBits, (uint64_t)object);
      *(_QWORD *)&v56 = swift_bridgeObjectRelease(v58).n128_u64[0];
LABEL_40:
      v59 = objc_msgSend(v47, "contentType", v56);
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v59);

      v61 = UTType.localizedDescription.getter(v60);
      v63 = v62;
      (*(void (**)(char *, NSString))(v108 + 8))(v4, v109);
      if (v63)
      {
        sub_10007A700(v61, v63);
        swift_bridgeObjectRelease(v63);
      }
      ++v46;
      swift_unknownObjectRelease(v47);
      if (v44 == v46)
      {
        swift_bridgeObjectRelease(v43);
        v15 = v102;
        goto LABEL_54;
      }
    }
  }
  __break(1u);
}

void sub_10007A700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64x2_t v32;
  int64x2_t *v33;
  unint64_t v34;
  int64x2_t v35;
  int8x16_t v36;
  uint64_t v37;
  unint64_t v38;
  int64_t *v39;
  int64_t v40;
  int64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44[2];
  char v45[24];

  v3 = v2;
  v6 = (uint64_t *)(v2 + 16);
  swift_beginAccess(v6, v45, 1, 0);
  if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16) >= 0xAuLL && *(_QWORD *)(v3 + 24) >= String.count.getter(a1, a2))
    return;
  swift_beginAccess(v6, v43, 33, 0);
  swift_bridgeObjectRetain(a2);
  v7 = sub_10007AB00(v44, a1, a2);
  swift_endAccess(v43);
  swift_bridgeObjectRelease(v44[1]);
  if ((v7 & 1) == 0)
    return;
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9 >= 0xB)
  {
    swift_retain();
    v10 = swift_bridgeObjectRetain(v8);
    v11 = sub_100031944(v10, v3);
    swift_release(v3);
    v12 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v11;
    swift_bridgeObjectRelease(v12);
    v8 = *(_QWORD *)(v3 + 16);
    v9 = *(_QWORD *)(v8 + 16);
  }
  v13 = _swiftEmptyArrayStorage;
  if (!v9)
  {
LABEL_16:
    v28 = v13[2];
    if (!v28)
    {
      swift_bridgeObjectRelease(v13);
      v29 = *(_QWORD *)(v3 + 24);
LABEL_29:
      *(_QWORD *)(v3 + 24) = v29;
      return;
    }
    v29 = v13[4];
    v30 = v28 - 1;
    if (v28 != 1)
    {
      if (v28 < 5)
      {
        v31 = 1;
        goto LABEL_24;
      }
      v31 = v30 & 0xFFFFFFFFFFFFFFFCLL | 1;
      v32 = vdupq_n_s64(v29);
      v33 = (int64x2_t *)(v13 + 7);
      v34 = v30 & 0xFFFFFFFFFFFFFFFCLL;
      v35 = v32;
      do
      {
        v32 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v32, v33[-1]), (int8x16_t)v33[-1], (int8x16_t)v32);
        v35 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v35, *v33), *(int8x16_t *)v33, (int8x16_t)v35);
        v33 += 2;
        v34 -= 4;
      }
      while (v34);
      v36 = vbslq_s8((int8x16_t)vcgtq_s64(v35, v32), (int8x16_t)v32, (int8x16_t)v35);
      v37 = vextq_s8(v36, v36, 8uLL).u64[0];
      v29 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v37, v36.i64[0]), *(int8x8_t *)v36.i8, (int8x8_t)v37);
      if (v30 != (v30 & 0xFFFFFFFFFFFFFFFCLL))
      {
LABEL_24:
        v38 = v28 - v31;
        v39 = &v13[v31 + 4];
        do
        {
          v41 = *v39++;
          v40 = v41;
          if (v41 < v29)
            v29 = v40;
          --v38;
        }
        while (v38);
      }
    }
    swift_bridgeObjectRelease(v13);
    goto LABEL_29;
  }
  v42 = v3;
  v43[0] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v8);
  sub_10007AE44(0, v9, 0);
  v13 = (_QWORD *)v43[0];
  v14 = sub_10007AFBC(v8);
  v16 = v15;
  v18 = v17 & 1;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(v8 + 32))
  {
    if (((*(_QWORD *)(v8 + 56 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_32;
    if (*(_DWORD *)(v8 + 36) != v16)
      goto LABEL_33;
    v19 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v14);
    v20 = *v19;
    v21 = v19[1];
    swift_bridgeObjectRetain(v21);
    v22 = String.count.getter(v20, v21);
    swift_bridgeObjectRelease(v21);
    v43[0] = v13;
    v24 = v13[2];
    v23 = v13[3];
    if (v24 >= v23 >> 1)
    {
      sub_10007AE44(v23 > 1, v24 + 1, 1);
      v13 = (_QWORD *)v43[0];
    }
    v13[2] = v24 + 1;
    v13[v24 + 4] = v22;
    v25 = sub_10007AAFC(v14, v16, v18 & 1, v8);
    v14 = v25;
    v16 = v26;
    v18 = v27 & 1;
    if (!--v9)
    {
      sub_1001D0608(v25, v26, v27 & 1);
      swift_bridgeObjectRelease(v8);
      v3 = v42;
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

int64_t sub_10007AA18(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10007AB00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_10007ACAC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10007ACAC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD v28[9];

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_10007B05C(v11);
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1000CCF38();
      goto LABEL_22;
    }
    sub_10007C430(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v28, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v28, v8, a2);
  result = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a3 = result & ~v13;
  v14 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v12 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = v16[1];
    v18 = *v16 == v8 && v17 == a2;
    if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, a2, 0), (result & 1) != 0))
    {
LABEL_21:
      result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v19 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v19;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v20 = (_QWORD *)(v15 + 16 * a3);
        v21 = v20[1];
        if (*v20 != v8 || v21 != a2)
        {
          result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, a2, 0);
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v23 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v24 = (uint64_t *)(*(_QWORD *)(v23 + 48) + 16 * a3);
  *v24 = v8;
  v24[1] = a2;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v23 + 16) = v27;
  return result;
}

uint64_t sub_10007AE44(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007AE60(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10007AE60(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644BD8);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007AFBC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_10007B05C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10006922C(&qword_1006533F0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_10007B338()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  BOOL v3;
  void **v4;
  void *v5;
  void (*v6)(_QWORD *__return_ptr);
  id v7;
  char *v8;
  _QWORD v9[34];
  _BYTE v10[24];
  _QWORD __src[34];
  _QWORD v12[34];
  _QWORD __dst[34];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10007B5C0(1);

  if (v3)
  {
    v4 = (void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
    swift_beginAccess((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v10, 0, 0);
    v5 = *v4;
    if (v5)
    {
      if (!sub_10007BAFC())
      {
        v6 = *(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v1) + 0x660);
        v7 = v5;
        v6(__src);
        v8 = (char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics;
        memcpy(__dst, (char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics, sizeof(__dst));
        memcpy(v9, (char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics, sizeof(v9));
        memcpy((char *)v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics, __src, 0x110uLL);
        sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
        sub_10007B4E0(__src, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
        sub_10007B4E0(v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
        memcpy(v12, v8, sizeof(v12));
        sub_10007B4E0(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
        if ((sub_10007BEB4((unsigned __int8 *)v12, (unsigned __int8 *)__dst) & 1) == 0)
          (*(void (**)(_QWORD *))((swift_isaMask & *v1) + 0x658))(v12);
        sub_10007B4E0(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
        sub_10007B4E0(__src, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
        sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);

      }
    }
  }
}

_QWORD *sub_10007B4E0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

id sub_10007B540(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  id v11;
  id v12;

  if (result)
  {
    v11 = result;
    v12 = a2;
    return a10;
  }
  return result;
}

void sub_10007B580(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {

  }
}

BOOL sub_10007B5C0(uint64_t a1)
{
  void *v1;
  _BOOL4 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BOOL8 result;

  v3 = 1;
  v4 = sub_1002B90E4(1);
  swift_bridgeObjectRelease(v5);
  v6 = sub_1002B90E4(v4 & a1);
  swift_bridgeObjectRelease(v7);
  if (v6 == 1)
    v3 = objc_msgSend(v1, "horizontalSizeClass") != 0;
  v8 = sub_1002B90E4(2);
  swift_bridgeObjectRelease(v9);
  v10 = sub_1002B90E4(v8 & a1);
  swift_bridgeObjectRelease(v11);
  v12 = v10 != 2 && v3;
  if (v10 == 2 && v3)
    v12 = objc_msgSend(v1, "verticalSizeClass") != 0;
  v13 = sub_1002B90E4(4);
  swift_bridgeObjectRelease(v14);
  v15 = sub_1002B90E4(v13 & a1);
  swift_bridgeObjectRelease(v16);
  v17 = v15 != 4 && v12;
  if (v15 == 4 && v12)
  {
    objc_msgSend(v1, "displayScale");
    v19 = v18;
    if (qword_100640F98 != -1)
      swift_once(&qword_100640F98, sub_1000A86D8);
    v17 = *(double *)&qword_10064CD50 < v19;
  }
  v20 = sub_1002B90E4(8);
  swift_bridgeObjectRelease(v21);
  v22 = sub_1002B90E4(v20 & a1);
  swift_bridgeObjectRelease(v23);
  v24 = v22 != 8 && v17;
  if (v22 == 8 && v17)
    v24 = objc_msgSend(v1, "userInterfaceStyle") != 0;
  v25 = sub_1002B90E4(16);
  swift_bridgeObjectRelease(v26);
  v27 = sub_1002B90E4(v25 & a1);
  swift_bridgeObjectRelease(v28);
  LOBYTE(v29) = v27 != 16 && v24;
  if (v27 == 16 && v24)
  {
    v30 = objc_msgSend(v1, "preferredContentSizeCategory");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryUnspecified);
    v36 = v34;
    if (v31 == v35 && v33 == v34)
      LOBYTE(v29) = 0;
    else
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0) ^ 1;

    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v36);
  }
  v37 = sub_1002B90E4(32);
  swift_bridgeObjectRelease(v38);
  v39 = sub_1002B90E4(v37 & a1);
  swift_bridgeObjectRelease(v40);
  v41 = (v39 != 32) & v29;
  if (v39 == 32 && (v29 & 1) != 0)
    v41 = objc_msgSend(v1, "userInterfaceIdiom") != (id)-1;
  v42 = sub_1002B90E4(64);
  swift_bridgeObjectRelease(v43);
  v44 = sub_1002B90E4(v42 & a1);
  swift_bridgeObjectRelease(v45);
  if (v44 == 64)
    v46 = 0;
  else
    v46 = v41;
  if (v44 == 64 && v41)
    v46 = objc_msgSend(v1, "layoutDirection") != (id)-1;
  v47 = sub_1002B90E4(256);
  swift_bridgeObjectRelease(v48);
  v49 = sub_1002B90E4(v47 & a1);
  swift_bridgeObjectRelease(v50);
  result = v49 != 256 && v46;
  if (v49 == 256 && v46)
    return objc_msgSend(v1, "legibilityWeight") != (id)-1;
  return result;
}

_QWORD *sub_10007B918(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        v7 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v8 = v6;
        v9 = objc_opt_self(*a2);
        v10 = swift_dynamicCastObjCClass(v8, v9);
        if (!v10)
        {
          swift_unknownObjectRelease(v8);
          goto LABEL_15;
        }
        v11 = v10;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized ContiguousArray._endMutation()(v13);
        if (v7 == v4)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v14 = 0;
      v15 = v3 + 32;
      while (1)
      {
        v16 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        v17 = *(_QWORD *)(v15 + 8 * v14);
        v18 = objc_opt_self(*a2);
        v19 = swift_dynamicCastObjCClass(v17, v18);
        if (!v19)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v3 = v19;
        v20 = swift_unknownObjectRetain(v17);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v21 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
        v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v3);
        specialized ContiguousArray._endMutation()(v22);
        ++v14;
        if (v16 == v4)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v3 < 0)
      v24 = v3;
    else
      v24 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v3);
    specialized ContiguousArray.reserveCapacity(_:)(v25);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v3);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10007BAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  _BYTE v10[24];
  _BYTE v11[184];
  uint64_t v12[23];
  _BYTE v13[128];
  uint64_t v14[16];

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping) == 2;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance))
    v1 |= 2uLL;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection))
    v2 = v1;
  else
    v2 = v1 | 4;
  sub_100070EDC(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v13, &qword_100658670);
  sub_100070EDC((uint64_t)v13, (uint64_t)v14, &qword_100658670);
  if (sub_1000A849C(v14) == 1)
    v2 |= 8uLL;
  sub_100070EDC(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v11, (uint64_t *)&unk_100641300);
  sub_100070EDC((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_100641300);
  v3 = sub_1000A849C(v12);
  v4 = v2 | 0x10;
  if (v3 != 1)
    v4 = v2;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) == 2)
    v4 |= 0x20uLL;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable) == 2)
    v4 |= 0x40uLL;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40))
    v4 |= 0x80uLL;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate) == 2)
    v5 = v4 | 0x100;
  else
    v5 = v4;
  v6 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v10, 0, 0);
  if (!*v6)
  {
    v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode);
    v8 = v5 | 0x200;
    if ((v7 & 1) != 0)
      v8 = v5;
    if (v7 != 2)
      return v8;
  }
  return v5;
}

void *sub_10007BCA0@<X0>(_BYTE *a1@<X0>, void *a2@<X8>)
{
  _QWORD v4[34];

  sub_10007BCEC(a1, v4);
  sub_10007B4E0(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  return memcpy(a2, v4, 0x110uLL);
}

_BYTE *sub_10007BCEC@<X0>(_BYTE *result@<X0>, void *a2@<X8>)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD __src[17];
  _BYTE v13[128];
  uint64_t v14[16];
  _BYTE v15[128];
  uint64_t v16[12];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  if ((result[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40] & 1) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  v4 = *(_QWORD *)&result[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 32];
  v5 = (uint64_t)&result[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
  sub_100070EDC((uint64_t)&result[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits], (uint64_t)v15, &qword_100658670);
  sub_100070EDC((uint64_t)v15, (uint64_t)v16, &qword_100658670);
  result = (_BYTE *)sub_1000A849C(v16);
  if ((_DWORD)result == 1)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (qword_100640EB8 != -1)
    swift_once(&qword_100640EB8, sub_1000A272C);
  v6 = qword_100672AC0;
  sub_100070EDC(v5, (uint64_t)v13, &qword_100658670);
  sub_100070EDC((uint64_t)v13, (uint64_t)v14, &qword_100658670);
  result = (_BYTE *)sub_1000A849C(v14);
  if ((_DWORD)result == 1)
    goto LABEL_12;
  if (v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_roundedCorners])
    v7 = 11.0;
  else
    v7 = 0.0;
  v11 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v14[11];
  LOBYTE(__src[0]) = 0;
  sub_100070EDC((uint64_t)v13, (uint64_t)__src + 8, &qword_100658670);
  *((double *)&__src[8] + 1) = v7;
  *(_QWORD *)&__src[9] = 0;
  BYTE8(__src[9]) = 1;
  *(_QWORD *)&__src[10] = v4;
  *((_QWORD *)&__src[10] + 1) = v6;
  __src[11] = v11;
  *(_QWORD *)&__src[12] = v8;
  *((_QWORD *)&__src[12] + 1) = v9;
  __src[13] = xmmword_1004DE980;
  __src[14] = xmmword_1004DE990;
  __src[15] = xmmword_1004DE9A0;
  *(_QWORD *)&__src[16] = 0x4000000000000000;
  *((_QWORD *)&__src[16] + 1) = v10;
  return memcpy(a2, __src, 0x110uLL);
}

uint64_t sub_10007BEB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL v4;
  char v5;
  _OWORD v7[8];
  _OWORD v8[8];
  uint64_t v9[16];
  _OWORD v10[8];
  uint64_t v11;
  _BYTE v12[128];
  _BYTE v13[128];
  uint64_t v14[16];
  _OWORD v15[8];

  if (((*a1 ^ *a2) & 1) != 0)
    return 0;
  sub_100070EDC((uint64_t)(a1 + 8), (uint64_t)v12, &qword_100658670);
  sub_100070EDC((uint64_t)(a2 + 8), (uint64_t)v13, &qword_100658670);
  sub_100070EDC((uint64_t)v12, (uint64_t)v14, &qword_100658670);
  if (sub_1000A849C(v14) != 1)
  {
    sub_100070EDC((uint64_t)v13, (uint64_t)v9, &qword_100658670);
    if (sub_1000A849C(v9) != 1)
    {
      sub_100070EDC((uint64_t)v12, (uint64_t)v7, &qword_100658670);
      v15[4] = v7[4];
      v15[5] = v7[5];
      v15[6] = v7[6];
      v15[7] = v7[7];
      v15[0] = v7[0];
      v15[1] = v7[1];
      v15[2] = v7[2];
      v15[3] = v7[3];
      sub_100070EDC((uint64_t)v13, (uint64_t)v8, &qword_100658670);
      v10[4] = v8[4];
      v10[5] = v8[5];
      v10[6] = v8[6];
      v10[7] = v8[7];
      v10[0] = v8[0];
      v10[1] = v8[1];
      v10[2] = v8[2];
      v10[3] = v8[3];
      sub_10007B4E0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
      sub_10007B4E0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
      v4 = sub_10007C194((uint64_t)v15, (uint64_t)v10);
      sub_10007B4E0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
      sub_10007B4E0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
      if (!v4)
        return 0;
      goto LABEL_8;
    }
LABEL_6:
    sub_100070EDC((uint64_t)v12, (uint64_t)v10, &qword_100658670);
    sub_100070EDC((uint64_t)v13, (uint64_t)&v11, &qword_100658670);
    sub_10007B4E0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
    sub_10007B4E0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
    sub_1001D07F0((uint64_t)v10);
    return 0;
  }
  sub_100070EDC((uint64_t)v13, (uint64_t)v10, &qword_100658670);
  if (sub_1000A849C((uint64_t *)v10) != 1)
    goto LABEL_6;
  sub_10007B4E0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
LABEL_8:
  if (*((double *)a1 + 17) == *((double *)a2 + 17))
  {
    v5 = a2[152];
    if ((a1[152] & 1) != 0)
    {
      if (!a2[152])
        return 0;
    }
    else
    {
      if (*((double *)a1 + 18) != *((double *)a2 + 18))
        v5 = 1;
      if ((v5 & 1) != 0)
        return 0;
    }
    if (*((double *)a1 + 20) == *((double *)a2 + 20)
      && (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 168), *(float64x2_t *)(a2 + 168)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 184), *(float64x2_t *)(a2 + 184))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 200), *(float64x2_t *)(a2 + 200)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 216), *(float64x2_t *)(a2 + 216))))), 7uLL))) & 1) != 0&& *((double *)a1 + 29) == *((double *)a2 + 29)
      && *((double *)a1 + 30) == *((double *)a2 + 30)
      && *((double *)a1 + 31) == *((double *)a2 + 31)
      && *((double *)a1 + 32) == *((double *)a2 + 32)
      && *((double *)a1 + 33) == *((double *)a2 + 33))
    {
      return 1;
    }
  }
  return 0;
}

BOOL sub_10007C194(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;

  sub_10007C3E0();
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) == 0
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16)
    || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24)
    || *(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32)
    || *(double *)(a1 + 40) != *(double *)(a2 + 40))
  {
    return 0;
  }
  result = 0;
  if (*(double *)(a1 + 48) == *(double *)(a2 + 48)
    && *(double *)(a1 + 56) == *(double *)(a2 + 56)
    && *(double *)(a1 + 64) == *(double *)(a2 + 64))
  {
    v5 = *(void **)(a1 + 72);
    v13 = *(id *)(a2 + 72);
    v14 = v5;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v11 = v9;
    if (v6 == v10 && v8 == v9)
    {
      sub_10007C3B8(&v14);
      sub_10007C3B8(&v13);
      swift_bridgeObjectRelease_n(v8, 2);
      sub_10007C390(&v13);
      sub_10007C390(&v14);
    }
    else
    {
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v9, 0);
      sub_10007C3B8(&v14);
      sub_10007C3B8(&v13);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v11);
      sub_10007C390(&v13);
      sub_10007C390(&v14);
      result = 0;
      if ((v12 & 1) == 0)
        return result;
    }
    return ((*(unsigned __int8 *)(a1 + 80) ^ *(unsigned __int8 *)(a2 + 80)) & 1) == 0
        && *(double *)(a1 + 88) == *(double *)(a2 + 88)
        && *(double *)(a1 + 96) == *(double *)(a2 + 96)
        && *(double *)(a1 + 104) == *(double *)(a2 + 104)
        && *(double *)(a1 + 112) == *(double *)(a2 + 112)
        && *(double *)(a1 + 120) == *(double *)(a2 + 120);
  }
  return result;
}

id *sub_10007C390(id *a1)
{

  return a1;
}

id *sub_10007C3B8(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

unint64_t sub_10007C3E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100642430;
  if (!qword_100642430)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100642430);
  }
  return result;
}

uint64_t type metadata accessor for ScrollPositionInfo.ItemOffset(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_1006469B0, (uint64_t)&nominal type descriptor for ScrollPositionInfo.ItemOffset);
}

void sub_10007C430(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10006922C(&qword_1006533F0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v32 = v2;
  v33 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  v12 = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_27;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v33)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v33)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v23);
    String.hash(into:)(v34, v22, v23);
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2, v12);
    v2 = v32;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_10007C6DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007C720(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_10007C75C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  double result;

  v4 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[6]));
    v6 = (_QWORD *)(a1 + v4[9]);
    if (v6[3])
      sub_100068588(v6);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

uint64_t getEnumTagSinglePayload for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043C75C);
}

uint64_t type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100655AF8, (uint64_t)&nominal type descriptor for _DOCBrowserHistoryDataSourceBase.ItemSet);
}

uint64_t type metadata accessor for DOCBrowserHistoryItem(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100655840, (uint64_t)&nominal type descriptor for DOCBrowserHistoryItem);
}

uint64_t sub_10007C85C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C86C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C88C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C89C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C91C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C92C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C94C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C96C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C97C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C98C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C99C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007C9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007CFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D00C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D02C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D03C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D04C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D06C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D08C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D10C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D11C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D12C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D16C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D18C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D19C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t destroy for DOCNodeGoToCandidate(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t sub_10007D218(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D220(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D228(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D230(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D238(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D240(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D248(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D250(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D258(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D260(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D268(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D270(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D278(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D280(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D288(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D290(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D298(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D2F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D300(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D308(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D310(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D318(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D320(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D328(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D330(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D338(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D340(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D348(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D350(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D358(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D360(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D368(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D370(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D378(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D380(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D388(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D390(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D398(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D3F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D400(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D408(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D410(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D418(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D420(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D428(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D430(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D438(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D440(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D448(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D450(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D458(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D460(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D468(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D470(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D478(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D480(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D488(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D490(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D498(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D4F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D500(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D508(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D510(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D518(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D520(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D528(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D530(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D538(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D540(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D548(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D550(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D558(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D560(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D568(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D570(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D578(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D580(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D588(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D590(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D598(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D5F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D600(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D608(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D610(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D618(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D620(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D628(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D630(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D638(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D640(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D648(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D650(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D658(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D660(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D668(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D670(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D678(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D680(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D688(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D690(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D698(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D6E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

__n128 initializeWithTake for DOCLocationChange(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionSizeClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

unint64_t sub_10007D798@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_10004F4C4(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_10007D7CC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100056354(a1, v2, a2);
}

uint64_t sub_10007D848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EDA5C);
}

uint64_t destroy for DOCViewEditMenuInteraction.Presentatable(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView()
{
  return 0;
}

_QWORD *initializeBufferWithCopyOfBuffer for DOCBrowserContainerState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2 >= 0xFFFFFFFFuLL)
    swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

uint64_t sub_10007D8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EDAD8);
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043C7D8);
}

uint64_t sub_10007D8D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10007D920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7 + 8));

  return swift_deallocObject(v0, v9 + 9, v5);
}

uint64_t sub_10007D9D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10007DA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007DA80()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  if (*(_QWORD *)(v0 + 64))
    swift_release(*(_QWORD *)(v0 + 72));

  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10007DAEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007DB18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10007DB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFF8)));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10007DBE8(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10007DC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10007DCB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10007DCEC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10007DD20()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10007DD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10006922C(&qword_10064C3B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007DDC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char **v24;
  uint64_t v25;
  objc_class *ObjCClassFromMetadata;
  NSString *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  qword_1006725F8 = CFAbsoluteTimeGetCurrent();
  v14 = static CommandLine.unsafeArgv.getter();
  v15 = ((uint64_t (*)(void))static CommandLine.argc.getter)();
  qword_100672600 = v14;
  if (DOCIsInternalBuild(v15))
  {
    v16 = objc_autoreleasePoolPush();
    sub_10008BBD8();
    objc_autoreleasePoolPop(v16);
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v10);
  v17 = (void *)static OS_dispatch_queue.global(qos:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  aBlock[4] = j__StartFINode;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005C11B0;
  v18 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v18);
  v33 = _swiftEmptyArrayStorage;
  v19 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10006922C((uint64_t *)&unk_100647540);
  v21 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v20, v21, v3, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = static CommandLine.argc.getter(v22);
  v24 = (char **)static CommandLine.unsafeArgv.getter();
  v25 = type metadata accessor for AppDelegate();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v25);
  v27 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v27)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v29 = v28;
    v27 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
  }
  UIApplicationMain(v23, v24, 0, v27);

  return 0;
}

const char *sub_10007E0EC()
{
  return "itemsOrigin";
}

const char *sub_10007E0F8()
{
  return "isItemCollectionDragActive";
}

const char *sub_10007E104()
{
  return "isGathering";
}

const char *sub_10007E110()
{
  return "isEjectable";
}

const char *sub_10007E11C()
{
  return "currentLocationTitle";
}

const char *sub_10007E128()
{
  return "DOCSourceOrderKey";
}

uint64_t sub_10007E788(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *sub_10007E7A0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10007E7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 initializeWithCopy for DOCItemCollectionCellStackMetrics(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10007E804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_10007E830(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t *sub_10007E874(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_10007E8B4(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containingAppBundleIdentifierForPicker:", a2));
  if (v3)
    v4 = objc_msgSend(*(id *)(a1 + 40), "containsObject:", v3) ^ 1;
  else
    v4 = 1;

  return v4;
}

void sub_10007E908(uint64_t a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  id v5;

  v5 = a2;
  v3 = objc_msgSend(v5, "supportsEnumeration");
  v4 = 40;
  if (v3)
    v4 = 32;
  objc_msgSend(*(id *)(a1 + v4), "addObject:", v5);

}

void sub_10007E958(id a1)
{
  void *v1;
  id v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "bundleIdentifier"));

}

void sub_10007E9C0(id a1)
{
  dispatch_queue_global_t global_queue;
  NSObject *v2;

  global_queue = dispatch_get_global_queue(25, 0);
  v2 = objc_claimAutoreleasedReturnValue(global_queue);
  dispatch_async(v2, &stru_1005BE5C8);

}

uint64_t sub_10007E9FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10007EA10(id a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = objc_alloc((Class)NSUserDefaults);
  v4 = objc_msgSend(v1, "initWithSuiteName:", DOCDefaultsSuiteName);
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", DOCTestUserDefaultsKeyBrowseTabSelected));
  v3 = (void *)qword_100658FE8;
  qword_100658FE8 = v2;

}

void sub_10007EA70(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (*(_QWORD *)(a1 + 32))
    {
      v3 = WeakRetained;
      objc_msgSend(WeakRetained, "setLegacyPickers:");
      objc_msgSend(v3, "sourceObserverQueue_didReceiveSourceUpdate");
LABEL_6:
      WeakRetained = v3;
      goto LABEL_7;
    }
    if (*(_QWORD *)(a1 + 40))
    {
      v3 = WeakRetained;
      objc_msgSend(WeakRetained, "setLegacyPickersObserverError:");
      goto LABEL_6;
    }
  }
LABEL_7:

}

void sub_10007EAD0(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMapTable strongToWeakObjectsMapTable](NSMapTable, "strongToWeakObjectsMapTable"));
  v2 = (void *)qword_100658FD8;
  qword_100658FD8 = v1;

}

double sub_10007EAFC(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

double sub_10007EB18(double a1)
{
  return a1 + 2.0;
}

double sub_10007EB38(double a1)
{
  return a1 + -4.0;
}

uint64_t sub_10007EB54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100642730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007EB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100642730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007EBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100642730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t **sub_10007EC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t **result;
  uint64_t v9;

  v1 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      goto LABEL_5;
    return (uint64_t **)_swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = __CocoaSet.count.getter(a1);
  if (!v2)
    return (uint64_t **)_swiftEmptyArrayStorage;
LABEL_5:
  if (v2 <= 0)
  {
    v4 = (uint64_t **)_swiftEmptyArrayStorage;
  }
  else
  {
    v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v4 = (uint64_t **)swift_allocObject(v3, 8 * v2 + 32, 7);
    v5 = j__malloc_size(v4);
    v6 = v5 - 32;
    if (v5 < 32)
      v6 = v5 - 25;
    v4[2] = (uint64_t *)v2;
    v4[3] = (uint64_t *)((2 * (v6 >> 3)) | 1);
  }
  swift_bridgeObjectRetain(v1);
  v7 = sub_1000375A8(&v9, v4 + 4, v2, v1);
  result = (uint64_t **)sub_10021C590(v9);
  if (v7 == (uint64_t *)v2)
    return v4;
  __break(1u);
  return result;
}

_QWORD *sub_10007ED1C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10007F6D4(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10007EE90(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, Swift::Int))
{
  uint64_t v4;
  Swift::Int v8;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, *(_QWORD *)(v4 + 40));
  a3(v11, a1, a2);
  v8 = Hasher._finalize()();
  return a4(a1, a2, v8);
}

uint64_t sub_10007EF08(uint64_t a1, uint64_t a2)
{
  return sub_10007EE90(a1, a2, (void (*)(_QWORD *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_10007F030);
}

unint64_t sub_10007EF1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v1 + 40));
  v3 = a1[4];
  v4 = a1[6];
  sub_10007E7A0(a1 + 1, v3);
  dispatch thunk of Hashable.hash(into:)(v7, v3, v4);
  v5 = Hasher._finalize()();
  return sub_10007F110(a1, v5);
}

unint64_t sub_10007EF98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_10005A360((unint64_t *)&unk_1006443A0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10004F5A8(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (unint64_t *)&qword_100655BE0, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_10007F030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10007F110(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v16;
  _QWORD v17[9];
  id v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v16 = ~v4;
    v8 = a1 + 1;
    do
    {
      sub_1000A0110(*(_QWORD *)(v6 + 48) + 56 * v5, (uint64_t)&v18);
      Hasher.init(_seed:)(v17, 0);
      v9 = v20;
      v10 = v21;
      sub_10007E7A0(v19, v20);
      dispatch thunk of Hashable.hash(into:)(v17, v9, v10);
      v11 = Hasher._finalize()();
      Hasher.init(_seed:)(v17, 0);
      v12 = a1[4];
      v13 = a1[6];
      sub_10007E7A0(v8, v12);
      dispatch thunk of Hashable.hash(into:)(v17, v12, v13);
      v14 = Hasher._finalize()();
      sub_1000A00DC(&v18);
      if (v11 == v14)
        break;
      v5 = (v5 + 1) & v16;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_10007F268(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10007F308(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_10007F3C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644910);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[56 * v8] || v13 >= &v14[56 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007F54C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10006922C(&qword_100644B90);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10006922C(&qword_100644B98);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_10007F6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10006922C((uint64_t *)&unk_1006454D0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

_QWORD *sub_10007F738(unint64_t a1)
{
  return sub_100019858(a1, (uint64_t (*)(_QWORD))type metadata accessor for DOCBrowserContainerController);
}

id sub_10007F744(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_100079D38(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1002E5EC8();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_release(*(_QWORD *)(v16 + 8 * v9));
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_1000801EC(v12, a3 & 1);
  v18 = sub_100079D38(a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for FPProviderDomainID(0);
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
  return result;
}

uint64_t sub_10007F894(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10007EF08(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1002E8ACC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain(a3);
    }
    goto LABEL_14;
  }
  sub_100080508(result, a4 & 1);
  result = sub_10007EF08(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_10007F9E4(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _OWORD v31[3];
  uint64_t v32;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10007EF1C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1002EAC40();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_10035E6E8(a1, v16[7] + 56 * v10);
LABEL_11:
    result = sub_1000A0110((uint64_t)a2, (uint64_t)v31);
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = v16[6] + 56 * v10;
    v21 = v31[2];
    v22 = v31[1];
    v23 = v31[0];
    *(_QWORD *)(v20 + 48) = v32;
    *(_OWORD *)v20 = v23;
    *(_OWORD *)(v20 + 16) = v22;
    *(_OWORD *)(v20 + 32) = v21;
    v24 = v16[7] + 56 * v10;
    v25 = *(_QWORD *)(a1 + 48);
    v27 = *(_OWORD *)(a1 + 16);
    v26 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)v24 = *(_OWORD *)a1;
    *(_OWORD *)(v24 + 16) = v27;
    *(_OWORD *)(v24 + 32) = v26;
    *(_QWORD *)(v24 + 48) = v25;
    v28 = v16[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v16[2] = v30;
      return result;
    }
    goto LABEL_14;
  }
  sub_100080810(v13, a3 & 1);
  v18 = sub_10007EF1C(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_10035E6E8(a1, v16[7] + 56 * v10);
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCIdentityHashableLocation);
  __break(1u);
  return result;
}

void sub_10007FB7C(uint64_t a1, uint64_t a2, char a3)
{
  sub_100357F9C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for UTType, (uint64_t (*)(uint64_t))sub_10004F510, (void (*)(void))sub_1002EA0A4, (void (*)(void))sub_100080BB8);
}

uint64_t sub_10007FBA0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t updated;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10007EF98(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo(0);
      return sub_100360FCC(a1, v21 + *(_QWORD *)(*(_QWORD *)(updated - 8) + 72) * v14, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1002E5A3C();
    goto LABEL_7;
  }
  sub_100080BDC(v17, a3 & 1);
  v24 = sub_10007EF98(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10007FDB8(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for UUID, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
}

uint64_t sub_10007FD20(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_10007FDB8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a4[6];
  v12 = a5(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a2, v12);
  v13 = a4[7];
  v14 = a6(0);
  result = sub_1001D0788(a3, v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a1, a6);
  v16 = a4[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a4[2] = v18;
  return result;
}

uint64_t sub_10007FE70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v56[12];
  _BYTE v57[25];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[2];
  _BYTE v71[232];
  uint64_t v72[29];
  void *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _OWORD v86[2];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v8 = -1 << *(_BYTE *)(a1 + 32);
  v9 = ~v8;
  v10 = *(_QWORD *)(a1 + 64);
  v11 = -v8;
  v87 = a1;
  v88 = a1 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v89 = v9;
  v90 = 0;
  v91 = v12 & v10;
  v92 = a2;
  v93 = a3;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  sub_10004F824((uint64_t)&v73);
  sub_100070EDC((uint64_t)&v73, (uint64_t)v71, &qword_10064FFB8);
  sub_100070EDC((uint64_t)v71, (uint64_t)v72, &qword_10064FFB8);
  if (sub_1000A849C(v72) == 1)
  {
LABEL_5:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_10021C590(v87);
    return swift_release(a3);
  }
  while (1)
  {
    v32 = v73;
    v68 = v84;
    v69 = v85;
    v70[0] = v86[0];
    *(_OWORD *)((char *)v70 + 9) = *(_OWORD *)((char *)v86 + 9);
    v64 = v80;
    v65 = v81;
    v66 = v82;
    v67 = v83;
    v60 = v76;
    v61 = v77;
    v62 = v78;
    v63 = v79;
    v58 = v74;
    v59 = v75;
    v33 = (_QWORD *)*a5;
    v35 = sub_1000667B0((uint64_t)v73);
    v36 = v33[2];
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      break;
    v39 = v34;
    if (v33[3] >= v38)
    {
      if ((a4 & 1) != 0)
      {
        if ((v34 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1002E9E50();
        if ((v39 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_10001E3E4(v38, a4 & 1);
      v40 = sub_1000667B0((uint64_t)v32);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_22;
      v35 = v40;
      if ((v39 & 1) != 0)
      {
LABEL_7:
        v14 = (_QWORD *)*a5;

        v15 = (_OWORD *)(v14[7] + 224 * v35);
        v16 = v15[1];
        v56[0] = *v15;
        v56[1] = v16;
        v17 = v15[5];
        v19 = v15[2];
        v18 = v15[3];
        v56[4] = v15[4];
        v56[5] = v17;
        v56[2] = v19;
        v56[3] = v18;
        v20 = v15[6];
        v21 = v15[7];
        v22 = v15[9];
        v56[8] = v15[8];
        v56[9] = v22;
        v56[6] = v20;
        v56[7] = v21;
        v23 = v15[10];
        v24 = v15[11];
        v25 = v15[12];
        *(_OWORD *)&v57[9] = *(_OWORD *)((char *)v15 + 201);
        v56[11] = v24;
        *(_OWORD *)v57 = v25;
        v56[10] = v23;
        sub_100362CFC((uint64_t *)v56);
        v26 = v69;
        v15[10] = v68;
        v15[11] = v26;
        v15[12] = v70[0];
        *(_OWORD *)((char *)v15 + 201) = *(_OWORD *)((char *)v70 + 9);
        v27 = v65;
        v15[6] = v64;
        v15[7] = v27;
        v28 = v67;
        v15[8] = v66;
        v15[9] = v28;
        v29 = v61;
        v15[2] = v60;
        v15[3] = v29;
        v30 = v63;
        v15[4] = v62;
        v15[5] = v30;
        v31 = v59;
        *v15 = v58;
        v15[1] = v31;
        goto LABEL_8;
      }
    }
    v42 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v35 >> 6) + 64) |= 1 << v35;
    *(_QWORD *)(v42[6] + 8 * v35) = v32;
    v43 = (_OWORD *)(v42[7] + 224 * v35);
    v44 = v63;
    v43[4] = v62;
    v43[5] = v44;
    v45 = v61;
    v43[2] = v60;
    v43[3] = v45;
    v46 = v67;
    v43[8] = v66;
    v43[9] = v46;
    v47 = v65;
    v43[6] = v64;
    v43[7] = v47;
    *(_OWORD *)((char *)v43 + 201) = *(_OWORD *)((char *)v70 + 9);
    v48 = v70[0];
    v49 = v68;
    v43[11] = v69;
    v43[12] = v48;
    v43[10] = v49;
    v50 = v59;
    *v43 = v58;
    v43[1] = v50;
    v51 = v42[2];
    v52 = __OFADD__(v51, 1);
    v53 = v51 + 1;
    if (v52)
      goto LABEL_21;
    v42[2] = v53;
LABEL_8:
    sub_10004F824((uint64_t)&v73);
    sub_100070EDC((uint64_t)&v73, (uint64_t)v71, &qword_10064FFB8);
    sub_100070EDC((uint64_t)v71, (uint64_t)v72, &qword_10064FFB8);
    a4 = 1;
    if (sub_1000A849C(v72) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  v54 = sub_10004F2F0(0, (unint64_t *)&unk_1006443F0, DOCNodeThumbnailIdentifier_ptr);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v54);
  __break(1u);
  return result;
}

void sub_1000801EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  _QWORD v42[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10006922C((uint64_t *)&unk_10064DB10);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v38 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v24 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v25 = v24 | (v13 << 6);
      }
      else
      {
        v26 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v26 >= v39)
          goto LABEL_36;
        v27 = v40[v26];
        ++v13;
        if (!v27)
        {
          v13 = v26 + 1;
          if (v26 + 1 >= v39)
            goto LABEL_36;
          v27 = v40[v13];
          if (!v27)
          {
            v28 = v26 + 2;
            if (v28 >= v39)
            {
LABEL_36:
              swift_release(v5);
              v3 = v38;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v5 + 32);
                if (v37 >= 64)
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v27 = v40[v28];
            if (!v27)
            {
              while (1)
              {
                v13 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_43;
                if (v13 >= v39)
                  goto LABEL_36;
                v27 = v40[v13];
                ++v28;
                if (v27)
                  goto LABEL_33;
              }
            }
            v13 = v28;
          }
        }
LABEL_33:
        v11 = (v27 - 1) & v27;
        v25 = __clz(__rbit64(v27)) + (v13 << 6);
      }
      v33 = 8 * v25;
      v34 = *(void **)(*(_QWORD *)(v5 + 48) + v33);
      v35 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v33);
      if ((v41 & 1) == 0)
      {
        v36 = v34;
        swift_retain();
      }
      v14 = *(_QWORD *)(v8 + 40);
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v17 = v16;
      Hasher.init(_seed:)(v42, v14);
      String.hash(into:)(v42, v15, v17);
      v18 = Hasher._finalize()();
      swift_bridgeObjectRelease(v17);
      v19 = -1 << *(_BYTE *)(v8 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v21 == v30;
          if (v21 == v30)
            v21 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v21);
        }
        while (v32 == -1);
        v22 = __clz(__rbit64(~v32)) + (v21 << 6);
      }
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v23 = 8 * v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v23) = v34;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v23) = v35;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_100080508(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10006922C(&qword_10064DB60);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_100080810(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  uint64_t v51;
  char v52;
  _QWORD v53[9];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10006922C((uint64_t *)&unk_10064D960);
  v52 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v51 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v49 = v3;
  v50 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v24 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v25 = v24 | (v13 << 6);
      goto LABEL_25;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v26 >= v50)
      break;
    v27 = (_QWORD *)(v5 + 64);
    v28 = *(_QWORD *)(v51 + 8 * v26);
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v50)
        goto LABEL_37;
      v28 = *(_QWORD *)(v51 + 8 * v13);
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v50)
        {
LABEL_37:
          swift_release(v5);
          v3 = v49;
          if ((v52 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v28 = *(_QWORD *)(v51 + 8 * v29);
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_46;
            if (v13 >= v50)
              goto LABEL_37;
            v28 = *(_QWORD *)(v51 + 8 * v13);
            ++v29;
            if (v28)
              goto LABEL_24;
          }
        }
        v13 = v29;
      }
    }
LABEL_24:
    v11 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v13 << 6);
LABEL_25:
    v30 = *(_QWORD *)(v5 + 48) + 56 * v25;
    if ((v52 & 1) != 0)
    {
      v31 = *(_OWORD *)v30;
      v32 = *(_OWORD *)(v30 + 16);
      v33 = *(_OWORD *)(v30 + 32);
      v61 = *(_QWORD *)(v30 + 48);
      v59 = v32;
      v60 = v33;
      v58 = v31;
      v34 = *(_QWORD *)(v5 + 56) + 56 * v25;
      v36 = *(_OWORD *)(v34 + 16);
      v35 = *(_OWORD *)(v34 + 32);
      v37 = *(_OWORD *)v34;
      v57 = *(_QWORD *)(v34 + 48);
      v55 = v36;
      v56 = v35;
      v54 = v37;
    }
    else
    {
      sub_1000A0110(v30, (uint64_t)&v58);
      sub_1000A0110(*(_QWORD *)(v5 + 56) + 56 * v25, (uint64_t)&v54);
    }
    Hasher.init(_seed:)(v53, *(_QWORD *)(v8 + 40));
    v38 = v60;
    v39 = v61;
    sub_10007E7A0((_QWORD *)&v58 + 1, v60);
    dispatch thunk of Hashable.hash(into:)(v53, v38, v39);
    v40 = Hasher._finalize()();
    v41 = -1 << *(_BYTE *)(v8 + 32);
    v42 = v40 & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v12 + 8 * (v42 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v12 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v12 + 8 * v43);
      }
      while (v47 == -1);
      v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = 56 * v14;
    v16 = *(_QWORD *)(v8 + 48) + v15;
    v17 = v58;
    v18 = v59;
    v19 = v60;
    *(_QWORD *)(v16 + 48) = v61;
    *(_OWORD *)(v16 + 16) = v18;
    *(_OWORD *)(v16 + 32) = v19;
    *(_OWORD *)v16 = v17;
    v20 = *(_QWORD *)(v8 + 56) + v15;
    v21 = v54;
    v22 = v55;
    v23 = v56;
    *(_QWORD *)(v20 + 48) = v57;
    *(_OWORD *)(v20 + 16) = v22;
    *(_OWORD *)(v20 + 32) = v23;
    *(_OWORD *)v20 = v21;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v49;
  v27 = (_QWORD *)(v5 + 64);
  if ((v52 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v48 = 1 << *(_BYTE *)(v5 + 32);
  if (v48 >= 64)
    bzero(v27, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v48;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_100080BB8(uint64_t a1, uint64_t a2)
{
  sub_1002E2720(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, &qword_10064D9B8, (unint64_t *)&unk_10064D9C0, (uint64_t)&protocol conformance descriptor for UTType);
}

void sub_100080BDC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t i;
  int v53;
  uint64_t v54;

  v3 = v2;
  updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo(0);
  v51 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v54 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10006922C(&qword_10064D9D8);
  v53 = a2;
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v12, a1, a2);
  v14 = v13;
  if (*(_QWORD *)(v12 + 16))
  {
    v15 = 1 << *(_BYTE *)(v12 + 32);
    v16 = *(_QWORD *)(v12 + 64);
    v50 = (_QWORD *)(v12 + 64);
    if (v15 < 64)
      v17 = ~(-1 << v15);
    else
      v17 = -1;
    v18 = v17 & v16;
    v48 = v2;
    v49 = (unint64_t)(v15 + 63) >> 6;
    v19 = v13 + 64;
    v20 = swift_retain(v12);
    v21 = 0;
    v22 = v12;
    for (i = v12; ; v22 = i)
    {
      if (v18)
      {
        v24 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v25 = v24 | (v21 << 6);
      }
      else
      {
        v26 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        if (v26 >= v49)
        {
          swift_release(v22);
          v3 = v48;
          v27 = v50;
          if ((v53 & 1) == 0)
            goto LABEL_41;
LABEL_38:
          v46 = 1 << *(_BYTE *)(i + 32);
          if (v46 >= 64)
            bzero(v27, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v27 = -1 << v46;
          v45 = i;
          *(_QWORD *)(i + 16) = 0;
          goto LABEL_44;
        }
        v27 = v50;
        v28 = v50[v26];
        ++v21;
        if (!v28)
        {
          v21 = v26 + 1;
          if (v26 + 1 >= v49)
            goto LABEL_37;
          v28 = v50[v21];
          if (!v28)
          {
            v29 = v26 + 2;
            if (v29 >= v49)
            {
LABEL_37:
              swift_release(v22);
              v3 = v48;
              if ((v53 & 1) == 0)
              {
LABEL_41:
                v45 = i;
                goto LABEL_44;
              }
              goto LABEL_38;
            }
            v28 = v50[v29];
            if (!v28)
            {
              while (1)
              {
                v21 = v29 + 1;
                if (__OFADD__(v29, 1))
                  break;
                if (v21 >= v49)
                  goto LABEL_37;
                v28 = v50[v21];
                ++v29;
                if (v28)
                  goto LABEL_23;
              }
LABEL_46:
              __break(1u);
              return;
            }
            v21 = v29;
          }
        }
LABEL_23:
        v18 = (v28 - 1) & v28;
        v25 = __clz(__rbit64(v28)) + (v21 << 6);
      }
      v30 = *(_QWORD *)(v9 + 72);
      v31 = *(_QWORD *)(v22 + 48) + v30 * v25;
      if ((v53 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 32))(v11, v31, v8, v20);
        v32 = *(_QWORD *)(v22 + 56);
        v33 = *(_QWORD *)(v51 + 72);
        sub_1001D0788(v32 + v33 * v25, v54, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v11, v31, v8, v20);
        v34 = *(_QWORD *)(v22 + 56);
        v33 = *(_QWORD *)(v51 + 72);
        sub_10007C6DC(v34 + v33 * v25, v54, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
      }
      v35 = *(_QWORD *)(v14 + 40);
      v36 = sub_10005A360((unint64_t *)&unk_1006443A0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
      v38 = -1 << *(_BYTE *)(v14 + 32);
      v39 = v37 & ~v38;
      v40 = v39 >> 6;
      if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
      {
        v23 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v41 = 0;
        v42 = (unint64_t)(63 - v38) >> 6;
        do
        {
          if (++v40 == v42 && (v41 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v43 = v40 == v42;
          if (v40 == v42)
            v40 = 0;
          v41 |= v43;
          v44 = *(_QWORD *)(v19 + 8 * v40);
        }
        while (v44 == -1);
        v23 = __clz(__rbit64(~v44)) + (v40 << 6);
      }
      *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v30 * v23, v11, v8);
      sub_1001D0788(v54, *(_QWORD *)(v14 + 56) + v33 * v23, type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
      ++*(_QWORD *)(v14 + 16);
    }
  }
  v45 = v12;
LABEL_44:
  swift_release(v45);
  *v3 = v14;
}

uint64_t sub_100080FF8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  _QWORD *v16;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v16 = _swiftEmptyArrayStorage;
  result = sub_100154DE8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v3 = v16;
      do
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v6 = sub_10006922C((uint64_t *)&unk_100655C00);
        swift_dynamicCast(v15, &v14, v6, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_100154DE8(0, v3[2] + 1, 1);
          v3 = v16;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_100154DE8(v7 > 1, v8 + 1, 1);
          v3 = v16;
        }
        ++v5;
        v3[2] = v8 + 1;
        sub_100079B28(v15, &v3[4 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      v3 = v16;
      do
      {
        v14 = *v9;
        swift_unknownObjectRetain(v14);
        v10 = sub_10006922C((uint64_t *)&unk_100655C00);
        swift_dynamicCast(v15, &v14, v10, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_100154DE8(0, v3[2] + 1, 1);
          v3 = v16;
        }
        v12 = v3[2];
        v11 = v3[3];
        if (v12 >= v11 >> 1)
        {
          sub_100154DE8(v11 > 1, v12 + 1, 1);
          v3 = v16;
        }
        v3[2] = v12 + 1;
        sub_100079B28(v15, &v3[4 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100081234(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v26 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = 0;
        do
        {
          v5 = v4 + 1;
          v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
          v24 = v6;
          v7 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
          v8 = v6;
          v9 = sub_10006922C(&qword_100655B90);
          swift_dynamicCast(&v25, &v24, v7, v9, 7);
          v10 = v25;
          swift_unknownObjectRelease(v8);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v12 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
          v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
          specialized ContiguousArray._endMutation()(v13);
          v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        v14 = (void **)(a1 + 32);
        v15 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        do
        {
          v16 = *v14++;
          v24 = v16;
          v17 = v16;
          v18 = sub_10006922C(&qword_100655B90);
          swift_dynamicCast(&v25, &v24, v15, v18, 7);
          v19 = v25;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
          v21 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
          v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
          specialized ContiguousArray._endMutation()(v22);
          --v2;
        }
        while (v2);
      }
      return v26;
    }
  }
  return result;
}

_QWORD *sub_100081440(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2)
    return _swiftEmptyArrayStorage;
  result = (_QWORD *)sub_1000817AC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        v7 = _swiftEmptyArrayStorage[2];
        v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1)
          sub_1000817AC(v6 > 1, v7 + 1, 1);
        ++v4;
        _swiftEmptyArrayStorage[2] = v7 + 1;
        v8 = &_swiftEmptyArrayStorage[2 * v7];
        v8[4] = v5;
        v8[5] = &off_1005C2AB0;
      }
      while (v2 != v4);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      v10 = _swiftEmptyArrayStorage[2];
      v11 = 2 * v10;
      do
      {
        v12 = *v9;
        v13 = _swiftEmptyArrayStorage[3];
        swift_retain();
        if (v10 >= v13 >> 1)
          sub_1000817AC(v13 > 1, v10 + 1, 1);
        _swiftEmptyArrayStorage[2] = v10 + 1;
        v14 = &_swiftEmptyArrayStorage[v11];
        v14[4] = v12;
        v14[5] = &off_1005C2AB0;
        v11 += 2;
        ++v9;
        ++v10;
        --v2;
      }
      while (v2);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000815E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  _QWORD *v17;

  v2 = type metadata accessor for DOCFileOperation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v17 = _swiftEmptyArrayStorage;
    sub_100154E94(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_10007C6DC(v8, (uint64_t)v5, type metadata accessor for DOCFileOperation);
      v17 = v7;
      v11 = v7[2];
      v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_100154E94(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = &protocol witness table for DOCFileOperation;
      v12 = sub_10006CBAC(&v14);
      sub_10007C6DC((uint64_t)v5, (uint64_t)v12, type metadata accessor for DOCFileOperation);
      v7[2] = v11 + 1;
      sub_1000E85C4(&v14, (uint64_t)&v7[5 * v11 + 4]);
      sub_10007C720((uint64_t)v5, type metadata accessor for DOCFileOperation);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_100081748(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100009C94(a1, a2, a3, (_QWORD *)*v3, &qword_100644A38, (uint64_t *)&unk_100644A40);
  *v3 = result;
  return result;
}

uint64_t sub_100081774(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000086E4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100081790(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007F3C4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000817AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10007F54C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000817C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10002DF60(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000817E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100017118(a1, a2, a3, *v3, &qword_100644A78);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100081810(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100017118(a1, a2, a3, *v3, &qword_100644C28);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10008183C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000290D8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100081858(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000206E8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100081874(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100157B8C(a1, a2, a3, (_QWORD *)*v3, &qword_100644C58, (uint64_t (*)(_QWORD))&type metadata accessor for SiriVocabulary.DynamicTerm);
  *v3 = result;
  return result;
}

uint64_t sub_1000818A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

_QWORD *sub_10008190C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100153BF4(a1, a2, a3, a4, &qword_100644918, (uint64_t *)&unk_100644920);
}

_QWORD *sub_100081920(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644AA8);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100081C90(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100081A44(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10001B558(a1, a2, a3, a4, &qword_100644C38);
}

_QWORD *sub_100081A50(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100643CC0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100081E84(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100081B5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100655BA0, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_100081B70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000697F4(a1, a2, a3, a4, &qword_100644A80, type metadata accessor for DOCFileOperation);
}

_QWORD *sub_100081B84(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10006922C(&qword_100644960);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100082078(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100081C90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_10006922C(&qword_100644AB0);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100081D9C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100081E84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100081F74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 16 * a1 + 32;
    v8 = a3 + 16 * v5;
    if (v7 >= v8 || v7 + 16 * v5 <= a3)
    {
      sub_10006922C(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_100082078(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100082160(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100082278(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10007ED1C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100163CAC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100163CAC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

void sub_10008230C(uint64_t a1, unint64_t i, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD v26[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_13;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100082AE0(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1000CD5C8();
      goto LABEL_13;
    }
    sub_100083044(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v26, *(_QWORD *)(*v3 + 40));
  Task.hash(into:)(v26, a1, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  i = v10 & ~v11;
  v12 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * i);
    v14 = swift_retain();
    v15 = static Task.== infix(_:_:)(v14);
    swift_release(v13);
    if ((v15 & 1) != 0)
      goto LABEL_16;
    v16 = ~v11;
    for (i = (i + 1) & v16; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v16)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * i);
      v18 = swift_retain();
      v19 = static Task.== infix(_:_:)(v18);
      swift_release(v17);
      if ((v19 & 1) != 0)
        goto LABEL_16;
    }
  }
LABEL_13:
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (i >> 6) + 56) |= 1 << i;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * i) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (!v22)
  {
    *(_QWORD *)(v20 + 16) = v23;
    return;
  }
  __break(1u);
LABEL_16:
  v24 = sub_10006922C(&qword_1006418C0);
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

void sub_100082510(__int128 *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  id v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1000CACDC(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1000CD90C();
      goto LABEL_12;
    }
    sub_1000CF35C(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v34, *(_QWORD *)(*v3 + 40));
  v10 = *((_QWORD *)a1 + 4);
  v11 = *((_QWORD *)a1 + 6);
  sub_10007E7A0((_QWORD *)a1 + 1, v10);
  dispatch thunk of Hashable.hash(into:)(v34, v10, v11);
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v12 & ~v13;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      sub_1000A0110(*(_QWORD *)(v9 + 48) + 56 * a2, (uint64_t)&v30);
      Hasher.init(_seed:)(v34, 0);
      v15 = v32;
      v16 = v33;
      sub_10007E7A0(v31, v32);
      dispatch thunk of Hashable.hash(into:)(v34, v15, v16);
      v17 = Hasher._finalize()();
      Hasher.init(_seed:)(v34, 0);
      v18 = *((_QWORD *)a1 + 4);
      v19 = *((_QWORD *)a1 + 6);
      sub_10007E7A0((_QWORD *)a1 + 1, v18);
      dispatch thunk of Hashable.hash(into:)(v34, v18, v19);
      v20 = Hasher._finalize()();
      sub_1000A00DC(&v30);
      if (v17 == v20)
        goto LABEL_15;
      a2 = (a2 + 1) & v14;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v22 = *(_QWORD *)(v21 + 48) + 56 * a2;
  v23 = *a1;
  v24 = a1[1];
  v25 = a1[2];
  *(_QWORD *)(v22 + 48) = *((_QWORD *)a1 + 6);
  *(_OWORD *)(v22 + 16) = v24;
  *(_OWORD *)(v22 + 32) = v25;
  *(_OWORD *)v22 = v23;
  v26 = *(_QWORD *)(v21 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v21 + 16) = v28;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCIdentityHashableLocation);
  __break(1u);
}

void *sub_100082738(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _QWORD v15[9];

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_1000CA96C(v8);
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1000CF020(v8);
LABEL_8:
      Hasher.init(_seed:)(v15, *(_QWORD *)(*(_QWORD *)v3 + 40));
      __asm { BR              X10 }
    }
    result = sub_1000CD77C();
  }
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x100082AB8);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

void sub_100082AD4(uint64_t a1)
{
  sub_10004A0D8(a1, &qword_100653160);
}

void sub_100082AE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10006922C(&qword_1006418C8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v29 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v16 >= v10)
          goto LABEL_36;
        v17 = v29[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v10)
            goto LABEL_36;
          v17 = v29[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v10)
              goto LABEL_36;
            v17 = v29[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v28 = 1 << *(_BYTE *)(v3 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v17 = v29[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v17 = v29[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_26;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_26:
        v9 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
      Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
      Task.hash(into:)(v30, v19, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
      v20 = Hasher._finalize()();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = v20 & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100082DD0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  __n128 v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  Swift::Int v22;
  id v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10006922C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v32 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  v14 = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_27;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v19 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v12)
        goto LABEL_36;
      v20 = *(_QWORD *)(v9 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v12)
          goto LABEL_36;
        v20 = *(_QWORD *)(v9 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_26:
    v11 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_27:
    v22 = *(_QWORD *)(v7 + 40);
    v23 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    v24 = NSObject._rawHashValue(seed:)(v22);
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v27);
      }
      while (v31 == -1);
      v16 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v12)
  {
LABEL_36:
    swift_release_n(v4, 2, v14);
    v3 = v32;
    goto LABEL_38;
  }
  v20 = *(_QWORD *)(v9 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100083044(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  _QWORD v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10006922C(&qword_1006418C8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v29 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  v12 = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v29)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v29)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v29)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    swift_retain();
    Task.hash(into:)(v30, v20, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v29)
  {
LABEL_36:
    swift_release_n(v3, 2, v12);
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v29)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_100083308()
{
  uint64_t result;

  sub_10015E0B8();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000019, 0x8000000100512330, 0x73736572676F7250, 0xEA00000000004955);
  qword_1006726B0 = result;
  return result;
}

unint64_t sub_100083368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064C3A0;
  if (!qword_10064C3A0)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_10064C3A0);
  }
  return result;
}

uint64_t sub_1000833A4()
{
  return sub_10005A360((unint64_t *)&unk_100641740, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D5204);
}

void type metadata accessor for FPAction(uint64_t a1)
{
  sub_1000799BC(a1, &qword_1006415B0, (uint64_t)&unk_1005C19F0);
}

void sub_1000833E4(uint64_t a1)
{
  uint64_t v1;

  sub_1000833EC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1000833EC(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

uint64_t sub_100083450(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_10004F2F0(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100083490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006448A0;
  if (!qword_1006448A0)
  {
    v1 = objc_opt_self(UIMenu);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006448A0);
  }
  return result;
}

UIFontTextStyle sub_1000834CC()
{
  qword_100654AC0 = (uint64_t)UIFontTextStyleSubheadline;
  qword_100654AC8 = *(_QWORD *)&UIFontWeightSemibold;
  qword_100654AD0 = 1;
  return UIFontTextStyleSubheadline;
}

uint64_t sub_100083500(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_10004F2F0(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100083540(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_1000835B4(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_10004F2F0(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for DOCTab(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641598, (uint64_t)&unk_1005C1928);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1000799BC(a1, &qword_1006415A8, (uint64_t)&unk_1005C19C8);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641588, (uint64_t)&unk_1005C18D8);
}

void sub_100083698()
{
  uint64_t v0;

  sub_1000836A0(*(_QWORD *)(v0 + 16));
}

void sub_1000836A0(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v2, "postNotificationName:object:", CFSTR("DOCFullDocumentManagerViewControllerDidFinishLoadingNotificationName"), a1);

}

void sub_100083760(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  __objc2_prot *v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v3 = objc_msgSend(v1, "fullDocumentManagerDelegate");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "fullDocumentManagerDidFinishGatheringItemsAndThumbnails:", v1);
    swift_unknownObjectRelease(v4);
  }
  v5 = objc_msgSend(v1, "delegate");
  if (v5)
  {
    v6 = v5;
    v13 = &OBJC_PROTOCOL___DOCFullDocumentManagerViewControllerDelegate;
    v7 = (void *)swift_dynamicCastObjCProtocolConditional(v5, 1, &v13);
    if (v7)
      objc_msgSend(v7, "fullDocumentManagerDidFinishGatheringItemsAndThumbnails:", v1);
    swift_unknownObjectRelease(v6);
  }
  v8 = (void *)objc_opt_self(DOCUISession);
  v9 = swift_allocObject(&unk_1005CA0A0, 24, 7);
  *(_QWORD *)(v9 + 16) = a1;
  aBlock[4] = sub_100083698;
  v15 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CA0B8;
  v10 = _Block_copy(aBlock);
  v11 = v15;
  v12 = a1;
  swift_release(v11);
  objc_msgSend(v8, "performAfterCATransactionCommits:", v10);
  _Block_release(v10);
}

uint64_t sub_1000838AC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F2F0(0, (unint64_t *)&unk_1006443B0, DOCUserInterfaceStateStore_ptr);
  v7 = objc_msgSend(v1, "configuration");
  v8 = static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)(v7, a1, 7);

  v10 = Logger.UI.unsafeMutableAddressor(v9);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v10, v3);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v21 = v15;
    *(_DWORD *)v14 = 136315394;
    v20 = sub_1000544FC(0xD000000000000027, 0x8000000100510D90, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    *(_WORD *)(v14 + 12) = 2080;
    LOBYTE(v20) = v8;
    v16 = String.init<A>(describing:)(&v20, &type metadata for DOCItemGroupingBehavior);
    v18 = v17;
    v20 = sub_1000544FC(v16, v17, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

id sub_100083AE8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  _OWORD v7[2];
  _OWORD v8[2];

  v1 = objc_msgSend(v0, "_postSearchInitializationBufferStorage");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v7, v1);
    swift_unknownObjectRelease(v2);
    sub_100079B28(v7, v8);
    sub_100079B28(v8, v7);
    v3 = sub_10004F2F0(0, &qword_1006445D0, DOCPostSearchInitializationBuffer_ptr);
    swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v3, 7);
    return (id)v6;
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)DOCPostSearchInitializationBuffer), "init");
    objc_msgSend(v0, "set_postSearchInitializationBufferStorage:", v4);
  }
  return v4;
}

uint64_t sub_100083BC4()
{
  uint64_t result;

  sub_10006922C((uint64_t *)&unk_100644190);
  result = static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)(0x656761726F7473, 0xE700000000000000);
  qword_100644168 = result;
  return result;
}

uint64_t sub_100083C0C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v2, "configuration");
  v9 = sub_1000181CC((uint64_t)v8, a1, 0);

  v11 = Logger.StateStore.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  v12 = a1;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(32, -1);
    v16 = swift_slowAlloc(96, -1);
    v29 = v9;
    v17 = v16;
    v31 = v16;
    *(_DWORD *)v15 = 136315650;
    v30 = sub_1000544FC(0xD000000000000022, 0x8000000100510DC0, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    *(_WORD *)(v15 + 12) = 2080;
    v30 = (uint64_t)a1;
    v18 = v12;
    v19 = sub_10006922C((uint64_t *)&unk_10064D870);
    v20 = String.init<A>(describing:)(&v30, v19);
    v22 = v21;
    v30 = sub_1000544FC(v20, v21, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v15 + 22) = 2080;
    v30 = v29;
    v23 = String.init<A>(describing:)(&v30, &type metadata for DOCDisplayMode);
    v25 = v24;
    v30 = sub_1000544FC(v23, v24, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s for source: %s result: %s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy(v17, 3, (char *)&type metadata for Any + 8);
    v26 = v17;
    v9 = v29;
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

void sub_100083F2C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  if (DOCDebugMenuEnabled())
  {
    v1 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v0, "presentDebugMenuForLongPress:");
    objc_msgSend(v1, "setNumberOfTouchesRequired:", 2);
    v2 = objc_msgSend(v0, "internalNavigationController");
    v3 = type metadata accessor for DOCFullDocumentManagerNavigationController();
    v4 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0), "navigationBar");

    objc_msgSend(v4, "addGestureRecognizer:", v1);
  }
}

Swift::Bool __swiftcall DOCFullDocumentManagerViewController.establishFirstResponder()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void **v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  Swift::Bool result;
  _QWORD v26[3];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (char *)objc_msgSend(v0, "dataSource");
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v6 < 2)
  {
    v7 = (void *)sub_100084874();
    if (v7)
    {
      v8 = v7;
      LOBYTE(v9) = objc_msgSend(v7, "establishFirstResponder");

      return (char)v9;
    }
    v19 = Logger.UI.unsafeMutableAddressor(0);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v19, v1);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No effective browser view controller available to establish first responder", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_19:
    LOBYTE(v9) = 0;
    return (char)v9;
  }
  if (v6 != 2)
  {
    v26[0] = v6;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, v26, &type metadata for DOCDisplayMode, &type metadata for Int);
    __break(1u);
    return result;
  }
  v10 = sub_100084874();
  v9 = (void *)v10;
  if (v10)
  {
    v11 = (void **)(v10 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
    swift_beginAccess(v10 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, v26, 0, 0);
    v12 = *v11;
    if (*v11)
    {
      v13 = type metadata accessor for DOCItemCollectionViewController(0);
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v15 = (void *)v14;
        v16 = v12;
        if (objc_msgSend(v15, "acceptsKeyboardFocus"))
        {
          v17 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
          if (v17)
          {
            v18 = v17[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarHasActiveFocus];

            if ((v18 & 1) == 0 && (objc_msgSend(v9, "establishFirstResponder") & 1) != 0)
            {

              LOBYTE(v9) = 1;
              return (char)v9;
            }
          }
        }
        *((_BYTE *)v15 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_firstItemInsertionRequestsFocus) = 1;
        objc_msgSend(v15, "performSelector:withObject:afterDelay:", "firstItemInsertionRequestsFocusExpired", 0, 1.0);

      }
    }

    goto LABEL_19;
  }
  return (char)v9;
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidLayoutSubviews()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  double Height;
  double v5;
  objc_super v6;
  CGRect v7;

  v6.super_class = (Class)DOCFullDocumentManagerViewController;
  objc_msgSendSuper2(&v6, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "pickerFilenameView");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "internalNavigationController");
    objc_msgSend(v2, "frame");
    Height = CGRectGetHeight(v7);
    objc_msgSend(v2, "safeAreaInsets");
    objc_msgSend(v3, "setAdditionalSafeAreaInsets:", 0.0, 0.0, Height - v5, 0.0);

  }
}

void sub_1000843C4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  unsigned __int8 v4;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = objc_msgSend((id)objc_opt_self(UIKeyboard), "isOnScreen");
  sub_100019648(v4 ^ 1, v1, v2, v3);
}

void sub_100084414(void *a1)
{
  uint64_t v1;

  sub_100019648(objc_msgSend(a1, "isCancelled") ^ 1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_100084458()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  char *v7;
  void **v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  __n128 v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE v19[24];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = objc_msgSend(v0, "configuration");
  v6 = objc_msgSend(v5, "sceneIdentifier");

  v7 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v6);
  v8 = (void **)&v7[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess(&v7[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v19, 1, 0);
  v9 = *v8;
  *v8 = 0;
  sub_1000AE638(v9);

  v11 = Logger.UI.unsafeMutableAddressor(v10);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v11, v1);
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.info.getter(v14);
  if (os_log_type_enabled(v13, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v15, "[Interaction] Clearing last opened item in 'clearLastOpenedItem' (lifeCycle of DOCFullDMVC)", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id sub_10008461C()
{
  return objc_msgSend((id)objc_opt_self(DOCICloudQuotaInAppMessaging), "preloadICloudQuotaLibrary");
}

uint64_t sub_100084640()
{
  uint64_t v0;

  return sub_100003DE8(*(_QWORD *)(v0 + 16));
}

void sub_100084648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10005AEDC(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_100084814()
{
  uint64_t v0;

  sub_100020844(v0);
}

uint64_t sub_100084874()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t result;
  uint64_t v35;
  _BYTE v36[24];
  _QWORD v37[3];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v36[-v7];
  v9 = (char *)objc_msgSend(v1, "dataSource");
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v10 < 2)
  {
    v11 = objc_msgSend(v1, "effectiveBrowserViewController");
    if (v11)
      return (uint64_t)v11;
    v24 = Logger.UI.unsafeMutableAddressor(0);
    v25 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v8, v24, v2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "No effective browser view controller available to establish first responder", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    return 0;
  }
  if (v10 != 2)
    goto LABEL_32;
  v13 = objc_msgSend(v1, "internalNavigationController");
  v14 = objc_msgSend(v13, "topViewController");

  if (!v14)
  {
LABEL_20:
    v29 = Logger.UI.unsafeMutableAddressor(v15);
    v30 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v6, v29, v2);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "No column view controller available to establish first responder", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  v16 = type metadata accessor for DOCColumnViewController(0);
  v17 = swift_dynamicCastClass(v14, v16);
  if (!v17)
  {

    goto LABEL_20;
  }
  v18 = (uint64_t *)(v17 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v17 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v37, 0, 0);
  v19 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    if (v19 < 0)
      v35 = *v18;
    else
      v35 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v18);
    v20 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v19);
    if (v20 >= 1)
      goto LABEL_9;
LABEL_29:

    return 0;
  }
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v20 < 1)
    goto LABEL_29;
LABEL_9:
  if (v20 == 1)
    v21 = 0;
  else
    v21 = v20 - 2;
  swift_beginAccess(v18, v36, 32, 0);
  v22 = *v18;
  if ((*v18 & 0xC000000000000001) != 0)
  {
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v22);
    goto LABEL_15;
  }
  if (v21 < *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(id *)(v22 + 8 * v21 + 32);
LABEL_15:
    v12 = v23;
    swift_endAccess(v36);

    return (uint64_t)v12;
  }
  __break(1u);
LABEL_32:
  v37[0] = v10;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, v37, &type metadata for DOCDisplayMode, &type metadata for Int);
  __break(1u);
  return result;
}

void sub_100084C3C(void *a1)
{
  void *v1;
  char *v3;
  void *v4;
  void **v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  id v11;
  id v12;
  _BYTE v13[24];

  v3 = (char *)objc_msgSend(v1, "effectiveBrowserViewController");
  if (v3)
  {
    v4 = v3;
    v5 = (void **)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v13, 0, 0);
    v6 = *v5;
    if (*v5)
    {
      v7 = type metadata accessor for DOCItemCollectionViewController(0);
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8)
      {
        v9 = (_BYTE *)v8;
        v10 = v6;

        v9[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        v11 = objc_msgSend(v9, "viewIfLoaded");
        v12 = objc_msgSend(v11, "window");

        if (v12)
          sub_1000926C8();
        sub_1001F6BB0(0xD000000000000036, (void *)0x8000000100510D00, a1);
        v4 = v10;
      }
    }

  }
}

id sub_100084DF8()
{
  uint64_t v0;

  return sub_10000A90C(*(void **)(v0 + 16));
}

void sub_100084E78()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  unsigned int v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  Class isa;
  char *v30;

  v1 = objc_msgSend(v0, "pickerFilenameView");

  if (!v1)
  {
    v2 = (char *)objc_msgSend(v0, "pickerContext");
    if (v2)
    {
      v30 = v2;
      v3 = objc_msgSend(v0, "configuration");
      v4 = objc_msgSend(v3, "forSavingDocuments");

      if (!v4)
      {
LABEL_10:

        return;
      }
      objc_allocWithZone((Class)type metadata accessor for DOCPickerFilenameView(0));
      v5 = v0;
      v6 = v30;
      v30 = sub_1000D7AA8(v6, v5);
      objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v7 = &v30[OBJC_IVAR____TtC5Files21DOCPickerFilenameView_delegate];
      *((_QWORD *)v7 + 1) = &off_1005DB060;
      swift_unknownObjectWeakAssign(v7, v5);
      v8 = objc_msgSend(v5, "view");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "addSubview:", v30);

        v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v11 = swift_allocObject(v10, 56, 7);
        *(_OWORD *)(v11 + 16) = xmmword_1004D9720;
        v12 = objc_msgSend(v30, "leadingAnchor");
        v13 = objc_msgSend(v5, "view");
        if (v13)
        {
          v14 = v13;
          v15 = objc_msgSend(v13, "leadingAnchor");

          v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
          *(_QWORD *)(v11 + 32) = v16;
          v17 = objc_msgSend(v30, "trailingAnchor");
          v18 = objc_msgSend(v5, "view");
          if (v18)
          {
            v19 = v18;
            v20 = objc_msgSend(v18, "trailingAnchor");

            v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);
            *(_QWORD *)(v11 + 40) = v21;
            v22 = objc_msgSend(v30, "bottomAnchor");
            v23 = objc_msgSend(v5, "view");
            if (v23)
            {
              v24 = v23;
              v25 = (void *)objc_opt_self(NSLayoutConstraint);
              v26 = objc_msgSend(v24, "bottomAnchor");

              v27 = objc_msgSend(v22, "constraintEqualToAnchor:", v26);
              *(_QWORD *)(v11 + 48) = v27;
              specialized Array._endMutation()(v28);
              sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
              isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v25, "activateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

              objc_msgSend(v5, "setPickerFilenameView:", v30);
              goto LABEL_10;
            }
            goto LABEL_14;
          }
LABEL_13:
          __break(1u);
LABEL_14:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_13;
    }
  }
}

void sub_100085250()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;

  v1 = v0;
  if ((objc_msgSend(v0, "isActivated") & 1) != 0)
    return;
  objc_msgSend(v0, "setIsActivated:", 1);
  v2 = objc_msgSend(v0, "internalNavigationController");
  v3 = objc_msgSend(v2, "viewControllers");

  v4 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v15 = v5;
    else
      v15 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v5);
    if (v6)
      goto LABEL_4;
LABEL_16:
    objc_msgSend(v1, "setNeedsFocusUpdate", swift_bridgeObjectRelease(v5).n128_f64[0]);
    return;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_16;
LABEL_4:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      v10 = type metadata accessor for DOCBrowserContainerController();
      v11 = swift_dynamicCastClass(v9, v10);
      if (v11)
      {
        v13 = *(_QWORD *)(v11 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(v11 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource), v12);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(1, ObjectType, v13);
      }

    }
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1000854FC(void *a1)
{
  void *v1;
  void *v2;
  int *v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;

  v2 = v1;
  v4 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
  if (v7)
  {
    v8 = v7;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v9 = a1;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {
      v11 = (char *)objc_msgSend(v2, "dataSource");
      v12 = *(id *)&v11[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

      v13 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "browseStartingPointsLocation");
      v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCBrowseStartingPointsDocumentSource()), "init");
      v15 = &v6[v4[9]];
      *(_OWORD *)v15 = 0u;
      *((_OWORD *)v15 + 1) = 0u;
      UUID.init()(v14);
      *(_QWORD *)&v6[v4[5]] = v13;
      *(_QWORD *)&v6[v4[6]] = _swiftEmptyArrayStorage;
      *(_QWORD *)&v6[v4[7]] = 0;
      *(_QWORD *)&v6[v4[8]] = v14;
      sub_1000A0490((uint64_t)v6);

      sub_10007C720((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
    }
  }
  sub_10013947C();
}

uint64_t sub_1000856A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000856A8(*(void **)(v1 + 16), a1);
}

uint64_t sub_1000856A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  id v5;
  __n128 v6;
  uint64_t result;

  v4 = sub_10006922C(&qword_100644458);
  swift_allocObject(v4, 32, 7);
  v5 = a1;
  result = NSNotification.SubscriptionsController.init(observee:)(v6);
  *a2 = result;
  return result;
}

unint64_t sub_100085700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100647AE0;
  if (!qword_100647AE0)
  {
    v1 = objc_opt_self(UICollectionViewLayoutAttributes);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100647AE0);
  }
  return result;
}

uint64_t sub_10008573C()
{
  return sub_10005A360(&qword_100641E08, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1004D831C);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641B10, (uint64_t)&unk_1005C1D48);
}

unint64_t sub_10008577C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100645BA0;
  if (!qword_100645BA0)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_1004D915C, v1);
    atomic_store(result, (unint64_t *)&qword_100645BA0);
  }
  return result;
}

unint64_t sub_1000857C4()
{
  unint64_t result;
  char v1;

  result = sub_1000857EC();
  qword_100672680 = result;
  byte_100672688 = v1 & 1;
  return result;
}

unint64_t sub_1000857EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
  v5 = v4;
  v6 = objc_allocWithZone((Class)NSUserDefaults);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithSuiteName:", v7, swift_bridgeObjectRelease(v5).n128_f64[0]);

  if (!v8)
  {
    v33 = 0u;
    v34 = 0u;
LABEL_10:
    v12 = sub_10000CB4C((uint64_t)&v33, &qword_100642730);
    goto LABEL_11;
  }
  v9 = objc_msgSend(v8, "objectForKey:", DOCTestUserDefaultsKeySelectedDisplayMode);
  if (v9)
  {
    v10 = v9;
    _bridgeAnyObjectToAny(_:)(v32, v9);
    swift_unknownObjectRelease(v10);
  }
  else
  {
    memset(v32, 0, sizeof(v32));
  }
  sub_10007EBDC((uint64_t)v32, (uint64_t)&v33);
  if (!*((_QWORD *)&v34 + 1))
    goto LABEL_10;
  v11 = sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
  v12 = swift_dynamicCast(v32, &v33, (char *)&type metadata for Any + 8, v11, 6);
  if ((v12 & 1) == 0)
  {
LABEL_11:
    v13 = 0;
    goto LABEL_12;
  }
  v13 = *(void **)&v32[0];
  v12 = (unint64_t)objc_msgSend(*(id *)&v32[0], "integerValue");
  if (v12 < 3)
  {
    v14 = v12;
    v15 = 0;
    goto LABEL_13;
  }
LABEL_12:
  v14 = 0;
  v15 = 1;
LABEL_13:
  v16 = Logger.StateStore.unsafeMutableAddressor(v12);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v16, v0);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v31 = v1;
    v21 = v20;
    v22 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v32[0] = v22;
    *(_DWORD *)v21 = 136315394;
    v30 = v13;
    *(_QWORD *)&v33 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100510E90, (uint64_t *)v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, (char *)&v33 + 8);
    *(_WORD *)(v21 + 12) = 2080;
    *(_QWORD *)&v33 = v14;
    BYTE8(v33) = v15;
    v23 = sub_10006922C(&qword_1006444D0);
    v28 = v8;
    v24 = String.init<A>(describing:)(&v33, v23);
    v29 = v0;
    v26 = v25;
    *(_QWORD *)&v33 = sub_1000544FC(v24, v25, (uint64_t *)v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, (char *)&v33 + 8);
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s stored PPT display mode override was: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v3, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v14;
}

uint64_t sub_100085B68()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _QWORD v24[2];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v1 = type metadata accessor for Logger(0);
  v2 = objc_msgSend(v0, "userActivities", __chkstk_darwin(v1));
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v4 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4);

  sub_1003399DC(v5);
  v7 = v6;
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v5).n128_u64[0];
  if (!v7)
    return 0;
  v9 = objc_msgSend(v7, "userInfo", v8);
  if (!v9)
  {
    v26 = 0u;
    v27 = 0u;
LABEL_11:

    v22 = &v26;
LABEL_12:
    sub_10007EB54((uint64_t)v22);
    return 0;
  }
  v10 = v9;
  v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v12 = (uint64_t *)DOCUserActivityFPItemKey.unsafeMutableAddressor();
  v14 = *v12;
  v13 = v12[1];
  v24[0] = v14;
  v24[1] = v13;
  swift_bridgeObjectRetain(v13);
  AnyHashable.init<A>(_:)(v24, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v11 + 16) && (v15 = sub_100067654((uint64_t)v25), (v16 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v11 + 56) + 32 * v15, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_100067748((uint64_t)v25);
  swift_bridgeObjectRelease(v11);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast(v25, &v26, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {

    return 0;
  }
  v17 = v25[0];
  v18 = v25[1];
  sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
  v19 = sub_10006922C((uint64_t *)&unk_100647C70);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
  v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  *(_QWORD *)(v20 + 32) = v21;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(v25, v20, v17, v18);
  swift_bridgeObjectRelease(v20);
  sub_1000D4C00(v17, v18);

  if (!v25[3])
  {
    v22 = (__int128 *)v25;
    goto LABEL_12;
  }
  if (swift_dynamicCast(&v26, v25, (char *)&type metadata for Any + 8, v21, 6))
    return v26;
  else
    return 0;
}

id sub_100086028()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  __int128 v36;
  __int128 v37;

  v1 = type metadata accessor for Logger(0);
  v2 = objc_msgSend(v0, "userActivities", __chkstk_darwin(v1));
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v4 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4);

  sub_100339D6C(v5);
  v7 = v6;
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v5).n128_u64[0];
  if (!v7)
    return 0;
  v9 = objc_msgSend(v7, "userInfo", v8);
  if (!v9)
  {
    v36 = 0u;
    v37 = 0u;
LABEL_11:

    v22 = &v36;
LABEL_12:
    sub_10007EB54((uint64_t)v22);
    return 0;
  }
  v10 = v9;
  v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v12 = (uint64_t *)DOCUserActivityLocationKey.unsafeMutableAddressor();
  v14 = *v12;
  v13 = v12[1];
  v33 = v14;
  v34 = v13;
  swift_bridgeObjectRetain(v13);
  AnyHashable.init<A>(_:)(&v33, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v11 + 16) && (v15 = sub_100067654((uint64_t)v35), (v16 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v11 + 56) + 32 * v15, (uint64_t)&v36);
  }
  else
  {
    v36 = 0u;
    v37 = 0u;
  }
  sub_100067748((uint64_t)v35);
  swift_bridgeObjectRelease(v11);
  if (!*((_QWORD *)&v37 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast(v35, &v36, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {

    return 0;
  }
  v18 = v35[0];
  v17 = v35[1];
  sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
  v19 = sub_10006922C((uint64_t *)&unk_100647C70);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
  v21 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  *(_QWORD *)(v20 + 32) = v21;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(v35, v20, v18, v17);
  swift_bridgeObjectRelease(v20);
  if (!v35[3])
  {

    sub_1000D4C00(v18, v17);
    v22 = (__int128 *)v35;
    goto LABEL_12;
  }
  if ((swift_dynamicCast(&v36, v35, (char *)&type metadata for Any + 8, v21, 6) & 1) != 0)
  {
    v23 = (id)v36;
    v24 = objc_msgSend(v7, "userInfo");
    if (v24)
    {
      v25 = v24;
      v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v24, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v27 = (uint64_t *)DOCUserActivityTagNameKey.unsafeMutableAddressor();
      v29 = *v27;
      v28 = v27[1];
      v33 = v29;
      v34 = v28;
      swift_bridgeObjectRetain(v28);
      AnyHashable.init<A>(_:)(&v33, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v26 + 16) && (v30 = sub_100067654((uint64_t)v35), (v31 & 1) != 0))
      {
        sub_100069BD8(*(_QWORD *)(v26 + 56) + 32 * v30, (uint64_t)&v36);
      }
      else
      {
        v36 = 0u;
        v37 = 0u;
      }

      sub_1000D4C00(v18, v17);
      sub_100067748((uint64_t)v35);
      swift_bridgeObjectRelease(v26);
      if (*((_QWORD *)&v37 + 1))
      {
        swift_dynamicCast(v35, &v36, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        return v23;
      }
    }
    else
    {

      sub_1000D4C00(v18, v17);
      v36 = 0u;
      v37 = 0u;
    }
    sub_10007EB54((uint64_t)&v36);
    return v23;
  }

  sub_1000D4C00(v18, v17);
  return 0;
}

uint64_t sub_100086620(uint64_t a1, uint64_t a2)
{
  return sub_100087314(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10008662C()
{
  return sub_10005A360(&qword_100641D00, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1004D8430);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641B08, (uint64_t)&unk_1005C1D20);
}

char *sub_10008666C()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = objc_msgSend(v0, "navigationBar");
  v2 = (char *)objc_msgSend(v1, "topItem");

  if (v2)
  {
    v3 = objc_msgSend(v2, "searchController");

    if (!v3)
      return 0;
    v4 = type metadata accessor for DOCSearchController();
    v5 = (char *)swift_dynamicCastClass(v3, v4);
    v2 = v5;
    if (!v5)
    {

      return v2;
    }
    if (!objc_msgSend(v5, "isActive"))
    {
LABEL_10:

      return 0;
    }
    if (objc_msgSend(v2, "isActive"))
    {
      v6 = *(char **)&v2[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
      v7 = objc_msgSend(v6, "viewIfLoaded");
      if (v7)
      {
        v8 = v7;
        v9 = objc_msgSend(v7, "isHidden");

        if ((v9 & 1) == 0)
        {
          v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
          if ((unint64_t)v10 >> 62)
          {
            if (v10 < 0)
              v12 = v10;
            else
              v12 = v10 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v10);
            v13 = _CocoaArrayWrapper.endIndex.getter(v12);
            swift_bridgeObjectRelease(v10);
            if (v13 > 0)
              goto LABEL_10;
          }
          else if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
          {
            goto LABEL_10;
          }
        }
      }
    }
  }
  return v2;
}

uint64_t sub_1000867EC()
{
  return sub_10005A360(&qword_100641E58, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1004D76C4);
}

id sub_100086818(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = 0;
  v7 = objc_msgSend(v3, "initWithBundleIdentifier:allowPlaceholder:error:", v6, a3 & 1, &v12);

  v8 = v12;
  if (v7)
  {
    v9 = v12;
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }
  return v7;
}

id sub_1000868F0()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, "representedTag");
  if (!result)
  {
    if (objc_msgSend(v0, "isRoot"))
      return objc_msgSend(v0, "sourceIdentifier");
    else
      return objc_msgSend(v0, "fileProviderItem");
  }
  return result;
}

void sub_100086984(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u)

}

void sub_100086998(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    sub_100086984(a1, a2);
}

NSString sub_100086AD8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100672700 = (uint64_t)result;
  return result;
}

NSString sub_100086B0C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100672708 = (uint64_t)result;
  return result;
}

NSString sub_100086B40()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100672718 = (uint64_t)result;
  return result;
}

NSString sub_100086B74()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews = (uint64_t)result;
  return result;
}

NSString sub_100086BA8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100672728 = (uint64_t)result;
  return result;
}

void type metadata accessor for FPProviderDomainID(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641570, (uint64_t)&unk_1005C1810);
}

unint64_t sub_100086BF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006456D0;
  if (!qword_1006456D0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006456D0);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641B98, (uint64_t)&unk_1005C1FB0);
}

void sub_100086C88(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  id v11;
  void *v12;
  _QWORD *v13;
  char v14;
  Class isa;

  v4 = a1[2];
  if (!v4
    || v4 == 1
    && a3
    && ((v8 = a1[4], v9 = a1[5], v8 == a2) ? (v10 = v9 == a3) : (v10 = 0),
        v10 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, a2, a3, 0) & 1) != 0))
  {
    objc_msgSend(v3, "set_alternateLargeTitles:", 0);
  }
  else
  {
    v11 = objc_msgSend(v3, "_alternateLargeTitles");
    if (v11)
    {
      v12 = v11;
      v13 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for String);

    }
    else
    {
      v13 = _swiftEmptyArrayStorage;
    }
    v14 = sub_1000882D8(a1, v13);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "set_alternateLargeTitles:", isa);

    }
  }
}

void sub_100086DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  id v12;

  v4 = UINavigationItem.renameDelegate.getter();
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for DOCItemCollectionViewController(0);
    v12 = (id)swift_dynamicCastClass(v5, v6);
    if (v12)
    {
      if (a1)
        goto LABEL_4;
LABEL_12:
      v8 = 0;
      if (v12)
        goto LABEL_7;
LABEL_13:
      if (!v8)
        goto LABEL_15;
LABEL_14:
      UINavigationItem.renameDelegate.setter(a1, a2);

      return;
    }
    swift_unknownObjectRelease(v5);
  }
  v12 = 0;
  if (!a1)
    goto LABEL_12;
LABEL_4:
  v7 = type metadata accessor for DOCItemCollectionViewController(0);
  v8 = (void *)swift_dynamicCastClass(a1, v7);
  if (v8)
    swift_unknownObjectRetain(a1);
  if (!v12)
    goto LABEL_13;
LABEL_7:
  if (!v8)
    goto LABEL_14;
  type metadata accessor for DOCItemCollectionViewController(0);
  v9 = v8;
  v10 = v12;
  v11 = static NSObject.== infix(_:_:)(v10, v9);

  if ((v11 & 1) == 0)
    goto LABEL_14;

LABEL_15:
  swift_unknownObjectRelease(a1);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641B48, (uint64_t)&unk_1005C1E38);
}

unint64_t sub_100086F94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649C20;
  if (!qword_100649C20)
  {
    v1 = objc_opt_self(DOCConfiguration);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649C20);
  }
  return result;
}

uint64_t sub_100087074(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t result;
  id v14;
  id v15;
  unsigned int v16;

  if (!objc_msgSend(v1, "forSavingDocuments"))
    return 1;
  v3 = objc_msgSend(a1, "sourceIdentifier");
  v4 = DOCDocumentSourceIdentifierRecentDocuments;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);

    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    result = 0;
    if ((v12 & 1) != 0)
      return result;
    v14 = objc_msgSend(a1, "node");
    if (!v14)
      return 1;
    v15 = v14;
    v16 = objc_msgSend(v14, "isFolder");
    swift_unknownObjectRelease(v15);
    if (v16)
      return 1;
  }
  return 0;
}

uint64_t sub_100087190(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  Class isa;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  if (a2 && (v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove)) != 0)
  {
    swift_bridgeObjectRetain(v7);
  }
  else
  {
    swift_bridgeObjectRelease(0);
    v7 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v10 = v7;
    else
      v10 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v7);
    if (v11 >= 1)
      goto LABEL_7;
  }
  else if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_7:
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v7);
    v9 = objc_msgSend(v6, "canItems:performAction:fileProviderDomain:", isa, objc_msgSend(v6, "userActionForConfiguration:", v3), a1);

    goto LABEL_13;
  }
  swift_bridgeObjectRelease(v7);
  v9 = 1;
LABEL_13:
  if (objc_msgSend(v3, "forPickingFoldersOnly"))
    v12 = objc_msgSend(a1, "supportsPickingFolders");
  else
    v12 = 1;

  return v9 & v12;
}

uint64_t sub_100087314(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641550, (uint64_t)&unk_1005C1778);
}

uint64_t sub_1000873BC()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v6, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10007EBDC((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_10006922C(&qword_10064F390);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_10007EB54((uint64_t)v7);
    return 0;
  }
}

uint64_t sub_1000874A8(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = sub_10006922C((uint64_t *)&unk_100643490);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100087534(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

void type metadata accessor for FPItemsOrigin(uint64_t a1)
{
  sub_1000799BC(a1, &qword_1006414A0, (uint64_t)&unk_1005C12F8);
}

void sub_100087558(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, id);
  id v7;

  v6 = *(void (**)(uint64_t, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, v7);
  swift_release(v5);

}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641B00, (uint64_t)&unk_1005C1CF8);
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1000799BC(a1, &qword_100641528, (uint64_t)&unk_1005C1660);
}

uint64_t sub_1000875E0(uint64_t a1, uint64_t a2)
{
  return sub_100045810(a1, a2, (unint64_t *)&qword_100645B80, UIView_ptr);
}

void sub_1000875F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int i;
  uint64_t v12;
  uint64_t v13;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = a1;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v2 < 0)
    v13 = v2;
  else
    v13 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v2);
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v2);
    if (v10 < 0)
      goto LABEL_36;
    swift_bridgeObjectRetain(v2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    for (i = 0; i != v7; ++i)
    {
      sub_10006922C((uint64_t *)&unk_1006424B0);
      _ArrayBuffer._typeCheckSlowPath(_:)(i);
    }
  }
  if (v4)
  {
    if (v2 < 0)
      v12 = v2;
    else
      v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    _CocoaArrayWrapper.subscript.getter(0, v7, v12);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
}

