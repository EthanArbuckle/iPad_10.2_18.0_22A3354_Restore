id sub_1004229D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AwardIntentDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AwardIntentDataProvider()
{
  return objc_opt_self(_TtC10FitnessApp23AwardIntentDataProvider);
}

ValueMetadata *type metadata accessor for AwardEntityQuery()
{
  return &type metadata for AwardEntityQuery;
}

uint64_t sub_100422A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  dispatch_group_leave(*(dispatch_group_t *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup));
  v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24);
  v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 32);
  sub_100016804((_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider), v10);
  return dispatch thunk of AAUIAwardsDataProviding.remove(observer:)(v8, a8, v10, v11);
}

void sub_100422AD0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100147830(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100422B38(v4);
  *a1 = v2;
}

void sub_100422B38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  Swift::Int v70;
  const char *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  void *v91;
  uint64_t *v92;
  void *v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  uint64_t v99;
  char *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  void *v114;
  id v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t);
  void *v135;
  id v136;
  id v137;
  uint64_t v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  CHWorkoutDetailHeartRateTableViewCell *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  CHWorkoutDetailHeartRateTableViewCell *v149;
  void *v150;
  id v151;
  id v152;
  uint64_t v153;
  CHWorkoutDetailHeartRateTableViewCell *v154;
  CHWorkoutDetailHeartRateTableViewCell *v155;
  const char *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  SEL v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  void (*v172)(char *, uint64_t, uint64_t, uint64_t);
  void **v173;
  void (*v174)(char *, uint64_t);
  void *v175;
  void *v176;
  void *v177;
  void (*v178)(char *, uint64_t, uint64_t, uint64_t);
  id v179;
  void *v180;
  id v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  id v193;
  void *v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t (*v201)(char *, uint64_t, uint64_t);
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  void (*v207)(char *, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  int v215;
  id v216;
  id v217;
  uint64_t v218;
  CHWorkoutDetailHeartRateTableViewCell *v219;
  CHWorkoutDetailHeartRateTableViewCell *v220;
  void (*v221)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v222;
  char *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  CHWorkoutDetailHeartRateTableViewCell *v229;
  void *v230;
  id v231;
  id v232;
  uint64_t v233;
  CHWorkoutDetailHeartRateTableViewCell *v234;
  CHWorkoutDetailHeartRateTableViewCell *v235;
  const char *v236;
  void *v237;
  void *v238;
  void *v239;
  void *v240;
  void *v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  SEL v245;
  id v246;
  id v247;
  id v248;
  id v249;
  id v250;
  id v251;
  uint64_t v252;
  __int128 *v253;
  uint64_t v254;
  __int128 *v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  void *v266;
  char *v267;
  void (*v268)(char *, uint64_t, uint64_t, uint64_t);
  id v269;
  void (*v270)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v271;
  id v272;
  void *v273;
  uint64_t v274;
  id v275;
  char *v276;
  void (*v277)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  id v283;
  void *v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t *v299;
  uint64_t v300;
  char *v301;
  char *v302;
  char *v303;
  uint64_t v304;
  void (*v305)(char *, uint64_t);
  char *v306;
  id v307;
  void (*v308)(char *, uint64_t, uint64_t, uint64_t);
  id v309;
  id v310;
  uint64_t v311;
  CHWorkoutDetailHeartRateTableViewCell *v312;
  CHWorkoutDetailHeartRateTableViewCell *v313;
  void *v314;
  char *v315;
  uint64_t v316;
  char *v317;
  char *v318;
  uint64_t v319;
  void (*v320)(char *, char *, uint64_t);
  id v321;
  uint64_t v322;
  unint64_t v323;
  unint64_t v324;
  char v325;
  id v326;
  id v327;
  uint64_t v328;
  CHWorkoutDetailHeartRateTableViewCell *v329;
  CHWorkoutDetailHeartRateTableViewCell *v330;
  id v331;
  uint64_t v332;
  unint64_t v333;
  unint64_t v334;
  char v335;
  uint64_t v336;
  char v337;
  SEL v338;
  id v339;
  id v340;
  id v341;
  id v342;
  id v343;
  id v344;
  SEL v345;
  id v346;
  id v347;
  id v348;
  id v349;
  id v350;
  id v351;
  unint64_t v352;
  unint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  unint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  BOOL v368;
  unint64_t v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  BOOL v378;
  uint64_t v379;
  char v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  BOOL v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unint64_t v396;
  char *v397;
  uint64_t v398;
  char *v399;
  uint64_t v400;
  unint64_t v401;
  char *v402;
  CHWorkoutDetailHeartRateTableViewCell *v403;
  uint64_t v404;
  unint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  unint64_t v409;
  SEL v410;
  id v411;
  id v412;
  id v413;
  id v414;
  id v415;
  id v416;
  uint64_t *v417;
  uint64_t v418;
  uint64_t v419;
  CHWorkoutDetailHeartRateTableViewCell *v420;
  char *v421;
  char *v422;
  Swift::Int v423;
  char *v424;
  char *v425;
  char *v426;
  char *v427;
  char *v428;
  char *v429;
  char *v430;
  char *v431;
  char *v432;
  const char *v433;
  char *v434;
  char *v435;
  char *v436;
  char *v437;
  char *v438;
  char *v439;
  void (*v440)(char *, uint64_t);
  char *v441;
  char *v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  uint64_t v446;
  char *v447;
  char *v448;
  uint64_t v449;
  char *v450;
  char *v451;
  char *v452;
  char *v453;
  char *v454;
  char *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  char *v459;
  uint64_t v460;
  char *v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  id v468;
  char *v469;
  void (*v470)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v471;
  uint64_t v472;
  unint64_t v473;
  uint64_t v474;

  v2 = v1;
  v4 = type metadata accessor for Calendar(0);
  v456 = *(_QWORD *)(v4 - 8);
  v457 = v4;
  __chkstk_darwin(v4);
  v455 = (char *)&v417 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v6);
  v453 = (char *)&v417 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v452 = (char *)&v417 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v417 - v11;
  __chkstk_darwin(v13);
  v439 = (char *)&v417 - v14;
  __chkstk_darwin(v15);
  v426 = (char *)&v417 - v16;
  __chkstk_darwin(v17);
  v427 = (char *)&v417 - v18;
  v19 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v19);
  v21 = (char *)&v417 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v461 = (char *)&v417 - v23;
  __chkstk_darwin(v24);
  v454 = (char *)&v417 - v25;
  __chkstk_darwin(v26);
  v460 = (uint64_t)&v417 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v417 - v29;
  __chkstk_darwin(v31);
  v442 = (char *)&v417 - v32;
  __chkstk_darwin(v33);
  v438 = (char *)&v417 - v34;
  __chkstk_darwin(v35);
  v37 = (char *)&v417 - v36;
  __chkstk_darwin(v38);
  v428 = (char *)&v417 - v39;
  __chkstk_darwin(v40);
  v431 = (char *)&v417 - v41;
  __chkstk_darwin(v42);
  v44 = (char *)&v417 - v43;
  __chkstk_darwin(v45);
  v430 = (char *)&v417 - v46;
  v474 = type metadata accessor for DateComponents(0);
  v466 = *(_QWORD *)(v474 - 8);
  __chkstk_darwin(v474);
  v451 = (char *)&v417 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v450 = (char *)&v417 - v49;
  __chkstk_darwin(v50);
  v435 = (char *)&v417 - v51;
  __chkstk_darwin(v52);
  v434 = (char *)&v417 - v53;
  __chkstk_darwin(v54);
  v425 = (char *)&v417 - v55;
  __chkstk_darwin(v56);
  v424 = (char *)&v417 - v57;
  v458 = type metadata accessor for Date(0);
  v465 = *(_QWORD *)(v458 - 8);
  __chkstk_darwin(v458);
  v459 = (char *)&v417 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v469 = (char *)&v417 - v60;
  __chkstk_darwin(v61);
  v445 = (char *)&v417 - v62;
  __chkstk_darwin(v63);
  v447 = (char *)&v417 - v64;
  __chkstk_darwin(v65);
  v429 = (char *)&v417 - v66;
  __chkstk_darwin(v67);
  v432 = (char *)&v417 - v68;
  v69 = a1[1];
  v70 = _minimumMergeRunLength(_:)(v69);
  if (v70 < v69)
  {
    if (v69 >= 0)
      v78 = v69;
    else
      v78 = v69 + 1;
    if (v69 < -1)
      goto LABEL_255;
    v437 = v12;
    v423 = v70;
    v417 = a1;
    if (v69 < 2)
    {
      v448 = (char *)(&_swiftEmptyArrayStorage + 1);
      if (v69 != 1)
      {
        v87 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
        v84 = (char *)&_swiftEmptyArrayStorage;
        v403 = &_swiftEmptyArrayStorage;
        if (v87 < 2)
          goto LABEL_224;
        goto LABEL_212;
      }
      v81 = 1;
      v420 = &_swiftEmptyArrayStorage;
    }
    else
    {
      v79 = v78 >> 1;
      v80 = static Array._allocateBufferUninitialized(minimumCapacity:)(v78 >> 1, &type metadata for AwardEntity);
      *(_QWORD *)(v80 + 16) = v79;
      v420 = (CHWorkoutDetailHeartRateTableViewCell *)v80;
      v448 = (char *)(v80 + 32);
      v81 = v69;
    }
    v82 = 0;
    v83 = *a1;
    v419 = *a1 + 40;
    v418 = v83 - 16;
    v84 = (char *)&_swiftEmptyArrayStorage;
    v433 = "EARNED_BY_WORKOUT";
    v464 = v21;
    v436 = v30;
    v441 = v37;
    v421 = v44;
    v85 = v466;
    v86 = v458;
    v443 = v81;
    v462 = v83;
LABEL_16:
    v88 = v82;
    v444 = v82;
    if (v82 + 1 >= v81)
    {
      v463 = v82 + 1;
      v107 = v474;
      goto LABEL_105;
    }
    v449 = v2;
    v89 = (uint64_t *)(v83 + 16 * (v82 + 1));
    v90 = *v89;
    v91 = (void *)v89[1];
    v92 = (uint64_t *)(v83 + 16 * v82);
    v94 = *v92;
    v93 = (void *)v92[1];
    v463 = v90;
    swift_retain(v90);
    v95 = v91;
    v467 = v94;
    swift_retain(v94);
    v96 = v93;
    v97 = objc_msgSend(v95, "relevantEarnedInstance");
    *(_QWORD *)&v471 = v96;
    v468 = v95;
    if (v97)
    {
      v98 = v97;
      v99 = v86;
      v100 = v84;
      v101 = objc_msgSend(v97, "earnedDateComponents");

      if (v101)
      {
        v102 = v85;
        v103 = (uint64_t)v421;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v101);

        v104 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
        v105 = v103;
        v106 = 0;
      }
      else
      {
        v104 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56);
        v102 = v85;
        v103 = (uint64_t)v421;
        v105 = (uint64_t)v421;
        v106 = 1;
      }
      v110 = v474;
      v108 = v104;
      v104((char *)v105, v106, 1, v474);
      v111 = (uint64_t)v427;
      v109 = (uint64_t)v430;
      sub_1000456B4(v103, (uint64_t)v430);
      v85 = v102;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v109, 1, v110) != 1)
      {
        v121 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 32);
        v122 = v424;
        v123 = v121(v424, v109, v110);
        v124 = v455;
        static Calendar.current.getter(v123);
        Calendar.date(from:)(v122);
        (*(void (**)(char *, uint64_t))(v456 + 8))(v124, v457);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v122, v110);
        v125 = v465;
        v86 = v99;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v465 + 48))(v111, 1, v99) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v125 + 32))(v432, v111, v99);
          v96 = (id)v471;
LABEL_27:
          v113 = objc_msgSend(v96, "relevantEarnedInstance", v417);
          v470 = v108;
          if (v113)
          {
            v114 = v113;
            v115 = objc_msgSend(v113, "earnedDateComponents");

            v116 = v21;
            if (v115)
            {
              v117 = v428;
              static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v115);

              v118 = 0;
            }
            else
            {
              v118 = 1;
              v117 = v428;
            }
            v84 = v100;
            v126 = v474;
            v470(v117, v118, 1, v474);
            v127 = (uint64_t)v117;
            v119 = (uint64_t)v431;
            sub_1000456B4(v127, (uint64_t)v431);
            v128 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v119, 1, v126);
            v120 = v429;
            if (v128 != 1)
            {
              v141 = v86;
              v142 = v425;
              v143 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 32))(v425, v119, v126);
              v144 = v455;
              static Calendar.current.getter(v143);
              v145 = v426;
              Calendar.date(from:)(v142);
              (*(void (**)(char *, uint64_t))(v456 + 8))(v144, v457);
              v146 = v142;
              v86 = v141;
              (*(void (**)(char *, uint64_t))(v85 + 8))(v146, v474);
              v147 = v465;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v465 + 48))(v145, 1, v141) != 1)
              {
                (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v120, v145, v141);
                goto LABEL_37;
              }
              v129 = (uint64_t)v145;
              v130 = (uint64_t *)&unk_100828370;
LABEL_36:
              v131 = sub_10001BE90(v129, v130);
              static Date.distantPast.getter(v131);
LABEL_37:
              v132 = v432;
              v133 = Date.compare(_:)(v120);
              v134 = *(void (**)(char *, uint64_t))(v465 + 8);
              v440 = v134;
              v134(v120, v86);
              v134(v132, v86);
              if (v133)
              {
                swift_release(v463);

                swift_release(v467);
                LODWORD(v446) = v133 == 1;
                v81 = v443;
                v21 = v116;
                v135 = v468;
              }
              else
              {
                v136 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
                v135 = v468;
                v137 = objc_msgSend(v136, "titleForAchievement:", v468);

                if (v137)
                {
                  v138 = static String._unconditionallyBridgeFromObjectiveC(_:)(v137);
                  v140 = v139;

                }
                else
                {
                  sub_10052F8FC(v135);
                  v138 = v148;
                  v140 = v149;
                }
                v150 = (void *)v471;
                v151 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
                v152 = objc_msgSend(v151, "titleForAchievement:", v150);

                if (v152)
                {
                  v153 = static String._unconditionallyBridgeFromObjectiveC(_:)(v152);
                  v155 = v154;

                }
                else
                {
                  sub_10052F8FC(v150);
                  v153 = v163;
                  v155 = (CHWorkoutDetailHeartRateTableViewCell *)v156;
                }
                v21 = v464;
                v164 = v458;
                if (v138 == v153 && v140 == v155)
                {
                  LODWORD(v446) = 0;
                  v155 = v140;
                }
                else
                {
                  LODWORD(v446) = _stringCompareWithSmolCheck(_:_:expecting:)(v138, v140, v153, v155, 1);
                }
                v85 = v466;
                v81 = v443;
                swift_bridgeObjectRelease(v140, v156, v157, v158, v159, v160, v161, v162);
                swift_bridgeObjectRelease(v155, v165, v166, v167, v168, v169, v170, v171);
                swift_release(v463);

                swift_release(v467);
                v86 = v164;
              }

              v88 = v444;
              v463 = v444 + 2;
              v2 = v449;
              v107 = v474;
              v172 = v470;
              if (v444 + 2 >= v81)
                goto LABEL_97;
              v422 = v84;
              v173 = (void **)(v419 + 16 * v444);
              v174 = v440;
              while (1)
              {
                v449 = v2;
                v175 = *v173;
                v177 = *(v173 - 3);
                v176 = *(v173 - 2);
                v467 = (uint64_t)*(v173 - 1);
                swift_retain(v467);
                v178 = v175;
                v468 = v177;
                swift_retain(v177);
                *(_QWORD *)&v471 = v176;
                v179 = objc_msgSend(v178, "relevantEarnedInstance");
                v470 = v178;
                if (!v179)
                  break;
                v180 = v179;
                v181 = objc_msgSend(v179, "earnedDateComponents");

                if (v181)
                {
                  v182 = v438;
                  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v181);

                  v183 = v182;
                  v184 = 0;
                  v185 = (uint64_t)v439;
                }
                else
                {
                  v184 = 1;
                  v185 = (uint64_t)v439;
                  v183 = v438;
                }
                v187 = v474;
                v172(v183, v184, 1, v474);
                v188 = (uint64_t)v183;
                v186 = (uint64_t)v441;
                sub_1000456B4(v188, (uint64_t)v441);
                v189 = v187;
                v190 = v466;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v466 + 48))(v186, 1, v189) == 1)
                  goto LABEL_62;
                v200 = v21;
                v201 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v190 + 32);
                v202 = v434;
                v203 = v190;
                v204 = v474;
                v205 = v201(v434, v186, v474);
                v206 = v455;
                static Calendar.current.getter(v205);
                Calendar.date(from:)(v202);
                (*(void (**)(char *, uint64_t))(v456 + 8))(v206, v457);
                v207 = *(void (**)(char *, uint64_t))(v203 + 8);
                v86 = v458;
                v207(v202, v204);
                v208 = v465;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v465 + 48))(v185, 1, v86) == 1)
                {
                  v191 = sub_10001BE90(v185, (uint64_t *)&unk_100828370);
                  v192 = v445;
                  v21 = v200;
                  v178 = v470;
                  goto LABEL_63;
                }
                (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v447, v185, v86);
                v192 = v445;
                v21 = v200;
                v178 = v470;
LABEL_64:
                v193 = objc_msgSend((id)v471, "relevantEarnedInstance");
                if (!v193)
                {
                  v199 = (uint64_t)v442;
                  v172(v442, 1, 1, v474);
                  goto LABEL_73;
                }
                v194 = v193;
                v195 = objc_msgSend(v193, "earnedDateComponents");

                v196 = (uint64_t)v436;
                if (v195)
                {
                  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v195);

                  v197 = v196;
                  v198 = 0;
                }
                else
                {
                  v197 = (uint64_t)v436;
                  v198 = 1;
                }
                v209 = v474;
                v172((char *)v197, v198, 1, v474);
                v210 = (uint64_t)v437;
                v199 = (uint64_t)v442;
                sub_1000456B4(v196, (uint64_t)v442);
                v211 = v466;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v466 + 48))(v199, 1, v209) == 1)
                {
                  v192 = v445;
                  v178 = v470;
LABEL_73:
                  v212 = sub_10001BE90(v199, &qword_100821648);
LABEL_74:
                  static Date.distantPast.getter(v212);
                  goto LABEL_75;
                }
                v221 = v172;
                v222 = v86;
                v223 = v435;
                v224 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 32))(v435, v199, v209);
                v225 = v455;
                static Calendar.current.getter(v224);
                Calendar.date(from:)(v223);
                (*(void (**)(char *, uint64_t))(v456 + 8))(v225, v457);
                v226 = v223;
                v86 = v222;
                (*(void (**)(char *, uint64_t))(v211 + 8))(v226, v209);
                v227 = v465;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v465 + 48))(v210, 1, v222) == 1)
                {
                  v212 = sub_10001BE90(v210, (uint64_t *)&unk_100828370);
                  v192 = v445;
                  v172 = v221;
                  v174 = v440;
                  v178 = v470;
                  goto LABEL_74;
                }
                v192 = v445;
                (*(void (**)(char *, uint64_t, uint64_t))(v227 + 32))(v445, v210, v222);
                v172 = v221;
                v174 = v440;
                v178 = v470;
LABEL_75:
                v213 = v447;
                v214 = Date.compare(_:)(v192);
                v174(v192, v86);
                v174(v213, v86);
                if (v214)
                {
                  swift_release(v467);

                  swift_release(v468);
                  v215 = v214 == 1;
                  v81 = v443;
                }
                else
                {
                  v216 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
                  v217 = objc_msgSend(v216, "titleForAchievement:", v178);

                  if (v217)
                  {
                    v218 = static String._unconditionallyBridgeFromObjectiveC(_:)(v217);
                    v220 = v219;

                  }
                  else
                  {
                    sub_10052F8FC(v178);
                    v218 = v228;
                    v220 = v229;
                  }
                  v230 = (void *)v471;
                  v231 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
                  v232 = objc_msgSend(v231, "titleForAchievement:", v230);

                  if (v232)
                  {
                    v233 = static String._unconditionallyBridgeFromObjectiveC(_:)(v232);
                    v235 = v234;

                  }
                  else
                  {
                    sub_10052F8FC(v230);
                    v233 = v243;
                    v235 = (CHWorkoutDetailHeartRateTableViewCell *)v236;
                  }
                  v21 = v464;
                  v244 = v458;
                  if (v218 == v233 && v220 == v235)
                  {
                    v215 = 0;
                    v235 = v220;
                  }
                  else
                  {
                    v215 = _stringCompareWithSmolCheck(_:_:expecting:)(v218, v220, v233, v235, 1);
                  }
                  v81 = v443;
                  swift_bridgeObjectRelease(v220, v236, v237, v238, v239, v240, v241, v242);
                  swift_bridgeObjectRelease(v235, v245, v246, v247, v248, v249, v250, v251);
                  swift_release(v467);

                  swift_release(v468);
                  v86 = v244;
                  v178 = v470;
                }

                v2 = v449;
                v107 = v474;
                if (((v446 ^ v215) & 1) != 0)
                {
                  v85 = v466;
LABEL_96:
                  v84 = v422;
                  v88 = v444;
LABEL_97:
                  v83 = v462;
                  if ((v446 & 1) != 0)
                  {
                    v252 = v463;
                    if (v463 < v88)
                      goto LABEL_248;
                    if (v88 < v463)
                    {
                      v253 = (__int128 *)(v418 + 16 * v463);
                      v254 = v88;
                      v255 = (__int128 *)(v462 + 16 * v88);
                      do
                      {
                        if (v254 != --v252)
                        {
                          if (!v83)
                            goto LABEL_253;
                          v256 = *v255;
                          *v255 = *v253;
                          *v253 = v256;
                        }
                        ++v254;
                        --v253;
                        ++v255;
                      }
                      while (v254 < v252);
                    }
                  }
LABEL_105:
                  if (v463 >= v81)
                  {
                    v258 = v463;
                    if (v463 < v88)
                      goto LABEL_241;
                    goto LABEL_161;
                  }
                  if (__OFSUB__(v463, v88))
                    goto LABEL_246;
                  if (v463 - v88 >= v423)
                  {
                    v258 = v463;
LABEL_160:
                    if (v258 < v88)
                      goto LABEL_241;
                    goto LABEL_161;
                  }
                  if (__OFADD__(v88, v423))
                    goto LABEL_249;
                  if (v88 + v423 >= v81)
                    v257 = v81;
                  else
                    v257 = v88 + v423;
                  if (v257 >= v88)
                  {
                    v258 = v463;
                    if (v463 == v257)
                      goto LABEL_160;
                    v422 = v84;
                    v449 = v2;
                    v259 = v418 + 16 * v463;
                    v440 = (void (*)(char *, uint64_t))v257;
                    while (2)
                    {
                      v261 = *(_OWORD *)(v83 + 16 * v258);
                      v262 = v88;
                      v446 = v259;
                      v463 = v258;
                      while (2)
                      {
                        v471 = v261;
                        v263 = v85;
                        v264 = v86;
                        v266 = *(void **)v259;
                        v265 = *(void **)(v259 + 8);
                        v467 = v261;
                        swift_retain(v261);
                        v267 = v21;
                        v268 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((id *)&v471 + 1);
                        v468 = v266;
                        swift_retain(v266);
                        v269 = v265;
                        v470 = v268;
                        *(_QWORD *)&v471 = v269;
                        v270 = v268;
                        v271 = (uint64_t)v267;
                        v272 = objc_msgSend(v270, "relevantEarnedInstance");
                        if (!v272)
                        {
                          v274 = v264;
                          v277 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v263 + 56);
                          v280 = v460;
                          v277(v460, 1, 1, v107);
                          goto LABEL_125;
                        }
                        v273 = v272;
                        v274 = v264;
                        v275 = objc_msgSend(v272, "earnedDateComponents");

                        if (v275)
                        {
                          v276 = v454;
                          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v275);

                          v277 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v263 + 56);
                          v278 = v276;
                          v279 = 0;
                        }
                        else
                        {
                          v277 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v263 + 56);
                          v276 = v454;
                          v278 = v454;
                          v279 = 1;
                        }
                        v107 = v474;
                        v277((uint64_t)v278, v279, 1, v474);
                        v281 = (uint64_t)v276;
                        v280 = v460;
                        sub_1000456B4(v281, v460);
                        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v263 + 48))(v280, 1, v107) == 1)
                        {
LABEL_125:
                          v282 = sub_10001BE90(v280, &qword_100821648);
                          goto LABEL_126;
                        }
                        v288 = v450;
                        v289 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v263 + 32))(v450, v280, v107);
                        v290 = v455;
                        static Calendar.current.getter(v289);
                        v291 = v452;
                        Calendar.date(from:)(v288);
                        v292 = v290;
                        v107 = v474;
                        (*(void (**)(char *, uint64_t))(v456 + 8))(v292, v457);
                        v293 = v288;
                        v294 = (uint64_t)v291;
                        v295 = v458;
                        (*(void (**)(char *, uint64_t))(v263 + 8))(v293, v107);
                        v296 = v465;
                        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v465 + 48))(v294, 1, v295) == 1)
                        {
                          v274 = v295;
                          v282 = sub_10001BE90(v294, (uint64_t *)&unk_100828370);
                          v271 = (uint64_t)v464;
LABEL_126:
                          static Date.distantPast.getter(v282);
                        }
                        else
                        {
                          v274 = v295;
                          (*(void (**)(char *, uint64_t, uint64_t))(v296 + 32))(v469, v294, v295);
                          v271 = (uint64_t)v464;
                        }
                        v283 = objc_msgSend((id)v471, "relevantEarnedInstance", v417);
                        if (!v283)
                        {
                          v287 = (uint64_t)v461;
                          v277((uint64_t)v461, 1, 1, v107);
                          v85 = v466;
                          goto LABEL_135;
                        }
                        v284 = v283;
                        v285 = objc_msgSend(v283, "earnedDateComponents");

                        if (v285)
                        {
                          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v285);

                          v286 = 0;
                        }
                        else
                        {
                          v286 = 1;
                        }
                        v287 = (uint64_t)v461;
                        v297 = v474;
                        v277(v271, v286, 1, v474);
                        sub_1000456B4(v271, v287);
                        v85 = v466;
                        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v466 + 48))(v287, 1, v297) == 1)
                        {
LABEL_135:
                          v298 = v287;
                          v299 = &qword_100821648;
                          goto LABEL_136;
                        }
                        v315 = v451;
                        v316 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 32))(v451, v287, v297);
                        v317 = v455;
                        static Calendar.current.getter(v316);
                        v318 = v453;
                        Calendar.date(from:)(v315);
                        (*(void (**)(char *, uint64_t))(v456 + 8))(v317, v457);
                        (*(void (**)(char *, uint64_t))(v85 + 8))(v315, v474);
                        v319 = v465;
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v465 + 48))(v318, 1, v274) == 1)
                        {
                          v298 = (uint64_t)v318;
                          v299 = (uint64_t *)&unk_100828370;
LABEL_136:
                          v300 = sub_10001BE90(v298, v299);
                          v301 = v459;
                          static Date.distantPast.getter(v300);
                        }
                        else
                        {
                          v320 = *(void (**)(char *, char *, uint64_t))(v319 + 32);
                          v301 = v459;
                          v320(v459, v318, v274);
                        }
                        v302 = v301;
                        v303 = v469;
                        v304 = Date.compare(_:)(v301);
                        v305 = *(void (**)(char *, uint64_t))(v465 + 8);
                        v306 = v302;
                        v86 = v274;
                        v305(v306, v274);
                        v305(v303, v274);
                        if (v304)
                        {

                          swift_release(v467);
                          swift_release(v468);
                          v21 = v464;
                          if (v304 != 1)
                            goto LABEL_115;
LABEL_153:
                          v107 = v474;
                          v83 = v462;
                          if (!v462)
                            goto LABEL_251;
                          v261 = *(_OWORD *)(v259 + 16);
                          *(_OWORD *)(v259 + 16) = *(_OWORD *)v259;
                          *(_OWORD *)v259 = v261;
                          v259 -= 16;
                          ++v262;
                          v260 = v463;
                          if (v463 == v262)
                            goto LABEL_117;
                          continue;
                        }
                        break;
                      }
                      v307 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
                      v308 = v470;
                      v309 = objc_msgSend(v307, "titleForAchievement:", v470);

                      v310 = v468;
                      if (!v309)
                      {
                        v321 = objc_msgSend(v308, "section");
                        v322 = static String._unconditionallyBridgeFromObjectiveC(_:)(v321);
                        v324 = v323;

                        v325 = sub_10052F2A0(v322, v324);
                        v472 = 0;
                        v473 = 0xE000000000000000;
                        __asm { BR              X9 }
                      }
                      v311 = static String._unconditionallyBridgeFromObjectiveC(_:)(v309);
                      v313 = v312;

                      v314 = (void *)v471;
                      v326 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
                      v327 = objc_msgSend(v326, "titleForAchievement:", v314);

                      if (!v327)
                      {
                        v331 = objc_msgSend(v314, "section");
                        v332 = static String._unconditionallyBridgeFromObjectiveC(_:)(v331);
                        v334 = v333;

                        v335 = sub_10052F2A0(v332, v334);
                        v472 = 0;
                        v473 = 0xE000000000000000;
                        __asm { BR              X9 }
                      }
                      v328 = static String._unconditionallyBridgeFromObjectiveC(_:)(v327);
                      v330 = v329;

                      v336 = v467;
                      if (v311 != v328 || v313 != v330)
                      {
                        v337 = _stringCompareWithSmolCheck(_:_:expecting:)(v311, v313, v328, v330, 1);

                        swift_release(v336);
                        swift_release(v310);
                        swift_bridgeObjectRelease(v313, v338, v339, v340, v341, v342, v343, v344);
                        swift_bridgeObjectRelease(v330, v345, v346, v347, v348, v349, v350, v351);
                        v21 = v464;
                        v85 = v466;
                        v86 = v458;
                        if ((v337 & 1) == 0)
                        {
LABEL_115:
                          v107 = v474;
                          goto LABEL_116;
                        }
                        goto LABEL_153;
                      }

                      swift_release(v336);
                      swift_release(v310);
                      swift_bridgeObjectRelease_n(v313, 2);
                      v21 = v464;
                      v107 = v474;
                      v85 = v466;
                      v86 = v458;
LABEL_116:
                      v83 = v462;
                      v260 = v463;
LABEL_117:
                      v258 = v260 + 1;
                      v259 = v446 + 16;
                      v88 = v444;
                      if ((void (*)(char *, uint64_t))v258 != v440)
                        continue;
                      break;
                    }
                    v258 = (uint64_t)v440;
                    v2 = v449;
                    v84 = v422;
                    if ((uint64_t)v440 < v444)
                      goto LABEL_241;
LABEL_161:
                    if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
                      v84 = sub_100147150(0, *((_QWORD *)v84 + 2) + 1, 1, v84);
                    v353 = *((_QWORD *)v84 + 2);
                    v352 = *((_QWORD *)v84 + 3);
                    v87 = v353 + 1;
                    v83 = v462;
                    v463 = v258;
                    if (v353 >= v352 >> 1)
                    {
                      v402 = sub_100147150((char *)(v352 > 1), v353 + 1, 1, v84);
                      v83 = v462;
                      v84 = v402;
                    }
                    *((_QWORD *)v84 + 2) = v87;
                    v354 = v84 + 32;
                    v355 = &v84[16 * v353 + 32];
                    v356 = v463;
                    *(_QWORD *)v355 = v88;
                    *((_QWORD *)v355 + 1) = v356;
                    if (v353)
                    {
                      v85 = v466;
                      while (1)
                      {
                        v357 = v87 - 1;
                        if (v87 >= 4)
                        {
                          v362 = &v354[16 * v87];
                          v363 = *((_QWORD *)v362 - 8);
                          v364 = *((_QWORD *)v362 - 7);
                          v368 = __OFSUB__(v364, v363);
                          v365 = v364 - v363;
                          if (v368)
                            goto LABEL_230;
                          v367 = *((_QWORD *)v362 - 6);
                          v366 = *((_QWORD *)v362 - 5);
                          v368 = __OFSUB__(v366, v367);
                          v360 = v366 - v367;
                          v361 = v368;
                          if (v368)
                            goto LABEL_231;
                          v369 = v87 - 2;
                          v370 = &v354[16 * v87 - 32];
                          v372 = *(_QWORD *)v370;
                          v371 = *((_QWORD *)v370 + 1);
                          v368 = __OFSUB__(v371, v372);
                          v373 = v371 - v372;
                          if (v368)
                            goto LABEL_233;
                          v368 = __OFADD__(v360, v373);
                          v374 = v360 + v373;
                          if (v368)
                            goto LABEL_236;
                          if (v374 >= v365)
                          {
                            v392 = &v354[16 * v357];
                            v394 = *(_QWORD *)v392;
                            v393 = *((_QWORD *)v392 + 1);
                            v368 = __OFSUB__(v393, v394);
                            v395 = v393 - v394;
                            if (v368)
                              goto LABEL_240;
                            v385 = v360 < v395;
                            goto LABEL_198;
                          }
                        }
                        else
                        {
                          if (v87 != 3)
                          {
                            v386 = *((_QWORD *)v84 + 4);
                            v387 = *((_QWORD *)v84 + 5);
                            v368 = __OFSUB__(v387, v386);
                            v379 = v387 - v386;
                            v380 = v368;
                            goto LABEL_192;
                          }
                          v359 = *((_QWORD *)v84 + 4);
                          v358 = *((_QWORD *)v84 + 5);
                          v368 = __OFSUB__(v358, v359);
                          v360 = v358 - v359;
                          v361 = v368;
                        }
                        if ((v361 & 1) != 0)
                          goto LABEL_232;
                        v369 = v87 - 2;
                        v375 = &v354[16 * v87 - 32];
                        v377 = *(_QWORD *)v375;
                        v376 = *((_QWORD *)v375 + 1);
                        v378 = __OFSUB__(v376, v377);
                        v379 = v376 - v377;
                        v380 = v378;
                        if (v378)
                          goto LABEL_235;
                        v381 = &v354[16 * v357];
                        v383 = *(_QWORD *)v381;
                        v382 = *((_QWORD *)v381 + 1);
                        v368 = __OFSUB__(v382, v383);
                        v384 = v382 - v383;
                        if (v368)
                          goto LABEL_238;
                        if (__OFADD__(v379, v384))
                          goto LABEL_239;
                        if (v379 + v384 >= v360)
                        {
                          v385 = v360 < v384;
LABEL_198:
                          if (v385)
                            v357 = v369;
                          goto LABEL_200;
                        }
LABEL_192:
                        if ((v380 & 1) != 0)
                          goto LABEL_234;
                        v388 = &v354[16 * v357];
                        v390 = *(_QWORD *)v388;
                        v389 = *((_QWORD *)v388 + 1);
                        v368 = __OFSUB__(v389, v390);
                        v391 = v389 - v390;
                        if (v368)
                          goto LABEL_237;
                        if (v391 < v379)
                          goto LABEL_15;
LABEL_200:
                        v396 = v357 - 1;
                        if (v357 - 1 >= v87)
                        {
                          __break(1u);
LABEL_227:
                          __break(1u);
LABEL_228:
                          __break(1u);
LABEL_229:
                          __break(1u);
LABEL_230:
                          __break(1u);
LABEL_231:
                          __break(1u);
LABEL_232:
                          __break(1u);
LABEL_233:
                          __break(1u);
LABEL_234:
                          __break(1u);
LABEL_235:
                          __break(1u);
LABEL_236:
                          __break(1u);
LABEL_237:
                          __break(1u);
LABEL_238:
                          __break(1u);
LABEL_239:
                          __break(1u);
LABEL_240:
                          __break(1u);
LABEL_241:
                          __break(1u);
LABEL_242:
                          __break(1u);
LABEL_243:
                          __break(1u);
LABEL_244:
                          __break(1u);
LABEL_245:
                          __break(1u);
LABEL_246:
                          __break(1u);
LABEL_247:
                          __break(1u);
LABEL_248:
                          __break(1u);
LABEL_249:
                          __break(1u);
                          goto LABEL_250;
                        }
                        if (!v83)
                          goto LABEL_252;
                        v397 = &v354[16 * v396];
                        v398 = *(_QWORD *)v397;
                        v399 = &v354[16 * v357];
                        v400 = *((_QWORD *)v399 + 1);
                        sub_100425510((char *)(v83 + 16 * *(_QWORD *)v397), (char *)(v83 + 16 * *(_QWORD *)v399), (char *)(v83 + 16 * v400), v448);
                        if (v2)
                        {
                          v403 = v420;
                          goto LABEL_224;
                        }
                        if (v400 < v398)
                          goto LABEL_227;
                        if (v357 > *((_QWORD *)v84 + 2))
                          goto LABEL_228;
                        *(_QWORD *)v397 = v398;
                        *(_QWORD *)&v354[16 * v396 + 8] = v400;
                        v401 = *((_QWORD *)v84 + 2);
                        if (v357 >= v401)
                          goto LABEL_229;
                        v87 = v401 - 1;
                        memmove(&v354[16 * v357], v399 + 16, 16 * (v401 - 1 - v357));
                        *((_QWORD *)v84 + 2) = v401 - 1;
                        v21 = v464;
                        v85 = v466;
                        v86 = v458;
                        v83 = v462;
                        if (v401 <= 2)
                          goto LABEL_15;
                      }
                    }
                    v87 = 1;
                    v85 = v466;
LABEL_15:
                    v81 = v443;
                    v82 = v463;
                    if (v463 >= v443)
                    {
                      v403 = v420;
                      if (v87 < 2)
                      {
LABEL_224:
                        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v84, v71, v72, v73, v74, v75, v76, v77);
                        *(_QWORD *)v403->cellPadding = 0;
                        swift_bridgeObjectRelease(v403, v410, v411, v412, v413, v414, v415, v416);
                        return;
                      }
LABEL_212:
                      v404 = *v417;
                      while (1)
                      {
                        v405 = v87 - 2;
                        if (v87 < 2)
                          goto LABEL_242;
                        if (!v404)
                          goto LABEL_254;
                        v406 = *(_QWORD *)&v84[16 * v405 + 32];
                        v407 = *(_QWORD *)&v84[16 * v87 + 24];
                        sub_100425510((char *)(v404 + 16 * v406), (char *)(v404 + 16 * *(_QWORD *)&v84[16 * v87 + 16]), (char *)(v404 + 16 * v407), v448);
                        if (v2)
                          goto LABEL_224;
                        if (v407 < v406)
                          goto LABEL_243;
                        if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
                          v84 = sub_100147754((uint64_t)v84);
                        if (v405 >= *((_QWORD *)v84 + 2))
                          goto LABEL_244;
                        v408 = &v84[16 * v405 + 32];
                        *(_QWORD *)v408 = v406;
                        *((_QWORD *)v408 + 1) = v407;
                        v409 = *((_QWORD *)v84 + 2);
                        if (v87 > v409)
                          goto LABEL_245;
                        memmove(&v84[16 * v87 + 16], &v84[16 * v87 + 32], 16 * (v409 - v87));
                        *((_QWORD *)v84 + 2) = v409 - 1;
                        v87 = v409 - 1;
                        if (v409 <= 2)
                          goto LABEL_224;
                      }
                    }
                    goto LABEL_16;
                  }
LABEL_250:
                  __break(1u);
LABEL_251:
                  __break(1u);
LABEL_252:
                  __break(1u);
LABEL_253:
                  __break(1u);
LABEL_254:
                  __break(1u);
LABEL_255:
                  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
                  __break(1u);
                  JUMPOUT(0x100424C8CLL);
                }
                v173 += 2;
                ++v463;
                v85 = v466;
                if (v81 == v463)
                {
                  v463 = v81;
                  goto LABEL_96;
                }
              }
              v186 = (uint64_t)v441;
              v172(v441, 1, 1, v474);
LABEL_62:
              v191 = sub_10001BE90(v186, &qword_100821648);
              v192 = v445;
LABEL_63:
              static Date.distantPast.getter(v191);
              goto LABEL_64;
            }
          }
          else
          {
            v116 = v21;
            v119 = (uint64_t)v431;
            v108(v431, 1, 1, v110);
            v84 = v100;
            v120 = v429;
          }
          v129 = v119;
          v130 = &qword_100821648;
          goto LABEL_36;
        }
        v112 = sub_10001BE90(v111, (uint64_t *)&unk_100828370);
        v96 = (id)v471;
LABEL_26:
        static Date.distantPast.getter(v112);
        goto LABEL_27;
      }
      v86 = v99;
      v96 = (id)v471;
    }
    else
    {
      v100 = v84;
      v108 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56);
      v109 = (uint64_t)v430;
      v108(v430, 1, 1, v474);
    }
    v112 = sub_10001BE90(v109, &qword_100821648);
    v110 = v474;
    goto LABEL_26;
  }
  if (v69 < 0)
    goto LABEL_247;
  if (v69)
    sub_100424CD4(0, v69, 1, a1);
}

void sub_100424CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  _BYTE *v41;
  _BYTE *v42;
  void (*v43)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_BYTE *, uint64_t);
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  CHWorkoutDetailHeartRateTableViewCell *v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  uint64_t v92;
  char v93;
  SEL v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  SEL v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  _BYTE v108[16];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  __int128 v133;
  uint64_t v134;

  v110 = a1;
  v7 = type metadata accessor for Calendar(0);
  v120 = *(_QWORD *)(v7 - 8);
  v121 = v7;
  __chkstk_darwin(v7);
  v119 = &v108[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v9);
  v115 = &v108[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v118 = &v108[-v12];
  v13 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v13);
  v117 = &v108[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v124 = &v108[-v16];
  __chkstk_darwin(v17);
  v116 = &v108[-v18];
  __chkstk_darwin(v19);
  v123 = &v108[-v20];
  v134 = type metadata accessor for DateComponents(0);
  v21 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v114 = &v108[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v113 = &v108[-v24];
  v25 = type metadata accessor for Date(0);
  v26 = *(_QWORD *)(v25 - 8);
  v128 = v25;
  v129 = v26;
  __chkstk_darwin(v25);
  v28 = &v108[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v29);
  v31 = &v108[-v30];
  v109 = a2;
  if (a3 != a2)
  {
    v125 = *a4;
    v32 = v125 + 16 * a3 - 16;
    v127 = v21;
    v122 = &v108[-v30];
    v112 = v28;
LABEL_6:
    v33 = *(_OWORD *)(v125 + 16 * a3);
    v34 = v110;
    v111 = v32;
    v126 = a3;
    while (1)
    {
      v133 = v33;
      v36 = *(_QWORD *)v32;
      v35 = *(void **)(v32 + 8);
      v130 = v33;
      swift_retain(v33);
      v37 = *((id *)&v133 + 1);
      v131 = v36;
      v132 = v37;
      swift_retain(v36);
      *(_QWORD *)&v133 = v35;
      v38 = objc_msgSend(v37, "relevantEarnedInstance");
      if (!v38)
      {
        v43 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v21 + 56);
        v46 = v123;
        v43(v123, 1, 1, v134);
        goto LABEL_14;
      }
      v39 = v38;
      v40 = objc_msgSend(v38, "earnedDateComponents");

      if (v40)
      {
        v41 = v116;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v40);

        v42 = v41;
        v43 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v21 + 56);
        v44 = v41;
        v45 = 0;
      }
      else
      {
        v43 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v21 + 56);
        v42 = v116;
        v44 = v116;
        v45 = 1;
      }
      v47 = v21;
      v48 = v134;
      v43(v44, v45, 1, v134);
      v49 = (uint64_t)v118;
      v50 = (uint64_t)v42;
      v46 = v123;
      sub_1000456B4(v50, (uint64_t)v123);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48))(v46, 1, v48) == 1)
        break;
      v58 = v113;
      v59 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 32))(v113, v46, v48);
      v60 = v119;
      static Calendar.current.getter(v59);
      Calendar.date(from:)(v58);
      (*(void (**)(_BYTE *, uint64_t))(v120 + 8))(v60, v121);
      v61 = v58;
      v63 = v128;
      v62 = v129;
      (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v61, v48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v49, 1, v63) == 1)
      {
        v51 = sub_10001BE90(v49, (uint64_t *)&unk_100828370);
        v28 = v112;
        a3 = v126;
        v31 = v122;
        goto LABEL_15;
      }
      v31 = v122;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v129 + 32))(v122, v49, v128);
      v28 = v112;
      a3 = v126;
LABEL_16:
      v52 = objc_msgSend((id)v133, "relevantEarnedInstance");
      if (!v52)
      {
        v57 = v124;
        v43(v124, 1, 1, v48);
        v21 = v127;
LABEL_24:
        v66 = (uint64_t)v57;
        v67 = &qword_100821648;
LABEL_25:
        v68 = sub_10001BE90(v66, v67);
        static Date.distantPast.getter(v68);
        goto LABEL_26;
      }
      v53 = v52;
      v54 = objc_msgSend(v52, "earnedDateComponents");

      if (v54)
      {
        v55 = v117;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v54);

        v56 = 0;
      }
      else
      {
        v56 = 1;
        v55 = v117;
      }
      v21 = v127;
      v64 = v134;
      v43(v55, v56, 1, v134);
      v65 = (uint64_t)v55;
      v57 = v124;
      sub_1000456B4(v65, (uint64_t)v124);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v57, 1, v64) == 1)
        goto LABEL_24;
      v78 = v114;
      v79 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(v114, v57, v64);
      v80 = v119;
      static Calendar.current.getter(v79);
      v81 = v115;
      Calendar.date(from:)(v78);
      (*(void (**)(_BYTE *, uint64_t))(v120 + 8))(v80, v121);
      (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v78, v134);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v129 + 48))(v81, 1, v128) == 1)
      {
        v66 = (uint64_t)v81;
        v67 = (uint64_t *)&unk_100828370;
        goto LABEL_25;
      }
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v129 + 32))(v28, v81, v128);
LABEL_26:
      v69 = Date.compare(_:)(v28);
      v70 = v128;
      v71 = *(void (**)(_BYTE *, uint64_t))(v129 + 8);
      v71(v28, v128);
      v71(v31, v70);
      if (v69)
      {

        swift_release(v130);
        swift_release(v131);
        if (v69 != 1)
          goto LABEL_5;
      }
      else
      {
        v72 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
        v73 = v132;
        v74 = objc_msgSend(v72, "titleForAchievement:", v132);

        if (v74)
        {
          v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
          v77 = v76;

        }
        else
        {
          sub_10052F8FC(v73);
          v75 = v82;
          v77 = v83;
        }
        v84 = (void *)v133;
        v85 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
        v86 = objc_msgSend(v85, "titleForAchievement:", v84);

        if (v86)
        {
          v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
          v89 = v88;

        }
        else
        {
          sub_10052F8FC(v84);
          v87 = v90;
          v89 = v91;
        }
        v92 = v126;
        v21 = v127;
        if (v75 == v87 && v77 == v89)
        {

          swift_release(v130);
          swift_release(v131);
          swift_bridgeObjectRelease_n(v77, 2);
          a3 = v92;
          v31 = v122;
LABEL_5:
          ++a3;
          v32 = v111 + 16;
          if (a3 == v109)
            return;
          goto LABEL_6;
        }
        v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v77, v87, v89, 1);

        swift_release(v130);
        swift_release(v131);
        swift_bridgeObjectRelease(v77, v94, v95, v96, v97, v98, v99, v100);
        swift_bridgeObjectRelease(v89, v101, v102, v103, v104, v105, v106, v107);
        a3 = v92;
        v31 = v122;
        if ((v93 & 1) == 0)
          goto LABEL_5;
      }
      if (!v125)
      {
        __break(1u);
        return;
      }
      v33 = *(_OWORD *)(v32 + 16);
      *(_OWORD *)(v32 + 16) = *(_OWORD *)v32;
      *(_OWORD *)v32 = v33;
      v32 -= 16;
      if (a3 == ++v34)
        goto LABEL_5;
    }
    a3 = v126;
LABEL_14:
    v51 = sub_10001BE90((uint64_t)v46, &qword_100821648);
    v48 = v134;
LABEL_15:
    static Date.distantPast.getter(v51);
    goto LABEL_16;
  }
}

uint64_t sub_100425510(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  char *v62;
  id v63;
  char *v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  id v110;
  char *v111;
  id v112;
  uint64_t v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  CHWorkoutDetailHeartRateTableViewCell *v115;
  uint64_t v116;
  CHWorkoutDetailHeartRateTableViewCell *v117;
  char *v118;
  char v119;
  SEL v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  SEL v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  void *v141;
  char *v142;
  void *v143;
  uint64_t v144;
  id v145;
  char *v146;
  id v147;
  void *v148;
  id v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t, uint64_t);
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  id v159;
  void *v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t);
  char *v180;
  uint64_t v181;
  char *v182;
  BOOL v183;
  id v184;
  id v185;
  id v186;
  char *v187;
  uint64_t v188;
  CHWorkoutDetailHeartRateTableViewCell *v189;
  CHWorkoutDetailHeartRateTableViewCell *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  CHWorkoutDetailHeartRateTableViewCell *v199;
  id v200;
  id v201;
  uint64_t v202;
  CHWorkoutDetailHeartRateTableViewCell *v203;
  CHWorkoutDetailHeartRateTableViewCell *v204;
  const char *v205;
  void *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  uint64_t v212;
  char v213;
  SEL v214;
  id v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  uint64_t result;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  id v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;

  v8 = type metadata accessor for Calendar(0);
  v238 = *(_QWORD *)(v8 - 8);
  v239 = v8;
  __chkstk_darwin(v8);
  v237 = (char *)&v222 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v10);
  v12 = (char *)&v222 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v228 = (char *)&v222 - v14;
  __chkstk_darwin(v15);
  v227 = (char *)&v222 - v16;
  __chkstk_darwin(v17);
  v229 = (char *)&v222 - v18;
  v19 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v19);
  v235 = (char *)&v222 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v234 = (char *)&v222 - v22;
  __chkstk_darwin(v23);
  v236 = (char *)&v222 - v24;
  __chkstk_darwin(v25);
  v233 = (char *)&v222 - v26;
  __chkstk_darwin(v27);
  v230 = (char *)&v222 - v28;
  __chkstk_darwin(v29);
  v241 = (char *)&v222 - v30;
  __chkstk_darwin(v31);
  v242 = (char *)&v222 - v32;
  __chkstk_darwin(v33);
  v240 = (char *)&v222 - v34;
  v35 = type metadata accessor for DateComponents(0);
  v36 = *(_QWORD *)(v35 - 8);
  v250 = v35;
  v251 = v36;
  __chkstk_darwin(v35);
  v226 = (char *)&v222 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v225 = (char *)&v222 - v39;
  __chkstk_darwin(v40);
  v224 = (char *)&v222 - v41;
  __chkstk_darwin(v42);
  v223 = (char *)&v222 - v43;
  v44 = type metadata accessor for Date(0);
  v247 = *(_QWORD *)(v44 - 8);
  v248 = v44;
  __chkstk_darwin(v44);
  v232 = (char *)&v222 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v244 = (char *)&v222 - v47;
  __chkstk_darwin(v48);
  v231 = (char *)&v222 - v49;
  __chkstk_darwin(v50);
  v243 = (char *)&v222 - v51;
  v52 = a2 - a1;
  v53 = a2 - a1 + 15;
  if (a2 - a1 >= 0)
    v53 = a2 - a1;
  v54 = v53 >> 4;
  v249 = a3;
  v55 = a3 - a2;
  v56 = v55 / 16;
  v255 = a1;
  v252 = a4;
  v254 = a4;
  if (v53 >> 4 >= v55 / 16)
  {
    if (v55 < -15)
      goto LABEL_112;
    v230 = v12;
    v136 = v236;
    if (v252 != a2 || &a2[16 * v56] <= v252)
      memmove(v252, a2, 16 * v56);
    v137 = &v252[16 * v56];
    v253 = v137;
    v255 = a2;
    v138 = v249;
    if (v55 < 16 || a1 >= a2)
    {
LABEL_111:
      sub_10014730C((void **)&v255, (const void **)&v254, &v253);
      return 1;
    }
    v139 = a2;
    v246 = a1;
    while (1)
    {
      v249 = v138;
      v242 = v137;
      v140 = *((_QWORD *)v137 - 2);
      v141 = (void *)*((_QWORD *)v137 - 1);
      v142 = v137 - 16;
      v144 = *((_QWORD *)v139 - 2);
      v143 = (void *)*((_QWORD *)v139 - 1);
      v139 -= 16;
      v240 = (char *)v140;
      swift_retain(v140);
      v145 = v141;
      v241 = (char *)v144;
      swift_retain(v144);
      v146 = v143;
      v245 = v145;
      v147 = objc_msgSend(v145, "relevantEarnedInstance");
      v243 = a2;
      if (!v147)
        break;
      v148 = v147;
      v149 = objc_msgSend(v147, "earnedDateComponents");

      if (v149)
      {
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v149);

        v150 = v251;
        v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56);
        v152 = v136;
        v153 = 0;
      }
      else
      {
        v150 = v251;
        v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56);
        v152 = v136;
        v153 = 1;
      }
      v155 = v250;
      v151(v152, v153, 1, v250);
      v156 = (uint64_t)v136;
      v154 = (uint64_t)v233;
      sub_1000456B4(v156, (uint64_t)v233);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v154, 1, v155) == 1)
        goto LABEL_68;
      v231 = v146;
      v164 = v225;
      v165 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v150 + 32))(v225, v154, v155);
      v166 = v237;
      static Calendar.current.getter(v165);
      v167 = (uint64_t)v228;
      Calendar.date(from:)(v164);
      (*(void (**)(char *, uint64_t))(v238 + 8))(v166, v239);
      (*(void (**)(char *, uint64_t))(v251 + 8))(v164, v155);
      v169 = v247;
      v168 = v248;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 48))(v167, 1, v248) == 1)
      {
        v157 = sub_10001BE90(v167, (uint64_t *)&unk_100828370);
        v158 = v235;
        v146 = v231;
        goto LABEL_69;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v244, v167, v168);
      v158 = v235;
      v146 = v231;
LABEL_70:
      v159 = objc_msgSend(v146, "relevantEarnedInstance", v222);
      if (!v159)
      {
        v163 = (uint64_t)v234;
        v151(v234, 1, 1, v250);
LABEL_78:
        v173 = v146;
        v174 = sub_10001BE90(v163, &qword_100821648);
        v175 = v243;
LABEL_79:
        v176 = v232;
        static Date.distantPast.getter(v174);
        goto LABEL_80;
      }
      v160 = v159;
      v161 = objc_msgSend(v159, "earnedDateComponents");

      if (v161)
      {
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v161);

        v162 = 0;
      }
      else
      {
        v162 = 1;
      }
      v170 = v250;
      v151(v158, v162, 1, v250);
      v171 = (uint64_t)v158;
      v163 = (uint64_t)v234;
      sub_1000456B4(v171, (uint64_t)v234);
      v172 = v251;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v251 + 48))(v163, 1, v170) == 1)
        goto LABEL_78;
      v191 = v226;
      v192 = v250;
      v193 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v172 + 32))(v226, v163, v250);
      v194 = v237;
      static Calendar.current.getter(v193);
      v195 = (uint64_t)v230;
      Calendar.date(from:)(v191);
      (*(void (**)(char *, uint64_t))(v238 + 8))(v194, v239);
      (*(void (**)(char *, uint64_t))(v251 + 8))(v191, v192);
      v196 = v247;
      v197 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v247 + 48))(v195, 1, v248);
      v175 = v243;
      v173 = v146;
      if (v197 == 1)
      {
        v174 = sub_10001BE90(v195, (uint64_t *)&unk_100828370);
        goto LABEL_79;
      }
      v176 = v232;
      (*(void (**)(void))(v196 + 32))();
LABEL_80:
      v177 = v244;
      v178 = Date.compare(_:)(v176);
      v179 = *(void (**)(char *, uint64_t))(v247 + 8);
      v180 = v176;
      v181 = v248;
      v179(v180, v248);
      v179(v177, v181);
      if (v178)
      {

        swift_release(v240);
        swift_release(v241);
        v182 = v249;
        v138 = v249 - 16;
        v183 = v178 == 1;
        v137 = v242;
        if (v183)
          goto LABEL_83;
        goto LABEL_102;
      }
      v184 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
      v185 = v245;
      v186 = objc_msgSend(v184, "titleForAchievement:", v245);

      v187 = v173;
      if (v186)
      {
        v188 = static String._unconditionallyBridgeFromObjectiveC(_:)(v186);
        v190 = v189;

      }
      else
      {
        sub_10052F8FC(v185);
        v188 = v198;
        v190 = v199;
      }
      v200 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
      v201 = objc_msgSend(v200, "titleForAchievement:", v173);

      if (v201)
      {
        v202 = static String._unconditionallyBridgeFromObjectiveC(_:)(v201);
        v204 = v203;

        if (v188 != v202)
          goto LABEL_100;
      }
      else
      {
        sub_10052F8FC(v187);
        v202 = v212;
        v204 = (CHWorkoutDetailHeartRateTableViewCell *)v205;
        if (v188 != v212)
          goto LABEL_100;
      }
      if (v190 == v204)
      {
        v213 = 0;
        v204 = v190;
        goto LABEL_101;
      }
LABEL_100:
      v213 = _stringCompareWithSmolCheck(_:_:expecting:)(v188, v190, v202, v204, 1);
LABEL_101:
      v137 = v242;
      swift_bridgeObjectRelease(v190, v205, v206, v207, v208, v209, v210, v211);
      swift_bridgeObjectRelease(v204, v214, v215, v216, v217, v218, v219, v220);

      swift_release(v240);
      swift_release(v241);
      v182 = v249;
      v138 = v249 - 16;
      a1 = v246;
      if ((v213 & 1) != 0)
      {
LABEL_83:
        if (v182 != v175 || v138 >= v175)
          *(_OWORD *)v138 = *(_OWORD *)v139;
        v255 = v139;
        goto LABEL_108;
      }
LABEL_102:
      v253 = v142;
      if (v182 >= v137 && v138 < v137)
      {
        v136 = v236;
        if (v182 != v137)
          *(_OWORD *)v138 = *(_OWORD *)v142;
        v139 = v175;
        v137 = v142;
        goto LABEL_109;
      }
      *(_OWORD *)v138 = *(_OWORD *)v142;
      v139 = v175;
      v137 = v142;
LABEL_108:
      v136 = v236;
LABEL_109:
      if (v137 > v252)
      {
        a2 = v139;
        if (v139 > a1)
          continue;
      }
      goto LABEL_111;
    }
    v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56);
    v154 = (uint64_t)v233;
    v151(v233, 1, 1, v250);
LABEL_68:
    v157 = sub_10001BE90(v154, &qword_100821648);
    v158 = v235;
LABEL_69:
    static Date.distantPast.getter(v157);
    goto LABEL_70;
  }
  if (v52 >= -15)
  {
    v57 = v242;
    if (v252 != a1 || &a1[16 * v54] <= v252)
      memmove(v252, a1, 16 * v54);
    v235 = &v252[16 * v54];
    v253 = v235;
    v58 = (uint64_t)v230;
    if (v52 >= 16 && a2 < v249)
    {
      while (1)
      {
        v246 = a1;
        v60 = *(_QWORD *)a2;
        v59 = (void *)*((_QWORD *)a2 + 1);
        v62 = *(char **)v252;
        v61 = (void *)*((_QWORD *)v252 + 1);
        swift_retain(*(_QWORD *)a2);
        v63 = v59;
        swift_retain(v62);
        v64 = v61;
        v245 = v63;
        v65 = objc_msgSend(v63, "relevantEarnedInstance");
        v244 = v62;
        if (!v65)
          break;
        v66 = v65;
        v67 = objc_msgSend(v65, "earnedDateComponents");

        v68 = v250;
        if (v67)
        {
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v67);

          v69 = v251;
          v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56);
          v70(v57, 0, 1, v68);
        }
        else
        {
          v69 = v251;
          v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56);
          v70(v57, 1, 1, v250);
        }
        v72 = (uint64_t)v229;
        v73 = (uint64_t)v57;
        v71 = (uint64_t)v240;
        sub_1000456B4(v73, (uint64_t)v240);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v71, 1, v68) == 1)
          goto LABEL_16;
        v80 = v223;
        v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 32))(v223, v71, v68);
        v82 = v237;
        static Calendar.current.getter(v81);
        Calendar.date(from:)(v80);
        (*(void (**)(char *, uint64_t))(v238 + 8))(v82, v239);
        (*(void (**)(char *, uint64_t))(v251 + 8))(v80, v68);
        v84 = v247;
        v83 = v248;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 48))(v72, 1, v248) == 1)
        {
          v74 = sub_10001BE90(v72, (uint64_t *)&unk_100828370);
          v58 = (uint64_t)v230;
          goto LABEL_17;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v243, v72, v83);
        v58 = (uint64_t)v230;
LABEL_18:
        v75 = objc_msgSend(v64, "relevantEarnedInstance", v222);
        if (!v75)
        {
          v79 = (uint64_t)v241;
          v70(v241, 1, 1, v68);
LABEL_26:
          v86 = sub_10001BE90(v79, &qword_100821648);
          v87 = v247;
          v88 = v248;
          v89 = v231;
LABEL_27:
          static Date.distantPast.getter(v86);
          goto LABEL_28;
        }
        v76 = v75;
        v77 = objc_msgSend(v75, "earnedDateComponents");

        if (v77)
        {
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v77);

          v78 = 0;
        }
        else
        {
          v78 = 1;
        }
        v85 = v251;
        v70((char *)v58, v78, 1, v68);
        v79 = (uint64_t)v241;
        sub_1000456B4(v58, (uint64_t)v241);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v79, 1, v68) == 1)
          goto LABEL_26;
        v101 = v224;
        v102 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 32))(v224, v79, v68);
        v103 = v237;
        static Calendar.current.getter(v102);
        v104 = v227;
        Calendar.date(from:)(v101);
        v105 = v103;
        v106 = (uint64_t)v104;
        (*(void (**)(char *, uint64_t))(v238 + 8))(v105, v239);
        (*(void (**)(char *, uint64_t))(v251 + 8))(v101, v68);
        v87 = v247;
        v88 = v248;
        v107 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v247 + 48))(v106, 1, v248);
        v89 = v231;
        if (v107 == 1)
        {
          v86 = sub_10001BE90(v106, (uint64_t *)&unk_100828370);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v231, v106, v88);
LABEL_28:
        v90 = v243;
        v91 = Date.compare(_:)(v89);
        v92 = *(void (**)(char *, uint64_t))(v87 + 8);
        v92(v89, v88);
        v92(v90, v88);
        if (v91)
        {

          swift_release(v60);
          swift_release(v244);
          if (v91 == 1)
            goto LABEL_45;
        }
        else
        {
          v236 = v64;
          v93 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
          v94 = v245;
          v95 = objc_msgSend(v93, "titleForAchievement:", v245);

          v96 = v60;
          v97 = v252;
          if (v95)
          {
            v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
            v100 = v99;

          }
          else
          {
            sub_10052F8FC(v94);
            v98 = v108;
            v100 = v109;
          }
          v110 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
          v111 = v236;
          v112 = objc_msgSend(v110, "titleForAchievement:", v236);

          v252 = v97;
          if (v112)
          {
            v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
            v115 = v114;

          }
          else
          {
            sub_10052F8FC(v111);
            v113 = v116;
            v115 = v117;
          }
          v118 = v244;
          if (v98 == v113 && v100 == v115)
          {

            swift_release(v96);
            swift_release(v118);
            swift_bridgeObjectRelease_n(v100, 2);
            v58 = (uint64_t)v230;
          }
          else
          {
            v119 = _stringCompareWithSmolCheck(_:_:expecting:)(v98, v100, v113, v115, 1);

            swift_release(v96);
            swift_release(v118);
            swift_bridgeObjectRelease(v100, v120, v121, v122, v123, v124, v125, v126);
            swift_bridgeObjectRelease(v115, v127, v128, v129, v130, v131, v132, v133);
            v58 = (uint64_t)v230;
            if ((v119 & 1) != 0)
            {
LABEL_45:
              v134 = a2 + 16;
              v135 = v246;
              v57 = v242;
              if (v246 < a2 || v246 >= v134 || v246 != a2)
                *(_OWORD *)v246 = *(_OWORD *)a2;
              goto LABEL_52;
            }
          }
        }
        v135 = v246;
        v57 = v242;
        if (v246 != v252)
          *(_OWORD *)v246 = *(_OWORD *)v252;
        v252 += 16;
        v254 = v252;
        v134 = a2;
LABEL_52:
        a1 = v135 + 16;
        v255 = a1;
        if (v252 < v235)
        {
          a2 = v134;
          if (v134 < v249)
            continue;
        }
        goto LABEL_111;
      }
      v68 = v250;
      v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56);
      v71 = (uint64_t)v240;
      v70(v240, 1, 1, v250);
LABEL_16:
      v74 = sub_10001BE90(v71, &qword_100821648);
LABEL_17:
      static Date.distantPast.getter(v74);
      goto LABEL_18;
    }
    goto LABEL_111;
  }
LABEL_112:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10042660C(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2)
{
  CHWorkoutDetailHeartRateTableViewCell *result;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  result = &_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)a1->cellPadding;
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for AAUIAwardsDataProviderSection(0) - 8);
    v7 = (char *)a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = (_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider);
    v9 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain(a1);
    do
    {
      v18 = v8[3];
      v19 = v8[4];
      sub_100016804(v8, v18);
      v20 = dispatch thunk of AAUIAwardsDataProviding.topAchievement(forSection:)(v7, v18, v19);
      if (v20)
      {
        v21 = v20;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v23 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v22 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v23 >= v22 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
        specialized Array._endMutation()(v10);
      }
      v7 += v9;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1, v11, v12, v13, v14, v15, v16, v17);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_100426734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t i;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  unint64_t v32;
  char v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  _QWORD v55[2];
  unint64_t v56;

  v4 = v3;
  v52 = a2;
  v53 = a3;
  v6 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v6);
  v51 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v48))
  {
    v50 = v4;
    v56 = a1 & 0xC000000000000001;
    v16 = &_swiftEmptyArrayStorage;
    for (i = 4; ; ++i)
    {
      v25 = v56 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1) : *(id *)(a1 + 8 * i);
      v4 = v25;
      v26 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v27 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
      v28 = objc_msgSend(v27, "titleForAchievement:", v4);

      if (!v28)
        goto LABEL_4;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      v55[0] = v29;
      v55[1] = v31;
      v54[0] = v52;
      v54[1] = v53;
      v32 = sub_100038CA0();
      v33 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(v54, &type metadata for String, &type metadata for String, v32, v32);
      swift_bridgeObjectRelease(v31, v34, v35, v36, v37, v38, v39, v40);
      if ((v33 & 1) != 0)
      {
        sub_100047110((uint64_t *)&unk_10083D730);
        v41 = v4;
        v42 = v51;
        LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
        v43 = EntityProperty<>.init(title:)(v42);
        v44 = v41;
        LOBYTE(v55[0]) = objc_msgSend(v44, "unearned", swift_retain(v43).n128_f64[0]) ^ 1;
        EntityProperty.wrappedValue.setter(v55);

        swift_release(v43);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_100141294(0, *(_QWORD *)v16->cellPadding + 1, 1, v16, v21, v22, v23, v24);
        v46 = *(_QWORD *)v16->cellPadding;
        v45 = *(_QWORD *)v16->cellInset;
        if (v46 >= v45 >> 1)
          v16 = sub_100141294((CHWorkoutDetailHeartRateTableViewCell *)(v45 > 1), v46 + 1, 1, v16, v21, v22, v23, v24);
        *(_QWORD *)v16->cellPadding = v46 + 1;
        v47 = (char *)v16 + 16 * v46;
        *((_QWORD *)v47 + 4) = v43;
        *((_QWORD *)v47 + 5) = v44;
      }
      else
      {
LABEL_4:

      }
      if (v26 == v8)
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v18, v19, v20, v21, v22, v23, v24);
        return v16;
      }
    }
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v48 = a1;
    else
      v48 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v9, v10, v11, v12, v13, v14, v15);
  return &_swiftEmptyArrayStorage;
}

void *sub_100426A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;

  if ((unint64_t)a1 >> 62)
    goto LABEL_23;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v6)
  {
    v7 = 4;
    while (1)
    {
      v10 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
          : *(id *)(a1 + 8 * v7);
      v11 = v10;
      v12 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = objc_msgSend(v10, "template");
      v14 = objc_msgSend(v13, "uniqueName");

      if (!v14)
      {
        static String._fromSubstring(_:)(a2, a3, a4, a5);
        v9 = v8;
LABEL_5:

        swift_bridgeObjectRelease(v9);
        goto LABEL_6;
      }
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v18 = static String._fromSubstring(_:)(a2, a3, a4, a5);
      v9 = v19;
      if (!v17)
        goto LABEL_5;
      if (v15 == v18 && v17 == v19)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease_n(v17, 2);
        return v11;
      }
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v9);
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v11;
      }

LABEL_6:
      ++v7;
      if (v12 == v6)
        goto LABEL_27;
    }
    __break(1u);
LABEL_23:
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v22);
  }
LABEL_27:
  swift_bridgeObjectRelease(a1);
  return 0;
}

unint64_t sub_100426C00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833038;
  if (!qword_100833038)
  {
    v1 = type metadata accessor for AwardIntentDataProvider();
    result = swift_getWitnessTable(&unk_10063BEF4, v1);
    atomic_store(result, (unint64_t *)&qword_100833038);
  }
  return result;
}

uint64_t sub_100426C44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[4] = a1;
  v2 = type metadata accessor for LocalizedStringResource(0);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchTimeInterval(0);
  v1[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[7] = v4;
  v1[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchTime(0);
  v1[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[10] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[11] = swift_task_alloc(v7);
  v1[12] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100828318);
  v1[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v1[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[15] = v10;
  v1[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100426D48, 0, 0);
}

uint64_t sub_100426D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell **v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  uint64_t v32;
  Class isa;
  uint64_t v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  uint64_t v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  const char *v46;
  unint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    v4 = (CHWorkoutDetailHeartRateTableViewCell **)(v3 + 40);
    do
    {
      v19 = (uint64_t)*(v4 - 1);
      v20 = *v4;
      v21 = qword_10081DD38;
      swift_bridgeObjectRetain(*v4);
      if (v21 != -1)
        swift_once(&qword_10081DD38, sub_100421E50);
      *(_QWORD *)(v0 + 16) = v19;
      *(_QWORD *)(v0 + 24) = v20;
      v22 = sub_100038CA0();
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(47, 0xE100000000000000, 1, 1, &type metadata for String, v22);
      v31 = v23;
      v32 = *(_QWORD *)v23->cellPadding;
      if (v32)
      {
        isa = v23[1].super.super.super.super.isa;
        v35 = *(_QWORD *)v23[1].heartRateController;
        v34 = *(_QWORD *)v23[1].cellPadding;
        v36 = *(CHWorkoutDetailHeartRateTableViewCell **)v23[1].cellInset;
        v37 = *(_QWORD *)v23[v32].cellInset;
        swift_bridgeObjectRetain(v36);
        swift_bridgeObjectRetain(v37);
        swift_bridgeObjectRelease(v31, v38, v39, v40, v41, v42, v43, v44);
        v45 = static String._fromSubstring(_:)(isa, v35, v34, v36);
        v47 = (unint64_t)v46;
        swift_bridgeObjectRelease(v36, v46, v48, v49, v50, v51, v52, v53);
        v54 = (char *)&loc_100426F4C + 4 * byte_10063BD70[sub_10052F2A0(v45, v47)];
        __asm { BR              X9 }
      }
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      swift_bridgeObjectRelease(v20, v5, v6, v7, v8, v9, v10, v11);
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 32), v12, v13, v14, v15, v16, v17, v18);
  }
  v55 = *(_QWORD *)(v0 + 96);
  v56 = *(_QWORD *)(v0 + 104);
  v57 = *(_QWORD *)(v0 + 88);
  v58 = *(_QWORD *)(v0 + 64);
  v59 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v56);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(&_swiftEmptyArrayStorage);
}

uint64_t sub_1004272E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for LocalizedStringResource(0);
  v0[2] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DispatchTimeInterval(0);
  v0[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[4] = v3;
  v0[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchTime(0);
  v0[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v0[7] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[8] = swift_task_alloc(v6);
  v0[9] = swift_task_alloc(v6);
  return swift_task_switch(sub_10042739C, 0, 0);
}

uint64_t sub_10042739C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  id v13;
  uint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  const char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  if (qword_10081DD38 != -1)
    a1 = swift_once(&qword_10081DD38, sub_100421E50);
  v3 = *(_QWORD *)(v1 + 64);
  v2 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD **)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = (void *)qword_10086A930;
  static DispatchTime.now()(a1);
  *v6 = 3;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v6, enum case for DispatchTimeInterval.seconds(_:), v8);
  + infix(_:_:)(v3, v6);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v6, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v3, v4);
  OS_dispatch_group.wait(timeout:)(v2);
  v11 = ((uint64_t (*)(uint64_t, uint64_t))v10)(v2, v4);
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)static AAUIAwardsDataProviderSection.allCases.getter(v11);
  v13 = v9;
  v14 = (uint64_t)sub_10042660C(v12, (uint64_t)v13);

  swift_bridgeObjectRelease(v12, v15, v16, v17, v18, v19, v20, v21);
  if (!((unint64_t)v14 >> 62))
  {
    v29 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v29)
      goto LABEL_5;
LABEL_18:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v14, v22, v23, v24, v25, v26, v27, v28);
LABEL_19:
    v49 = *(_QWORD *)(v1 + 64);
    v50 = *(_QWORD *)(v1 + 40);
    v51 = *(_QWORD *)(v1 + 16);
    swift_task_dealloc(*(_QWORD *)(v1 + 72));
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v1 + 8))(&_swiftEmptyArrayStorage);
  }
  if (v14 < 0)
    v48 = v14;
  else
    v48 = v14 & 0xFFFFFFFFFFFFFF8;
  v29 = _CocoaArrayWrapper.endIndex.getter(v48);
  if (!v29)
    goto LABEL_18;
LABEL_5:
  result = sub_100121BEC(0, v29 & ~(v29 >> 63), 0);
  if ((v29 & 0x8000000000000000) == 0)
  {
    v31 = 0;
    v52 = v14 & 0xC000000000000001;
    sub_100047110((uint64_t *)&unk_10083D730);
    v32 = (CHWorkoutDetailHeartRateTableViewCell *)v14;
    do
    {
      if (v52)
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v14);
      else
        v33 = *(id *)(v14 + 8 * v31 + 32);
      v34 = v33;
      v35 = *(_QWORD *)(v1 + 16);
      LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
      v36 = EntityProperty<>.init(title:)(v35);
      swift_retain(v36);
      v37 = v34;
      *(_BYTE *)(v1 + 80) = objc_msgSend(v37, "unearned") ^ 1;
      EntityProperty.wrappedValue.setter(v1 + 80);
      swift_release(v36);

      v46 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      v45 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
      if (v46 >= v45 >> 1)
        sub_100121BEC(v45 > 1, v46 + 1, 1);
      ++v31;
      *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v46 + 1;
      v47 = (char *)&_swiftEmptyArrayStorage + 16 * v46;
      *((_QWORD *)v47 + 4) = v36;
      *((_QWORD *)v47 + 5) = v37;
      v14 = (uint64_t)v32;
    }
    while (v29 != v31);
    swift_bridgeObjectRelease(v32, v38, v39, v40, v41, v42, v43, v44);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_10042767C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100427694, 0, 0);
}

uint64_t sub_100427694()
{
  uint64_t v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  CHWorkoutDetailHeartRateTableViewCell *v27;

  if (qword_10081DD38 != -1)
    swift_once(&qword_10081DD38, sub_100421E50);
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 24);
  v3 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100422120();
  swift_bridgeObjectRetain(v1);
  v4 = sub_100426734((uint64_t)v3, v2, (uint64_t)v1);
  swift_bridgeObjectRelease(v1, v5, v6, v7, v8, v9, v10, v11);
  swift_bridgeObjectRelease(v3, v12, v13, v14, v15, v16, v17, v18);
  v27 = v4;
  swift_bridgeObjectRetain(v4);
  sub_100422AD0((uint64_t *)&v27);
  swift_bridgeObjectRelease(v4, v19, v20, v21, v22, v23, v24, v25);
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(v27);
}

_QWORD *sub_100427780(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = type metadata accessor for TrendListMetric(0);
    v9 = *(int *)(v8 + 28);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    v14 = swift_bridgeObjectRetain(v7);
    v13(v10, v11, v12, v14);
    v15 = *(int *)(v8 + 32);
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = *(int *)(a3 + 24);
    *((_BYTE *)v4 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v20 = *(_QWORD *)((char *)a2 + v19);
    *(_QWORD *)((char *)v4 + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  swift_retain(v20);
  return v4;
}

double sub_100427878(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double result;

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16), (SEL)a2, a3, a4, a5, a6, a7, a8);
  v10 = type metadata accessor for TrendListMetric(0);
  v11 = a1 + *(int *)(v10 + 28);
  v12 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + *(int *)(v10 + 32) + 8), v13, v14, v15, v16, v17, v18, v19);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

uint64_t sub_1004278F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = type metadata accessor for TrendListMetric(0);
  v8 = *(int *)(v7 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
  v13 = swift_bridgeObjectRetain(v6);
  v12(v9, v10, v11, v13);
  v14 = *(int *)(v7 + 32);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  swift_bridgeObjectRetain(v17);
  swift_retain(v19);
  return a1;
}

uint64_t sub_1004279C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  v15 = type metadata accessor for TrendListMetric(0);
  v16 = *(int *)(v15 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = *(int *)(v15 + 32);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v23 = v22[1];
  v24 = (CHWorkoutDetailHeartRateTableViewCell *)v21[1];
  v21[1] = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v32 = *(int *)(a3 + 24);
  v33 = *(_QWORD *)(a1 + v32);
  v34 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v34;
  swift_retain(v34);
  swift_release(v33);
  return a1;
}

uint64_t sub_100427AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(int *)(v6 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(v6 + 32)) = *(_OWORD *)(a2 + *(int *)(v6 + 32));
  v11 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_100427B54(uint64_t a1, uint64_t a2, int *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  *(_WORD *)a1 = *(_WORD *)a2;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v11;
  swift_bridgeObjectRelease(v12, (SEL)a2, a3, a4, a5, a6, a7, a8);
  v13 = type metadata accessor for TrendListMetric(0);
  v14 = *(int *)(v13 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = *(int *)(v13 + 32);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)v19[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
  v31 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v32 = *(_QWORD *)(a1 + v31);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_release(v32);
  return a1;
}

uint64_t sub_100427C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100427C20);
}

uint64_t sub_100427C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_100427CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100427CB4);
}

uint64_t sub_100427CB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TrendListMetric(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for TrendArrowIndicatorViewRepresentable(uint64_t a1)
{
  uint64_t result;

  result = qword_1008330B0;
  if (!qword_1008330B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrendArrowIndicatorViewRepresentable);
  return result;
}

uint64_t sub_100427D68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TrendListMetric(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10063BF58;
    v4[2] = &unk_10063BF70;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_100427DE4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = type metadata accessor for TrendArrowIndicatorView();
  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  sub_1004E4168(*v0);
  v4 = v3;
  v5 = *(id *)&v3[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  v6 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors];
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors] = v5;
  v7 = v5;

  sub_10047E818();
  return v2;
}

void sub_100427E7C(_BYTE *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  char v12;
  char v13;
  _BYTE v14[24];

  v2 = v1;
  v4 = type metadata accessor for TrendArrowIndicatorViewRepresentable(0);
  v5 = v1[*(int *)(v4 + 20)];
  v6 = *(_QWORD *)&v1[*(int *)(v4 + 24)];
  if (v5 == 1)
  {
    if (!v6)
      goto LABEL_9;
    v7 = *v2;
    swift_beginAccess(v6 + 32, v14, 0, 0);
    v8 = *(_QWORD *)(v6 + 32);
    if (!*(_QWORD *)(v8 + 16))
      goto LABEL_9;
  }
  else
  {
    if (!v6)
      goto LABEL_9;
    v7 = *v2;
    swift_beginAccess(v6 + 24, v14, 0, 0);
    v8 = *(_QWORD *)(v6 + 24);
    if (!*(_QWORD *)(v8 + 16))
      goto LABEL_9;
  }
  v9 = sub_100049DE0(v7);
  if ((v10 & 1) == 0)
  {
LABEL_9:
    v13 = 1;
    goto LABEL_10;
  }
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 56) + v9);
  v12 = a1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection];
  a1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] = v11;
  a1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection] = v12;
  v13 = v11 == 1;
LABEL_10:
  sub_100427F70(a1, v2[1], v13);
}

void sub_100427F70(void *a1, char a2, char a3)
{
  unsigned __int8 *v3;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v7 = dbl_10063C070[a2];
  v8 = type metadata accessor for TrendArrowIndicatorViewRepresentable(0);
  v9 = *(_QWORD *)&v3[*(int *)(v8 + 24)];
  if (v3[*(int *)(v8 + 20)] == 1)
  {
    if (v9)
    {
      v10 = *v3;
      swift_beginAccess(v9 + 32, v26, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v9 + 32));
      v24 = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v9 + 32) = 0x8000000000000000;
      sub_1003FFDBC(a2, v10, isUniquelyReferenced_nonNull_native);
      v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(v9 + 32);
      *(_QWORD *)(v9 + 32) = v24;
LABEL_6:
      swift_bridgeObjectRelease(v19, v12, v13, v14, v15, v16, v17, v18);
      swift_endAccess(v26);
    }
  }
  else if (v9)
  {
    v20 = *v3;
    swift_beginAccess(v9 + 24, v26, 33, 0);
    v21 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v9 + 24));
    v25 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v9 + 24) = 0x8000000000000000;
    sub_1003FFDBC(a2, v20, v21);
    v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(v9 + 24);
    *(_QWORD *)(v9 + 24) = v25;
    goto LABEL_6;
  }
  v22 = swift_allocObject(&unk_10079EE88, 26, 7);
  *(_QWORD *)(v22 + 16) = a1;
  *(_BYTE *)(v22 + 24) = a2;
  *(_BYTE *)(v22 + 25) = a3 & 1;
  v23 = a1;
  sub_100151A58((uint64_t)sub_100428224, v22, v7);
  swift_release(v22);
}

uint64_t sub_1004280E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100428250(&qword_1008330F8, (uint64_t)&unk_10063BFD8);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100428148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100428250(&qword_1008330F8, (uint64_t)&unk_10063BFD8);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1004281A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100428250(&qword_1008330F8, (uint64_t)&unk_10063BFD8);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1004281DC()
{
  return sub_100428250(&qword_1008330F0, (uint64_t)&unk_10063BF88);
}

uint64_t sub_100428200()
{
  uint64_t v0;

  return swift_deallocObject(v0, 26, 7);
}

void sub_100428224()
{
  uint64_t v0;

  sub_10047F60C((void *)*(unsigned __int8 *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_100428250(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TrendArrowIndicatorViewRepresentable(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100428290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>, double a6@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  int v29;
  char v30;
  void (*v34)(char *, uint64_t);
  __n128 v35;
  uint64_t result;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a4;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v38 - v16;
  *a5 = swift_getKeyPath(&unk_10063C090);
  v18 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(a5, v18, 0);
  v19 = (int *)type metadata accessor for ActivityRingsCardView(0);
  v20 = (uint64_t)a5 + v19[6];
  v41 = a1;
  sub_10004F8C8(a1, v20, type metadata accessor for ActivityRingsCard);
  v21 = (uint64_t)a5 + v19[7];
  v40 = a2;
  sub_100021CC0(a2, v21, &qword_10081F600);
  v22 = (_QWORD *)((char *)a5 + v19[8]);
  v23 = type metadata accessor for DashboardCardCellViewCache();
  v24 = sub_1000083D8(&qword_100833108, (uint64_t (*)(uint64_t))type metadata accessor for DashboardCardCellViewCache, (uint64_t)&unk_1006283DC);
  v25 = swift_retain(a3);
  *v22 = ObservedObject.init(wrappedValue:)(v25, v23, v24);
  v22[1] = v26;
  v27 = v39;
  *(double *)((char *)a5 + v19[9]) = a6;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v28(v17, v27, v11);
  v28(v15, (uint64_t)v17, v11);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
  v30 = 0;
  if (v29 != enum case for DynamicTypeSize.xSmall(_:)
    && v29 != enum case for DynamicTypeSize.small(_:)
    && v29 != enum case for DynamicTypeSize.medium(_:)
    && v29 != enum case for DynamicTypeSize.large(_:))
  {
    v30 = 1;
    if (v29 != enum case for DynamicTypeSize.xLarge(_:)
      && v29 != enum case for DynamicTypeSize.xxLarge(_:)
      && v29 != enum case for DynamicTypeSize.xxxLarge(_:))
    {
      v30 = 2;
      if (v29 != enum case for DynamicTypeSize.accessibility1(_:)
        && v29 != enum case for DynamicTypeSize.accessibility2(_:)
        && v29 != enum case for DynamicTypeSize.accessibility3(_:)
        && v29 != enum case for DynamicTypeSize.accessibility4(_:)
        && v29 != enum case for DynamicTypeSize.accessibility5(_:))
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
        v30 = 1;
      }
    }
  }
  v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v17, v11);
  v35 = swift_release(a3);
  ((void (*)(uint64_t, uint64_t, __n128))v34)(v27, v11, v35);
  sub_10001BE90(v40, &qword_10081F600);
  result = sub_100321548(v41);
  v37 = (double *)((char *)a5 + v19[5]);
  *(_BYTE *)v37 = v30;
  v37[1] = a6;
  v37[2] = 0.0;
  return result;
}

uint64_t type metadata accessor for ActivityRingsCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_100833168;
  if (!qword_100833168)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivityRingsCardView);
  return result;
}

uint64_t *sub_1004285D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t, __n128);
  __n128 v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  char *__dst;
  int *v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v55 = a3;
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v18 = *((_QWORD *)v17 + 2);
    *((_QWORD *)v16 + 2) = v18;
    v19 = (char *)a1 + v15;
    v20 = (char *)a2 + v15;
    v21 = type metadata accessor for UUID(0);
    v22 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 16);
    v23 = swift_retain(v18);
    v22(v19, v20, v21, v23);
    v24 = (int *)type metadata accessor for ActivityRingsCard(0);
    v25 = v24[5];
    v26 = &v19[v25];
    v27 = &v20[v25];
    v28 = *(_QWORD *)v27;
    v29 = *((_QWORD *)v27 + 1);
    v30 = v27[16];
    sub_1000EB3F4(*(_QWORD *)v27, v29, v30);
    *(_QWORD *)v26 = v28;
    *((_QWORD *)v26 + 1) = v29;
    v26[16] = v30;
    v19[v24[6]] = v20[v24[6]];
    v19[v24[7]] = v20[v24[7]];
    v19[v24[8]] = v20[v24[8]];
    v31 = v24[9];
    v32 = *(void **)&v20[v31];
    *(_QWORD *)&v19[v31] = v32;
    v33 = v24[10];
    __dst = &v19[v33];
    v34 = &v20[v33];
    v35 = type metadata accessor for Date(0);
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    v38 = v32;
    if (v37(v34, 1, v35))
    {
      v39 = sub_100047110((uint64_t *)&unk_100828370);
      memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
    }
    v40 = v24[11];
    v41 = *(void **)&v20[v40];
    *(_QWORD *)&v19[v40] = v41;
    v19[v24[12]] = v20[v24[12]];
    v42 = v55[7];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = *(uint64_t *)((char *)a2 + v42 + 24);
    v46 = v41;
    if (v45)
    {
      v47 = *((_QWORD *)v44 + 4);
      *((_QWORD *)v43 + 3) = v45;
      *((_QWORD *)v43 + 4) = v47;
      (**(void (***)(char *, char *, uint64_t))(v45 - 8))(v43, v44, v45);
    }
    else
    {
      v48 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v48;
      *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    }
    v49 = v55[8];
    v50 = v55[9];
    v51 = (uint64_t *)((char *)a1 + v49);
    v52 = (uint64_t *)((char *)a2 + v49);
    v12 = v52[1];
    *v51 = *v52;
    v51[1] = v12;
    *(uint64_t *)((char *)a1 + v50) = *(uint64_t *)((char *)a2 + v50);
  }
  swift_retain(v12);
  return a1;
}

double sub_100428894(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double result;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5] + 16));
  v6 = (char *)a1 + a2[6];
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (int *)type metadata accessor for ActivityRingsCard(0);
  sub_1000EB41C(*(_QWORD *)&v6[v8[5]], *(_QWORD *)&v6[v8[5] + 8], v6[v8[5] + 16]);

  v9 = &v6[v8[10]];
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);

  v12 = (_QWORD *)((char *)a1 + a2[7]);
  if (v12[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v12);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[8] + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_1004289E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  __n128 v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  int *v54;
  _QWORD *v55;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v54 = a3;
  v55 = a2;
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 2) = v16;
  v17 = (char *)a1 + v13;
  v18 = (char *)a2 + v13;
  v19 = type metadata accessor for UUID(0);
  v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
  v21 = swift_retain(v16);
  v20(v17, v18, v19, v21);
  v22 = (int *)type metadata accessor for ActivityRingsCard(0);
  v23 = v22[5];
  v24 = &v17[v23];
  v25 = &v18[v23];
  v26 = *(_QWORD *)v25;
  v27 = *((_QWORD *)v25 + 1);
  v28 = v25[16];
  sub_1000EB3F4(*(_QWORD *)v25, v27, v28);
  *(_QWORD *)v24 = v26;
  *((_QWORD *)v24 + 1) = v27;
  v24[16] = v28;
  v17[v22[6]] = v18[v22[6]];
  v17[v22[7]] = v18[v22[7]];
  v17[v22[8]] = v18[v22[8]];
  v29 = v22[9];
  v30 = *(void **)&v18[v29];
  *(_QWORD *)&v17[v29] = v30;
  v31 = v22[10];
  v32 = &v17[v31];
  v33 = &v18[v31];
  v34 = type metadata accessor for Date(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v30;
  if (v36(v33, 1, v34))
  {
    v38 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v39 = v22[11];
  v40 = *(void **)&v18[v39];
  *(_QWORD *)&v17[v39] = v40;
  v17[v22[12]] = v18[v22[12]];
  v41 = v54[7];
  v42 = (char *)a1 + v41;
  v43 = (char *)v55 + v41;
  v44 = *(_QWORD *)((char *)v55 + v41 + 24);
  v45 = v40;
  if (v44)
  {
    v46 = *((_QWORD *)v43 + 4);
    *((_QWORD *)v42 + 3) = v44;
    *((_QWORD *)v42 + 4) = v46;
    (**(void (***)(char *, char *, uint64_t))(v44 - 8))(v42, v43, v44);
  }
  else
  {
    v47 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v47;
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  }
  v48 = v54[8];
  v49 = v54[9];
  v50 = (_QWORD *)((char *)a1 + v48);
  v51 = (_QWORD *)((char *)v55 + v48);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  *(_QWORD *)((char *)a1 + v49) = *(_QWORD *)((char *)v55 + v49);
  swift_retain(v52);
  return a1;
}

_QWORD *sub_100428C6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  int *v60;
  _QWORD *v61;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *v13 = *v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v15 = *((_QWORD *)v13 + 2);
  v16 = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 2) = v16;
  swift_retain(v16);
  swift_release(v15);
  v60 = a3;
  v61 = a2;
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = (int *)type metadata accessor for ActivityRingsCard(0);
  v22 = v21[5];
  v23 = &v18[v22];
  v24 = &v19[v22];
  v25 = *(_QWORD *)v24;
  v26 = *((_QWORD *)v24 + 1);
  v27 = v24[16];
  sub_1000EB3F4(*(_QWORD *)v24, v26, v27);
  v28 = *(_QWORD *)v23;
  v29 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v23 = v25;
  *((_QWORD *)v23 + 1) = v26;
  v30 = v23[16];
  v23[16] = v27;
  sub_1000EB41C(v28, v29, v30);
  v18[v21[6]] = v19[v21[6]];
  v18[v21[7]] = v19[v21[7]];
  v18[v21[8]] = v19[v21[8]];
  v31 = v21[9];
  v32 = *(void **)&v18[v31];
  v33 = *(void **)&v19[v31];
  *(_QWORD *)&v18[v31] = v33;
  v34 = v33;

  v35 = v21[10];
  v36 = &v18[v35];
  v37 = &v19[v35];
  v38 = type metadata accessor for Date(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
LABEL_11:
    v43 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_12:
  v44 = v21[11];
  v45 = *(void **)&v18[v44];
  v46 = *(void **)&v19[v44];
  *(_QWORD *)&v18[v44] = v46;
  v47 = v46;

  v18[v21[12]] = v19[v21[12]];
  v48 = v60[7];
  v49 = (char *)a1 + v48;
  v50 = (char *)v61 + v48;
  v51 = *(_QWORD *)((char *)v61 + v48 + 24);
  if (!*(_QWORD *)((char *)a1 + v48 + 24))
  {
    if (v51)
    {
      *((_QWORD *)v49 + 3) = v51;
      *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
      (**(void (***)(char *, char *))(v51 - 8))(v49, v50);
      goto LABEL_19;
    }
LABEL_18:
    v52 = *(_OWORD *)v50;
    v53 = *((_OWORD *)v50 + 1);
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
    *(_OWORD *)v49 = v52;
    *((_OWORD *)v49 + 1) = v53;
    goto LABEL_19;
  }
  if (!v51)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v49);
    goto LABEL_18;
  }
  sub_1000F1A58(v49, v50);
LABEL_19:
  v54 = v60[8];
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)v61 + v54);
  *v55 = *v56;
  v57 = v56[1];
  v58 = v55[1];
  v55[1] = v57;
  swift_retain(v57);
  swift_release(v58);
  *(_QWORD *)((char *)a1 + v60[9]) = *(_QWORD *)((char *)v61 + v60[9]);
  return a1;
}

char *sub_100428FBC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  v12 = &a1[v9];
  v13 = &a2[v9];
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = (int *)type metadata accessor for ActivityRingsCard(0);
  v16 = v15[5];
  v17 = &v12[v16];
  v18 = &v13[v16];
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  *(_QWORD *)&v12[v15[9]] = *(_QWORD *)&v13[v15[9]];
  v19 = v15[10];
  v20 = &v12[v19];
  v21 = &v13[v19];
  v22 = type metadata accessor for Date(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(_QWORD *)&v12[v15[11]] = *(_QWORD *)&v13[v15[11]];
  v12[v15[12]] = v13[v15[12]];
  v25 = a3[7];
  v26 = a3[8];
  v27 = &a1[v25];
  v28 = &a2[v25];
  v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *sub_1004291D8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v47;
  char *v48;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *v9 = *v10;
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  v11 = *((_QWORD *)v9 + 2);
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  swift_release(v11);
  v47 = a3;
  v48 = a2;
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = (int *)type metadata accessor for ActivityRingsCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = v19[16];
  v21 = *(_QWORD *)v18;
  v22 = *((_QWORD *)v18 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v23 = v18[16];
  v18[16] = v20;
  sub_1000EB41C(v21, v22, v23);
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v24 = v16[9];
  v25 = *(void **)&v13[v24];
  *(_QWORD *)&v13[v24] = *(_QWORD *)&v14[v24];

  v26 = v16[10];
  v27 = &v13[v26];
  v28 = &v14[v26];
  v29 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
LABEL_10:
    v34 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v27, v28, v29);
LABEL_11:
  v35 = v16[11];
  v36 = *(void **)&v13[v35];
  *(_QWORD *)&v13[v35] = *(_QWORD *)&v14[v35];

  v13[v16[12]] = v14[v16[12]];
  v37 = v47[7];
  v38 = &a1[v37];
  if (*(_QWORD *)&a1[v37 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v37]);
  v39 = *(_OWORD *)&v48[v37 + 16];
  *(_OWORD *)v38 = *(_OWORD *)&v48[v37];
  *((_OWORD *)v38 + 1) = v39;
  *((_QWORD *)v38 + 4) = *(_QWORD *)&v48[v37 + 32];
  v40 = v47[8];
  v41 = &a1[v40];
  v42 = &v48[v40];
  v44 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  v45 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v41 = v44;
  *((_QWORD *)v41 + 1) = v43;
  swift_release(v45);
  *(_QWORD *)&a1[v47[9]] = *(_QWORD *)&v48[v47[9]];
  return a1;
}

uint64_t sub_1004294B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004294C4);
}

uint64_t sub_1004294C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ActivityRingsCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100429574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100429580);
}

uint64_t sub_100429580(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ActivityRingsCard(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

void sub_10042962C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_10063C0E8;
    v4 = type metadata accessor for ActivityRingsCard(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_10063C100;
      v6[4] = &unk_10063C118;
      v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

uint64_t sub_1004296D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7034, 1);
}

uint64_t sub_1004296E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v58 = a1;
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  v57 = v3;
  __chkstk_darwin(v2);
  v51 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActivityRingsCardView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AdaptiveStackType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - v14;
  v52 = sub_100047110(&qword_1008331B0);
  v55 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v59 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_1008331B8);
  v53 = *(_QWORD *)(v17 - 8);
  v54 = v17;
  __chkstk_darwin(v17);
  v49 = v1;
  v50 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(v5 + 20);
  v20 = v1;
  v21 = (char *)(v1 + v19);
  v22 = *v21;
  v23 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v21 + 2);
  v60 = v22;
  v61 = v23;
  v62 = v24;
  v25 = sub_100047110(&qword_1008331C0);
  State.wrappedValue.getter(&v63, v25);
  if (v63 >= 2u)
    v26 = (unsigned int *)&enum case for AdaptiveStackType.vertical(_:);
  else
    v26 = (unsigned int *)&enum case for AdaptiveStackType.horizontal(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *v26, v9);
  v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
  v28 = static VerticalAlignment.top.getter(v27);
  v29 = static HorizontalAlignment.leading.getter(v28);
  sub_10004F8C8(v20, (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActivityRingsCardView);
  v30 = *(unsigned __int8 *)(v6 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = v31 + v7;
  v33 = v30 | 7;
  v34 = swift_allocObject(&unk_10079EF60, v31 + v7, v30 | 7);
  sub_10042CB84((uint64_t)v8, v34 + v31);
  v35 = sub_100047110(&qword_1008331C8);
  v36 = sub_100028384(&qword_1008331D0, &qword_1008331C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  AdaptiveStack.init(type:verticalAlignment:horizontalAlignment:spacing:content:)(v15, v28, v29, 0, 0, sub_10042CBC8, v34, v35, v36);
  v37 = v51;
  v38 = v49;
  sub_1003F6E18(v51);
  sub_10004F8C8(v38, (uint64_t)v8, type metadata accessor for ActivityRingsCardView);
  v39 = swift_allocObject(&unk_10079EF88, v32, v33);
  sub_10042CB84((uint64_t)v8, v39 + v31);
  v40 = sub_100028384(&qword_1008331D8, &qword_1008331B0, (uint64_t)&protocol conformance descriptor for AdaptiveStack<A>);
  v41 = sub_1000083D8((unint64_t *)&qword_1008331E0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v42 = v50;
  v43 = v52;
  v44 = v56;
  v45 = v40;
  v46 = v59;
  View.onChange<A>(of:initial:_:)(v37, 0, sub_10042CC08, v39, v52, v56, v45, v41);
  v47 = swift_release(v39);
  (*(void (**)(uint64_t, uint64_t, __n128))(v57 + 8))(v37, v44, v47);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v46, v43);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v53 + 32))(v58, v42, v54);
}

uint64_t sub_100429ABC@<X0>(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  char *v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  _QWORD *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char v35;
  char v36;
  unsigned __int8 v37;
  char v38;
  char v39;
  char v40;
  __int128 v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _BYTE v50[12];
  int v51;
  _OWORD *v52;
  int v53;
  int v54;
  int v55;
  int v56;
  _BYTE *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  unsigned __int8 v71;
  char v72;
  char v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[2];
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  unsigned __int8 v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned __int8 v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  unsigned __int8 v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;

  v52 = a2;
  v3 = sub_100047110(&qword_100832DE0);
  __chkstk_darwin(v3);
  v5 = &v50[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100047110(&qword_100832DE8);
  __chkstk_darwin(v6);
  v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v57 = &v50[-v10];
  sub_10042A020((uint64_t)&v104);
  v70 = v104;
  v11 = v106;
  v12 = v107;
  v13 = v108;
  v55 = v109;
  v56 = v105;
  v53 = v111;
  v54 = v110;
  v68 = v113;
  v69 = v112;
  v66 = v115;
  v67 = v114;
  v14 = (char *)a1 + *(int *)(type metadata accessor for ActivityRingsCardView(0) + 20);
  v15 = *v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v14 + 2);
  LOBYTE(v82) = *v14;
  v83 = v16;
  v84 = v17;
  v18 = sub_100047110(&qword_1008331C0);
  State.wrappedValue.getter(&v74, v18);
  if ((_BYTE)v74)
  {
    if (v74 == 1)
      v19 = (*((double *)&v74 + 1) + -15.0 + -15.0) / 3.0;
    else
      v19 = 80.0;
  }
  else
  {
    v19 = (*((double *)&v74 + 1) + -15.0 + -15.0) * 0.5 + -24.0;
  }
  LOBYTE(v82) = v15;
  v83 = v16;
  v84 = v17;
  v20 = State.wrappedValue.getter(&v74, v18);
  if ((_BYTE)v74)
  {
    if (v74 == 1)
      v21 = (*((double *)&v74 + 1) + -15.0 + -15.0) / 3.0;
    else
      v21 = 80.0;
  }
  else
  {
    v21 = (*((double *)&v74 + 1) + -15.0 + -15.0) * 0.5 + -24.0;
  }
  v22 = v21;
  v23 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(&v116, *(_QWORD *)&v19, 0, *(_QWORD *)&v22, 0, v23, v24);
  LOBYTE(v22) = v117;
  v64 = v118;
  v65 = v116;
  v25 = v119;
  v62 = v121;
  v63 = v120;
  LOBYTE(v82) = v15;
  v83 = v16;
  v84 = v17;
  v26 = State.wrappedValue.getter(&v74, v18);
  v27 = 8 * (char)v74;
  v28 = *(_QWORD *)((char *)&unk_10063C1E8 + v27);
  v60 = *(_QWORD *)((char *)&unk_10063C200 + v27);
  v61 = v28;
  v59 = *(_QWORD *)((char *)&unk_10063C218 + v27);
  v29 = static Edge.Set.all.getter(v26);
  v58 = v29;
  v73 = LOBYTE(v22);
  v72 = v25;
  v71 = 0;
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v29);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v30 = sub_100047110(&qword_1008331E8);
  v31 = sub_10042A39C(a1, (uint64_t)&v5[*(int *)(v30 + 44)]);
  v32 = static Alignment.center.getter(v31);
  sub_1003EC6F4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0, v32, v33);
  sub_10001BE90((uint64_t)v5, &qword_100832DE0);
  v34 = v57;
  sub_100045AD4((uint64_t)v8, (uint64_t)v57, &qword_100832DE8);
  v35 = v73;
  v36 = v72;
  v37 = v71;
  v51 = v71;
  sub_100021CC0((uint64_t)v34, (uint64_t)v8, &qword_100832DE8);
  *(_QWORD *)&v74 = v70;
  v38 = v55;
  v39 = v56;
  BYTE8(v74) = v56;
  HIDWORD(v74) = v11;
  *(_QWORD *)&v75 = __PAIR64__(v13, v12);
  BYTE8(v75) = v55;
  LOBYTE(v22) = v53;
  v40 = v54;
  BYTE9(v75) = v54;
  BYTE10(v75) = v53;
  BYTE11(v75) = v69;
  BYTE12(v75) = v68;
  *(_QWORD *)&v76 = v67;
  *((_QWORD *)&v76 + 1) = v66;
  *(_QWORD *)&v77 = v65;
  BYTE8(v77) = v35;
  *(_QWORD *)&v78 = v64;
  BYTE8(v78) = v36;
  *(_QWORD *)&v79 = v63;
  *((_QWORD *)&v79 + 1) = v62;
  LOBYTE(v80) = v58;
  *((_QWORD *)&v80 + 1) = v61;
  *(_QWORD *)&v81[0] = 0;
  *((_QWORD *)&v81[0] + 1) = v60;
  *(_QWORD *)&v81[1] = v59;
  BYTE8(v81[1]) = v37;
  v41 = v77;
  v42 = v52;
  v52[2] = v76;
  v42[3] = v41;
  v43 = v75;
  *v42 = v74;
  v42[1] = v43;
  v44 = v78;
  v45 = v79;
  v46 = v80;
  *(_OWORD *)((char *)v42 + 121) = *(_OWORD *)((char *)v81 + 9);
  v47 = v81[0];
  v42[6] = v46;
  v42[7] = v47;
  v42[4] = v44;
  v42[5] = v45;
  v48 = sub_100047110(&qword_1008331F0);
  sub_100021CC0((uint64_t)v8, (uint64_t)v42 + *(int *)(v48 + 48), &qword_100832DE8);
  sub_10042CC14((uint64_t)&v74);
  sub_10001BE90((uint64_t)v34, &qword_100832DE8);
  sub_10001BE90((uint64_t)v8, &qword_100832DE8);
  v82 = v70;
  LOBYTE(v83) = v39;
  HIDWORD(v83) = v11;
  v84 = __PAIR64__(v13, v12);
  v85 = v38;
  v86 = v40;
  v87 = LOBYTE(v22);
  v88 = v69;
  v89 = v68;
  v90 = v67;
  v91 = v66;
  v92 = v65;
  v93 = v35;
  v94 = v64;
  v95 = v36;
  v96 = v63;
  v97 = v62;
  v98 = v58;
  v99 = v61;
  v100 = 0;
  v101 = v60;
  v102 = v59;
  v103 = v51;
  return sub_10042CC54((uint64_t)&v82);
}

float sub_10042A020@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  int v21;
  int v22;
  uint64_t v23;
  unsigned __int8 v24;
  int v25;
  void *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  float result;
  float v39;
  float v40;
  uint64_t v41;
  id v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;

  v2 = v1;
  v4 = (int *)type metadata accessor for ActivityRingsCardView(0);
  v44 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v45 = v5;
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ActivityRingsCard(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + v4[6];
  v14 = *(void **)(v13 + v7[9]);
  v15 = v1 + v4[5];
  v16 = *(_BYTE *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(_QWORD *)(v15 + 16);
  v48 = v16;
  v49 = v17;
  v50 = v18;
  v42 = v14;
  v19 = sub_100047110(&qword_1008331C0);
  State.wrappedValue.getter(&v51, v19);
  if ((_BYTE)v51)
  {
    if (v51 == 1)
      v20 = (v52 + -15.0 + -15.0) / 3.0;
    else
      v20 = 80.0;
  }
  else
  {
    v20 = (v52 + -15.0 + -15.0) * 0.5 + -24.0;
  }
  v21 = *(unsigned __int8 *)(v13 + v7[12]);
  v46 = v6;
  v47 = v14;
  if (v21 == 2)
  {
    if (!v14 || objc_msgSend(v42, "_wheelchairUse") != (id)2)
      goto LABEL_9;
  }
  else if ((v21 & 1) == 0)
  {
LABEL_9:
    v22 = 1;
    goto LABEL_12;
  }
  v22 = 2;
LABEL_12:
  v43 = v22;
  sub_100021CC0(v13 + v7[10], (uint64_t)v12, (uint64_t *)&unk_100828370);
  v23 = type metadata accessor for Date(0);
  v24 = 1;
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v12, 1, v23);
  sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_100828370);
  sub_10004F8C8(v13, (uint64_t)v9, type metadata accessor for ActivityRingsCard);
  if (v25 == 1)
  {
    v26 = *(void **)&v9[v7[9]];
    if (v26)
      v24 = objc_msgSend(v26, "paused");
    else
      v24 = 0;
  }
  sub_100321548((uint64_t)v9);
  v27 = *(_BYTE *)(*(_QWORD *)(v2 + v4[8] + 8) + 16);
  v28 = (uint64_t)v46;
  sub_10004F8C8(v2, (uint64_t)v46, type metadata accessor for ActivityRingsCardView);
  v29 = *(unsigned __int8 *)(v44 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = swift_allocObject(&unk_10079EFB0, v30 + v45, v29 | 7);
  sub_10042CB84(v28, v31 + v30);
  v32 = (void *)objc_opt_self(ARUIRingGroup);
  objc_msgSend(v32, "preferredActivityRingThicknessForDiameter:", v20);
  v34 = v33;
  objc_msgSend(v32, "preferredActivityRingInterspacingForDiameter:", v20);
  v36 = v35;
  v37 = v47;
  if (v47)
    v24 = objc_msgSend(v42, "paused");
  result = v20;
  *(_QWORD *)a1 = v37;
  v39 = v34;
  v40 = v36;
  *(_BYTE *)(a1 + 8) = v24;
  *(float *)(a1 + 12) = result;
  *(float *)(a1 + 16) = v39;
  *(float *)(a1 + 20) = v40;
  *(_WORD *)(a1 + 24) = 258;
  *(_BYTE *)(a1 + 26) = 0;
  *(_BYTE *)(a1 + 27) = v43;
  *(_BYTE *)(a1 + 28) = v27;
  *(_QWORD *)(a1 + 32) = sub_10042D578;
  *(_QWORD *)(a1 + 40) = v31;
  return result;
}

uint64_t sub_10042A39C@<X0>(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[83];
  char v82;
  _QWORD v83[83];
  _BYTE v84[592];
  _BYTE v85[608];

  v80 = a2;
  v3 = type metadata accessor for Text.Sizing(0);
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  __chkstk_darwin(v3);
  v68 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100047110(&qword_1008331F8);
  v73 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v69 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v72 = (char *)&v68 - v7;
  v75 = sub_100047110(&qword_100833200);
  __chkstk_darwin(v75);
  v78 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100047110(&qword_100833208);
  __chkstk_darwin(v77);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityRingsCard(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_100833210);
  __chkstk_darwin(v17);
  v76 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v74 = (char *)&v68 - v20;
  v21 = type metadata accessor for ActivityRingsCardView(0);
  v22 = a1;
  v23 = (uint64_t)a1 + *(int *)(v21 + 24);
  sub_100021CC0(v23 + *(int *)(v11 + 40), (uint64_t)v16, (uint64_t *)&unk_100828370);
  v24 = type metadata accessor for Date(0);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v16, 1, v24);
  sub_10001BE90((uint64_t)v16, (uint64_t *)&unk_100828370);
  sub_10004F8C8(v23, (uint64_t)v13, type metadata accessor for ActivityRingsCard);
  if (v25 != 1)
  {
    v28 = sub_100321548((uint64_t)v13);
    goto LABEL_6;
  }
  v26 = *(void **)&v13[*(int *)(v11 + 36)];
  if (v26)
  {
    v27 = objc_msgSend(v26, "paused");
    v28 = sub_100321548((uint64_t)v13);
    if ((v27 & 1) == 0)
      goto LABEL_8;
LABEL_6:
    *(_QWORD *)v10 = static HorizontalAlignment.leading.getter(v28);
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 0;
    v29 = sub_100047110(&qword_100833248);
    sub_10042AC38((uint64_t)v22, (uint64_t)&v10[*(int *)(v29 + 44)]);
    v30 = v78;
    sub_100021CC0((uint64_t)v10, v78, &qword_100833208);
    swift_storeEnumTagMultiPayload(v30, v75, 0);
    v31 = sub_100028384(&qword_100833238, &qword_100833208, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v32 = sub_100007050(&qword_100833218);
    v33 = sub_10042CC94();
    v83[0] = v32;
    v83[1] = v33;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v83, &opaque type descriptor for <<opaque return type of View.textSizing(_:)>>, 1);
    v35 = (uint64_t)v74;
    _ConditionalContent<>.init(storage:)(v30, v77, v79, v31, OpaqueTypeConformance2);
    sub_10001BE90((uint64_t)v10, &qword_100833208);
    goto LABEL_11;
  }
  v28 = sub_100321548((uint64_t)v13);
LABEL_8:
  v36 = static HorizontalAlignment.leading.getter(v28);
  sub_10042B7C0(v22, v84);
  v85[592] = 0;
  v37 = memcpy(&v85[7], v84, 0x249uLL);
  v38 = static Edge.Set.top.getter(v37);
  v39 = (char *)v22 + *(int *)(v21 + 20);
  v40 = *v39;
  v41 = *((_QWORD *)v39 + 1);
  v42 = *((_QWORD *)v39 + 2);
  LOBYTE(v83[0]) = v40;
  v83[1] = v41;
  v83[2] = v42;
  v43 = sub_100047110(&qword_1008331C0);
  State.wrappedValue.getter(v81, v43);
  v44 = 0.0;
  if (!LOBYTE(v81[0]))
    v44 = 2.0;
  v45 = EdgeInsets.init(_all:)(v44);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v82 = 0;
  v81[0] = v36;
  v81[1] = 0;
  LOBYTE(v81[2]) = 0;
  v52 = memcpy((char *)&v81[2] + 1, v85, 0x250uLL);
  LOBYTE(v81[77]) = v38;
  *(double *)&v81[78] = v45;
  v81[79] = v47;
  v81[80] = v49;
  v81[81] = v51;
  LOBYTE(v81[82]) = 0;
  v53 = v68;
  static Text.Sizing.adjustsForOversizedCharacters.getter(v52);
  v54 = sub_100047110(&qword_100833218);
  v55 = sub_10042CC94();
  v56 = v69;
  View.textSizing(_:)(v53, v54, v55);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v53, v71);
  memcpy(v83, v81, 0x291uLL);
  sub_10042CD18((uint64_t)v83);
  v58 = v72;
  v57 = v73;
  v59 = v56;
  v60 = v79;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v59, v79);
  v61 = v78;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v78, v58, v60);
  swift_storeEnumTagMultiPayload(v61, v75, 1);
  v62 = sub_100028384(&qword_100833238, &qword_100833208, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v81[0] = v54;
  v81[1] = v55;
  v63 = swift_getOpaqueTypeConformance2(v81, &opaque type descriptor for <<opaque return type of View.textSizing(_:)>>, 1);
  v35 = (uint64_t)v74;
  _ConditionalContent<>.init(storage:)(v61, v77, v60, v62, v63);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v60);
LABEL_11:
  v64 = v80;
  v65 = v76;
  sub_100021CC0(v35, v76, &qword_100833210);
  sub_100021CC0(v65, v64, &qword_100833210);
  v66 = v64 + *(int *)(sub_100047110(&qword_100833240) + 48);
  *(_QWORD *)v66 = 0;
  *(_BYTE *)(v66 + 8) = 0;
  sub_10001BE90(v35, &qword_100833210);
  return sub_10001BE90(v65, &qword_100833210);
}

uint64_t sub_10042A9B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v15;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v25[8];
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v25[-v7 - 8];
  sub_1003F6E18((uint64_t)&v25[-v7 - 8]);
  v9 = type metadata accessor for ActivityRingsCardView(0);
  v10 = *(_QWORD *)(a1 + *(int *)(v9 + 36));
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v11 == enum case for DynamicTypeSize.xSmall(_:)
    || v11 == enum case for DynamicTypeSize.small(_:)
    || v11 == enum case for DynamicTypeSize.medium(_:)
    || v11 == enum case for DynamicTypeSize.large(_:))
  {
    v15 = 0;
  }
  else
  {
    if (v11 == enum case for DynamicTypeSize.xLarge(_:)
      || v11 == enum case for DynamicTypeSize.xxLarge(_:)
      || v11 == enum case for DynamicTypeSize.xxxLarge(_:))
    {
      goto LABEL_26;
    }
    v15 = 2;
    if (v11 != enum case for DynamicTypeSize.accessibility1(_:)
      && v11 != enum case for DynamicTypeSize.accessibility2(_:)
      && v11 != enum case for DynamicTypeSize.accessibility3(_:)
      && v11 != enum case for DynamicTypeSize.accessibility4(_:)
      && v11 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_26:
      v15 = 1;
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v18 = (char *)(a1 + *(int *)(v9 + 20));
  v19 = *v18;
  v20 = *((_QWORD *)v18 + 1);
  v21 = *((_QWORD *)v18 + 2);
  v27 = v19;
  v28 = v20;
  v29 = v21;
  v25[0] = v15;
  v26 = v10;
  v22 = sub_100047110(&qword_1008331C0);
  return State.wrappedValue.setter(v25, v22);
}

uint64_t sub_10042ABDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for ActivityRingsCardView(0);
  v3 = a1 + *(int *)(v2 + 24);
  result = type metadata accessor for ActivityRingsCard(0);
  if (*(_QWORD *)(v3 + *(int *)(result + 36)))
    *(_BYTE *)(*(_QWORD *)(a1 + *(int *)(v2 + 32) + 8) + 16) = 0;
  return result;
}

void sub_10042AC38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  char v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  int v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t KeyPath;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  id v64;
  NSString v65;
  id v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  uint64_t v70;
  _BYTE *v71;
  void *v72;
  Class isa;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  const char *v80;
  const char *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  char v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  SEL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  char v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  __n128 v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  _BYTE *v133;
  id v134;
  NSString v135;
  id v136;
  uint64_t v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  uint64_t v140;
  Class v141;
  NSString v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  __n128 v148;
  uint64_t v149;
  const char *v150;
  CHWorkoutDetailHeartRateTableViewCell *v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  SEL v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  SEL v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  _BYTE *v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  SEL v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  _BYTE v186[4];
  int v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  double v194;
  _BYTE *v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  unint64_t v199;
  id v200;
  uint64_t v201;
  CHWorkoutDetailHeartRateTableViewCell *v202;
  _BYTE *v203;
  _BYTE *v204;
  _BYTE *v205;
  int v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  CHWorkoutDetailHeartRateTableViewCell *v211;
  uint64_t v212;
  uint64_t v213;
  _BYTE *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  CHWorkoutDetailHeartRateTableViewCell *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  char v225;
  double v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  char v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char v236;
  int v237;
  char v238;
  char v239;
  char v240;
  char v241;
  _QWORD v242[2];

  v213 = sub_100047110(&qword_100833250);
  v212 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v204 = &v186[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v203 = &v186[-v6];
  v7 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v7);
  v9 = &v186[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v216 = type metadata accessor for Date(0);
  v215 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v205 = &v186[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100047110(&qword_100833258);
  __chkstk_darwin(v11);
  v214 = &v186[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v186[-v14];
  v16 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100696160);
  v17 = Text.init(_:tableName:bundle:comment:)(v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  v25 = static Font.body.getter(v24);
  static Font.Weight.semibold.getter(v25);
  v26 = Font.weight(_:)(v25);
  v27 = swift_release(v25);
  v210 = Text.font(_:)(v26, v17, v19, v23, v21, v27);
  v209 = v28;
  v207 = v29;
  v211 = v30;
  swift_release(v26);
  sub_1000E4458(v17, v19, v23);
  swift_bridgeObjectRelease(v21, v31, v32, v33, v34, v35, v36, v37);
  KeyPath = swift_getKeyPath(&unk_10063C180);
  v39 = static Edge.Set.top.getter(KeyPath);
  v40 = type metadata accessor for ActivityRingsCardView(0);
  v41 = a1;
  v42 = a1 + *(int *)(v40 + 20);
  v43 = *(_QWORD *)(v42 + 8);
  v44 = *(_QWORD *)(v42 + 16);
  LOBYTE(v217) = *(_BYTE *)v42;
  v218 = v43;
  v219 = v44;
  v45 = sub_100047110(&qword_1008331C0);
  State.wrappedValue.getter(v242, v45);
  v46 = 0.0;
  if (LOBYTE(v242[0]) < 2u)
    v46 = 12.0;
  v47 = EdgeInsets.init(_all:)(v46);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = *(int *)(v40 + 24);
  v55 = v215;
  v56 = v41 + v54 + *(int *)(type metadata accessor for ActivityRingsCard(0) + 40);
  v57 = v216;
  sub_100021CC0(v56, (uint64_t)v9, (uint64_t *)&unk_100828370);
  v58 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v55 + 48))(v9, 1, v57);
  v208 = KeyPath;
  v206 = v39;
  if (v58 == 1)
  {
    sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_100828370);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v212 + 56))(v15, 1, 1, v213);
    v59 = (uint64_t)v214;
    v60 = v211;
    v61 = v210;
    v62 = v209;
LABEL_11:
    v176 = v207 & 1;
    sub_100021CC0((uint64_t)v15, v59, &qword_100833258);
    *(_QWORD *)a2 = v61;
    *(_QWORD *)(a2 + 8) = v62;
    *(_BYTE *)(a2 + 16) = v176;
    *(_QWORD *)(a2 + 24) = v60;
    *(_QWORD *)(a2 + 32) = 0x3FF0000000000000;
    v177 = v208;
    *(_QWORD *)(a2 + 40) = v208;
    *(_QWORD *)(a2 + 48) = 4;
    *(_BYTE *)(a2 + 56) = 0;
    *(_BYTE *)(a2 + 64) = v206;
    *(double *)(a2 + 72) = v47;
    *(_QWORD *)(a2 + 80) = v49;
    *(_QWORD *)(a2 + 88) = v51;
    *(_QWORD *)(a2 + 96) = v53;
    *(_BYTE *)(a2 + 104) = 0;
    v178 = sub_100047110(&qword_100833260);
    sub_100021CC0(v59, a2 + *(int *)(v178 + 48), &qword_100833258);
    sub_1000E439C(v61, v62, v176);
    swift_bridgeObjectRetain(v60);
    swift_retain(v177);
    sub_10001BE90((uint64_t)v15, &qword_100833258);
    sub_10001BE90(v59, &qword_100833258);
    sub_1000E4458(v61, v62, v176);
    swift_release(v177);
    swift_bridgeObjectRelease(v60, v179, v180, v181, v182, v183, v184, v185);
    return;
  }
  v201 = v45;
  v191 = v53;
  v192 = v51;
  v193 = v49;
  v194 = v47;
  v195 = v15;
  v63 = v205;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v55 + 32))(v205, v9, v57);
  v200 = (id)objc_opt_self(NSBundle);
  v64 = objc_msgSend(v200, "mainBundle");
  v199 = 0x8000000100696180;
  v65 = String._bridgeToObjectiveC()();
  v66 = objc_msgSend(v64, "localizedStringForKey:value:table:", v65, 0, 0);

  v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
  v69 = v68;

  v198 = sub_100047110((uint64_t *)&unk_100827460);
  v70 = swift_allocObject(v198, 72, 7);
  v197 = xmmword_100622F90;
  *(_OWORD *)(v70 + 16) = xmmword_100622F90;
  v71 = v63;
  if (qword_10081DD40 != -1)
    swift_once(&qword_10081DD40, sub_10042B754);
  v72 = (void *)qword_100833100;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v74 = objc_msgSend(v72, "stringFromDate:", isa);

  v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
  v77 = v76;

  *(_QWORD *)(v70 + 56) = &type metadata for String;
  v189 = sub_100038CF8();
  *(_QWORD *)(v70 + 64) = v189;
  *(_QWORD *)(v70 + 32) = v75;
  *(_QWORD *)(v70 + 40) = v77;
  v79 = String.init(format:_:)(v67, v69, v70, v78);
  v81 = v80;
  swift_bridgeObjectRelease(v69, v80, v82, v83, v84, v85, v86, v87);
  v217 = v79;
  v218 = (uint64_t)v81;
  v190 = sub_100038CA0();
  v88 = Text.init<A>(_:)(&v217, &type metadata for String, v190);
  v90 = v89;
  v92 = v91;
  v94 = v93 & 1;
  v96 = static Font.footnote.getter(v95);
  v98 = Text.font(_:)(v96, v88, v90, v94, v92, v97);
  v100 = v99;
  LODWORD(v196) = v101;
  v202 = v102;
  swift_release(v96);
  sub_1000E4458(v88, v90, v94);
  swift_bridgeObjectRelease(v92, v103, v104, v105, v106, v107, v108, v109);
  v110 = swift_getKeyPath(&unk_10063C180);
  v111 = static Edge.Set.top.getter(v110);
  v112 = EdgeInsets.init(_all:)(10.0);
  v114 = v113;
  v116 = v115;
  v118 = v117;
  v120 = static Edge.Set.bottom.getter(v119);
  v121 = *(_QWORD *)(v42 + 8);
  v122 = *(_QWORD *)(v42 + 16);
  LOBYTE(v217) = *(_BYTE *)v42;
  v218 = v121;
  v219 = v122;
  State.wrappedValue.getter(v242, v201);
  v123 = 0.0;
  if (LOBYTE(v242[0]) < 2u)
    v123 = 12.0;
  v124.n128_f64[0] = EdgeInsets.init(_all:)(v123);
  v125 = v124.n128_u64[0];
  v127 = v126;
  v129 = v128;
  v131 = v130;
  v187 = v196 & 1;
  v241 = v196 & 1;
  v240 = 0;
  v239 = 0;
  v238 = 0;
  v132 = static HierarchicalShapeStyle.secondary.getter(v124);
  v201 = v98;
  v217 = v98;
  v196 = v100;
  v218 = v100;
  LOBYTE(v219) = v241;
  v220 = v202;
  v133 = v71;
  v221 = 0x3FF0000000000000;
  v188 = v110;
  v222 = v110;
  v223 = 4;
  v224 = v240;
  v225 = v111;
  v226 = v112;
  v227 = v114;
  v228 = v116;
  v229 = v118;
  v230 = v239;
  v231 = v120;
  v232 = v125;
  v233 = v127;
  v234 = v129;
  v235 = v131;
  v236 = v238;
  v237 = v132;
  v134 = objc_msgSend(v200, "mainBundle");
  v135 = String._bridgeToObjectiveC()();
  v136 = objc_msgSend(v134, "localizedStringForKey:value:table:", v135, 0, 0);

  v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v136);
  v139 = v138;

  v140 = swift_allocObject(v198, 72, 7);
  *(_OWORD *)(v140 + 16) = v197;
  v141 = Date._bridgeToObjectiveC()().super.isa;
  v142 = String._bridgeToObjectiveC()();
  v143 = (id)AXDateStringForFormat(v141, v142);

  if (v143)
  {
    v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(v143);
    v146 = v145;

    v147 = v189;
    *(_QWORD *)(v140 + 56) = &type metadata for String;
    *(_QWORD *)(v140 + 64) = v147;
    *(_QWORD *)(v140 + 32) = v144;
    *(_QWORD *)(v140 + 40) = v146;
    v149 = String.init(format:_:)(v137, v139, v140, v148);
    v151 = (CHWorkoutDetailHeartRateTableViewCell *)v150;
    swift_bridgeObjectRelease(v139, v150, v152, v153, v154, v155, v156, v157);
    v242[0] = v149;
    v242[1] = v151;
    v158 = sub_100047110(&qword_100833268);
    v159 = sub_10042D020();
    v160 = (uint64_t)v204;
    View.accessibilityLabel<A>(_:)(v242, v158, &type metadata for String, v159, v190);
    swift_bridgeObjectRelease(v151, v161, v162, v163, v164, v165, v166, v167);
    sub_1000E4458(v201, v196, v187);
    swift_release(v188);
    swift_bridgeObjectRelease(v202, v168, v169, v170, v171, v172, v173, v174);
    (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v133, v216);
    v175 = v203;
    sub_100045AD4(v160, (uint64_t)v203, &qword_100833250);
    v15 = v195;
    sub_100045AD4((uint64_t)v175, (uint64_t)v195, &qword_100833250);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v212 + 56))(v15, 0, 1, v213);
    v59 = (uint64_t)v214;
    v60 = v211;
    v61 = v210;
    v62 = v209;
    v47 = v194;
    v49 = v193;
    v51 = v192;
    v53 = v191;
    goto LABEL_11;
  }
  __break(1u);
}

void sub_10042B754()
{
  id v0;
  NSString v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setLocalizedDateFormatFromTemplate:", v1);

  qword_100833100 = (uint64_t)v0;
}

void sub_10042B7C0(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  __n128 v24;
  void (*v25)(char *, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  Class isa;
  Class v35;
  objc_class *v36;
  char *v37;
  id v38;
  Class v39;
  objc_class *v40;
  char *v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unsigned int v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void *v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  char v97;
  uint64_t v98;
  Class v99;
  Class v100;
  objc_class *v101;
  char *v102;
  objc_class *v103;
  id v104;
  Class v105;
  char *v106;
  char *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  SEL v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  double v126;
  int v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  void *v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  CHWorkoutDetailHeartRateTableViewCell *v140;
  char v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  __n128 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  CHWorkoutDetailHeartRateTableViewCell *v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;
  char v158;
  uint64_t v159;
  Class v160;
  Class v161;
  objc_class *v162;
  char *v163;
  id v164;
  Class v165;
  objc_class *v166;
  char *v167;
  char *v168;
  id v169;
  uint64_t v170;
  CHWorkoutDetailHeartRateTableViewCell *v171;
  uint64_t v172;
  char v173;
  int v174;
  SEL v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  double v185;
  double v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  CHWorkoutDetailHeartRateTableViewCell *v197;
  uint64_t v198;
  void (*v199)(_QWORD, _QWORD, _QWORD);
  uint64_t v200;
  uint64_t v201;
  CHWorkoutDetailHeartRateTableViewCell *v202;
  SEL v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  SEL v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  CHWorkoutDetailHeartRateTableViewCell *v219;
  SEL v220;
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  CHWorkoutDetailHeartRateTableViewCell *v231;
  SEL v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  char v239;
  char v240;
  double v241;
  uint64_t v242;
  uint64_t v243;
  CHWorkoutDetailHeartRateTableViewCell *v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  CHWorkoutDetailHeartRateTableViewCell *v248;
  char v249;
  SEL v250;
  id v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  SEL v257;
  id v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  uint64_t v264;
  char *v265;
  CHWorkoutDetailHeartRateTableViewCell *v266;
  int v267;
  double v268;
  int v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  double v273;
  int v274;
  double v275;
  int v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  double v280;
  int v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  double v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  double v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  CHWorkoutDetailHeartRateTableViewCell *v293;
  uint64_t KeyPath;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  CHWorkoutDetailHeartRateTableViewCell *v298;
  uint64_t v299;
  uint64_t v300;
  Class v301;
  char *v302;
  Class v303;
  _DWORD v304[3];
  unsigned int v305;
  void (*v306)(char *, _QWORD, uint64_t);
  uint64_t v307;
  uint64_t v308;
  char *v309;
  CHWorkoutDetailHeartRateTableViewCell *v310;
  uint64_t v311;
  int v312;
  int v313;
  uint64_t v314;
  uint64_t v315;
  CHWorkoutDetailHeartRateTableViewCell *v316;
  int v317;
  int v318;
  __int128 v319;
  void *v320;
  uint64_t v321;
  uint64_t v322;
  CHWorkoutDetailHeartRateTableViewCell *v323;
  uint64_t v324;
  _BYTE v325[399];
  _BYTE v326[399];
  _OWORD v327[37];
  _QWORD v328[50];
  char v329;
  char v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;
  char v339;
  char v340;
  _BYTE v341[7];
  _BYTE v342[7];
  _BYTE v343[7];
  _BYTE v344[7];
  _BYTE v345[7];
  _BYTE v346[7];
  _BYTE v347[7];
  _BYTE v348[7];
  char v349[16];
  objc_super v350;
  objc_super v351;
  objc_super v352;
  objc_super v353;
  _QWORD v354[51];
  objc_super v355;
  objc_super v356;

  v320 = a2;
  v3 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v264 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.Leading(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v264 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = LocalizedStringKey.init(stringLiteral:)(1163284301, 0xE400000000000000);
  v11 = Text.init(_:tableName:bundle:comment:)(v10);
  v321 = v12;
  v322 = v11;
  v317 = v13;
  v323 = v14;
  v318 = static Edge.Set.all.getter(v11);
  v15 = EdgeInsets.init(_all:)(0.0);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = static Font.body.getter(v15);
  v23 = *(void (**)(_QWORD))(v7 + 104);
  v305 = enum case for Font.Leading.tight(_:);
  v306 = (void (*)(char *, _QWORD, uint64_t))v23;
  v23(v9);
  *((_QWORD *)&v319 + 1) = Font.leading(_:)(v9, v22);
  v24 = swift_release(v22);
  v25 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
  v302 = v9;
  v308 = v6;
  *(_QWORD *)v304 = v25;
  v25(v9, v6, v24);
  *(_QWORD *)&v319 = swift_getKeyPath(&unk_10063C1B0);
  sub_10042C7F0(0, (uint64_t)v5);
  v309 = v5;
  v26 = Text.init(_:)(v5);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = sub_10013AD0C();
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
  v35 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
  v36 = (objc_class *)type metadata accessor for GradientColors();
  v37 = (char *)objc_allocWithZone(v36);
  *(_QWORD *)&v37[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(_QWORD *)&v37[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v35;
  v356.receiver = v37;
  v356.super_class = v36;
  v303 = v36;
  v38 = -[CHWorkoutDetailHeartRateTableViewCell init](&v356, "init");
  v307 = v33;
  v39 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
  v40 = (objc_class *)type metadata accessor for MetricColors();
  v41 = (char *)objc_allocWithZone(v40);
  *(_QWORD *)&v41[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v38;
  *(_QWORD *)&v41[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v39;
  v355.receiver = v41;
  v355.super_class = v40;
  v301 = v40;
  v42 = (char *)-[CHWorkoutDetailHeartRateTableViewCell init](&v355, "init");
  v43 = *(id *)&v42[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  v44 = Color.init(uiColor:)(v43);
  *(_QWORD *)&v327[0] = v44;
  v45 = Text.foregroundStyle<A>(_:)(v327, v26, v28, v32, v30, &type metadata for Color, &protocol witness table for Color);
  v314 = v46;
  v315 = v45;
  v313 = v47;
  v316 = v48;
  sub_1000E4458(v26, v28, v32);
  swift_release(v44);
  swift_bridgeObjectRelease(v30, v49, v50, v51, v52, v53, v54, v55);
  v56 = type metadata accessor for ActivityRingsCardView(0);
  v57 = (char *)a1 + *(int *)(v56 + 20);
  v58 = *v57;
  v59 = *((_QWORD *)v57 + 1);
  v60 = *((_QWORD *)v57 + 2);
  LOBYTE(v327[0]) = *v57;
  *((_QWORD *)&v327[0] + 1) = v59;
  *(_QWORD *)&v327[1] = v60;
  v324 = sub_100047110(&qword_1008331C0);
  v61 = State.wrappedValue.getter(v354, v324);
  v62 = LOBYTE(v354[0]);
  LODWORD(v28) = static Edge.Set.all.getter(v61);
  v63 = EdgeInsets.init(_all:)(0.0);
  v65 = v64;
  v67 = v66;
  v311 = v68;
  v69 = *(int *)(v56 + 24);
  v310 = a1;
  v70 = (uint64_t)a1 + v69;
  v71 = type metadata accessor for ActivityRingsCard(0);
  v72 = *(int *)(v71 + 36);
  v299 = v71;
  v300 = v70;
  v73 = *(void **)(v70 + v72);
  v312 = v28;
  if (!v73)
  {
    v74 = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
    if (!v74)
    {
      __break(1u);
      return;
    }
    v75 = v74;
    v76 = objc_msgSend(v74, "isStandalonePhoneFitnessMode");

    if ((v76 & 1) != 0)
      goto LABEL_3;
LABEL_6:
    v290 = v72;
    v282 = v62;
    v77 = LocalizedStringKey.init(stringLiteral:)(0x4553494352455845, 0xE800000000000000);
    v78 = Text.init(_:tableName:bundle:comment:)(v77);
    v296 = v79;
    v297 = v78;
    v276 = v80;
    v298 = v81;
    v281 = static Edge.Set.top.getter(v78);
    LOBYTE(v327[0]) = v58;
    *((_QWORD *)&v327[0] + 1) = v59;
    *(_QWORD *)&v327[1] = v60;
    State.wrappedValue.getter(v328, v324);
    v82 = -1.0;
    if (LOBYTE(v328[0]) < 2u)
      v82 = 2.0;
    v83 = EdgeInsets.init(_all:)(v82);
    v279 = v84;
    v280 = v83;
    v277 = v86;
    v278 = v85;
    v87 = static Font.body.getter(v83);
    v88 = v302;
    v89 = v308;
    v306(v302, v305, v308);
    v295 = Font.leading(_:)(v88, v87);
    v90 = swift_release(v87);
    (*(void (**)(char *, uint64_t, __n128))v304)(v88, v89, v90);
    KeyPath = swift_getKeyPath(&unk_10063C1B0);
    v91 = (uint64_t)v309;
    sub_10042C7F0(1, (uint64_t)v309);
    v92 = Text.init(_:)(v91);
    v94 = v93;
    v96 = v95;
    v98 = v97 & 1;
    v99 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.6, 1.0, 0.0, 1.0).super.isa;
    v100 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.84706, 1.0, 0.0, 1.0).super.isa;
    v101 = v303;
    v102 = (char *)objc_allocWithZone(v303);
    *(_QWORD *)&v102[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v99;
    *(_QWORD *)&v102[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v100;
    v353.receiver = v102;
    v353.super_class = v101;
    v103 = v301;
    v104 = -[CHWorkoutDetailHeartRateTableViewCell init](&v353, "init");
    v105 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.65068, 1.0, 0.0, 1.0).super.isa;
    v106 = (char *)objc_allocWithZone(v103);
    *(_QWORD *)&v106[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v104;
    *(_QWORD *)&v106[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v105;
    v352.receiver = v106;
    v352.super_class = v103;
    v107 = (char *)-[CHWorkoutDetailHeartRateTableViewCell init](&v352, "init");
    v108 = *(id *)&v107[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

    v109 = Color.init(uiColor:)(v108);
    *(_QWORD *)&v327[0] = v109;
    v110 = Text.foregroundStyle<A>(_:)(v327, v92, v94, v98, v96, &type metadata for Color, &protocol witness table for Color);
    v291 = v111;
    v267 = v112;
    v114 = v113;
    sub_1000E4458(v92, v94, v98);
    swift_release(v109);
    swift_bridgeObjectRelease(v96, v115, v116, v117, v118, v119, v120, v121);
    v122 = *v57;
    v123 = *((_QWORD *)v57 + 1);
    v124 = *((_QWORD *)v57 + 2);
    LOBYTE(v327[0]) = *v57;
    *((_QWORD *)&v327[0] + 1) = v123;
    *(_QWORD *)&v327[1] = v124;
    v125 = State.wrappedValue.getter(v328, v324);
    v126 = -7.0;
    if (LOBYTE(v328[0]) < 2u)
      v126 = -4.0;
    v275 = v126;
    v127 = static Edge.Set.all.getter(v125);
    v128 = EdgeInsets.init(_all:)(0.0);
    v272 = v129;
    v273 = v128;
    v270 = v131;
    v271 = v130;
    v132 = *(unsigned __int8 *)(v300 + *(int *)(v299 + 48));
    v288 = v17;
    v289 = v15;
    v286 = v21;
    v287 = v19;
    v284 = v65;
    v285 = v63;
    v283 = v67;
    v292 = v110;
    v293 = v114;
    v274 = v127;
    v265 = v57;
    if (v132 == 2)
    {
      v133 = *(void **)(v300 + v290);
      if (!v133 || objc_msgSend(v133, "_wheelchairUse") != (id)2)
        goto LABEL_13;
    }
    else if ((v132 & 1) == 0)
    {
LABEL_13:
      v134 = 0x444E415453;
      v135 = 0xE500000000000000;
LABEL_16:
      v136 = LocalizedStringKey.init(stringLiteral:)(v134, v135);
      v137 = (uint64_t)v309;
      v138 = Text.init(_:tableName:bundle:comment:)(v136);
      v299 = v139;
      v300 = v138;
      v266 = v140;
      LODWORD(v290) = v141 & 1;
      v269 = static Edge.Set.top.getter(v138);
      LOBYTE(v327[0]) = v122;
      *((_QWORD *)&v327[0] + 1) = v123;
      *(_QWORD *)&v327[1] = v124;
      State.wrappedValue.getter(v328, v324);
      v142 = -1.0;
      if (LOBYTE(v328[0]) < 2u)
        v142 = 2.0;
      v268 = EdgeInsets.init(_all:)(v142);
      v144 = v143;
      v146 = v145;
      v148 = v147;
      v149 = static Font.body.getter(v268);
      v150 = v302;
      v151 = v308;
      v306(v302, v305, v308);
      v306 = (void (*)(char *, _QWORD, uint64_t))Font.leading(_:)(v150, v149);
      v152 = swift_release(v149);
      (*(void (**)(char *, uint64_t, __n128))v304)(v150, v151, v152);
      v308 = swift_getKeyPath(&unk_10063C1B0);
      sub_10042C7F0(2, v137);
      v153 = Text.init(_:)(v137);
      v155 = v154;
      v157 = v156;
      v159 = v158 & 1;
      v160 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.84706, 1.0, 1.0).super.isa;
      v161 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.62727, 1.0).super.isa;
      v162 = v303;
      v163 = (char *)objc_allocWithZone(v303);
      *(_QWORD *)&v163[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v160;
      *(_QWORD *)&v163[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v161;
      v351.receiver = v163;
      v351.super_class = v162;
      v164 = -[CHWorkoutDetailHeartRateTableViewCell init](&v351, "init");
      v165 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.96471, 1.0).super.isa;
      v166 = v301;
      v167 = (char *)objc_allocWithZone(v301);
      *(_QWORD *)&v167[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v164;
      *(_QWORD *)&v167[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v165;
      v350.receiver = v167;
      v350.super_class = v166;
      v168 = (char *)-[CHWorkoutDetailHeartRateTableViewCell init](&v350, "init");
      v169 = *(id *)&v168[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

      v170 = Color.init(uiColor:)(v169);
      *(_QWORD *)&v327[0] = v170;
      v309 = (char *)Text.foregroundStyle<A>(_:)(v327, v153, v155, v159, v157, &type metadata for Color, &protocol witness table for Color);
      v310 = v171;
      v307 = v172;
      v174 = v173 & 1;
      sub_1000E4458(v153, v155, v159);
      swift_release(v170);
      swift_bridgeObjectRelease(v157, v175, v176, v177, v178, v179, v180, v181);
      v182 = *((_QWORD *)v265 + 1);
      v183 = *((_QWORD *)v265 + 2);
      LOBYTE(v327[0]) = *v265;
      *((_QWORD *)&v327[0] + 1) = v182;
      *(_QWORD *)&v327[1] = v183;
      v184 = State.wrappedValue.getter(v328, v324);
      if (LOBYTE(v328[0]) >= 2u)
        v185 = -7.0;
      else
        v185 = -4.0;
      LODWORD(v324) = static Edge.Set.all.getter(v184);
      v186 = EdgeInsets.init(_all:)(0.0);
      v188 = v187;
      v190 = v189;
      v192 = v191;
      v331 = v276 & 1;
      v193 = v267 & 1;
      v330 = v267 & 1;
      v194 = v290;
      v329 = v290;
      v340 = v276 & 1;
      LODWORD(v303) = v276 & 1;
      v339 = 0;
      v338 = v267 & 1;
      v304[0] = v267 & 1;
      v337 = 0;
      v336 = v290;
      v335 = 0;
      v334 = v174;
      v333 = 0;
      v332 = 0;
      sub_1000E439C(v297, v296, v276 & 1);
      swift_bridgeObjectRetain(v298);
      swift_retain(KeyPath);
      swift_retain(v295);
      sub_1000E439C(v292, v291, v193);
      swift_bridgeObjectRetain(v293);
      v195 = v299;
      v196 = v300;
      sub_1000E439C(v300, v299, v194);
      v197 = v266;
      swift_bridgeObjectRetain(v266);
      v198 = v308;
      swift_retain(v308);
      v199 = (void (*)(_QWORD, _QWORD, _QWORD))v306;
      swift_retain(v306);
      v200 = (uint64_t)v309;
      v201 = v307;
      v305 = v174;
      sub_1000E439C((uint64_t)v309, v307, v174);
      v202 = v310;
      swift_bridgeObjectRetain(v310);
      sub_1000E4458(v200, v201, v174);
      swift_bridgeObjectRelease(v202, v203, v204, v205, v206, v207, v208, v209);
      sub_1000E4458(v196, v195, v329);
      swift_release(v199);
      swift_release(v198);
      swift_bridgeObjectRelease(v197, v210, v211, v212, v213, v214, v215, v216);
      v218 = v291;
      v217 = v292;
      sub_1000E4458(v292, v291, v330);
      v219 = v293;
      swift_bridgeObjectRelease(v293, v220, v221, v222, v223, v224, v225, v226);
      v227 = v296;
      v228 = v297;
      sub_1000E4458(v297, v296, v331);
      v229 = v295;
      swift_release(v295);
      v230 = KeyPath;
      swift_release(KeyPath);
      v231 = v298;
      swift_bridgeObjectRelease(v298, v232, v233, v234, v235, v236, v237, v238);
      *(_QWORD *)&v327[0] = v228;
      *((_QWORD *)&v327[0] + 1) = v227;
      LOBYTE(v327[1]) = (_BYTE)v303;
      *(_DWORD *)((char *)&v327[1] + 1) = v328[0];
      DWORD1(v327[1]) = *(_DWORD *)((char *)v328 + 3);
      *((_QWORD *)&v327[1] + 1) = v231;
      LOBYTE(v327[2]) = v281;
      *(_DWORD *)((char *)&v327[2] + 1) = *(_DWORD *)v326;
      DWORD1(v327[2]) = *(_DWORD *)&v326[3];
      *((double *)&v327[2] + 1) = v280;
      *(_QWORD *)&v327[3] = v279;
      *((_QWORD *)&v327[3] + 1) = v278;
      *(_QWORD *)&v327[4] = v277;
      BYTE8(v327[4]) = 0;
      HIDWORD(v327[4]) = *(_DWORD *)&v325[3];
      *(_DWORD *)((char *)&v327[4] + 9) = *(_DWORD *)v325;
      *(_QWORD *)&v327[5] = v230;
      *((_QWORD *)&v327[5] + 1) = v229;
      *(_QWORD *)&v327[6] = v217;
      *((_QWORD *)&v327[6] + 1) = v218;
      LOBYTE(v327[7]) = v304[0];
      *(_DWORD *)((char *)&v327[7] + 1) = *(_DWORD *)v349;
      DWORD1(v327[7]) = *(_DWORD *)&v349[3];
      *((_QWORD *)&v327[7] + 1) = v219;
      *(_QWORD *)&v327[8] = 0;
      *((double *)&v327[8] + 1) = v275;
      LOBYTE(v327[9]) = v274;
      DWORD1(v327[9]) = *(_DWORD *)&v348[3];
      *(_DWORD *)((char *)&v327[9] + 1) = *(_DWORD *)v348;
      *((double *)&v327[9] + 1) = v273;
      *(_QWORD *)&v327[10] = v272;
      *((_QWORD *)&v327[10] + 1) = v271;
      *(_QWORD *)&v327[11] = v270;
      BYTE8(v327[11]) = 0;
      HIDWORD(v327[11]) = *(_DWORD *)&v347[3];
      *(_DWORD *)((char *)&v327[11] + 9) = *(_DWORD *)v347;
      *(_QWORD *)&v327[12] = v300;
      *((_QWORD *)&v327[12] + 1) = v299;
      LOBYTE(v327[13]) = v290;
      *(_DWORD *)((char *)&v327[13] + 1) = *(_DWORD *)v346;
      DWORD1(v327[13]) = *(_DWORD *)&v346[3];
      *((_QWORD *)&v327[13] + 1) = v197;
      LOBYTE(v327[14]) = v269;
      *(_DWORD *)((char *)&v327[14] + 1) = *(_DWORD *)v345;
      DWORD1(v327[14]) = *(_DWORD *)&v345[3];
      *((double *)&v327[14] + 1) = v268;
      *(_QWORD *)&v327[15] = v144;
      *((_QWORD *)&v327[15] + 1) = v146;
      *(_QWORD *)&v327[16] = v148;
      BYTE8(v327[16]) = 0;
      *(_DWORD *)((char *)&v327[16] + 9) = *(_DWORD *)v344;
      HIDWORD(v327[16]) = *(_DWORD *)&v344[3];
      *(_QWORD *)&v327[17] = v308;
      *((_QWORD *)&v327[17] + 1) = v306;
      *(_QWORD *)&v327[18] = v309;
      *((_QWORD *)&v327[18] + 1) = v307;
      LOBYTE(v327[19]) = v305;
      *(_DWORD *)((char *)&v327[19] + 1) = *(_DWORD *)v343;
      DWORD1(v327[19]) = *(_DWORD *)&v343[3];
      *((_QWORD *)&v327[19] + 1) = v310;
      *(_QWORD *)&v327[20] = 0;
      *((double *)&v327[20] + 1) = v185;
      LOBYTE(v327[21]) = v324;
      *(_DWORD *)((char *)&v327[21] + 1) = *(_DWORD *)v342;
      DWORD1(v327[21]) = *(_DWORD *)&v342[3];
      *((double *)&v327[21] + 1) = v186;
      *(_QWORD *)&v327[22] = v188;
      *((_QWORD *)&v327[22] + 1) = v190;
      *(_QWORD *)&v327[23] = v192;
      BYTE8(v327[23]) = 0;
      *(_DWORD *)((char *)&v327[23] + 9) = *(_DWORD *)v341;
      HIDWORD(v327[23]) = *(_DWORD *)&v341[3];
      *(_QWORD *)&v327[24] = 0;
      BYTE8(v327[24]) = 0;
      ASFriendListDisplayMode.id.getter(v327);
      sub_100045AD4((uint64_t)v327, (uint64_t)v354, &qword_1008332B8);
      v17 = v288;
      v15 = v289;
      v21 = v286;
      v19 = v287;
      v65 = v284;
      v63 = v285;
      v67 = v283;
      v62 = v282;
      goto LABEL_22;
    }
    v135 = 0x800000010068B490;
    v134 = 0xD000000000000010;
    goto LABEL_16;
  }
  if ((objc_msgSend(v73, "_isStandalonePhoneSummary") & 1) == 0)
    goto LABEL_6;
LABEL_3:
  sub_10042D39C(v327);
  sub_100045AD4((uint64_t)v327, (uint64_t)v354, &qword_1008332B8);
LABEL_22:
  v239 = v313 & 1;
  LODWORD(v324) = v313 & 1;
  v240 = v317 & 1;
  if (v62 >= 2)
    v241 = -7.0;
  else
    v241 = -4.0;
  v349[0] = v317 & 1;
  sub_100045AD4((uint64_t)v354, (uint64_t)v325, &qword_1008332B8);
  sub_100045AD4((uint64_t)v325, (uint64_t)v326, &qword_1008332B8);
  v243 = v321;
  v242 = v322;
  *(_QWORD *)&v327[0] = v322;
  *((_QWORD *)&v327[0] + 1) = v321;
  LOBYTE(v327[1]) = v240;
  v244 = v323;
  *((_QWORD *)&v327[1] + 1) = v323;
  LOBYTE(v327[2]) = v318;
  *((double *)&v327[2] + 1) = v15;
  *(_QWORD *)&v327[3] = v17;
  *((_QWORD *)&v327[3] + 1) = v19;
  *(_QWORD *)&v327[4] = v21;
  BYTE8(v327[4]) = 0;
  v245 = v319;
  v327[5] = v319;
  v247 = v314;
  v246 = v315;
  *(_QWORD *)&v327[6] = v315;
  *((_QWORD *)&v327[6] + 1) = v314;
  LOBYTE(v327[7]) = v239;
  v248 = v316;
  *((_QWORD *)&v327[7] + 1) = v316;
  *(_QWORD *)&v327[8] = 0;
  *((double *)&v327[8] + 1) = v241;
  LOBYTE(v327[9]) = v312;
  *((double *)&v327[9] + 1) = v63;
  *(_QWORD *)&v327[10] = v65;
  *((_QWORD *)&v327[10] + 1) = v67;
  *(_QWORD *)&v327[11] = v311;
  BYTE8(v327[11]) = 0;
  sub_100045AD4((uint64_t)v326, (uint64_t)&v327[12], &qword_1008332B8);
  memcpy(v320, v327, 0x249uLL);
  sub_100045AD4((uint64_t)v325, (uint64_t)v328, &qword_1008332B8);
  sub_1000E439C(v242, v243, v240);
  swift_bridgeObjectRetain(v244);
  swift_retain(v245);
  swift_retain(*((_QWORD *)&v245 + 1));
  v249 = v324;
  sub_1000E439C(v246, v247, v324);
  swift_bridgeObjectRetain(v248);
  sub_10042D2F8((uint64_t)v326, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10042D1E8);
  sub_10042D2F8((uint64_t)v328, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10042CF08);
  sub_1000E4458(v246, v247, v249);
  swift_bridgeObjectRelease(v248, v250, v251, v252, v253, v254, v255, v256);
  sub_1000E4458(v242, v243, v349[0]);
  swift_release(*((_QWORD *)&v245 + 1));
  swift_release(v245);
  swift_bridgeObjectRelease(v244, v257, v258, v259, v260, v261, v262, v263);
}

uint64_t sub_10042C7F0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - v9;
  v11 = v2 + *(int *)(type metadata accessor for ActivityRingsCardView(0) + 24);
  v12 = type metadata accessor for ActivityRingsCard(0);
  v13 = *(void **)(v11 + *(int *)(v12 + 36));
  if (!v13)
    return AttributedString.init()(v12);
  v14 = *(void **)(v11 + *(int *)(v12 + 44));
  if (!v14)
    return AttributedString.init()(v12);
  if (a1)
  {
    if (a1 != 1)
    {
      v23 = v13;
      v24 = v14;
      v17 = objc_msgSend(v23, "appleStandHours");
      v22 = objc_msgSend(v23, "appleStandHoursGoal");
      if (qword_10081DD90 != -1)
        swift_once(&qword_10081DD90, sub_100445F54);
      sub_1001B6064(v17, v22, (void (*)(_QWORD, _QWORD, _QWORD))qword_10086AA18, (uint64_t)v10);
      goto LABEL_18;
    }
    v15 = v13;
    v16 = v14;
    v17 = objc_msgSend(v15, "appleExerciseTime");
    v18 = objc_msgSend(v15, "appleExerciseTimeGoal");
  }
  else
  {
    v20 = v13;
    v21 = v14;
    if (objc_msgSend(v20, "activityMoveMode") != (id)2)
    {
      v17 = objc_msgSend(v20, "activeEnergyBurned");
      v22 = objc_msgSend(v20, "activeEnergyBurnedGoal");
      if (qword_10081DD90 != -1)
        swift_once(&qword_10081DD90, sub_100445F54);
      sub_1001B583C(v17, v22, v21, (void (*)(_QWORD, _QWORD, _QWORD))qword_10086AA18, (uint64_t)v10);
      goto LABEL_18;
    }
    v17 = objc_msgSend(v20, "appleMoveTime");
    v18 = objc_msgSend(v20, "appleMoveTimeGoal");
  }
  v22 = v18;
  if (qword_10081DD90 != -1)
    swift_once(&qword_10081DD90, sub_100445F54);
  sub_1001B5C6C(v17, v22, (void (*)(_QWORD, _QWORD, _QWORD))qword_10086AA18, (uint64_t)v10);
LABEL_18:

  sub_100021CC0((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_10082EDF0);
  v25 = type metadata accessor for AttributedString(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25);
  if ((_DWORD)v27 == 1)
  {
    AttributedString.init()(v27);

    sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_10082EDF0);
    return sub_10001BE90((uint64_t)v7, (uint64_t *)&unk_10082EDF0);
  }
  else
  {
    sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_10082EDF0);

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(a2, v7, v25);
  }
}

uint64_t sub_10042CB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityRingsCardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042CBC8@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityRingsCardView(0) - 8) + 80);
  return sub_100429ABC((CHWorkoutDetailHeartRateTableViewCell *)(v1 + ((v3 + 16) & ~v3)), a1);
}

uint64_t sub_10042CC08()
{
  return sub_10042D584(sub_10042A9B4);
}

uint64_t sub_10042CC14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(id *)a1;
  sub_10003AFE0(v2, v3);
  return a1;
}

uint64_t sub_10042CC54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);

  sub_100022BA4(v2, v3);
  return a1;
}

unint64_t sub_10042CC94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833220;
  if (!qword_100833220)
  {
    v1 = sub_100007050(&qword_100833218);
    sub_100028384(&qword_100833228, &qword_100833230, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100833220);
  }
  return result;
}

uint64_t sub_10042CD18(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_BYTE *)(a1 + 136);
  v8 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 144);
  v46 = *(_QWORD *)(a1 + 224);
  v47 = *(_QWORD *)(a1 + 216);
  v44 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 240);
  v45 = *(_QWORD *)(a1 + 232);
  v42 = *(_QWORD *)(a1 + 256);
  v43 = *(_QWORD *)(a1 + 248);
  v40 = *(_QWORD *)(a1 + 272);
  v41 = *(_QWORD *)(a1 + 264);
  v38 = *(_OWORD *)(a1 + 296);
  v39 = *(_OWORD *)(a1 + 280);
  v36 = *(_OWORD *)(a1 + 328);
  v37 = *(_OWORD *)(a1 + 312);
  v34 = *(_OWORD *)(a1 + 360);
  v35 = *(_OWORD *)(a1 + 344);
  v32 = *(_OWORD *)(a1 + 392);
  v33 = *(_OWORD *)(a1 + 376);
  v30 = *(_OWORD *)(a1 + 424);
  v31 = *(_OWORD *)(a1 + 408);
  v28 = *(_OWORD *)(a1 + 456);
  v29 = *(_OWORD *)(a1 + 440);
  v26 = *(_OWORD *)(a1 + 488);
  v27 = *(_OWORD *)(a1 + 472);
  v24 = *(_OWORD *)(a1 + 520);
  v25 = *(_OWORD *)(a1 + 504);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v9, v10, v11, v12, v13, v14, v15);
  swift_release(v4);
  sub_1000E4458(v5, v6, v7);
  swift_bridgeObjectRelease(v8, v16, v17, v18, v19, v20, v21, v22);
  sub_10042CF08(v47, v46, v45, v44, v43, v42, v41, v40, v39, *((uint64_t *)&v39 + 1), v38, *((uint64_t *)&v38 + 1), v37, *((uint64_t *)&v37 + 1), v36, *((CHWorkoutDetailHeartRateTableViewCell **)&v36 + 1), v35, *((uint64_t *)&v35 + 1), v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((CHWorkoutDetailHeartRateTableViewCell **)&v30 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((CHWorkoutDetailHeartRateTableViewCell **)&v24 + 1));
  return a1;
}

void sub_10042CF08(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, CHWorkoutDetailHeartRateTableViewCell *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,CHWorkoutDetailHeartRateTableViewCell *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,CHWorkoutDetailHeartRateTableViewCell *a40)
{
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;

  if (a4)
  {
    sub_1000E4458(a1, a2, a3 & 1);
    swift_release(a11);
    swift_bridgeObjectRelease(a4, v41, v42, v43, v44, v45, v46, v47);
    swift_release(a12);
    sub_1000E4458(a13, a14, a15 & 1);
    swift_bridgeObjectRelease(a16, v48, v49, v50, v51, v52, v53, v54);
    sub_1000E4458(a25, a26, a27 & 1);
    swift_release(a35);
    swift_bridgeObjectRelease(a28, v55, v56, v57, v58, v59, v60, v61);
    swift_release(a36);
    sub_1000E4458(a37, a38, a39 & 1);
    swift_bridgeObjectRelease(a40, v62, v63, v64, v65, v66, v67, v68);
  }
}

unint64_t sub_10042D020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833270;
  if (!qword_100833270)
  {
    v1 = sub_100007050(&qword_100833268);
    sub_1000F4518(&qword_100833278, &qword_100833280, (void (*)(void))sub_10042D0BC);
    sub_100028384(&qword_100820870, &qword_100820878, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100833270);
  }
  return result;
}

uint64_t sub_10042D0BC()
{
  return sub_1000F4518(&qword_100833288, &qword_100833290, (void (*)(void))sub_10042D0D8);
}

unint64_t sub_10042D0D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833298;
  if (!qword_100833298)
  {
    v1 = sub_100007050(&qword_1008332A0);
    sub_10042D15C();
    sub_100028384(&qword_1008255A0, &qword_1008255A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100833298);
  }
  return result;
}

unint64_t sub_10042D15C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008332A8;
  if (!qword_1008332A8)
  {
    v1 = sub_100007050(&qword_1008332B0);
    sub_100028384(&qword_100824490, &qword_100824498, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008332A8);
  }
  return result;
}

double sub_10042D1E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40)
{
  double result;

  if (a4)
  {
    sub_1000E439C(a1, a2, a3 & 1);
    swift_retain(a12);
    swift_bridgeObjectRetain(a4);
    swift_retain(a11);
    sub_1000E439C(a13, a14, a15 & 1);
    swift_bridgeObjectRetain(a16);
    sub_1000E439C(a25, a26, a27 & 1);
    swift_retain(a36);
    swift_bridgeObjectRetain(a28);
    swift_retain(a35);
    sub_1000E439C(a37, a38, a39 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a40).n128_u64[0];
  }
  return result;
}

uint64_t sub_10042D2F8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v13 = *(_BYTE *)(a1 + 392);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    *(_QWORD *)(a1 + 384),
    v13);
  return a1;
}

double sub_10042D39C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  *(_OWORD *)((char *)a1 + 377) = 0u;
  return result;
}

uint64_t sub_10042D3E0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = (int *)type metadata accessor for ActivityRingsCardView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_1008325D0);
  v17 = v5;
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)v6 + v1[5] + 16));
  v9 = (char *)v6 + v1[6];
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (int *)type metadata accessor for ActivityRingsCard(0);
  sub_1000EB41C(*(_QWORD *)&v9[v11[5]], *(_QWORD *)&v9[v11[5] + 8], v9[v11[5] + 16]);

  v12 = &v9[v11[10]];
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);

  v15 = (_QWORD *)((char *)v6 + v1[7]);
  if (v15[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v15);
  swift_release(*(_QWORD *)((char *)v6 + v1[8] + 8));
  return swift_deallocObject(v0, v4 + v17, v3 | 7);
}

uint64_t sub_10042D578()
{
  return sub_10042D584(sub_10042ABDC);
}

uint64_t sub_10042D584(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityRingsCardView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_10042D5C0()
{
  _QWORD v1[4];

  v1[0] = sub_100007050(&qword_1008331B0);
  v1[1] = type metadata accessor for DynamicTypeSize(255);
  v1[2] = sub_100028384(&qword_1008331D8, &qword_1008331B0, (uint64_t)&protocol conformance descriptor for AdaptiveStack<A>);
  v1[3] = sub_1000083D8((unint64_t *)&qword_1008331E0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

CHWorkoutDetailHeartRateTableViewCell *sub_10042D660(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *heartRateController;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(void);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *result;
  CHWorkoutDetailHeartRateTableViewCell *v47[2];
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;

  v3 = type metadata accessor for Date(0);
  v52 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v51 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100833470);
  __chkstk_darwin(v8);
  v53 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008215A0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v54 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v48 = (uint64_t)v47 - v14;
  v15 = *(_QWORD *)a1->cellPadding;
  if (!v15)
    return &_swiftEmptyArrayStorage;
  v50 = v3;
  v47[1] = v1;
  swift_bridgeObjectRetain(a1);
  v47[0] = a1;
  heartRateController = a1[1].heartRateController;
  v17 = &_swiftEmptyArrayStorage;
  v18 = (uint64_t)v53;
  v49 = v7;
  while (1)
  {
    v56 = v17;
    v26 = *(_QWORD *)heartRateController;
    v27 = *((id *)heartRateController - 1);
    v28 = sub_10033DC98(v27);
    if (!v28)
    {
      v41 = 1;
      goto LABEL_11;
    }
    v55 = v15;
    if (v26 < 0)
      goto LABEL_22;
    v29 = v28;
    v30 = v11;
    v31 = v10;
    objc_msgSend(v28, "setEarnedInstanceCount:", v26, v47[0]);
    v32 = -[NSObject completedDate](v27, "completedDate");
    if (!v32)
      break;
    v33 = v32;
    v34 = v51;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v32);

    v35 = v52;
    v36 = *(void (**)(void))(v52 + 32);
    v37 = v49;
    v38 = v34;
    v39 = v50;
    ((void (*)(char *, char *, uint64_t))v36)(v49, v38, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v39);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v37, 1, v39) == 1)
      goto LABEL_21;
    v40 = *(int *)(v31 + 48);
    v18 = (uint64_t)v53;
    v36();
    v41 = 0;
    *(_QWORD *)(v18 + v40) = v29;
    v10 = v31;
    v11 = v30;
    v15 = v55;
LABEL_11:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, v41, 1, v10);

    v42 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10) == 1;
    v17 = v56;
    if (v42)
    {
      sub_10001BE90(v18, &qword_100833470);
    }
    else
    {
      v43 = v48;
      sub_100045AD4(v18, v48, &qword_1008215A0);
      sub_100045AD4(v43, v54, &qword_1008215A0);
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001413A0(0, *(_QWORD *)v17->cellPadding + 1, 1, (unint64_t)v17);
      v45 = *(_QWORD *)v17->cellPadding;
      v44 = *(_QWORD *)v17->cellInset;
      if (v45 >= v44 >> 1)
        v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001413A0(v44 > 1, v45 + 1, 1, (unint64_t)v17);
      *(_QWORD *)v17->cellPadding = v45 + 1;
      sub_100045AD4(v54, (uint64_t)v17+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v45, &qword_1008215A0);
    }
    heartRateController += 16;
    if (!--v15)
    {
      swift_bridgeObjectRelease(v47[0], v19, v20, v21, v22, v23, v24, v25);
      return v17;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v49, 1, 1, v50);
LABEL_21:
  __break(1u);
LABEL_22:
  result = (CHWorkoutDetailHeartRateTableViewCell *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10042DA78(uint64_t a1)
{
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = &_swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = sub_100047110(&qword_1008215A0);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = *(id *)(v6 + *(int *)(v4 + 48));
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
      specialized ContiguousArray._endMutation()(v10);
      v6 += v7;
      --v2;
    }
    while (v2);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

double sub_10042DB58@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double result;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;

  KeyPath = swift_getKeyPath(&unk_10063C2E0);
  v4 = swift_getKeyPath(&unk_10063C308);
  static Published.subscript.getter(&v15, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  v8 = v19;
  v9 = v20;
  v10 = v21;
  v11 = v23;
  v12 = v24;
  result = *(double *)&v15;
  v14 = v22;
  *(_OWORD *)a1 = v15;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v12;
  return result;
}

_QWORD *sub_10042DC10(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15)
{
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v54;
  void *v55;
  char *v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  __int128 aBlock;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _OWORD v74[2];
  _BYTE v75[24];
  _OWORD v76[4];
  _BYTE v77[25];

  v16 = v15;
  v65 = a8;
  v55 = a7;
  v69 = a15;
  v68 = a14;
  v67 = a13;
  v66 = a12;
  v57 = a9;
  v61 = *v15;
  v23 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v23);
  v56 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize(v15);
  *(_QWORD *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory) = a1;
  *(_QWORD *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementsDataProvider) = a2;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator) = a3;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_awardsDataProvider) = a4;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fitnessAppContext) = a5;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fiuiFormattingManager) = a6;
  *(_QWORD *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager) = v65;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager) = a9;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore) = a10;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_navigationCoordinator) = a11;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_wheelchairUseCache) = v66;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutDataProvider) = v67;
  *(_QWORD *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager) = v68;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator) = v69;
  v59 = objc_allocWithZone((Class)AAUIAchievementResourceProvider);
  v64 = a1;
  v54 = a2;
  v25 = a3;
  swift_retain(a3);
  v63 = a4;
  v62 = a5;
  v26 = a6;
  v60 = v26;
  v65 = v65;
  v27 = v57;
  v28 = a10;
  v58 = a11;
  swift_retain(a11);
  v29 = v66;
  v66 = v29;
  v67 = v67;
  v68 = v68;
  v69 = v69;
  v30 = objc_msgSend(v59, "init");
  *(_QWORD *)((char *)v16
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementResourceProvider) = v30;
  v31 = v55;
  *(_QWORD *)((char *)v16
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider) = sub_100431068(v55, v26, v29);
  swift_retain(v25);
  v32 = v27;
  v59 = v32;
  v33 = v28;
  swift_retain(a11);
  v34 = v31;
  v57 = v33;
  sub_10049A4F8(v25, (uint64_t)_swiftEmptyArrayStorage, v34, 0, v32, (uint64_t)v33, a11, (uint64_t)v76);
  v35 = v25;
  swift_release(v25);

  swift_release(a11);
  swift_beginAccess((char *)v16 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider__viewModel, v75, 33, 0);
  v72 = v76[2];
  v73 = v76[3];
  v74[0] = *(_OWORD *)v77;
  *(_OWORD *)((char *)v74 + 9) = *(_OWORD *)&v77[9];
  aBlock = v76[0];
  v71 = v76[1];
  Published.init(initialValue:)(&aBlock, &type metadata for ActivitySharingFriendDetailViewModel);
  swift_endAccess(v75);
  v36 = type metadata accessor for TaskPriority(0);
  v37 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v56, 1, 1, v36);
  type metadata accessor for MainActor(0);
  v38 = v54;
  v39 = v34;
  swift_retain(v16);
  v41 = static MainActor.shared.getter(v40);
  v42 = (_QWORD *)swift_allocObject(&unk_10079F028, 64, 7);
  v42[2] = v41;
  v42[3] = &protocol witness table for MainActor;
  v42[4] = v39;
  v42[5] = v38;
  v43 = v61;
  v42[6] = v16;
  v42[7] = v43;
  v44 = sub_10020D9C0(v37, (uint64_t)&unk_100833488, (uint64_t)v42);
  swift_release(v44);
  v45 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v46 = (void *)kASFriendListChangedNotificationKey;
  v47 = (void *)objc_opt_self(NSOperationQueue);
  v48 = v46;
  v49 = objc_msgSend(v47, "mainQueue");
  v50 = swift_allocObject(&unk_10079F050, 24, 7);
  swift_weakInit(v50 + 16, v16);
  *(_QWORD *)&v72 = sub_100431830;
  *((_QWORD *)&v72 + 1) = v50;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v71 = sub_1000398D4;
  *((_QWORD *)&v71 + 1) = &unk_10079F068;
  v51 = _Block_copy(&aBlock);
  v52 = objc_msgSend(v45, "addObserverForName:object:queue:usingBlock:", v48, 0, v49, v51, swift_release(*((_QWORD *)&v72 + 1)).n128_f64[0]);

  swift_release(v35);
  swift_release(v58);

  _Block_release(v51);
  swift_unknownObjectRelease(v52);

  return v16;
}

uint64_t sub_10042E2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;

  v6[16] = a4;
  v6[17] = a6;
  v9 = type metadata accessor for MainActor(0);
  v6[18] = v9;
  v6[19] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_10083345C);
  v6[20] = v10;
  *v10 = v6;
  v10[1] = sub_10042E328;
  v10[3] = a4;
  v10[4] = a5;
  return swift_task_switch(sub_1004314EC, 0, 0);
}

uint64_t sub_10042E328(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  v2[14] = v1;
  v2[15] = a1;
  v3 = v2[17];
  swift_task_dealloc(v2[20]);
  return swift_task_switch(sub_10042E384, v3, 0);
}

uint64_t sub_10042E384()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 136)
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  if (objc_msgSend(*(id *)(v0 + 128), "isMe", swift_retain(v1).n128_f64[0]))
    v2 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 136)+ OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator), "isPaused");
  else
    v2 = 0;
  v21 = *(_QWORD *)(v0 + 144);
  v4 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 120);
  v6 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_navigationCoordinator);
  v8 = *(id *)(v3 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager);
  v9 = v6;
  swift_retain(v7);
  v10 = v4;
  swift_bridgeObjectRetain(v5);
  sub_10049A4F8(v1, (uint64_t)v5, v10, v2, v8, (uint64_t)v9, v7, v0 + 16);
  swift_release(v7);

  swift_release(v1);
  swift_bridgeObjectRelease(v5, v11, v12, v13, v14, v15, v16, v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor);
  return swift_task_switch(sub_10042E4EC, v18, v19);
}

uint64_t sub_10042E4EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 152));
  sub_10042E8F8(v0 + 16);
  sub_10043169C((uint64_t *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10042E534(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject(&unk_10079F0A0, 40, 7);
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    v11 = sub_10020D9C0((uint64_t)v5, (uint64_t)&unk_100833498, (uint64_t)v10);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_10042E610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 112) = a4;
  v5 = sub_100047110((uint64_t *)&unk_10082E690);
  *(_QWORD *)(v4 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10042E66C, 0, 0);
}

uint64_t sub_10042E66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10042E6D4, v2, v3);
}

uint64_t sub_10042E6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 128));
  KeyPath = swift_getKeyPath(&unk_10063C2E0);
  v3 = swift_getKeyPath(&unk_10063C308);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 96);
  return swift_task_switch(sub_10042E790, 0, 0);
}

uint64_t sub_10042E790()
{
  uint64_t *v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  void *v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t **v26;

  v1 = (CHWorkoutDetailHeartRateTableViewCell *)v0[23];
  v2 = (void *)v0[24];
  v4 = (void *)v0[21];
  v3 = (CHWorkoutDetailHeartRateTableViewCell *)v0[22];
  v6 = v0[19];
  v5 = (void *)v0[20];
  v7 = (void *)v0[18];
  swift_release(v0[17]);

  swift_release(v6);
  swift_bridgeObjectRelease(v3, v8, v9, v10, v11, v12, v13, v14);
  swift_bridgeObjectRelease(v1, v15, v16, v17, v18, v19, v20, v21);

  v22 = objc_msgSend(v5, "UUID");
  if (v22)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  v24 = v0[15];
  v25 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, v23, 1, v25);
  v26 = (uint64_t **)swift_task_alloc(dword_100833304);
  v0[25] = (uint64_t)v26;
  *v26 = v0;
  v26[1] = (uint64_t *)sub_10042E894;
  return sub_10042EB38(v0[15]);
}

uint64_t sub_10042E894()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 120);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 200));
  sub_10001BE90(v1, (uint64_t *)&unk_10082E690);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10042E8F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  os_log_type_t v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  NSObject *log;
  uint64_t v29;
  _OWORD v30[4];
  _OWORD v31[2];

  v3 = *v1;
  v4 = static os_log_type_t.default.getter(a1);
  v5 = (void *)HKLogActivity;
  v6 = v4;
  if (os_log_type_enabled(HKLogActivity, v4))
  {
    sub_10027B95C((uint64_t *)a1);
    sub_10027B95C((uint64_t *)a1);
    log = v5;
    v7 = swift_slowAlloc(22, -1);
    v8 = (_QWORD *)swift_slowAlloc(8, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v30[0] = v9;
    *(_DWORD *)v7 = 136315394;
    v10 = _typeName(_:qualified:)(v3, 0);
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)v11;
    v29 = sub_10003E8EC(v10, v11, (uint64_t *)v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v7 + 4);
    swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
    *(_WORD *)(v7 + 12) = 2112;
    v20 = *(void **)(a1 + 40);
    v29 = (uint64_t)v20;
    v21 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v7 + 14);
    *v8 = v20;
    sub_10043169C((uint64_t *)a1);
    sub_10043169C((uint64_t *)a1);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%s updating friend %@", (uint8_t *)v7, 0x16u);
    v22 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v8, 1, v22);
    swift_slowDealloc(v8, -1, -1);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  KeyPath = swift_getKeyPath(&unk_10063C2E0);
  v24 = swift_getKeyPath(&unk_10063C308);
  v25 = *(_OWORD *)(a1 + 48);
  v30[2] = *(_OWORD *)(a1 + 32);
  v30[3] = v25;
  v31[0] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)(a1 + 73);
  v26 = *(_OWORD *)(a1 + 16);
  v30[0] = *(_OWORD *)a1;
  v30[1] = v26;
  sub_10027B95C((uint64_t *)a1);
  swift_retain(v1);
  return static Published.subscript.setter(v30, v1, KeyPath, v24);
}

uint64_t sub_10042EB38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[14] = a1;
  v2[15] = v1;
  v3 = sub_100047110((uint64_t *)&unk_10082E690);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[17] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[18] = v5;
  v2[19] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10042EBBC, v1, 0);
}

uint64_t sub_10042EBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  sub_100021CC0(*(_QWORD *)(v0 + 112), v3, (uint64_t *)&unk_10082E690);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 128), (uint64_t *)&unk_10082E690);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
    v5 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v7 = objc_msgSend(v5, "friendWithUUID:", isa);
    *(_QWORD *)(v0 + 160) = v7;

    if (v7)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + 120)
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementsDataProvider);
      v9 = (_QWORD *)swift_task_alloc(dword_10083345C);
      *(_QWORD *)(v0 + 168) = v9;
      *v9 = v0;
      v9[1] = sub_10042ED10;
      v9[3] = v7;
      v9[4] = v8;
      return swift_task_switch(sub_1004314EC, 0, 0);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  }
  v11 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042ED10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10042ED70, v3, 0);
}

uint64_t sub_10042ED70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 120)
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  if (objc_msgSend(*(id *)(v0 + 160), "isMe", swift_retain(v1).n128_f64[0]))
    v2 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 120)+ OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator), "isPaused");
  else
    v2 = 0;
  v3 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 176);
  v4 = *(void **)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_navigationCoordinator);
  v8 = *(id *)(v5 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager);
  v9 = v6;
  swift_retain(v7);
  v10 = v4;
  swift_bridgeObjectRetain(v3);
  sub_10049A4F8(v1, (uint64_t)v3, v10, v2, v8, (uint64_t)v9, v7, v0 + 16);
  swift_bridgeObjectRelease(v3, v11, v12, v13, v14, v15, v16, v17);
  swift_release(v1);

  swift_release(v7);
  v18 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  return swift_task_switch(sub_10042EEEC, v19, v20);
}

uint64_t sub_10042EEEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_10042E8F8(v0 + 16);
  return swift_task_switch(sub_10042EF3C, v1, 0);
}

uint64_t sub_10042EF3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void **)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  sub_10043169C((uint64_t *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  v5 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042EFA4(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a2;
  v5 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v32 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = type metadata accessor for DateComponents(0);
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)&v17 = __chkstk_darwin(v15).n128_u64[0];
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(*a1, "relevantEarnedInstance", v17);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_7:
    v24 = &qword_100821648;
    v25 = (uint64_t)v14;
    goto LABEL_8;
  }
  v21 = v20;
  v31 = a3;
  v22 = objc_msgSend(v20, "earnedDateComponents");

  if (v22)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v11, v23, 1, v15);
  sub_100045AD4((uint64_t)v11, (uint64_t)v14, &qword_100821648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    goto LABEL_7;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  Calendar.date(from:)(v19);
  v28 = v34;
  v29 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v35) != 1)
  {
    v30 = v32;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v32, v7, v29);
    v26 = Date.isAfterOrEqualTo(date:)(v31);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    return v26 & 1;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v24 = (uint64_t *)&unk_100828370;
  v25 = (uint64_t)v7;
LABEL_8:
  sub_10001BE90(v25, v24);
  v26 = 0;
  return v26 & 1;
}

void sub_10042F290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __n128 v4;
  char v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  uint64_t v27[2];

  v0 = type metadata accessor for DispatchPredicate(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v3 = static OS_dispatch_queue.main.getter(v4);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.notOnQueue(_:), v0);
  v5 = _dispatchPreconditionTest(_:)(v3);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  if ((v5 & 1) != 0)
  {
    sub_10017CBC4();
    v7 = v6;
    v8 = sub_10042D660(v6);
    swift_bridgeObjectRelease(v7, v9, v10, v11, v12, v13, v14, v15);
    v27[0] = (uint64_t)v8;
    swift_bridgeObjectRetain(v8);
    sub_10042FD34(v27);
    swift_bridgeObjectRelease(v8, v16, v17, v18, v19, v20, v21, v22);
    v23 = v27[0];
    v24 = sub_10042DA78(v27[0]);
    swift_release(v23);
    v27[0] = (uint64_t)v24;
    v25 = sub_100047110(&qword_100833468);
    CheckedContinuation.resume(returning:)(v27, v25);
  }
  else
  {
    __break(1u);
    swift_release(v27[0]);
    __break(1u);
  }
}

void sub_10042F3EC(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  void *v26;
  unint64_t v27;
  char *v28;
  id v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  SEL v43;
  char v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  id v56;
  id v57;
  id v58;
  char *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  id v68;
  id v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  id v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  _QWORD *v76;
  char *v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  uint64_t v97;
  SEL v98;
  char v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  _QWORD *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  id v120;
  char *v121;

  v121 = a2;
  v3 = sub_100047110(&qword_100828318);
  __chkstk_darwin(v3);
  v115 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v118 = (char *)&v110 - v6;
  v119 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v117 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v114 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v116 = (char *)&v110 - v9;
  v10 = sub_100047110(&qword_1008215A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD **)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v110 - v19;
  v21 = *(int *)(v10 + 48);
  v22 = (void (*)(char *, uint64_t, uint64_t, __n128))v14[2];
  v22(v12, a1, v13, v18);
  v120 = *(id *)(a1 + v21);
  v23 = (void (*)(char *, char *, uint64_t))v14[4];
  v23(v20, v12, v13);
  v24 = *(int *)(v10 + 48);
  v25 = v121;
  ((void (*)(char *, char *, uint64_t))v22)(v12, v121, v13);
  v26 = *(void **)&v25[v24];
  v23(v16, v12, v13);
  v27 = sub_10026B3EC();
  v28 = v16;
  v29 = v120;
  v30 = v26;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v20, v16, v13, v27) & 1) == 0)
  {
    static Date.> infix(_:_:)(v20, v16);

    v55 = (void (*)(char *, uint64_t))v14[1];
    v55(v16, v13);
    v55(v20, v13);
    return;
  }
  v121 = v30;
  v113 = v14;
  v120 = v29;
  v31 = objc_msgSend(v29, "section");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35 = (uint64_t)v118;
  AAUIAwardsDataProviderSection.init(rawValue:)(v32, v34);
  v36 = v117;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
  v38 = v119;
  v39 = v37(v35, 1, v119);
  v112 = v13;
  if (v39 == 1)
    goto LABEL_6;
  v40 = (uint64_t)v116;
  v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 32);
  v41 = v111(v116, v35, v38);
  v42 = (CHWorkoutDetailHeartRateTableViewCell *)static AAUIAwardsDataProviderSection.allCases.getter(v41);
  v118 = (char *)sub_100449F30(v40, (uint64_t)v42);
  v44 = (char)v43;
  swift_bridgeObjectRelease(v42, v43, v45, v46, v47, v48, v49, v50);
  if ((v44 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v40, v38);
  }
  else
  {
    v51 = objc_msgSend(v121, "section");
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v54 = v53;

    v35 = (uint64_t)v115;
    AAUIAwardsDataProviderSection.init(rawValue:)(v52, v54);
    if (v37(v35, 1, v38) == 1)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v116, v38);
LABEL_6:
      sub_10001BE90(v35, &qword_100828318);
      goto LABEL_9;
    }
    v94 = (uint64_t)v114;
    v95 = v111(v114, v35, v38);
    v96 = (CHWorkoutDetailHeartRateTableViewCell *)static AAUIAwardsDataProviderSection.allCases.getter(v95);
    v97 = sub_100449F30(v94, (uint64_t)v96);
    v99 = (char)v98;
    swift_bridgeObjectRelease(v96, v98, v100, v101, v102, v103, v104, v105);
    v106 = v38;
    v107 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v107(v94, v106);
    v107((uint64_t)v116, v106);
    if ((v99 & 1) == 0 && v118 != (char *)v97)
    {

      v108 = v112;
      v109 = (void (*)(char *, uint64_t))v113[1];
      v109(v28, v112);
      v109(v20, v108);
      return;
    }
  }
LABEL_9:
  v119 = (uint64_t)v28;
  v56 = v120;
  v57 = objc_msgSend(v120, "template");
  v58 = objc_msgSend(v57, "displayOrder");

  v59 = v121;
  v60 = objc_msgSend(v121, "template");
  v61 = objc_msgSend(v60, "displayOrder");

  v62 = objc_msgSend(v56, "template");
  v63 = v62;
  if (v58 != v61)
  {
    objc_msgSend(v62, "displayOrder");

    v73 = objc_msgSend(v59, "template");
    objc_msgSend(v73, "displayOrder");

    v74 = v112;
    v75 = (void (*)(uint64_t, uint64_t))v113[1];
    v75(v119, v112);
    v75((uint64_t)v20, v74);
    return;
  }
  v64 = objc_msgSend(v62, "uniqueName");

  if (!v64)
  {
    __break(1u);
    goto LABEL_22;
  }
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  v67 = v66;

  v68 = objc_msgSend(v59, "template");
  v69 = objc_msgSend(v68, "uniqueName");

  if (!v69)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  if (v65 != v70 || v67 != v72)
    _stringCompareWithSmolCheck(_:_:expecting:)(v65, v67, v70, v72, 1);
  v76 = v113;
  v77 = v121;

  swift_bridgeObjectRelease(v67, v78, v79, v80, v81, v82, v83, v84);
  swift_bridgeObjectRelease(v72, v85, v86, v87, v88, v89, v90, v91);
  v92 = (void (*)(uint64_t, uint64_t))v76[1];
  v93 = v112;
  v92(v119, v112);
  v92((uint64_t)v20, v93);
}

uint64_t sub_10042FA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider__viewModel;
  v2 = sub_100047110(&qword_100833478);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementResourceProvider));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementsDataProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager));

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_navigationCoordinator));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager));

  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_10042FB9C()
{
  uint64_t v0;

  sub_10042FA4C();
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10042FBB4()
{
  return type metadata accessor for ActivitySharingFriendDetailDataProvider(0);
}

uint64_t type metadata accessor for ActivitySharingFriendDetailDataProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1008332F0;
  if (!qword_1008332F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivitySharingFriendDetailDataProvider);
  return result;
}

void sub_10042FBF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[18];

  sub_10042FCA4();
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 18, v4, a1 + 80);
  }
}

void sub_10042FCA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_100833308)
  {
    v0 = type metadata accessor for Published(0, &type metadata for ActivitySharingFriendDetailViewModel);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_100833308);
  }
}

uint64_t sub_10042FCF8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ActivitySharingFriendDetailDataProvider(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

void sub_10042FD34(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(sub_100047110(&qword_1008215A0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100147844(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10042FDB8(v5);
  *a1 = v3;
}

void sub_10042FDB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  Swift::Int v25;
  Swift::Int v26;
  const char *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  Swift::Int v40;
  Swift::Int v41;
  Swift::Int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  Class *v74;
  objc_class *v75;
  unint64_t v76;
  uint64_t v77;
  Class isa;
  uint64_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  unint64_t v88;
  Class *v89;
  Class v90;
  Class v91;
  uint64_t v92;
  uint64_t v93;
  Class *v94;
  Class v95;
  Class v96;
  BOOL v97;
  uint64_t v98;
  char v99;
  Class *v100;
  Class v101;
  Class v102;
  uint64_t v103;
  BOOL v104;
  Class v105;
  uint64_t v106;
  Class *v107;
  Class v108;
  Class v109;
  uint64_t v110;
  Class *v111;
  Class v112;
  Class v113;
  uint64_t v114;
  unint64_t v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  uint64_t *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  Swift::Int v125;
  Swift::Int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;
  uint64_t v139;
  unint64_t v140;
  objc_class *v141;
  objc_class *v142;
  Class *v143;
  unint64_t v144;
  SEL v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  const char *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  CHWorkoutDetailHeartRateTableViewCell *v160;
  Swift::Int v161;
  char *v162;
  char *v163;
  CHWorkoutDetailHeartRateTableViewCell *v164;
  Swift::Int v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  Swift::Int v180;
  uint64_t *v181;

  v2 = v1;
  v173 = sub_100047110(&qword_1008215A0);
  v179 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v174 = (uint64_t)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v177 = (uint64_t)&v160 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v160 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v160 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v160 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v160 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v160 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v160 - v23;
  v181 = a1;
  v25 = a1[1];
  v26 = _minimumMergeRunLength(_:)(v25);
  if (v26 >= v25)
  {
    if (v25 < 0)
      goto LABEL_150;
    if (v25)
      sub_10043089C(0, v25, 1, v181);
    return;
  }
  if (v25 >= 0)
    v34 = v25;
  else
    v34 = v25 + 1;
  if (v25 < -1)
    goto LABEL_159;
  v165 = v26;
  if (v25 < 2)
  {
    v178 = (unint64_t)&_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80));
    v164 = &_swiftEmptyArrayStorage;
    if (v25 != 1)
    {
      v72 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      v39 = &_swiftEmptyArrayStorage;
      goto LABEL_112;
    }
    v162 = v24;
    v163 = v21;
    v168 = v18;
    v169 = v15;
    v171 = v12;
    v172 = v9;
  }
  else
  {
    v162 = v24;
    v163 = v21;
    v168 = v18;
    v169 = v15;
    v171 = v12;
    v172 = v9;
    v35 = v34 >> 1;
    v36 = static Array._allocateBufferUninitialized(minimumCapacity:)(v34 >> 1, v173);
    *(_QWORD *)(v36 + 16) = v35;
    v37 = *(unsigned __int8 *)(v179 + 80);
    v164 = (CHWorkoutDetailHeartRateTableViewCell *)v36;
    v178 = v36 + ((v37 + 32) & ~v37);
  }
  v38 = 0;
  v39 = &_swiftEmptyArrayStorage;
  while (1)
  {
    v40 = v38;
    v41 = v25;
    v42 = v40 + 1;
    v176 = v41;
    if (v40 + 1 >= v41)
    {
      v59 = v40 + 1;
LABEL_23:
      v58 = v165;
      v57 = v176;
      goto LABEL_40;
    }
    v43 = v2;
    v44 = *v181;
    v45 = *(_QWORD *)(v179 + 72);
    v46 = (uint64_t)v162;
    sub_100021CC0(*v181 + v45 * v42, (uint64_t)v162, &qword_1008215A0);
    v166 = v44;
    v167 = v45;
    v47 = v44 + v45 * v40;
    v48 = v163;
    sub_100021CC0(v47, (uint64_t)v163, &qword_1008215A0);
    sub_10042F3EC(v46, v48);
    v2 = v43;
    if (v43)
    {
      sub_10001BE90((uint64_t)v48, &qword_1008215A0);
      sub_10001BE90(v46, &qword_1008215A0);
      goto LABEL_125;
    }
    v50 = v49;
    sub_10001BE90((uint64_t)v48, &qword_1008215A0);
    sub_10001BE90(v46, &qword_1008215A0);
    v180 = v40 + 2;
    if (v40 + 2 >= v176)
    {
      v57 = v176;
      v51 = v167;
      v58 = v165;
      if ((v50 & 1) == 0)
        goto LABEL_39;
    }
    else
    {
      v161 = v40;
      v52 = v166;
      v51 = v167;
      v175 = v167 * v42;
      v170 = v167 * (v40 + 2);
      do
      {
        v53 = (uint64_t)v168;
        sub_100021CC0(v52 + v170, (uint64_t)v168, &qword_1008215A0);
        v54 = v169;
        sub_100021CC0(v52 + v175, (uint64_t)v169, &qword_1008215A0);
        sub_10042F3EC(v53, v54);
        v56 = v55;
        sub_10001BE90((uint64_t)v54, &qword_1008215A0);
        sub_10001BE90(v53, &qword_1008215A0);
        if (((v50 ^ v56) & 1) != 0)
        {
          v40 = v161;
          v57 = v176;
          v58 = v165;
          if ((v50 & 1) == 0)
            goto LABEL_39;
          goto LABEL_25;
        }
        v52 += v51;
        ++v180;
      }
      while (v176 != v180);
      v57 = v176;
      v180 = v176;
      v40 = v161;
      v58 = v165;
      if ((v50 & 1) == 0)
      {
LABEL_39:
        v59 = v180;
        goto LABEL_40;
      }
    }
LABEL_25:
    v59 = v180;
    if (v180 < v40)
      goto LABEL_154;
    if (v40 < v180)
    {
      v160 = v39;
      v161 = v40;
      v60 = 0;
      v61 = v51 * (v180 - 1);
      v62 = v180 * v51;
      v63 = v40;
      v64 = v40 * v51;
      do
      {
        if (v63 != v59 + v60 - 1)
        {
          v65 = v166;
          if (!v166)
            goto LABEL_157;
          v66 = v166 + v64;
          v67 = v166 + v61;
          sub_100045AD4(v166 + v64, v174, &qword_1008215A0);
          if (v64 < v61 || v66 >= v65 + v62)
          {
            swift_arrayInitWithTakeFrontToBack(v65 + v64);
            v51 = v167;
          }
          else
          {
            v51 = v167;
            if (v64 != v61)
              swift_arrayInitWithTakeBackToFront(v66);
          }
          sub_100045AD4(v174, v67, &qword_1008215A0);
          v59 = v180;
        }
        ++v63;
        --v60;
        v61 -= v51;
        v62 -= v51;
        v64 += v51;
      }
      while (v63 < v59 + v60);
      v39 = v160;
      v40 = v161;
      goto LABEL_23;
    }
LABEL_40:
    if (v59 >= v57)
      goto LABEL_49;
    if (__OFSUB__(v59, v40))
      goto LABEL_151;
    if (v59 - v40 >= v58)
    {
LABEL_49:
      if (v59 < v40)
        goto LABEL_149;
      goto LABEL_50;
    }
    if (__OFADD__(v40, v58))
      goto LABEL_152;
    v68 = v40 + v58 >= v57 ? v57 : v40 + v58;
    if (v68 < v40)
      break;
    if (v59 == v68)
      goto LABEL_49;
    v160 = v39;
    v161 = v40;
    v122 = *(_QWORD *)(v179 + 72);
    v175 = v2;
    v176 = v122 * (v59 - 1);
    v170 = v122;
    v123 = v59 * v122;
    v167 = v68;
    do
    {
      v124 = 0;
      v125 = v40;
      v180 = v59;
      while (1)
      {
        v127 = *v181;
        v128 = v123;
        v129 = v123 + v124 + *v181;
        v130 = (uint64_t)v171;
        sub_100021CC0(v129, (uint64_t)v171, &qword_1008215A0);
        v131 = v172;
        sub_100021CC0(v176 + v124 + v127, (uint64_t)v172, &qword_1008215A0);
        v132 = v175;
        sub_10042F3EC(v130, v131);
        v175 = v132;
        if (v132)
        {
          sub_10001BE90((uint64_t)v131, &qword_1008215A0);
          sub_10001BE90(v130, &qword_1008215A0);
          swift_bridgeObjectRelease(v160, v145, v146, v147, v148, v149, v150, v151);
          v159 = v164;
          goto LABEL_127;
        }
        v134 = v133;
        sub_10001BE90((uint64_t)v131, &qword_1008215A0);
        sub_10001BE90(v130, &qword_1008215A0);
        if ((v134 & 1) == 0)
          break;
        v135 = *v181;
        if (!*v181)
          goto LABEL_156;
        v123 = v128;
        v136 = v135 + v128 + v124;
        v137 = v135 + v176 + v124;
        sub_100045AD4(v136, v177, &qword_1008215A0);
        swift_arrayInitWithTakeFrontToBack(v136);
        sub_100045AD4(v177, v137, &qword_1008215A0);
        v124 -= v170;
        ++v125;
        v126 = v180;
        if (v180 == v125)
          goto LABEL_107;
      }
      v126 = v180;
      v123 = v128;
LABEL_107:
      v59 = v126 + 1;
      v176 += v170;
      v123 += v170;
      v40 = v161;
    }
    while (v59 != v167);
    v59 = v167;
    v39 = v160;
    v2 = v175;
    if (v167 < v161)
      goto LABEL_149;
LABEL_50:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v39);
    v180 = v59;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v39 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150(0, *(_QWORD *)v39->cellPadding + 1, 1, (char *)v39);
    v71 = *(_QWORD *)v39->cellPadding;
    v70 = *(_QWORD *)v39->cellInset;
    v72 = v71 + 1;
    if (v71 >= v70 >> 1)
      v39 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150((char *)(v70 > 1), v71 + 1, 1, (char *)v39);
    *(_QWORD *)v39->cellPadding = v72;
    v73 = v39 + 1;
    v74 = &v39[1].super.super.super.super.isa + 2 * v71;
    v75 = (objc_class *)v180;
    *v74 = (Class)v40;
    v74[1] = v75;
    if (v71)
    {
LABEL_55:
      v76 = v72 - 1;
      if (v72 >= 4)
      {
        v81 = (char *)v73 + 16 * v72;
        v82 = *((_QWORD *)v81 - 8);
        v83 = *((_QWORD *)v81 - 7);
        v87 = __OFSUB__(v83, v82);
        v84 = v83 - v82;
        if (v87)
          goto LABEL_134;
        v86 = *((_QWORD *)v81 - 6);
        v85 = *((_QWORD *)v81 - 5);
        v87 = __OFSUB__(v85, v86);
        v79 = v85 - v86;
        v80 = v87;
        if (v87)
          goto LABEL_135;
        v88 = v72 - 2;
        v89 = &v73[-1].super.super.super.super.isa + 2 * v72;
        v91 = *v89;
        v90 = v89[1];
        v87 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v87)
          goto LABEL_137;
        v87 = __OFADD__(v79, v92);
        v93 = v79 + v92;
        if (v87)
          goto LABEL_140;
        if (v93 >= v84)
        {
          v111 = &v73->super.super.super.super.isa + 2 * v76;
          v113 = *v111;
          v112 = v111[1];
          v87 = __OFSUB__(v112, v113);
          v114 = v112 - v113;
          if (v87)
            goto LABEL_144;
          v104 = v79 < v114;
        }
        else
        {
LABEL_68:
          if ((v80 & 1) != 0)
            goto LABEL_136;
          v88 = v72 - 2;
          v94 = &v73[-1].super.super.super.super.isa + 2 * v72;
          v96 = *v94;
          v95 = v94[1];
          v97 = __OFSUB__(v95, v96);
          v98 = v95 - v96;
          v99 = v97;
          if (v97)
            goto LABEL_139;
          v100 = &v73->super.super.super.super.isa + 2 * v76;
          v102 = *v100;
          v101 = v100[1];
          v87 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          if (v87)
            goto LABEL_142;
          if (__OFADD__(v98, v103))
            goto LABEL_143;
          if (v98 + v103 < v79)
            goto LABEL_80;
          v104 = v79 < v103;
        }
        if (v104)
          v76 = v88;
      }
      else
      {
        if (v72 == 3)
        {
          isa = v39[1].super.super.super.super.isa;
          v77 = *(_QWORD *)v39[1].heartRateController;
          v87 = __OFSUB__(v77, isa);
          v79 = v77 - (_QWORD)isa;
          v80 = v87;
          goto LABEL_68;
        }
        v105 = v39[1].super.super.super.super.isa;
        v106 = *(_QWORD *)v39[1].heartRateController;
        v87 = __OFSUB__(v106, v105);
        v98 = v106 - (_QWORD)v105;
        v99 = v87;
LABEL_80:
        if ((v99 & 1) != 0)
          goto LABEL_138;
        v107 = &v73->super.super.super.super.isa + 2 * v76;
        v109 = *v107;
        v108 = v107[1];
        v87 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v87)
          goto LABEL_141;
        if (v110 < v98)
          goto LABEL_97;
      }
      v115 = v76 - 1;
      if (v76 - 1 >= v72)
      {
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
        break;
      }
      if (!*v181)
        goto LABEL_155;
      v116 = v39;
      v117 = (uint64_t *)v73 + 2 * v115;
      v118 = *v117;
      v119 = &v73->super.super.super.super.isa + 2 * v76;
      v120 = v119[1];
      sub_100430AE8(*v181 + *(_QWORD *)(v179 + 72) * *v117, *v181 + *(_QWORD *)(v179 + 72) * *v119, *v181 + *(_QWORD *)(v179 + 72) * v120, v178);
      if (v2)
      {
        v138 = v116;
        goto LABEL_126;
      }
      if (v120 < v118)
        goto LABEL_131;
      if (v76 > *(_QWORD *)v116->cellPadding)
        goto LABEL_132;
      *v117 = v118;
      *(_QWORD *)&v73->heartRateController[16 * v115] = v120;
      v121 = *(_QWORD *)v116->cellPadding;
      if (v76 >= v121)
        goto LABEL_133;
      v72 = v121 - 1;
      memmove((char *)v73 + 16 * v76, v119 + 2, 16 * (v121 - 1 - v76));
      *(_QWORD *)v116->cellPadding = v121 - 1;
      v39 = v116;
      if (v121 <= 2)
        goto LABEL_97;
      goto LABEL_55;
    }
    v72 = 1;
LABEL_97:
    v25 = v181[1];
    v38 = v180;
    if (v180 >= v25)
    {
LABEL_112:
      if (v72 >= 2)
      {
        v139 = *v181;
        do
        {
          v140 = v72 - 2;
          if (v72 < 2)
            goto LABEL_145;
          if (!v139)
            goto LABEL_158;
          v141 = (objc_class *)*((_QWORD *)&v39[1].super.super.super.super.isa + 2 * v140);
          v142 = *(objc_class **)&v39->cellInset[16 * v72];
          sub_100430AE8(v139 + *(_QWORD *)(v179 + 72) * (_QWORD)v141, v139 + *(_QWORD *)(v179 + 72) * *(_QWORD *)&v39->cellPadding[16 * v72], v139 + *(_QWORD *)(v179 + 72) * (_QWORD)v142, v178);
          if (v2)
            break;
          if ((uint64_t)v142 < (uint64_t)v141)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
            v39 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147754((uint64_t)v39);
          if (v140 >= *(_QWORD *)v39->cellPadding)
            goto LABEL_147;
          v143 = &v39[1].super.super.super.super.isa + 2 * v140;
          *v143 = v141;
          v143[1] = v142;
          v144 = *(_QWORD *)v39->cellPadding;
          if (v72 > v144)
            goto LABEL_148;
          memmove(&v39->cellPadding[16 * v72], (char *)&v39[1] + 16 * v72, 16 * (v144 - v72));
          *(_QWORD *)v39->cellPadding = v144 - 1;
          v72 = v144 - 1;
        }
        while (v144 > 2);
      }
LABEL_125:
      v138 = v39;
LABEL_126:
      swift_bridgeObjectRelease(v138, v27, v28, v29, v30, v31, v32, v33);
      v159 = v164;
LABEL_127:
      *(_QWORD *)v159->cellPadding = 0;
      swift_bridgeObjectRelease(v159, v152, v153, v154, v155, v156, v157, v158);
      return;
    }
  }
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_10043089C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v30 = sub_100047110(&qword_1008215A0);
  __chkstk_darwin(v30);
  v37 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v35 = (char *)&v27 - v10;
  __chkstk_darwin(v11);
  v34 = (uint64_t)&v27 - v13;
  v29 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v12 + 72);
    v15 = v14 * (a3 - 1);
    v31 = a4;
    v32 = v14;
    v38 = v14 * a3;
    v28 = a1;
LABEL_4:
    v16 = 0;
    v33 = a3;
    while (1)
    {
      v36 = a1;
      v18 = *a4;
      v19 = v34;
      sub_100021CC0(v38 + v16 + *a4, v34, &qword_1008215A0);
      v20 = v35;
      sub_100021CC0(v15 + v16 + v18, (uint64_t)v35, &qword_1008215A0);
      v21 = v39;
      sub_10042F3EC(v19, v20);
      v23 = v22;
      sub_10001BE90((uint64_t)v20, &qword_1008215A0);
      sub_10001BE90(v19, &qword_1008215A0);
      v39 = v21;
      if (v21)
        break;
      if ((v23 & 1) == 0)
      {
        v17 = v33;
        a4 = v31;
LABEL_11:
        a3 = v17 + 1;
        v15 += v32;
        v38 += v32;
        a1 = v28;
        if (a3 != v29)
          goto LABEL_4;
        return;
      }
      a4 = v31;
      v24 = *v31;
      if (!*v31)
      {
        __break(1u);
        return;
      }
      v25 = v24 + v38 + v16;
      v26 = v24 + v15 + v16;
      sub_100045AD4(v25, v37, &qword_1008215A0);
      swift_arrayInitWithTakeFrontToBack(v25);
      sub_100045AD4(v37, v26, &qword_1008215A0);
      v17 = v33;
      v16 -= v32;
      a1 = v36 + 1;
      if (v33 == v36 + 1)
        goto LABEL_11;
    }
  }
}

uint64_t sub_100430AE8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v5 = v4;
  v51 = sub_100047110(&qword_1008215A0);
  __chkstk_darwin(v51);
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  __chkstk_darwin(v14);
  v18 = (char *)&v45 - v17;
  v52 = *(_QWORD *)(v19 + 72);
  if (!v52)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_68;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_69;
  v21 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v22 = v20 / v52;
  if (v21 >= v20 / v52)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v52;
      v18 = v16;
      v49 = (char *)v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v31 = a4 + v24;
      v53 = a4 + v24;
      v55 = a2;
      if (v24 < 1 || a1 >= a2)
        goto LABEL_65;
      v33 = -v52;
      v46 = a1;
      v47 = -v52;
      v48 = a4;
      while (1)
      {
        sub_100021CC0(v31 + v33, (uint64_t)v18, &qword_1008215A0);
        v34 = a2;
        v35 = a2 + v33;
        v36 = a2 + v33;
        v37 = v33;
        v13 = v49;
        sub_100021CC0(v36, (uint64_t)v49, &qword_1008215A0);
        sub_10042F3EC((uint64_t)v18, v13);
        if (v5)
          goto LABEL_64;
        v39 = v38;
        v52 = 0;
        v50 = a3 + v37;
        sub_10001BE90((uint64_t)v13, &qword_1008215A0);
        sub_10001BE90((uint64_t)v18, &qword_1008215A0);
        if ((v39 & 1) != 0)
        {
          v40 = a3;
          v25 = a3 >= v34;
          a3 = v50;
          if (v25 && v50 < v34)
          {
            v41 = v48;
            if (v40 != v34)
              swift_arrayInitWithTakeBackToFront(v50);
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack(v50);
            v41 = v48;
          }
          v33 = v47;
          v55 += v47;
        }
        else
        {
          v42 = v53;
          v53 += v37;
          v43 = a3;
          v25 = a3 >= v42;
          a3 = v50;
          if (v25 && v50 < v42)
          {
            v41 = v48;
            if (v43 != v42)
              swift_arrayInitWithTakeBackToFront(v50);
            v35 = v34;
            v33 = v47;
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack(v50);
            v35 = v34;
            v33 = v47;
            v41 = v48;
          }
        }
        v31 = v53;
        if (v53 > v41)
        {
          a2 = v35;
          v5 = v52;
          if (v35 > v46)
            continue;
        }
        goto LABEL_65;
      }
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v52;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v50 = a4 + v23;
    v53 = a4 + v23;
    v25 = v23 < 1 || a2 >= a3;
    if (v25)
      goto LABEL_65;
    while (1)
    {
      sub_100021CC0(a2, (uint64_t)v18, &qword_1008215A0);
      sub_100021CC0(a4, (uint64_t)v13, &qword_1008215A0);
      sub_10042F3EC((uint64_t)v18, v13);
      if (v4)
        break;
      v27 = v26;
      sub_10001BE90((uint64_t)v13, &qword_1008215A0);
      sub_10001BE90((uint64_t)v18, &qword_1008215A0);
      v28 = v55;
      if ((v27 & 1) != 0)
      {
        v29 = a2 + v52;
        if (v55 < a2 || v55 >= v29)
        {
          swift_arrayInitWithTakeFrontToBack(v55);
        }
        else if (v55 == a2)
        {
          v28 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v55);
        }
      }
      else
      {
        v30 = v54 + v52;
        if (v55 < v54 || v55 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack(v55);
        }
        else if (v55 != v54)
        {
          swift_arrayInitWithTakeBackToFront(v55);
        }
        v54 = v30;
        v29 = a2;
      }
      v55 = v28 + v52;
      a4 = v54;
      if (v54 < v50)
      {
        a2 = v29;
        if (v29 < a3)
          continue;
      }
      goto LABEL_65;
    }
LABEL_64:
    sub_10001BE90((uint64_t)v13, &qword_1008215A0);
    sub_10001BE90((uint64_t)v18, &qword_1008215A0);
LABEL_65:
    sub_100147644(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_70:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

id sub_100431068(void *a1, void *a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  __objc2_prot *v17;

  v6 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
  v7 = objc_msgSend(a2, "unitManager");
  if (v7)
  {
    v8 = v7;
    v17 = &OBJC_PROTOCOL___ACHUnitManager;
    objc_msgSend(v6, "setAchUnitManager:", swift_dynamicCastObjCProtocolUnconditional(v7, 1, &v17, 0, 0, 0));

  }
  else
  {
    v9 = static os_log_type_t.default.getter(0);
    v10 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "Failed to cast FIUIUnitManager as an ACHUnitManager", 51, 2, _swiftEmptyArrayStorage);

  }
  v11 = objc_msgSend(a1, "displayName");
  objc_msgSend(v6, "setName:", v11);

  if (objc_msgSend(a1, "isMe"))
  {
    v12 = (unint64_t)objc_msgSend(a3, "isWheelchairUser");
  }
  else
  {
    v13 = objc_msgSend(a1, "currentSnapshot");
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, "wheelchairUse");

      v12 = v15 == (id)2;
    }
    else
    {
      v12 = 0;
    }
  }
  objc_msgSend(v6, "setWheelchairUser:", v12);
  return v6;
}

CHWorkoutDetailHeartRateTableViewCell *sub_100431224(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *result;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t v29;

  v28 = a1;
  v1 = type metadata accessor for Calendar.Component(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - v13;
  v29 = type metadata accessor for Calendar(0);
  v15 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = static Calendar.current.getter(v18);
  Date.init()(v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Calendar.Component.day(_:), v1);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v4, -10, v14, 0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10001BE90((uint64_t)v7, (uint64_t *)&unk_100828370);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v20 = &_swiftEmptyArrayStorage;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v29);
    return v20;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  result = (CHWorkoutDetailHeartRateTableViewCell *)objc_msgSend(v28, "allAchievementsSortedByEarnedDate");
  if (result)
  {
    v22 = result;
    v23 = sub_10001E724(0, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
    v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

    __chkstk_darwin(v25);
    *(&v27 - 2) = (uint64_t)v17;
    *(&v27 - 1) = (uint64_t)v11;
    v20 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10050EC4C(sub_100431720, &v27 - 4, v24);
    v26 = *(void (**)(char *, uint64_t))(v9 + 8);
    v26(v14, v8);
    v26(v11, v8);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004314D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_1004314EC, 0, 0);
}

uint64_t sub_1004314EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (objc_msgSend(*(id *)(v0 + 24), "isMe"))
  {
    v1 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v1);
    v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
    return swift_task_switch(sub_100431608, v2, v3);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 48) = v6;
    *(_QWORD *)(v6 + 16) = v5;
    v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 56) = v7;
    v8 = sub_100047110(&qword_100833460);
    *v7 = v0;
    v7[1] = sub_100431640;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000019, 0x800000010069EB80, sub_100431718, v6, v8);
  }
}

uint64_t sub_100431608()
{
  uint64_t v0;
  void *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;

  v1 = *(void **)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 40));
  v2 = sub_100431224(v1);
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(v2);
}

uint64_t sub_100431640()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100273940, 0, 0);
}

uint64_t *sub_10043169C(uint64_t *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = a1[2];
  v5 = (void *)a1[5];
  v7 = (void *)a1[7];
  v6 = a1[8];
  v8 = a1[9];

  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v6);

  swift_release(v4);
  swift_release(v2);

  return a1;
}

void sub_100431718()
{
  sub_10042F290();
}

uint64_t sub_100431720(id *a1)
{
  uint64_t v1;

  return sub_10042EFA4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_100431744()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100431780(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_100833484);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA380;
  return sub_10042E2A0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10043180C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100431830(uint64_t a1)
{
  uint64_t v1;

  return sub_10042E534(a1, v1);
}

uint64_t sub_100431838()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100431864(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100833494);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_10042E610(a1, v4, v5, v6);
}

char *sub_1004318D0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;

  v9 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for UIListContentConfiguration(0);
  v13 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v17 = v4;
  *(_QWORD *)&v4[v16] = sub_1004C2368();
  v18 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");

  v19 = (objc_class *)type metadata accessor for TrendListHeaderView();
  v35.receiver = v17;
  v35.super_class = v19;
  v20 = objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  v21 = (void *)objc_opt_self(UIColor);
  v22 = v20;
  v23 = objc_msgSend(v21, "systemBackgroundColor");
  objc_msgSend(v22, "setBackgroundColor:", v23);

  static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
  v24 = (char *)v22;
  UIListContentConfiguration.directionalLayoutMargins.getter();
  objc_msgSend(v24, "setDirectionalLayoutMargins:");

  v25 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label;
  v26 = *(void **)&v24[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label];
  v27 = UIListContentConfiguration.textProperties.getter();
  v28 = (void *)UIListContentConfiguration.TextProperties.font.getter(v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v26, "setFont:", v28);

  v29 = *(void **)&v24[v25];
  objc_msgSend(v29, "setNumberOfLines:", 0);
  v30 = v29;
  v31 = objc_msgSend(v21, "labelColor");
  objc_msgSend(v30, "setTextColor:", v31);

  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[v25]);
  sub_100431B9C();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v34);
  return v24;
}

void sub_100431B9C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  Class isa;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label];
  v2 = objc_msgSend(v1, "leadingAnchor");
  v3 = objc_msgSend(v0, "leadingAnchor");
  v4 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, 16.0);

  v5 = objc_msgSend(v1, "trailingAnchor");
  v6 = objc_msgSend(v0, "trailingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, -16.0);

  v8 = objc_msgSend(v1, "topAnchor");
  v9 = objc_msgSend(v0, "topAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  v11 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint;
  v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint] = v10;

  v13 = objc_msgSend(v1, "lastBaselineAnchor");
  v14 = objc_msgSend(v0, "bottomAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, -14.0);

  v16 = (void *)objc_opt_self(NSLayoutConstraint);
  v17 = sub_100047110((uint64_t *)&unk_100828340);
  v18 = swift_allocObject(v17, 64, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100623750;
  *(_QWORD *)(v18 + 32) = v4;
  *(_QWORD *)(v18 + 40) = v7;
  v19 = *(void **)&v0[v11];
  *(_QWORD *)(v18 + 48) = v19;
  *(_QWORD *)(v18 + 56) = v15;
  v34 = (CHWorkoutDetailHeartRateTableViewCell *)v18;
  specialized Array._endMutation()(v18);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v20 = v4;
  v21 = v7;
  v22 = v19;
  v33 = v15;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34, v24, v25, v26, v27, v28, v29, v30);
  objc_msgSend(v16, "activateConstraints:", isa);

  LODWORD(v31) = 1148846080;
  objc_msgSend(v1, "setContentHuggingPriority:forAxis:", 1, v31);
  LODWORD(v32) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v32);

}

uint64_t sub_100431E78(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_1004C2368();
  v6 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint;
  v7 = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");

  *(_QWORD *)&v5[v6] = v7;
  v8 = *(void **)&v5[v6];

  v9 = type metadata accessor for TrendListHeaderView();
  swift_deallocPartialClassInstance(v5, v9, 24, 7);
  return 0;
}

id sub_100431F60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendListHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendListHeaderView()
{
  return objc_opt_self(_TtC10FitnessApp19TrendListHeaderView);
}

unint64_t sub_100431FEC()
{
  unint64_t result;

  result = qword_1008334D8;
  if (!qword_1008334D8)
  {
    result = swift_getWitnessTable(&unk_10063C434, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_1008334D8);
  }
  return result;
}

unint64_t sub_100432034()
{
  unint64_t result;

  result = qword_1008334E0;
  if (!qword_1008334E0)
  {
    result = swift_getWitnessTable(&unk_10063C464, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_1008334E0);
  }
  return result;
}

unint64_t sub_10043207C()
{
  unint64_t result;

  result = qword_1008334E8;
  if (!qword_1008334E8)
  {
    result = swift_getWitnessTable(&unk_100643740, &type metadata for SummaryCardEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1008334E8);
  }
  return result;
}

void *sub_1004320C0()
{
  return &protocol witness table for Int;
}

uint64_t sub_1004320CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v7, qword_10086A9B8);
  sub_10003CE9C(v7, (uint64_t)qword_10086A9B8);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F6974636553, 0xE700000000000000);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_1004321D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_100833538);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100833540);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100833530);
  sub_100008398(v7, qword_10086A9D0);
  sub_10003CE9C(v7, (uint64_t)qword_10086A9D0);
  v8 = sub_10024F8A4();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for SummaryCardEntity, v8);
  v9._object = (void *)0x800000010069EC30;
  v9._countAndFlagsBits = 0xD000000000000015;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  return EntityURLRepresentation.init(stringInterpolation:)(v6, &type metadata for SummaryCardEntity, v8);
}

uint64_t sub_100432358(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  Swift::String v16;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v30;

  v2 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
  v16._countAndFlagsBits = sub_10011E43C(a1);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v16._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
  swift_bridgeObjectRelease(object, v18, v19, v20, v21, v22, v23, v24);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
  LocalizedStringResource.init(stringInterpolation:)(v14);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  v26 = sub_10011E89C(a1);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(v26, v27, 0, 0, v28);
  return DisplayRepresentation.init(title:subtitle:image:)(v11, v7, v4);
}

unint64_t sub_100432510()
{
  unint64_t result;

  result = qword_1008334F0;
  if (!qword_1008334F0)
  {
    result = swift_getWitnessTable(&unk_10063C49C, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_1008334F0);
  }
  return result;
}

uint64_t sub_100432554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DD50 != -1)
    swift_once(&qword_10081DD50, sub_1004321D8);
  v2 = sub_100047110(&qword_100833530);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A9D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_1004325CC()
{
  unint64_t result;

  result = qword_1008334F8;
  if (!qword_1008334F8)
  {
    result = swift_getWitnessTable(&unk_10063C4C4, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_1008334F8);
  }
  return result;
}

unint64_t sub_100432614()
{
  unint64_t result;

  result = qword_100833500;
  if (!qword_100833500)
  {
    result = swift_getWitnessTable(&unk_10063C4EC, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_100833500);
  }
  return result;
}

unint64_t sub_100432660()
{
  unint64_t result;

  result = qword_100833508;
  if (!qword_100833508)
  {
    result = swift_getWitnessTable(&unk_10063C56C, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_100833508);
  }
  return result;
}

uint64_t sub_1004326A4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10024F970();
  v4 = URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_100114BE8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_1004326EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DD48 != -1)
    swift_once(&qword_10081DD48, sub_1004320CC);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A9B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_100432760()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833518;
  if (!qword_100833518)
  {
    v1 = sub_100007050(&qword_100833520);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100833518);
  }
  return result;
}

uint64_t sub_1004327AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024F8A4();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1004327E8()
{
  unint64_t result;

  result = qword_100833528;
  if (!qword_100833528)
  {
    result = swift_getWitnessTable(&unk_10063C59C, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_100833528);
  }
  return result;
}

uint64_t sub_10043282C()
{
  unsigned __int8 *v0;

  return sub_100432358(*v0);
}

uint64_t sub_100432834(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100432660();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t storeEnumTagSinglePayload for SummaryCardEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1004328B8 + 4 * byte_10063C365[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1004328EC + 4 * asc_10063C360[v4]))();
}

uint64_t sub_1004328EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004328F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004328FCLL);
  return result;
}

uint64_t sub_100432908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100432910);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_100432914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043291C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummaryCardEntity()
{
  return &type metadata for SummaryCardEntity;
}

id sub_100432938()
{
  id result;

  result = sub_100432954();
  qword_100833548 = (uint64_t)result;
  return result;
}

id sub_100432954()
{
  id v0;
  NSString v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 40.0);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v1, v0);

  if (v2)
  {
    v3 = objc_msgSend(v2, "CGImage");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v3);

      v2 = v5;
    }
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v7 = objc_msgSend(v2, "imageWithTintColor:", v6);

    v2 = objc_msgSend(v7, "resizedImageWithNewSize:", 30.0, 30.0);
  }

  return v2;
}

id sub_100432AC0(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  void *v3;
  NSString v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  NSString v21;
  id v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  NSString v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  objc_super v38;

  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    v6 = 0;
  }
  v38.receiver = v3;
  v38.super_class = (Class)type metadata accessor for FriendInboxAddTableViewCell();
  v14 = objc_msgSendSuper2(&v38, "initWithStyle:reuseIdentifier:", a1, v6);

  v15 = (void *)objc_opt_self(UIColor);
  v16 = v14;
  v17 = objc_msgSend(v15, "secondarySystemBackgroundColor");
  objc_msgSend(v16, "setBackgroundColor:", v17);

  v18 = objc_msgSend(v16, "textLabel");
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v24 = v23;

    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24, v26, v27, v28, v29, v30, v31, v32);
    objc_msgSend(v19, "setText:", v25);

  }
  v33 = objc_msgSend(v16, "textLabel");
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v15, "tintColor");
    objc_msgSend(v34, "setTextColor:", v35);

  }
  v36 = objc_msgSend(v16, "imageView");

  if (v36)
  {
    if (qword_10081DD58 != -1)
      swift_once(&qword_10081DD58, sub_100432938);
    objc_msgSend(v36, "setImage:", qword_100833548);

  }
  return v16;
}

id sub_100432DDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FriendInboxAddTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FriendInboxAddTableViewCell()
{
  return objc_opt_self(CHFriendInboxAddTableViewCell);
}

uint64_t sub_100432E30()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10063C728);
  v2 = swift_getKeyPath(&unk_10063C750);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100432EA0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10063C6E0);
  v2 = swift_getKeyPath(&unk_10063C708);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100432F10(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE v19[4];
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];

  v22 = a3;
  v23 = a4;
  v21 = a2;
  v20 = a1;
  v5 = sub_100047110(&qword_100833740);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100047110(&qword_10083B500);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v4 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__isLoading;
  LOBYTE(v25[0]) = 1;
  Published.init(initialValue:)(v25, &type metadata for Bool);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 32))(v13, v12, v9);
  v14 = v4 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__mapImage;
  v25[0] = 0;
  v15 = sub_100047110(&qword_100823078);
  Published.init(initialValue:)(v25, v15);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v14, v8, v5);
  swift_beginAccess(v13, v25, 33, 0);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  LOBYTE(v24) = v20;
  Published.init(initialValue:)(&v24, &type metadata for Bool);
  swift_endAccess(v25);
  swift_beginAccess(v14, v25, 33, 0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  v24 = v21;
  Published.init(initialValue:)(&v24, v15);
  swift_endAccess(v25);
  v16 = (_QWORD *)(v4 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel_mapTappedAction);
  v17 = v23;
  *v16 = v22;
  v16[1] = v17;
  return v4;
}

uint64_t sub_1004330FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__isLoading;
  v2 = sub_100047110(&qword_10083B500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__mapImage;
  v4 = sub_100047110(&qword_100833740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel_mapTappedAction + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100433190()
{
  return type metadata accessor for WorkoutDetailMapView.ViewModel(0);
}

uint64_t type metadata accessor for WorkoutDetailMapView.ViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1008335B8;
  if (!qword_1008335B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailMapView.ViewModel);
  return result;
}

void sub_1004331D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_10004D6D8();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100433268(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for () + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_100433268(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1008335C8)
  {
    v2 = sub_100007050(&qword_100823078);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1008335C8);
  }
}

ValueMetadata *type metadata accessor for WorkoutDetailMapView()
{
  return &type metadata for WorkoutDetailMapView;
}

uint64_t sub_1004332D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7274, 1);
}

uint64_t sub_1004332E0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutDetailMapView.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

double sub_10043331C()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "bounds");
  v2 = v1;

  v3 = sub_10005F11C();
  result = v2 - (v3 + v3) + -40.0;
  qword_100833578 = *(_QWORD *)&result;
  return result;
}

double sub_100433394()
{
  double result;

  if (qword_10081DD60 != -1)
    swift_once(&qword_10081DD60, sub_10043331C);
  result = *(double *)&qword_100833578;
  qword_10086A9E8 = qword_100833578;
  qword_10086A9F0 = 0x4061800000000000;
  return result;
}

uint64_t sub_1004333EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  id v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v69 = a2;
  v3 = sub_100047110(&qword_1008336F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008336F8);
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100833700);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100047110(&qword_100833708);
  __chkstk_darwin(v68);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - v15;
  v67 = sub_100047110(&qword_100833710);
  __chkstk_darwin(v67);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10063C6E0);
  v20 = swift_getKeyPath(&unk_10063C708);
  swift_retain(a1);
  static Published.subscript.getter(&v70, v21, KeyPath, v20);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v20);
  v23 = v70;
  if ((_QWORD)v70)
  {
    if (qword_10081DD60 != -1)
      v22 = swift_once(&qword_10081DD60, sub_10043331C);
    v24 = qword_100833578;
    v25 = static Alignment.center.getter(v22);
    _FrameLayout.init(width:height:alignment:)(&v70, v24, 0, 0x4061800000000000, 0, v25, v26);
    v27 = v70;
    v28 = BYTE8(v70);
    v29 = v71;
    v30 = BYTE8(v71);
    *(_QWORD *)v18 = v23;
    *((_QWORD *)v18 + 1) = v27;
    v18[16] = v28;
    *((_QWORD *)v18 + 3) = v29;
    v18[32] = v30;
    *(_OWORD *)(v18 + 40) = v72;
    swift_storeEnumTagMultiPayload(v18, v67, 0);
    v31 = sub_100047110(&qword_100830F48);
    v32 = sub_100433AA4();
    v33 = sub_100433B08();
    v34 = v69;
    _ConditionalContent<>.init(storage:)(v18, v31, v68, v32, v33);
    v35 = sub_100047110(&qword_100833718);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
  else
  {
    v65 = v16;
    v66 = v5;
    v37 = swift_getKeyPath(&unk_10063C728);
    v38 = swift_getKeyPath(&unk_10063C750);
    swift_retain(a1);
    static Published.subscript.getter(&v70, v39, v37, v38);
    swift_release(a1);
    swift_release(v37);
    swift_release(v38);
    if ((v70 & 1) != 0)
    {
      *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v40, v41, v42, v43, v44);
      *((_QWORD *)v8 + 1) = 0;
      v8[16] = 0;
      sub_100047110(&qword_100833720);
      v46 = ProgressView<>.init<>()(v45);
      if (qword_10081DD60 != -1)
        v46 = swift_once(&qword_10081DD60, sub_10043331C);
      v47 = qword_100833578;
      v48 = static Alignment.center.getter(v46);
      _FrameLayout.init(width:height:alignment:)(&v70, v47, 0, 0x4061800000000000, 0, v48, v49);
      sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_1008336F8);
      v50 = &v11[*(int *)(v9 + 36)];
      v51 = v71;
      *(_OWORD *)v50 = v70;
      *((_OWORD *)v50 + 1) = v51;
      *((_OWORD *)v50 + 2) = v72;
      sub_10001BE90((uint64_t)v8, &qword_1008336F8);
      v52 = objc_msgSend((id)objc_opt_self(UIColor), "darkGrayColor");
      v53 = Color.init(_:)(v52);
      v54 = static Edge.Set.all.getter(v53);
      sub_100021CC0((uint64_t)v11, (uint64_t)v13, &qword_100833700);
      v55 = v68;
      v56 = &v13[*(int *)(v68 + 36)];
      *(_QWORD *)v56 = v53;
      v56[8] = v54;
      sub_10001BE90((uint64_t)v11, &qword_100833700);
      v57 = (uint64_t)v65;
      sub_100045AD4((uint64_t)v13, (uint64_t)v65, &qword_100833708);
      sub_100021CC0(v57, (uint64_t)v18, &qword_100833708);
      swift_storeEnumTagMultiPayload(v18, v67, 1);
      v58 = sub_100047110(&qword_100830F48);
      v59 = sub_100433AA4();
      v60 = sub_100433B08();
      v61 = (uint64_t)v66;
      _ConditionalContent<>.init(storage:)(v18, v58, v55, v59, v60);
      sub_10001BE90(v57, &qword_100833708);
      v62 = sub_100047110(&qword_100833718);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
      return sub_100045AD4(v61, v69, &qword_1008336F0);
    }
    else
    {
      v63 = sub_100047110(&qword_100833718);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v69, 1, 1, v63);
    }
  }
}

uint64_t sub_100433920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v24;
  uint64_t v26;

  v3 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v3);
  v5 = (_OWORD *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100047110(&qword_1008336D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v10, v11, v12, v13, v14);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v15 = sub_100047110(&qword_1008336E0);
  sub_1004333EC(v9, (uint64_t)&v8[*(int *)(v15 + 44)]);
  v16 = (char *)v5 + *(int *)(v3 + 20);
  v17 = enum case for RoundedCornerStyle.continuous(_:);
  v18 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  __asm { FMOV            V0.2D, #8.0 }
  *v5 = _Q0;
  v24 = a1 + *(int *)(sub_100047110(&qword_1008336E8) + 36);
  sub_100234158((uint64_t)v5, v24);
  *(_WORD *)(v24 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0((uint64_t)v8, a1, &qword_1008336D8);
  sub_1001D2ACC((uint64_t)v5);
  return sub_10001BE90((uint64_t)v8, &qword_1008336D8);
}

unint64_t sub_100433AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830F60;
  if (!qword_100830F60)
  {
    v1 = sub_100007050(&qword_100830F48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100830F60);
  }
  return result;
}

unint64_t sub_100433B08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833728;
  if (!qword_100833728)
  {
    v1 = sub_100007050(&qword_100833708);
    sub_100433B8C();
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100833728);
  }
  return result;
}

unint64_t sub_100433B8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833730;
  if (!qword_100833730)
  {
    v1 = sub_100007050(&qword_100833700);
    sub_100028384(&qword_100833738, &qword_1008336F8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100833730);
  }
  return result;
}

unint64_t sub_100433C14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833748;
  if (!qword_100833748)
  {
    v1 = sub_100007050(&qword_1008336E8);
    sub_100028384(&qword_100833750, &qword_1008336D8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100833748);
  }
  return result;
}

void destroy for FriendCardFactory(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *initializeWithCopy for FriendCardFactory(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  v9 = *(void **)(a2 + 48);
  a1[6] = v9;
  v10 = v3;
  swift_retain(v4);
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  return a1;
}

uint64_t assignWithCopy for FriendCardFactory(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 24);
  v13 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 32);
  v16 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 40);
  v19 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v18;
  v20 = v18;

  v21 = *(void **)(a2 + 48);
  v22 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v21;
  v23 = v21;

  return a1;
}

uint64_t assignWithTake for FriendCardFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for FriendCardFactory()
{
  return &type metadata for FriendCardFactory;
}

void sub_100433EC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  Class isa;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  char *v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  void *v59;
  char *v60;
  uint64_t v61;
  id v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;

  v68 = a4;
  v67 = a3;
  v69 = a2;
  v70 = a1;
  v71 = a5;
  v6 = sub_100047110((uint64_t *)&unk_10082E690);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v63 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v63 - v13;
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v5;
  v19 = *(_QWORD *)(v5 + 48);
  KeyPath = swift_getKeyPath(&unk_10063C7A8);
  v21 = swift_getKeyPath(&unk_10063C7D0);
  static Published.subscript.getter(v72, v19, KeyPath, v21);
  swift_release(KeyPath);
  v22 = swift_release(v21);
  if (LOBYTE(v72[0]) != 1)
    goto LABEL_4;
  v23 = v67;
  v65 = v9;
  v24 = v12;
  v25 = v68;
  UUID.init(uuidString:)(v70, v69, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v26 = sub_10001BE90((uint64_t)v14, (uint64_t *)&unk_10082E690);
    v27 = static os_log_type_t.error.getter(v26);
    v28 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v27, &_mh_execute_header, v28, "Invalid friend UUID, removing card", 34, 2, _swiftEmptyArrayStorage);

LABEL_4:
    v29 = (_OWORD *)v71;
    *(_QWORD *)(v71 + 32) = 0;
    *v29 = 0u;
    v29[1] = 0u;
    return;
  }
  v30 = v15;
  v31 = v16;
  v32 = v18;
  v33 = v18;
  v34 = v30;
  (*(void (**)(char *, char *))(v16 + 32))(v33, v14);
  v35 = v66;
  v36 = *(void **)v66;
  v64 = v32;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v63 = v36;
  v38 = objc_msgSend(v36, "friendWithUUID:", isa);

  if (v38)
  {
    sub_1001B7120(v23, (uint64_t)v72);
    v39 = v73;
    if (v73)
    {
      v40 = v74;
      sub_100016804(v72, v73);
      v41 = (uint64_t)v24;
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
      v42 = v31;
      v43 = v34;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v24, 0, 1, v34);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v72);
    }
    else
    {
      sub_10001BE90((uint64_t)v72, &qword_100832410);
      v41 = (uint64_t)v24;
      v42 = v31;
      v43 = v34;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v24, 1, 1, v34);
    }
    v49 = (_QWORD *)v71;
    v50 = objc_msgSend(v63, "me");
    v51 = v38;
    v52 = objc_msgSend(v51, "currentSnapshotWithGoalsCarriedForward");
    v53 = *(void **)(v66 + 40);
    v49[3] = type metadata accessor for FriendCard(0);
    v49[4] = &off_1007A9638;
    v54 = (char *)sub_10004C480(v49);
    v55 = v53;
    v56 = v69;
    swift_bridgeObjectRetain(v69);
    sub_10055A704(v41, v70, v56, 1, 0, v68 & 1, 1, (uint64_t)v50, v54, v38, (uint64_t)v52, (uint64_t)v55);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v64, v43);
  }
  else
  {
    sub_1001B7120(v23, (uint64_t)v72);
    v44 = v73;
    v45 = v25;
    if (v73)
    {
      v46 = v74;
      sub_100016804(v72, v73);
      v47 = (uint64_t)v65;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v46);
      v48 = v34;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v47, 0, 1, v34);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v72);
    }
    else
    {
      sub_10001BE90((uint64_t)v72, &qword_100832410);
      v47 = (uint64_t)v65;
      v48 = v34;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v65, 1, 1, v34);
    }
    v57 = (_QWORD *)v71;
    v58 = objc_msgSend(v63, "me");
    v59 = *(void **)(v35 + 40);
    v57[3] = type metadata accessor for FriendCard(0);
    v57[4] = &off_1007A9638;
    v60 = (char *)sub_10004C480(v57);
    v61 = v69;
    swift_bridgeObjectRetain(v69);
    v62 = v59;
    sub_10055A704(v47, v70, v61, 1, 0, v45 & 1, 0, (uint64_t)v58, v60, 0, 0, (uint64_t)v62);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v64, v48);
  }
}

Swift::Int sub_1004343AC@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  id *v3;
  id *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int result;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _BOOL4 v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _BYTE v72[12];
  int v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  unsigned __int8 v79[24];
  uint64_t v80;
  uint64_t v81;

  v4 = v3;
  v8 = sub_100047110((uint64_t *)&unk_10082E690);
  v9 = __chkstk_darwin(v8);
  v11 = &v72[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v72[-v12];
  v14 = v3[1];
  KeyPath = swift_getKeyPath(&unk_10063C7F0);
  v16 = swift_getKeyPath(&unk_10063C818);
  static Published.subscript.getter(v79, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = *(_QWORD *)v79;
  if (*(_QWORD *)v79)
  {
    v76 = a1;
    sub_100435634((uint64_t)v4);
    v18 = sub_1004353F4(v17, v4);
    sub_10043569C((uint64_t)v4);
    v19 = objc_msgSend(*v4, "allFriends", swift_bridgeObjectRelease(v17).n128_f64[0]);
    if (v19)
    {
      v20 = v19;
      v21 = sub_100435704();
      v22 = sub_100364684();
      v23 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v20, v21, v22);

      if ((v23 & 0xC000000000000001) != 0)
      {
        v74 = v18;
        v75 = a3;
        v24 = (uint64_t)&_swiftEmptySetSingleton;
        *(_QWORD *)v79 = &_swiftEmptySetSingleton;
        if (v23 < 0)
          v25 = v23;
        else
          v25 = v23 & 0xFFFFFFFFFFFFFF8;
        v26 = __CocoaSet.makeIterator()(v25);
        v27 = __CocoaSet.Iterator.next()(v26);
        if (v27)
        {
          v73 = a2;
          do
          {
            v77 = v27;
            swift_dynamicCast(&v78, &v77, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
            v29 = v78;
            if ((objc_msgSend(v78, "isMe") & 1) != 0
              || (objc_msgSend(v29, "isFriendshipCurrentlyActive") & 1) == 0)
            {

            }
            else
            {
              v30 = v78;
              v31 = *(_QWORD *)v79;
              v32 = *(_QWORD *)(*(_QWORD *)v79 + 16);
              if (*(_QWORD *)(*(_QWORD *)v79 + 24) <= v32)
              {
                sub_10014337C(v32 + 1);
                v31 = *(_QWORD *)v79;
              }
              result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v31 + 40));
              v33 = v31 + 56;
              v34 = -1 << *(_BYTE *)(v31 + 32);
              v35 = result & ~v34;
              v36 = v35 >> 6;
              if (((-1 << v35) & ~*(_QWORD *)(v31 + 56 + 8 * (v35 >> 6))) != 0)
              {
                v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v31 + 56 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
              }
              else
              {
                v38 = 0;
                v39 = (unint64_t)(63 - v34) >> 6;
                do
                {
                  if (++v36 == v39 && (v38 & 1) != 0)
                  {
                    __break(1u);
                    return result;
                  }
                  v40 = v36 == v39;
                  if (v36 == v39)
                    v36 = 0;
                  v38 |= v40;
                  v41 = *(_QWORD *)(v33 + 8 * v36);
                }
                while (v41 == -1);
                v37 = __clz(__rbit64(~v41)) + (v36 << 6);
              }
              *(_QWORD *)(v33 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
              *(_QWORD *)(*(_QWORD *)(v31 + 48) + 8 * v37) = v30;
              ++*(_QWORD *)(v31 + 16);
            }
            v27 = __CocoaSet.Iterator.next()(result);
          }
          while (v27);
          v24 = *(_QWORD *)v79;
          LOBYTE(a2) = v73;
        }
        swift_release(v26);
        v18 = v74;
        a3 = v75;
      }
      else
      {
        v24 = sub_100434C08(v23);
      }
    }
    else
    {
      v24 = 0;
    }
    sub_1001B7120(v76, (uint64_t)v79);
    v45 = v80;
    if (v80)
    {
      v46 = v81;
      sub_100016804(v79, v80);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
      v47 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v13, 0, 1, v47);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v79);
    }
    else
    {
      sub_10001BE90((uint64_t)v79, &qword_100832410);
      v48 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v13, 1, 1, v48);
    }
    v50 = v4[5];
    v49 = v4[6];
    v51 = swift_getKeyPath(&unk_10063C7A8);
    v52 = swift_getKeyPath(&unk_10063C7D0);
    v53 = v50;
    static Published.subscript.getter(v79, v49, v51, v52);
    swift_release(v51);
    swift_release(v52);
    v54 = v79[0];
    if (v24)
    {
      if ((v24 & 0xC000000000000001) != 0)
      {
        if (v24 >= 0)
          v55 = v24 & 0xFFFFFFFFFFFFFF8;
        else
          v55 = v24;
        v56 = __CocoaSet.count.getter(v55);
      }
      else
      {
        v56 = *(_QWORD *)(v24 + 16);
      }
      swift_bridgeObjectRelease(v24);
      v57 = v56 != 0;
    }
    else
    {
      v57 = 0;
    }
    a3[3] = type metadata accessor for FriendsHighlightCard(0);
    a3[4] = &off_10079DA28;
    v58 = sub_10004C480(a3);
    v59 = a2 & 1;
    v60 = (uint64_t)v58;
    v61 = (uint64_t)v13;
    v62 = 1;
    v63 = v18;
    v64 = (uint64_t)v53;
    v65 = v54;
    v66 = v57;
  }
  else
  {
    sub_1001B7120(a1, (uint64_t)v79);
    v42 = v80;
    if (v80)
    {
      v43 = v81;
      sub_100016804(v79, v80);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
      v44 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v11, 0, 1, v44);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v79);
    }
    else
    {
      sub_10001BE90((uint64_t)v79, &qword_100832410);
      v67 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v11, 1, 1, v67);
    }
    v68 = v4[6];
    v69 = swift_getKeyPath(&unk_10063C7A8);
    v70 = swift_getKeyPath(&unk_10063C7D0);
    static Published.subscript.getter(v79, v68, v69, v70);
    swift_release(v69);
    swift_release(v70);
    LODWORD(v68) = v79[0];
    a3[3] = type metadata accessor for FriendsHighlightCard(0);
    a3[4] = &off_10079DA28;
    v71 = sub_10004C480(a3);
    v59 = a2 & 1;
    v63 = _swiftEmptyArrayStorage;
    v60 = (uint64_t)v71;
    v61 = (uint64_t)v11;
    v62 = 0;
    v64 = 0;
    v65 = (int)v68;
    v66 = 0;
  }
  return sub_1003D79FC(v61, v59, v62, (uint64_t)v63, v64, v65, v66, v60);
}

void sub_10043498C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  if (a3 == 1)
  {
    sub_100433EC0(a1, a2, a4, a5 & 1, a6);
  }
  else if (a3 == 3 && a1 == 4 && !a2)
  {
    sub_1004343AC(a4, a5 & 1, (_QWORD *)a6);
  }
  else
  {
    *(_QWORD *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
}

uint64_t sub_100434A1C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10063C7F0);
  v5 = swift_getKeyPath(&unk_10063C818);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100434A98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10063C7F0);
  v5 = swift_getKeyPath(&unk_10063C818);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100434B10@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10063C7A8);
  v5 = swift_getKeyPath(&unk_10063C7D0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100434B90(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10063C7A8);
  v5 = swift_getKeyPath(&unk_10063C7D0);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100434C08(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_100434D64((unint64_t *)((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    v9 = v8;
    swift_release(v2);
    if (v1)
      swift_willThrow(v10);
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v7, -1);
    bzero(v11, v7);
    sub_100434D64((unint64_t *)v11, v6, v2);
    v9 = v12;
    swift_release(v2);
    swift_slowDealloc(v11, -1, -1);
  }
  return v9;
}

void sub_100434D64(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  unsigned __int8 v16;
  uint64_t v19;

  v19 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_18:
    v15 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    if ((objc_msgSend(v15, "isMe") & 1) != 0)
    {

    }
    else
    {
      v16 = objc_msgSend(v15, "isFriendshipCurrentlyActive");

      if ((v16 & 1) != 0)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        v12 = __OFADD__(v19++, 1);
        if (v12)
          goto LABEL_30;
      }
    }
  }
  v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v9)
    goto LABEL_27;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  v14 = v4 + 1;
  if (v4 + 1 >= v9)
    goto LABEL_27;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v4 + 2;
  if (v4 + 2 >= v9)
    goto LABEL_27;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_27:
    swift_retain(a3);
    sub_100434F30(a1, a2, v19, a3);
    return;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      goto LABEL_27;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

Swift::Int sub_100434F30(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_100047110(&qword_100822070);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = v9[5];
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *((_BYTE *)v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_10043518C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;
  uint64_t v29[9];

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_100047110(&qword_100822180);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v14);
    Hasher.init(_seed:)(v29, v9[5]);
    Hasher._combine(_:)(v18);
    result = Hasher._finalize()();
    v19 = -1 << *((_BYTE *)v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(v9[6] + v22) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

_QWORD *sub_1004353F4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;

  v5 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v5);
  v34 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v33 = *((_QWORD *)v7 - 1);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v29 = v2;
    v35 = _swiftEmptyArrayStorage;
    sub_10012162C(0, v10, 0);
    v11 = v35;
    v12 = *(_QWORD *)(type metadata accessor for ActivitySharingHighlight(0) - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = (void *)a2[3];
    v15 = (void *)a2[4];
    v31 = (void *)a2[2];
    v32 = v14;
    v16 = (void *)a2[5];
    v30 = *(_QWORD *)(v12 + 72);
    do
    {
      sub_1000DA808(v13, (uint64_t)v9);
      v18 = v31;
      v17 = v32;
      *(_QWORD *)&v9[v7[5]] = v32;
      *(_QWORD *)&v9[v7[6]] = v18;
      *(_QWORD *)&v9[v7[7]] = v16;
      *(_QWORD *)&v9[v7[8]] = v15;
      v9[v7[9]] = 1;
      v19 = v17;
      v20 = v18;
      v21 = v16;
      v22 = v15;
      v23 = v34;
      static Calendar.autoupdatingCurrent.getter(v22);
      FIUIRelativeDateTimeFormatter.init(calendar:)(v23);
      v24 = v7[11];
      v25 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
      objc_msgSend(v25, "setDateStyle:", 1);
      *(_QWORD *)&v9[v24] = v25;
      v35 = v11;
      v27 = v11[2];
      v26 = v11[3];
      if (v27 >= v26 >> 1)
      {
        sub_10012162C(v26 > 1, v27 + 1, 1);
        v11 = v35;
      }
      v11[2] = v27 + 1;
      sub_100273E98((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v27);
      v13 += v30;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_100435634(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = *(id *)a1;
  swift_retain(v2);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  return a1;
}

uint64_t sub_10043569C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a1 + 32);
  v7 = *(void **)(a1 + 40);

  swift_release(v2);
  return a1;
}

unint64_t sub_100435704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100821A60;
  if (!qword_100821A60)
  {
    v1 = objc_opt_self(ASFriend);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100821A60);
  }
  return result;
}

unint64_t sub_100435740(uint64_t a1)
{
  return sub_100435780(a1, &qword_100833850);
}

unint64_t sub_10043574C(uint64_t a1)
{
  return sub_100435780(a1, &qword_1008337B8);
}

unint64_t sub_100435758(uint64_t a1)
{
  return sub_100038EAC(a1, &qword_1008337C0, &qword_1008337C8, (uint64_t (*)(uint64_t))sub_100439198);
}

unint64_t sub_100435774(uint64_t a1)
{
  return sub_100435780(a1, &qword_10082DC98);
}

unint64_t sub_100435780(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    v11 = v10;
    result = sub_100438F74(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100435894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_1008328D8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    result = sub_100438F74(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004359AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_100832C48);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (char *)(a1 + 48);
  while (1)
  {
    v7 = (void *)*((_QWORD *)v6 - 1);
    v8 = *v6;
    v9 = *((id *)v6 - 2);
    sub_10010C5D0(v7, v8);
    result = sub_100439434((uint64_t)v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v9;
    v12 = v4[7] + 16 * result;
    *(_QWORD *)v12 = v7;
    *(_BYTE *)(v12 + 8) = v8;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 24;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100435AC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_10082B048);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100021CC0(v7, (uint64_t)&v16, &qword_10082B050);
    v8 = v16;
    v9 = v17;
    result = sub_100438F74(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100038FD4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100435BFC(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100820D28, &qword_1008338D8, (uint64_t (*)(_QWORD))sub_100439464);
}

unint64_t sub_100435C18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_1008337D0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_bridgeObjectRetain(v7);
    result = sub_100439198((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100435D20(CHWorkoutDetailHeartRateTableViewCell *a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned __int8 *heartRateController;
  uint64_t v14;
  id v15;
  unint64_t result;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v9 = *(_QWORD *)a1->cellPadding;
  if (!v9)
  {
    v11 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_100833810);
  v10 = static _DictionaryStorage.allocate(capacity:)(v9);
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)a1->cellPadding;
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1, a2, a3, a4, a5, a6, a7, a8);
    return (unint64_t)v11;
  }
  swift_retain(v10);
  heartRateController = a1[1].heartRateController;
  while (1)
  {
    v14 = *(_QWORD *)heartRateController;
    v15 = *((id *)heartRateController - 1);
    swift_bridgeObjectRetain(v14);
    result = sub_1004395DC((uint64_t)v15);
    if ((v17 & 1) != 0)
      break;
    *(_QWORD *)((char *)v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v18 = 8 * result;
    *(_QWORD *)(v11[6] + v18) = v15;
    *(_QWORD *)(v11[7] + v18) = v14;
    v19 = v11[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v11[2] = v21;
    heartRateController += 16;
    if (!--v12)
    {
      swift_release(v11);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100435E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_10082DCB0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100021CC0(v7, (uint64_t)v16, &qword_100833808);
    result = sub_10004C814((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_100038FD4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100435F68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_100832CC8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100438F74(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100436078(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100827CE0, &qword_1008338D0, (uint64_t (*)(_QWORD))sub_1004396BC);
}

unint64_t sub_100436094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_100832AA0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (char *)(a1 + 56);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 3);
    v8 = *((_QWORD *)v6 - 2);
    v9 = (void *)*((_QWORD *)v6 - 1);
    v10 = *v6;
    swift_bridgeObjectRetain(v8);
    sub_10010C5D0(v9, v10);
    result = sub_100438F74(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = v4[7] + 16 * result;
    *(_QWORD *)v14 = v9;
    *(_BYTE *)(v14 + 8) = v10;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4[2] = v17;
    v6 += 32;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004361C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_100833780);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = *(v6 - 1);
    v9 = v7;
    result = sub_100438FD8((uint64_t)v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004362C8(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_1008298E0, &qword_1008338C8, (uint64_t (*)(_QWORD))sub_100439780);
}

unint64_t sub_1004362E4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);

  v31 = a4;
  v7 = sub_100047110(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v29 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v29);
    return (unint64_t)v13;
  }
  sub_100047110(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = &v10[*(int *)(v7 + 48)];
  v16 = v12 + 64;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v30 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_100021CC0(v18, (uint64_t)v10, a2);
    v20 = *v10;
    result = v31(*v10);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v13[6] + result) = v20;
    v24 = v13[7];
    v25 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v15, v25);
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_12;
    v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      v29 = v30;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10043647C(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_1008297B8, &qword_1008338C0, sub_100439884);
}

unint64_t sub_100436498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_100833838);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v19 = v1;
  v6 = (_BYTE *)(v1 + 64);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 4);
    v8 = *((_QWORD *)v6 - 3);
    v9 = *((_QWORD *)v6 - 2);
    v10 = *((_QWORD *)v6 - 1);
    v11 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v10);
    result = sub_100438F74(v7, v8);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v4[6] + 16 * result);
    *v14 = v7;
    v14[1] = v8;
    v15 = v4[7] + 24 * result;
    *(_QWORD *)v15 = v9;
    *(_QWORD *)(v15 + 8) = v10;
    *(_BYTE *)(v15 + 16) = v11;
    v16 = v4[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v4[2] = v18;
    v6 += 40;
    if (!--v5)
    {
      swift_release(v4);
      v1 = v19;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004365D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_1008337E0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    v9 = *v6;
    v10 = v7;
    result = sub_100438FD8((uint64_t)v10);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = 8 * result;
    *(_QWORD *)(v4[6] + v13) = v10;
    *(_QWORD *)(v4[7] + v13) = v8;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v6 += 2;
    v4[2] = v16;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004366D0(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t result;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;

  v2 = sub_100047110(&qword_100830258);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)a1->cellPadding;
  if (!v13)
  {
    v15 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v31 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v31, v4, v5, v6, v7, v8, v9, v10);
    return (unint64_t)v15;
  }
  sub_100047110(&qword_1008338B8);
  v14 = static _DictionaryStorage.allocate(capacity:)(v13);
  v15 = (_QWORD *)v14;
  v16 = *(_QWORD *)a1->cellPadding;
  if (!v16)
    goto LABEL_9;
  v17 = &v12[*(int *)(v2 + 48)];
  v18 = v14 + 64;
  v19 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v33 = a1;
  v20 = (uint64_t)a1 + v19;
  v21 = *(_QWORD *)(v3 + 72);
  swift_retain(v14);
  while (1)
  {
    sub_100021CC0(v20, (uint64_t)v12, &qword_100830258);
    v22 = *v12;
    result = sub_100439D7C(*v12, (uint64_t (*)(uint64_t))sub_100381A08, sub_10043BAE8);
    if ((v24 & 1) != 0)
      break;
    v25 = result;
    *(_QWORD *)(v18 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v15[6] + result) = v22;
    v26 = v15[7];
    v27 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v25, v17, v27);
    v28 = v15[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_12;
    v15[2] = v30;
    v20 += v21;
    if (!--v16)
    {
      swift_release(v15);
      v31 = v33;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10043687C(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100830248, &qword_1008338B0, (uint64_t (*)(_QWORD))sub_100439AB4);
}

unint64_t sub_100436898(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_100047110(&qword_1008337A0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_100047110(&qword_1008329E0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100021CC0(v13, (uint64_t)v5, &qword_1008337A0);
    v15 = *v5;
    v16 = v5[1];
    result = sub_100438F74(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for CatalogWorkout(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100436A38(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100831FF8, &qword_1008338A8, (uint64_t (*)(_QWORD))sub_100439C88);
}

unint64_t sub_100436A54(CHWorkoutDetailHeartRateTableViewCell *a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned __int8 *heartRateController;
  __int128 v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  __int128 v23;
  _BYTE v24[24];
  __int128 v25;
  __int128 v26;
  __int16 v27;

  v9 = *(_QWORD *)a1->cellPadding;
  if (!v9)
  {
    v11 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_100832AA8);
  v10 = static _DictionaryStorage.allocate(capacity:)(v9);
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)a1->cellPadding;
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1, a2, a3, a4, a5, a6, a7, a8);
    return (unint64_t)v11;
  }
  swift_retain(v10);
  heartRateController = a1[2].heartRateController;
  while (1)
  {
    v14 = *(_OWORD *)(heartRateController - 24);
    *(_QWORD *)&v24[16] = *((_QWORD *)heartRateController - 1);
    v23 = *(_OWORD *)(heartRateController - 40);
    *(_OWORD *)v24 = v14;
    v15 = *(_QWORD *)heartRateController;
    v27 = *((_WORD *)heartRateController - 12);
    v25 = *(_OWORD *)&v24[8];
    v26 = v23;
    sub_100419BBC((uint64_t)&v26);
    sub_100133118((uint64_t)&v25);
    result = sub_100439D10((uint64_t)&v23);
    if ((v17 & 1) != 0)
      break;
    *(_QWORD *)((char *)v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v18 = v11[6] + 40 * result;
    v19 = *(_OWORD *)v24;
    *(_OWORD *)v18 = v23;
    *(_OWORD *)(v18 + 16) = v19;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)&v24[16];
    *(_QWORD *)(v11[7] + 8 * result) = v15;
    v20 = v11[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v11[2] = v22;
    heartRateController += 48;
    if (!--v12)
    {
      swift_release(v11);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100436BA8(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100833898, &qword_1008338A0, (uint64_t (*)(_QWORD))sub_100439DFC);
}

unint64_t sub_100436BC4(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100833888, &qword_100833890, sub_100439E84);
}

unint64_t sub_100436BE0(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100833878, &qword_100833880, (uint64_t (*)(_QWORD))sub_100439EDC);
}

unint64_t sub_100436BFC(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100833868, &qword_100833870, (uint64_t (*)(_QWORD))sub_100439F7C);
}

unint64_t sub_100436C18(uint64_t a1)
{
  return sub_1004362E4(a1, &qword_100833858, &qword_100833860, sub_10043A008);
}

unint64_t sub_100436C34(CHWorkoutDetailHeartRateTableViewCell *a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned __int8 *cellInset;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v9 = *(_QWORD *)a1->cellPadding;
  if (!v9)
  {
    v11 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110((uint64_t *)&unk_10082E620);
  v10 = static _DictionaryStorage.allocate(capacity:)(v9);
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)a1->cellPadding;
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1, a2, a3, a4, a5, a6, a7, a8);
    return (unint64_t)v11;
  }
  swift_retain(v10);
  cellInset = a1[1].cellInset;
  while (1)
  {
    v14 = *((_QWORD *)cellInset - 3);
    v15 = *((_QWORD *)cellInset - 2);
    v17 = *((_QWORD *)cellInset - 1);
    v16 = *(_QWORD *)cellInset;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    result = sub_100438F74(v14, v15);
    if ((v19 & 1) != 0)
      break;
    *(_QWORD *)((char *)v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v20 = (uint64_t *)(v11[6] + 16 * result);
    *v20 = v14;
    v20[1] = v15;
    v21 = (_QWORD *)(v11[7] + 16 * result);
    *v21 = v17;
    v21[1] = v16;
    v22 = v11[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    cellInset += 32;
    v11[2] = v24;
    if (!--v12)
    {
      swift_release(v11);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100436D54(CHWorkoutDetailHeartRateTableViewCell *a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned __int8 *cellPadding;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v9 = *(_QWORD *)a1->cellPadding;
  if (!v9)
  {
    v11 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_1008337D8);
  v10 = static _DictionaryStorage.allocate(capacity:)(v9);
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)a1->cellPadding;
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1, a2, a3, a4, a5, a6, a7, a8);
    return (unint64_t)v11;
  }
  swift_retain(v10);
  cellPadding = a1[1].cellPadding;
  while (1)
  {
    v14 = *((_QWORD *)cellPadding - 2);
    v15 = *((_QWORD *)cellPadding - 1);
    v16 = *(_QWORD *)cellPadding;
    swift_bridgeObjectRetain(v15);
    result = sub_100438F74(v14, v15);
    if ((v18 & 1) != 0)
      break;
    *(_QWORD *)((char *)v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v19 = (uint64_t *)(v11[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    *(_QWORD *)(v11[7] + 8 * result) = v16;
    v20 = v11[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    cellPadding += 24;
    v11[2] = v22;
    if (!--v12)
    {
      swift_release(v11);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100436E64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001A5194(a1, a2, a3, &qword_100833800);
}

uint64_t sub_100436E70(uint64_t a1, uint64_t a2)
{
  return sub_1001A51F4(a1, a2, &qword_100833800);
}

void sub_100436E7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1000EA1DC();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_100436EA0()
{
  AttributeScopes.SwiftUIAttributes.font.getter();
  __break(1u);
}

uint64_t sub_100436EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD *, _QWORD);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  _QWORD v80[4];
  Class isa;

  v72 = a6;
  v73 = a5;
  v70 = a1;
  v71 = a7;
  v10 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v10);
  v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for AttributedString(0);
  v77 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100833758);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100047110(&qword_100833760);
  v74 = *(_QWORD *)(v78 - 8);
  v17 = __chkstk_darwin(v78);
  v69 = (uint64_t)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v68 = (uint64_t)&v67 - v19;
  v20 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, 0, 0);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = sub_100047110((uint64_t *)&unk_100827460);
  v30 = swift_allocObject(v29, 112, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v30 + 56) = &type metadata for String;
  v31 = sub_100038CF8();
  *(_QWORD *)(v30 + 32) = v70;
  *(_QWORD *)(v30 + 40) = a2;
  v32 = a2;
  *(_QWORD *)(v30 + 96) = &type metadata for String;
  *(_QWORD *)(v30 + 104) = v31;
  *(_QWORD *)(v30 + 64) = v31;
  *(_QWORD *)(v30 + 72) = a3;
  v33 = a3;
  *(_QWORD *)(v30 + 80) = a4;
  swift_bridgeObjectRetain(v32);
  v34 = a4;
  v35 = swift_bridgeObjectRetain(a4);
  v36 = v26;
  v37 = v71;
  v38 = String.init(format:_:)(v36, v28, v30, v35);
  v40 = v39;
  v41 = swift_bridgeObjectRelease(v28);
  AttributeContainer.init()(v41);
  v42 = v22;
  v43 = v72;
  AttributedString.init(_:attributes:)(v38, v40, v42);
  KeyPath = swift_getKeyPath(&unk_10063C908);
  v44 = swift_getKeyPath(&unk_10063C938);
  v45 = v73;
  v80[0] = v73;
  v46 = sub_10018A608();
  v73 = v45;
  AttributedString.subscript.setter(v80, v44, v46);
  if (v43)
  {
    v47 = swift_getKeyPath(&unk_10063C978);
    *(&v67 - 2) = __chkstk_darwin(v47);
    v48 = swift_getKeyPath(&unk_10063C9A8);
    v80[0] = v43;
    v49 = sub_100274874();
    v50 = v43;
    AttributedString.subscript.setter(v80, v48, v49);
  }
  v51 = v77;
  v52 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v13, v37, v75);
  v80[0] = v33;
  v80[1] = v34;
  v53 = type metadata accessor for Locale(0);
  v54 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v76, 1, 1, v53);
  v55 = sub_1000083D8((unint64_t *)&qword_100833768, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v56 = sub_100038CA0();
  AttributedStringProtocol.range<A>(of:options:locale:)(v80, 0, v54, v52, &type metadata for String, v55, v56);
  sub_10001BE90(v54, (uint64_t *)&unk_10082ED90);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v52);
  v57 = v78;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v16, 1, v78) == 1)
  {
    v58 = &qword_100833758;
    v59 = (uint64_t)v16;
  }
  else
  {
    v60 = v68;
    sub_10043A2CC((uint64_t)v16, v68);
    v61 = v69;
    sub_100021CC0(v60, v69, &qword_100833760);
    v62 = swift_getKeyPath(&unk_10063C908);
    *(&v67 - 2) = __chkstk_darwin(v62);
    v63 = swift_getKeyPath(&unk_10063C938);
    isa = UIFont.smallCapsVersion()().super.isa;
    v64 = sub_10043D8C0((unint64_t *)&qword_100833770, &qword_100833760);
    v65 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v80, v61, v57, v64);
    AttributedSubstring.subscript.setter(&isa, v63, v46);
    v65(v80, 0);
    sub_10001BE90(v61, &qword_100833760);
    v59 = v60;
    v58 = &qword_100833760;
  }
  return sub_10001BE90(v59, v58);
}

id sub_100437410(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void **v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  NSString *v11;
  unint64_t v12;
  id v13;
  NSString v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[72];

  v2 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v20 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    swift_bridgeObjectRetain(a1);
    v19 = a1;
    v4 = (void **)(a1 + 48);
    do
    {
      v5 = v2;
      v6 = (uint64_t)*(v4 - 1);
      v7 = *v4;
      v4 += 3;
      v8 = sub_100047110((uint64_t *)&unk_10082EDA0);
      inited = swift_initStackObject(v8, v21);
      *(_OWORD *)(inited + 16) = xmmword_100622F90;
      *(_QWORD *)(inited + 64) = v20;
      *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
      *(_QWORD *)(inited + 40) = v7;
      v10 = v7;
      swift_bridgeObjectRetain(v6);
      v11 = NSForegroundColorAttributeName;
      v12 = sub_100038EAC(inited, &qword_1008255C8, &qword_1008255D0, (uint64_t (*)(uint64_t))sub_100438FD8);
      v13 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain(v6);
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      type metadata accessor for Key(0);
      sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v16 = objc_msgSend(v13, "initWithString:attributes:", v14, isa, swift_bridgeObjectRelease(v12).n128_f64[0]);
      v17 = v6;
      v2 = v5;
      swift_bridgeObjectRelease(v17);

      objc_msgSend(v5, "appendAttributedString:", v16);
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v19);
  }
  return v2;
}

uint64_t sub_100437618@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(_QWORD, _QWORD, _QWORD, _QWORD)@<X4>, CHWorkoutDetailHeartRateTableViewCell *a6@<X5>, void (*a7)(_QWORD, _QWORD, _QWORD)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD, _QWORD);
  __n128 v45;
  uint64_t v46;
  const char *v47;
  const char *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t *, _QWORD);
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t *, _QWORD);
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  void (*v112)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  void (*v118)(_QWORD, _QWORD, _QWORD);
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t KeyPath;
  uint64_t v123;
  CHWorkoutDetailHeartRateTableViewCell *v124;
  uint64_t v125;

  v118 = a7;
  v111 = a3;
  v112 = a5;
  v110 = a1;
  v116 = a8;
  v11 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v11);
  v109 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_1008337E8);
  __chkstk_darwin(v13);
  v107 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v15);
  v17 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AttributedString(0);
  v113 = *(_QWORD *)(v18 - 8);
  v114 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_100833758);
  __chkstk_darwin(v21);
  v120 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v115 = (char *)&v104 - v24;
  v121 = sub_100047110(&qword_100833760);
  v117 = *(void (**)(char *, uint64_t))(v121 - 8);
  __chkstk_darwin(v121);
  v108 = (uint64_t)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v119 = (uint64_t)&v104 - v27;
  __chkstk_darwin(v28);
  v106 = (uint64_t)&v104 - v29;
  v30 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v30);
  v32 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v39 = sub_100047110((uint64_t *)&unk_100827460);
  v40 = swift_allocObject(v39, 152, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100624A40;
  *(_QWORD *)(v40 + 56) = &type metadata for String;
  v41 = sub_100038CF8();
  v42 = v111;
  *(_QWORD *)(v40 + 32) = v110;
  *(_QWORD *)(v40 + 40) = a2;
  v43 = a2;
  *(_QWORD *)(v40 + 96) = &type metadata for String;
  *(_QWORD *)(v40 + 104) = v41;
  *(_QWORD *)(v40 + 64) = v41;
  *(_QWORD *)(v40 + 72) = v42;
  *(_QWORD *)(v40 + 80) = a4;
  *(_QWORD *)(v40 + 136) = &type metadata for String;
  *(_QWORD *)(v40 + 144) = v41;
  v44 = v112;
  *(_QWORD *)(v40 + 112) = v112;
  *(_QWORD *)(v40 + 120) = a6;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(a4);
  v45 = swift_bridgeObjectRetain(a6);
  v46 = String.init(format:_:)(v36, v38, v40, v45);
  v48 = v47;
  v49 = v38;
  v50 = v116;
  swift_bridgeObjectRelease(v49, v47, v51, v52, v53, v54, v55, v56);
  AttributeContainer.init()(v57);
  AttributedString.init(_:attributes:)(v46, v48, v32);
  KeyPath = swift_getKeyPath(&unk_10063C9E8);
  v58 = swift_getKeyPath(&unk_10063CA18);
  v59 = v118;
  v123 = (uint64_t)v118;
  v60 = sub_1000EA1DC();
  swift_retain(v59);
  v105 = v60;
  AttributedString.subscript.setter(&v123, v58, v60);
  v62 = v113;
  v61 = v114;
  v118 = *(void (**)(_QWORD, _QWORD, _QWORD))(v113 + 16);
  v118(v20, v50, v114);
  v123 = (uint64_t)v44;
  v124 = a6;
  v63 = v61;
  v64 = type metadata accessor for Locale(0);
  v112 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v64 - 8) + 56);
  v112(v17, 1, 1, v64);
  v65 = sub_1000083D8((unint64_t *)&qword_100833768, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v66 = sub_100038CA0();
  v67 = v115;
  v110 = v66;
  v111 = v65;
  AttributedStringProtocol.range<A>(of:options:locale:)(&v123, 0, v17, v63, &type metadata for String, v65, v66);
  v68 = (uint64_t)v67;
  sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_10082ED90);
  v69 = *(void (**)(char *, uint64_t))(v62 + 8);
  v69(v20, v63);
  v70 = (char *)*((_QWORD *)v117 + 6);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v70)(v68, 1, v121) == 1)
  {
    sub_10001BE90(v68, &qword_100833758);
    v71 = v119;
  }
  else
  {
    v117 = v69;
    v72 = v106;
    sub_10043A2CC(v68, v106);
    v71 = v119;
    sub_100021CC0(v72, v119, &qword_100833760);
    v73 = swift_getKeyPath(&unk_10063CA58);
    __chkstk_darwin(v73);
    *(&v104 - 2) = v74;
    v113 = swift_getKeyPath(&unk_10063CA88);
    v115 = v70;
    v75 = v107;
    static Text.Scale.secondary.getter();
    v76 = type metadata accessor for Text.Scale(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 0, 1, v76);
    v77 = sub_10043D8C0((unint64_t *)&qword_100833770, &qword_100833760);
    v78 = v50;
    v79 = (void (*)(uint64_t *, _QWORD))AttributedString.subscript.modify(&v123, v71, v121, v77);
    v80 = sub_10043E458();
    v81 = v75;
    v70 = v115;
    AttributedSubstring.subscript.setter(v81, v113, v80);
    v79(&v123, 0);
    v50 = v78;
    sub_10001BE90(v71, &qword_100833760);
    v82 = v72;
    v69 = v117;
    sub_10001BE90(v82, &qword_100833760);
  }
  v118(v20, v50, v63);
  v123 = 32;
  v124 = (CHWorkoutDetailHeartRateTableViewCell *)0xE100000000000000;
  v112(v17, 1, 1, v64);
  v83 = (uint64_t)v120;
  AttributedStringProtocol.range<A>(of:options:locale:)(&v123, 0, v17, v63, &type metadata for String, v111, v110);
  sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_10082ED90);
  swift_bridgeObjectRelease(v124, v84, v85, v86, v87, v88, v89, v90);
  v69(v20, v63);
  v91 = v121;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v70)(v83, 1, v121) == 1)
  {
    v92 = &qword_100833758;
    v93 = v83;
  }
  else
  {
    v94 = v108;
    sub_10043A2CC(v83, v108);
    sub_100021CC0(v94, v71, &qword_100833760);
    v95 = swift_getKeyPath(&unk_10063C9E8);
    __chkstk_darwin(v95);
    *(&v104 - 2) = v96;
    v97 = swift_getKeyPath(&unk_10063CA18);
    v98 = type metadata accessor for Font.Design(0);
    v99 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v109, 1, 1, v98);
    v100 = static Font.system(size:weight:design:)(0, 1, v99, 6.0);
    sub_10001BE90(v99, &qword_10081F2F8);
    v125 = v100;
    v101 = sub_10043D8C0((unint64_t *)&qword_100833770, &qword_100833760);
    v102 = (void (*)(uint64_t *, _QWORD))AttributedString.subscript.modify(&v123, v71, v91, v101);
    AttributedSubstring.subscript.setter(&v125, v97, v105);
    v102(&v123, 0);
    sub_10001BE90(v71, &qword_100833760);
    v93 = v94;
    v92 = &qword_100833760;
  }
  return sub_10001BE90(v93, v92);
}

uint64_t sub_100437E18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001A5194(a1, a2, a3, &qword_100833778);
}

uint64_t sub_100437E24(uint64_t a1, uint64_t a2)
{
  return sub_1001A51F4(a1, a2, &qword_100833778);
}

void sub_100437E30(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100274874();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_100437E54()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

uint64_t sub_100437E6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001A5194(a1, a2, a3, &qword_1008337F8);
}

uint64_t sub_100437E78(uint64_t a1, uint64_t a2)
{
  return sub_1001A51F4(a1, a2, &qword_1008337F8);
}

void sub_100437E84(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10043E458();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_100437EA8()
{
  AttributeScopes.SwiftUIAttributes.textScale.getter();
  __break(1u);
}

uint64_t sub_100437EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_QWORD *, _QWORD);
  unint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t KeyPath;
  _QWORD v83[4];

  v76 = a6;
  v77 = a5;
  v73 = a1;
  v74 = a4;
  v75 = a7;
  v9 = sub_100047110(&qword_1008337E8);
  __chkstk_darwin(v9);
  v72 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v11);
  v79 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AttributedString(0);
  v80 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100833758);
  __chkstk_darwin(v16);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100047110(&qword_100833760);
  v78 = *(_QWORD *)(v81 - 8);
  v19 = __chkstk_darwin(v81);
  v71 = (uint64_t)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v70 = (uint64_t)&v70 - v21;
  v22 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = sub_100047110((uint64_t *)&unk_100827460);
  v32 = swift_allocObject(v31, 112, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v32 + 56) = &type metadata for String;
  v33 = sub_100038CF8();
  *(_QWORD *)(v32 + 32) = v73;
  *(_QWORD *)(v32 + 40) = a2;
  v34 = a2;
  *(_QWORD *)(v32 + 96) = &type metadata for String;
  *(_QWORD *)(v32 + 104) = v33;
  *(_QWORD *)(v32 + 64) = v33;
  *(_QWORD *)(v32 + 72) = a3;
  v35 = a3;
  v36 = v74;
  *(_QWORD *)(v32 + 80) = v74;
  swift_bridgeObjectRetain(v34);
  v37 = swift_bridgeObjectRetain(v36);
  v38 = String.init(format:_:)(v28, v30, v32, v37);
  v40 = v39;
  v41 = v30;
  v42 = v75;
  v43 = swift_bridgeObjectRelease(v41);
  AttributeContainer.init()(v43);
  v44 = v24;
  v45 = v76;
  AttributedString.init(_:attributes:)(v38, v40, v44);
  KeyPath = swift_getKeyPath(&unk_10063C9E8);
  v46 = swift_getKeyPath(&unk_10063CA18);
  v47 = v77;
  v83[0] = v77;
  v48 = sub_1000EA1DC();
  swift_retain(v47);
  AttributedString.subscript.setter(v83, v46, v48);
  if (v45)
  {
    v49 = swift_getKeyPath(&unk_10063CAC8);
    *(&v70 - 2) = __chkstk_darwin(v49);
    v50 = swift_getKeyPath(&unk_10063CAF8);
    v83[0] = v45;
    v51 = sub_1000EA158();
    swift_retain(v45);
    AttributedString.subscript.setter(v83, v50, v51);
  }
  v52 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v15, v42, v13);
  v83[0] = v35;
  v83[1] = v36;
  v53 = type metadata accessor for Locale(0);
  v54 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v79, 1, 1, v53);
  v55 = sub_1000083D8((unint64_t *)&qword_100833768, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v56 = sub_100038CA0();
  AttributedStringProtocol.range<A>(of:options:locale:)(v83, 0, v54, v13, &type metadata for String, v55, v56);
  sub_10001BE90(v54, (uint64_t *)&unk_10082ED90);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v13);
  v57 = v81;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v18, 1, v81) == 1)
  {
    v58 = &qword_100833758;
    v59 = (uint64_t)v18;
  }
  else
  {
    v60 = v70;
    sub_10043A2CC((uint64_t)v18, v70);
    v61 = v71;
    sub_100021CC0(v60, v71, &qword_100833760);
    v62 = swift_getKeyPath(&unk_10063CA58);
    *(&v70 - 2) = __chkstk_darwin(v62);
    v63 = swift_getKeyPath(&unk_10063CA88);
    v64 = v72;
    static Text.Scale.secondary.getter();
    v65 = type metadata accessor for Text.Scale(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 0, 1, v65);
    v66 = sub_10043D8C0((unint64_t *)&qword_100833770, &qword_100833760);
    v67 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v83, v61, v57, v66);
    v68 = sub_10043E458();
    AttributedSubstring.subscript.setter(v64, v63, v68);
    v67(v83, 0);
    sub_10001BE90(v61, &qword_100833760);
    v59 = v60;
    v58 = &qword_100833760;
  }
  return sub_10001BE90(v59, v58);
}

uint64_t sub_10043847C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(Swift::String *, _QWORD);
  unint64_t v76;
  char *v77;
  uint64_t result;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(Swift::String *, _QWORD);
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t, uint64_t);
  Swift::String v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  char *v110;
  Swift::String v111;
  uint64_t v112;
  uint64_t KeyPath;
  Swift::String v114[2];
  uint64_t v115;

  v102 = a7;
  v103 = a8;
  v104 = a5;
  v105 = a6;
  v12 = sub_100047110(&qword_1008337E8);
  __chkstk_darwin(v12);
  v97 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v14);
  v108 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for AttributedString(0);
  v107 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 - 8);
  __chkstk_darwin(v109);
  v110 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_100833758);
  v18 = __chkstk_darwin(v17);
  v100 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v93 - v20;
  v112 = sub_100047110(&qword_100833760);
  v106 = *(void (**)(char *, uint64_t))(v112 - 8);
  v22 = __chkstk_darwin(v112);
  v95 = (uint64_t)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v101 = (uint64_t)&v93 - v25;
  __chkstk_darwin(v24);
  v96 = (uint64_t)&v93 - v26;
  v27 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = sub_100047110((uint64_t *)&unk_100827460);
  v37 = swift_allocObject(v36, 112, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v37 + 56) = &type metadata for String;
  v38 = sub_100038CF8();
  v99._countAndFlagsBits = a1;
  *(_QWORD *)(v37 + 32) = a1;
  *(_QWORD *)(v37 + 40) = a2;
  *(_QWORD *)(v37 + 96) = &type metadata for String;
  *(_QWORD *)(v37 + 104) = v38;
  *(_QWORD *)(v37 + 64) = v38;
  *(_QWORD *)(v37 + 72) = a3;
  v111._countAndFlagsBits = a3;
  *(_QWORD *)(v37 + 80) = a4;
  v99._object = a2;
  swift_bridgeObjectRetain(a2);
  v111._object = a4;
  v39 = swift_bridgeObjectRetain(a4);
  v40 = String.init(format:_:)(v33, v35, v37, v39);
  v42 = v41;
  v43 = swift_bridgeObjectRelease(v35);
  AttributeContainer.init()(v43);
  v44 = v42;
  v45 = v103;
  AttributedString.init(_:attributes:)(v40, v44, v29);
  KeyPath = swift_getKeyPath(&unk_10063C9E8);
  v46 = swift_getKeyPath(&unk_10063CA18);
  v47 = v104;
  v114[0]._countAndFlagsBits = v104;
  v48 = sub_1000EA1DC();
  swift_retain(v47);
  v49 = v105;
  AttributedString.subscript.setter(v114, v46, v48);
  if (v49)
  {
    v50 = swift_getKeyPath(&unk_10063CAC8);
    *(&v93 - 2) = __chkstk_darwin(v50);
    v51 = swift_getKeyPath(&unk_10063CAF8);
    v114[0]._countAndFlagsBits = v49;
    v52 = sub_1000EA158();
    swift_retain(v49);
    AttributedString.subscript.setter(v114, v51, v52);
  }
  v53 = v107;
  v55 = v109;
  v54 = v110;
  v98 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v107 + 2);
  v98(v110, v45, v109);
  v114[0] = v111;
  v56 = type metadata accessor for Locale(0);
  v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56);
  v58 = (uint64_t)v108;
  v57(v108, 1, 1, v56);
  v59 = sub_1000083D8((unint64_t *)&qword_100833768, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v104 = sub_100038CA0();
  AttributedStringProtocol.range<A>(of:options:locale:)(v114, 0, v58, v55, &type metadata for String, v59, v104);
  sub_10001BE90(v58, (uint64_t *)&unk_10082ED90);
  v60 = (void (*)(char *, uint64_t))*((_QWORD *)v53 + 1);
  v60(v54, v55);
  v61 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v106 + 6);
  v62 = v112;
  v63 = v61(v21, 1, v112);
  v105 = v59;
  v107 = v61;
  if (v63 == 1)
  {
    v64 = v45;
    v65 = &qword_100833758;
    v66 = (uint64_t)v21;
  }
  else
  {
    v106 = v60;
    v67 = v96;
    sub_10043A2CC((uint64_t)v21, v96);
    v68 = v101;
    sub_100021CC0(v67, v101, &qword_100833760);
    v69 = swift_getKeyPath(&unk_10063CA58);
    *(&v93 - 2) = __chkstk_darwin(v69);
    v94 = swift_getKeyPath(&unk_10063CA88);
    v70 = v57;
    v71 = v97;
    static Text.Scale.secondary.getter();
    v72 = type metadata accessor for Text.Scale(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 0, 1, v72);
    v73 = sub_10043D8C0((unint64_t *)&qword_100833770, &qword_100833760);
    v74 = v62;
    v64 = v45;
    v75 = (void (*)(Swift::String *, _QWORD))AttributedString.subscript.modify(v114, v68, v74, v73);
    v76 = sub_10043E458();
    v77 = v71;
    v57 = v70;
    AttributedSubstring.subscript.setter(v77, v94, v76);
    v75(v114, 0);
    sub_10001BE90(v68, &qword_100833760);
    v66 = v67;
    v60 = v106;
    v65 = &qword_100833760;
  }
  result = sub_10001BE90(v66, v65);
  v79 = v102;
  if (v102)
  {
    v80 = v110;
    v98(v110, v64, v55);
    v114[0] = v99;
    swift_bridgeObjectRetain(v99._object);
    String.append(_:)(v111);
    v57((char *)v58, 1, 1, v56);
    swift_retain(v79);
    v81 = (uint64_t)v100;
    AttributedStringProtocol.range<A>(of:options:locale:)(v114, 0, v58, v55, &type metadata for String, v105, v104);
    sub_10001BE90(v58, (uint64_t *)&unk_10082ED90);
    v82 = swift_bridgeObjectRelease(v114[0]._object);
    ((void (*)(char *, uint64_t, __n128))v60)(v80, v55, v82);
    v83 = v112;
    if (v107((char *)v81, 1, v112) == 1)
    {
      swift_release(v79);
      v84 = &qword_100833758;
      v85 = v81;
    }
    else
    {
      v86 = v95;
      sub_10043A2CC(v81, v95);
      v87 = v101;
      sub_100021CC0(v86, v101, &qword_100833760);
      v88 = swift_getKeyPath(&unk_10063CAC8);
      *(&v93 - 2) = __chkstk_darwin(v88);
      v89 = swift_getKeyPath(&unk_10063CAF8);
      v115 = v79;
      swift_retain(v79);
      v90 = sub_10043D8C0((unint64_t *)&qword_100833770, &qword_100833760);
      v91 = (void (*)(Swift::String *, _QWORD))AttributedString.subscript.modify(v114, v87, v83, v90);
      v92 = sub_1000EA158();
      AttributedSubstring.subscript.setter(&v115, v89, v92);
      v91(v114, 0);
      swift_release(v79);
      sub_10001BE90(v87, &qword_100833760);
      v85 = v86;
      v84 = &qword_100833760;
    }
    return sub_10001BE90(v85, v84);
  }
  return result;
}

id sub_100438CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t inited;
  NSString *v28;
  id v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class isa;
  id v34;
  _BYTE v37[72];

  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = sub_100047110((uint64_t *)&unk_100827460);
  v20 = swift_allocObject(v19, 152, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100624A40;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  v21 = sub_100038CF8();
  *(_QWORD *)(v20 + 32) = a1;
  *(_QWORD *)(v20 + 40) = a2;
  *(_QWORD *)(v20 + 96) = &type metadata for String;
  *(_QWORD *)(v20 + 104) = v21;
  *(_QWORD *)(v20 + 64) = v21;
  *(_QWORD *)(v20 + 72) = a3;
  *(_QWORD *)(v20 + 80) = a4;
  *(_QWORD *)(v20 + 136) = &type metadata for String;
  *(_QWORD *)(v20 + 144) = v21;
  *(_QWORD *)(v20 + 112) = a5;
  *(_QWORD *)(v20 + 120) = a6;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  v22 = swift_bridgeObjectRetain(a6);
  String.init(format:_:)(v16, v18, v20, v22);
  v24 = v23;
  swift_bridgeObjectRelease(v18);
  v25 = sub_10043E190(a7, 33, 0);
  v26 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v26, v37);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v25;
  v28 = NSFontAttributeName;
  v29 = v25;
  v30 = sub_100038EAC(inited, &qword_1008255C8, &qword_1008255D0, (uint64_t (*)(uint64_t))sub_100438FD8);
  v31 = objc_allocWithZone((Class)NSMutableAttributedString);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(v31, "initWithString:attributes:", v32, isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v34;
}

unint64_t sub_100438F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10043A038(a1, a2, v5);
}

unint64_t sub_100438FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10043A118(a1, v7);
}

unint64_t sub_100439058(Swift::UInt a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = v2;
  v6 = a2 & 1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v3 + 40));
  if ((a2 & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(a1);
  v7 = Hasher._finalize()();
  return sub_10043A38C(a1, v6, v7);
}

unint64_t sub_1004390CC(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10043B6A4(a1, v3);
}

unint64_t sub_100439130(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1 + 1);
  v3 = Hasher._finalize()();
  return sub_10043B6A4(a1, v3);
}

unint64_t sub_100439198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10043A118(a1, v7);
}

unint64_t sub_100439224(Swift::UInt a1, Swift::UInt a2, double a3, double a4)
{
  uint64_t v4;
  Swift::Int v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, *(_QWORD *)(v4 + 40));
  sub_1003927B0(a3, a4, (uint64_t)v11, a1, a2);
  v9 = Hasher._finalize()();
  return sub_10043A450(a1, a2, v9, a3, a4);
}

void sub_1004392A8(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_10043930C()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0xD000000000000012, 0x80000001006879F0);
  swift_bridgeObjectRelease(0x80000001006879F0);
  v1 = Hasher._finalize()();
  return sub_10043A4E4(v0, v1);
}

unint64_t sub_10043939C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for Date(0);
  v6 = sub_1000083D8((unint64_t *)&qword_1008214E8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000225C4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (unint64_t *)&qword_100824D50, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_100439434(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10043A6F0(a1, v4);
}

void sub_100439464(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_1004394B4()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x736C616F67, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  v1 = Hasher._finalize()();
  return sub_10043A7F8(v0, v1);
}

unint64_t sub_100439544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for DateComponents(0);
  v6 = sub_1000083D8(&qword_100822030, (uint64_t (*)(uint64_t))&type metadata accessor for DateComponents, (uint64_t)&protocol conformance descriptor for DateComponents);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000225C4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for DateComponents, &qword_100822038, (uint64_t)&protocol conformance descriptor for DateComponents);
}

unint64_t sub_1004395DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10043A9E8(a1, v4);
}

unint64_t sub_10043960C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  Swift::Int v8;
  _QWORD v10[9];

  v3 = v2;
  Hasher.init(_seed:)(v10, *(_QWORD *)(v3 + 40));
  v6 = a1;
  NSObject.hash(into:)(v10);

  if (a2)
  {
    Hasher._combine(_:)(1u);
    v7 = a2;
    NSObject.hash(into:)(v10);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v8 = Hasher._finalize()();
  return sub_10043AB00((uint64_t)v6, a2, v8);
}

uint64_t sub_1004396A8(uint64_t a1)
{
  return sub_100439D7C(a1, (uint64_t (*)(uint64_t))sub_1001A561C, sub_10043AC70);
}

unint64_t sub_1004396BC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x6D6F74737563;
  else
    v5 = 0x647261646E617473;
  if ((a1 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_10043B000(v4, v7);
}

unint64_t sub_10043974C(double a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = a1;
  else
    v3 = 0.0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), *(_QWORD *)&v3);
  return sub_10043B13C(v4, a1);
}

void sub_100439780(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_1004397D8()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x61446D6F74737563, 0xEA00000000007379);
  swift_bridgeObjectRelease(0xEA00000000007379);
  v1 = Hasher._finalize()();
  return sub_10043B1D4(v0, v1);
}

uint64_t sub_100439884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_100391C64(*(_QWORD *)(v1 + 40), a1);
  return sub_10043B414(a1, v3);
}

unint64_t sub_1004398B4(unsigned __int8 a1, Swift::UInt a2, char a3)
{
  uint64_t v3;
  char v7;
  Swift::Int v8;
  _QWORD v10[9];

  v7 = a3 & 1;
  Hasher.init(_seed:)(v10, *(_QWORD *)(v3 + 40));
  Hasher._combine(_:)(a1);
  if ((a3 & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(a2);
  v8 = Hasher._finalize()();
  return sub_10043B744(a1, a2, v7, v8);
}

uint64_t sub_100439944(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, *(_QWORD *)(v3 + 40));
  sub_10054FFE4(a1, a2, a3);
  v8 = v7;
  String.hash(into:)(v12, v9, v7);
  swift_bridgeObjectRelease(v8);
  if (!(_BYTE)a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)(v12, a1, a2);
  }
  Hasher._combine(_:)((a3 >> 8) & 1);
  v10 = Hasher._finalize()();
  return sub_10043B81C(a1, a2, a3 & 0x1FF, v10);
}

unint64_t sub_100439A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000225C4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (unint64_t *)&unk_10082E6B0, (uint64_t)&protocol conformance descriptor for UUID);
}

void sub_100439AB4(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_100439B08()
{
  uint64_t v0;
  SEL v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  Swift::Int v8;
  uint64_t v10;

  String.hash(into:)(&v10, 0x70536D6F74737563, 0xEB0000000074696CLL);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEB0000000074696CLL, v1, v2, v3, v4, v5, v6, v7);
  v8 = Hasher._finalize()();
  return sub_10043BE14(v0, v8);
}

unint64_t sub_100439B8C(Swift::UInt a1, int a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  sub_1003C128C((uint64_t)v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10043BFF4(a1, a2, v5);
}

unint64_t sub_100439BF0(Swift::UInt a1, int a2)
{
  uint64_t v2;
  int v5;
  Swift::UInt8 v6;
  Swift::Int v7;
  _QWORD v9[9];

  v5 = a2;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1);
  if (v5 == 2)
  {
    v6 = 0;
  }
  else
  {
    v6 = a2 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v6);
  v7 = Hasher._finalize()();
  return sub_10043C148(a1, a2, v7);
}

unint64_t sub_100439C88(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Swift::Int v12;
  _QWORD v14[9];

  v2 = v1;
  Hasher.init(_seed:)(v14, *(_QWORD *)(v2 + 40));
  if ((a1 & 1) != 0)
    v4 = 0x747365776F6C73;
  else
    v4 = 0x74736574736166;
  String.hash(into:)(v14, v4, 0xE700000000000000);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000, v5, v6, v7, v8, v9, v10, v11);
  v12 = Hasher._finalize()();
  return sub_10043C1F0(a1 & 1, v12);
}

uint64_t sub_100439D10(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_1005D75B0((uint64_t)v5);
  v3 = Hasher._finalize()();
  return sub_10043C2F4(a1, v3);
}

uint64_t sub_100439D68(uint64_t a1)
{
  return sub_100439D7C(a1, (uint64_t (*)(uint64_t))sub_100539900, sub_10043C5D8);
}

uint64_t sub_100439D7C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, Swift::Int))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, *(_QWORD *)(v3 + 40));
  v6 = a2(a1);
  v8 = v7;
  String.hash(into:)(v12, v6, v7);
  swift_bridgeObjectRelease(v8);
  v9 = Hasher._finalize()();
  return a3(a1, v9);
}

unint64_t sub_100439DFC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Swift::Int v12;
  _QWORD v14[9];

  v2 = v1;
  Hasher.init(_seed:)(v14, *(_QWORD *)(v2 + 40));
  if ((a1 & 1) != 0)
    v4 = 0x747365676E6F6CLL;
  else
    v4 = 0x746E6572727563;
  String.hash(into:)(v14, v4, 0xE700000000000000);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000, v5, v6, v7, v8, v9, v10, v11);
  v12 = Hasher._finalize()();
  return sub_10043C9CC(a1 & 1, v12);
}

uint64_t sub_100439E84(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_1003917A8((uint64_t)v5, a1);
  v3 = Hasher._finalize()();
  return sub_10043CAD0(a1, v3);
}

unint64_t sub_100439EDC(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Swift::Int v12;
  _QWORD v14[9];

  Hasher.init(_seed:)(v14, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x68746E6F6DLL;
    else
      v3 = 1918985593;
    if (a1 == 1)
      v4 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
    else
      v4 = (CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000;
  }
  else
  {
    v4 = (CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000;
    v3 = 1801807223;
  }
  String.hash(into:)(v14, v3, v4);
  swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = Hasher._finalize()();
  return sub_10043CDC8(a1, v12);
}

unint64_t sub_100439F7C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Swift::Int v14;
  _QWORD v16[9];

  v2 = v1;
  Hasher.init(_seed:)(v16, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 1953718636;
  else
    v5 = 0x746E6572727563;
  if ((a1 & 1) != 0)
    v6 = (CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000;
  else
    v6 = (CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000;
  String.hash(into:)(v16, v5, v6);
  swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
  v14 = Hasher._finalize()();
  return sub_10043CF40(v4, v14);
}

uint64_t sub_10043A008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_100391F7C(*(_QWORD *)(v1 + 40), a1);
  return sub_10043D074(a1, v3);
}

unint64_t sub_10043A038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10043A118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_10043A298()
{
  return 8;
}

uint64_t sub_10043A2A4(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10043A2AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_10043A2C0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10043A2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100833760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10043A314()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

void sub_10043A330(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100274874();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10043A354()
{
  return 8;
}

uint64_t sub_10043A360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001A5194(a1, a2, a3, &qword_100833778) & 1;
}

uint64_t sub_10043A380(uint64_t a1, uint64_t a2)
{
  return sub_1001A51F4(a1, a2, &qword_100833778);
}

unint64_t sub_10043A38C(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    v8 = (a2 & 1) == 0;
    v9 = a1 < 2 || (a2 & 1) == 0;
    v10 = a1 != 1 || (a2 & 1) == 0;
    if (a1)
      v8 = 1;
    do
    {
      v11 = *(_QWORD *)(v3 + 48) + 16 * result;
      v12 = *(_QWORD *)v11;
      if (*(_BYTE *)(v11 + 8) == 1)
      {
        if (v12)
        {
          if (v12 == 1)
          {
            if (!v10)
              return result;
          }
          else if (!v9)
          {
            return result;
          }
        }
        else if (!v8)
        {
          return result;
        }
      }
      else if ((a2 & 1) == 0 && v12 == a1)
      {
        return result;
      }
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10043A450(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;

  v7 = -1 << *(_BYTE *)(v5 + 32);
  result = a3 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v9 = ~v7;
    do
    {
      v10 = *(_QWORD *)(v5 + 48) + 32 * result;
      v11 = *(double *)v10;
      v12 = *(double *)(v10 + 8);
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      v15 = v11 == a4;
      if (v12 != a5)
        v15 = 0;
      v16 = v14 == a1 && v15;
      if (v13 == a2 && v16)
        break;
      result = (result + 1) & v9;
    }
    while (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_10043A4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043A6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CatalogItemViewModel(0);
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_10043A7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043A9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_10043AB00(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char v17;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = v3;
    v9 = ~v5;
    sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
    while (1)
    {
      v10 = *(_QWORD *)(v7 + 48) + 16 * v6;
      v11 = *(void **)v10;
      v12 = *(void **)(v10 + 8);
      v13 = v12;
      v14 = v11;
      if ((static NSObject.== infix(_:_:)(v14, a1) & 1) == 0)
        break;
      if (!v12)
      {
        if (!a2)
        {

          return v6;
        }
        goto LABEL_4;
      }
      if (!a2)
        break;
      sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
      v15 = v13;
      v16 = a2;
      v17 = static NSObject.== infix(_:_:)(v15, v16);

      if ((v17 & 1) != 0)
        return v6;
LABEL_5:
      v6 = (v6 + 1) & v9;
      if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return v6;
    }

LABEL_4:
    goto LABEL_5;
  }
  return v6;
}

uint64_t sub_10043AC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043B000(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6D6F74737563;
    else
      v6 = 0x647261646E617473;
    if ((a1 & 1) != 0)
      v7 = 0xE600000000000000;
    else
      v7 = 0xE800000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6D6F74737563 : 0x647261646E617473;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE600000000000000 : 0xE800000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_10043B13C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_10043B1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_10043B414(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043B6A4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10043B744(unsigned __int8 a1, unint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  unsigned __int8 *v12;
  uint64_t v13;

  v6 = -1 << *(_BYTE *)(v4 + 32);
  result = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v8 = ~v6;
    v9 = (a3 & 1) == 0;
    v10 = a2 < 2 || (a3 & 1) == 0;
    v11 = a2 != 1 || (a3 & 1) == 0;
    if (a2)
      v9 = 1;
    do
    {
      v12 = (unsigned __int8 *)(*(_QWORD *)(v4 + 48) + 24 * result);
      if (*v12 == a1)
      {
        v13 = *((_QWORD *)v12 + 1);
        if (v12[16] == 1)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              if (!v11)
                return result;
            }
            else if (!v10)
            {
              return result;
            }
          }
          else if (!v9)
          {
            return result;
          }
        }
        else if ((a3 & 1) == 0 && v13 == a2)
        {
          return result;
        }
      }
      result = (result + 1) & v8;
    }
    while (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_10043B81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    __asm { BR              X9 }
  return a4 & ~v5;
}

uint64_t sub_10043BAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_10043BE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043BFF4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    while (2)
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      v9 = *(unsigned __int16 *)(v8 + 8);
      switch(v9 >> 8)
      {
        case 2u:
          if ((a2 & 0xFF00) != 0x200)
            goto LABEL_4;
          break;
        case 3u:
          if ((a2 & 0xFF00) != 0x300)
            goto LABEL_4;
          break;
        case 4u:
          if ((a2 & 0xFF00) != 0x400)
            goto LABEL_4;
          break;
        case 5u:
          if ((a2 & 0xFF00) != 0x500)
            goto LABEL_4;
          break;
        case 6u:
          if ((a2 & 0xFF00) != 0x600)
            goto LABEL_4;
          break;
        default:
          if ((BYTE1(a2) - 7) <= 0xFAu && *(_QWORD *)v8 == a1)
          {
            if (*(_WORD *)(v8 + 8) == 2)
            {
              if (a2 == 2 && (((a2 ^ v9) >> 8) & 1) == 0)
                return result;
            }
            else if (a2 != 2 && ((a2 ^ ((v9 & 1) == 0)) & 1) != 0 && (((a2 ^ v9) >> 8) & 1) == 0)
            {
              return result;
            }
          }
LABEL_4:
          result = (result + 1) & v7;
          if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
            continue;
          break;
      }
      break;
    }
  }
  return result;
}

unint64_t sub_10043C148(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _BOOL4 v10;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      if (*(_QWORD *)v8 == a1)
      {
        v9 = *(unsigned __int8 *)(v8 + 8);
        if (v9 == 2)
        {
          if (a2 == 2)
            return result;
        }
        else
        {
          v10 = (v9 & 1) == 0;
          if (a2 != 2 && ((a2 ^ v10) & 1) != 0)
            return result;
        }
      }
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10043C1F0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x747365776F6C73;
    else
      v6 = 0x74736574736166;
    while (1)
    {
      v7 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x747365776F6C73 : 0x74736574736166;
      if (v7 == v6)
        break;
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, 0xE700000000000000, v6, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v8 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  }
  return v4;
}

uint64_t sub_10043C2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X8 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_10043C5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043C9CC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x747365676E6F6CLL;
    else
      v6 = 0x746E6572727563;
    while (1)
    {
      v7 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x747365676E6F6CLL : 0x746E6572727563;
      if (v7 == v6)
        break;
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, 0xE700000000000000, v6, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v8 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  }
  return v4;
}

uint64_t sub_10043CAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043CDC8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xE500000000000000;
          v8 = 0x68746E6F6DLL;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v7 = 0xE400000000000000;
          v8 = 1918985593;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE400000000000000;
            v10 = 1801807223;
            if (v8 != 1801807223)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v7 = 0xE400000000000000;
        v8 = 1801807223;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x68746E6F6DLL;
      else
        v10 = 1918985593;
      if (v9 == 1)
        v11 = 0xE500000000000000;
      else
        v11 = 0xE400000000000000;
      if (v8 != v10)
        goto LABEL_19;
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n(v7, 2);
        return v4;
      }
LABEL_19:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, v10, v11, 0);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_10043CF40(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 1953718636;
    else
      v6 = 0x746E6572727563;
    if ((a1 & 1) != 0)
      v7 = 0xE400000000000000;
    else
      v7 = 0xE700000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 1953718636 : 0x746E6572727563;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE400000000000000 : 0xE700000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

uint64_t sub_10043D074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10043D364(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt v11;
  char v12;
  unint64_t result;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_100047110(&qword_1008337B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_100047110(&qword_100832DB8);
    v7 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v6);
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_100021CC0(v9, (uint64_t)v5, &qword_1008337B0);
      v11 = *(_QWORD *)v5;
      v12 = v5[8];
      result = sub_100439058(*(_QWORD *)v5, v12);
      if ((v14 & 1) != 0)
        break;
      v15 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v16 = v7[6] + 16 * result;
      *(_QWORD *)v16 = v11;
      *(_BYTE *)(v16 + 8) = v12;
      v17 = v7[7];
      v18 = type metadata accessor for MetricDetailViewModel(0);
      result = sub_10043E380(v8, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v15);
      v19 = v7[2];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_10;
      v7[2] = v21;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10043D4D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  Swift::UInt v4;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100047110(&qword_100832DA8);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  result = sub_100439058(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v6);
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v3[6] + 16 * result;
    *(_QWORD *)v10 = v4;
    *(_BYTE *)(v10 + 8) = v5 & 1;
    *(_QWORD *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *((_BYTE *)v9 - 8);
    v15 = *v9;
    swift_bridgeObjectRetain(v6);
    result = sub_100439058(v4, v5);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10043D5F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100047110(&qword_1008328E0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1004390CC(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v5);
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain(v5);
    result = sub_1004390CC(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10043D6F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  unsigned __int8 v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100047110(&qword_100832E70);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (char *)(a1 + 33); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1004390CC(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10043D7CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  double *i;
  double v5;
  double v6;
  Swift::UInt v7;
  Swift::UInt v8;
  char v9;
  unint64_t result;
  char v11;
  double *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100047110(&qword_100833788);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (double *)(a1 + 64); ; i += 5)
    {
      v5 = *(i - 4);
      v6 = *(i - 3);
      v7 = *((_QWORD *)i - 2);
      v8 = *((_QWORD *)i - 1);
      v9 = *(_BYTE *)i;
      result = sub_100439224(v7, v8, v5, v6);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v12 = (double *)(v3[6] + 32 * result);
      *v12 = v5;
      v12[1] = v6;
      *((_QWORD *)v12 + 2) = v7;
      *((_QWORD *)v12 + 3) = v8;
      *(_BYTE *)(v3[7] + result) = v9;
      v13 = v3[2];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_10;
      v3[2] = v15;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_10043D8C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100007050(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for Range<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10043D900(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100047110(&qword_1008337A8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_100439130(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10043D9D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  unint64_t result;
  char v12;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  _BYTE v34[201];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100047110(&qword_100833828);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)&v34[160] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)&v34[176] = v4;
  *(_OWORD *)&v34[185] = *(_OWORD *)(a1 + 217);
  v5 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)&v34[96] = *(_OWORD *)(a1 + 128);
  *(_OWORD *)&v34[112] = v5;
  v6 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)&v34[128] = *(_OWORD *)(a1 + 160);
  *(_OWORD *)&v34[144] = v6;
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)&v34[32] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v34[48] = v7;
  v8 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)&v34[64] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)&v34[80] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)v34 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v34[16] = v9;
  v10 = v34[0];
  result = sub_1004390CC(v34[0]);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  v13 = (_OWORD *)(a1 + 240);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v10;
    v14 = v3[7] + 200 * result;
    *(_OWORD *)v14 = *(_OWORD *)&v34[8];
    v15 = *(_OWORD *)&v34[24];
    v16 = *(_OWORD *)&v34[40];
    v17 = *(_OWORD *)&v34[72];
    *(_OWORD *)(v14 + 48) = *(_OWORD *)&v34[56];
    *(_OWORD *)(v14 + 64) = v17;
    *(_OWORD *)(v14 + 16) = v15;
    *(_OWORD *)(v14 + 32) = v16;
    v18 = *(_OWORD *)&v34[88];
    v19 = *(_OWORD *)&v34[104];
    v20 = *(_OWORD *)&v34[136];
    *(_OWORD *)(v14 + 112) = *(_OWORD *)&v34[120];
    *(_OWORD *)(v14 + 128) = v20;
    *(_OWORD *)(v14 + 80) = v18;
    *(_OWORD *)(v14 + 96) = v19;
    v21 = *(_OWORD *)&v34[152];
    v22 = *(_OWORD *)&v34[168];
    v23 = *(_OWORD *)&v34[184];
    *(_BYTE *)(v14 + 192) = v34[200];
    *(_OWORD *)(v14 + 160) = v22;
    *(_OWORD *)(v14 + 176) = v23;
    *(_OWORD *)(v14 + 144) = v21;
    v24 = v3[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      break;
    v3[2] = v26;
    sub_10043E518(v34);
    if (!--v1)
      return (unint64_t)v3;
    v27 = v13[11];
    *(_OWORD *)&v34[160] = v13[10];
    *(_OWORD *)&v34[176] = v27;
    *(_OWORD *)&v34[185] = *(_OWORD *)((char *)v13 + 185);
    v28 = v13[7];
    *(_OWORD *)&v34[96] = v13[6];
    *(_OWORD *)&v34[112] = v28;
    v29 = v13[9];
    *(_OWORD *)&v34[128] = v13[8];
    *(_OWORD *)&v34[144] = v29;
    v30 = v13[3];
    *(_OWORD *)&v34[32] = v13[2];
    *(_OWORD *)&v34[48] = v30;
    v31 = v13[5];
    *(_OWORD *)&v34[64] = v13[4];
    *(_OWORD *)&v34[80] = v31;
    v32 = v13[1];
    *(_OWORD *)v34 = *v13;
    *(_OWORD *)&v34[16] = v32;
    v10 = v34[0];
    result = sub_1004390CC(v34[0]);
    v13 += 13;
    if ((v33 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10043DB8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100047110(&qword_100832CA8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (__int128 *)(a1 + 40); ; i += 3)
    {
      v5 = *((_BYTE *)i - 8);
      v13 = i[1];
      v14 = *i;
      v6 = *((_QWORD *)i + 4);
      result = sub_1004390CC(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      v9 = v3[7] + 40 * result;
      *(_OWORD *)v9 = v14;
      *(_OWORD *)(v9 + 16) = v13;
      *(_QWORD *)(v9 + 32) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10043DC90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  unsigned __int8 v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100047110(&qword_100832CA0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_BYTE *)i - 8);
      v11 = *i;
      result = sub_1004390CC(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10043DD6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_100047110(&qword_1008338E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_100047110(&qword_100832DB0);
    v7 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v6);
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_100021CC0(v9, (uint64_t)v5, &qword_1008338E0);
      v11 = *v5;
      result = sub_1004390CC(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v7[6] + result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for MetricDetailViewModel(0);
      result = sub_10043E380(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10043DECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  Swift::UInt v11;
  char v12;
  unint64_t result;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  v2 = sub_100047110(&qword_100833830);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_100047110(&qword_10082F318);
    v7 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v6);
    v23 = &v5[*(int *)(v2 + 48)];
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_100021CC0(v8, (uint64_t)v5, &qword_100833830);
      v10 = *v5;
      v11 = *((_QWORD *)v5 + 1);
      v12 = v5[16];
      result = sub_1004398B4(*v5, v11, v12);
      if ((v14 & 1) != 0)
        break;
      v15 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v16 = v7[6] + 24 * result;
      *(_BYTE *)v16 = v10;
      *(_QWORD *)(v16 + 8) = v11;
      *(_BYTE *)(v16 + 16) = v12;
      v17 = v7[7];
      v18 = type metadata accessor for MetricDetailViewModel(0);
      result = sub_10043E380((uint64_t)v23, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v15);
      v19 = v7[2];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_10;
      v7[2] = v21;
      v8 += v9;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10043E054(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  Swift::UInt v5;
  char v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_100047110(&qword_100832C88);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  result = sub_1004398B4(v4, v5, v6);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v7);
    return (unint64_t)v3;
  }
  v10 = (_QWORD *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = v3[6] + 24 * result;
    *(_BYTE *)v11 = v4;
    *(_QWORD *)(v11 + 8) = v5;
    *(_BYTE *)(v11 + 16) = v6 & 1;
    *(_QWORD *)(v3[7] + 8 * result) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    if (!--v1)
      goto LABEL_8;
    v15 = v10 + 4;
    v4 = *((_BYTE *)v10 - 24);
    v5 = *(v10 - 2);
    v6 = *((_BYTE *)v10 - 8);
    v16 = *v10;
    swift_retain(v7);
    result = sub_1004398B4(v4, v5, v6);
    v10 = v15;
    v7 = v16;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_10043E190(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  unint64_t v18;
  Class isa;
  id v20;
  id v21;
  _BYTE v23[72];
  _BYTE v24[64];

  v5 = objc_msgSend(a1, "fontDescriptor");
  v6 = sub_100047110(&qword_10082FB18);
  inited = swift_initStackObject(v6, v24);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  v8 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(inited + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(inited + 40) = a2;
  v9 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(inited + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(inited + 56) = a3;
  v10 = v8;
  v11 = v9;
  v12 = sub_100038DB0(inited);
  v13 = sub_100047110(&qword_100822878);
  v14 = swift_initStackObject(v13, v23);
  *(_OWORD *)(v14 + 16) = xmmword_100622F90;
  *(_QWORD *)(v14 + 32) = UIFontDescriptorFeatureSettingsAttribute;
  v15 = sub_100047110(&qword_10082FB10);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100622F90;
  *(_QWORD *)(v16 + 32) = v12;
  *(_QWORD *)(v14 + 64) = sub_100047110(&qword_10082DCA8);
  *(_QWORD *)(v14 + 40) = v16;
  v17 = UIFontDescriptorFeatureSettingsAttribute;
  v18 = sub_100038EAC(v14, &qword_10082DCA0, &qword_100833790, (uint64_t (*)(uint64_t))sub_100439198);
  type metadata accessor for AttributeName(0);
  sub_1000083D8((unint64_t *)&qword_10081E830, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10062267C);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v5, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v21 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v20, 0.0);
  return v21;
}

uint64_t sub_10043E380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10043E3C4()
{
  AttributeScopes.SwiftUIAttributes.font.getter();
  __break(1u);
}

void sub_10043E3E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1000EA1DC();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10043E404()
{
  return 8;
}

uint64_t sub_10043E410(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001A5194(a1, a2, a3, &qword_100833800) & 1;
}

uint64_t sub_10043E430(uint64_t a1, uint64_t a2)
{
  return sub_1001A51F4(a1, a2, &qword_100833800);
}

void sub_10043E43C()
{
  AttributeScopes.SwiftUIAttributes.textScale.getter();
  __break(1u);
}

unint64_t sub_10043E458()
{
  unint64_t result;

  result = qword_1008337F0;
  if (!qword_1008337F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.SwiftUIAttributes.TextScaleAttribute, &type metadata for AttributeScopes.SwiftUIAttributes.TextScaleAttribute);
    atomic_store(result, (unint64_t *)&qword_1008337F0);
  }
  return result;
}

void sub_10043E49C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10043E458();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10043E4C0()
{
  return 8;
}

uint64_t sub_10043E4CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001A5194(a1, a2, a3, &qword_1008337F8) & 1;
}

uint64_t sub_10043E4EC(uint64_t a1, uint64_t a2)
{
  return sub_1001A51F4(a1, a2, &qword_1008337F8);
}

uint64_t sub_10043E504()
{
  return 8;
}

_QWORD *sub_10043E518(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[4];
  v3 = a1[10];
  v4 = a1[11];
  v5 = a1[17];
  v6 = a1[18];
  swift_bridgeObjectRetain(a1[3]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t sub_10043E5B4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10063CCC8);
  v2 = swift_getKeyPath(&unk_10063CCF0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10043E624()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10063CC38);
  v2 = swift_getKeyPath(&unk_10063CC60);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10043E694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a2;
  v3[3] = a3;
  v4 = sub_100047110(&qword_10081E650);
  v3[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10043E6F0, 0, 0);
}

uint64_t sub_10043E6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = swift_allocObject(&unk_10079F540, 24, 7);
  swift_weakInit(v4 + 16, v2);
  v5 = (_QWORD *)swift_allocObject(&unk_10079F568, 40, 7);
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  sub_1004C6CF4(v1, (uint64_t)&unk_100833B18, (uint64_t)v5);
  sub_10001BE90(v1, &qword_10081E650);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10043E7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch(sub_10043E7D0, 0, 0);
}

uint64_t sub_10043E7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_10043EFF4();
    v3 = swift_release(v4);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10043E830(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  unsigned int v28;
  double v29;
  double v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t KeyPath;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  char *v40;
  _QWORD *v41;
  void (*v42)(char *, char *, void *);
  void (*v43)(char *, uint64_t, uint64_t, void *);
  char *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  void (*v55)(char *, char *, void *);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  id v63;
  NSString v64;
  id v65;
  uint64_t v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  const char *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  NSString v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  char *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, id);
  uint64_t v103;
  char *v104;
  char *v105;
  id v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  _QWORD *v115;
  _QWORD *v116;
  char *v117;
  char *v118;

  v3 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v103 - v7;
  v9 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v9);
  v104 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v105 = (char *)&v103 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v103 - v14;
  v16 = type metadata accessor for Date(0);
  v116 = *(_QWORD **)(v16 - 8);
  __chkstk_darwin(v16);
  v111 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v108 = (char *)&v103 - v19;
  __chkstk_darwin(v20);
  v114 = (char *)&v103 - v21;
  *(_QWORD *)&v23 = __chkstk_darwin(v22).n128_u64[0];
  v117 = (char *)&v103 - v24;
  v25 = (void *)v1[8];
  v27 = (void *)v1[2];
  v26 = (void *)v1[3];
  v115 = v1;
  v28 = objc_msgSend(v25, "hasAverageCyclingPowerForWorkout:workoutActivity:", v27, v26, v23);
  v112 = v5;
  v113 = v8;
  v106 = v27;
  v107 = a1;
  if (v28)
    objc_msgSend(v25, "averageCyclingPowerForWorkout:workoutActivity:", v27, v26);
  else
    v29 = sub_1004D35E0(a1);
  v30 = v29;
  v31 = (void *)v16;
  v32 = objc_msgSend(v25, "formattedPowerStringFor:");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v109 = v34;
  v110 = v33;

  v35 = (char *)objc_msgSend(v25, "formattedAveragePowerStringFor:context:", CFSTR("WorkoutDetailDisplayContext"), v30);
  KeyPath = swift_getKeyPath(&unk_10063CCC8);
  v37 = swift_getKeyPath(&unk_10063CCF0);
  v118 = v35;
  v38 = v115;
  swift_retain(v115);
  static Published.subscript.setter(&v118, v38, KeyPath, v37);
  if (v26)
  {
    v39 = objc_msgSend(v26, "startDate");
    v40 = v114;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

    v41 = v116;
    v42 = (void (*)(char *, char *, void *))v116[4];
    v42(v15, v40, v31);
    v43 = (void (*)(char *, uint64_t, uint64_t, void *))v41[7];
    v43(v15, 0, 1, v31);
    if (((unsigned int (*)(char *, uint64_t, void *))v41[6])(v15, 1, v31) != 1)
    {
      v42(v117, v15, v31);
      v44 = v108;
      v45 = (uint64_t)v104;
      v46 = v106;
      goto LABEL_10;
    }
  }
  else
  {
    v43 = (void (*)(char *, uint64_t, uint64_t, void *))v116[7];
    v43(v15, 1, 1, v31);
  }
  v46 = v106;
  v47 = objc_msgSend(v106, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v47);

  sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_100828370);
  if (!v26)
  {
    v48 = (uint64_t)v105;
    v43(v105, 1, 1, v31);
    v52 = v116;
    v44 = v108;
    goto LABEL_15;
  }
  v44 = v108;
  v45 = (uint64_t)v104;
LABEL_10:
  v48 = (uint64_t)v105;
  v49 = objc_msgSend(v26, "endDate");
  if (v49)
  {
    v50 = v49;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v49);

    v51 = 0;
  }
  else
  {
    v51 = 1;
  }
  v52 = v116;
  v43((char *)v45, v51, 1, v31);
  sub_100045AD4(v45, v48, (uint64_t *)&unk_100828370);
  if (((unsigned int (*)(uint64_t, uint64_t, void *))v52[6])(v48, 1, v31) != 1)
  {
    ((void (*)(char *, uint64_t, void *))v52[4])(v44, v48, v31);
    goto LABEL_17;
  }
LABEL_15:
  v53 = objc_msgSend(v46, "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v53);

  sub_10001BE90(v48, (uint64_t *)&unk_100828370);
LABEL_17:
  v54 = v107;
  v55 = (void (*)(char *, char *, void *))v52[2];
  v56 = (uint64_t)v114;
  v55(v114, v117, v31);
  v57 = v111;
  v55(v111, v44, v31);
  v58 = type metadata accessor for WorkoutChartProperties(0);
  swift_allocObject(v58, *(unsigned int *)(v58 + 48), *(unsigned __int16 *)(v58 + 52));
  v106 = v31;
  v59 = sub_10026A764(v56, v57, 0, 1, 0, 1, 1, 10.0, 90.0);
  v108 = (char *)v59;
  sub_10044068C(v54, v59);
  v107 = v60;
  v61 = v115;
  v62 = sub_1001B9140(v59);
  v63 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v64 = String._bridgeToObjectiveC()();
  v65 = objc_msgSend(v63, "localizedStringForKey:value:table:", v64, 0, 0);

  v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v68 = v67;

  v69 = sub_100047110((uint64_t *)&unk_100827460);
  v70 = swift_allocObject(v69, 72, 7);
  *(_OWORD *)(v70 + 16) = xmmword_100622F90;
  *(_QWORD *)(v70 + 56) = &type metadata for String;
  *(_QWORD *)(v70 + 64) = sub_100038CF8();
  v71 = v109;
  *(_QWORD *)(v70 + 32) = v110;
  *(_QWORD *)(v70 + 40) = v71;
  String.init(format:_:)(v66, v68, v70, v72);
  v74 = (CHWorkoutDetailHeartRateTableViewCell *)v73;
  swift_bridgeObjectRelease(v68, v73, v75, v76, v77, v78, v79, v80);
  v81 = objc_allocWithZone((Class)NSAttributedString);
  v82 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v74, v83, v84, v85, v86, v87, v88, v89);
  v90 = objc_msgSend(v81, "initWithString:", v82);

  v91 = v117;
  v92 = v106;
  v55((char *)v56, v117, v106);
  v55(v57, v44, v92);
  swift_retain(v61[7]);
  v93 = (uint64_t)v113;
  sub_1002A23DC(4, 0, (int *)0xE000000000000000, v90, v107, 1, v56, (uint64_t)v57, (uint64_t)v113, v62, 0, v94);
  v95 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v93, 0, 1, v95);
  v96 = swift_getKeyPath(&unk_10063CBA8);
  v97 = swift_getKeyPath(&unk_10063CBD0);
  v98 = (uint64_t)v112;
  sub_1001048E0(v93, (uint64_t)v112);
  swift_retain(v61);
  static Published.subscript.setter(v98, v61, v96, v97);
  sub_10001BE90(v93, &qword_1008202F0);
  v99 = swift_getKeyPath(&unk_10063CBF0);
  v100 = swift_getKeyPath(&unk_10063CC18);
  v118 = v108;
  swift_retain(v61);
  static Published.subscript.setter(&v118, v61, v99, v100);
  v101 = (void (*)(char *, id))v116[1];
  v101(v44, v92);
  return ((uint64_t (*)(char *, id))v101)(v91, v92);
}

void sub_10043EFF4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[5];
  uint64_t v10;

  v1 = v0;
  v2 = *v0;
  v3 = (void *)v0[6];
  v4 = v0[2];
  v5 = v0[3];
  v6 = swift_allocObject(&unk_10079F540, 24, 7);
  swift_weakInit(v6 + 16, v1);
  v7 = swift_allocObject(&unk_10079F590, 32, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v2;
  v9[4] = sub_100440654;
  v10 = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1004C6F7C;
  v9[3] = &unk_10079F5A8;
  v8 = _Block_copy(v9);
  objc_msgSend(v3, "powerSamplesForWorkout:workoutActivity:completion:", v4, v5, v8, swift_release(v10).n128_f64[0]);
  _Block_release(v8);
}

void sub_10043F0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  void *v31;
  os_log_type_t v32;
  NSObject *v33;
  uint8_t *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  unint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  double v51;
  double v52;
  id v53;
  int *v54;
  __n128 v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, uint64_t);
  void *v69;
  char **v70;
  id v71;
  id v72;
  void *v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  id v82;
  char *v83;
  char *v84;
  id v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  __n128 v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  double v107;
  uint64_t v108;
  char v109;
  void *v110;
  void *v111;
  id v112;
  NSString v113;
  id v114;
  uint64_t v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  CHWorkoutDetailHeartRateTableViewCell *v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  __n128 v121;
  const char *v122;
  CHWorkoutDetailHeartRateTableViewCell *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  NSString v131;
  id v132;
  int *v133;
  id v134;
  NSString v135;
  SEL v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  void *v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  SEL v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  int *v173;
  void *v174;
  _QWORD *v175;
  uint64_t v176;
  void (*v177)(char *, char *, uint64_t);
  int *v178;
  uint64_t v179;
  void (*v180)(char *, uint64_t);
  char *v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(char *, uint64_t);
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  _QWORD v201[3];
  char v202[8];
  CHWorkoutDetailHeartRateTableViewCell *aBlock;
  uint64_t v204;
  uint64_t (*v205)(uint64_t);
  void *v206;
  uint64_t (*v207)();
  uint64_t v208;
  char v209[8];

  v199 = a1;
  v5 = type metadata accessor for WorkoutChartViewModel(0);
  v190 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v190 + 64);
  __chkstk_darwin(v5);
  v191 = (uint64_t)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v173 - v8;
  v10 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v10);
  v12 = (char *)&v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v194 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v192 = (char *)&v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v193 = (char *)&v173 - v16;
  __chkstk_darwin(v17);
  v196 = (char *)&v173 - v18;
  __chkstk_darwin(v19);
  v195 = (char *)&v173 - v20;
  v198 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v23 = (char *)&v173 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = type metadata accessor for DispatchQoS(0);
  v24 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v26 = (char *)&v173 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v209, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (!Strong)
    return;
  v28 = Strong;
  if (a2)
  {
    v29 = swift_errorRetain(a2);
    v30 = static os_log_type_t.error.getter(v29);
    v31 = (void *)HKLogWorkouts;
    v32 = v30;
    if (!os_log_type_enabled(HKLogWorkouts, v30))
    {
      swift_release(v28);
      swift_errorRelease(a2);
      return;
    }
    swift_errorRetain(a2);
    swift_errorRetain(a2);
    v33 = v31;
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)swift_slowAlloc(32, -1);
    aBlock = v35;
    *(_DWORD *)v34 = 136315138;
    swift_getErrorValue(a2, v202, v201);
    v36 = Error.localizedDescription.getter(v201[1], v201[2]);
    v38 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
    v200 = sub_10003E8EC(v36, v37, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v34 + 4);
    swift_bridgeObjectRelease(v38, v39, v40, v41, v42, v43, v44, v45);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v33, v32, "Error getting heart rates: %s", v34, 0xCu);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);
    swift_errorRelease(a2);

    goto LABEL_27;
  }
  v46 = (CHWorkoutDetailHeartRateTableViewCell *)v199;
  if (!v199)
    goto LABEL_27;
  v189 = v13;
  if (!(v199 >> 62))
  {
    if (*(_QWORD *)((v199 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_27:
    swift_release(v28);
    return;
  }
  if ((v199 & 0x8000000000000000) == 0)
    v164 = v199 & 0xFFFFFFFFFFFFFF8;
  else
    v164 = v199;
  swift_bridgeObjectRetain(v199);
  v165 = _CocoaArrayWrapper.endIndex.getter(v164);
  swift_bridgeObjectRelease(v46, v166, v167, v168, v169, v170, v171, v172);
  if (!v165)
    goto LABEL_27;
LABEL_8:
  v181 = v9;
  v47 = *(void **)(v28 + 64);
  v49 = *(_QWORD *)(v28 + 16);
  v48 = *(_QWORD *)(v28 + 24);
  v50 = objc_msgSend(v47, "hasAverageCyclingPowerForWorkout:workoutActivity:", v49, v48);
  v188 = v23;
  if (v50)
    objc_msgSend(v47, "averageCyclingPowerForWorkout:workoutActivity:", v49, v48);
  else
    v51 = sub_1004D35E0(v199);
  v52 = v51;
  v53 = objc_msgSend(v47, "formattedPowerStringFor:");
  v179 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
  v178 = v54;

  v184 = sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v186 = (void (*)(char *, uint64_t))static OS_dispatch_queue.main.getter(v55);
  v56 = swift_allocObject(&unk_10079F5E0, 32, 7);
  *(_QWORD *)(v56 + 16) = v28;
  *(double *)(v56 + 24) = v52;
  v207 = sub_100440680;
  v208 = v56;
  aBlock = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
  v204 = 1107296256;
  v205 = sub_10002D0F8;
  v206 = &unk_10079F5F8;
  v57 = _Block_copy(&aBlock);
  v58 = v208;
  swift_retain(v28);
  swift_release(v58);
  static DispatchQoS.unspecified.getter(v59);
  aBlock = &_swiftEmptyArrayStorage;
  v60 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v61 = sub_100047110(&qword_100828C80);
  v62 = sub_10002FB08();
  v185 = v61;
  v183 = v62;
  v63 = v198;
  v187 = v60;
  v64 = v60;
  v65 = v188;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v61, v62, v198, v64);
  v66 = v186;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v26, v65, v57);
  _Block_release(v57);

  v67 = *(void (**)(char *, uint64_t))(v21 + 8);
  v67(v65, v63);
  v68 = *(void (**)(char *, uint64_t))(v24 + 8);
  v68(v26, v197);
  v69 = *(void **)(v28 + 24);
  v70 = &selRef_celebrationMovieURLForAchievementIdentifer_;
  v186 = v67;
  if (!v69)
    goto LABEL_18;
  v71 = v69;
  v72 = objc_msgSend(v71, "endDate");
  if (!v72)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v194 + 56))(v12, 1, 1, v189);
    goto LABEL_17;
  }
  v73 = v72;
  v74 = v68;
  v75 = v193;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v72);

  v76 = v194;
  v77 = *(void (**)(char *, char *, uint64_t))(v194 + 32);
  v78 = v75;
  v79 = v189;
  v77(v12, v78, v189);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v12, 0, 1, v79);
  v80 = v79;
  v68 = v74;
  v70 = &selRef_celebrationMovieURLForAchievementIdentifer_;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v12, 1, v80) == 1)
  {
LABEL_17:

    sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_100828370);
LABEL_18:
    v85 = objc_msgSend(*(id *)(v28 + 16), "startDate");
    v84 = v195;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v85);

    v71 = objc_msgSend(*(id *)(v28 + 16), v70[293]);
    v81 = v196;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v71);
    goto LABEL_19;
  }
  v81 = v196;
  v77(v196, v12, v189);
  v82 = objc_msgSend(v71, "startDate");
  v83 = v195;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v82);

  v84 = v83;
LABEL_19:

  v86 = *(void (**)(char *, char *, uint64_t))(v194 + 16);
  v87 = (uint64_t)v193;
  v88 = v189;
  v86(v193, v84, v189);
  v89 = v192;
  v177 = v86;
  v86(v192, v81, v88);
  v90 = type metadata accessor for WorkoutChartProperties(0);
  swift_allocObject(v90, *(unsigned int *)(v90 + 48), *(unsigned __int16 *)(v90 + 52));
  v91 = sub_10026A764(v87, v89, 0, 1, 0, 1, 1, 10.0, 90.0);
  v92 = v199;
  v199 = v91;
  sub_10044068C(v92, v91);
  v176 = v93;
  v95 = *(void **)(v28 + 16);
  v94 = *(void **)(v28 + 24);
  v96 = type metadata accessor for WorkoutPowerInfo(0);
  swift_allocObject(v96, *(unsigned int *)(v96 + 48), *(unsigned __int16 *)(v96 + 52));
  v97 = v94;
  v98 = sub_10056B5C8(v95, v94);
  v100 = (void *)static OS_dispatch_queue.main.getter(v99);
  v101 = swift_allocObject(&unk_10079F630, 32, 7);
  *(_QWORD *)(v101 + 16) = v28;
  *(_QWORD *)(v101 + 24) = v98;
  v207 = sub_1004412A0;
  v208 = v101;
  aBlock = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
  v204 = 1107296256;
  v205 = sub_10002D0F8;
  v206 = &unk_10079F648;
  v102 = _Block_copy(&aBlock);
  v103 = v208;
  swift_retain(v28);
  swift_retain(v98);
  swift_release(v103);
  static DispatchQoS.unspecified.getter(v104);
  aBlock = &_swiftEmptyArrayStorage;
  v105 = v188;
  v106 = v198;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v185, v183, v198, v187);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v26, v105, v102);
  _Block_release(v102);

  v186(v105, v106);
  v68(v26, v197);
  v182 = v98;
  v107 = COERCE_DOUBLE(sub_10056B47C());
  v108 = 0;
  v180 = v68;
  if ((v109 & 1) == 0 && v107 > 0.0)
    v108 = sub_10029355C();
  v110 = (void *)v108;
  v175 = sub_1001B9140(v199);
  v111 = (void *)objc_opt_self(NSBundle);
  v112 = objc_msgSend(v111, "mainBundle");
  v113 = String._bridgeToObjectiveC()();
  v114 = objc_msgSend(v112, "localizedStringForKey:value:table:", v113, 0, 0);

  v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
  v117 = v116;

  v118 = sub_100047110((uint64_t *)&unk_100827460);
  v119 = swift_allocObject(v118, 72, 7);
  *(_OWORD *)(v119 + 16) = xmmword_100622F90;
  *(_QWORD *)(v119 + 56) = &type metadata for String;
  *(_QWORD *)(v119 + 64) = sub_100038CF8();
  v120 = v178;
  *(_QWORD *)(v119 + 32) = v179;
  *(_QWORD *)(v119 + 40) = v120;
  v179 = String.init(format:_:)(v115, v117, v119, v121);
  v123 = (CHWorkoutDetailHeartRateTableViewCell *)v122;
  swift_bridgeObjectRelease(v117, v122, v124, v125, v126, v127, v128, v129);
  v130 = objc_msgSend(v111, "mainBundle");
  v131 = String._bridgeToObjectiveC()();
  v132 = objc_msgSend(v130, "localizedStringForKey:value:table:", v131, 0, 0);

  v178 = (int *)static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
  v173 = v133;

  v134 = objc_allocWithZone((Class)NSAttributedString);
  v135 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v123, v136, v137, v138, v139, v140, v141, v142);
  v143 = objc_msgSend(v134, "initWithString:", v135);

  v144 = (uint64_t)v193;
  v145 = v189;
  v146 = v177;
  v177(v193, v195, v189);
  v147 = (uint64_t)v192;
  v146(v192, v196, v145);
  v148 = *(_QWORD *)(v28 + 56);
  v174 = v110;
  swift_retain(v110);
  swift_retain(v148);
  v149 = (uint64_t)v181;
  sub_1002A23DC(4, v178, v173, v143, v176, 1, v144, v147, (uint64_t)v181, v175, v110, v148);
  v193 = (char *)static OS_dispatch_queue.main.getter(v150);
  v151 = v191;
  sub_10004F8C8(v149, v191, type metadata accessor for WorkoutChartViewModel);
  v152 = *(unsigned __int8 *)(v190 + 80);
  v153 = (v152 + 24) & ~v152;
  v154 = (v6 + v153 + 7) & 0xFFFFFFFFFFFFFFF8;
  v155 = swift_allocObject(&unk_10079F680, v154 + 8, v152 | 7);
  *(_QWORD *)(v155 + 16) = v28;
  sub_100047C88(v151, v155 + v153, type metadata accessor for WorkoutChartViewModel);
  v156 = v199;
  *(_QWORD *)(v155 + v154) = v199;
  v207 = sub_1004413EC;
  v208 = v155;
  aBlock = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
  v204 = 1107296256;
  v205 = sub_10002D0F8;
  v206 = &unk_10079F698;
  v157 = _Block_copy(&aBlock);
  v158 = v208;
  swift_retain(v28);
  swift_retain(v156);
  swift_release(v158);
  static DispatchQoS.unspecified.getter(v159);
  aBlock = &_swiftEmptyArrayStorage;
  v160 = v188;
  v161 = v198;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v185, v183, v198, v187);
  v162 = v193;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v26, v160, v157);
  _Block_release(v157);
  swift_release(v28);
  swift_release(v182);
  swift_release(v174);
  swift_release(v156);

  v186(v160, v161);
  v180(v26, v197);
  sub_100011F54(v149, type metadata accessor for WorkoutChartViewModel);
  v163 = *(void (**)(char *, uint64_t))(v194 + 8);
  v163(v196, v145);
  v163(v195, v145);
}

uint64_t sub_10043FEE8(uint64_t a1)
{
  id v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v6;

  v2 = objc_msgSend(*(id *)(a1 + 64), "formattedAveragePowerStringFor:context:", CFSTR("WorkoutDetailDisplayContext"));
  KeyPath = swift_getKeyPath(&unk_10063CCC8);
  v4 = swift_getKeyPath(&unk_10063CCF0);
  v6 = v2;
  swift_retain(a1);
  return static Published.subscript.setter(&v6, a1, KeyPath, v4);
}

uint64_t sub_10043FF7C(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_10063CC38);
  v5 = swift_getKeyPath(&unk_10063CC60);
  v7 = a2;
  swift_retain(a2);
  swift_retain(a1);
  return static Published.subscript.setter(&v7, a1, KeyPath, v5);
}

uint64_t sub_10043FFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - v10;
  sub_10004F8C8(a2, (uint64_t)&v24 - v10, type metadata accessor for WorkoutChartViewModel);
  v12 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  KeyPath = swift_getKeyPath(&unk_10063CBA8);
  v14 = swift_getKeyPath(&unk_10063CBD0);
  sub_1001048E0((uint64_t)v11, (uint64_t)v8);
  swift_retain(a1);
  static Published.subscript.setter(v8, a1, KeyPath, v14);
  sub_10001BE90((uint64_t)v11, &qword_1008202F0);
  v15 = swift_getKeyPath(&unk_10063CBF0);
  v16 = swift_getKeyPath(&unk_10063CC18);
  v25 = a3;
  swift_retain(a1);
  swift_retain(a3);
  static Published.subscript.setter(&v25, a1, v15, v16);
  result = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (result)
  {
    v18 = result;
    v19 = *(_QWORD *)(a1 + 40);
    v20 = swift_getKeyPath(&unk_10063CBF0);
    v21 = swift_getKeyPath(&unk_10063CC18);
    static Published.subscript.getter(&v25, a1, v20, v21);
    swift_release(v20);
    swift_release(v21);
    v22 = v25;
    if (v25)
    {
      v23 = v25 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate;
      *(_QWORD *)(v23 + 8) = v19;
      swift_unknownObjectWeakAssign(v23, v18);
      swift_release(v22);
    }
    return swift_unknownObjectRelease(v18);
  }
  return result;
}

uint64_t sub_1004401F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__averagePower;
  v2 = sub_100047110(&qword_100820578);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__powerInfo;
  v4 = sub_100047110(&qword_100833B20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_10044025C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1001B8F04();
  v1 = v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__averagePower;
  v2 = sub_100047110(&qword_100820578);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__powerInfo;
  v4 = sub_100047110(&qword_100833B20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004402E4()
{
  return type metadata accessor for WorkoutDetailPowerDataStore(0);
}

uint64_t type metadata accessor for WorkoutDetailPowerDataStore(uint64_t a1)
{
  uint64_t result;

  result = qword_100833920;
  if (!qword_100833920)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailPowerDataStore);
  return result;
}

void sub_100440328(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1001044C0(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004403B0(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 288);
    }
  }
}

void sub_1004403B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100833930)
  {
    v2 = sub_100007050((uint64_t *)&unk_100833938);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100833930);
  }
}

uint64_t sub_100440408@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutDetailPowerDataStore(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100440444()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100440468()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100440494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_100833B14);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000DA0E4;
  v3[5] = v2;
  return swift_task_switch(sub_10043E7D0, 0, 0);
}

_QWORD *sub_1004404F4(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v18;
  _QWORD v19[3];

  v9 = sub_100047110(&qword_100833B20);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v4 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__powerInfo;
  v19[0] = 0;
  swift_retain(v4);
  v14 = sub_100047110((uint64_t *)&unk_100833938);
  Published.init(initialValue:)(v19, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  v15 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  swift_beginAccess(v4 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__averagePower, v19, 33, 0);
  v18 = v15;
  v16 = sub_10001E724(0, (unint64_t *)&qword_1008202D0, NSAttributedString_ptr);
  Published.init(initialValue:)(&v18, v16);
  swift_endAccess(v19);
  swift_release(v4);
  return sub_1001B9B58(a1, a2, a3, a4);
}

void sub_100440654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10043F0E0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10044065C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100440680()
{
  uint64_t v0;

  return sub_10043FEE8(*(_QWORD *)(v0 + 16));
}

void sub_10044068C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  const char *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  id v59;
  char *v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  double v67;
  char *v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  char *v70;
  id v71;
  double v72;
  double v73;
  unint64_t v74;
  char v75;
  id v76;
  unint64_t v77;
  SEL v78;
  char v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  Class isa;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  __n128 v100;
  unint64_t v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void (*v113)(char *, char *, CHWorkoutDetailHeartRateTableViewCell *);
  id v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  CHWorkoutDetailHeartRateTableViewCell *v122;
  unint64_t v123;
  unint64_t v124;
  CHWorkoutDetailHeartRateTableViewCell *v125;
  SEL v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  uint64_t v136;
  CHWorkoutDetailHeartRateTableViewCell *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  id v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  CHWorkoutDetailHeartRateTableViewCell *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  CHWorkoutDetailHeartRateTableViewCell *v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;
  uint64_t v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  char v160;

  v150 = a2;
  v3 = type metadata accessor for NSIndexSetIterator(0);
  v148 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)&v134 - v7;
  v9 = type metadata accessor for WorkoutChartDataElement(0);
  v146 = *(_QWORD *)(v9 - 8);
  v147 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v155 = (char *)&v134 - v13;
  v14 = sub_100047110(&qword_100820580);
  __chkstk_darwin(v14);
  v16 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v134 - v18;
  v20 = (CHWorkoutDetailHeartRateTableViewCell *)type metadata accessor for Date(0);
  v158 = *(_QWORD *)v20[-1].cellInset;
  __chkstk_darwin(v20);
  v154 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v153 = (uint64_t)&v134 - v23;
  __chkstk_darwin(v24);
  v144 = (char *)&v134 - v25;
  __chkstk_darwin(v26);
  v143 = (char *)&v134 - v27;
  __chkstk_darwin(v28);
  v142 = (char *)&v134 - v29;
  if ((unint64_t)a1 >> 62)
    goto LABEL_84;
  v30 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (1)
  {
    v157 = v20;
    v145 = v11;
    v151 = v16;
    v149 = v19;
    if (!v30)
    {
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v31, v32, v33, v34, v35, v36, v37);
      v95 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
LABEL_32:
      isa = v95[2].super.super.super.super.isa;
      v143 = (char *)&v95[2];
      v97 = 1 << LOBYTE(v95[1].super.super.super.super.isa);
      v98 = -1;
      if (v97 < 64)
        v98 = ~(-1 << v97);
      v99 = v98 & (unint64_t)isa;
      v144 = (char *)((unint64_t)(v97 + 63) >> 6);
      v142 = v144 - 1;
      v152 = v95;
      v100 = swift_bridgeObjectRetain(v95);
      v150 = 0;
      v156 = &_swiftEmptyArrayStorage;
      if (v99)
      {
LABEL_35:
        v153 = (v99 - 1) & v99;
        v101 = __clz(__rbit64(v99)) | (v150 << 6);
      }
      else
      {
        while (1)
        {
          v107 = v150 + 1;
          if (__OFADD__(v150, 1))
            goto LABEL_80;
          if (v107 < (uint64_t)v144)
          {
            v108 = *(_QWORD *)&v143[8 * v107];
            if (v108)
              goto LABEL_40;
            v109 = v150 + 2;
            ++v150;
            if (v107 + 1 < (uint64_t)v144)
            {
              v108 = *(_QWORD *)&v143[8 * v109];
              if (v108)
                goto LABEL_43;
              v150 = v107 + 1;
              if (v107 + 2 < (uint64_t)v144)
              {
                v108 = *(_QWORD *)&v143[8 * v107 + 16];
                if (v108)
                {
                  v107 += 2;
                  goto LABEL_40;
                }
                v109 = v107 + 3;
                v150 = v107 + 2;
                if (v107 + 3 < (uint64_t)v144)
                  break;
              }
            }
          }
LABEL_54:
          v110 = sub_100047110(&qword_100820588);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v16, 1, 1, v110);
          v153 = 0;
LABEL_55:
          sub_100045AD4((uint64_t)v16, (uint64_t)v19, &qword_100820580);
          v111 = sub_100047110(&qword_100820588);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v19, 1, v111) == 1)
          {
            v125 = v152;
            swift_release(v152);
            swift_bridgeObjectRelease(v125, v126, v127, v128, v129, v130, v131, v132);
            return;
          }
          v112 = *(void **)&v19[*(int *)(v111 + 48)];
          v113 = *(void (**)(char *, char *, CHWorkoutDetailHeartRateTableViewCell *))(v158 + 32);
          v113(v154, v19, v20);
          v114 = v112;
          NSIndexSet.makeIterator()();

          v115 = sub_1000083D8(&qword_100820590, (uint64_t (*)(uint64_t))&type metadata accessor for NSIndexSetIterator, (uint64_t)&protocol conformance descriptor for NSIndexSetIterator);
          dispatch thunk of IteratorProtocol.next()(&v159, v3, v115);
          if ((v160 & 1) != 0)
          {
            v116 = *(void (**)(char *, uint64_t))(v148 + 8);
            v116(v8, v3);
            v117 = 0;
          }
          else
          {
            v117 = (uint64_t)v159;
            dispatch thunk of IteratorProtocol.next()(&v159, v3, v115);
            if ((v160 & 1) == 0)
            {
              do
              {
                if ((uint64_t)v159 < v117)
                  v117 = (uint64_t)v159;
                dispatch thunk of IteratorProtocol.next()(&v159, v3, v115);
              }
              while (v160 != 1);
            }
            v116 = *(void (**)(char *, uint64_t))(v148 + 8);
            v116(v8, v3);
          }
          v118 = v114;
          NSIndexSet.makeIterator()();

          dispatch thunk of IteratorProtocol.next()(&v159, v3, v115);
          if ((v160 & 1) != 0)
          {
            v116((char *)v5, v3);
            v119 = 0;
          }
          else
          {
            v119 = (uint64_t)v159;
            dispatch thunk of IteratorProtocol.next()(&v159, v3, v115);
            if ((v160 & 1) == 0)
            {
              do
              {
                if (v119 <= (uint64_t)v159)
                  v119 = (uint64_t)v159;
                dispatch thunk of IteratorProtocol.next()(&v159, v3, v115);
              }
              while (v160 != 1);
            }
            v116((char *)v5, v3);
          }
          v120 = (uint64_t)v155;
          v20 = v157;
          v113(v155, v154, v157);
          v121 = v147;
          *(double *)(v120 + *(int *)(v147 + 24)) = (double)v117;
          *(double *)(v120 + *(int *)(v121 + 28)) = (double)v119;
          *(double *)(v120 + *(int *)(v121 + 20)) = ((double)v117 + (double)v119) * 0.5;
          v11 = v145;
          sub_10004F8C8(v120, (uint64_t)v145, type metadata accessor for WorkoutChartDataElement);
          v122 = v156;
          if ((swift_isUniquelyReferenced_nonNull_native(v156) & 1) == 0)
            v122 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD24(0, *(_QWORD *)v122->cellPadding + 1, 1, (unint64_t)v122);
          v16 = v151;
          a1 = *(_QWORD *)v122->cellPadding;
          v123 = *(_QWORD *)v122->cellInset;
          if (a1 >= v123 >> 1)
            v122 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD24(v123 > 1, a1 + 1, 1, (unint64_t)v122);
          *(_QWORD *)v122->cellPadding = a1 + 1;
          v124 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
          v156 = v122;
          sub_100047C88((uint64_t)v11, (uint64_t)v122 + v124 + *(_QWORD *)(v146 + 72) * a1, type metadata accessor for WorkoutChartDataElement);

          sub_100011F54((uint64_t)v155, type metadata accessor for WorkoutChartDataElement);
          v19 = v149;
          v99 = v153;
          if (v153)
            goto LABEL_35;
        }
        v108 = *(_QWORD *)&v143[8 * v109];
        if (!v108)
        {
          while (1)
          {
            v107 = v109 + 1;
            if (__OFADD__(v109, 1))
              goto LABEL_89;
            if (v107 >= (uint64_t)v144)
            {
              v150 = (uint64_t)v142;
              goto LABEL_54;
            }
            v108 = *(_QWORD *)&v143[8 * v107];
            ++v109;
            if (v108)
              goto LABEL_40;
          }
        }
LABEL_43:
        v107 = v109;
LABEL_40:
        v153 = (v108 - 1) & v108;
        v101 = __clz(__rbit64(v108)) + (v107 << 6);
        v150 = v107;
      }
      v102 = v152;
      (*(void (**)(char *, unint64_t, CHWorkoutDetailHeartRateTableViewCell *, __n128))(v158 + 16))(v16, *(_QWORD *)v152[1].cellPadding + *(_QWORD *)(v158 + 72) * v101, v20, v100);
      v103 = *(_QWORD *)v102[1].cellInset;
      v104 = sub_100047110(&qword_100820588);
      v105 = *(void **)(v103 + 8 * v101);
      *(_QWORD *)&v16[*(int *)(v104 + 48)] = v105;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v16, 0, 1, v104);
      v106 = v105;
      goto LABEL_55;
    }
    v141 = (id)objc_opt_self(HKUnit);
    if (v30 < 1)
      break;
    v38 = 0;
    v140 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
    v152 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
    v139 = a1 & 0xC000000000000001;
    v138 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration;
    v137 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
    v136 = v30;
    v135 = v5;
    while (1)
    {
      if (v139)
        v58 = (CHWorkoutDetailHeartRateTableViewCell *)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, a1);
      else
        v58 = (CHWorkoutDetailHeartRateTableViewCell *)*(id *)(a1 + 8 * v38 + 32);
      v5 = v58;
      v20 = v152;
      v59 = -[CHWorkoutDetailHeartRateTableViewCell startDate](v58, "startDate");
      v60 = v143;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v59);

      KeyPath = swift_getKeyPath(&unk_10063CC80);
      v62 = swift_getKeyPath(&unk_10063CCA8);
      v16 = v144;
      v63 = v150;
      static Published.subscript.getter(v144, v150, KeyPath, v62);
      swift_release(KeyPath);
      swift_release(v62);
      v64 = *(double *)(v63 + v140);
      v65 = ceil(*(double *)(v63 + v138) / v64) + -1.0;
      v67 = floor(Date.timeIntervalSince(_:)(v16) / v64);
      if (v65 < v67)
        v67 = v65;
      v68 = v142;
      Date.addingTimeInterval(_:)(v66, v64 * 0.5 + v64 * v67);
      v69 = v157;
      a1 = *(_QWORD *)(v158 + 8);
      ((void (*)(char *, CHWorkoutDetailHeartRateTableViewCell *))a1)(v16, v157);
      v70 = v60;
      v11 = v68;
      ((void (*)(char *, CHWorkoutDetailHeartRateTableViewCell *))a1)(v70, v69);
      v156 = v5;
      v71 = -[CHWorkoutDetailHeartRateTableViewCell quantity](v5, "quantity");
      v19 = (char *)objc_msgSend(v141, "wattUnit");
      objc_msgSend(v71, "doubleValueForUnit:", v19);
      v73 = v72;

      if (*(_QWORD *)v20->cellPadding)
      {
        v74 = sub_10043939C((uint64_t)v11);
        if ((v75 & 1) != 0)
        {
          if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) == 0)
            goto LABEL_81;
          if (v73 <= -9.22337204e18)
            goto LABEL_82;
          if (v73 >= 9.22337204e18)
            goto LABEL_83;
          objc_msgSend(*(id *)(*(_QWORD *)v20[1].cellInset + 8 * v74), "addIndex:", (uint64_t)v73);
          v20 = v157;
          goto LABEL_7;
        }
      }
      (*(void (**)(uint64_t, char *, CHWorkoutDetailHeartRateTableViewCell *))(v158 + 16))(v153, v11, v157);
      if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) == 0)
        break;
      if (v73 <= -9.22337204e18)
        goto LABEL_78;
      if (v73 >= 9.22337204e18)
        goto LABEL_79;
      v76 = objc_msgSend(objc_allocWithZone((Class)NSMutableIndexSet), "initWithIndex:", (uint64_t)v73);
      if (!v76)
      {
        swift_bridgeObjectRetain(v20);
        v77 = sub_10043939C(v153);
        v79 = (char)v78;
        swift_bridgeObjectRelease(v20, v78, v80, v81, v82, v83, v84, v85);
        v16 = v151;
        v5 = v135;
        if ((v79 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
          v159 = v20;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_100400E50();
            v20 = v159;
          }
          v87 = *(_QWORD *)v20[1].cellPadding;
          v20 = v157;
          ((void (*)(unint64_t, CHWorkoutDetailHeartRateTableViewCell *))a1)(v87 + *(_QWORD *)(v158 + 72) * v77, v157);
          v50 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v159[1].cellInset + 8 * v77);
          v152 = v159;
          sub_1004D1788(v77, (uint64_t)v159);
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v88, v89, v90, v91, v92, v93, v94);
        }
        else
        {
          v50 = 0;
          v20 = v157;
        }
        ((void (*)(uint64_t, CHWorkoutDetailHeartRateTableViewCell *))a1)(v153, v20);

        goto LABEL_8;
      }
      v39 = (uint64_t)v76;
      v40 = swift_isUniquelyReferenced_nonNull_native(v20);
      v159 = v20;
      v41 = v39;
      v42 = v153;
      sub_1003FE848(v41, v153, v40);
      v152 = v159;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v43, v44, v45, v46, v47, v48, v49);
      v20 = v157;
      ((void (*)(uint64_t, CHWorkoutDetailHeartRateTableViewCell *))a1)(v42, v157);
LABEL_7:
      v16 = v151;
      v50 = v156;
      v5 = v135;
LABEL_8:
      ++v38;

      ((void (*)(char *, CHWorkoutDetailHeartRateTableViewCell *))a1)(v11, v20);
      a1 = (uint64_t)v137;
      if (v136 == v38)
      {
        swift_bridgeObjectRelease(v137, v51, v52, v53, v54, v55, v56, v57);
        v19 = v149;
        v95 = v152;
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    if (a1 < 0)
      v133 = a1;
    else
      v133 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v30 = _CocoaArrayWrapper.endIndex.getter(v133);
  }
  __break(1u);
LABEL_89:
  __break(1u);
}

uint64_t sub_100441274()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004412A0()
{
  uint64_t v0;

  return sub_10043FF7C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004412A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;

  v1 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[6] + 8), v9, v10, v11, v12, v13, v14, v15);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[8]), v16, v17, v18, v19, v20, v21, v22);
  v23 = v7 + v1[10];
  v24 = type metadata accessor for Date(0);
  v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
  v25(v23, v24);
  v25(v7 + v1[11], v24);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[12]), v26, v27, v28, v29, v30, v31, v32);
  swift_release(*(_QWORD *)(v7 + v1[13]));
  swift_release(*(_QWORD *)(v7 + v1[14]));

  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1004413EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for WorkoutChartViewModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10043FFF4(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t *sub_100441468(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = sub_100047110(&qword_100824B88);
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    v13 = *(int *)(v6 + 24);
    v14 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v14;
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
  }
  swift_retain(v14);
  return a1;
}

uint64_t type metadata accessor for SleepingSampleBaselineBand.Configuration(uint64_t a1)
{
  return sub_100024334(a1, (uint64_t *)&unk_100833C10, (uint64_t)&nominal type descriptor for SleepingSampleBaselineBand.Configuration);
}

double sub_100441560(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  double result;

  v2 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = sub_100047110(&qword_100824B88);
  v5(v3 + *(int *)(v6 + 36), v4);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(v2 + 24))).n128_u64[0];
  return result;
}

_OWORD *sub_1004415E4(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(v6, v7, v8);
  v10 = sub_100047110(&qword_100824B88);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  v11 = v4[6];
  v12 = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v12;
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  swift_retain(v12);
  return a1;
}

_QWORD *sub_1004416A0(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24);
  v9(v6, v7, v8);
  v10 = sub_100047110(&qword_100824B88);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  v11 = v4[6];
  v12 = *(_QWORD *)((char *)a2 + v11);
  v13 = *(_QWORD *)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = v12;
  swift_retain(v12);
  swift_release(v13);
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  return a1;
}

_OWORD *sub_100441770(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = sub_100047110(&qword_100824B88);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  return a1;
}

_OWORD *sub_100441828(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40);
  v9(v6, v7, v8);
  v10 = sub_100047110(&qword_100824B88);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  v11 = v4[6];
  v12 = *(_QWORD *)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_release(v12);
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  return a1;
}

uint64_t sub_1004418E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004418F4);
}

uint64_t sub_1004418F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100441930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044193C);
}

uint64_t sub_10044193C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SleepingSampleBaselineBand(uint64_t a1)
{
  return sub_100024334(a1, qword_100833B80, (uint64_t)&nominal type descriptor for SleepingSampleBaselineBand);
}

uint64_t sub_100441990(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for SleepingSampleBaselineBand.Configuration(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1004419F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = sub_100047110(&qword_100824B88);
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = v15;
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
  }
  swift_retain(v15);
  return v4;
}

double sub_100441AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  double result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = sub_100047110(&qword_100824B88);
  v6(v4 + *(int *)(v7 + 36), v5);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

_OWORD *sub_100441B4C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = sub_100047110(&qword_100824B88);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v14;
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_retain(v14);
  return a1;
}

_QWORD *sub_100441BFC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = sub_100047110(&qword_100824B88);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = *(_QWORD *)((char *)a2 + v12);
  v14 = *(_QWORD *)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_100441CC4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = sub_100047110(&qword_100824B88);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

_OWORD *sub_100441D70(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = sub_100047110(&qword_100824B88);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = *(_QWORD *)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_release(v13);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_100441E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100441E34);
}

uint64_t sub_100441E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_100824B88);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100441EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100441EC4);
}

uint64_t sub_100441EC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_100824B88);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_100441F44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10063CD50;
  sub_100441FD4(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_100441FD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_100833C20)
  {
    v2 = type metadata accessor for Date(255);
    v3 = sub_1000083D8((unint64_t *)&qword_1008274E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v4 = type metadata accessor for ClosedRange(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_100833C20);
  }
}

void sub_10044204C(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 *v2;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::UInt64 v12;

  v2 = v1;
  v4 = v1[1];
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = *v1;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  v7 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v8 = type metadata accessor for Date(0);
  v9 = sub_1000083D8((unint64_t *)&qword_1008214E8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v8, v9);
  sub_100047110(&qword_100824B88);
  dispatch thunk of Hashable.hash(into:)(a1, v8, v9);
  v10 = *(Swift::UInt64 *)((char *)v1 + *(int *)(v7 + 24));
  v11 = swift_retain(*(Swift::UInt64 *)((char *)v2 + *(int *)(v7 + 24)));
  Color.hash(into:)(a1, v10, v11);
  swift_release(v10);
  if ((*(Swift::UInt64 *)((char *)v2 + *(int *)(v7 + 28)) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v12 = *(Swift::UInt64 *)((char *)v2 + *(int *)(v7 + 28));
  else
    v12 = 0;
  Hasher._combine(_:)(v12);
}

Swift::Int sub_10044214C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10044204C((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10044218C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10044204C((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1004421C8()
{
  return sub_1000083D8(&qword_100833C58, type metadata accessor for SleepingSampleBaselineBand.Configuration, (uint64_t)&unk_10063CD68);
}

uint64_t sub_1004421F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B73D8, 1);
}

uint64_t sub_100442204@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  char v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  char *v26;
  uint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  char v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  uint64_t v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  char v68;
  char *v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  _QWORD *v89;
  char v90;
  char *v91;
  SEL v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  SEL v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  double v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t OpaqueTypeConformance2;
  uint64_t v115;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[2];
  uint64_t v132;

  v130 = a2;
  v3 = type metadata accessor for RoundedCornerStyle(0);
  v128 = *(_QWORD *)(v3 - 8);
  v129 = v3;
  __chkstk_darwin(v3);
  v127 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100824DC0);
  __chkstk_darwin(v5);
  v123 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v120 = (char *)&v117 - v8;
  v9 = sub_100047110(&qword_100824DC8);
  __chkstk_darwin(v9);
  v117 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v118 = (char *)&v117 - v13;
  v122 = type metadata accessor for RectangleMark(0, v12);
  v124 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100833C70);
  v17 = *(_QWORD *)(v16 - 8);
  v125 = v16;
  v126 = v17;
  __chkstk_darwin(v16);
  v121 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x656E696C65736162, 0xEE00747261747320);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v119 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  v26 = (char *)a1 + *(int *)(v119 + 20);
  v27 = type metadata accessor for Date(0);
  static PlottableValue.value(_:_:)(v19, v21, v23 & 1, v25, v26, v27, &protocol witness table for Date);
  swift_bridgeObjectRelease(v25, v28, v29, v30, v31, v32, v33, v34);
  swift_bridgeObjectRelease(v21, v35, v36, v37, v38, v39, v40, v41);
  v42 = LocalizedStringKey.init(stringLiteral:)(0x656E696C65736162, 0xEC000000646E6520);
  v44 = v43;
  LOBYTE(v19) = v45;
  v47 = v46;
  v48 = sub_100047110(&qword_100824B88);
  static PlottableValue.value(_:_:)(v42, v44, v19 & 1, v47, &v26[*(int *)(v48 + 36)], v27, &protocol witness table for Date);
  swift_bridgeObjectRelease(v47, v49, v50, v51, v52, v53, v54, v55);
  swift_bridgeObjectRelease(v44, v56, v57, v58, v59, v60, v61, v62);
  v63 = LocalizedStringKey.init(stringLiteral:)(0x6162207265776F6CLL, 0xEE00656E696C6573);
  v65 = v64;
  v67 = v66;
  v131[0] = *a1;
  v69 = v120;
  static PlottableValue.value(_:_:)(v63, v64, v68 & 1, v66, v131, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v67, v70, v71, v72, v73, v74, v75, v76);
  swift_bridgeObjectRelease(v65, v77, v78, v79, v80, v81, v82, v83);
  v84 = LocalizedStringKey.init(stringLiteral:)(0x6162207265707075, 0xEE00656E696C6573);
  v86 = v85;
  v88 = v87;
  v89 = a1;
  v131[0] = a1[1];
  v91 = v123;
  static PlottableValue.value(_:_:)(v84, v85, v90 & 1, v87, v131, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v88, v92, v93, v94, v95, v96, v97, v98);
  swift_bridgeObjectRelease(v86, v99, v100, v101, v102, v103, v104, v105);
  RectangleMark.init<A, B>(xStart:xEnd:yStart:yEnd:)(v118, v117, v69, v91, v27, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double);
  v106 = v119;
  v107 = *(double *)((char *)v89 + *(int *)(v119 + 28));
  v109 = v127;
  v108 = v128;
  v110 = v129;
  (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v127, enum case for RoundedCornerStyle.continuous(_:), v129);
  v111 = v121;
  v112 = v122;
  ChartContent.cornerRadius(_:style:)(v109, v122, &protocol witness table for RectangleMark, v107);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v110);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v15, v112);
  v113 = *(_QWORD *)((char *)v89 + *(int *)(v106 + 24));
  v131[1] = &protocol witness table for RectangleMark;
  v132 = v113;
  v131[0] = v112;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v131, &opaque type descriptor for <<opaque return type of ChartContent.cornerRadius(_:style:)>>, 1);
  v115 = v125;
  ChartContent.foregroundStyle<A>(_:)(&v132, v125, &type metadata for Color, OpaqueTypeConformance2, &protocol witness table for Color);
  return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v111, v115);
}

uint64_t sub_1004426A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  unint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v1 = sub_100047110(&qword_100833C60);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v0;
  v5 = sub_100047110(&qword_100833C68);
  v6 = sub_100007050(&qword_100833C70);
  v14 = type metadata accessor for RectangleMark(255, v7);
  v15 = &protocol witness table for RectangleMark;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v14, &opaque type descriptor for <<opaque return type of ChartContent.cornerRadius(_:style:)>>, 1);
  v14 = v6;
  v15 = &type metadata for Color;
  v16 = OpaqueTypeConformance2;
  v17 = &protocol witness table for Color;
  v9 = swift_getOpaqueTypeConformance2(&v14, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  Plot.init(content:)(sub_1004427D8, v12, v5, v9);
  v10 = sub_1004427E0();
  ChartContent.compositingLayer()(v1, v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1004427D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100442204(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_1004427E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833C78;
  if (!qword_100833C78)
  {
    v1 = sub_100007050(&qword_100833C60);
    result = swift_getWitnessTable(&protocol conformance descriptor for Plot<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100833C78);
  }
  return result;
}

BOOL sub_10044282C(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_100047110(&qword_100824B88);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    v21 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
    v11 = *(int *)(v21 + 20);
    v12 = (uint64_t)a1 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = type metadata accessor for Date(0);
    v15 = sub_1000083D8((unint64_t *)&qword_100824D50, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v16 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v13, v14, v15);
    sub_1001B0848(v12, (uint64_t)v9);
    sub_1001B0848(v13, (uint64_t)v6);
    if ((v16 & 1) != 0)
    {
      v17 = v21;
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(&v9[*(int *)(v4 + 36)], &v6[*(int *)(v4 + 36)], v14, v15);
      sub_1004429CC((uint64_t)v6);
      sub_1004429CC((uint64_t)v9);
      if ((v18 & 1) != 0
        && (static Color.== infix(_:_:)(*(_QWORD *)((char *)a1 + *(int *)(v17 + 24)), *(_QWORD *)((char *)a2 + *(int *)(v17 + 24))) & 1) != 0)
      {
        return *(double *)((char *)a1 + *(int *)(v17 + 28)) == *(double *)((char *)a2 + *(int *)(v17 + 28));
      }
    }
    else
    {
      sub_1004429CC((uint64_t)v6);
      sub_1004429CC((uint64_t)v9);
    }
  }
  return 0;
}

uint64_t sub_1004429CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100824B88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100442A0C()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_100833C60);
  v1[1] = sub_1004427E0();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of ChartContent.compositingLayer()>>, 1);
}

uint64_t sub_100442A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  __n128 v5;

  v3 = sub_100047110((uint64_t *)&unk_100827460);
  result = swift_allocObject(v3, 72, 7);
  v5.n128_u64[1] = 2;
  *(_OWORD *)(result + 16) = xmmword_100622F90;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    v5.n128_f64[0] = (double)(a1 + 1) / (double)*(uint64_t *)(v1 + 16);
    *(_QWORD *)(result + 56) = &type metadata for Double;
    *(_QWORD *)(result + 64) = &protocol witness table for Double;
    *(_QWORD *)(result + 32) = v5.n128_u64[0];
    return String.init(format:_:)(0xD000000000000011, 0x800000010069EEA0, result, v5);
  }
  return result;
}

uint64_t sub_100442AE8(uint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  double v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  const char *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  const char *v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  const char *v64;
  char v65;
  uint64_t v66;

  v5 = result;
  if (a2)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    v6 = v3[4];
    if (*(_QWORD *)(v6 + 16) <= a2)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v7 = v6 + 16 * a2;
    v9 = *(_QWORD *)(v7 + 32);
    v8 = *(CHWorkoutDetailHeartRateTableViewCell **)(v7 + 40);
    v10 = sub_100047110((uint64_t *)&unk_100827460);
    result = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(result + 16) = xmmword_100622F90;
    if (__OFADD__(v5, 1))
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    v11 = result;
    *(_QWORD *)(result + 56) = &type metadata for Int;
    *(_QWORD *)(result + 64) = &protocol witness table for Int;
    *(_QWORD *)(result + 32) = v5 + 1;
    v12 = swift_bridgeObjectRetain(v8);
    v13 = String.init(format:_:)(v9, v8, v11, v12);
    v15 = v14;
    swift_bridgeObjectRelease(v8, v14, v16, v17, v18, v19, v20, v21);
    v63 = v13;
LABEL_10:
    v64 = v15;
    v37 = sub_100038CA0();
    result = Text.init<A>(_:)(&v63, &type metadata for String, v37);
    v39 = result;
    v41 = v40;
    v43 = v42;
    v44 = v3[5];
    if (*(_QWORD *)(v44 + 16) > a2)
    {
      v45 = v38 & 1;
      v46 = *(_QWORD *)(v44 + 8 * a2 + 32);
      swift_retain(v46);
      v48 = Text.foregroundColor(_:)(v47, v39, v41, v45, v43);
      v50 = v49;
      v52 = v51;
      v54 = v53;
      swift_release(v46);
      v63 = v48;
      v64 = v50;
      v65 = v52 & 1;
      v66 = v54;
      v55 = AnyView.init<A>(_:)(&v63, &type metadata for Text, &protocol witness table for Text);
      sub_1000E4458(v39, v41, v45);
      swift_bridgeObjectRelease(v43, v56, v57, v58, v59, v60, v61, v62);
      return v55;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (__OFADD__(result, 1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(a3, 1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v22 = (_QWORD *)v3[4];
  if (v22[2])
  {
    v23 = (double)(result + 1) / (double)v3[2] * (double)(a3 + 1);
    v24 = v22[4];
    v25 = (CHWorkoutDetailHeartRateTableViewCell *)v22[5];
    v26 = sub_100047110((uint64_t *)&unk_100827460);
    v27 = swift_allocObject(v26, 72, 7);
    *(_OWORD *)(v27 + 16) = xmmword_100622F90;
    *(_QWORD *)(v27 + 56) = &type metadata for Double;
    *(_QWORD *)(v27 + 64) = &protocol witness table for Double;
    *(double *)(v27 + 32) = v23;
    v28 = swift_bridgeObjectRetain(v25);
    v29 = String.init(format:_:)(v24, v25, v27, v28);
    v15 = v30;
    swift_bridgeObjectRelease(v25, v30, v31, v32, v33, v34, v35, v36);
    v63 = v29;
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_100442D50()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for WorkoutDetailColumnMetricPreviewDataSource()
{
  return objc_opt_self(_TtC10FitnessApp42WorkoutDetailColumnMetricPreviewDataSource);
}

uint64_t sub_100442DA4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_100442DAC()
{
  return 6;
}

uint64_t sub_100442DB4(uint64_t result)
{
  double v1;

  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_7;
  }
  v1 = 8.0 / (double)(result + 1);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 < 9.22337204e18)
    return (uint64_t)v1;
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_100442E18@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    v5 = *(_QWORD *)(v2 + 24);
    if (*(_QWORD *)(v5 + 16) > result)
    {
      v6 = type metadata accessor for AttributedString(0);
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v3, v6);
    }
  }
  __break(1u);
  return result;
}

double sub_100442E8C()
{
  return 92.0;
}

uint64_t sub_100442E9C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutDetailColumnMetricPreviewDataSource();
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

unint64_t sub_100442ED4(uint64_t a1)
{
  unint64_t result;

  result = sub_100442EF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100442EF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833D70;
  if (!qword_100833D70)
  {
    v1 = type metadata accessor for WorkoutDetailColumnMetricPreviewDataSource();
    result = swift_getWitnessTable(&unk_10063CE8C, v1);
    atomic_store(result, (unint64_t *)&qword_100833D70);
  }
  return result;
}

double sub_100442F3C()
{
  double result;

  if (qword_10081DD70 != -1)
    swift_once(&qword_10081DD70, sub_1000071BC);
  result = 1.0 / *(double *)&qword_10086AA00;
  *(double *)&qword_10086AA08 = 1.0 / *(double *)&qword_10086AA00;
  return result;
}

void **sub_100442F8C(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for AttributedString(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = *(void **)((char *)a2 + v14);
    *(void **)((char *)v7 + v14) = v15;
    v16 = v15;
  }
  return v7;
}

void sub_100443040(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

void **sub_10044309C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  void *v14;
  id v15;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = *(void **)((char *)a2 + v13);
  *(void **)((char *)a1 + v13) = v14;
  v15 = v14;
  return a1;
}

void **sub_100443128(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = *(void **)((char *)a2 + v13);
  v15 = *(void **)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = v14;
  v16 = v14;

  return a1;
}

_QWORD *sub_1004431B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **sub_100443230(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = *(void **)((char *)a1 + v11);
  *(void **)((char *)a1 + v11) = *(void **)((char *)a2 + v11);

  return a1;
}

uint64_t sub_1004432B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004432C4);
}

uint64_t sub_1004432C4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100443340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044334C);
}

char *sub_10044334C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AttributedString(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MetricFormattingHelper(uint64_t a1)
{
  uint64_t result;

  result = qword_100833DD8;
  if (!qword_100833DD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricFormattingHelper);
  return result;
}

uint64_t sub_1004433FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100443474(char a1)
{
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  _QWORD v12[2];

  if (((1 << a1) & 0x5DDBB8E070) != 0 || ((1 << a1) & 0x2224471F80) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, 0, 0);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    v12[0] = v4;
    v12[1] = v6;
    return String.init<A>(_:)(v12, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, 0, 0);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    return v11;
  }
}

void sub_1004436E4(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  void **v9;
  void **v10;
  void *v13;
  char v14;
  id v15;

  if ((a4 & (a3 == 0)) != 0)
    v9 = a2;
  else
    v9 = a2 + 1;
  if (((1 << a1) & 0x2224471F80) != 0)
    v10 = a2 + 1;
  else
    v10 = v9;
  if (((1 << a1) & 0x5DDBB8E070) != 0)
    v10 = a2;
  v13 = *v10;
  v14 = *((_BYTE *)a2 + *(int *)(type metadata accessor for MetricDetailViewModel(0) + 40));
  v15 = v13;
  sub_100443F58(v13, a1, a5, a6, 0, (v14 & 1) == 0, a7);

}

void sub_1004437C4(char a1)
{
  __asm { BR              X10 }
}

id sub_1004437EC()
{
  return objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
}

void sub_100443B08(unsigned __int8 a1, double a2)
{
  id *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  if (a1 <= 0x25u)
  {
    if (((1 << a1) & 0x2204400080) != 0)
    {
      v4 = 1;
    }
    else if (a1 == 16)
    {
      v4 = 2;
    }
    else
    {
      if (a1 != 29)
        return;
      v4 = 3;
    }
    v5 = FIUIPaceFormatForDistanceType(v4);
    if (v5 == 4)
    {
      if (a2 > 0.0)
      {
        v6 = *v2;
        v7 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
        v8 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v7, 1.0);

        objc_msgSend(v6, "speedPerHourWithDistance:overDuration:paceFormat:distanceType:", v8, 4, v4, a2);
LABEL_10:

      }
    }
    else if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      v9 = v5;
      v10 = objc_msgSend(*v2, "unitManager");
      if (v10)
      {
        v11 = v10;
        v12 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
        v8 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v12, 1.0);

        objc_msgSend(v11, "paceWithDistance:overDuration:paceFormat:distanceType:", v8, v9, v4, a2);
        goto LABEL_10;
      }
      __break(1u);
    }
  }
}

uint64_t sub_100443CF0(char a1)
{
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  _QWORD v12[2];

  if (((1 << a1) & 0x5DDBB8E070) != 0 || ((1 << a1) & 0x2224471F80) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, 0, 0);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    v12[0] = v4;
    v12[1] = v6;
    return String.init<A>(_:)(v12, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, 0, 0);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    return v11;
  }
}

uint64_t sub_100443F58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t KeyPath;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  void (*v33)(uint64_t, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[6];
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, __n128);
  uint64_t v57;

  v8 = v7;
  LODWORD(v56) = a6;
  v54 = a2;
  v14 = sub_100047110(&qword_100833E18);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AttributeContainer(0);
  v19 = __chkstk_darwin(v18);
  v20 = __chkstk_darwin(v19);
  v24 = (char *)v48 - v23;
  if (a1)
  {
    v51 = v8;
    v52 = a4;
    v49 = a5;
    v55 = a7;
    v25 = v20;
    v26 = v21;
    v27 = v22;
    v53 = a1;
    AttributeContainer.init()(v28);
    KeyPath = swift_getKeyPath(&unk_10063CF08);
    v48[-2] = __chkstk_darwin(KeyPath);
    v30 = swift_getKeyPath(&unk_10063CF38);
    v31 = sub_1000EA1DC();
    AttributeContainer.subscript.getter(v30, v31);
    v32 = swift_release(v30);
    v50 = v27;
    v33 = *(void (**)(uint64_t, uint64_t, __n128))(v27 + 8);
    v33(v26, v25, v32);
    v48[5] = a3;
    v57 = a3;
    AttributeContainer.Builder.callAsFunction(_:)(&v57, v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if ((v56 & 1) == 0)
    {
      v48[3] = v24;
      v48[4] = v25;
      v56 = v33;
      __asm { BR              X10 }
    }
    v34 = swift_getKeyPath(&unk_10063CF78);
    v48[-2] = __chkstk_darwin(v34);
    v35 = swift_getKeyPath(&unk_10063CFA8);
    v36 = v52;
    v57 = v52;
    v37 = sub_1000EA158();
    swift_retain(v36);
    AttributeContainer.subscript.setter(&v57, v35, v37);
    v38 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, 0, 0);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v42 = (uint64_t (*)(char *, uint64_t))v33;
    v44 = v43;

    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v26, v24, v25);
    AttributedString.init(_:attributes:)(v41, v44, v26);

    return v42(v24, v25);
  }
  else
  {
    v46 = v8 + *(int *)(type metadata accessor for MetricFormattingHelper(0) + 20);
    v47 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(a7, v46, v47);
  }
}

void sub_1004458A0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1004458DC()
{
  id *v0;
  uint64_t v1;
  double v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;

  v3 = *v0;
  v4 = objc_msgSend(*v0, "unitManager");
  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x100445DA0);
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "userDistanceUnitForDistanceType:", v1);

  v7 = objc_msgSend(v3, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:roundingMode:decimalTrimmingMode:", v6, 0, objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "defaultPrecisionForDistanceUnit:", v6), 3, 1, v2);
  if (!v7)
    return 0;
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

  return v9;
}

id sub_100445E3C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  qword_10086AA10 = (uint64_t)result;
  return result;
}

id sub_100445E74()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v0, "setNumberStyle:", 1);
  objc_msgSend(v0, "setGeneratesDecimalNumbers:", 0);
  result = objc_msgSend(v0, "setMaximumFractionDigits:", 0);
  qword_100833D78 = (uint64_t)v0;
  return result;
}

uint64_t sub_100445EF4()
{
  return 8;
}

uint64_t sub_100445F00(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100445F08(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100445F1C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100445F34()
{
  return 8;
}

uint64_t sub_100445F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t result;
  uint64_t v19;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.title2(_:), v7, v9);
  v12 = enum case for Font.Design.rounded(_:);
  v13 = type metadata accessor for Font.Design(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  v15 = static Font.system(_:design:weight:)(v11, v6, 0, 1);
  sub_100184224((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  v16 = Font.leading(_:)(v3, v15);
  v17 = swift_release(v15);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v17);
  qword_10086AA18 = v16;
  return result;
}

uint64_t getEnumTagSinglePayload for RingsLayout(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RingsLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RingsLayout()
{
  return &type metadata for RingsLayout;
}

uint64_t storeEnumTagSinglePayload for RingsLayoutType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004461F8 + 4 * byte_10063CFED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10044622C + 4 * byte_10063CFE8[v4]))();
}

uint64_t sub_10044622C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100446234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10044623CLL);
  return result;
}

uint64_t sub_100446248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100446250);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100446254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044625C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RingsLayoutType()
{
  return &type metadata for RingsLayoutType;
}

unint64_t sub_10044627C()
{
  unint64_t result;

  result = qword_100833E20;
  if (!qword_100833E20)
  {
    result = swift_getWitnessTable(&unk_10063D05C, &type metadata for RingsLayoutType);
    atomic_store(result, (unint64_t *)&qword_100833E20);
  }
  return result;
}

uint64_t sub_1004462C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_1004462E0(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleBody, &qword_100833E28);
}

id sub_1004462F4(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleCaption2, &qword_100833E30);
}

char *sub_100446308(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  double v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  void *v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  objc_super v57;

  swift_getObjectType(v3);
  *(_QWORD *)&v3[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel] = 0;
  v4 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView;
  v5 = objc_allocWithZone((Class)UIView);
  v6 = v3;
  v7 = objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v4] = v7;
  v8 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = (void *)UIView.withContentMode(_:)(2);

  v11 = objc_msgSend(v10, "layer");
  objc_msgSend(v11, "setCornerRadius:", 3.0);

  objc_msgSend(v10, "setClipsToBounds:", 1);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v8] = v10;
  v12 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = (void *)UIView.withContentMode(_:)(2);

  v15 = objc_msgSend(v14, "layer");
  objc_msgSend(v15, "setCornerRadius:", 3.0);

  objc_msgSend(v14, "setClipsToBounds:", 1);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v12] = v14;
  v16 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, "setAxis:", 1);
  objc_msgSend(v17, "setDistribution:", 3);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v16] = v17;
  v18 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v19, "setContentCompressionResistancePriority:forAxis:", 1, v20);
  if (qword_10081DD98 != -1)
    swift_once(&qword_10081DD98, sub_1004462E0);
  v21 = (void *)UILabel.withFont(_:)(qword_100833E28);

  objc_msgSend(v21, "setLineBreakMode:", 0);
  objc_msgSend(v21, "setNumberOfLines:", 0);
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v18] = v21;
  v22 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel;
  v23 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v22] = v23;
  v24 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel;
  v25 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081DDA0 != -1)
    swift_once(&qword_10081DDA0, sub_1004462F4);
  v26 = (void *)UILabel.withFont(_:)(qword_100833E30);

  v27 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v28 = (void *)UILabel.withTextColor(_:)(v27);

  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v24] = v28;
  v29 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint;
  *(_QWORD *)&v6[v29] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v30 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint;
  *(_QWORD *)&v6[v30] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v31 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint;
  *(_QWORD *)&v6[v31] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v32 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint;
  *(_QWORD *)&v6[v32] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v33 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackViewLeadingConstraint;
  *(_QWORD *)&v6[v33] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v34 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint;
  *(_QWORD *)&v6[v34] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v35 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint;
  *(_QWORD *)&v6[v35] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");

  if (a3)
  {
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v37, v38, v39, v40, v41, v42, v43);
  }
  else
  {
    v36 = 0;
  }
  v57.receiver = v6;
  v57.super_class = (Class)type metadata accessor for MindfulnessSessionListTableViewCell();
  v44 = (char *)objc_msgSendSuper2(&v57, "initWithStyle:reuseIdentifier:", a1, v36);

  v45 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView;
  v46 = *(void **)&v44[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView];
  v47 = v44;
  v48 = v46;
  v49 = sub_100032478();
  objc_msgSend(v48, "setBackgroundColor:", v49);

  v50 = objc_msgSend(*(id *)&v44[v45], "layer");
  objc_msgSend(v50, "setCornerRadius:", sub_10003249C());

  v51 = *(void **)&v44[v45];
  objc_msgSend(v51, "addSubview:", *(_QWORD *)&v47[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView]);
  objc_msgSend(v51, "addSubview:", *(_QWORD *)&v47[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView]);
  v52 = *(void **)&v47[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView];
  objc_msgSend(v52, "addArrangedSubview:", *(_QWORD *)&v47[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel]);
  objc_msgSend(v52, "addArrangedSubview:", *(_QWORD *)&v47[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel]);
  objc_msgSend(v51, "addSubview:", v52);
  objc_msgSend(v51, "addSubview:", *(_QWORD *)&v47[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel]);
  v53 = objc_msgSend(v47, "contentView");
  objc_msgSend(v53, "addSubview:", v51);

  sub_1004469D0();
  return v47;
}

void sub_1004469D0()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  double v34;
  id v35;
  id v36;
  id v37;
  id v38;
  double v39;
  id v40;
  id v41;
  id v42;
  id v43;
  double v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  char *v103;
  Class isa;

  v1 = v0;
  swift_getObjectType(v0);
  v2 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView];
  v3 = objc_msgSend(v2, "widthAnchor");
  v4 = objc_msgSend(v3, "constraintEqualToConstant:", 28.0);

  v103 = (char *)OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint;
  v5 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint];
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint] = v4;

  v6 = objc_msgSend(v2, "heightAnchor");
  v7 = objc_msgSend(v6, "constraintEqualToConstant:", 28.0);

  v101 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint;
  v8 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint] = v7;

  v9 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView];
  v10 = objc_msgSend(v9, "widthAnchor");
  v11 = objc_msgSend(v10, "constraintEqualToConstant:", 48.0);

  v100 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint;
  v12 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint];
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint] = v11;

  v97 = v9;
  v13 = objc_msgSend(v9, "heightAnchor");
  v14 = objc_msgSend(v13, "constraintEqualToConstant:", 48.0);

  v99 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint;
  v15 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint] = v14;

  v16 = objc_msgSend(v2, "centerXAnchor");
  v17 = objc_msgSend(v9, "centerXAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  v98 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint;
  v19 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint];
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint] = v18;

  v20 = objc_msgSend(v2, "leadingAnchor");
  v21 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView];
  v22 = objc_msgSend(v21, "leadingAnchor");
  v23 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v22, 16.0);

  v24 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint];
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint] = v23;

  v102 = (void *)objc_opt_self(NSLayoutConstraint);
  v25 = sub_100047110((uint64_t *)&unk_100828340);
  v26 = swift_allocObject(v25, 184, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10063D090;
  v27 = objc_msgSend(v21, "topAnchor");
  v28 = objc_msgSend(v0, "contentView");
  v29 = objc_msgSend(v28, "topAnchor");

  v30 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v29, sub_100032C24());
  *(_QWORD *)(v26 + 32) = v30;
  v31 = objc_msgSend(v21, "leadingAnchor");
  v32 = objc_msgSend(v0, "contentView");
  v33 = objc_msgSend(v32, "leadingAnchor");

  sub_100032C24();
  v35 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, v34);

  *(_QWORD *)(v26 + 40) = v35;
  v36 = objc_msgSend(v21, "trailingAnchor");
  v37 = objc_msgSend(v0, "contentView");
  v38 = objc_msgSend(v37, "trailingAnchor");

  sub_100032C24();
  v40 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v38, -v39);

  *(_QWORD *)(v26 + 48) = v40;
  v41 = objc_msgSend(v21, "bottomAnchor");
  v42 = objc_msgSend(v0, "contentView");
  v43 = objc_msgSend(v42, "bottomAnchor");

  sub_100032C24();
  v45 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v43, -v44);

  *(_QWORD *)(v26 + 56) = v45;
  v46 = objc_msgSend(v97, "leadingAnchor");
  v47 = objc_msgSend(v21, "leadingAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, 16.0);

  *(_QWORD *)(v26 + 64) = v48;
  v49 = objc_msgSend(v97, "centerYAnchor");
  v50 = *(void **)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView];
  v51 = objc_msgSend(v50, "centerYAnchor");
  v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);

  v53 = *(void **)&v1[v100];
  *(_QWORD *)(v26 + 72) = v52;
  *(_QWORD *)(v26 + 80) = v53;
  v54 = *(void **)&v1[v99];
  *(_QWORD *)(v26 + 88) = v54;
  v55 = v53;
  v56 = v54;
  v57 = objc_msgSend(v2, "centerYAnchor");
  v58 = objc_msgSend(v97, "centerYAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  v60 = *(void **)&v1[v98];
  *(_QWORD *)(v26 + 96) = v59;
  *(_QWORD *)(v26 + 104) = v60;
  v61 = *(void **)&v103[(_QWORD)v1];
  v62 = *(void **)&v1[v101];
  *(_QWORD *)(v26 + 112) = v61;
  *(_QWORD *)(v26 + 120) = v62;
  v63 = v60;
  v64 = v61;
  v65 = v62;
  v66 = objc_msgSend(v50, "topAnchor");
  v67 = objc_msgSend(v21, "topAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v67, 12.0);

  *(_QWORD *)(v26 + 128) = v68;
  v69 = objc_msgSend(v50, "leadingAnchor");
  v70 = objc_msgSend(v97, "trailingAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v70, 9.0);

  *(_QWORD *)(v26 + 136) = v71;
  v72 = objc_msgSend(v50, "trailingAnchor");
  v73 = objc_msgSend(v21, "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintLessThanOrEqualToAnchor:constant:", v73, -16.0);

  *(_QWORD *)(v26 + 144) = v74;
  v75 = objc_msgSend(v50, "bottomAnchor");
  v76 = objc_msgSend(v21, "bottomAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:constant:", v76, -12.0);

  *(_QWORD *)(v26 + 152) = v77;
  v78 = *(void **)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel];
  v79 = objc_msgSend(v78, "topAnchor");
  v80 = objc_msgSend(*(id *)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel], "bottomAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v26 + 160) = v81;
  v82 = *(void **)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel];
  v83 = objc_msgSend(v82, "trailingAnchor");
  v84 = objc_msgSend(v21, "trailingAnchor");
  v85 = objc_msgSend(v83, "constraintEqualToAnchor:constant:", v84, -16.0);

  *(_QWORD *)(v26 + 168) = v85;
  v86 = objc_msgSend(v82, "lastBaselineAnchor");
  v87 = objc_msgSend(v78, "lastBaselineAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:", v87);

  *(_QWORD *)(v26 + 176) = v88;
  specialized Array._endMutation()(v89);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v26, v90, v91, v92, v93, v94, v95, v96);
  objc_msgSend(v102, "activateConstraints:", isa);

}

uint64_t sub_100447368(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;
  char v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_10079F9B0, 24, 7);
    *(_QWORD *)(v5 + 16) = v3;
    v6 = swift_allocObject(&unk_10079F9D8, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_1002B5EC0;
    *(_QWORD *)(v6 + 24) = v5;
    aBlock[4] = sub_10003A294;
    v11 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004462C0;
    aBlock[3] = &unk_10079F9F0;
    v7 = _Block_copy(aBlock);
    v8 = v11;
    v9 = v3;
    swift_retain(v6);
    swift_release(v8);
    objc_msgSend((id)v4, "performWithoutAnimation:", v7);
    _Block_release(v7);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 120, 236, 40, 1);

    swift_release(v5);
    result = swift_release(v6);
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_1004474CC(void *a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  NSString *v25;
  void *v26;
  id v27;
  unint64_t v28;
  Class isa;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;
  uint64_t v46;
  const void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  NSDate v52;
  char *v53;
  id v54;
  id v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  id v74;
  void (*v75)(void);
  uint64_t v76;
  uint64_t v77;
  id v78;
  char v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  void (*v86)(void);
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  __int128 v93;
  __int128 v94;
  __int128 aBlock;
  void (*v96)(uint64_t, void *, void *);
  void *v97;
  uint64_t (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  char v100[80];

  v6 = v5;
  v86 = (void (*)(void))a4;
  v85 = a3;
  v92 = a2;
  v91 = type metadata accessor for Date(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008239C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v5 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
  *(_QWORD *)(v5 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel) = a1;
  v15 = a1;

  v17 = type metadata accessor for Trainer(0, v16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  v18 = sub_1004C3E8C((uint64_t)v15, (uint64_t)v13);
  sub_10001BE90((uint64_t)v13, &qword_1008239C0);
  v19 = objc_allocWithZone((Class)NSMutableAttributedString);
  v89 = v18;
  v20 = objc_msgSend(v19, "initWithAttributedString:", v18);
  v21 = objc_msgSend(v20, "length");
  v22 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v22, v100);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v24 = qword_10081DD98;
  v25 = NSFontAttributeName;
  if (v24 != -1)
    swift_once(&qword_10081DD98, sub_1004462E0);
  v26 = (void *)qword_100833E28;
  *(_QWORD *)(inited + 64) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v26;
  v27 = v26;
  v28 = sub_100038C84(inited);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "addAttributes:range:", isa, 0, v21, swift_bridgeObjectRelease(v28).n128_f64[0]);

  v30 = *(void **)(v6 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel);
  v88 = v20;
  objc_msgSend(v30, "setAttributedText:", v20);
  v31 = *(void **)(v6 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel);
  v32 = sub_1004C4710();
  objc_msgSend(v31, "setAttributedText:", v32);

  v33 = swift_allocObject(&unk_10079FA28, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, v6);
  v34 = swift_allocObject(&unk_10079FA50, 32, 7);
  *(_QWORD *)(v34 + 16) = v33;
  *(_QWORD *)(v34 + 24) = v15;
  v35 = v15;
  swift_retain_n(v33, 2);
  v36 = v35;
  v37 = (void *)MindfulnessSessionViewModel.sourceRevision.getter(v36);
  v38 = objc_msgSend(v37, "source");

  LODWORD(v37) = objc_msgSend(v38, "_hasFirstPartyBundleID");
  v87 = a5;
  if ((_DWORD)v37)
  {
    v39 = sub_1004C4E3C((uint64_t)v36);
    sub_100447E94((uint64_t)v39, v33, v36);
    swift_release(v33);
    swift_release(v34);
  }
  else
  {
    v40 = swift_allocObject(&unk_10079FA78, 32, 7);
    *(_QWORD *)(v40 + 16) = sub_100448B50;
    *(_QWORD *)(v40 + 24) = v34;
    v41 = swift_retain(v34);
    v42 = MindfulnessSessionViewModel.sourceRevision.getter(v41);
    v43 = objc_msgSend((id)v42, "source", v85);

    LOBYTE(v42) = objc_msgSend(v43, "_isAppleWatch");
    if ((v42 & 1) != 0)
    {
      v39 = sub_1004C4F08(28.0);
      v44 = (void *)objc_opt_self(CHIconCache);
      v98 = sub_100186FBC;
      v99 = v40;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v96 = sub_1001ABA78;
      v97 = &unk_10079FAB8;
      v45 = _Block_copy(&aBlock);
      v46 = v99;
      swift_retain(v40);
      swift_release(v46);
      objc_msgSend(v44, "fetchWatchIconWithParameters:completion:", v39, v45);
      swift_release(v40);
      v47 = v45;
    }
    else
    {
      v39 = sub_1004C5064(28.0);
      v48 = (void *)objc_opt_self(CHIconCache);
      v98 = sub_100186FBC;
      v99 = v40;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v96 = sub_1001ABA78;
      v97 = &unk_10079FA90;
      v49 = _Block_copy(&aBlock);
      v50 = v99;
      swift_retain(v40);
      swift_release(v50);
      objc_msgSend(v48, "fetchPhoneIconWithParameters:completion:", v39, v49);
      swift_release(v40);
      v47 = v49;
    }
    _Block_release(v47);
    swift_release(v33);
    swift_release(v34);
  }

  swift_release(v33);
  v51 = (void *)objc_opt_self(CHListAndDetailViewDateFormatter);
  MindfulnessSessionViewModel.endDate.getter(v51);
  v52.super.isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v10, v91);
  v53 = v92;
  if (qword_10081DEA8 != -1)
    swift_once(&qword_10081DEA8, sub_1004C27F0);
  v54 = objc_msgSend(v51, "formattedListStringForDate:font:", v52.super.isa, qword_100837088, v85);

  v55 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  objc_msgSend(v55, "appendAttributedString:", v54);
  v56 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter(objc_msgSend(*(id *)(v6 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel), "setAttributedText:", v55));
  if ((v57 & 1) != 0 || v56 != 3)
    goto LABEL_31;
  v58 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
  v59 = v58;
  if ((unint64_t)v58 >> 62)
  {
    if (v58 >= 0)
      v58 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v58))
      goto LABEL_15;
LABEL_30:
    swift_bridgeObjectRelease(v59);
    goto LABEL_31;
  }
  if (!*(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_30;
LABEL_15:
  if ((v59 & 0xC000000000000001) != 0)
  {
    v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v59);
  }
  else
  {
    if (!*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v60 = *(id *)(v59 + 32);
  }
  v61 = v60;
  v62 = objc_msgSend(v60, "metadata", swift_bridgeObjectRelease(v59).n128_f64[0]);
  if (v62)
  {
    v63 = v62;
    v64 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v62, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyMindfulnessSessionTrainerID);
    v67 = v66;
    if (*(_QWORD *)(v64 + 16) && (v68 = sub_100438F74(v65, v66), (v69 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)(v64 + 56) + 32 * v68, (uint64_t)&v93);
    }
    else
    {
      v93 = 0u;
      v94 = 0u;
    }
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v64);
    if (*((_QWORD *)&v94 + 1))
    {
      sub_100038FD4(&v93, &aBlock);
      *(_QWORD *)&v93 = 0;
      *((_QWORD *)&v93 + 1) = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)(&aBlock, &v93, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v70 = *((_QWORD *)&v93 + 1);
      v91 = v93;
      v71 = *(char **)&v53[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
      v72 = swift_allocObject(&unk_10079FA28, 24, 7);
      swift_unknownObjectWeakInit(v72 + 16, v6);
      v73 = v36;
      v74 = v85;
      v75 = v86;
      v76 = v87;
      sub_10003AFE0((uint64_t)v86, v87);
      sub_10039CEB0(v91, v70, v71, v72, v73, v74, v75, v76);
      sub_100022BA4((uint64_t)v75, v76);

      swift_bridgeObjectRelease(v70);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(&aBlock);
      swift_release(v72);
      return;
    }
  }
  else
  {
    v93 = 0u;
    v94 = 0u;
  }

  sub_10001BE90((uint64_t)&v93, (uint64_t *)&unk_100828420);
LABEL_31:
  v77 = *(_QWORD *)&v53[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  v78 = v36;
  v79 = sub_1005EEBB4((uint64_t)v78);

  if ((v79 & 1) != 0)
  {
    v80 = swift_allocObject(&unk_10079FA28, 24, 7);
    swift_unknownObjectWeakInit(v80 + 16, v6);
    v81 = v78;
    v82 = (uint64_t)v86;
    v83 = v87;
    sub_10003AFE0((uint64_t)v86, v87);
    swift_retain(v80);
    v84 = v53;
    sub_10039D714(v81, v77, v80, v81, v84, v82, v83);

    swift_release(v80);
    sub_100022BA4(v82, v83);

    swift_release(v80);
  }
  else
  {

  }
}

void sub_100447E94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    v9 = v8;

    if (v8)
    {
      type metadata accessor for MindfulnessSessionViewModel(0);
      v10 = v9;
      v11 = a3;
      v12 = static NSObject.== infix(_:_:)(v10, v11);

      if ((v12 & 1) != 0)
      {
        swift_beginAccess(v5, v24, 0, 0);
        v13 = swift_unknownObjectWeakLoadStrong(v5);
        if (v13)
        {
          v14 = (void *)v13;
          v15 = *(id *)(v13 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView);

          objc_msgSend(v15, "setImage:", a1);
        }
        v16 = sub_1003B17F4();
        swift_beginAccess(v5, v23, 0, 0);
        v17 = swift_unknownObjectWeakLoadStrong(v5);
        if (v17)
        {
          v18 = (void *)v17;
          v19 = *(id *)(v17 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView);

          v20 = objc_msgSend(v16, "gradientDarkColor");
          v21 = objc_msgSend(v16, "gradientDarkColor");
          v22 = (id)FIUICircularGradientImage(v20, v21, 48.0);

          objc_msgSend(v19, "setImage:", v22);
        }

      }
    }
  }
}

void sub_100448060(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  sub_100448B7C(a1, a2, a3, a5, a6);
}

double sub_10044806C(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t Strong;
  double result;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t inited;
  void *v26;
  NSString *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString *v31;
  void *v32;
  id v33;
  unint64_t v34;
  Class isa;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  int64x2_t *v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[112];
  _BYTE v54[32];

  v10 = a2 + 16;
  swift_beginAccess(a2 + 16, v54, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    v15 = v14;

    if (v14)
    {
      v16 = type metadata accessor for MindfulnessSessionViewModel(0);
      v17 = v15;
      v18 = a3;
      v19 = static NSObject.== infix(_:_:)(v17, v18);

      if ((v19 & 1) != 0)
      {
        if (a1)
        {
          v21 = *(_QWORD *)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
          v22 = objc_allocWithZone((Class)NSMutableAttributedString);
          v50 = a1;
          v23 = objc_msgSend(v22, "initWithAttributedString:", v21);
          v49 = objc_msgSend(v23, "length");
          v24 = sub_100047110((uint64_t *)&unk_10082EDA0);
          inited = swift_initStackObject(v24, v53);
          *(_OWORD *)(inited + 16) = xmmword_100620BC0;
          *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
          v26 = (void *)objc_opt_self(UIColor);
          v27 = NSForegroundColorAttributeName;
          v28 = objc_msgSend(v26, "whiteColor");
          v29 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
          *(_QWORD *)(inited + 40) = v28;
          *(_QWORD *)(inited + 64) = v29;
          *(_QWORD *)(inited + 72) = NSFontAttributeName;
          v30 = qword_10081DD98;
          v31 = NSFontAttributeName;
          if (v30 != -1)
            swift_once(&qword_10081DD98, sub_1004462E0);
          v32 = (void *)qword_100833E28;
          *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
          *(_QWORD *)(inited + 80) = v32;
          v33 = v32;
          v34 = sub_100038C84(inited);
          type metadata accessor for Key(0);
          sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v23, "addAttributes:range:", isa, 0, v49, swift_bridgeObjectRelease(v34).n128_f64[0]);

          swift_beginAccess(v10, v52, 0, 0);
          v36 = swift_unknownObjectWeakLoadStrong(v10);
          if (v36)
          {
            v37 = (void *)v36;
            v38 = *(id *)(v36 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel);

            objc_msgSend(v38, "setAttributedText:", v23);
          }
          v39 = swift_allocObject(&unk_10079FA28, 24, 7);
          swift_beginAccess(v10, v51, 0, 0);
          v40 = (void *)swift_unknownObjectWeakLoadStrong(v10);
          swift_unknownObjectWeakInit(v39 + 16, v40);

          v41 = (int64x2_t *)swift_allocObject(&unk_10079FAF0, 64, 7);
          v41[1].i64[0] = v39;
          v41[1].i64[1] = (uint64_t)v18;
          v41[2].i64[0] = a5;
          v41[2].i64[1] = a6;
          v41[3] = vdupq_n_s64(0x4048000000000000uLL);
          v42 = v18;
          swift_retain(v39);
          sub_10003AFE0(a5, a6);
          sub_10039636C(v50, (uint64_t)sub_100448E2C, (uint64_t)v41, 48.0, 48.0);

          swift_release(v39);
          swift_release(v41);
        }
        else
        {
          v43 = static os_log_type_t.error.getter(v20);
          v44 = (void *)HKLogActivity;
          v45 = sub_100047110((uint64_t *)&unk_100827460);
          v46 = swift_allocObject(v45, 112, 7);
          *(_OWORD *)(v46 + 16) = xmmword_100620BC0;
          *(_QWORD *)(v46 + 56) = &type metadata for String;
          *(_QWORD *)(v46 + 64) = sub_100038CF8();
          *(_QWORD *)(v46 + 32) = 0xD000000000000050;
          *(_QWORD *)(v46 + 40) = 0x800000010069C4B0;
          *(_QWORD *)(v46 + 96) = v16;
          *(_QWORD *)(v46 + 104) = sub_1000083D8((unint64_t *)&qword_100823AB0, (uint64_t (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
          *(_QWORD *)(v46 + 72) = v18;
          v47 = v18;
          v48 = v44;
          os_log(_:dso:log:_:_:)(v43, &_mh_execute_header, v48, "%@ failed to fetch catalog item view model for mindfulness session %@", 69, 2, v46);

          *(_QWORD *)&result = swift_bridgeObjectRelease(v46).n128_u64[0];
        }
      }
    }
  }
  return result;
}

void sub_1004484FC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), double a5, double a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v47, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    v15 = v14;

    if (v14)
    {
      type metadata accessor for MindfulnessSessionViewModel(0);
      v16 = v15;
      v17 = a3;
      v18 = static NSObject.== infix(_:_:)(v16, v17);

      if ((v18 & 1) != 0)
      {
        if (a1)
        {
          swift_beginAccess(v11, v46, 0, 0);
          v19 = swift_unknownObjectWeakLoadStrong(v11);
          if (v19)
          {
            v20 = (void *)v19;
            v21 = *(id *)(v19 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint);

            objc_msgSend(v21, "setConstant:", a5);
          }
          swift_beginAccess(v11, v45, 0, 0);
          v22 = swift_unknownObjectWeakLoadStrong(v11);
          if (v22)
          {
            v23 = (void *)v22;
            v24 = *(id *)(v22 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint);

            objc_msgSend(v24, "setConstant:", a6);
          }
          swift_beginAccess(v11, v44, 0, 0);
          v25 = swift_unknownObjectWeakLoadStrong(v11);
          if (v25)
          {
            v26 = (void *)v25;
            v27 = objc_retain(*(id *)(v25
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint));

            objc_msgSend(v27, "setConstant:", a5);
          }
          swift_beginAccess(v11, v43, 0, 0);
          v28 = swift_unknownObjectWeakLoadStrong(v11);
          if (v28)
          {
            v29 = (void *)v28;
            v30 = objc_retain(*(id *)(v28
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint));

            objc_msgSend(v30, "setConstant:", a6);
          }
          swift_beginAccess(v11, v42, 0, 0);
          v31 = swift_unknownObjectWeakLoadStrong(v11);
          if (v31)
          {
            v32 = (void *)v31;
            v33 = objc_retain(*(id *)(v31
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint));

            objc_msgSend(v33, "setActive:", 0);
          }
          swift_beginAccess(v11, v41, 0, 0);
          v34 = swift_unknownObjectWeakLoadStrong(v11);
          if (v34)
          {
            v35 = (void *)v34;
            v36 = objc_retain(*(id *)(v34
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint));

            objc_msgSend(v36, "setActive:", 1);
          }
          swift_beginAccess(v11, &v40, 0, 0);
          v37 = swift_unknownObjectWeakLoadStrong(v11);
          if (v37)
          {
            v38 = (void *)v37;
            v39 = *(id *)(v37 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView);

            objc_msgSend(v39, "setImage:", a1);
          }
        }
      }
    }
  }
  if (a4)
    a4();
}

id sub_10044882C()
{
  char *v0;
  void *v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MindfulnessSessionListTableViewCell();
  objc_msgSendSuper2(&v3, "prepareForReuse");
  v1 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel];
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel] = 0;

  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint], "setConstant:", 28.0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint], "setConstant:", 28.0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint], "setConstant:", 48.0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint], "setConstant:", 48.0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint], "setActive:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint], "setActive:", 1);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView], "setImage:", 0);
}

id sub_100448994()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionListTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100448ACC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100448AF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100448B00()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100448B24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100448B50(uint64_t a1)
{
  uint64_t v1;

  sub_100447E94(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100448B58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100448B7C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t Strong;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  _QWORD v30[2];
  void (*v31)(void);
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v30[1] = a5;
  v31 = a4;
  v32 = a1;
  v7 = sub_100047110(&qword_1008239C0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v30 - v11;
  v14 = type metadata accessor for Trainer(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2 + 16;
  swift_beginAccess(a2 + 16, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    v22 = v21;

    if (v21)
    {
      type metadata accessor for MindfulnessSessionViewModel(0);
      v23 = v22;
      v24 = a3;
      v25 = static NSObject.== infix(_:_:)(v23, v24);

      if ((v25 & 1) != 0)
      {
        sub_1002C46E4(v32, (uint64_t)v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
        {
          sub_10001BE90((uint64_t)v12, &qword_1008239C0);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v12, v14);
          swift_beginAccess(v18, v33, 0, 0);
          v26 = swift_unknownObjectWeakLoadStrong(v18);
          if (v26)
          {
            v27 = (void *)v26;
            v28 = *(id *)(v26 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel);

            (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v17, v14);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
            v29 = sub_1004C3E8C((uint64_t)v24, (uint64_t)v10);
            sub_10001BE90((uint64_t)v10, &qword_1008239C0);
            objc_msgSend(v28, "setAttributedText:", v29);

          }
          if (v31)
            v31();
          (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        }
      }
    }
  }
}

uint64_t sub_100448DF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100448E2C(uint64_t a1)
{
  uint64_t v1;

  sub_1004484FC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void))(v1 + 32), *(double *)(v1 + 48), *(double *)(v1 + 56));
}

void sub_100448E3C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel] = 0;
  v2 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v2] = v3;
  v4 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = (void *)UIView.withContentMode(_:)(2);

  v7 = objc_msgSend(v6, "layer");
  objc_msgSend(v7, "setCornerRadius:", 3.0);

  objc_msgSend(v6, "setClipsToBounds:", 1);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v4] = v6;
  v8 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = (void *)UIView.withContentMode(_:)(2);

  v11 = objc_msgSend(v10, "layer");
  objc_msgSend(v11, "setCornerRadius:", 3.0);

  objc_msgSend(v10, "setClipsToBounds:", 1);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v8] = v10;
  v12 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setAxis:", 1);
  objc_msgSend(v13, "setDistribution:", 3);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v12] = v13;
  v14 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel;
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v16) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v16);
  if (qword_10081DD98 != -1)
    swift_once(&qword_10081DD98, sub_1004462E0);
  v17 = (void *)UILabel.withFont(_:)(qword_100833E28);

  objc_msgSend(v17, "setLineBreakMode:", 0);
  objc_msgSend(v17, "setNumberOfLines:", 0);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v14] = v17;
  v18 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v18] = v19;
  v20 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel;
  v21 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081DDA0 != -1)
    swift_once(&qword_10081DDA0, sub_1004462F4);
  v22 = (void *)UILabel.withFont(_:)(qword_100833E30);

  v23 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v24 = (void *)UILabel.withTextColor(_:)(v23);

  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v20] = v24;
  v25 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint;
  *(_QWORD *)&v1[v25] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v26 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint;
  *(_QWORD *)&v1[v26] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v27 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint;
  *(_QWORD *)&v1[v27] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v28 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint;
  *(_QWORD *)&v1[v28] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v29 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackViewLeadingConstraint;
  *(_QWORD *)&v1[v29] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v30 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint;
  *(_QWORD *)&v1[v30] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v31 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint;
  *(_QWORD *)&v1[v31] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/MindfulnessSessionListTableViewCell.swift", 52, 2, 256, 0);
  __break(1u);
}

uint64_t sub_10044930C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  Class isa;
  id v25;
  __n128 v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  _BYTE v48[24];
  uint64_t v49;

  v42 = a3;
  v43 = a2;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082CDC8);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - v13;
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card;
  swift_beginAccess(v19, v47, 0, 0);
  sub_1001B7120(v19, (uint64_t)v48);
  if (!v49)
  {
    sub_10001BE90((uint64_t)v48, &qword_100832410);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    return sub_10001BE90((uint64_t)v14, &qword_10082CDC8);
  }
  v39 = v5;
  v40 = v8;
  v41 = v3;
  sub_1000252E0((uint64_t)v48, (uint64_t)v44);
  sub_10001BE90((uint64_t)v48, &qword_100832410);
  v20 = v45;
  v21 = v46;
  v22 = sub_100016804(v44, v45);
  v23 = IndexPath.item.getter(v22);
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v21 + 64))(0, 0, v23, v20, v21);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_10001BE90((uint64_t)v14, &qword_10082CDC8);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v25 = objc_msgSend(v42, "layoutAttributesForItemAtIndexPath:", isa);

  if (v25)
  {
    objc_msgSend(v25, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v35 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v40, v43, v39);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v18, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
    swift_beginAccess(v41 + 40, v48, 33, 0);
    sub_100022218((uint64_t)v11, v35);
    swift_endAccess(v48);
    v36 = sub_100030B80();
    ImpressionsCalculator.addElement(_:at:)(v18, v28, v30, v32, v34);

    v26 = swift_release(v36);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v26);
}

uint64_t sub_100449648()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for ActivityDashboardImpressionsTracker()
{
  return objc_opt_self(_TtC10FitnessApp35ActivityDashboardImpressionsTracker);
}

void sub_10044969C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  Class isa;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];

  v8 = sub_100047110(&qword_10082CDC8);
  __chkstk_darwin(v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = IndexPath.section.getter(v11);
  v13 = objc_msgSend(a3, "numberOfSections");
  if (v12 >= (uint64_t)v13
    || (v14 = IndexPath.item.getter(v13),
        v14 >= (uint64_t)objc_msgSend(a3, "numberOfItemsInSection:", IndexPath.section.getter(v14))))
  {
    swift_beginAccess(a4 + 40, v28, 33, 0);
    sub_1004D1010(a1, (uint64_t)v10);
    sub_10001BE90((uint64_t)v10, &qword_10082CDC8);
    swift_endAccess(v28);
    v26 = sub_100030B80();
    ImpressionsCalculator.removeElement(_:)(a2);
    swift_release(v26);
  }
  else
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend(a3, "layoutAttributesForItemAtIndexPath:", isa);

    if (v16)
    {
      objc_msgSend(v16, "frame");
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v25 = sub_100030B80();
      ImpressionsCalculator.addElement(_:at:)(a2, v18, v20, v22, v24);

      swift_release(v25);
    }
  }
}

uint64_t sub_100449864()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_100449894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v26;
  __n128 v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v3 = sub_100047110(&qword_10082CDC8);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v28[-v7];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v1 + 40;
  swift_beginAccess(v1 + 40, v29, 0, 0);
  v14 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 40);
  if (!*(_QWORD *)v14->cellPadding)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return sub_10001BE90((uint64_t)v8, &qword_10082CDC8);
  }
  swift_bridgeObjectRetain(v14);
  v15 = sub_10002252C(a1);
  if ((v16 & 1) != 0)
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v10 + 16))(v8, *(_QWORD *)v14[1].cellInset + *(_QWORD *)(v10 + 72) * v15, v9);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v17, 1, v9);
  swift_bridgeObjectRelease(v14, v18, v19, v20, v21, v22, v23, v24);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_10001BE90((uint64_t)v8, &qword_10082CDC8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  swift_beginAccess(v13, v28, 33, 0);
  sub_1004D1010(a1, (uint64_t)v5);
  sub_10001BE90((uint64_t)v5, &qword_10082CDC8);
  swift_endAccess(v28);
  v26 = sub_100030B80();
  ImpressionsCalculator.removeElement(_:)(v12);
  v27 = swift_release(v26);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v27);
}

id sub_100449B68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdvancedGoalViewFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AdvancedGoalViewFactory()
{
  return objc_opt_self(CHASAdvancedGoalViewFactory);
}

uint64_t sub_100449BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.calendar.setter(v4);
}

uint64_t sub_100449C34(void *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _BYTE v30[12];
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;

  v34 = a5;
  v35 = a4;
  v32 = a3;
  v31 = a2;
  v6 = (int *)type metadata accessor for AdvancedChangeGoalView(0);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = sub_100047110(&qword_100833FE0);
  v9 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v30[-v13];
  *v8 = swift_getKeyPath(&unk_10063D198);
  v15 = sub_100047110(&qword_1008251E0);
  swift_storeEnumTagMultiPayload(v8, v15, 0);
  v16 = (char *)v8 + v6[5];
  v17 = sub_100449EB8();
  v18 = sub_1000083D8(&qword_100833FE8, (uint64_t (*)(uint64_t))sub_100449EB8, (uint64_t)&protocol conformance descriptor for FIUIFormattingManager);
  v19 = a1;
  *(_QWORD *)v16 = Environment.init<A>(_:)(v17, v17, v18);
  v16[8] = v20 & 1;
  v21 = (_QWORD *)((char *)v8 + v6[6]);
  v22 = type metadata accessor for GoalDaysModel(0);
  v23 = sub_1000083D8(&qword_1008252D8, type metadata accessor for GoalDaysModel, (uint64_t)&unk_10062B8A4);
  *v21 = ObservedObject.init(wrappedValue:)(v19, v22, v23);
  v21[1] = v24;
  *((_BYTE *)v8 + v6[7]) = v31;
  *(_QWORD *)((char *)v8 + v6[8]) = v32;
  *((_BYTE *)v8 + v6[9]) = v34;
  v25 = sub_1000083D8(&qword_100833FF0, type metadata accessor for AdvancedChangeGoalView, (uint64_t)&unk_10062B200);
  View.environment<A>(_:)(v35, v6, v17, v25, v18);
  sub_100449EF4((uint64_t)v8);
  v26 = v33;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v14, v33);
  v27 = objc_allocWithZone((Class)sub_100047110(&qword_100833FF8));
  v28 = _UIHostingView.init(rootView:)(v11);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v26);
  return v28;
}

uint64_t sub_100449E94()
{
  return EnvironmentValues.calendar.getter();
}

unint64_t sub_100449EB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836600;
  if (!qword_100836600)
  {
    v1 = objc_opt_self(FIUIFormattingManager);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100836600);
  }
  return result;
}

uint64_t sub_100449EF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AdvancedChangeGoalView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100449F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  v9 = sub_1000083D8((unint64_t *)&unk_100828320, (uint64_t (*)(uint64_t))&type metadata accessor for AAUIAwardsDataProviderSection, (uint64_t)&protocol conformance descriptor for AAUIAwardsDataProviderSection);
  v10 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v9) & 1) == 0)
  {
    ++v10;
    v7 += v8;
    if (v2 == v10)
      return 0;
  }
  return v10;
}

uint64_t sub_100449FFC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  v9 = v7 == a1 && v8 == a2;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0) & 1) != 0)
    return 0;
  v11 = 0;
  v12 = a3 + 7;
  v13 = 1;
  while (1)
  {
    if (v3 == v13)
      return 0;
    ++v11;
    v14 = *(v12 - 1);
    v15 = *v12;
    if (v14 == a1 && v15 == a2)
      break;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0);
    result = v13++;
    v12 += 2;
    if ((v17 & 1) != 0)
      return result;
  }
  return v11;
}

uint64_t sub_10044A0E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AnyRegexOutput.count.getter();
  *a1 = result;
  return result;
}

BOOL sub_10044A108(_QWORD *a1, _QWORD *a2)
{
  return *a2 == *a1;
}

uint64_t sub_10044A11C(_QWORD *a1)
{
  return Int.hashValue.getter(*a1);
}

uint64_t sub_10044A124(uint64_t a1, _QWORD *a2)
{
  return AnyRegexOutput.subscript.getter(*a2);
}

void *sub_10044A148@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  void *result;
  char v9;

  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_1004DEF10(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    sub_10002411C((__int128 *)&v5[5 * a1 + 4], a2);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = memmove(&v5[5 * a1 + 4], &v5[5 * a1 + 9], 40 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  v9 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10044A238(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_1004DEF60(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10044A314@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_1004DEF4C(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(sub_100047110(&qword_100822110) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_100045AD4(v10, a2, &qword_100822110);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack(v10);
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront(v10);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

id sub_10044A45C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Navigator()), "init");
  qword_10086AA20 = (uint64_t)result;
  return result;
}

uint64_t sub_10044A4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (**v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  void (**v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  __n128 v58;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  void (**v63)(char *, char *, uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[24];
  char v75[40];

  v72 = a3;
  v73 = a4;
  v68 = sub_100047110(&qword_100822110);
  v6 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - v10;
  v12 = sub_100047110(&qword_10082C468);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_10082C470);
  v16 = *(char **)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (void (**)(char *, char *, uint64_t))((char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v21 = (char *)&v60 - v20;
  v69 = a1;
  v70 = (unint64_t *)a2;
  v22 = sub_10044BABC(a1, a2);
  Regex<A>.init(_:)(v22, v23);
  v63 = v18;
  v64 = v8;
  v65 = v11;
  v66 = v6;
  v24 = v68;
  (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v16 + 7))(v14, 0, 1, v15);
  v62 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v16 + 4);
  v62(v21, v14, v15);
  v25 = v71;
  v26 = v71 + OBJC_IVAR___CHNavigator_urlKeys;
  swift_beginAccess(v71 + OBJC_IVAR___CHNavigator_urlKeys, v75, 0, 0);
  v27 = v69;
  v28 = v70;
  v29 = sub_100449FFC(v69, (uint64_t)v70, *(_QWORD **)v26);
  v67 = v21;
  if ((v30 & 1) == 0)
  {
    v31 = v29;
    v32 = v63;
    (*((void (**)(char *, char *, uint64_t))v16 + 2))((char *)v63, v21, v15);
    v26 = swift_allocObject(&unk_10079FC28, 32, 7);
    v33 = v25;
    v25 = v73;
    *(_QWORD *)(v26 + 16) = v72;
    *(_QWORD *)(v26 + 24) = v25;
    v28 = (unint64_t *)(v33 + OBJC_IVAR___CHNavigator_urlHandlers);
    swift_beginAccess(v33 + OBJC_IVAR___CHNavigator_urlHandlers, v74, 33, 0);
    v34 = *v28;
    swift_retain(v25);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
    *v28 = v34;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v31 & 0x8000000000000000) == 0)
        goto LABEL_4;
    }
    else
    {
      v34 = sub_1004DEF4C(v34);
      *v28 = v34;
      if ((v31 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v31 < *(_QWORD *)(v34 + 16))
        {
          v36 = v34
              + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))
              + *(_QWORD *)(v66 + 72) * v31;
          (*((void (**)(unint64_t, _QWORD, uint64_t))v16 + 5))(v36, v32, v15);
          v37 = (_QWORD *)(v36 + *(int *)(v24 + 48));
          v38 = v37[1];
          *v37 = sub_10044BD54;
          v37[1] = v26;
          swift_endAccess(v74);
          v39 = swift_release(v38);
          (*((void (**)(char *, uint64_t, __n128))v16 + 1))(v67, v15, v39);
          return 1;
        }
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v61 = v15;
  v63 = (void (**)(char *, char *, uint64_t))v16;
  swift_beginAccess(v26, v74, 33, 0);
  v31 = *(_QWORD *)v26;
  swift_bridgeObjectRetain(v28);
  v40 = swift_isUniquelyReferenced_nonNull_native(v31);
  *(_QWORD *)v26 = v31;
  v15 = v27;
  if ((v40 & 1) == 0)
  {
LABEL_18:
    v31 = (unint64_t)sub_10013F75C(0, *(_QWORD *)(v31 + 16) + 1, 1, (_QWORD *)v31);
    *(_QWORD *)v26 = v31;
  }
  v42 = *(_QWORD *)(v31 + 16);
  v41 = *(_QWORD *)(v31 + 24);
  v43 = v25;
  if (v42 >= v41 >> 1)
  {
    v31 = (unint64_t)sub_10013F75C((_QWORD *)(v41 > 1), v42 + 1, 1, (_QWORD *)v31);
    *(_QWORD *)v26 = v31;
  }
  *(_QWORD *)(v31 + 16) = v42 + 1;
  v44 = (_QWORD *)(v31 + 16 * v42);
  v44[4] = v15;
  v44[5] = v28;
  swift_endAccess(v74);
  v45 = v64;
  v46 = &v64[*(int *)(v24 + 48)];
  v47 = v61;
  v63[2](v64, v67, v61);
  v48 = v72;
  v49 = v73;
  *(_QWORD *)v46 = v72;
  *((_QWORD *)v46 + 1) = v49;
  v50 = (uint64_t)v65;
  v62(v65, v45, v47);
  v51 = (_QWORD *)(v50 + *(int *)(v24 + 48));
  v52 = swift_allocObject(&unk_10079FC00, 32, 7);
  *(_QWORD *)(v52 + 16) = v48;
  *(_QWORD *)(v52 + 24) = v49;
  *v51 = sub_10003BD74;
  v51[1] = v52;
  v53 = (unint64_t *)(v43 + OBJC_IVAR___CHNavigator_urlHandlers);
  swift_beginAccess(v43 + OBJC_IVAR___CHNavigator_urlHandlers, v74, 33, 0);
  v54 = *v53;
  swift_retain(v49);
  v55 = swift_isUniquelyReferenced_nonNull_native(v54);
  *v53 = v54;
  if ((v55 & 1) == 0)
  {
    v54 = sub_1001413B4(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
    *v53 = v54;
  }
  v57 = *(_QWORD *)(v54 + 16);
  v56 = *(_QWORD *)(v54 + 24);
  if (v57 >= v56 >> 1)
  {
    v54 = sub_1001413B4(v56 > 1, v57 + 1, 1, v54);
    *v53 = v54;
  }
  *(_QWORD *)(v54 + 16) = v57 + 1;
  sub_100045AD4(v50, v54+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v57, &qword_100822110);
  swift_endAccess(v74);
  ((void (*)(char *, uint64_t, __n128))v63[1])(v67, v47, v58);
  return 1;
}

void sub_10044AAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Class isa;
  NSURL *v5;
  void *v6;
  id v7;

  isa = Array._bridgeToObjectiveC()().super.isa;
  URL._bridgeToObjectiveC()(v5);
  v7 = v6;
  (*(void (**)(uint64_t, Class, void *))(a3 + 16))(a3, isa, v6);

}

uint64_t sub_10044AB18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)(uint64_t);
  uint64_t v33;
  __n128 v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v40[24];
  _BYTE v41[24];

  v3 = v2;
  v6 = sub_100047110(&qword_100822110);
  __chkstk_darwin(v6);
  v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v40[-v10];
  v12 = v2 + OBJC_IVAR___CHNavigator_urlKeys;
  result = swift_beginAccess(v12, v41, 0, 0);
  v14 = *(_QWORD **)v12;
  v15 = *(_QWORD *)(*(_QWORD *)v12 + 16);
  if (v15)
  {
    v16 = v14[4];
    v17 = v14[5];
    v18 = v16 == a1 && v17 == a2;
    if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, a1, a2, 0), (result & 1) != 0))
    {
      v19 = 0;
LABEL_8:
      swift_beginAccess(v12, v40, 33, 0);
      sub_10044A238(v19);
      v21 = v20;
      swift_endAccess(v40);
      swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
      swift_beginAccess(v3 + OBJC_IVAR___CHNavigator_urlHandlers, v40, 33, 0);
      sub_10044A314(v19, (uint64_t)v11);
      swift_endAccess(v40);
      v29 = *(int *)(v6 + 48);
      v30 = sub_100047110(&qword_10082C470);
      v31 = *(_QWORD *)(v30 - 8);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v8, v11, v30);
      v32 = (uint64_t (**)(uint64_t))&v8[*(int *)(v6 + 48)];
      v33 = swift_allocObject(&unk_10079FBD8, 32, 7);
      *(_OWORD *)(v33 + 16) = *(_OWORD *)&v11[v29];
      v34 = swift_release(v33);
      *v32 = sub_10044BD58;
      v32[1] = (uint64_t (*)(uint64_t))v33;
      return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v31 + 8))(v8, v30, v34);
    }
    else
    {
      v35 = v14 + 7;
      v36 = 1;
      while (v15 != v36)
      {
        v19 = v36;
        v37 = *(v35 - 1);
        v38 = *v35;
        if (v37 != a1 || v38 != a2)
        {
          result = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, a1, a2, 0);
          v36 = v19 + 1;
          v35 += 2;
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_8;
      }
    }
  }
  return result;
}

void sub_10044AD80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  __n128 v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (**v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  __n128 v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD aBlock[5];
  char *v126;
  char v127[8];

  v2 = v1;
  v105 = type metadata accessor for DispatchWorkItemFlags(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for DispatchQoS(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for URL(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v95 = v6;
  v96 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for AnyRegexOutput.Element(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (uint64_t *)((char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100047110(&qword_10082C458);
  __chkstk_darwin(v8);
  v115 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100047110(&qword_10082C460);
  v10 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v109 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10082C470);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100822110);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v110 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100834038);
  v20 = __chkstk_darwin(v19);
  v122 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v121 = (char *)&v94 - v23;
  v24 = __chkstk_darwin(v22);
  v117 = (uint64_t)&v94 - v25;
  v99 = a1;
  v118 = URL.absoluteString.getter(v24);
  v119 = v26;
  v27 = (uint64_t *)(v2 + OBJC_IVAR___CHNavigator_urlHandlers);
  swift_beginAccess(v2 + OBJC_IVAR___CHNavigator_urlHandlers, v127, 0, 0);
  v28 = *v27;
  v29 = *(_QWORD *)(*v27 + 16);
  v112 = v28;
  v30 = swift_bridgeObjectRetain(v28);
  v31 = 0;
  v124 = 0;
  v116 = v10;
  v111 = v15;
  v113 = v29;
  v114 = v17;
  while (1)
  {
    if (v31 == v29)
    {
      v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56);
      v34 = v122;
      v33(v122, 1, 1, v16, v30);
      v123 = v29;
    }
    else
    {
      v34 = v122;
      if (v31 >= *(_QWORD *)(v112 + 16))
      {
        __break(1u);
        goto LABEL_26;
      }
      sub_10044B904(v112+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v31, v122);
      v123 = v31 + 1;
      v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v33)(v34, 0, 1, v16);
    }
    v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    v36 = 1;
    if (v35(v34, 1, v16) != 1)
    {
      v37 = *(int *)(v16 + 48);
      v38 = *(void (**)(void))(v13 + 32);
      v39 = v13;
      v40 = v122;
      ((void (*)(char *, uint64_t, uint64_t))v38)(v110, v122, v12);
      v41 = swift_allocObject(&unk_10079FBB0, 32, 7);
      *(_OWORD *)(v41 + 16) = *(_OWORD *)(v40 + v37);
      v42 = v12;
      v43 = (uint64_t (**)(uint64_t))&v121[*(int *)(v16 + 48)];
      v38();
      v36 = 0;
      *v43 = sub_10044BA8C;
      v43[1] = (uint64_t (*)(uint64_t))v41;
      v12 = v42;
      v13 = v39;
      v15 = v111;
    }
    v44 = (uint64_t)v121;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v33)(v121, v36, 1, v16);
    v45 = v117;
    sub_100045AD4(v44, v117, &qword_100834038);
    if (v35(v45, 1, v16) == 1)
    {
      swift_bridgeObjectRelease(v119);
      swift_bridgeObjectRelease(v112);
      return;
    }
    v46 = (uint64_t *)(v45 + *(int *)(v16 + 48));
    v47 = *v46;
    v48 = v46[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v15, v45, v12);
    v49 = (uint64_t)v115;
    v50 = v124;
    Regex.firstMatch(in:)(v118, v119, v12);
    if (v50)
    {
      swift_errorRelease(v50);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v49, 1, 1, v120);
      goto LABEL_3;
    }
    v124 = v47;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v49, 1, v120) != 1)
      break;
LABEL_3:
    v124 = 0;
    v32 = swift_release(v48);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v32);
    sub_10001BE90(v49, &qword_10082C458);
    v17 = v114;
    v29 = v113;
    v31 = v123;
  }
  v123 = v12;
  v51 = swift_bridgeObjectRelease(v112);
  v52 = v120;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v116 + 32))(v109, v49, v120, v51);
  KeyPath = swift_getKeyPath(&unk_10063D1E0);
  Regex.Match.subscript.getter(aBlock, KeyPath, v52);
  swift_release(KeyPath);
  v55 = aBlock[0];
  if ((aBlock[0] & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    return;
  }
  v56 = _swiftEmptyArrayStorage;
  v94 = v13;
  if (aBlock[0])
  {
    v57 = 0;
    do
    {
      __chkstk_darwin(isUniquelyReferenced_nonNull_native);
      *(&v94 - 2) = v57;
      v59 = swift_getKeyPath(&unk_10063D210);
      v60 = v106;
      Regex.Match.subscript.getter(v106, v59, v120);
      v61 = swift_release(v59);
      v62 = AnyRegexOutput.Element.range.getter(v61);
      v64 = v63;
      v66 = v65;
      isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(_QWORD *, uint64_t))(v107 + 8))(v60, v108);
      if ((v66 & 1) == 0)
      {
        v67 = String.subscript.getter(v62, v64, v118, v119);
        v69 = v68;
        v72 = static String._fromSubstring(_:)(v67, v70, v71, v68);
        v74 = v73;
        swift_bridgeObjectRelease(v69);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v56);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          isUniquelyReferenced_nonNull_native = (uint64_t)sub_10013F75C(0, v56[2] + 1, 1, v56);
          v56 = (_QWORD *)isUniquelyReferenced_nonNull_native;
        }
        v76 = v56[2];
        v75 = v56[3];
        if (v76 >= v75 >> 1)
        {
          isUniquelyReferenced_nonNull_native = (uint64_t)sub_10013F75C((_QWORD *)(v75 > 1), v76 + 1, 1, v56);
          v56 = (_QWORD *)isUniquelyReferenced_nonNull_native;
        }
        v56[2] = v76 + 1;
        v58 = &v56[2 * v76];
        v58[4] = v72;
        v58[5] = v74;
      }
      ++v57;
    }
    while (v55 != v57);
  }
  swift_bridgeObjectRelease(v119);
  sub_10002FB54();
  v78 = (void *)static OS_dispatch_queue.main.getter(v77);
  v79 = v97;
  v80 = v96;
  v81 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v99, v98);
  v82 = *(unsigned __int8 *)(v79 + 80);
  v83 = (v82 + 40) & ~v82;
  v84 = (char *)swift_allocObject(&unk_10079FB60, v83 + v95, v82 | 7);
  *((_QWORD *)v84 + 2) = v124;
  *((_QWORD *)v84 + 3) = v48;
  *((_QWORD *)v84 + 4) = v56;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v84[v83], v80, v81);
  aBlock[4] = sub_10044BA48;
  v126 = v84;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_10079FB78;
  v85 = _Block_copy(aBlock);
  v86 = v126;
  swift_retain(v48);
  swift_release(v86);
  v87 = v100;
  static DispatchQoS.unspecified.getter(v88);
  aBlock[0] = _swiftEmptyArrayStorage;
  v89 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v90 = sub_100047110(&qword_100828C80);
  v91 = sub_10002FB08();
  v92 = v103;
  v93 = v105;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v90, v91, v105, v89);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v87, v92, v85);
  _Block_release(v85);
  swift_release(v48);

  (*(void (**)(char *, uint64_t))(v104 + 8))(v92, v93);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v87, v102);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v109, v120);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v111, v123);
}

id sub_10044B87C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Navigator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Navigator()
{
  return objc_opt_self(CHNavigator);
}

uint64_t sub_10044B904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100822110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10044B94C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AnyRegexOutput.count.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10044B974(uint64_t a1, _QWORD *a2)
{
  return AnyRegexOutput.subscript.getter(*a2);
}

uint64_t sub_10044B998()
{
  return 8;
}

BOOL sub_10044B9A4(_QWORD *a1, _QWORD *a2)
{
  return *a2 == *a1;
}

uint64_t sub_10044B9B8(_QWORD *a1)
{
  return Int.hashValue.getter(*a1);
}

_QWORD *sub_10044B9C0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10044B9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10044BA48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(*(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_10044BA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_10044BABC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  const char *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  const char *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  const char *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Swift::String v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  Swift::String v41;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD v47[2];

  v47[0] = a1;
  v47[1] = a2;
  v45 = 0x3A646975753ALL;
  v46 = 0xE600000000000000;
  v43 = 0xD000000000000055;
  v44 = 0x800000010069F200;
  v2 = sub_100038CA0();
  v3 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v45, &v43, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v2, v2, v2);
  v5 = v4;
  v47[0] = v3;
  v47[1] = v4;
  v45 = 0x3A657461643ALL;
  v46 = 0xE600000000000000;
  v43 = 0xD000000000000013;
  v44 = 0x800000010069F260;
  v6 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v45, &v43, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v2, v2, v2);
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)v7;
  swift_bridgeObjectRelease(v5, v7, v9, v10, v11, v12, v13, v14);
  v47[0] = v6;
  v47[1] = v8;
  v45 = 979659066;
  v46 = 0xE400000000000000;
  v43 = 0x292B645C28;
  v44 = 0xE500000000000000;
  v15 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v45, &v43, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v2, v2, v2);
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
  swift_bridgeObjectRelease(v8, v16, v18, v19, v20, v21, v22, v23);
  v47[0] = v15;
  v47[1] = v17;
  v45 = 0x3A64726F773ALL;
  v46 = 0xE600000000000000;
  v43 = 0x292B5D2D775C5B28;
  v44 = 0xE800000000000000;
  v24 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v45, &v43, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v2, v2, v2);
  v26 = (CHWorkoutDetailHeartRateTableViewCell *)v25;
  swift_bridgeObjectRelease(v17, v25, v27, v28, v29, v30, v31, v32);
  strcpy((char *)v47, "^fitnessapp://");
  HIBYTE(v47[1]) = -18;
  v33._countAndFlagsBits = v24;
  v33._object = v26;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v26, v34, v35, v36, v37, v38, v39, v40);
  v41._countAndFlagsBits = 2375471;
  v41._object = (void *)0xE300000000000000;
  String.append(_:)(v41);
  return v47[0];
}

uint64_t sub_10044BCF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044BD1C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10044BD40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10044AAB4(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_10044BD60()
{
  unint64_t result;

  result = qword_100834040;
  if (!qword_100834040)
  {
    result = swift_getWitnessTable(&unk_10063D2A8, &type metadata for TrendEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100834040);
  }
  return result;
}

unint64_t sub_10044BDA8()
{
  unint64_t result;

  result = qword_100834048[0];
  if (!qword_100834048[0])
  {
    result = swift_getWitnessTable(&unk_10063D308, &type metadata for TrendEntityQuery);
    atomic_store(result, qword_100834048);
  }
  return result;
}

uint64_t sub_10044BDF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1008340A0 + dword_1008340A0);
  v3 = (_QWORD *)swift_task_alloc(unk_1008340A4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001A48BC;
  return v5(a1);
}

uint64_t sub_10044BE50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_100834098 + dword_100834098);
  v2 = (_QWORD *)swift_task_alloc(unk_10083409C);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100100D3C;
  return v4();
}

unint64_t sub_10044BEB0()
{
  unint64_t result;

  result = qword_100834060;
  if (!qword_100834060)
  {
    result = swift_getWitnessTable(&unk_10063D330, &type metadata for TrendEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100834060);
  }
  return result;
}

unint64_t sub_10044BEFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834068;
  if (!qword_100834068)
  {
    v1 = sub_100007050(qword_100834070);
    sub_1002F096C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100834068);
  }
  return result;
}

uint64_t sub_10044BF60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10044BFD0();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10044BFD0()
{
  unint64_t result;

  result = qword_100834088;
  if (!qword_100834088)
  {
    result = swift_getWitnessTable(&unk_10063D250, &type metadata for TrendEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100834088);
  }
  return result;
}

uint64_t sub_10044C014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (__cdecl *v6)();

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v6 = (uint64_t (__cdecl *)())((char *)&dword_100834098 + dword_100834098);
  v4 = (_QWORD *)swift_task_alloc(unk_10083409C);
  v3[5] = v4;
  *v4 = v3;
  v4[1] = sub_10044C074;
  return v6();
}

uint64_t sub_10044C074(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 40);
  v5 = *v2;
  *(_QWORD *)(v5 + 48) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v5 + 56) = a1;
  return swift_task_switch(sub_10044C0F4, 0, 0);
}

uint64_t sub_10044C0F4()
{
  uint64_t v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell **v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 32);
  v4 = *(CHWorkoutDetailHeartRateTableViewCell ***)(v0 + 16);
  swift_bridgeObjectRetain(v2);
  v5 = sub_10044C17C((uint64_t)v1, v3, (uint64_t)v2);
  swift_bridgeObjectRelease(v2, v6, v7, v8, v9, v10, v11, v12);
  swift_bridgeObjectRelease(v1, v13, v14, v15, v16, v17, v18, v19);
  *v4 = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for TrendEntityQuery()
{
  return &type metadata for TrendEntityQuery;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10044C17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  unint64_t v7;
  uint64_t v8;
  char *i;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  unint64_t v26;
  char v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v40;
  unint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  uint64_t v43;
  _QWORD v46[2];
  id v47[2];
  CHWorkoutDetailHeartRateTableViewCell *v48;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return &_swiftEmptyArrayStorage;
  v4 = 0;
  v5 = a1 + 40;
  v43 = -(uint64_t)v3;
  v6 = &_swiftEmptyArrayStorage;
  v40 = a1 + 40;
  v41 = *(_QWORD *)(a1 + 16);
  do
  {
    v42 = v6;
    if (v4 <= v3)
      v7 = v3;
    else
      v7 = v4;
    v8 = -(uint64_t)v7;
    for (i = (char *)(v5 + 16 * v4++); ; i += 16)
    {
      if (v8 + v4 == 1)
        __break(1u);
      v10 = *((_QWORD *)i - 1);
      v11 = *i;
      swift_retain(v10);
      AppDependency.wrappedValue.getter(v47);
      v12 = v47[0];
      v47[0] = 0;
      v13 = objc_msgSend(v12, "wheelchairUseWithError:", v47);

      v14 = v47[0];
      if (v13)
      {
        v15 = v47[0];
        v16 = objc_msgSend(v13, "wheelchairUse");

        sub_1004E3DDC(v16 == (id)2, v11);
        v18 = v17;
        v20 = v19;
      }
      else
      {
        v21 = v47[0];
        v22 = _convertNSErrorToError(_:)(v14);

        swift_willThrow(v23);
        sub_1004E3DDC(0, v11);
        v18 = v24;
        v20 = v25;
        swift_errorRelease(v22);
      }
      v47[0] = v18;
      v47[1] = v20;
      v46[0] = a2;
      v46[1] = a3;
      v26 = sub_100038CA0();
      v27 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(v46, &type metadata for String, &type metadata for String, v26, v26);
      swift_bridgeObjectRelease(v20, v28, v29, v30, v31, v32, v33, v34);
      if ((v27 & 1) != 0)
        break;
      swift_release(v10);
      ++v4;
      if (v43 + v4 == 1)
        return v42;
    }
    v6 = v42;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v42);
    v48 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100121C08(0, *(_QWORD *)v42->cellPadding + 1, 1);
      v6 = v48;
    }
    v5 = v40;
    v37 = *(_QWORD *)v6->cellPadding;
    v36 = *(_QWORD *)v6->cellInset;
    if (v37 >= v36 >> 1)
    {
      sub_100121C08(v36 > 1, v37 + 1, 1);
      v6 = v48;
    }
    *(_QWORD *)v6->cellPadding = v37 + 1;
    v38 = (char *)v6 + 16 * v37;
    *((_QWORD *)v38 + 4) = v10;
    v38[40] = v11;
    v3 = v41;
  }
  while (v43 + v4);
  return v6;
}

uint64_t sub_10044C410(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10044C428, 0, 0);
}

uint64_t sub_10044C428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD v21[2];
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (unint64_t *)(v1 + 32);
    swift_bridgeObjectRetain(v1);
    v11 = &_swiftEmptyArrayStorage;
    do
    {
      v14 = *v3++;
      v13 = v14;
      if (v14 <= 8)
      {
        sub_100047110(&qword_1008201E0);
        v15 = type metadata accessor for AppDependencyManager(0);
        memset(v21, 0, sizeof(v21));
        v22 = 0;
        v16 = static AppDependencyManager.shared.getter(v15);
        v17 = AppDependency.__allocating_init(key:manager:)(v21, v16);
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_1001413C8(0, *(_QWORD *)v11->cellPadding + 1, 1, v11, v7, v8, v9, v10);
        v19 = *(_QWORD *)v11->cellPadding;
        v18 = *(_QWORD *)v11->cellInset;
        if (v19 >= v18 >> 1)
          v11 = sub_1001413C8((CHWorkoutDetailHeartRateTableViewCell *)(v18 > 1), v19 + 1, 1, v11, v7, v8, v9, v10);
        *(_QWORD *)v11->cellPadding = v19 + 1;
        v12 = (char *)v11 + 16 * v19;
        *((_QWORD *)v12 + 4) = v17;
        v12[40] = v13;
      }
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 16), v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(v11);
}

uint64_t sub_10044C570()
{
  return swift_task_switch(sub_10044C584, 0, 0);
}

uint64_t sub_10044C584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v1 = sub_100047110(&qword_1008216B0);
  v2 = swift_allocObject(v1, 160, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100622B10;
  sub_100047110(&qword_1008201E0);
  v3 = type metadata accessor for AppDependencyManager(0);
  v20 = 0u;
  v21 = 0u;
  v22 = 0;
  v4 = static AppDependencyManager.shared.getter(v3);
  v5 = AppDependency.__allocating_init(key:manager:)(&v20, v4);
  *(_QWORD *)(v2 + 32) = v5;
  *(_BYTE *)(v2 + 40) = 1;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v6 = static AppDependencyManager.shared.getter(v5);
  v7 = AppDependency.__allocating_init(key:manager:)(&v20, v6);
  *(_QWORD *)(v2 + 48) = v7;
  *(_BYTE *)(v2 + 56) = 5;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v8 = static AppDependencyManager.shared.getter(v7);
  v9 = AppDependency.__allocating_init(key:manager:)(&v20, v8);
  *(_QWORD *)(v2 + 64) = v9;
  *(_BYTE *)(v2 + 72) = 0;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v10 = static AppDependencyManager.shared.getter(v9);
  v11 = AppDependency.__allocating_init(key:manager:)(&v20, v10);
  *(_QWORD *)(v2 + 80) = v11;
  *(_BYTE *)(v2 + 88) = 2;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v12 = static AppDependencyManager.shared.getter(v11);
  v13 = AppDependency.__allocating_init(key:manager:)(&v20, v12);
  *(_QWORD *)(v2 + 96) = v13;
  *(_BYTE *)(v2 + 104) = 6;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v14 = static AppDependencyManager.shared.getter(v13);
  v15 = AppDependency.__allocating_init(key:manager:)(&v20, v14);
  *(_QWORD *)(v2 + 112) = v15;
  *(_BYTE *)(v2 + 120) = 4;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v16 = static AppDependencyManager.shared.getter(v15);
  v17 = AppDependency.__allocating_init(key:manager:)(&v20, v16);
  *(_QWORD *)(v2 + 128) = v17;
  *(_BYTE *)(v2 + 136) = 3;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v18 = static AppDependencyManager.shared.getter(v17);
  *(_QWORD *)(v2 + 144) = AppDependency.__allocating_init(key:manager:)(&v20, v18);
  *(_BYTE *)(v2 + 152) = 7;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_10044C784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_10044C7C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10044C7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10044C838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10044C87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10044C8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10044C904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10044C910);
}

uint64_t sub_10044C910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10044C94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044C958);
}

uint64_t sub_10044C958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CustomizeSummaryTip(uint64_t a1)
{
  uint64_t result;

  result = qword_100834100;
  if (!qword_100834100)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CustomizeSummaryTip);
  return result;
}

uint64_t sub_10044C9D4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_10044CA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x800000010069F280);
  LOWORD(v20) = 256;
  v1 = Text.init(_:tableName:bundle:comment:)(v0);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "keyColors", 0, v20);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "nonGradientTextColor");

    if (v10)
    {
      v11 = v5 & 1;
      v12 = Color.init(uiColor:)(v10);
      v21 = v12;
      Text.foregroundStyle<A>(_:)(&v21, v1, v3, v11, v7, &type metadata for Color, &protocol witness table for Color);
      sub_1000E4458(v1, v3, v11);
      swift_release(v12);
      swift_bridgeObjectRelease(v7, v13, v14, v15, v16, v17, v18, v19);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10044CB9C()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000014, 0x800000010069F2C0);
  return Text.init(_:tableName:bundle:comment:)(v0);
}

uint64_t sub_10044CBF8()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000016, 0x800000010069F2A0);
  return Text.init(_:tableName:bundle:comment:)(v0);
}

uint64_t sub_10044CC54()
{
  uint64_t v0;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("activity.rings.closed"));
  return Image.init(_internalSystemName:)(v0);
}

CHWorkoutDetailHeartRateTableViewCell *sub_10044CC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;

  v0 = sub_100047110(&qword_100834140);
  v1 = type metadata accessor for Tips.Action(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100622F90;
  v7 = v6 + v5;
  Tips.Action.init(id:perform:_:)(0xD000000000000013, 0x800000010069E470, ASFriendListDisplayMode.id.getter, 0, sub_10044CA3C, 0);
  v8 = sub_1004B2DB0((CHWorkoutDetailHeartRateTableViewCell *)v6);
  swift_setDeallocating(v6);
  swift_arrayDestroy(v7, *(_QWORD *)(v6 + 16), v1);
  swift_deallocClassInstance(v6, 32, 7);
  return v8;
}

uint64_t sub_10044CD70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10044CDE0((unint64_t *)&unk_100832438, (uint64_t)&unk_10063D40C);
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10044CDBC()
{
  return sub_10044CDE0(&qword_100834138, (uint64_t)&unk_10063D3D4);
}

uint64_t sub_10044CDE0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CustomizeSummaryTip(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for NextMultisportLegHintView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for NextMultisportLegHintView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for NextMultisportLegHintView(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for NextMultisportLegHintView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NextMultisportLegHintView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NextMultisportLegHintView()
{
  return &type metadata for NextMultisportLegHintView;
}

uint64_t sub_10044CFA8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B776C, 1);
}

uint64_t sub_10044CFB8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  unint64_t v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t result;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  Swift::String v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  unint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;

  v2 = type metadata accessor for LocalizationFeature(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v6 = a1;
  v7 = objc_msgSend(v6, "effectiveTypeIdentifier");
  if (v7 == (id)13)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
    v8 = 0xEF454B49425F5452;
    goto LABEL_9;
  }
  if (v7 == (id)46)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
    v8 = 0xEF4D4957535F5452;
LABEL_9:
    v10 = static Localization.workoutUILocalizedString(_:feature:)(0x4F505349544C554DLL, v8, v5);
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v41 = v10;
    v42 = v12;
    v13 = sub_100038CA0();
    v9 = StringProtocol.localizedCapitalized.getter(&type metadata for String, v13);
    swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);

    return v9;
  }
  if (v7 == (id)37)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
    v8 = 0xEE004E55525F5452;
    goto LABEL_9;
  }
  v41 = 0;
  v42 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(v42, v22, v23, v24, v25, v26, v27, v28);
  v41 = 0xD00000000000001CLL;
  v42 = (CHWorkoutDetailHeartRateTableViewCell *)0x800000010069F340;
  v29 = objc_msgSend(v6, "description");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  v33._countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v41, v42, "FitnessApp/NextMultisportLegHintView.swift", 42, 2, 29, 0);
  __break(1u);
  return result;
}

uint64_t sub_10044D22C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t result;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int16 v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  NSString v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int16 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  __int128 v89;
  __int128 v90;
  _BYTE v91[32];
  __int128 v92;
  __int128 v93;
  __int16 v94;
  char v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int16 v102;
  char v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  unsigned __int8 v108;
  __int128 v109;
  __int128 v110;
  unsigned __int8 v111;

  if (!a1)
    goto LABEL_6;
  v8 = a1;
  v9 = objc_msgSend(v8, "symbolName");
  if (!v9)
  {

LABEL_6:
    v38 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, 0, 0);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    sub_100340070(1, v41, v43, (uint64_t)&v104, v44, v45);
    v89 = v104;
    v90 = v105;
    *(_QWORD *)v91 = v106;
    *(_OWORD *)&v91[8] = v107;
    *(_QWORD *)&v91[24] = v108;
    v92 = v109;
    v93 = v110;
    v94 = v111;
    v95 = 1;
    v46 = sub_100047110(&qword_100834148);
    v47 = sub_100047110(&qword_100834150);
    v48 = sub_10044DA04();
    v49 = sub_10044DA78(&qword_100834170, &qword_100834150);
    result = _ConditionalContent<>.init(storage:)(&v89, v46, v47, v48, v49);
    v51 = v96;
    v52 = v97;
    v53 = v98;
    v54 = v99;
    v55 = v100;
    v56 = v101;
    v57 = v102;
    v58 = v103;
    goto LABEL_12;
  }
  v10 = v9;
  v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v86 = v11;

  v88 = v8;
  if (a2 <= 1)
  {
    v59 = sub_10044CFB8(a1);
    v61 = v60;
    v62 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v63 = String._bridgeToObjectiveC()();
    v64 = objc_msgSend(v62, "localizedStringForKey:value:table:", v63, 0, 0);

    v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v67 = v66;

    v68 = swift_allocObject(&unk_10079FE58, 56, 7);
    *(_QWORD *)(v68 + 16) = a1;
    *(_QWORD *)(v68 + 24) = a2;
    *(double *)(v68 + 32) = a4;
    *(_QWORD *)(v68 + 40) = v84;
    *(_QWORD *)(v68 + 48) = v86;
    v69 = v8;
    sub_1004B46D4(&v104, v59, v61, v65, v67, 0, sub_10044DABC, v68);
    v89 = v104;
    v90 = v105;
    *(_QWORD *)v91 = v106;
    *(_OWORD *)&v91[8] = v107;
    *(_QWORD *)&v91[24] = v108;
    v92 = v109;
    v93 = v110;
    LOBYTE(v94) = v111;
    HIBYTE(v94) = 1;
  }
  else
  {
    v12 = (void *)objc_opt_self(NSBundle);
    v13 = objc_msgSend(v12, "mainBundle");
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = sub_100047110((uint64_t *)&unk_100827460);
    v20 = swift_allocObject(v19, 72, 7);
    *(_OWORD *)(v20 + 16) = xmmword_100622F90;
    *(_QWORD *)(v20 + 56) = &type metadata for Int;
    *(_QWORD *)(v20 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v20 + 32) = a2 - 1;
    v21 = String.init(format:_:)(v16, v18, v20, (__n128)xmmword_100622F90);
    v23 = v22;
    swift_bridgeObjectRelease(v18, v22, v24, v25, v26, v27, v28, v29);
    v30 = objc_msgSend(v12, "mainBundle");
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36 = swift_allocObject(&unk_10079FE80, 56, 7);
    *(_QWORD *)(v36 + 16) = a1;
    *(_QWORD *)(v36 + 24) = a2;
    *(double *)(v36 + 32) = a4;
    *(_QWORD *)(v36 + 40) = v84;
    *(_QWORD *)(v36 + 48) = v86;
    v37 = v8;
    sub_1004B46D4(&v104, v21, v23, v33, v35, 1, sub_10044DABC, v36);
    v89 = v104;
    v90 = v105;
    *(_QWORD *)v91 = v106;
    *(_OWORD *)&v91[8] = v107;
    *(_QWORD *)&v91[24] = v108;
    v92 = v109;
    v93 = v110;
    v94 = v111;
  }
  v70 = sub_100047110(&qword_100834168);
  v71 = sub_10044DA78(&qword_100834160, &qword_100834168);
  _ConditionalContent<>.init(storage:)(&v89, v70, v70, v71, v71);
  v72 = v96;
  v73 = v97;
  v74 = v98;
  v80 = *((_QWORD *)&v101 + 1);
  v81 = v101;
  v82 = *((_QWORD *)&v100 + 1);
  v83 = v100;
  if (HIBYTE(v102))
    v75 = 256;
  else
    v75 = 0;
  v89 = v96;
  v90 = v97;
  *(_OWORD *)v91 = v98;
  *(_OWORD *)&v91[16] = v99;
  v92 = v100;
  v93 = v101;
  v94 = v75 | v102;
  v95 = 0;
  v85 = *((_QWORD *)&v99 + 1);
  v87 = v99;
  sub_10044DAC0(v96, *((uint64_t *)&v96 + 1), v97, *((uint64_t *)&v97 + 1), v98, *((uint64_t *)&v98 + 1), v99, *((uint64_t *)&v99 + 1), v100, *((uint64_t *)&v100 + 1), v101, *((uint64_t *)&v101 + 1));
  v76 = sub_100047110(&qword_100834148);
  v77 = sub_100047110(&qword_100834150);
  v78 = sub_10044DA04();
  v79 = sub_10044DA78(&qword_100834170, &qword_100834150);
  _ConditionalContent<>.init(storage:)(&v89, v76, v77, v78, v79);

  result = sub_10044DAF4(v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v87, v85, v83, v82, v81, v80);
  v51 = v96;
  v52 = v97;
  v53 = v98;
  v54 = v99;
  v55 = v100;
  v56 = v101;
  v57 = v102;
  v58 = v103;
LABEL_12:
  *(_OWORD *)a3 = v51;
  *(_OWORD *)(a3 + 16) = v52;
  *(_OWORD *)(a3 + 32) = v53;
  *(_OWORD *)(a3 + 48) = v54;
  *(_OWORD *)(a3 + 64) = v55;
  *(_OWORD *)(a3 + 80) = v56;
  *(_WORD *)(a3 + 96) = v57;
  *(_BYTE *)(a3 + 98) = v58;
  return result;
}

uint64_t sub_10044D91C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v8 = type metadata accessor for Font.PrivateDesign(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  v12 = Image.init(_internalSystemName:)(a1);
  v13 = static Font.Weight.semibold.getter(v12);
  static Font.PrivateDesign.compactRounded.getter();
  v14 = static Font.system(size:weight:design:)(v11, a4, v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  result = swift_getKeyPath(&unk_10063D4F0);
  *a3 = v12;
  a3[1] = result;
  a3[2] = v14;
  return result;
}

uint64_t sub_10044D9F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10044D22C(*(void **)v1, *(_QWORD *)(v1 + 8), a1, *(double *)(v1 + 16));
}

unint64_t sub_10044DA04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834158;
  if (!qword_100834158)
  {
    v1 = sub_100007050(&qword_100834148);
    sub_10044DA78(&qword_100834160, &qword_100834168);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834158);
  }
  return result;
}

uint64_t sub_10044DA78(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100007050(a2);
    result = swift_getWitnessTable(&unk_100636388, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10044DAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  swift_bridgeObjectRetain(a10);
  swift_bridgeObjectRetain(a12);
  return swift_retain(a7);
}

uint64_t sub_10044DAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  swift_release(a7);
  swift_bridgeObjectRelease(a12);
  return swift_bridgeObjectRelease(a10);
}

uint64_t sub_10044DB2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10044DB58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10044D91C(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1, *(double *)(v1 + 32));
}

unint64_t sub_10044DB84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834178;
  if (!qword_100834178)
  {
    v1 = sub_100007050(&qword_100834180);
    sub_10044DA04();
    sub_10044DA78(&qword_100834170, &qword_100834150);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834178);
  }
  return result;
}

id sub_10044DDC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotificationConsentController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NotificationConsentController()
{
  return objc_opt_self(CHNotificationConsentController);
}

uint64_t sub_10044DE10()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044DE3C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

int32x4_t *sub_10044DE60(unsigned int a1, unint64_t a2)
{
  int32x4_t *result;
  unsigned int *v5;
  unint64_t v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = (int32x4_t *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (!a2)
    return (int32x4_t *)_swiftEmptyArrayStorage;
  result = (int32x4_t *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, &type metadata for Int32);
  result[1].i64[0] = a2;
  v5 = (unsigned int *)&result[2];
  if (a2 < 8)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = vdupq_n_s32(a1);
  v8 = result + 3;
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

_QWORD *sub_10044DF48(unint64_t a1, double a2)
{
  _QWORD *result;
  double *v4;
  unint64_t v5;
  double v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (!a1)
    return _swiftEmptyArrayStorage;
  result = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, &type metadata for Double);
  result[2] = a1;
  v4 = (double *)(result + 4);
  if (a1 < 4)
  {
    v5 = 0;
    v6 = a2;
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 = a2;
  v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v8 = (int64x2_t *)(result + 6);
  v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

void sub_10044E038(__CLPK_integer *a1, __CLPK_doublereal **a2, CHWorkoutDetailHeartRateTableViewCell **a3, __CLPK_integer *a4, _QWORD **a5)
{
  __CLPK_doublereal *v10;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  __CLPK_doublereal *v25;
  char v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  char v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  char v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;

  v10 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
  *a2 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v10 = (__CLPK_doublereal *)sub_10003D454(0, *((_QWORD *)v10 + 2), 0, v10);
  *a2 = v10;
  v12 = *a3;
  swift_bridgeObjectRetain(v10);
  v13 = swift_isUniquelyReferenced_nonNull_native(v12);
  *a3 = v12;
  if ((v13 & 1) == 0)
    v12 = sub_1001414D4(0, *(_QWORD *)v12->cellPadding, 0, v12, v14, v15, v16, v17);
  *a3 = v12;
  dgetrf_(a1, a1, v10 + 4, a1, (__CLPK_integer *)&v12[1], a4);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v10, v18, v19, v20, v21, v22, v23, v24);
  v25 = *a2;
  v26 = swift_isUniquelyReferenced_nonNull_native(*a2);
  *a2 = v25;
  if ((v26 & 1) == 0)
    v25 = (__CLPK_doublereal *)sub_10003D454(0, *((_QWORD *)v25 + 2), 0, v25);
  *a2 = v25;
  v27 = *a3;
  swift_bridgeObjectRetain(v25);
  v28 = swift_isUniquelyReferenced_nonNull_native(v27);
  *a3 = v27;
  if ((v28 & 1) == 0)
    v27 = sub_1001414D4(0, *(_QWORD *)v27->cellPadding, 0, v27, v29, v30, v31, v32);
  *a3 = v27;
  v33 = *a5;
  swift_bridgeObjectRetain(v27);
  v34 = swift_isUniquelyReferenced_nonNull_native(v33);
  *a5 = v33;
  if ((v34 & 1) == 0)
    v33 = sub_10003D454(0, v33[2], 0, v33);
  *a5 = v33;
  dgetri_(a1, v25 + 4, a1, (__CLPK_integer *)&v27[1], (__CLPK_doublereal *)v33 + 4, a1, a4);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v25, v35, v36, v37, v38, v39, v40, v41);
  swift_bridgeObjectRelease(v27, v42, v43, v44, v45, v46, v47, v48);
}

uint64_t type metadata accessor for SplineInterpolationCalculator()
{
  return objc_opt_self(_TtC10FitnessApp29SplineInterpolationCalculator);
}

CHWorkoutDetailHeartRateTableViewCell *sub_10044E20C(uint64_t a1)
{
  double v1;
  unint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __CLPK_integer v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  int32x4_t *v30;
  __CLPK_integer v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;

  v32 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
  v1 = sqrt((double)*(uint64_t *)(a1 + 16));
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if (v1 >= 2147483650.0)
    goto LABEL_7;
  v31 = (int)v1;
  v2 = (int)v1;
  swift_bridgeObjectRetain(a1);
  v30 = sub_10044DE60(0, v2);
  v29 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10044DF48(v2, 0.0);
  v28 = 0;
  sub_10044E038(&v31, (__CLPK_doublereal **)&v32, (CHWorkoutDetailHeartRateTableViewCell **)&v30, &v28, (_QWORD **)&v29);
  v3 = v32;
  v4 = v29;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)v30;
  swift_bridgeObjectRelease(v3, v13, v14, v15, v16, v17, v18, v19);
  swift_bridgeObjectRelease(v12, v20, v21, v22, v23, v24, v25, v26);
  return v3;
}

uint64_t sub_10044E330(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;

  v1 = a1 * a1;
  if ((unsigned __int128)(a1 * (__int128)a1) >> 64 != (a1 * a1) >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    if (v1)
    {
      v3 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1 * a1, &type metadata for Double);
      v3[2] = v1;
      bzero(v3 + 4, 8 * v1);
      if ((a1 & 0x8000000000000000) == 0)
      {
LABEL_5:
        if (!a1)
          return (uint64_t)v3;
        v4 = 0;
        v5 = v3 + 4;
        while (1)
        {
          v6 = v4 * a1;
          if ((unsigned __int128)(v4 * (__int128)a1) >> 64 != (v4 * a1) >> 63)
            goto LABEL_22;
          v7 = __OFADD__(v6, v4);
          v8 = v6 + v4;
          if (v7)
            goto LABEL_23;
          if ((v8 & 0x8000000000000000) != 0)
            goto LABEL_24;
          v9 = v3[2];
          if (v8 >= v9)
            goto LABEL_25;
          v5[v8] = 0x4010000000000000;
          if (v8)
          {
            if (v8 - 1 >= v9)
              goto LABEL_26;
            v5[v8 - 1] = 0x3FF0000000000000;
          }
          v10 = v3[2];
          if ((uint64_t)v8 < (uint64_t)(v10 - 1))
          {
            v11 = v8 + 1;
            if (v11 >= v10)
            {
              __break(1u);
              return (uint64_t)v3;
            }
            v5[v11] = 0x3FF0000000000000;
          }
          if (a1 == ++v4)
            return (uint64_t)v3;
        }
      }
    }
    else
    {
      v3 = _swiftEmptyArrayStorage;
      if ((a1 & 0x8000000000000000) == 0)
        goto LABEL_5;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_28:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10044E498(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v19;
  unint64_t inited;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float64x2_t v25;
  uint64_t v26;
  float64x2_t v27;
  unint64_t v28;
  _QWORD *v29;
  __n128 v30;
  double *v31;
  uint64_t *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  int64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *isUniquelyReferenced_nonNull_native;
  const char *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  unint64_t v47;
  unint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  int64_t v50;
  unint64_t v51;
  unint64_t v52;
  int64_t v53;
  const char *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  int64_t v75;
  const char *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  const char *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  const char *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  const char *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  CHWorkoutDetailHeartRateTableViewCell *v115;
  const char *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  int64_t v126;
  uint64_t v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  int64_t v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  const char *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  uint64_t v143;
  CHWorkoutDetailHeartRateTableViewCell *v144;
  const char *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  const char *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  int64_t v163;
  uint64_t v164;
  CHWorkoutDetailHeartRateTableViewCell *v165;
  const char *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  uint64_t v173;
  const char *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  SEL v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  id v191;
  SEL v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  CHWorkoutDetailHeartRateTableViewCell *result;
  _QWORD *v200;
  int __P;
  _QWORD *v202;
  unint64_t v203;
  float64x2_t v204;
  float64x2_t v205;
  CHWorkoutDetailHeartRateTableViewCell *v206;
  float64x2_t v207;
  unint64_t v208;
  float64x2_t v209;
  CHWorkoutDetailHeartRateTableViewCell *v210;
  void *__src[2];
  char *__srca;
  char *__srcb;
  void *__srcc[2];
  void *__srcd[2];
  char v216[48];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = v1 - 4;
  if (v1 < 4)
    return &_swiftEmptyArrayStorage;
  v5 = (CHWorkoutDetailHeartRateTableViewCell *)(v1 - 2);
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10044E330(v1 - 2);
  v7 = sub_10044E20C((uint64_t)v6);
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  __asm { FMOV            V1.2D, #6.0 }
  v209 = vmulq_f64(*(float64x2_t *)(a1 + 32 + 16 * (v1 - 2)), _Q1);
  *(float64x2_t *)__src = _Q1;
  v207 = *(float64x2_t *)(a1 + 32 + 16 * v1 - 16);
  v19 = sub_100047110(&qword_100821560);
  v204 = vsubq_f64(vmulq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)__src), *(float64x2_t *)(a1 + 32));
  inited = swift_initStackObject(v19, v216);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(float64x2_t *)(inited + 32) = v204;
  if (v1 == 4)
  {
    v21 = 1;
    v22 = 2;
  }
  else
  {
    v23 = 0;
    v24 = a1 + 64;
    v25 = *(float64x2_t *)__src;
    do
    {
      v26 = v23 + 1;
      v27 = *(float64x2_t *)(v24 + 16 * v23);
      v28 = *(_QWORD *)(inited + 24);
      if (v23 + 1 >= v28 >> 1)
      {
        v205 = *(float64x2_t *)(v24 + 16 * v23);
        v29 = sub_1001415E0((_QWORD *)(v28 > 1), v23 + 2, 1, (_QWORD *)inited);
        v27 = v205;
        v25 = *(float64x2_t *)__src;
        inited = (unint64_t)v29;
      }
      *(_QWORD *)(inited + 16) = v23 + 2;
      *(float64x2_t *)(inited + 16 * v23++ + 48) = vmulq_f64(v27, v25);
    }
    while (v2 != v26);
    v22 = *(_QWORD *)(inited + 24);
    v21 = v26 + 1;
  }
  v30 = (__n128)vsubq_f64(v209, v207);
  v31 = (double *)(v21 + 1);
  if (v21 >= v22 >> 1)
  {
LABEL_111:
    *(__n128 *)__srcd = v30;
    v200 = sub_1001415E0((_QWORD *)(v22 > 1), (int64_t)v31, 1, (_QWORD *)inited);
    v30 = *(__n128 *)__srcd;
    inited = (unint64_t)v200;
  }
  *(_QWORD *)(inited + 16) = v31;
  *(__n128 *)(inited + 16 * v21 + 32) = v30;
  v30 = swift_bridgeObjectRetain(inited);
  v32 = (uint64_t *)(inited + 40);
  v21 = (uint64_t)&_swiftEmptyArrayStorage;
  v33 = &_swiftEmptyArrayStorage;
  do
  {
    v34 = *(_QWORD *)v33->cellPadding;
    v35 = v34 + 2;
    if (__OFADD__(v34, 2))
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    v37 = *(v32 - 1);
    v36 = *v32;
    swift_bridgeObjectRetain(v33);
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v38);
    if ((_DWORD)isUniquelyReferenced_nonNull_native
      && (v47 = *(_QWORD *)v33->cellInset, v48 = v47 >> 1, (uint64_t)(v47 >> 1) >= v35))
    {
      v49 = v33;
    }
    else
    {
      if (v34 <= v35)
        v50 = v34 + 2;
      else
        v50 = v34;
      v49 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10003D454(isUniquelyReferenced_nonNull_native, v50, 1, v33);
      v47 = *(_QWORD *)v49->cellInset;
      v48 = v47 >> 1;
    }
    v51 = *(_QWORD *)v49->cellPadding;
    v52 = v51 + 1;
    if (v48 <= v51)
    {
      v49 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10003D454((_QWORD *)(v47 > 1), v51 + 1, 1, v49);
      v47 = *(_QWORD *)v49->cellInset;
      v48 = v47 >> 1;
    }
    *(_QWORD *)v49->cellPadding = v52;
    *((_QWORD *)&v49[1].super.super.super.super.isa + v51) = v37;
    v53 = v51 + 2;
    if ((uint64_t)v48 < v53)
      v49 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10003D454((_QWORD *)(v47 > 1), v53, 1, v49);
    *(_QWORD *)v49->cellPadding = v53;
    *((_QWORD *)&v49[1].super.super.super.super.isa + v52) = v36;
    swift_bridgeObjectRelease(v33, v40, v41, v42, v43, v44, v45, v46);
    v32 += 2;
    v33 = v49;
    v31 = (double *)((char *)v31 - 1);
  }
  while (v31);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)inited, v54, v55, v56, v57, v58, v59, v60);
  v31 = (double *)sub_10044DF48(*(_QWORD *)v49->cellPadding, 0.0);
  if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
    v31 = (double *)sub_10003D454(0, *((_QWORD *)v31 + 2), 0, v31);
  vDSP_mmulD((const double *)&v7[1], 1, (const double *)&v49[1], 1, v31 + 4, 1, (vDSP_Length)v5, 2uLL, (vDSP_Length)v5);
  swift_bridgeObjectRelease(v7, v61, v62, v63, v64, v65, v66, v67);
  swift_bridgeObjectRelease(v49, v68, v69, v70, v71, v72, v73, v74);
  v7 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v31 + 2);
  if (v7)
    v75 = ((unint64_t)&v7[-1].cellInset[7] >> 1) + 1;
  else
    v75 = 0;
  swift_bridgeObjectRetain(v31);
  sub_100121C24(0, v75, 0);
  v5 = &_swiftEmptyArrayStorage;
  if (v7)
  {
    v83 = (char *)(v31 + 4);
    v84 = 0;
    v85 = 0;
    v208 = ((unint64_t)&v7->super.super.super.super.isa + 1) & 0xFFFFFFFFFFFFFFFELL;
    v21 = 2;
    v202 = v31 + 4;
    v203 = inited;
    v206 = v7;
    while (1)
    {
      if ((uint64_t)v7 >= v21)
        inited = v21;
      else
        inited = (unint64_t)v7;
      v22 = v208;
      if (v208 == v85)
        goto LABEL_106;
      v22 = v85 + 2;
      if ((uint64_t)v7 >= (uint64_t)(v85 + 2))
        v86 = v85 + 2;
      else
        v86 = (unint64_t)v7;
      if (v86 < v85)
        goto LABEL_107;
      v22 = *((_QWORD *)v31 + 2);
      if (v22 < v85 || v22 < v86)
        goto LABEL_108;
      __srca = v83;
      v210 = v5;
      v88 = type metadata accessor for __ContiguousArrayStorageBase(0);
      swift_bridgeObjectRetain(v31);
      v90 = swift_unknownObjectRetain_n(v89, 2);
      v91 = (CHWorkoutDetailHeartRateTableViewCell *)swift_dynamicCastClass(v90, v88);
      if (!v91)
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v92, v93, v94, v95, v96, v97, v98);
        v91 = &_swiftEmptyArrayStorage;
      }
      v99 = inited + v84;
      v100 = *(_QWORD *)v91->cellPadding;
      swift_release(v91);
      if (v99 == v100)
      {
        v115 = (CHWorkoutDetailHeartRateTableViewCell *)swift_dynamicCastClass(v31, v88);
        v5 = v210;
        v7 = v206;
        if (!v115)
        {
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v108, v109, v110, v111, v112, v113, v114);
          v115 = &_swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v101, v102, v103, v104, v105, v106, v107);
        v115 = &_swiftEmptyArrayStorage;
        v5 = v210;
        v7 = v206;
        if (v85 != v86)
        {
          if (v99 < 1)
          {
            v115 = &_swiftEmptyArrayStorage;
            if (v99 < 0)
            {
LABEL_112:
              LOBYTE(__P) = 2;
              result = (CHWorkoutDetailHeartRateTableViewCell *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, __P, 1090, 0);
LABEL_114:
              __break(1u);
              return result;
            }
          }
          else
          {
            v125 = sub_100047110(&qword_100821568);
            v115 = (CHWorkoutDetailHeartRateTableViewCell *)swift_allocObject(v125, 8 * v99 + 32, 7);
            v126 = j__malloc_size(v115);
            v127 = v126 - 32;
            if (v126 < 32)
              v127 = v126 - 25;
            *(_QWORD *)v115->cellPadding = v99;
            *(_QWORD *)v115->cellInset = 2 * (v127 >> 3);
          }
          v128 = v115 + 1;
          if (__srca < (char *)&v115[1].super.super.super.super.isa + 8 * v99
            && v128 < (CHWorkoutDetailHeartRateTableViewCell *)&v202[v86])
          {
LABEL_113:
            LOBYTE(__P) = 2;
            result = (CHWorkoutDetailHeartRateTableViewCell *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, __P, 1092, 0);
            goto LABEL_114;
          }
          memcpy(v128, __srca, 8 * v99);
        }
      }
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v108, v109, v110, v111, v112, v113, v114);
      v124 = *(_QWORD *)v5->cellPadding;
      v123 = *(_QWORD *)v5->cellInset;
      if (v124 >= v123 >> 1)
        sub_100121C24(v123 > 1, v124 + 1, 1);
      v22 = (unint64_t)v5 + 8 * v124;
      v83 = __srca + 16;
      *(_QWORD *)v5->cellPadding = v124 + 1;
      *(_QWORD *)(v22 + 32) = v115;
      v21 += 2;
      v84 -= 2;
      v85 += 2;
      if (!--v75)
      {
        if (v85 < (unint64_t)v7)
        {
          v129 = (CHWorkoutDetailHeartRateTableViewCell *)(v85 + 2);
          v21 = -(uint64_t)v85;
          while (1)
          {
            v130 = (int64_t)((uint64_t)v7 >= (uint64_t)v129 ? v129 : v7);
            inited = (unint64_t)&v129[-1].cellInset[6];
            if (v130 < (uint64_t)&v129[-1].cellInset[6])
              goto LABEL_109;
            v22 = *((_QWORD *)v31 + 2);
            v131 = v22 < inited || (uint64_t)v22 < v130;
            if (v131)
              goto LABEL_110;
            __srcb = v83;
            v132 = type metadata accessor for __ContiguousArrayStorageBase(0);
            swift_bridgeObjectRetain(v31);
            v134 = swift_unknownObjectRetain_n(v133, 2);
            v135 = (CHWorkoutDetailHeartRateTableViewCell *)swift_dynamicCastClass(v134, v132);
            if (!v135)
            {
              swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v136, v137, v138, v139, v140, v141, v142);
              v135 = &_swiftEmptyArrayStorage;
            }
            v143 = v130 + v21;
            v144 = *(CHWorkoutDetailHeartRateTableViewCell **)v135->cellPadding;
            swift_release(v135);
            if ((CHWorkoutDetailHeartRateTableViewCell *)(v130 + v21) == v144)
            {
              v159 = (CHWorkoutDetailHeartRateTableViewCell *)swift_dynamicCastClass(v31, v132);
              inited = v203;
              if (!v159)
              {
                swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v152, v153, v154, v155, v156, v157, v158);
                v159 = &_swiftEmptyArrayStorage;
              }
            }
            else
            {
              swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v145, v146, v147, v148, v149, v150, v151);
              v159 = &_swiftEmptyArrayStorage;
              _ZF = inited == v130;
              inited = v203;
              if (!_ZF)
              {
                if (v143 < 1)
                {
                  if (v143 < 0)
                    goto LABEL_112;
                }
                else
                {
                  v162 = sub_100047110(&qword_100821568);
                  v159 = (CHWorkoutDetailHeartRateTableViewCell *)swift_allocObject(v162, 8 * v143 + 32, 7);
                  v163 = j__malloc_size(v159);
                  v164 = v163 - 32;
                  if (v163 < 32)
                    v164 = v163 - 25;
                  *(_QWORD *)v159->cellPadding = v143;
                  *(_QWORD *)v159->cellInset = 2 * (v164 >> 3);
                }
                v165 = v159 + 1;
                if (__srcb < (char *)&v159[1].super.super.super.super.isa + 8 * v143
                  && v165 < (CHWorkoutDetailHeartRateTableViewCell *)&v202[v130])
                {
                  goto LABEL_113;
                }
                memcpy(v165, __srcb, 8 * v143);
              }
            }
            swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v152, v153, v154, v155, v156, v157, v158);
            v161 = *(_QWORD *)v5->cellPadding;
            v160 = *(_QWORD *)v5->cellInset;
            if (v161 >= v160 >> 1)
              sub_100121C24(v160 > 1, v161 + 1, 1);
            *(_QWORD *)v5->cellPadding = v161 + 1;
            *((_QWORD *)&v5[1].super.super.super.super.isa + v161) = v159;
            v22 = (unint64_t)&v129->super.super.super.super.isa + 2;
            v21 -= 2;
            v83 = __srcb + 16;
            v131 = (uint64_t)v129 < (uint64_t)v7;
            v129 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v129 + 2);
            if (!v131)
              goto LABEL_91;
          }
        }
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v116, v117, v118, v119, v120, v121, v122);
        inited = v203;
        v173 = *(_QWORD *)v5->cellPadding;
        if (v173)
          goto LABEL_92;
LABEL_102:
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v166, v167, v168, v169, v170, v171, v172);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)inited, v192, v193, v194, v195, v196, v197, v198);
        v3 = &_swiftEmptyArrayStorage;
        goto LABEL_103;
      }
    }
  }
LABEL_91:
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v76, v77, v78, v79, v80, v81, v82);
  v173 = *(_QWORD *)v5->cellPadding;
  if (!v173)
    goto LABEL_102;
LABEL_92:
  swift_retain(v5);
  v181 = 0;
  v3 = &_swiftEmptyArrayStorage;
  do
  {
    v182 = *((_QWORD *)&v5[1].super.super.super.super.isa + v181);
    if (*(_QWORD *)(v182 + 16) == 2)
    {
      *(_OWORD *)__srcc = *(_OWORD *)(v182 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001415E0(0, *(_QWORD *)v3->cellPadding + 1, 1, v3);
      v184 = *(_QWORD *)v3->cellPadding;
      v183 = *(_QWORD *)v3->cellInset;
      if (v184 >= v183 >> 1)
        v3 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001415E0((_QWORD *)(v183 > 1), v184 + 1, 1, v3);
      *(_QWORD *)v3->cellPadding = v184 + 1;
      *((_OWORD *)&v3[1].super.super.super.super.isa + v184) = *(_OWORD *)__srcc;
    }
    ++v181;
  }
  while (v173 != v181);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v174, v175, v176, v177, v178, v179, v180);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)inited, v185, v186, v187, v188, v189, v190, v191);
  swift_release(v5);
LABEL_103:
  swift_release(v5);
  return v3;
}

void sub_10044ED74(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  float64x2_t *v7;
  unint64_t v8;
  int64_t v9;
  float64x2_t v10;
  unint64_t v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  uint64_t inited;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  const char *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  __int128 v70;
  __int128 v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  int64_t v79;
  float64x2_t v80;
  __int128 v81;
  float64x2_t v82;
  __int128 v83;
  _BYTE v84[48];
  _QWORD v85[2];

  v5 = *(_QWORD *)a1->cellPadding;
  v6 = &_swiftEmptyArrayStorage;
  if (v5)
  {
    v85[0] = &_swiftEmptyArrayStorage;
    v2 = v85;
    sub_100121C50(0, v5, 0);
    v6 = (CHWorkoutDetailHeartRateTableViewCell *)v85[0];
    v7 = (float64x2_t *)&a1[1];
    v8 = *(_QWORD *)(v85[0] + 16);
    v9 = v5;
    do
    {
      v10 = *v7;
      v85[0] = v6;
      v11 = *(_QWORD *)v6->cellInset;
      if (v8 >= v11 >> 1)
      {
        v2 = v85;
        v82 = v10;
        sub_100121C50(v11 > 1, v8 + 1, 1);
        v10 = v82;
        v6 = (CHWorkoutDetailHeartRateTableViewCell *)v85[0];
      }
      *(_QWORD *)v6->cellPadding = v8 + 1;
      *((float64x2_t *)&v6[1].super.super.super.super.isa + v8) = v10;
      ++v7;
      ++v8;
      --v9;
    }
    while (v9);
  }
  v19 = sub_10044E498((uint64_t)v6);
  if (*(_QWORD *)v19->cellPadding)
  {
    v20 = sub_100047110(&qword_100821560);
    inited = swift_initStackObject(v20, v84);
    *(_OWORD *)(inited + 16) = xmmword_100622F90;
    if (!*(_QWORD *)v6->cellPadding)
      goto LABEL_29;
    *(_OWORD *)(inited + 32) = *(_OWORD *)&v6[1].super.super.super.super.isa;
    v85[0] = inited;
    v2 = v85;
    sub_10013D500(v19);
    v29 = *(_QWORD *)v6->cellPadding;
    if (!v29)
      goto LABEL_30;
    v82 = *(float64x2_t *)&v6->cellPadding[16 * v29];
    swift_bridgeObjectRelease(v6, v22, v23, v24, v25, v26, v27, v28);
    v2 = (_QWORD *)v85[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v85[0]) & 1) == 0)
      goto LABEL_31;
    while (1)
    {
      v31 = v2[2];
      v30 = v2[3];
      if (v31 >= v30 >> 1)
        v2 = sub_1001415E0((_QWORD *)(v30 > 1), v31 + 1, 1, v2);
      v2[2] = v31 + 1;
      *(float64x2_t *)&v2[2 * v31 + 4] = v82;
      v85[0] = v2;
      v39 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
      if (!v5)
        break;
      v40 = *(double *)&a1[1].super.super.super.super.isa;
      v41 = *(double *)a1[1].heartRateController;
      swift_bridgeObjectRetain(a1);
      v79 = v5 - 1;
      if (v5 == 1)
      {
LABEL_22:
        swift_bridgeObjectRelease(a1, v42, v43, v44, v45, v46, v47, v48);
        v81 = *((_OWORD *)&a1[1].super.super.super.super.isa + v79);
        v83 = *(_OWORD *)&a1[1].super.super.super.super.isa;
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v2, v63, v64, v65, v66, v67, v68, v69);
        v71 = v81;
        v70 = v83;
        goto LABEL_26;
      }
      v49 = v2[2];
      if (v49)
      {
        if (v49 != 1)
        {
          v51 = *(double *)a1[1].cellPadding;
          v50 = *(double *)a1[1].cellInset;
          v52 = *((double *)v2 + 6);
          v54 = *((double *)v2 + 4);
          v53 = *((double *)v2 + 5);
          v55 = *((double *)v2 + 7);
          v56 = v54 * 0.666666667 + v52 * 0.333333333;
          v57 = v53 * 0.666666667 + v55 * 0.333333333;
          v58 = v54 * 0.333333333 + v52 * 0.666666667;
          v59 = v53 * 0.333333333 + v55 * 0.666666667;
          objc_msgSend(v39, "moveToPoint:", v40, v41);
          objc_msgSend(v39, "addCurveToPoint:controlPoint1:controlPoint2:", v51, v50, v56, v57, v58, v59);
          v60 = 0;
          v5 = -v5;
          v61 = 2;
          v80 = (float64x2_t)vdupq_n_s64(0x3FD5555555555555uLL);
          v82 = (float64x2_t)vdupq_n_s64(0x3FE5555555555555uLL);
          while (1)
          {
            if (v5 + v61)
            {
              v62 = v2[2];
              if (v61 - 1 >= v62)
                goto LABEL_27;
              if (v61 >= v62)
                break;
              objc_msgSend(v39, "addCurveToPoint:controlPoint1:controlPoint2:", *(double *)((char *)&a1[2].super.super.super.super.isa + v60 * 8), *(double *)&a1[2].heartRateController[v60 * 8], vaddq_f64(vmulq_f64(*(float64x2_t *)&v2[v60 + 6], v82), vmulq_f64(*(float64x2_t *)&v2[v60 + 8], v80)), vaddq_f64(vmulq_f64(*(float64x2_t *)&v2[v60 + 6], v80), vmulq_f64(*(float64x2_t *)&v2[v60 + 8], v82)));
            }
            ++v61;
            v60 += 2;
            if (v5 + v61 == 1)
              goto LABEL_22;
          }
        }
      }
      else
      {
LABEL_27:
        __break(1u);
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      v2 = sub_1001415E0(0, v2[2] + 1, 1, v2);
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v2, v32, v33, v34, v35, v36, v37, v38);

  }
  else
  {
    swift_bridgeObjectRelease(v6, v12, v13, v14, v15, v16, v17, v18);
    swift_bridgeObjectRelease(v19, v72, v73, v74, v75, v76, v77, v78);
  }
  v39 = 0;
  v70 = 0uLL;
  v71 = 0uLL;
LABEL_26:
  *(_QWORD *)a2 = v39;
  *(_OWORD *)(a2 + 8) = v70;
  *(_OWORD *)(a2 + 24) = v71;
}

ValueMetadata *type metadata accessor for SplinePoint()
{
  return &type metadata for SplinePoint;
}

ValueMetadata *type metadata accessor for DataLinkWorkoutState()
{
  return &type metadata for DataLinkWorkoutState;
}

uint64_t sub_10044F184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD v6[3];

  result = 0x657669746341;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD00000000000001ELL;
      break;
    case 2:
      result = 0x726F576E49746F4ELL;
      break;
    case 3:
      result = 0xD000000000000012;
      break;
    default:
      v6[1] = v1;
      v6[2] = v2;
      v6[0] = a1;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DataLinkWorkoutState, v6, &type metadata for DataLinkWorkoutState, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

unint64_t sub_10044F244@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_10044F2C4(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10044F274()
{
  uint64_t *v0;

  return sub_10044F184(*v0);
}

unint64_t sub_10044F280()
{
  unint64_t result;

  result = qword_100834248;
  if (!qword_100834248)
  {
    result = swift_getWitnessTable(&unk_10063D658, &type metadata for DataLinkWorkoutState);
    atomic_store(result, (unint64_t *)&qword_100834248);
  }
  return result;
}

unint64_t sub_10044F2C4(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

uint64_t sub_10044F2D4()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10044F2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457C3C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

double sub_10044F308@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *DetailsStackedChartView;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, char *, uint64_t);
  uint64_t v45;
  id v46;
  double v47;
  double v48;
  uint64_t v49;
  double result;
  id v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  __int128 v59;

  v57 = a2;
  v53 = a1;
  v9 = type metadata accessor for DayIndex(0);
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  __chkstk_darwin(v9);
  v54 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  v15 = (_QWORD *)(a5 + DetailsStackedChartView[7]);
  v58 = &_swiftEmptyArrayStorage;
  v16 = sub_100047110((uint64_t *)&unk_100827430);
  State.init(wrappedValue:)(&v59, &v58, v16);
  v17 = *((_QWORD *)&v59 + 1);
  *v15 = v59;
  v15[1] = v17;
  v18 = DetailsStackedChartView[8];
  v58 = 0;
  v19 = sub_100047110(&qword_100827DD0);
  State.init(wrappedValue:)(&v59, &v58, v19);
  *(_OWORD *)(a5 + v18) = v59;
  v20 = a5 + DetailsStackedChartView[10];
  LOBYTE(v58) = 0;
  State.init(wrappedValue:)(&v59, &v58, &type metadata for Bool);
  v21 = *((_QWORD *)&v59 + 1);
  *(_BYTE *)v20 = v59;
  *(_QWORD *)(v20 + 8) = v21;
  v22 = a5 + DetailsStackedChartView[12];
  LOBYTE(v58) = 0;
  State.init(wrappedValue:)(&v59, &v58, &type metadata for Bool);
  v23 = *((_QWORD *)&v59 + 1);
  *(_BYTE *)v22 = v59;
  *(_QWORD *)(v22 + 8) = v23;
  v24 = (_QWORD *)(a5 + DetailsStackedChartView[13]);
  v58 = &_swiftEmptyArrayStorage;
  v25 = sub_100047110(&qword_100834250);
  State.init(wrappedValue:)(&v59, &v58, v25);
  v26 = *((_QWORD *)&v59 + 1);
  *v24 = v59;
  v24[1] = v26;
  v27 = a5 + DetailsStackedChartView[14];
  LOBYTE(v58) = 0;
  State.init(wrappedValue:)(&v59, &v58, &type metadata for DayRangeForStackedLoadCharts);
  v28 = *((_QWORD *)&v59 + 1);
  *(_BYTE *)v27 = v59;
  *(_QWORD *)(v27 + 8) = v28;
  v29 = DetailsStackedChartView[15];
  *(_QWORD *)(a5 + v29) = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  v30 = a5 + DetailsStackedChartView[17];
  v31 = type metadata accessor for BalanceDataProvider(0);
  v32 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  *(_QWORD *)v30 = Environment.init<A>(_:)(v31, v31, v32);
  *(_BYTE *)(v30 + 8) = v33 & 1;
  v34 = (_QWORD *)(a5 + DetailsStackedChartView[18]);
  *v34 = swift_getKeyPath(&unk_10063D690);
  v35 = sub_100047110((uint64_t *)&unk_100832400);
  swift_storeEnumTagMultiPayload(v34, v35, 0);
  v36 = (_QWORD *)(a5 + DetailsStackedChartView[19]);
  *v36 = swift_getKeyPath(&unk_10063D6C0);
  v37 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  sub_100021CC0(a1, a5, &qword_100834258);
  *(_QWORD *)(a5 + DetailsStackedChartView[5]) = a3;
  *(_QWORD *)(a5 + DetailsStackedChartView[6]) = a4;
  v52 = a4;
  v51 = a3;
  v38 = v57;
  GregorianDayRange.dayIndexRange.getter(v51);
  v39 = v54;
  v40 = v55;
  v41 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v42 = v56;
  v41(v54, &v13[*(int *)(v11 + 36)], v56);
  sub_10001BE90((uint64_t)v13, &qword_100823530);
  v43 = a5 + DetailsStackedChartView[11];
  *(_QWORD *)(v43 + *(int *)(sub_100047110(&qword_100834260) + 28)) = 0;
  v44 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32);
  v45 = v44(v43, v39, v42);
  GregorianDayRange.dayIndexRange.getter(v45);
  v41(v39, &v13[*(int *)(v11 + 36)], v42);
  sub_10001BE90((uint64_t)v13, &qword_100823530);
  v44(a5 + DetailsStackedChartView[16], v39, v42);
  v46 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v46, "bounds");
  v48 = v47;

  v49 = type metadata accessor for GregorianDayRange(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v38, v49);
  sub_10001BE90(v53, &qword_100834258);
  result = v48 + -20.0;
  *(double *)(a5 + DetailsStackedChartView[9]) = v48 + -20.0;
  return result;
}

uint64_t type metadata accessor for LoadDetailsStackedChartView(uint64_t a1)
{
  return sub_100024334(a1, (uint64_t *)&unk_1008342C8, (uint64_t)&nominal type descriptor for LoadDetailsStackedChartView);
}

CHWorkoutDetailHeartRateTableViewCell *sub_10044F75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t DetailsStackedChartView;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  uint64_t v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  unint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  char *v58;
  unint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];
  CHWorkoutDetailHeartRateTableViewCell *v75;

  v1 = type metadata accessor for EnvironmentValues(0);
  v64 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v63 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100823550);
  __chkstk_darwin(v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SleepingSampleViewModel(0);
  v72 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v71 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v70 = (char *)&v56 - v9;
  v10 = type metadata accessor for SleepingSampleDataType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v73 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v14 = (uint64_t *)(v0 + *(int *)(DetailsStackedChartView + 52));
  v16 = *v14;
  v15 = v14[1];
  v74[0] = v16;
  v74[1] = v15;
  v17 = sub_100047110(&qword_100834450);
  State.wrappedValue.getter(&v75, v17);
  v26 = *(_QWORD *)v75->cellPadding;
  if (v26)
  {
    v67 = v0 + *(int *)(DetailsStackedChartView + 68);
    v27 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v57 = v75;
    v28 = (char *)v75 + v27;
    v29 = *(_QWORD *)(v11 + 72);
    v65 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 16);
    v66 = v29;
    v30 = &_swiftEmptyArrayStorage;
    *(_QWORD *)&v25 = 136315138;
    v60 = v25;
    v59 = 0x800000010068CB00;
    v58 = (char *)&type metadata for Any + 8;
    v31 = v72;
    v68 = v11;
    v69 = v10;
    v61 = v6;
    v62 = v1;
    v65(v73, (char *)v75 + v27, v10);
    while (1)
    {
      v39 = *(void **)v67;
      if (*(_BYTE *)(v67 + 8) == 1)
      {
        v40 = (unint64_t)v30;
        v74[0] = *(_QWORD *)v67;
        sub_10010C5D0(v39, 1);
      }
      else
      {
        sub_10010C5D0(v39, 0);
        swift_retain(v39);
        v42 = static os_log_type_t.fault.getter(v41);
        v43 = static Log.runtimeIssuesLog.getter();
        v40 = (unint64_t)v30;
        if (os_log_type_enabled(v43, v42))
        {
          v44 = swift_slowAlloc(12, -1);
          v45 = swift_slowAlloc(32, -1);
          v74[0] = v45;
          *(_DWORD *)v44 = v60;
          *(_QWORD *)(v44 + 4) = sub_10003E8EC(0xD000000000000013, v59, v74);
          _os_log_impl((void *)&_mh_execute_header, v43, v42, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v44, 0xCu);
          swift_arrayDestroy(v45, 1, v58);
          v6 = v61;
          swift_slowDealloc(v45, -1, -1);
          v46 = v44;
          v1 = v62;
          swift_slowDealloc(v46, -1, -1);
        }

        v47 = v63;
        EnvironmentValues.init()();
        swift_getAtKeyPath(v47, v39);
        sub_10010C5EC(v39, 0);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v1);
        sub_10010C5EC(v39, 0);
        v31 = v72;
        v10 = v69;
      }
      v49 = v73;
      v48 = (void *)v74[0];
      sub_1001784C0(v73, (uint64_t)v5);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v5, 1, v6) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v49, v10);
        sub_10001BE90((uint64_t)v5, &qword_100823550);
        v30 = (CHWorkoutDetailHeartRateTableViewCell *)v40;
      }
      else
      {
        v50 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v51 = v70;
        v50(v70, v5, v6);
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v71, v51, v6);
        v30 = (CHWorkoutDetailHeartRateTableViewCell *)v40;
        if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
          v30 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001415EC(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
        v53 = *(_QWORD *)v30->cellPadding;
        v52 = *(_QWORD *)v30->cellInset;
        if (v53 >= v52 >> 1)
          v30 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001415EC(v52 > 1, v53 + 1, 1, (unint64_t)v30);
        *(_QWORD *)v30->cellPadding = v53 + 1;
        v54 = (unint64_t)v30
            + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))
            + *(_QWORD *)(v72 + 72) * v53;
        v31 = v72;
        v50((char *)v54, v71, v6);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v70, v6);
        v10 = v69;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v73, v69);
      }
      v28 += v66;
      if (!--v26)
        break;
      v65(v73, v28, v10);
    }
    swift_bridgeObjectRelease(v57, v32, v33, v34, v35, v36, v37, v38);
  }
  else
  {
    swift_bridgeObjectRelease(v75, v18, v19, v20, v21, v22, v23, v24);
    return &_swiftEmptyArrayStorage;
  }
  return v30;
}

uint64_t sub_10044FC44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v25;

  v1 = type metadata accessor for WarmupProgress(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OvernightMetricsViewModel(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008347A8);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  v14 = *(id *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_10010C5D0(*(id *)v13, v15);
  v16 = sub_1003F70B8(v14, v15);
  sub_10010C5EC(v14, v15);
  v17 = sub_100171BD4();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  v18 = swift_release(v17);
  OvernightMetricsViewModel.warmupProgress.getter(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = type metadata accessor for OvernightMetricsWarmupProgress(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19) == 1)
  {
    sub_10001BE90((uint64_t)v12, &qword_1008347A8);
    v21 = 0;
  }
  else
  {
    OvernightMetricsWarmupProgress.overallProgress.getter();
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v19);
    v23 = WarmupProgress.isComplete.getter(v22);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    v21 = v23 ^ 1;
  }
  return v21 & 1;
}

uint64_t sub_10044FE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DetailsStackedChartView;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  char v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char v38;
  uint64_t v39;
  char *v40;
  id v41;
  char v42;
  char *v43;
  uint64_t KeyPath;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;

  v1 = v0;
  v57 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v57);
  v3 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GregorianDayRange(0);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DayIndex(0);
  v56 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - v11;
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v0 + *(int *)(v16 + 56);
  v18 = *(_BYTE *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  LOBYTE(v58[0]) = v18;
  v58[1] = v19;
  v20 = sub_100047110(&qword_100834400);
  State.wrappedValue.getter(&v59, v20);
  if (!(_BYTE)v59)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v21, v22, v23, v24, v25, v26, v27);
    sub_10004F8C8(v0, (uint64_t)v15, type metadata accessor for LoadDetailsStackedChartView);
LABEL_11:
    v39 = sub_100047110(&qword_100834260);
    State.wrappedValue.getter(v12, v39);
    v40 = &v15[*(int *)(DetailsStackedChartView + 68)];
    v41 = *(id *)v40;
    v42 = v40[8];
    sub_10010C5D0(*(id *)v40, v42);
    v43 = (char *)sub_1003F70B8(v41, v42);
    sub_10010C5EC(v41, v42);
    KeyPath = swift_getKeyPath(&unk_10063D828);
    v58[0] = v43;
    v45 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v58, KeyPath, v45);
    swift_release(KeyPath);
    v46 = &v43[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
    swift_beginAccess(&v43[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v58, 0, 0);
    v48 = v54;
    v47 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v6, v46, v55);

    GregorianDayRange.dayIndexRange.getter(v49);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v47);
    v50 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v9, &v3[*(int *)(v57 + 36)], v7);
    sub_10001BE90((uint64_t)v3, &qword_100823530);
    v51 = sub_1000083D8(&qword_100823538, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
    LOBYTE(v46) = dispatch thunk of static Equatable.== infix(_:_:)(v12, v9, v7, v51);
    v52 = *(void (**)(char *, uint64_t))(v50 + 8);
    v52(v9, v7);
    v52(v12, v7);
    sub_100011F54((uint64_t)v15, type metadata accessor for LoadDetailsStackedChartView);
    v38 = v46 ^ 1;
    return v38 & 1;
  }
  if (v59 == 1)
    v28 = 0x6E6F4D6565726874;
  else
    v28 = 0x68746E6F4D786973;
  if (v59 == 1)
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)0xEB00000000736874;
  else
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)0xE900000000000073;
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, 0x68746E6F6DLL, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v29, v31, v32, v33, v34, v35, v36, v37);
  sub_10004F8C8(v1, (uint64_t)v15, type metadata accessor for LoadDetailsStackedChartView);
  if ((v30 & 1) != 0)
    goto LABEL_11;
  sub_100011F54((uint64_t)v15, type metadata accessor for LoadDetailsStackedChartView);
  v38 = 0;
  return v38 & 1;
}

uint64_t sub_1004501F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t DetailsStackedChartView;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  char *v16;
  uint64_t v17;
  char ViewModel;
  char v19;
  char *v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  __n128 v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for SleepingSampleViewModelProvider.DataFreshness(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - v7;
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0 + *(int *)(v12 + 68);
  v14 = *(id *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_10010C5D0(*(id *)v13, v15);
  v16 = (char *)sub_1003F70B8(v14, v15);
  sub_10010C5EC(v14, v15);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v17);

  ViewModel = dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.getter();
  swift_release(v17);
  sub_10004F8C8(v1, (uint64_t)v11, type metadata accessor for LoadDetailsStackedChartView);
  if ((ViewModel & 1) != 0)
  {
    v19 = 1;
  }
  else
  {
    v20 = &v11[*(int *)(DetailsStackedChartView + 68)];
    v21 = *(id *)v20;
    v22 = v20[8];
    sub_10010C5D0(*(id *)v20, v22);
    v23 = sub_1003F70B8(v21, v22);
    sub_10010C5EC(v21, v22);
    v24 = sub_100171BD4();

    dispatch thunk of SleepingSampleViewModelProvider.dataFreshness.getter();
    v25 = swift_release(v24);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, enum case for SleepingSampleViewModelProvider.DataFreshness.receivedFromPreviousDayRange(_:), v2, v25);
    v19 = static SleepingSampleViewModelProvider.DataFreshness.== infix(_:_:)(v8, v5);
    v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    v26(v5, v2);
    v26(v8, v2);
  }
  sub_100011F54((uint64_t)v11, type metadata accessor for LoadDetailsStackedChartView);
  return v19 & 1;
}

uint64_t sub_1004503F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  ValueMetadata *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t KeyPath;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell **v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t OpaqueTypeConformance2;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  ValueMetadata *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  ValueMetadata *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  __n128 v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  id v104;
  NSString v105;
  id v106;
  CHWorkoutDetailHeartRateTableViewCell *v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  SEL v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t DetailsStackedChartView;
  char *v160;
  char *v161;
  char v162[8];
  uint64_t v163;
  CHWorkoutDetailHeartRateTableViewCell *v164[2];
  char *v165;
  ValueMetadata *v166;
  uint64_t v167;
  void *v168;
  char v169[8];

  v151 = a2;
  v150 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v148 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for DayIndex(0);
  v131 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v129 = (uint64_t *)((char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v5 = *(_QWORD *)(DetailsStackedChartView - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(DetailsStackedChartView);
  v7 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_1008343C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100047110(&qword_1008343B0);
  __chkstk_darwin(v128);
  v12 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100047110(&qword_100834398);
  __chkstk_darwin(v157);
  v156 = (uint64_t)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100047110(&qword_100834388);
  v133 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v158 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100047110(&qword_100834380);
  v136 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v160 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100047110(&qword_100834378);
  v139 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v134 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100047110(&qword_100834368);
  v142 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v137 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100047110(&qword_100834360);
  v145 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v140 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100047110(&qword_100834358);
  v147 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v143 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static HorizontalAlignment.leading.getter(v20);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 0;
  v21 = sub_100047110(&qword_1008343F8);
  sub_1004510AC(a1, (uint64_t)&v10[*(int *)(v21 + 44)]);
  sub_10004F8C8(a1, (uint64_t)v7, type metadata accessor for LoadDetailsStackedChartView);
  v22 = *(unsigned __int8 *)(v5 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = v23 + v6;
  v25 = v22 | 7;
  v26 = swift_allocObject(&unk_1007A0068, v24, v22 | 7);
  sub_100047C88((uint64_t)v7, v26 + v23, type metadata accessor for LoadDetailsStackedChartView);
  sub_100021CC0((uint64_t)v10, (uint64_t)v12, &qword_1008343C0);
  v27 = (uint64_t (**)())&v12[*(int *)(v128 + 36)];
  *v27 = sub_10045FEA0;
  v27[1] = (uint64_t (*)())v26;
  v27[2] = 0;
  v27[3] = 0;
  sub_10001BE90((uint64_t)v10, &qword_1008343C0);
  sub_10004F8C8(a1, (uint64_t)v7, type metadata accessor for LoadDetailsStackedChartView);
  v153 = v24;
  v28 = v25;
  v154 = v25;
  v29 = swift_allocObject(&unk_1007A0090, v24, v25);
  v155 = v23;
  sub_100047C88((uint64_t)v7, v29 + v23, type metadata accessor for LoadDetailsStackedChartView);
  v30 = v156;
  sub_100021CC0((uint64_t)v12, v156, &qword_1008343B0);
  v31 = v157;
  v32 = (_QWORD *)(v30 + *(int *)(v157 + 36));
  *v32 = 0;
  v32[1] = 0;
  v32[2] = sub_100460100;
  v32[3] = v29;
  sub_10001BE90((uint64_t)v12, &qword_1008343B0);
  v33 = DetailsStackedChartView;
  v152 = a1;
  v34 = sub_100047110(&qword_100834260);
  v35 = v129;
  State.wrappedValue.getter(v129, v34);
  v161 = v7;
  sub_10004F8C8(a1, (uint64_t)v7, type metadata accessor for LoadDetailsStackedChartView);
  v36 = swift_allocObject(&unk_1007A00B8, v24, v28);
  sub_100047C88((uint64_t)v7, v36 + v23, type metadata accessor for LoadDetailsStackedChartView);
  v37 = sub_1000E0A18(&qword_1008343A0, &qword_100834398, (void (*)(void))sub_10045FD9C);
  v38 = sub_1000083D8(&qword_100823538, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
  v39 = v31;
  v40 = (ValueMetadata *)v130;
  v41 = v156;
  View.onChange<A>(of:initial:_:)(v35, 0, sub_100460158, v36, v39, v130, v37, v38);
  v42 = swift_release(v36);
  (*(void (**)(_QWORD *, ValueMetadata *, __n128))(v131 + 8))(v35, v40, v42);
  sub_10001BE90(v41, &qword_100834398);
  v43 = v152;
  v44 = v152 + *(int *)(v33 + 68);
  v45 = *(id *)v44;
  LOBYTE(v36) = *(_BYTE *)(v44 + 8);
  sub_10010C5D0(*(id *)v44, v36);
  v46 = (char *)sub_1003F70B8(v45, v36);
  sub_10010C5EC(v45, v36);
  KeyPath = swift_getKeyPath(&unk_10063D7D0);
  v165 = v46;
  v48 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v165, KeyPath, v48);
  swift_release(KeyPath);
  v49 = (CHWorkoutDetailHeartRateTableViewCell **)&v46[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutsWithEffortQuantities];
  swift_beginAccess(&v46[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutsWithEffortQuantities], v169, 0, 0);
  v50 = *v49;
  swift_bridgeObjectRetain(v50);

  v164[0] = v50;
  v51 = (uint64_t)v161;
  sub_10004F8C8(v43, (uint64_t)v161, type metadata accessor for LoadDetailsStackedChartView);
  v52 = v153;
  v53 = v154;
  v54 = swift_allocObject(&unk_1007A00E0, v153, v154);
  v55 = v155;
  sub_100047C88(v51, v54 + v155, type metadata accessor for LoadDetailsStackedChartView);
  v56 = sub_100047110(&qword_100834390);
  v165 = (char *)v157;
  v166 = v40;
  v167 = v37;
  v168 = (void *)v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v157 = OpaqueTypeConformance2;
  v58 = sub_1000F0610(&qword_1008343C8, &qword_100834390, (void (*)(void))sub_10045FE20, (uint64_t)&protocol conformance descriptor for <> [A : B]);
  v59 = v132;
  v60 = v158;
  View.onChange<A>(of:initial:_:)(v164, 0, sub_1004609D8, v54, v132, v56, OpaqueTypeConformance2, v58);
  swift_release(v54);
  swift_bridgeObjectRelease(v164[0], v61, v62, v63, v64, v65, v66, v67);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v60, v59);
  v68 = DetailsStackedChartView;
  v69 = v43 + *(int *)(DetailsStackedChartView + 56);
  v70 = *(_BYTE *)v69;
  v71 = *(ValueMetadata **)(v69 + 8);
  LOBYTE(v165) = v70;
  v166 = v71;
  v72 = sub_100047110(&qword_100834400);
  State.wrappedValue.getter(v164, v72);
  v73 = v43;
  v74 = (uint64_t)v161;
  sub_10004F8C8(v73, (uint64_t)v161, type metadata accessor for LoadDetailsStackedChartView);
  v75 = swift_allocObject(&unk_1007A0108, v52, v53);
  sub_100047C88(v74, v75 + v55, type metadata accessor for LoadDetailsStackedChartView);
  v165 = (char *)v59;
  v166 = (ValueMetadata *)v56;
  v167 = v157;
  v168 = (void *)v58;
  v76 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v77 = sub_1002C51AC();
  v78 = v134;
  v79 = v135;
  v80 = v160;
  View.onChange<A>(of:initial:_:)(v164, 0, sub_100460A14, v75, v135, &type metadata for DayRangeForStackedLoadCharts, v76, v77);
  v81 = swift_release(v75);
  (*(void (**)(char *, uint64_t, __n128))(v136 + 8))(v80, v79, v81);
  v82 = v152;
  v83 = v152 + *(int *)(v68 + 48);
  v84 = *(_BYTE *)v83;
  v85 = *(ValueMetadata **)(v83 + 8);
  LOBYTE(v165) = v84;
  v166 = v85;
  v86 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(v164, v86);
  v87 = v82;
  v88 = v82;
  v89 = (uint64_t)v161;
  sub_10004F8C8(v87, (uint64_t)v161, type metadata accessor for LoadDetailsStackedChartView);
  v90 = swift_allocObject(&unk_1007A0130, v153, v154);
  sub_100047C88(v89, v90 + v155, type metadata accessor for LoadDetailsStackedChartView);
  v165 = (char *)v79;
  v166 = &type metadata for DayRangeForStackedLoadCharts;
  v167 = v76;
  v168 = (void *)v77;
  v91 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v92 = v137;
  v93 = v138;
  View.onChange<A>(of:initial:_:)(v164, 0, sub_100460A24, v90, v138, &type metadata for Bool, v91, &protocol witness table for Bool);
  v94 = swift_release(v90);
  v95 = (char *)v93;
  (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v78, v93, v94);
  v163 = v88;
  v96 = sub_100047110(&qword_100834370);
  v165 = v95;
  v166 = (ValueMetadata *)&type metadata for Bool;
  v167 = v91;
  v168 = &protocol witness table for Bool;
  v97 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v98 = sub_100007050(&qword_1008343E8);
  v99 = sub_100028384(&qword_1008343F0, &qword_1008343E8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v165 = (char *)v98;
  v166 = (ValueMetadata *)v99;
  v100 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v101 = v140;
  v102 = v141;
  View.toolbar<A>(content:)(sub_100460A8C, v162, v141, v96, v97, v100);
  v103 = (char *)v102;
  (*(void (**)(char *, uint64_t))(v142 + 8))(v92, v102);
  v104 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v105 = String._bridgeToObjectiveC()();
  v106 = objc_msgSend(v104, "localizedStringForKey:value:table:", v105, 0, 0);

  v107 = (CHWorkoutDetailHeartRateTableViewCell *)static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
  v109 = v108;

  v164[0] = v107;
  v164[1] = v109;
  v165 = v103;
  v166 = (ValueMetadata *)v96;
  v167 = v97;
  v168 = (void *)v100;
  v110 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v111 = sub_100038CA0();
  v112 = v143;
  v113 = v144;
  View.navigationTitle<A>(_:)(v164, v144, &type metadata for String, v110, v111);
  swift_bridgeObjectRelease(v109, v114, v115, v116, v117, v118, v119, v120);
  v121 = (char *)v113;
  (*(void (**)(char *, uint64_t))(v145 + 8))(v101, v113);
  v122 = v149;
  v123 = v148;
  v124 = v150;
  (*(void (**)(char *, _QWORD, uint64_t))(v149 + 104))(v148, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v150);
  v165 = v121;
  v166 = (ValueMetadata *)&type metadata for String;
  v167 = v110;
  v168 = (void *)v111;
  v125 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v126 = v146;
  View.navigationBarTitleDisplayMode(_:)(v123, v146, v125);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v124);
  return (*(uint64_t (**)(char *, uint64_t))(v147 + 8))(v112, v126);
}

uint64_t sub_1004510AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t, __n128);
  __n128 v118;
  __n128 v119;
  uint64_t v120;
  id v121;
  id v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  _QWORD v148[4];
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t DetailsStackedChartView;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  char v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;

  v2 = a1;
  v181 = a2;
  v182 = a1;
  v175 = sub_100047110(&qword_100834460);
  __chkstk_darwin(v175);
  v176 = (uint64_t *)((char *)&v149 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v177 = sub_100047110(&qword_100834468);
  v151 = *(_QWORD *)(v177 - 8);
  v4 = __chkstk_darwin(v177);
  v150 = (char *)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for OvernightMetricsViewModel(0, v4);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v170 = (char *)&v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100834470);
  __chkstk_darwin(v7);
  v180 = (uint64_t)&v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v179 = (char *)&v149 - v10;
  v169 = type metadata accessor for Divider(0);
  v168 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v167 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v183 = (char *)&v149 - v13;
  v14 = sub_100047110(&qword_100834478);
  __chkstk_darwin(v14);
  v178 = (uint64_t)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v185 = (uint64_t *)((char *)&v149 - v17);
  v18 = sub_100047110(&qword_100834480);
  __chkstk_darwin(v18);
  v164 = (uint64_t *)((char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v166 = sub_100047110(&qword_100834488);
  __chkstk_darwin(v166);
  v174 = (uint64_t)&v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v165 = (uint64_t)&v149 - v22;
  __chkstk_darwin(v23);
  v186 = (uint64_t)&v149 - v24;
  v159 = type metadata accessor for SegmentedPickerStyle(0);
  v162 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v26 = (char *)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100047110(&qword_100834490);
  v157 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v28 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100047110(&qword_100834498);
  v158 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v154 = (char *)&v149 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100047110(&qword_1008344A0);
  __chkstk_darwin(v156);
  v31 = (char *)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100047110(&qword_1008344A8);
  __chkstk_darwin(v161);
  v33 = (char *)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = (char *)sub_100047110(&qword_1008344B0);
  __chkstk_darwin(v171);
  v35 = (char *)&v149 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v184 = (uint64_t)&v149 - v37;
  v153 = LocalizedStringKey.init(stringLiteral:)(0x65706F6353, 0xE500000000000000);
  v152 = v38;
  v40 = v39;
  v42 = v41;
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v43 = v2 + *(int *)(DetailsStackedChartView + 56);
  v44 = *(_BYTE *)v43;
  v45 = *(_QWORD *)(v43 + 8);
  v188 = v44;
  v189 = v45;
  sub_100047110(&qword_100834400);
  State.projectedValue.getter(&v190);
  v46 = sub_100047110(&qword_1008344B8);
  v47 = sub_1002C4858();
  v48 = sub_100028384(&qword_1008344C0, &qword_1008344B8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v49 = Picker<>.init(_:selection:content:)(v153, v152, v40 & 1, v42, &v190, sub_100451DC4, 0, &type metadata for DayRangeForStackedLoadCharts, v46, v47, v48);
  SegmentedPickerStyle.init()(v49);
  v50 = sub_100028384(&qword_1008344C8, &qword_100834490, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v51 = v154;
  v52 = v155;
  v53 = v159;
  View.pickerStyle<A>(_:)(v26, v155, v159, v50, &protocol witness table for SegmentedPickerStyle);
  (*(void (**)(char *, uint64_t))(v162 + 8))(v26, v53);
  v54 = (*(uint64_t (**)(char *, uint64_t))(v157 + 8))(v28, v52);
  LOBYTE(v2) = static Edge.Set.top.getter(v54);
  v55 = EdgeInsets.init(_all:)(12.0);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v62 = v158;
  v63 = v160;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v31, v51, v160);
  v64 = &v31[*(int *)(v156 + 36)];
  *v64 = v2;
  *((double *)v64 + 1) = v55;
  *((_QWORD *)v64 + 2) = v57;
  *((_QWORD *)v64 + 3) = v59;
  *((_QWORD *)v64 + 4) = v61;
  v64[40] = 0;
  v65 = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v51, v63);
  LOBYTE(v2) = static Edge.Set.horizontal.getter(v65);
  v66 = EdgeInsets.init(_all:)(20.0);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  sub_100021CC0((uint64_t)v31, (uint64_t)v33, &qword_1008344A0);
  v73 = &v33[*(int *)(v161 + 36)];
  *v73 = v2;
  *((double *)v73 + 1) = v66;
  *((_QWORD *)v73 + 2) = v68;
  *((_QWORD *)v73 + 3) = v70;
  *((_QWORD *)v73 + 4) = v72;
  v73[40] = 0;
  v74 = sub_10001BE90((uint64_t)v31, &qword_1008344A0);
  LOBYTE(v31) = static Edge.Set.bottom.getter(v74);
  sub_100021CC0((uint64_t)v33, (uint64_t)v35, &qword_1008344A8);
  v75 = &v35[*((int *)v171 + 9)];
  *v75 = (char)v31;
  *(_OWORD *)(v75 + 8) = 0u;
  *(_OWORD *)(v75 + 24) = 0u;
  v75[40] = 1;
  sub_10001BE90((uint64_t)v33, &qword_1008344A8);
  v171 = v35;
  v76 = sub_100045AD4((uint64_t)v35, v184, &qword_1008344B0);
  v77 = static HorizontalAlignment.leading.getter(v76);
  v78 = (uint64_t)v164;
  *v164 = v77;
  *(_QWORD *)(v78 + 8) = 0x4028000000000000;
  *(_BYTE *)(v78 + 16) = 0;
  v79 = sub_100047110(&qword_1008344D0);
  v80 = sub_1004520EC(v182, v78 + *(int *)(v79 + 44));
  LOBYTE(v31) = static Edge.Set.bottom.getter(v80);
  v81 = EdgeInsets.init(_all:)(12.0);
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v88 = v165;
  sub_100021CC0(v78, v165, &qword_100834480);
  v89 = v88 + *(int *)(v166 + 36);
  *(_BYTE *)v89 = (_BYTE)v31;
  *(double *)(v89 + 8) = v81;
  *(_QWORD *)(v89 + 16) = v83;
  *(_QWORD *)(v89 + 24) = v85;
  *(_QWORD *)(v89 + 32) = v87;
  *(_BYTE *)(v89 + 40) = 0;
  sub_10001BE90(v78, &qword_100834480);
  v90 = sub_100045AD4(v88, v186, &qword_100834488);
  v95 = static HorizontalAlignment.center.getter(v90, v91, v92, v93, v94);
  v96 = v185;
  *v185 = v95;
  v96[1] = 0;
  *((_BYTE *)v96 + 16) = 0;
  v97 = v96;
  v98 = sub_100047110(&qword_1008344D8);
  v99 = (char *)v97 + *(int *)(v98 + 44);
  v100 = v183;
  v101 = Divider.init()(v98);
  v102 = static Color.black.getter(v101);
  v103 = static Alignment.center.getter(v102);
  _FrameLayout.init(width:height:alignment:)(&v190, 0, 1, 0x3FE0000000000000, 0, v103, v104);
  v166 = v190;
  LOBYTE(v88) = v191;
  v165 = v192;
  LOBYTE(v26) = v193;
  v105 = v194;
  v106 = v195;
  v107 = v168;
  v108 = *(void (**)(char *, char *, uint64_t))(v168 + 16);
  v109 = v167;
  v110 = v100;
  v111 = v169;
  v108(v167, v110, v169);
  v188 = v88;
  v187 = (char)v26;
  v108(v99, v109, v111);
  v112 = &v99[*(int *)(sub_100047110(&qword_1008344E0) + 48)];
  v113 = v188;
  v114 = v187;
  v115 = v166;
  *(_QWORD *)v112 = v102;
  *((_QWORD *)v112 + 1) = v115;
  v112[16] = v113;
  *((_QWORD *)v112 + 3) = v165;
  v116 = v182;
  v112[32] = v114;
  *((_QWORD *)v112 + 5) = v105;
  *((_QWORD *)v112 + 6) = v106;
  v117 = *(void (**)(char *, uint64_t, __n128))(v107 + 8);
  v118 = swift_retain(v102);
  v117(v183, v111, v118);
  v119 = swift_release(v102);
  v117(v109, v111, v119);
  v120 = v116 + *(int *)(DetailsStackedChartView + 68);
  v121 = *(id *)v120;
  LOBYTE(v117) = *(_BYTE *)(v120 + 8);
  sub_10010C5D0(*(id *)v120, (char)v117);
  v122 = sub_1003F70B8(v121, (char)v117);
  sub_10010C5EC(v121, (char)v117);
  v123 = v170;
  v124 = dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  LOBYTE(v121) = OvernightMetricsViewModel.isWatchExperienceAvailable.getter(v124);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v123, v173);

  if ((v121 & 1) != 0)
  {
    __chkstk_darwin(v125);
    v148[2] = v116;
    v130 = static Axis.Set.vertical.getter(v129);
    v131 = sub_100047110(&qword_1008344F8);
    v132 = sub_100460FD4();
    v133 = v150;
    ScrollView.init(_:showsIndicators:content:)(v130, 1, sub_100460FCC, v148, v131, v132);
    v134 = v151;
    v135 = v176;
    v136 = v177;
    (*(void (**)(_QWORD *, char *, uint64_t))(v151 + 16))(v176, v133, v177);
    swift_storeEnumTagMultiPayload(v135, v175, 0);
    v137 = sub_100028384(&qword_1008344E8, &qword_100834468, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    v128 = (uint64_t)v179;
    _ConditionalContent<>.init(storage:)(v135, v136, &type metadata for Spacer, v137, &protocol witness table for Spacer);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v133, v136);
  }
  else
  {
    v126 = v176;
    *v176 = 0;
    *((_BYTE *)v126 + 8) = 1;
    swift_storeEnumTagMultiPayload(v126, v175, 1);
    v127 = sub_100028384(&qword_1008344E8, &qword_100834468, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    v128 = (uint64_t)v179;
    _ConditionalContent<>.init(storage:)(v126, v177, &type metadata for Spacer, v127, &protocol witness table for Spacer);
  }
  v138 = v184;
  v139 = (uint64_t)v171;
  sub_100021CC0(v184, (uint64_t)v171, &qword_1008344B0);
  v140 = v186;
  v141 = v174;
  sub_100021CC0(v186, v174, &qword_100834488);
  v142 = v185;
  v143 = v178;
  sub_100021CC0((uint64_t)v185, v178, &qword_100834478);
  v144 = v180;
  sub_100021CC0(v128, v180, &qword_100834470);
  v145 = v181;
  sub_100021CC0(v139, v181, &qword_1008344B0);
  v146 = (int *)sub_100047110(&qword_1008344F0);
  sub_100021CC0(v141, v145 + v146[12], &qword_100834488);
  sub_100021CC0(v143, v145 + v146[16], &qword_100834478);
  sub_100021CC0(v144, v145 + v146[20], &qword_100834470);
  sub_10001BE90(v128, &qword_100834470);
  sub_10001BE90((uint64_t)v142, &qword_100834478);
  sub_10001BE90(v140, &qword_100834488);
  sub_10001BE90(v138, &qword_1008344B0);
  sub_10001BE90(v144, &qword_100834470);
  sub_10001BE90(v143, &qword_100834478);
  sub_10001BE90(v141, &qword_100834488);
  return sub_10001BE90(v139, &qword_1008344B0);
}

void sub_100451DC4(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  char v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  char v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  char v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, 0, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v62 = v6;
  v63 = v8;
  v9 = sub_100038CA0();
  v60 = Text.init<A>(_:)(&v62, &type metadata for String, v9);
  v61 = v10;
  v59 = v11;
  v58 = v12 & 1;
  v13 = objc_msgSend(v2, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v62 = v16;
  v63 = v18;
  v19 = Text.init<A>(_:)(&v62, &type metadata for String, v9);
  v21 = v20;
  v23 = v22;
  LOBYTE(v13) = v24 & 1;
  v25 = objc_msgSend(v2, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v62 = v28;
  v63 = v30;
  v31 = Text.init<A>(_:)(&v62, &type metadata for String, v9);
  v33 = v32;
  v35 = v34;
  LOBYTE(v62) = v58;
  LOBYTE(v30) = v36 & 1;
  *(_QWORD *)a1 = v60;
  *(_QWORD *)(a1 + 8) = v61;
  *(_BYTE *)(a1 + 16) = v58;
  *(_QWORD *)(a1 + 24) = v59;
  *(_WORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v21;
  *(_BYTE *)(a1 + 56) = (_BYTE)v13;
  *(_QWORD *)(a1 + 64) = v23;
  *(_WORD *)(a1 + 72) = 257;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  *(_BYTE *)(a1 + 96) = v36 & 1;
  *(_QWORD *)(a1 + 104) = v34;
  *(_WORD *)(a1 + 112) = 514;
  sub_1000E439C(v60, v61, v58);
  swift_bridgeObjectRetain(v59);
  sub_1000E439C(v19, v21, (char)v13);
  swift_bridgeObjectRetain(v23);
  sub_1000E439C(v31, v33, v30);
  swift_bridgeObjectRetain(v35);
  sub_1000E4458(v31, v33, v30);
  swift_bridgeObjectRelease(v35, v37, v38, v39, v40, v41, v42, v43);
  sub_1000E4458(v19, v21, (char)v13);
  swift_bridgeObjectRelease(v23, v44, v45, v46, v47, v48, v49, v50);
  sub_1000E4458(v60, v61, v62);
  swift_bridgeObjectRelease(v59, v51, v52, v53, v54, v55, v56, v57);
}

uint64_t sub_1004520EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v38 = a2;
  v3 = sub_100047110(&qword_1008347B0);
  __chkstk_darwin(v3);
  v37 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = sub_100047110(&qword_1008347B8);
  __chkstk_darwin(v8);
  v10 = (_OWORD *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100047110(&qword_1008347C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_1008347C8);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v37 - v18;
  if (qword_10081D620 != -1)
    swift_once(&qword_10081D620, sub_100181338);
  *v10 = xmmword_100869F38;
  v20 = sub_100047110(&qword_1008347D0);
  v21 = sub_10045241C(a1, (uint64_t)v10 + *(int *)(v20 + 44));
  v22 = static Edge.Set.trailing.getter(v21);
  v23 = EdgeInsets.init(_all:)(20.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_100021CC0((uint64_t)v10, (uint64_t)v13, &qword_1008347B8);
  v30 = &v13[*(int *)(v11 + 36)];
  *v30 = v22;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10001BE90((uint64_t)v10, &qword_1008347B8);
  sub_100021CC0((uint64_t)v13, (uint64_t)v16, &qword_1008347C0);
  *(_QWORD *)&v16[*(int *)(v14 + 36)] = 0x3FF0000000000000;
  sub_10001BE90((uint64_t)v13, &qword_1008347C0);
  v31 = sub_100045AD4((uint64_t)v16, (uint64_t)v19, &qword_1008347C8);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v31);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v32 = sub_100047110(&qword_1008347D8);
  sub_1004540F0(a1, (uint64_t)&v7[*(int *)(v32 + 44)]);
  sub_100021CC0((uint64_t)v19, (uint64_t)v16, &qword_1008347C8);
  v33 = v37;
  sub_100021CC0((uint64_t)v7, v37, &qword_1008347B0);
  v34 = v38;
  sub_100021CC0((uint64_t)v16, v38, &qword_1008347C8);
  v35 = sub_100047110(&qword_1008347E0);
  sub_100021CC0(v33, v34 + *(int *)(v35 + 48), &qword_1008347B0);
  sub_10001BE90((uint64_t)v7, &qword_1008347B0);
  sub_10001BE90((uint64_t)v19, &qword_1008347C8);
  sub_10001BE90(v33, &qword_1008347B0);
  return sub_10001BE90((uint64_t)v16, &qword_1008347C8);
}

uint64_t sub_10045241C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char v43;
  id v44;
  char *v45;
  uint64_t KeyPath;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t OpaqueTypeConformance2;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  int *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  char v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  int *v100;
  char *v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void *v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  id v132;
  char v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  __n128 v139;
  int *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int *v156;
  __int128 v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD *v170;
  __int128 v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t ChartLollipopView;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t DataType;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t ViewModel;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t DetailsStackedChartView;
  char *v207;
  uint64_t v208;
  uint64_t Chart;
  int *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD v219[2];
  char v220[8];
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;

  v212 = a2;
  v187 = type metadata accessor for DayIndex(0);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v185 = (uint64_t *)((char *)&v178 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  ChartLollipopView = type metadata accessor for TrainingLoadChartLollipopView(0);
  __chkstk_darwin(ChartLollipopView);
  v182 = (char *)&v178 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100047110(&qword_100834930);
  __chkstk_darwin(v181);
  v184 = (uint64_t)&v178 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = sub_100047110(&qword_100834938);
  v214 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v183 = (uint64_t)&v178 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100834940);
  __chkstk_darwin(v7);
  v215 = (uint64_t)&v178 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v217 = (uint64_t)&v178 - v10;
  v198 = sub_100047110(&qword_100834948);
  __chkstk_darwin(v198);
  v188 = (uint64_t)&v178 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v194 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v193 = (char *)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v195 = *(_QWORD *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  v197 = (char *)&v178 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_100047110(&qword_100834950);
  v191 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v189 = (char *)&v178 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v190 = (char *)&v178 - v16;
  v211 = sub_100047110(&qword_100834958);
  __chkstk_darwin(v211);
  v199 = (uint64_t)&v178 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_100834960);
  __chkstk_darwin(v18);
  v205 = (uint64_t *)((char *)&v178 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v202 = type metadata accessor for GregorianDayRange(0);
  v201 = *(_QWORD *)(v202 - 8);
  v20 = __chkstk_darwin(v202);
  v22 = (char *)&v178 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TrainingLoadChart.Configuration(0, v20);
  v24 = __chkstk_darwin(v23);
  v204 = (uint64_t)&v178 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Chart = type metadata accessor for TrainingLoadChart(0, v24);
  v208 = *(_QWORD *)(Chart - 8);
  __chkstk_darwin(Chart);
  v207 = (char *)&v178 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = (int *)sub_100047110(&qword_100834968);
  __chkstk_darwin(v210);
  v203 = (char *)&v178 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v178 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v178 - v32;
  v34 = sub_100047110(&qword_100834970);
  __chkstk_darwin(v34);
  v213 = (uint64_t)&v178 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v38 = (char *)&v178 - v37;
  v39 = sub_1004501F4();
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v40 = *(int *)(DetailsStackedChartView + 68);
  v218 = a1;
  v41 = a1 + v40;
  v42 = *(void **)(a1 + v40);
  v43 = *(_BYTE *)(v41 + 8);
  sub_10010C5D0(v42, v43);
  v44 = sub_1003F70B8(v42, v43);
  v45 = (char *)sub_1003F70B8(v42, v43);
  sub_10010C5EC(v42, v43);
  KeyPath = swift_getKeyPath(&unk_10063D828);
  if ((v39 & 1) != 0)
  {
    *(_QWORD *)&v224 = v45;
    v47 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v224, KeyPath, v47);
    swift_release(KeyPath);
    v48 = &v45[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
    swift_beginAccess(&v45[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v220, 0, 0);
    v49 = v201;
    v50 = v202;
    (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v22, v48, v202);

    v51 = v204;
    sub_100177DB8(v22, v204);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v50);
    v52 = (int *)DetailsStackedChartView;
    v53 = v218;
    sub_100047110(&qword_100834260);
    v54 = v205;
    State.projectedValue.getter(v205);
    v55 = sub_100047110(&qword_100834978);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
    LOBYTE(v221) = 0;
    static Binding.constant(_:)(&v224, &v221, &type metadata for Bool);
    v56 = v207;
    v57 = TrainingLoadChart.init(configuration:selectedDay:inSelectionMode:)(v51, v54, v224, *((_QWORD *)&v224 + 1), v225);
    v58 = static Alignment.center.getter(v57);
    _FrameLayout.init(width:height:alignment:)(&v221, 0, 1, 0x4061C00000000000, 0, v58, v59);
    v60 = v208;
    v61 = Chart;
    (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v30, v56, Chart);
    v62 = v210;
    v63 = &v30[v210[9]];
    v64 = v222;
    *(_OWORD *)v63 = v221;
    *((_OWORD *)v63 + 1) = v64;
    *((_OWORD *)v63 + 2) = v223;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v56, v61);
    sub_100045AD4((uint64_t)v30, (uint64_t)v33, &qword_100834968);
    v65 = v199;
    sub_100021CC0((uint64_t)v33, v199, &qword_100834968);
    swift_storeEnumTagMultiPayload(v65, v211, 0);
    v66 = sub_100461A58();
    v67 = sub_100461ADC();
    *(_QWORD *)&v224 = v62;
    *((_QWORD *)&v224 + 1) = v198;
    *(_QWORD *)&v225 = v66;
    *((_QWORD *)&v225 + 1) = v67;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v224, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
    _ConditionalContent<>.init(storage:)(v65, v62, v200, v66, OpaqueTypeConformance2);
    sub_10001BE90((uint64_t)v33, &qword_100834968);
    v69 = v212;
    v70 = v53;
    v71 = (uint64_t)v38;
    v72 = v52;
  }
  else
  {
    v179 = v38;
    *(_QWORD *)&v224 = v45;
    v73 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v224, KeyPath, v73);
    swift_release(KeyPath);
    v74 = &v45[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
    swift_beginAccess(&v45[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v220, 0, 0);
    v75 = v201;
    v76 = v202;
    (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v22, v74, v202);

    v77 = *(id *)v41;
    v78 = *(_BYTE *)(v41 + 8);
    sub_10010C5D0(*(id *)v41, v78);
    v79 = (char *)sub_1003F70B8(v77, v78);
    sub_10010C5EC(v77, v78);
    v80 = *(_QWORD *)&v79[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
    swift_retain(v80);

    v81 = sub_100047110(&qword_100834258);
    v82 = v193;
    v83 = v218;
    Binding.wrappedValue.getter(v81);
    v84 = (uint64_t)v197;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v82);
    v85 = swift_release(v80);
    (*(void (**)(char *, uint64_t, __n128))(v194 + 8))(v82, DataType, v85);
    v86 = v204;
    sub_10017774C((uint64_t)v22, v84, v204);

    (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v84, ViewModel);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v22, v76);
    v87 = (int *)DetailsStackedChartView;
    sub_100047110(&qword_100834260);
    v88 = v205;
    State.projectedValue.getter(v205);
    v89 = sub_100047110(&qword_100834978);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
    v90 = (char *)(v83 + v87[12]);
    v91 = *v90;
    v92 = *((_QWORD *)v90 + 1);
    LOBYTE(v221) = v91;
    *((_QWORD *)&v221 + 1) = v92;
    sub_100047110(&qword_100820D80);
    State.projectedValue.getter(&v224);
    v93 = v207;
    v94 = TrainingLoadChart.init(configuration:selectedDay:inSelectionMode:)(v86, v88, v224, *((_QWORD *)&v224 + 1), v225);
    v95 = static Alignment.center.getter(v94);
    _FrameLayout.init(width:height:alignment:)(&v221, 0, 1, 0x4061C00000000000, 0, v95, v96);
    v97 = v208;
    v98 = v203;
    v99 = Chart;
    (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v203, v93, Chart);
    v100 = v210;
    v101 = &v98[v210[9]];
    v102 = v222;
    *(_OWORD *)v101 = v221;
    *((_OWORD *)v101 + 1) = v102;
    *((_OWORD *)v101 + 2) = v223;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v93, v99);
    v72 = v87;
    if ((sub_1004501F4() & 1) != 0)
    {
      v103 = sub_100047110(&qword_100834680);
      v104 = v188;
      v105 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v188, 1, 1, v103);
    }
    else
    {
      v104 = v188;
      sub_1004535D8(v188);
      v106 = sub_100047110(&qword_100834680);
      v105 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v104, 0, 1, v106);
    }
    v107 = v198;
    v108 = v200;
    v109 = v199;
    v110 = static GestureMask.all.getter(v105);
    v111 = sub_100461A58();
    v112 = sub_100461ADC();
    v113 = v189;
    v114 = v110;
    v115 = (uint64_t)v203;
    View.gesture<A>(_:including:)(v104, v114, v100, v107, v111, v112);
    sub_10001BE90(v104, &qword_100834948);
    sub_10001BE90(v115, &qword_100834968);
    v116 = v191;
    v117 = v190;
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v190, v113, v108);
    (*(void (**)(uint64_t, char *, uint64_t))(v116 + 16))(v109, v117, v108);
    swift_storeEnumTagMultiPayload(v109, v211, 1);
    *(_QWORD *)&v224 = v100;
    *((_QWORD *)&v224 + 1) = v107;
    *(_QWORD *)&v225 = v111;
    *((_QWORD *)&v225 + 1) = v112;
    v118 = swift_getOpaqueTypeConformance2(&v224, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
    v71 = (uint64_t)v179;
    _ConditionalContent<>.init(storage:)(v109, v100, v108, v111, v118);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v108);
    v69 = v212;
    v70 = v218;
  }
  type metadata accessor for LoadDetailsStackedChartView(0);
  v119 = *(void **)(v70 + v72[6]);
  if (v119)
  {
    v120 = v72;
    v121 = v70 + v72[12];
    v122 = *(_QWORD *)(v121 + 8);
    LOBYTE(v224) = *(_BYTE *)v121;
    *((_QWORD *)&v224 + 1) = v122;
    v123 = v119;
    v124 = sub_100047110(&qword_100820D80);
    State.wrappedValue.getter(v219, v124);
    if (LOBYTE(v219[0]) == 1 && (sub_1004501F4() & 1) == 0)
    {
      v131 = v70 + v72[17];
      v210 = v123;
      v132 = *(id *)v131;
      v133 = *(_BYTE *)(v131 + 8);
      sub_10010C5D0(*(id *)v131, v133);
      v134 = v70;
      v135 = (char *)sub_1003F70B8(v132, v133);
      sub_10010C5EC(v132, v133);
      v136 = *(_QWORD *)&v135[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
      swift_retain(v136);

      v137 = sub_100047110(&qword_100834258);
      v138 = v193;
      Binding.wrappedValue.getter(v137);
      dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v138);
      v139 = swift_release(v136);
      (*(void (**)(char *, uint64_t, __n128))(v194 + 8))(v138, DataType, v139);
      v212 = v134 + v72[11];
      v140 = (int *)ChartLollipopView;
      v141 = (uint64_t)v182;
      v142 = &v182[*(int *)(ChartLollipopView + 20)];
      v211 = sub_100047110(&qword_100834260);
      State.wrappedValue.getter(v142, v211);
      v143 = (char *)(v134 + v120[14]);
      v144 = *v143;
      v145 = *((_QWORD *)v143 + 1);
      LOBYTE(v224) = v144;
      *((_QWORD *)&v224 + 1) = v145;
      v146 = sub_100047110(&qword_100834400);
      State.wrappedValue.getter(v219, v146);
      LODWORD(Chart) = LOBYTE(v219[0]);
      v147 = (uint64_t *)(v134 + v120[7]);
      v148 = v134;
      v150 = *v147;
      v149 = v147[1];
      *(_QWORD *)&v224 = v150;
      *((_QWORD *)&v224 + 1) = v149;
      v151 = sub_100047110(&qword_100834440);
      State.wrappedValue.getter(v219, v151);
      v152 = v219[0];
      v224 = *(_OWORD *)(v148 + v120[8]);
      v153 = sub_100047110(&qword_100834448);
      State.wrappedValue.getter(v219, v153);
      v154 = v219[0];
      v155 = *(_QWORD *)(v121 + 8);
      LOBYTE(v219[0]) = *(_BYTE *)v121;
      v219[1] = v155;
      v156 = v210;
      State.projectedValue.getter(&v224);
      v157 = v224;
      v158 = v225;
      (*(void (**)(uint64_t, char *, uint64_t))(v195 + 32))(v141, v197, ViewModel);
      *(_BYTE *)(v141 + v140[6]) = Chart;
      *(_QWORD *)(v141 + v140[7]) = v152;
      v159 = v71;
      *(_QWORD *)(v141 + v140[8]) = v154;
      *(_QWORD *)(v141 + v140[9]) = v156;
      v160 = v141 + v140[10];
      *(_OWORD *)v160 = v157;
      *(_BYTE *)(v160 + 16) = v158;
      v161 = v141 + v140[11];
      v162 = type metadata accessor for BalanceDataProvider(0);
      v163 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
      *(_QWORD *)v161 = Environment.init<A>(_:)(v162, v162, v163);
      *(_BYTE *)(v161 + 8) = v164 & 1;
      v165 = v140[12];
      v166 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
      *(_QWORD *)(v141 + v165) = v166;
      v167 = static Alignment.center.getter(v166);
      _FrameLayout.init(width:height:alignment:)(&v224, 0x4060800000000000, 0, 0x4050800000000000, 0, v167, v168);
      v169 = v184;
      sub_10004F8C8(v141, v184, type metadata accessor for TrainingLoadChartLollipopView);
      v170 = (_OWORD *)(v169 + *(int *)(v181 + 36));
      v171 = v225;
      *v170 = v224;
      v170[1] = v171;
      v170[2] = v226;
      sub_100011F54(v141, type metadata accessor for TrainingLoadChartLollipopView);
      v172 = v185;
      State.wrappedValue.getter(v185, v211);
      sub_100453BAC();
      v174 = v173;
      (*(void (**)(_QWORD *, uint64_t))(v186 + 8))(v172, v187);

      v175 = v183;
      sub_100021CC0(v169, v183, &qword_100834930);
      v176 = (_QWORD *)(v175 + *(int *)(v216 + 36));
      *v176 = v174;
      v176[1] = 0x4051C00000000000;
      v177 = v169;
      v71 = v159;
      sub_10001BE90(v177, &qword_100834930);
      sub_100045AD4(v175, v217, &qword_100834938);
      v125 = 0;
      goto LABEL_12;
    }

  }
  v125 = 1;
LABEL_12:
  v126 = v217;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v217, v125, 1, v216);
  v127 = v213;
  sub_100021CC0(v71, v213, &qword_100834970);
  v128 = v215;
  sub_100021CC0(v126, v215, &qword_100834940);
  sub_100021CC0(v127, v69, &qword_100834970);
  v129 = sub_100047110(&qword_100834998);
  sub_100021CC0(v128, v69 + *(int *)(v129 + 48), &qword_100834940);
  sub_10001BE90(v126, &qword_100834940);
  sub_10001BE90(v71, &qword_100834970);
  sub_10001BE90(v128, &qword_100834940);
  return sub_10001BE90(v127, &qword_100834970);
}

uint64_t sub_1004535D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DetailsStackedChartView;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v2 = v1;
  v72 = a1;
  v69 = type metadata accessor for DelayedLongPressGesture(0);
  v71 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v66 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100047110(&qword_100834710);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100047110(&qword_100834718);
  v5 = __chkstk_darwin(v65);
  v64 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for SpatialTapGesture(0, v5);
  v63 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100047110(&qword_100834720);
  v75 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v74 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v10 = *(_QWORD *)(DetailsStackedChartView - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(DetailsStackedChartView);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalCoordinateSpace(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DragGesture(0, v14);
  v58 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100047110(&qword_10082F628);
  v76 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v73 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter(v21);
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v16, v13, &protocol witness table for LocalCoordinateSpace, 0.0);
  sub_10004F8C8(v2, (uint64_t)v12, type metadata accessor for LoadDetailsStackedChartView);
  v22 = *(unsigned __int8 *)(v10 + 80);
  v23 = (v22 + 16) & ~v22;
  v56 = v23 + v11;
  v24 = v22 | 7;
  v55 = v22 | 7;
  v25 = swift_allocObject(&unk_1007A01D0, v23 + v11, v22 | 7);
  sub_100047C88((uint64_t)v12, v25 + v23, type metadata accessor for LoadDetailsStackedChartView);
  v26 = sub_1000083D8(&qword_10082F670, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture, (uint64_t)&protocol conformance descriptor for DragGesture);
  v27 = sub_1000083D8(&qword_10082F678, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
  v28 = v73;
  Gesture<>.onChanged(_:)(sub_100461394, v25, v17, v26, v27);
  v29 = swift_release(v25);
  v30 = (*(uint64_t (**)(char *, uint64_t, __n128))(v58 + 8))(v19, v17, v29);
  static CoordinateSpaceProtocol<>.local.getter(v30);
  v31 = v60;
  SpatialTapGesture.init<A>(count:coordinateSpace:)(1, v16, v13, &protocol witness table for LocalCoordinateSpace);
  v32 = v57;
  sub_10004F8C8(v57, (uint64_t)v12, type metadata accessor for LoadDetailsStackedChartView);
  v33 = v56;
  v34 = swift_allocObject(&unk_1007A01F8, v56, v24);
  sub_100047C88((uint64_t)v12, v34 + v23, type metadata accessor for LoadDetailsStackedChartView);
  v35 = sub_1000083D8(&qword_100834728, (uint64_t (*)(uint64_t))&type metadata accessor for SpatialTapGesture, (uint64_t)&protocol conformance descriptor for SpatialTapGesture);
  v36 = v74;
  v37 = v61;
  Gesture.onEnded(_:)(sub_1004613A4, v34, v61, v35);
  v38 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v31, v37, v38);
  v39 = (uint64_t)v64;
  v40 = v62;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v64, v36, v62);
  v41 = v28;
  v42 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v39 + *(int *)(v65 + 52), v41, v59);
  v43 = v66;
  DelayedLongPressGesture.init(minimumDuration:maximumDistance:)(0.5, 10.0);
  sub_10004F8C8(v32, (uint64_t)v12, type metadata accessor for LoadDetailsStackedChartView);
  v44 = swift_allocObject(&unk_1007A0220, v33, v55);
  sub_100047C88((uint64_t)v12, v44 + v23, type metadata accessor for LoadDetailsStackedChartView);
  v45 = sub_1000083D8(&qword_100834730, (uint64_t (*)(uint64_t))&type metadata accessor for DelayedLongPressGesture, (uint64_t)&protocol conformance descriptor for DelayedLongPressGesture);
  v46 = v67;
  v47 = v69;
  Gesture.onEnded(_:)(sub_100461400, v44, v69, v45);
  v48 = swift_release(v44);
  (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v43, v47, v48);
  v49 = v68;
  v50 = v72;
  v51 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v72, v46, v70);
  v52 = sub_100047110(&qword_100834680);
  sub_100021CC0(v39, v50 + *(int *)(v52 + 52), &qword_100834718);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v51);
  sub_10001BE90(v39, &qword_100834718);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v73, v42);
}

uint64_t sub_100453BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t DetailsStackedChartView;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  void (*v32)(char *, char *, uint64_t);
  char v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t);
  id v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  _QWORD v68[3];
  _QWORD v69[4];

  v66 = type metadata accessor for DayIndex(0);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v62 = (char *)v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)v54 - v3;
  v59 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v59);
  v61 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v54 - v7;
  v9 = type metadata accessor for GregorianDayRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v60 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v54 - v13;
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v56 = *(int *)(DetailsStackedChartView + 36);
  v63 = ((uint64_t (*)(void))DayIndex.value.getter)();
  v16 = *(int *)(DetailsStackedChartView + 68);
  v57 = v0;
  v17 = v0 + v16;
  v18 = *(void **)(v0 + v16);
  v19 = *(_BYTE *)(v0 + v16 + 8);
  sub_10010C5D0(*(id *)(v57 + v16), *(_BYTE *)(v57 + v16 + 8));
  v20 = (char *)sub_1003F70B8(v18, v19);
  sub_10010C5EC(v18, v19);
  KeyPath = swift_getKeyPath(&unk_10063D828);
  v69[0] = v20;
  v65 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v69, KeyPath, v65);
  swift_release(KeyPath);
  v22 = &v20[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v20[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v69, 0, 0);
  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v23(v14, v22, v9);

  GregorianDayRange.dayIndexRange.getter(v24);
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26 = v66;
  v25(v14, v9);
  v27 = v64;
  v58 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v58(v4, v8, v26);
  v28 = sub_10001BE90((uint64_t)v8, &qword_100823530);
  v29 = DayIndex.value.getter(v28);
  v64 = *(_QWORD *)(v27 + 8);
  result = ((uint64_t (*)(char *, uint64_t))v64)(v4, v26);
  if (__OFSUB__(v63, v29))
  {
    __break(1u);
    goto LABEL_5;
  }
  v54[1] = v63 - v29;
  v31 = *(id *)v17;
  v32 = v23;
  v55 = v23;
  v33 = *(_BYTE *)(v17 + 8);
  sub_10010C5D0(v31, v33);
  v34 = v9;
  v35 = v25;
  v36 = (char *)sub_1003F70B8(v31, v33);
  sub_10010C5EC(v31, v33);
  v37 = swift_getKeyPath(&unk_10063D828);
  v68[0] = v36;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v68, v37, v65);
  swift_release(v37);
  v38 = &v36[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v36[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v68, 0, 0);
  v32(v14, v38, v34);

  GregorianDayRange.dayIndexRange.getter(v39);
  v35(v14, v34);
  v40 = (void (*)(char *, uint64_t, uint64_t))v58;
  v41 = v66;
  v58(v4, &v8[*(int *)(v59 + 36)], v66);
  v42 = sub_10001BE90((uint64_t)v8, &qword_100823530);
  v63 = DayIndex.value.getter(v42);
  v43 = (uint64_t (*)(char *, uint64_t))v64;
  ((void (*)(char *, uint64_t))v64)(v4, v41);
  v44 = *(id *)v17;
  LOBYTE(v36) = *(_BYTE *)(v17 + 8);
  sub_10010C5D0(*(id *)v17, (char)v36);
  v45 = (char *)sub_1003F70B8(v44, (char)v36);
  sub_10010C5EC(v44, (char)v36);
  v46 = swift_getKeyPath(&unk_10063D828);
  v67[0] = v45;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v67, v46, v65);
  swift_release(v46);
  v47 = &v45[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v45[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v67, 0, 0);
  v48 = v60;
  v55(v60, v47, v34);

  v49 = (uint64_t)v61;
  GregorianDayRange.dayIndexRange.getter(v50);
  v35(v48, v34);
  v51 = v62;
  v40(v62, v49, v41);
  v52 = sub_10001BE90(v49, &qword_100823530);
  v53 = DayIndex.value.getter(v52);
  result = v43(v51, v41);
  if (__OFSUB__(v63, v53))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1004540F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  char v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;

  v76 = a2;
  v3 = sub_100047110(&qword_10081EE68);
  v71 = *(_QWORD *)(v3 - 8);
  v72 = v3;
  __chkstk_darwin(v3);
  v70 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100047110(&qword_1008347E8);
  __chkstk_darwin(v69);
  v68 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v73 = (uint64_t)&v68 - v7;
  v8 = sub_100047110(&qword_1008347F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v75 = (uint64_t)&v68 - v12;
  v13 = sub_100047110(&qword_1008347F8);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100834800);
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100834808);
  __chkstk_darwin(v19);
  v74 = (uint64_t)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v68 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  *(_QWORD *)v15 = static HorizontalAlignment.leading.getter(v27);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v28 = sub_100047110(&qword_100834810);
  v29 = sub_10045463C(a1, &v15[*(int *)(v28 + 44)]);
  v30 = static Edge.Set.horizontal.getter(v29);
  v31 = EdgeInsets.init(_all:)(20.0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_100021CC0((uint64_t)v15, (uint64_t)v18, &qword_1008347F8);
  v38 = &v18[*(int *)(v16 + 36)];
  *v38 = v30;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_10001BE90((uint64_t)v15, &qword_1008347F8);
  v39 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 48);
  v40 = *(_BYTE *)v39;
  v41 = *(_QWORD *)(v39 + 8);
  v77 = v40;
  v78 = v41;
  v42 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v79, v42);
  if ((_BYTE)v79)
    v43 = 0.6;
  else
    v43 = 1.0;
  sub_100021CC0((uint64_t)v18, (uint64_t)v23, &qword_100834800);
  *(double *)&v23[*(int *)(v19 + 36)] = v43;
  sub_10001BE90((uint64_t)v18, &qword_100834800);
  sub_100045AD4((uint64_t)v23, (uint64_t)v26, &qword_100834808);
  if ((sub_1004501F4() & 1) != 0)
  {
    v45 = v70;
    v46 = ProgressView<>.init<>()(v44);
    v47 = static Edge.Set.trailing.getter(v46);
    v48 = EdgeInsets.init(_all:)(12.0);
    v50 = v49;
    v52 = v51;
    v54 = v53;
    v56 = v71;
    v55 = v72;
    v57 = (uint64_t)v68;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v45, v72);
    v58 = v57 + *(int *)(v69 + 36);
    *(_BYTE *)v58 = v47;
    *(double *)(v58 + 8) = v48;
    *(_QWORD *)(v58 + 16) = v50;
    *(_QWORD *)(v58 + 24) = v52;
    *(_QWORD *)(v58 + 32) = v54;
    *(_BYTE *)(v58 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v55);
    v59 = v73;
    sub_100045AD4(v57, v73, &qword_1008347E8);
    sub_100021CC0(v59, v57, &qword_1008347E8);
    *(_QWORD *)v10 = 0;
    v10[8] = 1;
    v60 = sub_100047110(&qword_100834828);
    sub_100021CC0(v57, (uint64_t)&v10[*(int *)(v60 + 48)], &qword_1008347E8);
    sub_10001BE90(v59, &qword_1008347E8);
    sub_10001BE90(v57, &qword_1008347E8);
    v61 = sub_100047110(&qword_100834818);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v10, 0, 1, v61);
    v62 = v75;
    sub_100045AD4((uint64_t)v10, v75, &qword_1008347F0);
  }
  else
  {
    v63 = sub_100047110(&qword_100834818);
    v62 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v75, 1, 1, v63);
  }
  v64 = v74;
  sub_100021CC0((uint64_t)v26, v74, &qword_100834808);
  sub_100021CC0(v62, (uint64_t)v10, &qword_1008347F0);
  v65 = v76;
  sub_100021CC0(v64, v76, &qword_100834808);
  v66 = sub_100047110(&qword_100834820);
  sub_100021CC0((uint64_t)v10, v65 + *(int *)(v66 + 48), &qword_1008347F0);
  sub_10001BE90(v62, &qword_1008347F0);
  sub_10001BE90((uint64_t)v26, &qword_100834808);
  sub_10001BE90((uint64_t)v10, &qword_1008347F0);
  return sub_10001BE90(v64, &qword_100834808);
}

uint64_t sub_10045463C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t DataType;
  uint64_t v6;
  uint64_t ViewModel;
  uint64_t v8;
  uint64_t DetailsStackedChartView;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  ValueMetadata *v32;
  uint64_t v33;
  const char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  char v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __n128 v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  char v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  uint64_t v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  char v101;
  uint64_t v102;
  SEL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  CHWorkoutDetailHeartRateTableViewCell *v123;
  CHWorkoutDetailHeartRateTableViewCell *v124;
  char v125;
  SEL v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  void (*v140)(char *, uint64_t, __n128);
  __n128 v141;
  SEL v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166[16];
  uint64_t v167;
  char v168[16];
  uint64_t v169;
  char v170;
  uint64_t v171;
  ValueMetadata *v172;
  uint64_t v173;
  unint64_t v174;

  v158 = a2;
  v3 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v3);
  v153 = (char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v164 = *(_QWORD *)(DataType - 8);
  v165 = DataType;
  __chkstk_darwin(DataType);
  v161 = (char *)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v162 = *(_QWORD *)(ViewModel - 8);
  v163 = ViewModel;
  __chkstk_darwin(ViewModel);
  v160 = (char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  v152 = (uint64_t)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100834830);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v156 = (char *)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v150 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v150 - v18;
  v151 = a1;
  v169 = a1;
  v167 = a1;
  v20 = sub_100047110(&qword_100834838);
  v21 = sub_100047110(&qword_100834840);
  v22 = sub_100007050(&qword_100834848);
  v23 = sub_100028384(&qword_100834850, &qword_100834848, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v24 = sub_1002043F0();
  v171 = v22;
  v172 = &type metadata for PickerLabelStyle;
  v173 = v23;
  v174 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v171, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v26 = sub_100028384(&qword_100834858, &qword_100834840, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  Menu.init(content:label:)(sub_1004616F0, v168, sub_1004616F8, v166, v20, v21, OpaqueTypeConformance2, v26);
  v155 = v12;
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v154 = v19;
  v28 = v19;
  v29 = v151;
  v157 = v11;
  v27(v28, v16, v11);
  v159 = DetailsStackedChartView;
  v30 = v29 + *(int *)(DetailsStackedChartView + 56);
  v31 = *(_BYTE *)v30;
  v32 = *(ValueMetadata **)(v30 + 8);
  LOBYTE(v171) = v31;
  v172 = v32;
  v33 = sub_100047110(&qword_100834400);
  State.wrappedValue.getter(&v170, v33);
  if (v170)
  {
    if (v170 == 1)
      v41 = 0x6E6F4D6565726874;
    else
      v41 = 0x68746E6F4D786973;
    if (v170 == 1)
      v42 = (CHWorkoutDetailHeartRateTableViewCell *)0xEB00000000736874;
    else
      v42 = (CHWorkoutDetailHeartRateTableViewCell *)0xE900000000000073;
    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, 0x68746E6F6DLL, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v42, v44, v45, v46, v47, v48, v49, v50);
    v51 = v152;
    sub_10004F8C8(v29, v152, type metadata accessor for LoadDetailsStackedChartView);
    if ((v43 & 1) == 0)
    {
      sub_100011F54(v51, type metadata accessor for LoadDetailsStackedChartView);
      goto LABEL_12;
    }
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v34, v35, v36, v37, v38, v39, v40);
    v51 = v152;
    sub_10004F8C8(v29, v152, type metadata accessor for LoadDetailsStackedChartView);
  }
  v52 = sub_1004501F4();
  sub_100011F54(v51, type metadata accessor for LoadDetailsStackedChartView);
  if ((v52 & 1) == 0)
  {
    v55 = v159;
    v56 = v29 + *(int *)(v159 + 68);
    v57 = *(id *)v56;
    v58 = *(_BYTE *)(v56 + 8);
    sub_10010C5D0(*(id *)v56, v58);
    v59 = (char *)sub_1003F70B8(v57, v58);
    sub_10010C5EC(v57, v58);
    v60 = *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
    swift_retain(v60);

    v61 = sub_100047110(&qword_100834258);
    v62 = v161;
    Binding.wrappedValue.getter(v61);
    v63 = v160;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v62);
    v64 = swift_release(v60);
    (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v62, v165, v64);
    v53 = TrainingLoadViewModel.localizedDescription(onDay:)(v29 + *(int *)(v55 + 64));
    v54 = v65;
    (*(void (**)(char *, uint64_t))(v162 + 8))(v63, v163);
    goto LABEL_14;
  }
LABEL_12:
  v53 = 0;
  v54 = 0xE000000000000000;
LABEL_14:
  v171 = v53;
  v172 = (ValueMetadata *)v54;
  v66 = sub_100038CA0();
  v67 = Text.init<A>(_:)(&v171, &type metadata for String, v66);
  v69 = v68;
  v71 = v70;
  v73 = v72 & 1;
  v75 = static Font.body.getter(v74);
  v77 = Text.font(_:)(v75, v67, v69, v73, v71, v76);
  v79 = v78;
  v81 = v80;
  v83 = v82;
  swift_release(v75);
  v84 = v81 & 1;
  sub_1000E4458(v67, v69, v73);
  swift_bridgeObjectRelease(v71, v85, v86, v87, v88, v89, v90, v91);
  v92 = enum case for Font.Design.rounded(_:);
  v93 = type metadata accessor for Font.Design(0);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = (uint64_t)v153;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 104))(v153, v92, v93);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v94 + 56))(v95, 0, 1, v93);
  v96 = Text.fontDesign(_:)(v95, v77, v79, v84, v83);
  v98 = v97;
  v100 = v99;
  v102 = v101 & 1;
  sub_1000E4458(v77, v79, v84);
  swift_bridgeObjectRelease(v83, v103, v104, v105, v106, v107, v108, v109);
  sub_10001BE90(v95, &qword_10081F2F8);
  v110 = v159;
  v111 = v29 + *(int *)(v159 + 68);
  v112 = *(id *)v111;
  LOBYTE(v84) = *(_BYTE *)(v111 + 8);
  sub_10010C5D0(*(id *)v111, v84);
  v113 = (char *)sub_1003F70B8(v112, v84);
  sub_10010C5EC(v112, v84);
  v114 = *(_QWORD *)&v113[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v114);

  v115 = sub_100047110(&qword_100834258);
  v116 = v161;
  Binding.wrappedValue.getter(v115);
  v117 = v160;
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v116);
  v118 = swift_release(v114);
  (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v116, v165, v118);
  v119 = TrainingLoadViewModel.color(onDay:)(v29 + *(int *)(v110 + 64));
  (*(void (**)(char *, uint64_t))(v162 + 8))(v117, v163);
  v171 = v119;
  v120 = Text.foregroundStyle<A>(_:)(&v171, v96, v98, v102, v100, &type metadata for Color, &protocol witness table for Color);
  v122 = v121;
  v124 = v123;
  LOBYTE(v117) = v125 & 1;
  sub_1000E4458(v96, v98, v102);
  swift_release(v119);
  swift_bridgeObjectRelease(v100, v126, v127, v128, v129, v130, v131, v132);
  v133 = v155;
  v134 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
  v135 = v156;
  v136 = v154;
  v137 = v157;
  v134(v156, v154, v157);
  v138 = v158;
  v134(v158, v135, v137);
  v139 = &v138[*(int *)(sub_100047110(&qword_100834860) + 48)];
  *(_QWORD *)v139 = v120;
  *((_QWORD *)v139 + 1) = v122;
  v139[16] = (char)v117;
  *((_QWORD *)v139 + 3) = v124;
  sub_1000E439C(v120, v122, (char)v117);
  v140 = *(void (**)(char *, uint64_t, __n128))(v133 + 8);
  v141 = swift_bridgeObjectRetain(v124);
  v140(v136, v137, v141);
  sub_1000E4458(v120, v122, (char)v117);
  swift_bridgeObjectRelease(v124, v142, v143, v144, v145, v146, v147, v148);
  return ((uint64_t (*)(char *, uint64_t))v140)(v135, v137);
}

uint64_t sub_100454DF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t DataType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;

  v2 = sub_100047110(&qword_100834258);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  Binding.projectedValue.getter(v2);
  v18 = a1;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v13 = sub_100047110(&qword_1008348A0);
  v14 = sub_1000083D8(&qword_1008348A8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t)&protocol conformance descriptor for TrainingLoadDataType);
  v15 = sub_1000F0610(&qword_1008348B0, &qword_1008348A0, (void (*)(void))sub_1004618AC, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  return Picker<>.init(_:selection:content:)(v5, v7, v9 & 1, v11, v4, sub_1004618A4, v17, DataType, v13, v14, v15);
}

uint64_t sub_100454F48(uint64_t a1)
{
  uint64_t v1;
  id v2;
  char v3;
  char *v4;
  uint64_t v5;
  uint64_t ViewModel;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v1 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  v2 = *(id *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_10010C5D0(*(id *)v1, v3);
  v4 = (char *)sub_1003F70B8(v2, v3);
  sub_10010C5EC(v2, v3);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v5);

  ViewModel = dispatch thunk of TrainingLoadViewModelProvider.viewModels.getter();
  swift_release(v5);
  v14 = ViewModel;
  KeyPath = swift_getKeyPath(&unk_10063D990);
  v8 = sub_100047110(&qword_100834908);
  v9 = sub_100047110(&qword_1008348C0);
  v10 = sub_100028384(&qword_100834910, &qword_100834908, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = sub_1000083D8(&qword_1008348A8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t)&protocol conformance descriptor for TrainingLoadDataType);
  v12 = sub_1004618AC();
  return ForEach<>.init(_:id:content:)(&v14, KeyPath, sub_1004550B4, 0, v8, v9, v10, v11, v12);
}

uint64_t sub_100455094()
{
  return TrainingLoadViewModel.dataType.getter();
}

uint64_t sub_1004550B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t DataType;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  char v21;
  char v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String View;

  v48 = a1;
  v1 = sub_100047110(&qword_100834918);
  __chkstk_darwin(v1);
  v47 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008348F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100834920);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100047110(&qword_1008348E0);
  __chkstk_darwin(v43);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v12 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100047110(&qword_1008348D0);
  __chkstk_darwin(v46);
  v45 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  View = TrainingLoadViewModel.localizedName()();
  v16 = sub_100038CA0();
  v17 = Text.init<A>(_:)(&View, &type metadata for String, v16);
  v49 = v18;
  v50 = v17;
  v20 = v19;
  v22 = v21 & 1;
  TrainingLoadViewModel.dataType.getter();
  v44 = v12;
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v23(v8, v14, DataType);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v24(v8, 0, 1, DataType);
  sub_100021CC0((uint64_t)v8, (uint64_t)v5, &qword_100834920);
  sub_100021CC0((uint64_t)v5, (uint64_t)&v10[*(int *)(v43 + 36)], &qword_1008348F0);
  v26 = v49;
  v25 = v50;
  *(_QWORD *)v10 = v50;
  *((_QWORD *)v10 + 1) = v26;
  v10[16] = v22;
  *((_QWORD *)v10 + 3) = v20;
  sub_1000E439C(v25, v26, v22);
  swift_bridgeObjectRetain(v20);
  sub_10001BE90((uint64_t)v5, &qword_1008348F0);
  sub_10001BE90((uint64_t)v8, &qword_100834920);
  v27 = (uint64_t)v47;
  v23(v47, v14, DataType);
  v24((char *)v27, 0, 1, DataType);
  v28 = sub_100047110(&qword_100834928);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 0, 1, v28);
  v29 = (uint64_t)v45;
  sub_100021CC0(v27, (uint64_t)&v45[*(int *)(v46 + 36)], &qword_100834918);
  sub_100021CC0((uint64_t)v10, v29, &qword_1008348E0);
  sub_10001BE90(v27, &qword_100834918);
  sub_10001BE90((uint64_t)v10, &qword_1008348E0);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v14, DataType);
  sub_1000E4458(v50, v49, v22);
  swift_bridgeObjectRelease(v20, v30, v31, v32, v33, v34, v35, v36);
  v38 = static Color.white.getter(v37);
  KeyPath = swift_getKeyPath(&unk_10063D930);
  v40 = v48;
  sub_100021CC0(v29, v48, &qword_1008348D0);
  v41 = (uint64_t *)(v40 + *(int *)(sub_100047110(&qword_1008348C0) + 36));
  *v41 = KeyPath;
  v41[1] = v38;
  return sub_10001BE90(v29, &qword_1008348D0);
}

uint64_t sub_100455450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE v13[16];
  uint64_t v14;

  v2 = sub_100047110(&qword_100834848);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a1;
  v6 = sub_100047110(&qword_100834868);
  v7 = sub_100047110(&qword_100834870);
  v8 = sub_100461708();
  v9 = sub_10046178C();
  Label.init(title:icon:)(sub_100461700, v13, sub_1004557B0, 0, v6, v7, v8, v9);
  v10 = sub_100028384(&qword_100834850, &qword_100834848, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v11 = sub_1002043F0();
  View.labelStyle<A>(_:)(v11, v2, &type metadata for PickerLabelStyle, v10, v11);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100455580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t ViewModel;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  char v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String View;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  char v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t result;
  _QWORD v47[2];
  Swift::String v48;

  v47[0] = type metadata accessor for TrainingLoadDataType(0);
  v4 = *(_QWORD *)(v47[0] - 8);
  __chkstk_darwin(v47[0]);
  v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v8 = *(_QWORD *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  v12 = *(id *)v11;
  v13 = *(_BYTE *)(v11 + 8);
  sub_10010C5D0(*(id *)v11, v13);
  v14 = (char *)sub_1003F70B8(v12, v13);
  sub_10010C5EC(v12, v13);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v15);

  v16 = sub_100047110(&qword_100834258);
  Binding.wrappedValue.getter(v16);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v6);
  v17 = swift_release(v15);
  (*(void (**)(char *, _QWORD, __n128))(v4 + 8))(v6, v47[0], v17);
  View = TrainingLoadViewModel.localizedName()();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, ViewModel);
  v48 = View;
  v19 = sub_100038CA0();
  v20 = Text.init<A>(_:)(&v48, &type metadata for String, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v28 = static Font.body.getter(v27);
  v30 = Text.font(_:)(v28, v20, v22, v26, v24, v29);
  v32 = v31;
  LOBYTE(v14) = v33;
  v35 = v34;
  swift_release(v28);
  sub_1000E4458(v20, v22, v26);
  swift_bridgeObjectRelease(v24, v36, v37, v38, v39, v40, v41, v42);
  v44 = static Color.white.getter(v43);
  KeyPath = swift_getKeyPath(&unk_10063D960);
  v48._countAndFlagsBits = v44;
  result = AnyShapeStyle.init<A>(_:)(&v48, &type metadata for Color, &protocol witness table for Color);
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = v32;
  *(_BYTE *)(a2 + 16) = v14 & 1;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = result;
  return result;
}

uint64_t sub_1004557B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v21 = sub_100047110(&qword_10082CBF0);
  __chkstk_darwin(v21);
  v2 = (uint64_t *)((char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100834890);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = Image.init(systemName:)(0xD000000000000017, 0x800000010068FB90);
  v12 = static Font.body.getter(v11);
  KeyPath = swift_getKeyPath(&unk_10063D8D0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Image.Scale.small(_:), v3);
  v14 = swift_getKeyPath(&unk_10063D900);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v2 + *(int *)(v21 + 28), v6, v3);
  *v2 = v14;
  sub_100021CC0((uint64_t)v2, (uint64_t)v9 + *(int *)(v7 + 36), &qword_10082CBF0);
  *v9 = v10;
  v9[1] = KeyPath;
  v9[2] = v12;
  swift_retain(v10);
  swift_retain(KeyPath);
  swift_retain(v12);
  sub_10001BE90((uint64_t)v2, &qword_10082CBF0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release(v12);
  swift_release(KeyPath);
  v15 = swift_release(v10);
  v16 = static Color.white.getter(v15);
  v17 = swift_getKeyPath(&unk_10063D930);
  v18 = v22;
  sub_100021CC0((uint64_t)v9, v22, &qword_100834890);
  v19 = (uint64_t *)(v18 + *(int *)(sub_100047110(&qword_100834870) + 36));
  *v19 = v17;
  v19[1] = v16;
  return sub_10001BE90((uint64_t)v9, &qword_100834890);
}

uint64_t sub_1004559F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;

  v63 = a2;
  v3 = sub_100047110(&qword_100834540);
  __chkstk_darwin(v3);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100834530);
  __chkstk_darwin(v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100834520);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100834510);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v15, v16, v17, v18, v19);
  *((_QWORD *)v5 + 1) = 0x4028000000000000;
  v5[16] = 0;
  v20 = sub_100047110(&qword_100834558);
  sub_100455D24(a1, (uint64_t)&v5[*(int *)(v20 + 44)]);
  v22 = static Edge.Set.horizontal.getter(v21);
  v23 = EdgeInsets.init(_all:)(20.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_100021CC0((uint64_t)v5, (uint64_t)v8, &qword_100834540);
  v30 = &v8[*(int *)(v6 + 36)];
  *v30 = v22;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  v31 = sub_10001BE90((uint64_t)v5, &qword_100834540);
  LOBYTE(v6) = static Edge.Set.bottom.getter(v31);
  v32 = EdgeInsets.init(_all:)(15.0);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_100834530);
  v39 = &v11[*(int *)(v9 + 36)];
  *v39 = v6;
  *((double *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  v40 = sub_10001BE90((uint64_t)v8, &qword_100834530);
  LOBYTE(v9) = static Edge.Set.top.getter(v40);
  v41 = EdgeInsets.init(_all:)(12.0);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_100021CC0((uint64_t)v11, (uint64_t)v14, &qword_100834520);
  v48 = &v14[*(int *)(v12 + 36)];
  *v48 = v9;
  *((double *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  v49 = sub_10001BE90((uint64_t)v11, &qword_100834520);
  v50 = static Alignment.center.getter(v49);
  v52 = v51;
  v53 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 48);
  v54 = *(_BYTE *)v53;
  v55 = *(_QWORD *)(v53 + 8);
  v64 = v54;
  v65 = v55;
  v56 = sub_100047110(&qword_100820D80);
  v57 = State.wrappedValue.getter(&v66, v56);
  v58 = 0;
  if (v66 == 1)
  {
    v59 = static Color.black.getter(v57);
    v58 = Color.opacity(_:)(0.5);
    swift_release(v59);
  }
  v60 = v63;
  sub_100021CC0((uint64_t)v14, v63, &qword_100834510);
  v61 = (uint64_t *)(v60 + *(int *)(sub_100047110(&qword_1008344F8) + 36));
  *v61 = v58;
  v61[1] = v50;
  v61[2] = v52;
  return sub_10001BE90((uint64_t)v14, &qword_100834510);
}

void sub_100455D24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t DetailsStackedChartView;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  char v53;
  id v54;
  uint64_t v55;
  __n128 v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell **v60;
  uint64_t v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  uint64_t v63;
  const char *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  __int128 v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  uint64_t v80;
  const char *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  uint64_t v89;
  uint64_t v90;
  os_log_type_t v91;
  NSObject *v92;
  uint64_t v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  void (*v100)(char *, uint64_t, CHWorkoutDetailHeartRateTableViewCell *);
  char *v101;
  unint64_t v102;
  unint64_t v103;
  const char *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t KeyPath;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char *v138;
  char v139;
  void (*v140)(void);
  uint64_t v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  CHWorkoutDetailHeartRateTableViewCell *v148;
  CHWorkoutDetailHeartRateTableViewCell *v149;
  uint64_t v150;
  CHWorkoutDetailHeartRateTableViewCell *v151;
  char *v152;
  void *v153;
  uint64_t v154;
  id v155;
  CHWorkoutDetailHeartRateTableViewCell *v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;
  void *v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  void *v160;
  uint64_t v161;
  CHWorkoutDetailHeartRateTableViewCell *v162;
  char *v163;
  SEL v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  CHWorkoutDetailHeartRateTableViewCell *v171;
  void (*v172)(char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  SEL v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  __n128 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  double v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  double v202;
  unint64_t v203;
  char *v204;
  char *v205;
  double v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  __n128 v211;
  id v212;
  double v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  CHWorkoutDetailHeartRateTableViewCell *v222;
  unint64_t v223;
  uint64_t OpaqueTypeConformance2;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  double v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  id v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _OWORD *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  char *v258;
  char *v259;
  __int128 v260;
  uint64_t v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  CHWorkoutDetailHeartRateTableViewCell *v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t);
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  CHWorkoutDetailHeartRateTableViewCell *v279;
  uint64_t v280;
  CHWorkoutDetailHeartRateTableViewCell *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _QWORD v285[3];
  CHWorkoutDetailHeartRateTableViewCell *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  _OWORD *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  unint64_t v335;
  __int128 v336;
  void (*v337)(char *, char *, uint64_t);
  char *v338;
  void (**v339)(_QWORD, _QWORD);
  CHWorkoutDetailHeartRateTableViewCell *v340;
  CHWorkoutDetailHeartRateTableViewCell *v341;
  CHWorkoutDetailHeartRateTableViewCell *v342;
  CHWorkoutDetailHeartRateTableViewCell *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  char *v348;
  CHWorkoutDetailHeartRateTableViewCell *v349;
  unsigned __int8 v350;
  _BYTE v351[7];
  _BYTE v352[7];
  unsigned __int8 v353;
  _BYTE v354[7];
  int v355;
  __int16 v356;
  _BYTE v357[7];
  unsigned __int8 v358;
  _BYTE v359[7];
  unsigned __int8 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  _OWORD v369[2];
  CHWorkoutDetailHeartRateTableViewCell *v370;
  uint64_t v371;
  CHWorkoutDetailHeartRateTableViewCell *v372;
  CHWorkoutDetailHeartRateTableViewCell *v373;
  unsigned __int8 v374;
  _BYTE v375[7];
  uint64_t v376;
  uint64_t v377;
  __int16 v378;
  int v379;
  __int16 v380;
  char v381;
  _BYTE v382[7];
  double v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char v387;
  _BYTE v388[7];
  char v389;
  _BYTE v390[7];
  double v391;
  unint64_t v392;
  char *v393;
  char *v394;
  char v395;
  CHWorkoutDetailHeartRateTableViewCell *v396;
  char v397;
  CHWorkoutDetailHeartRateTableViewCell *v398;
  char v399;
  uint64_t v400;
  uint64_t v401;

  v331 = a2;
  v330 = sub_100047110(&qword_100834560);
  __chkstk_darwin(v330);
  v294 = (uint64_t)&v286 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v297 = type metadata accessor for Divider(0);
  v289 = *(_QWORD *)(v297 - 8);
  __chkstk_darwin(v297);
  v296 = (char *)&v286 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v292 = (char *)&v286 - v6;
  v295 = sub_100047110(&qword_100834568);
  v291 = *(_QWORD *)(v295 - 8);
  __chkstk_darwin(v295);
  v290 = (char *)&v286 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v293 = (char *)&v286 - v9;
  v327 = sub_100047110(&qword_100834570);
  __chkstk_darwin(v327);
  v329 = (uint64_t)&v286 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = sub_100047110(&qword_100834578);
  __chkstk_darwin(v328);
  v321 = (_OWORD *)((char *)&v286 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v319 = type metadata accessor for RoundedRectangle(0);
  v12 = __chkstk_darwin(v319);
  v320 = (char *)&v286 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v313 = type metadata accessor for PlainButtonStyle(0, v12);
  v310 = *(_QWORD *)(v313 - 8);
  __chkstk_darwin(v313);
  v308 = (char *)&v286 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100834580);
  v306 = *(_QWORD *)(v15 - 8);
  v307 = v15;
  __chkstk_darwin(v15);
  v304 = (char *)&v286 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v314 = sub_100047110(&qword_100832D98);
  v312 = *(_QWORD *)(v314 - 8);
  __chkstk_darwin(v314);
  v309 = (char *)&v286 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_100832DA0);
  __chkstk_darwin(v18);
  v311 = (uint64_t)&v286 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v305 = sub_100047110(&qword_100834588);
  __chkstk_darwin(v305);
  v317 = (uint64_t)&v286 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v315 = sub_100047110(&qword_100834590);
  __chkstk_darwin(v315);
  v318 = (uint64_t)&v286 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v316 = sub_100047110(&qword_100834598);
  __chkstk_darwin(v316);
  v333 = (uint64_t)&v286 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v332 = (uint64_t)&v286 - v24;
  v25 = type metadata accessor for Font.Leading(0);
  v302 = *(_QWORD *)(v25 - 8);
  v303 = v25;
  __chkstk_darwin(v25);
  v301 = (char *)&v286 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Image.ResizingMode(0);
  v299 = *(_QWORD *)(v27 - 8);
  v300 = v27;
  __chkstk_darwin(v27);
  v298 = (char *)&v286 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (CHWorkoutDetailHeartRateTableViewCell *)type metadata accessor for EnvironmentValues(0);
  v339 = *(void (***)(_QWORD, _QWORD))v29[-1].cellInset;
  v340 = v29;
  __chkstk_darwin(v29);
  v338 = (char *)&v286 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100047110(&qword_100823550);
  __chkstk_darwin(v31);
  v337 = (void (*)(char *, char *, uint64_t))((char *)&v286 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v341 = (CHWorkoutDetailHeartRateTableViewCell *)type metadata accessor for SleepingSampleViewModel(0);
  v33 = *(_QWORD *)v341[-1].cellInset;
  __chkstk_darwin(v341);
  v347 = (char *)&v286 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v346 = (char *)&v286 - v36;
  v342 = (CHWorkoutDetailHeartRateTableViewCell *)type metadata accessor for SleepingSampleDataType(0);
  v349 = *(CHWorkoutDetailHeartRateTableViewCell **)v342[-1].cellInset;
  __chkstk_darwin(v342);
  v348 = (char *)&v286 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v324 = *(_QWORD *)(DetailsStackedChartView - 8);
  __chkstk_darwin(DetailsStackedChartView);
  v326 = (char *)&v286 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v323 = (uint64_t)&v286 - v41;
  v325 = v42;
  v44 = __chkstk_darwin(v43);
  v46 = (char *)&v286 - v45;
  v47 = type metadata accessor for OvernightMetricsViewModel(0, v44);
  v48 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v50 = (char *)&v286 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v322 = DetailsStackedChartView;
  v51 = a1 + *(int *)(DetailsStackedChartView + 68);
  v52 = *(id *)v51;
  v53 = *(_BYTE *)(v51 + 8);
  sub_10010C5D0(*(id *)v51, v53);
  v54 = sub_1003F70B8(v52, v53);
  sub_10010C5EC(v52, v53);
  v55 = sub_100171BD4();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  v56 = swift_release(v55);
  v57 = OvernightMetricsViewModel.watchExperienceRequiresSetup.getter(v56);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
  if (v57 == 2)
  {
    sub_10004F8C8(a1, (uint64_t)v46, type metadata accessor for LoadDetailsStackedChartView);
    v58 = (uint64_t)v46;
  }
  else
  {
    sub_10004F8C8(a1, (uint64_t)v46, type metadata accessor for LoadDetailsStackedChartView);
    v58 = (uint64_t)v46;
    if ((v57 & 1) != 0)
    {
      sub_100011F54((uint64_t)v46, type metadata accessor for LoadDetailsStackedChartView);
      v112 = v323;
      sub_10004F8C8(a1, v323, type metadata accessor for LoadDetailsStackedChartView);
      v114 = v325;
      v113 = (uint64_t)v326;
      v115 = v324;
LABEL_26:
      sub_100011F54(v112, type metadata accessor for LoadDetailsStackedChartView);
      goto LABEL_27;
    }
  }
  v59 = v322;
  v60 = (CHWorkoutDetailHeartRateTableViewCell **)(v58 + *(int *)(v322 + 52));
  v62 = *v60;
  v61 = (uint64_t)v60[1];
  v370 = v62;
  v371 = v61;
  v63 = sub_100047110(&qword_100834450);
  State.wrappedValue.getter(&v361, v63);
  v72 = *(_QWORD *)(v361 + 16);
  if (v72)
  {
    v287 = v58;
    v288 = a1;
    v345 = v58 + *(int *)(v59 + 68);
    v73 = (v349[2].cellPadding[0] + 32) & ~(unint64_t)v349[2].cellPadding[0];
    v286 = (CHWorkoutDetailHeartRateTableViewCell *)v361;
    v74 = v361 + v73;
    v75 = *(_QWORD *)v349[2].heartRateController;
    v343 = *(CHWorkoutDetailHeartRateTableViewCell **)v349->cellPadding;
    v344 = v75;
    v76 = &_swiftEmptyArrayStorage;
    *(_QWORD *)&v71 = 136315138;
    v336 = v71;
    v335 = 0x800000010068CB00;
    v334 = (char *)&type metadata for Any + 8;
    v77 = (uint64_t)v337;
    v79 = v341;
    v78 = v342;
    v80 = (uint64_t)v348;
    ((void (*)(char *, _QWORD, CHWorkoutDetailHeartRateTableViewCell *))v343)(v348, v361 + v73, v342);
    while (1)
    {
      v88 = *(CHWorkoutDetailHeartRateTableViewCell **)v345;
      if (*(_BYTE *)(v345 + 8) == 1)
      {
        v370 = *(CHWorkoutDetailHeartRateTableViewCell **)v345;
        sub_10010C5D0(v88, 1);
      }
      else
      {
        sub_10010C5D0(v88, 0);
        swift_retain(v88);
        v90 = static os_log_type_t.fault.getter(v89);
        v91 = v90;
        v92 = static Log.runtimeIssuesLog.getter(v90);
        if (os_log_type_enabled(v92, v91))
        {
          v93 = swift_slowAlloc(12, -1);
          v94 = (CHWorkoutDetailHeartRateTableViewCell *)swift_slowAlloc(32, -1);
          v370 = v94;
          *(_DWORD *)v93 = v336;
          *(_QWORD *)(v93 + 4) = sub_10003E8EC(0xD000000000000013, v335, (uint64_t *)&v370);
          _os_log_impl((void *)&_mh_execute_header, v92, v91, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v93, 0xCu);
          swift_arrayDestroy(v94, 1, v334);
          v95 = v94;
          v77 = (uint64_t)v337;
          swift_slowDealloc(v95, -1, -1);
          v96 = v93;
          v78 = v342;
          swift_slowDealloc(v96, -1, -1);
        }

        v79 = v341;
        v97 = (uint64_t)v338;
        EnvironmentValues.init()(v98);
        swift_getAtKeyPath(v97, v88);
        sub_10010C5EC(v88, 0);
        ((void (**)(uint64_t, CHWorkoutDetailHeartRateTableViewCell *))v339)[1](v97, v340);
        sub_10010C5EC(v88, 0);
        v80 = (uint64_t)v348;
      }
      v99 = v370;
      sub_1001784C0(v80, v77);

      if ((*(unsigned int (**)(uint64_t, uint64_t, CHWorkoutDetailHeartRateTableViewCell *))(v33 + 48))(v77, 1, v79) == 1)
      {
        (*(void (**)(uint64_t, CHWorkoutDetailHeartRateTableViewCell *))v349->heartRateController)(v80, v78);
        sub_10001BE90(v77, &qword_100823550);
      }
      else
      {
        v100 = *(void (**)(char *, uint64_t, CHWorkoutDetailHeartRateTableViewCell *))(v33 + 32);
        v101 = v346;
        v100(v346, v77, v79);
        (*(void (**)(char *, char *, CHWorkoutDetailHeartRateTableViewCell *))(v33 + 16))(v347, v101, v79);
        if ((swift_isUniquelyReferenced_nonNull_native(v76) & 1) == 0)
          v76 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001415EC(0, *(_QWORD *)v76->cellPadding + 1, 1, (unint64_t)v76);
        v103 = *(_QWORD *)v76->cellPadding;
        v102 = *(_QWORD *)v76->cellInset;
        if (v103 >= v102 >> 1)
          v76 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001415EC(v102 > 1, v103 + 1, 1, (unint64_t)v76);
        *(_QWORD *)v76->cellPadding = v103 + 1;
        v100((char *)v76+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v103, (uint64_t)v347, v79);
        (*(void (**)(char *, CHWorkoutDetailHeartRateTableViewCell *))(v33 + 8))(v346, v79);
        v80 = (uint64_t)v348;
        v78 = v342;
        (*(void (**)(char *, CHWorkoutDetailHeartRateTableViewCell *))v349->heartRateController)(v348, v342);
      }
      v74 += v344;
      if (!--v72)
        break;
      ((void (*)(uint64_t, uint64_t, CHWorkoutDetailHeartRateTableViewCell *))v343)(v80, v74, v78);
    }
    swift_bridgeObjectRelease(v286, v81, v82, v83, v84, v85, v86, v87);
    v58 = v287;
    a1 = v288;
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v361, v64, v65, v66, v67, v68, v69, v70);
    v76 = &_swiftEmptyArrayStorage;
  }
  v111 = *(_QWORD *)v76->cellPadding;
  swift_bridgeObjectRelease(v76, v104, v105, v106, v107, v108, v109, v110);
  sub_100011F54(v58, type metadata accessor for LoadDetailsStackedChartView);
  v112 = v323;
  sub_10004F8C8(a1, v323, type metadata accessor for LoadDetailsStackedChartView);
  v114 = v325;
  v113 = (uint64_t)v326;
  v115 = v324;
  if (!v111)
    goto LABEL_26;
  v116 = sub_10044FC44();
  sub_100011F54(v112, type metadata accessor for LoadDetailsStackedChartView);
  if ((v116 & 1) == 0)
  {
    v370 = sub_10044F75C();
    KeyPath = swift_getKeyPath(&unk_10063D8A0);
    sub_10004F8C8(a1, v113, type metadata accessor for LoadDetailsStackedChartView);
    v118 = *(unsigned __int8 *)(v115 + 80);
    v119 = (v118 + 16) & ~v118;
    v120 = swift_allocObject(&unk_1007A0180, v119 + v114, v118 | 7);
    sub_100047C88(v113, v120 + v119, type metadata accessor for LoadDetailsStackedChartView);
    v121 = sub_100047110(&qword_1008345A0);
    v122 = a1;
    v123 = sub_100047110(&qword_1008345A8);
    v124 = sub_100028384(&qword_1008345B0, &qword_1008345A0, (uint64_t)&protocol conformance descriptor for [A]);
    v125 = sub_1000083D8(&qword_1008345B8, (uint64_t (*)(uint64_t))&type metadata accessor for SleepingSampleDataType, (uint64_t)&protocol conformance descriptor for SleepingSampleDataType);
    v126 = sub_100028384(&qword_1008345C0, &qword_1008345A8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v127 = v293;
    ForEach<>.init(_:id:content:)(&v370, KeyPath, sub_100461168, v120, v121, v123, v124, v125, v126);
    v128 = v322;
    v129 = a1 + *(int *)(v322 + 40);
    v130 = *(_BYTE *)v129;
    v131 = *(_QWORD *)(v129 + 8);
    LOBYTE(v361) = v130;
    *((_QWORD *)&v361 + 1) = v131;
    sub_100047110(&qword_100820D80);
    State.projectedValue.getter(&v370);
    v342 = v370;
    v345 = v371;
    LODWORD(v340) = v372;
    v132 = (uint64_t *)(a1 + *(int *)(v128 + 52));
    v134 = *v132;
    v133 = v132[1];
    *(_QWORD *)&v361 = v134;
    *((_QWORD *)&v361 + 1) = v133;
    sub_100047110(&qword_100834450);
    State.projectedValue.getter(&v370);
    v349 = v370;
    v348 = (char *)v371;
    v343 = v372;
    v135 = type metadata accessor for BalanceDataProvider(0);
    v136 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    v338 = (char *)Environment.init<A>(_:)(v135, v135, v136);
    LOBYTE(v123) = v137 & 1;
    LODWORD(v347) = v137 & 1;
    v138 = v292;
    Divider.init()(v338);
    v339 = *(void (***)(_QWORD, _QWORD))(v122 + *(int *)(v128 + 20));
    v341 = v339;
    v344 = Environment.init<A>(_:)(v135, v135, v136);
    LOBYTE(v125) = v139 & 1;
    LODWORD(v346) = v139 & 1;
    v140 = *(void (**)(void))(v291 + 16);
    ((void (*)(char *, char *, uint64_t))v140)(v290, v127, v295);
    LOBYTE(v370) = (_BYTE)v340;
    LOBYTE(v361) = v123;
    v337 = *(void (**)(char *, char *, uint64_t))(v289 + 16);
    v141 = v297;
    v337(v296, v138, v297);
    LOBYTE(v396) = v125;
    v142 = v294;
    v140();
    v143 = (int *)sub_100047110(&qword_1008345C8);
    v144 = v142;
    v145 = v142 + v143[12];
    v146 = (char)v370;
    v147 = v361;
    LODWORD(v340) = v361;
    v149 = v342;
    v148 = v343;
    v150 = v345;
    *(_QWORD *)v145 = v342;
    *(_QWORD *)(v145 + 8) = v150;
    *(_BYTE *)(v145 + 16) = v146;
    v151 = v349;
    v152 = v348;
    *(_QWORD *)(v145 + 24) = v349;
    *(_QWORD *)(v145 + 32) = v152;
    v153 = v338;
    *(_QWORD *)(v145 + 40) = v148;
    *(_QWORD *)(v145 + 48) = v153;
    *(_BYTE *)(v145 + 56) = v147;
    v337((char *)(v144 + v143[16]), v296, v141);
    v154 = v144 + v143[20];
    LOBYTE(v143) = (_BYTE)v396;
    v155 = (id)v344;
    *(_QWORD *)v154 = v339;
    *(_QWORD *)(v154 + 8) = v155;
    *(_BYTE *)(v154 + 16) = (_BYTE)v143;
    swift_retain(v151);
    swift_retain(v152);
    swift_bridgeObjectRetain(v148);
    v156 = v341;
    v157 = v149;
    swift_retain(v149);
    swift_retain(v150);
    v158 = v153;
    sub_10010C5D0(v153, (char)v340);
    v159 = v156;
    v341 = v159;
    v160 = v155;
    sub_10010C5D0(v155, (char)v143);
    swift_retain(v157);
    v161 = v150;
    swift_retain(v150);
    v162 = v349;
    swift_retain(v349);
    v163 = v348;
    swift_retain(v348);
    swift_bridgeObjectRetain(v148);
    sub_10010C5D0(v158, (char)v347);
    sub_10010C5D0(v160, (char)v346);

    sub_10010C5EC(v160, (char)v143);
    v340 = *(CHWorkoutDetailHeartRateTableViewCell **)(v289 + 8);
    ((void (*)(char *, uint64_t))v340)(v296, v297);
    LOBYTE(v160) = v361;
    swift_bridgeObjectRelease(v148, v164, v165, v166, v167, v168, v169, v170);
    swift_release(v163);
    swift_release(v162);
    swift_release(v161);
    v171 = v157;
    swift_release(v157);
    sub_10010C5EC(v158, (char)v160);
    v172 = *(void (**)(char *, uint64_t))(v291 + 8);
    v173 = v295;
    v172(v290, v295);
    v174 = v294;
    v175 = v329;
    sub_100021CC0(v294, v329, &qword_100834560);
    swift_storeEnumTagMultiPayload(v175, v327, 1);
    v176 = sub_100028384(&qword_1008345D0, &qword_100834578, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v177 = sub_100028384(&qword_1008345D8, &qword_100834560, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v175, v328, v330, v176, v177);
    sub_10001BE90(v174, &qword_100834560);

    sub_10010C5EC((id)v344, (char)v346);
    ((void (*)(char *, uint64_t))v340)(v292, v297);
    swift_bridgeObjectRelease(v343, v178, v179, v180, v181, v182, v183, v184);
    swift_release(v348);
    swift_release(v349);
    swift_release(v345);
    swift_release(v171);
    sub_10010C5EC(v158, (char)v347);
    v172(v293, v173);
    return;
  }
LABEL_27:
  v185 = Image.init(_:bundle:)(0x61696E6F6D726168, 0xEC0000006E6F6349, 0);
  v187 = v298;
  v186 = v299;
  v188 = v300;
  (*(void (**)(char *, _QWORD, uint64_t))(v299 + 104))(v298, enum case for Image.ResizingMode.stretch(_:), v300);
  v349 = (CHWorkoutDetailHeartRateTableViewCell *)Image.resizable(capInsets:resizingMode:)(v187, v185, 0.0, 0.0, 0.0, 0.0);
  v189 = swift_release(v185);
  v190 = (*(uint64_t (**)(char *, uint64_t, __n128))(v186 + 8))(v187, v188, v189);
  v191 = static Alignment.center.getter(v190);
  v193 = _FrameLayout.init(width:height:alignment:)(&v396, 0x4050000000000000, 0, 0x4050000000000000, 0, v191, v192);
  LOBYTE(v185) = v397;
  v342 = v396;
  v343 = v398;
  LOBYTE(v188) = v399;
  v344 = v401;
  v345 = v400;
  LODWORD(v346) = static Edge.Set.top.getter(v193);
  v194 = EdgeInsets.init(_all:)(21.0);
  v196 = v195;
  v198 = v197;
  v200 = v199;
  LODWORD(v347) = static Edge.Set.bottom.getter(v201);
  v202 = EdgeInsets.init(_all:)(3.0);
  v334 = v204;
  v335 = v203;
  v326 = v205;
  v360 = v185;
  v358 = v188;
  v353 = 0;
  v350 = 0;
  v206 = sub_100457B30(0xD000000000000058, 0x800000010069F460, 0xD000000000000049, 0x800000010069F410, (uint64_t)&v370);
  v338 = (char *)v371;
  v348 = (char *)v372;
  v340 = v373;
  v341 = v370;
  LODWORD(v339) = v374;
  v207 = static Font.body.getter(v206);
  v209 = v301;
  v208 = v302;
  v210 = v303;
  (*(void (**)(char *, _QWORD, uint64_t))(v302 + 104))(v301, enum case for Font.Leading.tight(_:), v303);
  v337 = (void (*)(char *, char *, uint64_t))Font.leading(_:)(v209, v207);
  v211 = swift_release(v207);
  (*(void (**)(char *, uint64_t, __n128))(v208 + 8))(v209, v210, v211);
  v325 = swift_getKeyPath(&unk_10063D8D0);
  v212 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  *(_QWORD *)&v336 = Color.init(_:)(v212);
  LODWORD(v324) = static Edge.Set.bottom.getter(v336);
  v213 = EdgeInsets.init(_all:)(3.0);
  v322 = v214;
  v323 = *(_QWORD *)&v213;
  v302 = v216;
  v303 = v215;
  sub_10004F8C8(a1, v113, type metadata accessor for LoadDetailsStackedChartView);
  v217 = *(unsigned __int8 *)(v115 + 80);
  v218 = (v217 + 16) & ~v217;
  v219 = swift_allocObject(&unk_1007A01A8, v218 + v114, v217 | 7);
  v220 = sub_100047C88(v113, v219 + v218, type metadata accessor for LoadDetailsStackedChartView);
  __chkstk_darwin(v220);
  v285[2] = a1;
  v221 = sub_100047110(&qword_1008345E0);
  v222 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100007050(&qword_1008345E8);
  v223 = sub_1004611DC();
  v370 = v222;
  v371 = v223;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v370, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v225 = v304;
  v226 = Button.init(action:label:)(sub_1004611C0, v219, sub_1004611D4, v285, v221, OpaqueTypeConformance2);
  v227 = v308;
  PlainButtonStyle.init()(v226);
  v228 = sub_100028384(&qword_1008345F8, &qword_100834580, (uint64_t)&protocol conformance descriptor for Button<A>);
  v229 = sub_1000083D8(&qword_100834600, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v230 = v309;
  v231 = v307;
  v232 = v313;
  View.buttonStyle<A>(_:)(v227, v307, v313, v228, v229);
  (*(void (**)(char *, uint64_t))(v310 + 8))(v227, v232);
  v233 = (*(uint64_t (**)(char *, uint64_t))(v306 + 8))(v225, v231);
  v234 = static Alignment.center.getter(v233);
  v235 = v311;
  v237 = sub_1003EC74C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v311, 0.0, 1, 0.0, 1, v234, v236);
  v238 = (*(uint64_t (**)(char *, uint64_t, double))(v312 + 8))(v230, v314, v237);
  LOBYTE(v228) = static Edge.Set.all.getter(v238);
  v239 = v317;
  sub_100021CC0(v235, v317, &qword_100832DA0);
  v240 = v239 + *(int *)(v305 + 36);
  *(_BYTE *)v240 = v228;
  *(_OWORD *)(v240 + 8) = 0u;
  *(_OWORD *)(v240 + 24) = 0u;
  *(_BYTE *)(v240 + 40) = 1;
  sub_10001BE90(v235, &qword_100832DA0);
  v241 = sub_100032490();
  v242 = Color.init(uiColor:)(v241);
  LOBYTE(v230) = static Edge.Set.all.getter(v242);
  v243 = v318;
  sub_100021CC0(v239, v318, &qword_100834588);
  v244 = v243 + *(int *)(v315 + 36);
  *(_QWORD *)v244 = v242;
  *(_BYTE *)(v244 + 8) = (_BYTE)v230;
  sub_10001BE90(v239, &qword_100834588);
  v245 = v320;
  v246 = &v320[*(int *)(v319 + 20)];
  v247 = enum case for RoundedCornerStyle.continuous(_:);
  v248 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v248 - 8) + 104))(v246, v247, v248);
  __asm { FMOV            V0.2D, #10.0 }
  *v245 = _Q0;
  v254 = v333;
  v255 = v333 + *(int *)(v316 + 36);
  sub_10004F8C8((uint64_t)v245, v255, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v255 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0(v243, v254, &qword_100834590);
  sub_100011F54((uint64_t)v245, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10001BE90(v243, &qword_100834590);
  v256 = v332;
  sub_100045AD4(v254, v332, &qword_100834598);
  LOBYTE(v243) = v360;
  LODWORD(v317) = v360;
  LOBYTE(v245) = v358;
  LODWORD(v318) = v358;
  LOBYTE(v247) = v353;
  LODWORD(v319) = v353;
  LOBYTE(v208) = v350;
  LODWORD(v320) = v350;
  sub_100021CC0(v256, v254, &qword_100834598);
  *(_QWORD *)&v361 = v349;
  *((_QWORD *)&v361 + 1) = v342;
  LOBYTE(v362) = v243;
  *(_DWORD *)((char *)&v362 + 1) = *(_DWORD *)v359;
  DWORD1(v362) = *(_DWORD *)&v359[3];
  *((_QWORD *)&v362 + 1) = v343;
  LOBYTE(v363) = (_BYTE)v245;
  *(_DWORD *)((char *)&v363 + 1) = *(_DWORD *)v357;
  DWORD1(v363) = *(_DWORD *)&v357[3];
  *((_QWORD *)&v363 + 1) = v345;
  *(_QWORD *)&v364 = v344;
  WORD4(v364) = 256;
  HIWORD(v364) = v356;
  *(_DWORD *)((char *)&v364 + 10) = v355;
  LOBYTE(v365) = (_BYTE)v346;
  DWORD1(v365) = *(_DWORD *)&v354[3];
  *(_DWORD *)((char *)&v365 + 1) = *(_DWORD *)v354;
  *((double *)&v365 + 1) = v194;
  *(_QWORD *)&v366 = v196;
  *((_QWORD *)&v366 + 1) = v198;
  *(_QWORD *)&v367 = v200;
  BYTE8(v367) = v247;
  *(_DWORD *)((char *)&v367 + 9) = *(_DWORD *)v352;
  HIDWORD(v367) = *(_DWORD *)&v352[3];
  LOBYTE(v368) = (_BYTE)v347;
  DWORD1(v368) = *(_DWORD *)&v351[3];
  *(_DWORD *)((char *)&v368 + 1) = *(_DWORD *)v351;
  *((double *)&v368 + 1) = v202;
  v258 = v334;
  v257 = v335;
  *(_QWORD *)&v369[0] = v335;
  *((_QWORD *)&v369[0] + 1) = v334;
  v259 = v326;
  *(_QWORD *)&v369[1] = v326;
  BYTE8(v369[1]) = v208;
  v260 = v362;
  v261 = (uint64_t)v321;
  *v321 = v361;
  *(_OWORD *)(v261 + 16) = v260;
  v262 = v363;
  v263 = v364;
  v264 = v366;
  v265 = v367;
  *(_OWORD *)(v261 + 64) = v365;
  *(_OWORD *)(v261 + 80) = v264;
  *(_OWORD *)(v261 + 32) = v262;
  *(_OWORD *)(v261 + 48) = v263;
  v266 = v368;
  v267 = v369[0];
  *(_OWORD *)(v261 + 137) = *(_OWORD *)((char *)v369 + 9);
  *(_OWORD *)(v261 + 112) = v266;
  *(_OWORD *)(v261 + 128) = v267;
  *(_OWORD *)(v261 + 96) = v265;
  v268 = v340;
  v269 = (uint64_t)v341;
  *(_QWORD *)(v261 + 160) = v341;
  v270 = v337;
  v271 = (uint64_t)v338;
  v272 = v348;
  *(_QWORD *)(v261 + 168) = v338;
  *(_QWORD *)(v261 + 176) = v272;
  *(_QWORD *)(v261 + 184) = v268;
  *(_BYTE *)(v261 + 192) = (_BYTE)v339;
  v273 = v325;
  *(_QWORD *)(v261 + 200) = v325;
  *(_QWORD *)(v261 + 208) = v270;
  v274 = v336;
  *(_QWORD *)(v261 + 216) = v336;
  *(_BYTE *)(v261 + 224) = v324;
  *(_QWORD *)&v266 = v322;
  *(_QWORD *)(v261 + 232) = v323;
  *(_QWORD *)(v261 + 240) = v266;
  *(_QWORD *)&v266 = v302;
  *(_QWORD *)(v261 + 248) = v303;
  *(_QWORD *)(v261 + 256) = v266;
  *(_BYTE *)(v261 + 264) = 0;
  v275 = sub_100047110(&qword_100834608);
  sub_100021CC0(v333, v261 + *(int *)(v275 + 64), &qword_100834598);
  sub_10010799C(&v361);
  sub_100116B48(v269, v271, (char)v272, (uint64_t)v268);
  swift_retain(v273);
  swift_retain(v270);
  v276 = v274;
  swift_retain(v274);
  swift_retain(v349);
  v277 = v271;
  v278 = v271;
  LOBYTE(v247) = (_BYTE)v348;
  v279 = v340;
  sub_100116B48(v269, v277, (char)v348, (uint64_t)v340);
  swift_retain(v273);
  swift_retain(v270);
  swift_retain(v276);
  sub_10001BE90(v333, &qword_100834598);
  sub_100116B88(v269, v278, v247, (uint64_t)v279);
  swift_release(v276);
  swift_release(v270);
  v280 = v273;
  swift_release(v273);
  v281 = v349;
  v370 = v349;
  v371 = (uint64_t)v342;
  LOBYTE(v372) = v317;
  *(_DWORD *)((char *)&v372 + 1) = *(_DWORD *)v359;
  HIDWORD(v372) = *(_DWORD *)&v359[3];
  v373 = v343;
  v374 = v318;
  *(_DWORD *)v375 = *(_DWORD *)v357;
  *(_DWORD *)&v375[3] = *(_DWORD *)&v357[3];
  v376 = v345;
  v377 = v344;
  v378 = 256;
  v379 = v355;
  v380 = v356;
  v381 = (char)v346;
  *(_DWORD *)&v382[3] = *(_DWORD *)&v354[3];
  *(_DWORD *)v382 = *(_DWORD *)v354;
  v383 = v194;
  v384 = v196;
  v385 = v198;
  v386 = v200;
  v387 = v319;
  *(_DWORD *)v388 = *(_DWORD *)v352;
  *(_DWORD *)&v388[3] = *(_DWORD *)&v352[3];
  v389 = (char)v347;
  *(_DWORD *)v390 = *(_DWORD *)v351;
  *(_DWORD *)&v390[3] = *(_DWORD *)&v351[3];
  v391 = v202;
  v392 = v257;
  v393 = v258;
  v394 = v259;
  v395 = (char)v320;
  sub_100461280(&v370);
  v282 = v329;
  sub_100021CC0(v261, v329, &qword_100834578);
  swift_storeEnumTagMultiPayload(v282, v327, 0);
  v283 = sub_100028384(&qword_1008345D0, &qword_100834578, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v284 = sub_100028384(&qword_1008345D8, &qword_100834560, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  _ConditionalContent<>.init(storage:)(v282, v328, v330, v283, v284);
  sub_10001BE90(v261, &qword_100834578);
  sub_10001BE90(v332, &qword_100834598);
  sub_100116B88((uint64_t)v341, (uint64_t)v338, (char)v348, (uint64_t)v279);
  swift_release(v281);
  swift_release(v336);
  swift_release(v337);
  swift_release(v280);
}

uint64_t sub_1004577B0(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;

  v3 = type metadata accessor for OvernightMetricsViewModel(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EffortUtilities.OvernightVitalsState(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10044FC44();
  result = type metadata accessor for LoadDetailsStackedChartView(0);
  v13 = *(_QWORD *)(a1 + *(int *)(result + 20));
  if ((v11 & 1) != 0)
  {
    if (!v13)
      return result;
    v14 = a1 + *(int *)(result + 68);
    v15 = *(id *)v14;
    v16 = *(_BYTE *)(v14 + 8);
    sub_10010C5D0(*(id *)v14, v16);
    v17 = sub_1003F70B8(v15, v16);
    sub_10010C5EC(v15, v16);
    v18 = sub_100171BD4();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    v19 = swift_release(v18);
    OvernightMetricsViewModel.overnightVitalsState.getter(v19);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1003BA0BC((uint64_t)v10);
  }
  else
  {
    if (!v13)
      return result;
    v20 = a1 + *(int *)(result + 68);
    v21 = *(id *)v20;
    v22 = *(_BYTE *)(v20 + 8);
    sub_10010C5D0(*(id *)v20, v22);
    v23 = sub_1003F70B8(v21, v22);
    sub_10010C5EC(v21, v22);
    v24 = sub_100171BD4();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    v25 = swift_release(v24);
    OvernightMetricsViewModel.overnightVitalsState.getter(v25);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1003BA0F0((uint64_t)v10);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double sub_100457990@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t KeyPath;
  double v15;
  uint64_t v16;
  unint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v19 = a1;
  v1 = type metadata accessor for Font.Leading(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100457B30(0x616548206E65704FLL, 0xEB0000000068746CLL, 0x5620705520746553, 0xED0000736C617469, (uint64_t)&v20);
  v6 = v20;
  v7 = v21;
  v8 = v22;
  v9 = v23;
  v10 = v24;
  v11 = static Font.body.getter(v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v1);
  v12 = Font.leading(_:)(v4, v11);
  v13 = swift_release(v11);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v13);
  KeyPath = swift_getKeyPath(&unk_10063D8D0);
  v20 = v6;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = v10;
  v25 = KeyPath;
  v26 = v12;
  v15 = static Font.Weight.semibold.getter(KeyPath);
  v16 = sub_100047110(&qword_1008345E8);
  v17 = sub_1004611DC();
  View.fontWeight(_:)(*(_QWORD *)&v15, 0, v16, v17);
  sub_100116B88(v6, v7, v8, v9);
  swift_release(v12);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_100457B30@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  char v28;

  if ((sub_10044FC44() & 1) != 0)
  {
    v10 = LocalizedStringKey.init(stringLiteral:)(a1, a2);
    v21 = Text.init(_:tableName:bundle:comment:)(v10);
    v22 = v11;
    v23 = v12 & 1;
    v24 = v13;
    v25 = 0;
  }
  else
  {
    v14 = LocalizedStringKey.init(stringLiteral:)(a3, a4);
    v21 = Text.init(_:tableName:bundle:comment:)(v14);
    v22 = v16;
    v23 = v15 & 1;
    v24 = v17;
    v25 = 1;
  }
  _ConditionalContent<>.init(storage:)(&v21, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  result = *(double *)&v26;
  v19 = v27;
  v20 = v28;
  *(_OWORD *)a5 = v26;
  *(_OWORD *)(a5 + 16) = v19;
  *(_BYTE *)(a5 + 32) = v20;
  return result;
}

uint64_t sub_100457C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_100457CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;

  v6 = type metadata accessor for Divider(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - v11;
  v13 = sub_100047110(&qword_100834610);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - v17;
  *(_QWORD *)v18 = static HorizontalAlignment.leading.getter(v19);
  *((_QWORD *)v18 + 1) = 0x4028000000000000;
  v18[16] = 0;
  v20 = sub_100047110(&qword_100834618);
  v21 = sub_100457E6C(a1, a2, (uint64_t)&v18[*(int *)(v20 + 44)]);
  Divider.init()(v21);
  sub_100021CC0((uint64_t)v18, (uint64_t)v15, &qword_100834610);
  v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v22(v9, v12, v6);
  sub_100021CC0((uint64_t)v15, a3, &qword_100834610);
  v23 = sub_100047110(&qword_100834620);
  v22((char *)(a3 + *(int *)(v23 + 48)), v9, v6);
  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v12, v6);
  sub_10001BE90((uint64_t)v18, &qword_100834610);
  v24(v9, v6);
  return sub_10001BE90((uint64_t)v15, &qword_100834610);
}

uint64_t sub_100457E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;

  v6 = sub_100047110(&qword_100834628);
  __chkstk_darwin(v6);
  v8 = (_OWORD *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100047110(&qword_100834630);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - v13;
  v15 = sub_100047110(&qword_100834638);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v36 - v19;
  *(_QWORD *)v20 = static VerticalAlignment.center.getter(v21);
  *((_QWORD *)v20 + 1) = 0x4010000000000000;
  v20[16] = 0;
  v22 = sub_100047110(&qword_100834640);
  sub_10045812C(a1, a2, (uint64_t)&v20[*(int *)(v22 + 44)]);
  if (qword_10081D620 != -1)
    swift_once(&qword_10081D620, sub_100181338);
  *v8 = xmmword_100869F38;
  v23 = sub_100047110(&qword_100834648);
  v24 = sub_1004594FC(a1, a2, (uint64_t)v8 + *(int *)(v23 + 44));
  v25 = static Edge.Set.leading.getter(v24);
  v26 = EdgeInsets.init(_all:)(-20.0);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_100834628);
  v33 = &v11[*(int *)(v9 + 36)];
  *v33 = v25;
  *((double *)v33 + 1) = v26;
  *((_QWORD *)v33 + 2) = v28;
  *((_QWORD *)v33 + 3) = v30;
  *((_QWORD *)v33 + 4) = v32;
  v33[40] = 0;
  sub_10001BE90((uint64_t)v8, &qword_100834628);
  sub_100045AD4((uint64_t)v11, (uint64_t)v14, &qword_100834630);
  sub_100021CC0((uint64_t)v20, (uint64_t)v17, &qword_100834638);
  sub_100021CC0((uint64_t)v14, (uint64_t)v11, &qword_100834630);
  sub_100021CC0((uint64_t)v17, a3, &qword_100834638);
  v34 = sub_100047110(&qword_100834650);
  sub_100021CC0((uint64_t)v11, a3 + *(int *)(v34 + 48), &qword_100834630);
  sub_10001BE90((uint64_t)v14, &qword_100834630);
  sub_10001BE90((uint64_t)v20, &qword_100834638);
  sub_10001BE90((uint64_t)v11, &qword_100834630);
  return sub_10001BE90((uint64_t)v17, &qword_100834638);
}

uint64_t sub_10045812C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  char v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  char v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t OpaqueTypeConformance2;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  double v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  uint64_t v142;
  SEL v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v171;
  char *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t DetailsStackedChartView;
  char *v180;
  uint64_t v181;
  char v182;
  _OWORD v183[9];
  uint64_t v184;
  char v185;
  char v186;
  _OWORD v187[2];
  _OWORD v188[2];
  _OWORD v189[2];
  __int128 v190;
  __int128 v191;
  __int128 v192;
  uint64_t v193;

  v177 = a3;
  v178 = a2;
  v181 = a1;
  v3 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v3);
  v161 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100834738);
  v159 = *(_QWORD *)(v5 - 8);
  v160 = v5;
  __chkstk_darwin(v5);
  v158 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100047110(&qword_100834740);
  v163 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v162 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100047110(&qword_100834748);
  __chkstk_darwin(v157);
  v167 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100834750);
  v174 = *(_QWORD *)(v9 - 8);
  v175 = v9;
  __chkstk_darwin(v9);
  v165 = (uint64_t)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v164 = (uint64_t)&v151 - v12;
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  v168 = (uint64_t)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100834758);
  __chkstk_darwin(v14);
  v176 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v180 = (char *)&v151 - v17;
  v173 = (_QWORD *)sub_100047110(&qword_10082CBF0);
  __chkstk_darwin(v173);
  v19 = (uint64_t *)((char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v172 = (char *)type metadata accessor for Image.Scale(0);
  v57 = *((_QWORD *)v172 - 1);
  __chkstk_darwin(v172);
  v21 = (char *)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SleepingSampleDataType(0);
  v23 = *(_QWORD *)(v22 - 8);
  v171 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
  __chkstk_darwin(v22);
  v25 = (char *)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_100047110(&qword_10082CBF8);
  __chkstk_darwin(v169);
  v27 = (uint64_t *)((char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  v30 = (char *)&v151 - v29;
  v32 = SleepingSampleViewModel.dataType.getter(v31);
  v33 = SleepingSampleDataType.preferredImage.getter(v32);
  v170 = *(void (**)(char *, uint64_t))(v23 + 8);
  v170(v25, v22);
  v34 = (uint64_t)v172;
  (*(void (**)(char *, _QWORD, char *))(v57 + 104))(v21, enum case for Image.Scale.small(_:), v172);
  KeyPath = swift_getKeyPath(&unk_10063D900);
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)v19 + *((int *)v173 + 7), v21, v34);
  *v19 = KeyPath;
  sub_100021CC0((uint64_t)v19, (uint64_t)v27 + *(int *)(v169 + 36), &qword_10082CBF0);
  *v27 = v33;
  swift_retain(v33);
  sub_10001BE90((uint64_t)v19, &qword_10082CBF0);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v21, v34);
  swift_release(v33);
  v172 = v30;
  v173 = v27;
  v36 = sub_100045AD4((uint64_t)v27, (uint64_t)v30, &qword_10082CBF8);
  v37 = v181;
  v38 = SleepingSampleViewModel.dataType.getter(v36);
  v39 = SleepingSampleDataType.localizedName.getter(v38);
  v41 = v40;
  v170(v25, (uint64_t)v171);
  *(_QWORD *)&v187[0] = v39;
  *((_QWORD *)&v187[0] + 1) = v41;
  v42 = v178;
  v43 = sub_100038CA0();
  v44 = Text.init<A>(_:)(v187, &type metadata for String, v43);
  v46 = v45;
  v48 = v47;
  v50 = v49 & 1;
  v52 = static Font.body.getter(v51);
  v54 = Text.font(_:)(v52, v44, v46, v50, v48, v53);
  v169 = v55;
  v170 = (void (*)(char *, uint64_t))v54;
  LODWORD(v57) = v56;
  v171 = v58;
  swift_release(v52);
  sub_1000E4458(v44, v46, v50);
  swift_bridgeObjectRelease(v48, v59, v60, v61, v62, v63, v64, v65);
  v66 = v42 + *(int *)(DetailsStackedChartView + 56);
  v67 = *(_BYTE *)v66;
  v68 = *(_QWORD *)(v66 + 8);
  LOBYTE(v187[0]) = v67;
  *((_QWORD *)&v187[0] + 1) = v68;
  v69 = sub_100047110(&qword_100834400);
  State.wrappedValue.getter(v183, v69);
  if (LOBYTE(v183[0]))
  {
    if (LOBYTE(v183[0]) == 1)
      v77 = 0x6E6F4D6565726874;
    else
      v77 = 0x68746E6F4D786973;
    if (LOBYTE(v183[0]) == 1)
      v78 = (CHWorkoutDetailHeartRateTableViewCell *)0xEB00000000736874;
    else
      v78 = (CHWorkoutDetailHeartRateTableViewCell *)0xE900000000000073;
    v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, 0x68746E6F6DLL, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v78, v80, v81, v82, v83, v84, v85, v86);
    v87 = v168;
    sub_10004F8C8(v42, v168, type metadata accessor for LoadDetailsStackedChartView);
    v88 = (uint64_t)v180;
    if ((v79 & 1) == 0)
    {
      sub_100011F54(v87, type metadata accessor for LoadDetailsStackedChartView);
LABEL_12:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v174 + 56))(v88, 1, 1, v175);
      goto LABEL_17;
    }
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v70, v71, v72, v73, v74, v75, v76);
    v87 = v168;
    sub_10004F8C8(v42, v168, type metadata accessor for LoadDetailsStackedChartView);
    v88 = (uint64_t)v180;
  }
  v89 = sub_1004501F4();
  sub_100011F54(v87, type metadata accessor for LoadDetailsStackedChartView);
  if ((v89 & 1) != 0)
    goto LABEL_12;
  v156 = static VerticalAlignment.lastTextBaseline.getter(v90);
  sub_100458B6C(v37, (uint64_t *)v187);
  v91 = *(_QWORD *)&v187[0];
  v92 = *((_QWORD *)&v187[1] + 1);
  v93 = *(_QWORD *)&v188[0];
  v154 = *(_OWORD *)((char *)v188 + 8);
  v155 = *(_OWORD *)((char *)v187 + 8);
  v94 = *((_QWORD *)&v188[1] + 1);
  v95 = v189[0];
  v153 = *(_OWORD *)((char *)v189 + 8);
  LODWORD(v168) = v57;
  v57 = *((_QWORD *)&v189[1] + 1);
  v152 = v190;
  v186 = 0;
  v185 = v189[0];
  v96 = SleepingSampleViewModel.primaryTintColor.getter();
  v98 = static Font.body.getter(v97);
  v99 = swift_getKeyPath(&unk_10063D8D0);
  *(_QWORD *)&v187[0] = v156;
  *((_QWORD *)&v187[0] + 1) = 0x4000000000000000;
  LOBYTE(v187[1]) = 0;
  *((_QWORD *)&v187[1] + 1) = v91;
  v188[0] = v155;
  *(_QWORD *)&v188[1] = v92;
  *((_QWORD *)&v188[1] + 1) = v93;
  v189[0] = v154;
  *(_QWORD *)&v189[1] = v94;
  BYTE8(v189[1]) = v95;
  v190 = v153;
  *(_QWORD *)&v191 = v57;
  LOBYTE(v57) = v168;
  v88 = (uint64_t)v180;
  *((_QWORD *)&v191 + 1) = v152;
  *(_QWORD *)&v192 = v96;
  *((_QWORD *)&v192 + 1) = v99;
  v193 = v98;
  v183[6] = v153;
  v183[7] = v191;
  v183[8] = v192;
  v184 = v98;
  v183[2] = v155;
  v183[3] = v188[1];
  v183[4] = v154;
  v183[5] = v189[1];
  v183[0] = v187[0];
  v183[1] = v187[1];
  v100 = static Font.Weight.medium.getter(v99);
  v101 = sub_100047110(&qword_100834768);
  v102 = sub_100461444();
  v103 = v158;
  View.fontWeight(_:)(*(_QWORD *)&v100, 0, v101, v102);
  sub_100461564((uint64_t)v187);
  v104 = enum case for Font.Design.rounded(_:);
  v105 = type metadata accessor for Font.Design(0);
  v106 = *(_QWORD *)(v105 - 8);
  v107 = (uint64_t)v161;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 104))(v161, v104, v105);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v107, 0, 1, v105);
  *(_QWORD *)&v183[0] = v101;
  *((_QWORD *)&v183[0] + 1) = v102;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v183, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v109 = v162;
  v110 = v160;
  View.fontDesign(_:)(v107, v160, OpaqueTypeConformance2);
  sub_10001BE90(v107, &qword_10081F2F8);
  v111 = (*(uint64_t (**)(char *, uint64_t))(v159 + 8))(v103, v110);
  LOBYTE(v104) = static Edge.Set.leading.getter(v111);
  v112 = EdgeInsets.init(_all:)(8.0);
  v114 = v113;
  v116 = v115;
  v118 = v117;
  v119 = v163;
  v120 = v166;
  v121 = (uint64_t)v167;
  (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v167, v109, v166);
  v122 = v121 + *(int *)(v157 + 36);
  *(_BYTE *)v122 = v104;
  *(double *)(v122 + 8) = v112;
  *(_QWORD *)(v122 + 16) = v114;
  *(_QWORD *)(v122 + 24) = v116;
  *(_QWORD *)(v122 + 32) = v118;
  *(_BYTE *)(v122 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v109, v120);
  v123 = v178 + *(int *)(DetailsStackedChartView + 48);
  v124 = *(_BYTE *)v123;
  v125 = *(_QWORD *)(v123 + 8);
  LOBYTE(v183[0]) = v124;
  *((_QWORD *)&v183[0] + 1) = v125;
  v126 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v182, v126);
  if (v182)
    v127 = 0.6;
  else
    v127 = 1.0;
  v128 = v165;
  sub_100021CC0(v121, v165, &qword_100834748);
  v129 = v175;
  *(double *)(v128 + *(int *)(v175 + 36)) = v127;
  sub_10001BE90(v121, &qword_100834748);
  v130 = v164;
  sub_100045AD4(v128, v164, &qword_100834750);
  sub_100045AD4(v130, v88, &qword_100834750);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v174 + 56))(v88, 0, 1, v129);
LABEL_17:
  v131 = v57 & 1;
  v133 = (uint64_t)v172;
  v132 = (uint64_t)v173;
  sub_100021CC0((uint64_t)v172, (uint64_t)v173, &qword_10082CBF8);
  v134 = v176;
  sub_100021CC0(v88, v176, &qword_100834758);
  v135 = v177;
  sub_100021CC0(v132, v177, &qword_10082CBF8);
  v136 = (int *)sub_100047110(&qword_100834760);
  v137 = v135 + v136[12];
  v138 = v88;
  v139 = v169;
  v140 = (uint64_t)v170;
  *(_QWORD *)v137 = v170;
  *(_QWORD *)(v137 + 8) = v139;
  *(_BYTE *)(v137 + 16) = v131;
  v141 = v171;
  *(_QWORD *)(v137 + 24) = v171;
  v142 = v135 + v136[16];
  *(_QWORD *)v142 = 0;
  *(_BYTE *)(v142 + 8) = 0;
  sub_100021CC0(v134, v135 + v136[20], &qword_100834758);
  sub_1000E439C(v140, v139, v131);
  swift_bridgeObjectRetain(v141);
  sub_10001BE90(v138, &qword_100834758);
  sub_10001BE90(v133, &qword_10082CBF8);
  sub_10001BE90(v134, &qword_100834758);
  sub_1000E4458(v140, v139, v131);
  swift_bridgeObjectRelease(v141, v143, v144, v145, v146, v147, v148, v149);
  return sub_10001BE90(v132, &qword_10082CBF8);
}

double sub_100458B6C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t countAndFlagsBits;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  SEL v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  void *v101;
  Swift::String_optional v102;
  void *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  char v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t *v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  void *object;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  CHWorkoutDetailHeartRateTableViewCell *v154;
  uint64_t v155;
  CHWorkoutDetailHeartRateTableViewCell *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  CHWorkoutDetailHeartRateTableViewCell *v160;
  __int128 v161;
  __int128 v162;
  char v163;
  Swift::String_optional v164;
  uint64_t v165;
  CHWorkoutDetailHeartRateTableViewCell *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned __int8 v171;

  v150 = a2;
  v143 = type metadata accessor for Text.Scale(0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v141 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for SleepingSampleDataType(0);
  v152 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v5 = (char *)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v154 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v138 - v7);
  v8 = type metadata accessor for LocalizationFeature(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AttributedString(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v138 - v21;
  v153 = a1;
  SleepingSampleViewModel.formattedCurrentAggregateValue.getter(v20);
  v149 = v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10001BE90((uint64_t)v14, (uint64_t *)&unk_10082EDF0);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for LocalizationFeature.workout(_:), v8);
    v23 = static Localization.workoutUILocalizedString(_:feature:)(0x45554C41564F4ELL, 0xE700000000000000, v11);
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v164.value._countAndFlagsBits = v23;
    v164.value._object = v25;
    v26 = sub_100038CA0();
    v157 = Text.init<A>(_:)(&v164, &type metadata for String, v26);
    v158 = v28;
    v159 = v27 & 1;
    v160 = v29;
    v161 = 0u;
    v162 = 0u;
    v163 = 1;
    v30 = sub_100047110(&qword_100834798);
    v31 = sub_100028384(&qword_1008347A0, &qword_100834798, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v32 = _ConditionalContent<>.init(storage:)(&v157, v30, &type metadata for Text, v31, &protocol witness table for Text);
    countAndFlagsBits = v164.value._countAndFlagsBits;
    object = v164.value._object;
    v34 = v166;
    v148 = v165;
    v156 = (CHWorkoutDetailHeartRateTableViewCell *)v167;
    v147 = v168;
    v146 = v169;
    v155 = v170;
    v144 = v171;
    v35 = v151;
    v36 = v152;
    v37 = v154;
  }
  else
  {
    v38 = v149;
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v22, v14, v15);
    v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v140 = v15;
    v39(v18, v22, v15);
    v155 = Text.init(_:)(v18);
    v148 = v40;
    v156 = (CHWorkoutDetailHeartRateTableViewCell *)v41;
    v147 = v42 & 1;
    v43 = v154;
    SleepingSampleViewModel.dataType.getter(v155);
    v44 = v152;
    v45 = v151;
    (*(void (**)(char *, _QWORD, uint64_t))(v152 + 104))(v5, enum case for SleepingSampleDataType.wristTemperature(_:), v151);
    v46 = sub_1000083D8(&qword_100823558, (uint64_t (*)(uint64_t))&type metadata accessor for SleepingSampleDataType, (uint64_t)&protocol conformance descriptor for SleepingSampleDataType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v164, v45, v46);
    dispatch thunk of RawRepresentable.rawValue.getter(&v157, v45, v46);
    v47 = v164.value._countAndFlagsBits;
    v48 = v157;
    v49 = *(void (**)(char *, uint64_t))(v44 + 8);
    v49(v5, v45);
    v49((char *)v43, v45);
    v139 = v22;
    if (v47 == v48)
    {
      v50 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010069F4C0);
      v51 = Text.init(_:tableName:bundle:comment:)(v50);
      v53 = v52;
      v55 = v54;
      v57 = v56 & 1;
      v58 = v141;
      static Text.Scale.secondary.getter();
      v59 = Text.textScale(_:isEnabled:)(v58, 1, v51, v53, v57, v55);
      v61 = v60;
      v63 = v62;
      v65 = v64 & 1;
      sub_1000E4458(v51, v53, v57);
      swift_bridgeObjectRelease(v55, v66, v67, v68, v69, v70, v71, v72);
      (*(void (**)(char *, uint64_t))(v142 + 8))(v58, v143);
    }
    else
    {
      v59 = 0;
      v61 = 0;
      v65 = 0;
      v63 = 0;
    }
    v73 = v155;
    v74 = v148;
    v75 = v147;
    sub_1000E439C(v155, v148, v147);
    v76 = v156;
    swift_bridgeObjectRetain(v156);
    sub_100182758(v59, v61, v65, v63);
    sub_1000E439C(v73, v74, v75);
    swift_bridgeObjectRetain(v76);
    sub_100182758(v59, v61, v65, v63);
    sub_100182728(v59, v61, v65, v63);
    sub_1000E4458(v73, v74, v75);
    swift_bridgeObjectRelease(v76, v77, v78, v79, v80, v81, v82, v83);
    v157 = v73;
    v158 = v74;
    v159 = v75;
    v160 = v76;
    *(_QWORD *)&v161 = v59;
    *((_QWORD *)&v161 + 1) = v61;
    *(_QWORD *)&v162 = v65;
    *((_QWORD *)&v162 + 1) = v63;
    v163 = 0;
    sub_1000E439C(v73, v74, v75);
    swift_bridgeObjectRetain(v76);
    sub_100182758(v59, v61, v65, v63);
    v84 = sub_100047110(&qword_100834798);
    v85 = sub_100028384(&qword_1008347A0, &qword_100834798, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v157, v84, &type metadata for Text, v85, &protocol witness table for Text);
    sub_100182728(v59, v61, v65, v63);
    sub_1000E4458(v73, v74, v75);
    swift_bridgeObjectRelease(v76, v86, v87, v88, v89, v90, v91, v92);
    sub_100182728(v59, v61, v65, v63);
    sub_1000E4458(v73, v74, v75);
    swift_bridgeObjectRelease(v76, v93, v94, v95, v96, v97, v98, v99);
    countAndFlagsBits = v164.value._countAndFlagsBits;
    object = v164.value._object;
    v34 = v166;
    v148 = v165;
    v156 = (CHWorkoutDetailHeartRateTableViewCell *)v167;
    v147 = v168;
    v146 = v169;
    v155 = v170;
    v144 = v171;
    v32 = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v139, v140);
    v37 = v154;
    v36 = v152;
    v35 = v151;
  }
  v100 = SleepingSampleViewModel.dataType.getter(v32);
  v101 = (void *)SleepingSampleViewModel.preferredAggregateValueUnit.getter(v100);
  v102 = SleepingSampleDataType.localizedUnitString(for:)((HKUnit)v101);
  v103 = v102.value._object;

  (*(void (**)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))(v36 + 8))(v37, v35);
  v154 = v34;
  if (v102.value._object)
  {
    v164 = v102;
    v104 = sub_100038CA0();
    v105 = Text.init<A>(_:)(&v164, &type metadata for String, v104);
    v107 = v106;
    v109 = v108;
    v149 = countAndFlagsBits;
    v111 = v110 & 1;
    v112 = v141;
    static Text.Scale.secondary.getter();
    v153 = Text.textScale(_:isEnabled:)(v112, 1, v105, v107, v111, v109);
    v152 = v113;
    v151 = v114;
    v103 = (void *)(v115 & 1);
    v34 = v154;
    v116 = v111;
    countAndFlagsBits = v149;
    sub_1000E4458(v105, v107, v116);
    swift_bridgeObjectRelease(v109, v117, v118, v119, v120, v121, v122, v123);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v112, v143);
  }
  else
  {
    v153 = 0;
    v152 = 0;
    v151 = 0;
  }
  v124 = v150;
  v125 = (uint64_t)object;
  *v150 = countAndFlagsBits;
  v124[1] = v125;
  v126 = v148;
  v124[2] = v148;
  v124[3] = (uint64_t)v34;
  v127 = (uint64_t)v34;
  v128 = (uint64_t)v156;
  v124[4] = (uint64_t)v156;
  v129 = v128;
  v156 = (CHWorkoutDetailHeartRateTableViewCell *)v128;
  v130 = v147;
  v131 = v146;
  v124[5] = v147;
  v124[6] = v131;
  v132 = v155;
  v124[7] = v155;
  v155 = v132;
  v133 = v144;
  *((_BYTE *)v124 + 64) = v144;
  v134 = v153;
  v135 = v152;
  v124[9] = v153;
  v124[10] = v135;
  v136 = v151;
  v124[11] = (uint64_t)v103;
  v124[12] = v136;
  sub_100461678(countAndFlagsBits, v125, v126, v127, v129, v130, v131, v132, v133);
  sub_100182758(v134, v135, (char)v103, v136);
  sub_100182728(v134, v135, (char)v103, v136);
  return sub_100461600(countAndFlagsBits, v125, v126, v154, (uint64_t)v156, v130, v131, v155, v133);
}

uint64_t sub_1004594FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  int *DetailsStackedChartView;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  void (*v40)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t);
  uint64_t v41;
  const char *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  uint64_t *v58;
  uint64_t v59;
  void (*v60)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t);
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  __n128 v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  SEL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  uint64_t OpaqueTypeConformance2;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  const char *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  double v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  SEL v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _OWORD *v148;
  __int128 v149;
  CHWorkoutDetailHeartRateTableViewCell *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  CHWorkoutDetailHeartRateTableViewCell *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t);
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  char v209;
  _OWORD v210[3];

  v204 = a1;
  v199 = a3;
  v200 = sub_100047110(&qword_100834658);
  __chkstk_darwin(v200);
  v196 = (uint64_t)&v169 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100834660);
  __chkstk_darwin(v5);
  v175 = (uint64_t *)((char *)&v169 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v174 = sub_100047110(&qword_100834668);
  __chkstk_darwin(v174);
  v177 = (uint64_t)&v169 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100047110(&qword_100834670);
  v192 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v176 = (uint64_t)&v169 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100834678);
  __chkstk_darwin(v9);
  v194 = (uint64_t)&v169 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v195 = (uint64_t)&v169 - v12;
  v183 = sub_100047110(&qword_100834680);
  __chkstk_darwin(v183);
  v181 = (uint64_t)&v169 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100047110(&qword_100834688);
  v185 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v182 = (char *)&v169 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_100047110(&qword_100834690);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v188 = (char *)&v169 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100047110(&qword_100834698);
  __chkstk_darwin(v184);
  v186 = (char *)&v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v189 = (uint64_t)&v169 - v18;
  v201 = sub_100047110(&qword_1008346A0);
  __chkstk_darwin(v201);
  v203 = (uint64_t)&v169 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100047110(&qword_1008346A8);
  v178 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v21 = (char *)&v169 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100047110(&qword_1008346B0);
  __chkstk_darwin(v202);
  v23 = (char *)&v169 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v180 = (void (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))((char *)&v169 - v25);
  v26 = type metadata accessor for DayIndex(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v169 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  v31 = a2 + DetailsStackedChartView[11];
  v170 = sub_100047110(&qword_100834260);
  v171 = v31;
  State.wrappedValue.getter(v29, v170);
  v32 = a2 + DetailsStackedChartView[12];
  v33 = *(_QWORD *)(v32 + 8);
  LOBYTE(v206) = *(_BYTE *)v32;
  *((_QWORD *)&v206 + 1) = v33;
  v198 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(v210, v198);
  v34 = LOBYTE(v210[0]);
  v35 = (char *)(a2 + DetailsStackedChartView[14]);
  v36 = *v35;
  v37 = *((_QWORD *)v35 + 1);
  LOBYTE(v206) = v36;
  *((_QWORD *)&v206 + 1) = v37;
  v38 = sub_100047110(&qword_100834400);
  State.wrappedValue.getter(v210, v38);
  v39 = sub_1004C0A3C(v29, v34);
  v40 = *(void (**)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))(v27 + 8);
  v172 = v29;
  v173 = v26;
  v40(v29, v26);
  v197 = a2;
  v41 = sub_1004501F4();
  if ((v41 & 1) != 0)
  {
    swift_bridgeObjectRelease(v39, v42, v43, v44, v45, v46, v47, v48);
    *(_QWORD *)&v206 = &_swiftEmptyArrayStorage;
    *((_QWORD *)&v206 + 1) = &_swiftEmptyArrayStorage;
    v207 = 0uLL;
    LOBYTE(v208) = 1;
    *((_QWORD *)&v208 + 1) = &_swiftEmptyArrayStorage;
    v209 = 0;
    v49 = sub_1004612C0();
    v50 = View.chartXAxis(_:)(2, &type metadata for SleepingSampleMetricChartView, v49);
    v51 = static Alignment.center.getter(v50);
    _FrameLayout.init(width:height:alignment:)(&v206, 0, 1, 0x4051800000000000, 0, v51, v52);
    v53 = v178;
    v54 = v179;
    (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v23, v21, v179);
    v55 = v202;
    v56 = &v23[*(int *)(v202 + 36)];
    v57 = v207;
    *(_OWORD *)v56 = v206;
    *((_OWORD *)v56 + 1) = v57;
    *((_OWORD *)v56 + 2) = v208;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v54);
    v58 = &qword_1008346B0;
    v59 = (uint64_t)v23;
    v60 = v180;
    sub_100045AD4(v59, (uint64_t)v180, &qword_1008346B0);
    v61 = v203;
    sub_100021CC0((uint64_t)v60, v203, &qword_1008346B0);
    swift_storeEnumTagMultiPayload(v61, v201, 0);
    v62 = sub_100461304();
    v63 = sub_100028384(&qword_1008346D8, &qword_100834658, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v61, v55, v200, v62, v63);
    v64 = (uint64_t)v60;
  }
  else
  {
    v180 = v40;
    v65 = v204;
    v66 = (CHWorkoutDetailHeartRateTableViewCell *)SleepingSampleViewModel.chronologicalBaselineComparisons.getter(v41);
    __chkstk_darwin(v66);
    *(&v169 - 2) = v65;
    v67 = sub_1005B9B24((void (*)(_QWORD, __n128))sub_1004612A8, (uint64_t)(&v169 - 4), v66);
    swift_bridgeObjectRelease(v66, v68, v69, v70, v71, v72, v73, v74);
    v75 = swift_bridgeObjectRetain(v39);
    v76 = SleepingSampleViewModel.chartableMedialRange.getter(v75);
    v78 = v77;
    v79 = SleepingSampleViewModel.keyDatesForTimeAxis.getter();
    v80 = *(_QWORD *)(v32 + 8);
    LOBYTE(v206) = *(_BYTE *)v32;
    *((_QWORD *)&v206 + 1) = v80;
    State.wrappedValue.getter(v210, v198);
    *(_QWORD *)&v206 = v67;
    *((_QWORD *)&v206 + 1) = v39;
    *(double *)&v207 = v76;
    *((_QWORD *)&v207 + 1) = v78;
    LOBYTE(v208) = 0;
    *((_QWORD *)&v208 + 1) = v79;
    v209 = v210[0];
    v81 = v181;
    v82 = sub_1004535D8(v181);
    v83 = static GestureMask.all.getter(v82);
    v84 = sub_1004612C0();
    v85 = sub_100028384(&qword_1008346C0, &qword_100834680, (uint64_t)&protocol conformance descriptor for SimultaneousGesture<A, B>);
    v86 = v182;
    v87 = v83;
    v88 = v183;
    View.gesture<A>(_:including:)(v81, v87, &type metadata for SleepingSampleMetricChartView, v183, v84, v85);
    sub_10001BE90(v81, &qword_100834680);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v206, v89, v90, v91, v92, v93, v94, v95);
    swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)&v206 + 1), v96, v97, v98, v99, v100, v101, v102);
    swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)&v208 + 1), v103, v104, v105, v106, v107, v108, v109);
    *(_QWORD *)&v206 = &type metadata for SleepingSampleMetricChartView;
    *((_QWORD *)&v206 + 1) = v88;
    *(_QWORD *)&v207 = v84;
    *((_QWORD *)&v207 + 1) = v85;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v206, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
    v111 = v188;
    v112 = v187;
    View.chartXAxis(_:)(2, v187, OpaqueTypeConformance2);
    v113 = (*(uint64_t (**)(char *, uint64_t))(v185 + 8))(v86, v112);
    v114 = static Alignment.center.getter(v113);
    _FrameLayout.init(width:height:alignment:)(v210, 0, 1, 0x4051800000000000, 0, v114, v115);
    v116 = v190;
    v117 = (uint64_t)v186;
    v118 = v191;
    (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v186, v111, v191);
    v119 = (_OWORD *)(v117 + *(int *)(v184 + 36));
    v120 = v210[1];
    *v119 = v210[0];
    v119[1] = v120;
    v119[2] = v210[2];
    (*(void (**)(char *, uint64_t))(v116 + 8))(v111, v118);
    v121 = v117;
    v122 = v189;
    sub_100045AD4(v117, v189, &qword_100834698);
    v123 = *(_QWORD *)(v32 + 8);
    LOBYTE(v206) = *(_BYTE *)v32;
    *((_QWORD *)&v206 + 1) = v123;
    State.wrappedValue.getter(&v205, v198);
    if (v205 == 1)
    {
      v131 = v197;
      v132 = sub_10044FE28();
      if ((v132 & 1) != 0)
        v133 = 171.6;
      else
        v133 = 83.8;
      v134 = static VerticalAlignment.center.getter(v132);
      v135 = (uint64_t)v175;
      *v175 = v134;
      *(_QWORD *)(v135 + 8) = 0x4000000000000000;
      *(_BYTE *)(v135 + 16) = 0;
      v136 = sub_100047110(&qword_1008346E0);
      sub_10045A124((uint64_t)v39, v204, v131, v135 + *(int *)(v136 + 44));
      swift_bridgeObjectRelease(v39, v137, v138, v139, v140, v141, v142, v143);
      v145 = static Alignment.center.getter(v144);
      _FrameLayout.init(width:height:alignment:)(&v206, *(_QWORD *)&v133, 0, 0, 1, v145, v146);
      v147 = v177;
      sub_100021CC0(v135, v177, &qword_100834660);
      v148 = (_OWORD *)(v147 + *(int *)(v174 + 36));
      v149 = v207;
      *v148 = v206;
      v148[1] = v149;
      v148[2] = v208;
      sub_10001BE90(v135, &qword_100834660);
      v150 = v172;
      State.wrappedValue.getter(v172, v170);
      sub_100453BAC();
      v152 = v151;
      v180(v150, v173);
      v153 = v176;
      sub_100021CC0(v147, v176, &qword_100834668);
      v154 = v193;
      v155 = (_QWORD *)(v153 + *(int *)(v193 + 36));
      *v155 = v152;
      v155[1] = 0xC049000000000000;
      sub_10001BE90(v147, &qword_100834668);
      v156 = v195;
      sub_100045AD4(v153, v195, &qword_100834670);
      v157 = 0;
      v159 = v202;
      v158 = v203;
      v160 = v201;
    }
    else
    {
      swift_bridgeObjectRelease(v39, v124, v125, v126, v127, v128, v129, v130);
      v157 = 1;
      v159 = v202;
      v158 = v203;
      v156 = v195;
      v160 = v201;
      v154 = v193;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v192 + 56))(v156, v157, 1, v154);
    v58 = &qword_100834698;
    v161 = v121;
    sub_100021CC0(v122, v121, &qword_100834698);
    v162 = v122;
    v163 = v194;
    sub_100021CC0(v156, v194, &qword_100834678);
    v164 = v196;
    sub_100021CC0(v161, v196, &qword_100834698);
    v165 = sub_100047110(&qword_1008346C8);
    sub_100021CC0(v163, v164 + *(int *)(v165 + 48), &qword_100834678);
    sub_10001BE90(v163, &qword_100834678);
    sub_10001BE90(v161, &qword_100834698);
    sub_100021CC0(v164, v158, &qword_100834658);
    swift_storeEnumTagMultiPayload(v158, v160, 1);
    v166 = sub_100461304();
    v167 = sub_100028384(&qword_1008346D8, &qword_100834658, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v158, v159, v200, v166, v167);
    sub_10001BE90(v164, &qword_100834658);
    sub_10001BE90(v156, &qword_100834678);
    v64 = v162;
  }
  return sub_10001BE90(v64, v58);
}

uint64_t sub_10045A124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t DetailsStackedChartView;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v136;
  UIFontTextStyle v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;

  v155 = a2;
  v148 = a4;
  v144 = type metadata accessor for DayIndex(0);
  v146 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v141 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v142 = (char *)&v133 - v8;
  __chkstk_darwin(v9);
  v145 = (char *)&v133 - v10;
  v154 = type metadata accessor for SleepingSampleViewModel(0);
  v11 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v147 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_1008346E8);
  __chkstk_darwin(v13);
  v153 = (uint64_t)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v152 = (char *)&v133 - v16;
  v157 = sub_100047110(&qword_1008346F0);
  __chkstk_darwin(v157);
  v156 = (uint64_t)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for SleepingSampleChartLollipopView(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_1008346F8);
  v149 = *(_QWORD *)(v21 - 8);
  v150 = v21;
  __chkstk_darwin(v21);
  v151 = (uint64_t)&v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v143 = (char *)&v133 - v24;
  __chkstk_darwin(v25);
  v158 = (uint64_t)&v133 - v26;
  if (*(_QWORD *)(a1 + 16))
  {
    v136 = *(_QWORD *)(a1 + 16);
    v27 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
    v28 = v11;
    v29 = *(_QWORD *)(v27 - 8);
    v30 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
    v32 = (char *)(a3 + *(int *)(DetailsStackedChartView + 56));
    v33 = *v32;
    v34 = *((_QWORD *)v32 + 1);
    LOBYTE(v161) = v33;
    v162 = v34;
    v35 = sub_100047110(&qword_100834400);
    State.wrappedValue.getter(&v159, v35);
    LODWORD(v137) = v159;
    v36 = &v20[v18[6]];
    v37 = sub_100047110(&qword_100834260);
    State.wrappedValue.getter(v36, v37);
    v38 = (uint64_t)&v20[v18[7]];
    v133 = v30;
    sub_10004F8C8(v30, v38, type metadata accessor for SleepingSampleBaselineRelativeChartPoint);
    v134 = v29;
    v39 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56);
    v138 = v27;
    v135 = v39;
    v39(v38, 0, 1, v27);
    v40 = (char *)(a3 + *(int *)(DetailsStackedChartView + 48));
    v41 = *v40;
    v42 = *((_QWORD *)v40 + 1);
    LOBYTE(v159) = v41;
    v160 = v42;
    sub_100047110(&qword_100820D80);
    State.projectedValue.getter(&v161);
    v43 = v161;
    v44 = v162;
    LOBYTE(v30) = v163;
    v45 = v156;
    v139 = v28;
    v46 = v154;
    v140 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v140(v20, v155, v154);
    v20[v18[5]] = (char)v137;
    v20[v18[8]] = 1;
    v47 = &v20[v18[9]];
    *(_QWORD *)v47 = v43;
    *((_QWORD *)v47 + 1) = v44;
    v47[16] = v30;
    v48 = v18[10];
    *(_QWORD *)&v20[v48] = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
    sub_10004F8C8((uint64_t)v20, v45, type metadata accessor for SleepingSampleChartLollipopView);
    swift_storeEnumTagMultiPayload(v45, v157, 0);
    v49 = sub_1000083D8(&qword_100834700, type metadata accessor for SleepingSampleChartLollipopView, (uint64_t)&unk_100628A48);
    _ConditionalContent<>.init(storage:)(v45, v18, v18, v49, v49);
    sub_100011F54((uint64_t)v20, type metadata accessor for SleepingSampleChartLollipopView);
    v50 = sub_10044FE28();
    v51 = 1;
    v52 = (uint64_t)v152;
    if ((v50 & 1) != 0)
    {
      v137 = UIFontTextStyleLargeTitle;
      v53 = a3;
      if (v136 >= 2)
      {
        v136 = v133 + *(_QWORD *)(v134 + 72);
        v140(v147, v155, v46);
        v54 = DetailsStackedChartView;
        v55 = (char *)(v53 + *(int *)(DetailsStackedChartView + 56));
        v56 = *v55;
        v57 = *((_QWORD *)v55 + 1);
        LOBYTE(v161) = v56;
        v162 = v57;
        v58 = sub_100047110(&qword_100834400);
        State.wrappedValue.getter(&v159, v58);
        LODWORD(v155) = v159;
        v59 = sub_100047110(&qword_100834260);
        v60 = v142;
        State.wrappedValue.getter(v142, v59);
        v61 = v141;
        DayIndex.init(integerLiteral:)(1);
        static DayIndex.+ infix(_:_:)(v60, v61);
        v62 = *(void (**)(char *, uint64_t))(v146 + 8);
        v63 = v61;
        v64 = v144;
        v62(v63, v144);
        v62(v60, v64);
        v65 = (uint64_t)&v20[v18[7]];
        sub_10004F8C8(v136, v65, type metadata accessor for SleepingSampleBaselineRelativeChartPoint);
        v135(v65, 0, 1, v138);
        v66 = (char *)(v53 + *(int *)(v54 + 48));
        v67 = *v66;
        v68 = *((_QWORD *)v66 + 1);
        LOBYTE(v159) = v67;
        v160 = v68;
        sub_100047110(&qword_100820D80);
        State.projectedValue.getter(&v161);
        v69 = v156;
        v70 = v161;
        v71 = v162;
        v72 = v163;
        (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v20, v147, v154);
        v20[v18[5]] = v155;
        (*(void (**)(char *, char *, uint64_t))(v146 + 32))(&v20[v18[6]], v145, v64);
        v20[v18[8]] = 0;
        v73 = &v20[v18[9]];
        *(_QWORD *)v73 = v70;
        *((_QWORD *)v73 + 1) = v71;
        v73[16] = v72;
        v74 = v18[10];
        v75 = (void *)objc_opt_self(UIFont);
        *(_QWORD *)&v20[v74] = objc_msgSend(v75, "preferredFontForTextStyle:", v137);
        sub_10004F8C8((uint64_t)v20, v69, type metadata accessor for SleepingSampleChartLollipopView);
        swift_storeEnumTagMultiPayload(v69, v157, 0);
        v76 = (uint64_t)v143;
        v77 = v69;
        v78 = v18;
        v79 = v18;
        v80 = v49;
        v81 = v49;
LABEL_9:
        _ConditionalContent<>.init(storage:)(v77, v78, v79, v80, v81);
        sub_100011F54((uint64_t)v20, type metadata accessor for SleepingSampleChartLollipopView);
        sub_100045AD4(v76, v52, &qword_1008346F8);
        v51 = 0;
        goto LABEL_10;
      }
      v105 = DetailsStackedChartView;
      v140(v147, v155, v46);
LABEL_8:
      type metadata accessor for LoadDetailsStackedChartView(0);
      v106 = (char *)(v53 + *(int *)(v105 + 56));
      v107 = *v106;
      v108 = *((_QWORD *)v106 + 1);
      LOBYTE(v161) = v107;
      v162 = v108;
      v109 = sub_100047110(&qword_100834400);
      State.wrappedValue.getter(&v159, v109);
      LODWORD(v155) = v159;
      v110 = sub_100047110(&qword_100834260);
      v111 = v142;
      State.wrappedValue.getter(v142, v110);
      v112 = v141;
      DayIndex.init(integerLiteral:)(1);
      v113 = v145;
      static DayIndex.+ infix(_:_:)(v111, v112);
      v114 = v146;
      v115 = *(void (**)(char *, uint64_t))(v146 + 8);
      v116 = v112;
      v117 = v144;
      v115(v116, v144);
      v115(v111, v117);
      v118 = &v20[v18[7]];
      type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v118, 1, 1);
      v119 = (char *)(v53 + *(int *)(v105 + 48));
      v120 = *v119;
      v121 = *((_QWORD *)v119 + 1);
      LOBYTE(v159) = v120;
      v160 = v121;
      sub_100047110(&qword_100820D80);
      State.projectedValue.getter(&v161);
      v122 = v161;
      v123 = v162;
      LOBYTE(v111) = v163;
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v20, v147, v154);
      v20[v18[5]] = v155;
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(&v20[v18[6]], v113, v117);
      v20[v18[8]] = 0;
      v124 = &v20[v18[9]];
      *(_QWORD *)v124 = v122;
      *((_QWORD *)v124 + 1) = v123;
      v124[16] = (char)v111;
      v125 = v18[10];
      *(_QWORD *)&v20[v125] = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
      v126 = v156;
      sub_10004F8C8((uint64_t)v20, v156, type metadata accessor for SleepingSampleChartLollipopView);
      swift_storeEnumTagMultiPayload(v126, v157, 1);
      v80 = sub_1000083D8(&qword_100834700, type metadata accessor for SleepingSampleChartLollipopView, (uint64_t)&unk_100628A48);
      v76 = (uint64_t)v143;
      v77 = v126;
      v78 = v18;
      v79 = v18;
      v81 = v80;
      goto LABEL_9;
    }
  }
  else
  {
    v82 = type metadata accessor for LoadDetailsStackedChartView(0);
    v83 = (char *)(a3 + *(int *)(v82 + 56));
    v84 = *v83;
    v85 = *((_QWORD *)v83 + 1);
    LOBYTE(v161) = v84;
    v162 = v85;
    v86 = sub_100047110(&qword_100834400);
    State.wrappedValue.getter(&v159, v86);
    LODWORD(v139) = v159;
    v87 = &v20[v18[6]];
    v88 = sub_100047110(&qword_100834260);
    State.wrappedValue.getter(v87, v88);
    v89 = &v20[v18[7]];
    v90 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 1, 1, v90);
    v91 = (char *)(a3 + *(int *)(v82 + 48));
    v92 = *v91;
    v93 = *((_QWORD *)v91 + 1);
    LOBYTE(v159) = v92;
    v160 = v93;
    sub_100047110(&qword_100820D80);
    State.projectedValue.getter(&v161);
    v94 = v161;
    v95 = v162;
    v96 = a3;
    v97 = v163;
    v98 = v154;
    v140 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v140(v20, v155, v154);
    v20[v18[5]] = v139;
    v20[v18[8]] = 1;
    v99 = &v20[v18[9]];
    *(_QWORD *)v99 = v94;
    *((_QWORD *)v99 + 1) = v95;
    v99[16] = v97;
    v100 = v18[10];
    *(_QWORD *)&v20[v100] = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
    v101 = v156;
    sub_10004F8C8((uint64_t)v20, v156, type metadata accessor for SleepingSampleChartLollipopView);
    swift_storeEnumTagMultiPayload(v101, v157, 1);
    v102 = sub_1000083D8(&qword_100834700, type metadata accessor for SleepingSampleChartLollipopView, (uint64_t)&unk_100628A48);
    _ConditionalContent<>.init(storage:)(v101, v18, v18, v102, v102);
    sub_100011F54((uint64_t)v20, type metadata accessor for SleepingSampleChartLollipopView);
    v103 = sub_10044FE28();
    v51 = 1;
    v104 = v11;
    v52 = (uint64_t)v152;
    if ((v103 & 1) != 0)
    {
      v138 = v90;
      v139 = v104;
      v53 = v96;
      v105 = v82;
      v140(v147, v155, v98);
      goto LABEL_8;
    }
  }
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v52, v51, 1, v150);
  v127 = v158;
  v128 = v151;
  sub_100021CC0(v158, v151, &qword_1008346F8);
  v129 = v153;
  sub_100021CC0(v52, v153, &qword_1008346E8);
  v130 = v148;
  sub_100021CC0(v128, v148, &qword_1008346F8);
  v131 = sub_100047110(&qword_100834708);
  sub_100021CC0(v129, v130 + *(int *)(v131 + 48), &qword_1008346E8);
  sub_10001BE90(v52, &qword_1008346E8);
  sub_10001BE90(v127, &qword_1008346F8);
  sub_10001BE90(v129, &qword_1008346E8);
  return sub_10001BE90(v128, &qword_1008346F8);
}

void sub_10045ACFC(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t DetailsStackedChartView;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  char v21;
  id v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  __n128 v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;

  v3 = type metadata accessor for OvernightMetricsViewModel(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10045AEC8();
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v8 = (uint64_t *)(a1 + *(int *)(DetailsStackedChartView + 52));
  v9 = v8[1];
  v48 = *v8;
  v49 = v9;
  v10 = sub_100047110(&qword_100834450);
  State.wrappedValue.getter(&v50, v10);
  v11 = *(_QWORD *)v50->cellPadding;
  swift_bridgeObjectRelease(v50, v12, v13, v14, v15, v16, v17, v18);
  if (!v11)
  {
    v19 = a1 + *(int *)(DetailsStackedChartView + 68);
    v20 = *(id *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    sub_10010C5D0(*(id *)v19, v21);
    v22 = sub_1003F70B8(v20, v21);
    sub_10010C5EC(v20, v21);
    v23 = sub_10026685C();
    v24 = sub_100171BD4();
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    v25 = swift_release(v24);
    v26 = (CHWorkoutDetailHeartRateTableViewCell *)OvernightMetricsViewModel.visibleDataTypes.getter(v25);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v27 = sub_100460C28((uint64_t)v23, v26);

    swift_bridgeObjectRelease(v23, v28, v29, v30, v31, v32, v33, v34);
    swift_bridgeObjectRelease(v26, v35, v36, v37, v38, v39, v40, v41);
    v42 = v8[1];
    v48 = *v8;
    v49 = v42;
    v50 = v27;
    State.wrappedValue.setter(&v50, v10);
  }
  v43 = a1 + *(int *)(DetailsStackedChartView + 68);
  v44 = *(id *)v43;
  v45 = *(_BYTE *)(v43 + 8);
  sub_10010C5D0(*(id *)v43, v45);
  v46 = sub_1003F70B8(v44, v45);
  sub_10010C5EC(v44, v45);
  sub_100176BB8();

}

uint64_t sub_10045AEC8()
{
  uint64_t v0;
  uint64_t v1;
  int *DetailsStackedChartView;
  uint64_t v3;
  id v4;
  char v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  _QWORD *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  _QWORD *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  _QWORD v36[4];
  char v37[16];
  uint64_t v38;
  _QWORD *v39;
  _OWORD v40[2];

  v1 = v0;
  DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  v3 = v0 + DetailsStackedChartView[17];
  v4 = *(id *)v3;
  v5 = *(_BYTE *)(v3 + 8);
  sub_10010C5D0(*(id *)v3, v5);
  v6 = (char *)sub_1003F70B8(v4, v5);
  sub_10010C5EC(v4, v5);
  KeyPath = swift_getKeyPath(&unk_10063D850);
  *(_QWORD *)&v40[0] = v6;
  v8 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v40, KeyPath, v8);
  swift_release(KeyPath);
  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)&v6[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsInDayRange];
  swift_bridgeObjectRetain(v9);

  v38 = v1;
  v10 = sub_1005B9D78((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_100460BEC, (uint64_t)v37, (uint64_t)v9);
  swift_bridgeObjectRelease(v9, v11, v12, v13, v14, v15, v16, v17);
  v18 = (uint64_t *)(v1 + DetailsStackedChartView[7]);
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)&v40[0] = v20;
  *((_QWORD *)&v40[0] + 1) = v19;
  v39 = v10;
  v21 = sub_100047110(&qword_100834440);
  State.wrappedValue.setter(&v39, v21);
  v22 = *(id *)v3;
  LOBYTE(v10) = *(_BYTE *)(v3 + 8);
  sub_10010C5D0(*(id *)v3, (char)v10);
  v23 = (char *)sub_1003F70B8(v22, (char)v10);
  sub_10010C5EC(v22, (char)v10);
  v24 = swift_getKeyPath(&unk_10063D878);
  *(_QWORD *)&v40[0] = v23;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v40, v24, v8);
  swift_release(v24);
  v25 = *(CHWorkoutDetailHeartRateTableViewCell **)&v23[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummaries];
  swift_bridgeObjectRetain(v25);

  v36[2] = v1;
  v26 = sub_1003933E0(sub_100460C0C, (uint64_t)v36, (uint64_t)v25);
  swift_bridgeObjectRelease(v25, v27, v28, v29, v30, v31, v32, v33);
  v40[0] = *(_OWORD *)(v1 + DetailsStackedChartView[8]);
  v39 = v26;
  v34 = sub_100047110(&qword_100834448);
  return State.wrappedValue.setter(&v39, v34);
}

void sub_10045B0DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  char v8;
  id v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  _BYTE v13[16];
  id v14;
  _BYTE *v15;
  id v16;

  v2 = type metadata accessor for GregorianDayRange(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  v7 = *(id *)v6;
  v8 = *(_BYTE *)(v6 + 8);
  sub_10010C5D0(*(id *)v6, v8);
  v9 = sub_1003F70B8(v7, v8);
  sub_10010C5EC(v7, v8);
  sub_1002C489C(0, (uint64_t)v5);
  KeyPath = swift_getKeyPath(&unk_10063D828);
  v14 = v9;
  v15 = v5;
  v16 = v9;
  v11 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v16, KeyPath, sub_10017CB74, v13, (char *)&type metadata for () + 8, v11);
  v12 = swift_release(KeyPath);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v5, v2, v12);

}

uint64_t sub_10045B224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DayIndex(0);
  v7 = sub_1000083D8(&qword_100823538, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v6, v7) & 1) == 0)
    objc_msgSend(*(id *)(a3 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 60)), "selectionChanged");
  return sub_10045AEC8();
}

void sub_10045B2B8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int v9;
  uint64_t DetailsStackedChartView;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t KeyPath;
  uint64_t v19;
  __n128 v20;
  _BYTE v21[16];
  id v22;
  _BYTE *v23;
  char v24;
  _QWORD v25[2];

  v5 = type metadata accessor for GregorianDayRange(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *a2;
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v11 = (char *)(a3 + *(int *)(DetailsStackedChartView + 48));
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 1);
  LOBYTE(v25[0]) = v12;
  v25[1] = v13;
  v24 = 0;
  v14 = sub_100047110(&qword_100820D80);
  State.wrappedValue.setter(&v24, v14);
  v15 = a3 + *(int *)(DetailsStackedChartView + 68);
  v16 = *(id *)v15;
  LOBYTE(a3) = *(_BYTE *)(v15 + 8);
  sub_10010C5D0(*(id *)v15, a3);
  v17 = sub_1003F70B8(v16, a3);
  sub_10010C5EC(v16, a3);
  sub_1002C489C(v9, (uint64_t)v8);
  KeyPath = swift_getKeyPath(&unk_10063D828);
  v22 = v17;
  v23 = v8;
  v25[0] = v17;
  v19 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v25, KeyPath, sub_10017AED4, v21, (char *)&type metadata for () + 8, v19);
  v20 = swift_release(KeyPath);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v20);

}

void sub_10045B444(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t DetailsStackedChartView;
  uint64_t v19;
  id v20;
  char v21;
  char *v22;
  uint64_t KeyPath;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  _QWORD v31[3];
  char *v32;
  uint64_t v33;
  _QWORD v34[3];

  v6 = type metadata accessor for DayIndex(0);
  v33 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v32 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v31 - v9;
  v11 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for GregorianDayRange(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    if ((*a2 & 1) == 0)
    {
      DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
      v31[1] = a3;
      v31[2] = DetailsStackedChartView;
      v19 = a3 + *(int *)(DetailsStackedChartView + 68);
      v20 = *(id *)v19;
      v21 = *(_BYTE *)(v19 + 8);
      sub_10010C5D0(*(id *)v19, v21);
      v22 = (char *)sub_1003F70B8(v20, v21);
      sub_10010C5EC(v20, v21);
      KeyPath = swift_getKeyPath(&unk_10063D828);
      v34[0] = v22;
      v24 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
      ObservationRegistrar.access<A, B>(_:keyPath:)(v34, KeyPath, v24);
      swift_release(KeyPath);
      v25 = &v22[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
      swift_beginAccess(&v22[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v34, 0, 0);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v25, v14);

      GregorianDayRange.dayIndexRange.getter(v26);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v27 = v33;
      v28 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v28(v10, &v13[*(int *)(v11 + 36)], v6);
      sub_10001BE90((uint64_t)v13, &qword_100823530);
      v29 = v32;
      v28(v32, v10, v6);
      v30 = sub_100047110(&qword_100834260);
      State.wrappedValue.setter(v29, v30);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v6);
    }
  }
  else if (*a2)
  {
    objc_msgSend(*(id *)(a3 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 60)), "selectionChanged");
  }
}

uint64_t sub_10045B714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100047110(&qword_1008343E8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter(v7);
  v15 = a1;
  v10 = sub_100047110(&qword_100834408);
  v11 = sub_100460A9C();
  ToolbarItem<>.init(placement:content:)(v4, sub_100460A94, v14, v10, v11);
  v12 = sub_100028384(&qword_1008343F0, &qword_1008343E8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v9, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10045B844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t DetailsStackedChartView;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = sub_100047110(&qword_10082CC08);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v7 = *(_QWORD *)(DetailsStackedChartView - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(DetailsStackedChartView);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100047110(&qword_100834430);
  v10 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100834420);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F8C8(a1, (uint64_t)v9, type metadata accessor for LoadDetailsStackedChartView);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_1007A0158, v17 + v8, v16 | 7);
  sub_100047C88((uint64_t)v9, v18 + v17, type metadata accessor for LoadDetailsStackedChartView);
  Button.init(action:label:)(sub_100460BC0, v18, sub_10045BB8C, 0, &type metadata for Image, &protocol witness table for Image);
  static SymbolRenderingMode.hierarchical.getter(v19);
  v20 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
  KeyPath = swift_getKeyPath(&unk_10063D7F8);
  v22 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  v23 = sub_100047110(&qword_10082CC18);
  sub_100021CC0((uint64_t)v5, (uint64_t)v22 + *(int *)(v23 + 28), &qword_10082CC08);
  *v22 = KeyPath;
  v24 = v29;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v29);
  sub_10001BE90((uint64_t)v5, &qword_10082CC08);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  v25 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v26 = Color.init(_:)(v25);
  v27 = v30;
  sub_100021CC0((uint64_t)v15, v30, &qword_100834420);
  *(_QWORD *)(v27 + *(int *)(sub_100047110(&qword_100834408) + 36)) = v26;
  return sub_10001BE90((uint64_t)v15, &qword_100834420);
}

uint64_t sub_10045BAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LoadDetailsStackedChartView(0);
  sub_1003F6E4C((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10045BB8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD000000000000011, 0x800000010069F3F0);
  *a1 = result;
  return result;
}

_QWORD *sub_10045BBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t DetailsStackedChartView;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  char v16;
  void (*v17)(_BYTE *, uint64_t);
  __n128 v18;
  double v19;
  double v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;

  v3 = type metadata accessor for LayoutDirection(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v21[-v8];
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v11 = (char *)(a2 + *(int *)(DetailsStackedChartView + 48));
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 1);
  v21[8] = v12;
  v22 = v13;
  v14 = sub_100047110(&qword_100820D80);
  result = State.wrappedValue.getter(&v23, v14);
  if (v23 == 1)
  {
    sub_1003F74E0((uint64_t)v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v3);
    v16 = static LayoutDirection.== infix(_:_:)(v9, v6);
    v17 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
    v17(v6, v3);
    v17(v9, v3);
    if ((v16 & 1) != 0)
    {
      v19 = DragGesture.Value.location.getter(v18);
    }
    else
    {
      v20 = *(double *)(a2 + *(int *)(DetailsStackedChartView + 36));
      v19 = v20 - DragGesture.Value.location.getter(v18);
    }
    return (_QWORD *)sub_10045BD30(v19);
  }
  return result;
}

uint64_t sub_10045BD30(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t DetailsStackedChartView;
  double v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  char *v39;
  uint64_t KeyPath;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t result;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  void *v54;
  void (*v55)(char *, uint64_t);
  char v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  id v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  id v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t);
  void (*v105)(char *, char *, uint64_t);
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[3];
  _QWORD v112[3];
  _QWORD v113[3];
  _QWORD v114[2];

  v3 = type metadata accessor for DayIndex(0);
  v109 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v98 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v101 = (char *)&v90 - v6;
  __chkstk_darwin(v7);
  v95 = (char *)&v90 - v8;
  __chkstk_darwin(v9);
  v99 = (char *)&v90 - v10;
  __chkstk_darwin(v11);
  v102 = (char *)&v90 - v12;
  __chkstk_darwin(v13);
  v100 = (char *)&v90 - v14;
  __chkstk_darwin(v15);
  v108 = (char *)&v90 - v16;
  v17 = sub_100047110(&qword_100823520);
  __chkstk_darwin(v17);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v90 - v21;
  v107 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v107);
  v96 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v90 - v25;
  v27 = type metadata accessor for GregorianDayRange(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v94 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v90 - v31;
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v34 = *(double *)(v1 + *(int *)(DetailsStackedChartView + 36));
  v97 = DetailsStackedChartView;
  v35 = *(int *)(DetailsStackedChartView + 68);
  v103 = v1;
  v36 = v1 + v35;
  v37 = *(void **)v36;
  v92 = v36;
  v38 = *(_BYTE *)(v36 + 8);
  sub_10010C5D0(v37, v38);
  v39 = (char *)sub_1003F70B8(v37, v38);
  sub_10010C5EC(v37, v38);
  KeyPath = swift_getKeyPath(&unk_10063D828);
  v114[0] = v39;
  v110 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v114, KeyPath, v110);
  swift_release(KeyPath);
  v41 = &v39[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v39[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v114, 0, 0);
  v42 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v42(v32, v41, v27);

  GregorianDayRange.dayIndexRange.getter(v43);
  v44 = *(void (**)(char *, uint64_t))(v28 + 8);
  v93 = v27;
  v44(v32, v27);
  v45 = v109;
  v46 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  v46(v22, v26, v3);
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v47(v22, 0, 1, v3);
  v47(v19, 1, 1, v3);
  v48 = sub_10036E2E0((uint64_t)v22, (uint64_t)v19);
  sub_10001BE90((uint64_t)v19, &qword_100823520);
  sub_10001BE90((uint64_t)v22, &qword_100823520);
  v91 = v26;
  result = sub_10001BE90((uint64_t)v26, &qword_100823530);
  if (__OFSUB__(v48, 1))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v50 = v34 + -9.0;
  v51 = 0.0;
  if (a1 >= 0.0)
    v51 = a1;
  if (v50 < v51)
    v51 = v34 + -9.0;
  v52 = (v50 - v51) * (double)(v48 - 1) / v50;
  if ((~*(_QWORD *)&v52 & 0x7FF0000000000000) == 0)
    goto LABEL_17;
  if (v52 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v52 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  v90 = (uint64_t)v52;
  v53 = v92;
  v54 = *(void **)v92;
  v104 = (void (*)(char *, uint64_t, uint64_t))v46;
  v55 = v44;
  v106 = v44;
  v56 = *(_BYTE *)(v92 + 8);
  sub_10010C5D0(v54, v56);
  v57 = (char *)sub_1003F70B8(v54, v56);
  v58 = v42;
  v105 = v42;
  v59 = v57;
  sub_10010C5EC(v54, v56);
  v60 = swift_getKeyPath(&unk_10063D828);
  v113[0] = v59;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v113, v60, v110);
  swift_release(v60);
  v61 = &v59[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v59[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v113, 0, 0);
  v62 = v93;
  v58(v32, v61, v93);

  v63 = (uint64_t)v91;
  GregorianDayRange.dayIndexRange.getter(v64);
  v55(v32, v62);
  v65 = v100;
  v46(v100, (char *)(v63 + *(int *)(v107 + 36)), v3);
  sub_10001BE90(v63, &qword_100823530);
  static DayIndex.- infix(_:_:)(v65, v90);
  v66 = *(void (**)(char *, uint64_t))(v109 + 8);
  v66(v65, v3);
  v67 = *(id *)v53;
  LOBYTE(v55) = *(_BYTE *)(v53 + 8);
  sub_10010C5D0(*(id *)v53, (char)v55);
  v68 = (char *)sub_1003F70B8(v67, (char)v55);
  sub_10010C5EC(v67, (char)v55);
  v69 = swift_getKeyPath(&unk_10063D828);
  v112[0] = v68;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v112, v69, v110);
  swift_release(v69);
  v70 = &v68[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v68[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v112, 0, 0);
  v105(v32, v70, v62);

  GregorianDayRange.dayIndexRange.getter(v71);
  v106(v32, v62);
  v104(v65, v63, v3);
  sub_10001BE90(v63, &qword_100823530);
  v72 = v95;
  DayIndex.init(integerLiteral:)(1);
  v73 = v99;
  static DayIndex.+ infix(_:_:)(v65, v72);
  v66(v72, v3);
  v66(v65, v3);
  v74 = *(id *)v53;
  LOBYTE(v69) = *(_BYTE *)(v53 + 8);
  sub_10010C5D0(*(id *)v53, v69);
  v75 = (char *)sub_1003F70B8(v74, v69);
  sub_10010C5EC(v74, v69);
  v76 = swift_getKeyPath(&unk_10063D828);
  v111[0] = v75;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v111, v76, v110);
  swift_release(v76);
  v77 = &v75[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v75[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v111, 0, 0);
  v78 = v94;
  v105(v94, v77, v62);

  v79 = (uint64_t)v96;
  GregorianDayRange.dayIndexRange.getter(v80);
  v106(v78, v62);
  v81 = v98;
  v82 = (void (*)(char *, char *, uint64_t))v104;
  v104(v98, v79 + *(int *)(v107 + 36), v3);
  sub_10001BE90(v79, &qword_100823530);
  v83 = sub_1000083D8((unint64_t *)&qword_100823548, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
  v84 = v108;
  if ((dispatch thunk of static Comparable.< infix(_:_:)(v108, v81, v3) & 1) != 0)
    v85 = v84;
  else
    v85 = v81;
  v86 = v101;
  v82(v101, v85, v3);
  v66(v81, v3);
  if ((dispatch thunk of static Comparable.>= infix(_:_:)(v86, v73, v3, v83) & 1) != 0)
    v87 = v86;
  else
    v87 = v73;
  v88 = v102;
  v82(v102, v87, v3);
  v66(v86, v3);
  v66(v73, v3);
  v82(v65, v88, v3);
  v89 = sub_100047110(&qword_100834260);
  State.wrappedValue.setter(v65, v89);
  v66(v88, v3);
  return ((uint64_t (*)(char *, uint64_t))v66)(v84, v3);
}

uint64_t sub_10045C634(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int *DetailsStackedChartView;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  double v21;
  double v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t);
  uint64_t v31;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33[2] = a1;
  v3 = type metadata accessor for LayoutDirection(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v33 - v8;
  v10 = type metadata accessor for DayIndex(0);
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (_QWORD *)((char *)v33 - v14);
  DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  v17 = a2 + DetailsStackedChartView[11];
  v18 = sub_100047110(&qword_100834260);
  v33[1] = v17;
  State.wrappedValue.getter(v15, v18);
  sub_1003F74E0((uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v3);
  LOBYTE(v17) = static LayoutDirection.== infix(_:_:)(v9, v6);
  v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19(v6, v3);
  v20 = ((uint64_t (*)(char *, uint64_t))v19)(v9, v3);
  if ((v17 & 1) != 0)
  {
    v21 = SpatialTapGesture.Value.location.getter(v20);
  }
  else
  {
    v22 = *(double *)(a2 + DetailsStackedChartView[9]);
    v21 = v22 - SpatialTapGesture.Value.location.getter(v20);
  }
  sub_10045BD30(v21);
  v23 = (char *)(a2 + DetailsStackedChartView[12]);
  v24 = *v23;
  v25 = *((_QWORD *)v23 + 1);
  LOBYTE(v36) = *v23;
  v37 = v25;
  v26 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v38, v26);
  if ((v38 & 1) != 0)
  {
    State.wrappedValue.getter(v12, v18);
    v27 = sub_1000083D8(&qword_100823540, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
    v28 = v35;
    dispatch thunk of Strideable.distance(to:)(&v36, v12, v35, v27);
    v29 = v36;
    v30 = *(void (**)(_QWORD *, uint64_t))(v34 + 8);
    v30(v12, v28);
    if (!v29)
    {
      v31 = *((_QWORD *)v23 + 1);
      LOBYTE(v36) = *v23;
      v37 = v31;
      LOBYTE(v38) = 0;
      State.wrappedValue.setter(&v38, v26);
    }
  }
  else
  {
    LOBYTE(v36) = v24;
    v37 = v25;
    LOBYTE(v38) = 1;
    State.wrappedValue.setter(&v38, v26);
    v28 = v35;
    v30 = *(void (**)(_QWORD *, uint64_t))(v34 + 8);
  }
  return ((uint64_t (*)(_QWORD *, uint64_t))v30)(v15, v28);
}

uint64_t sub_10045C8D8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[9];
  uint64_t v8;

  v2 = (char *)(a2 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 48));
  v3 = *v2;
  v4 = *((_QWORD *)v2 + 1);
  v7[1] = v3;
  v8 = v4;
  v7[0] = 1;
  v5 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(v7, v5);
}

void sub_10045C940(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t DetailsStackedChartView;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  char *v29;
  uint64_t KeyPath;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  _QWORD v55[5];
  id v56;

  v47 = a2;
  v54 = a3;
  v5 = type metadata accessor for Calendar(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v53 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GregorianDayRange(0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v48 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for DayIndex(0);
  v10 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v12 = (uint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for Date(0);
  v46 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - v16;
  sub_1000252E0(a1, (uint64_t)v55);
  v18 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v19 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if ((swift_dynamicCast(&v56, v55, v18, v19, 6) & 1) == 0)
    goto LABEL_4;
  v44 = v6;
  v20 = v56;
  v21 = objc_msgSend(v56, "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v45 = v3;
  v23 = DetailsStackedChartView;
  v24 = v47;
  v25 = sub_100047110(&qword_100834260);
  State.wrappedValue.getter(v12, v25);
  v26 = v24 + *(int *)(v23 + 68);
  v27 = *(void **)v26;
  v43 = v5;
  v47 = v10;
  v28 = *(_BYTE *)(v26 + 8);
  sub_10010C5D0(v27, v28);
  v29 = (char *)sub_1003F70B8(v27, v28);
  sub_10010C5EC(v27, v28);
  KeyPath = swift_getKeyPath(&unk_10063D828);
  v55[0] = v29;
  v31 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v55, KeyPath, v31);
  swift_release(KeyPath);
  v32 = &v29[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v29[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v55, 0, 0);
  v33 = v48;
  v34 = v49;
  v35 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v48, v32, v50);

  v36 = v53;
  GregorianDayRange.gregorianCalendar.getter(v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
  DayIndex.startDate(in:)(v36);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v43);
  (*(void (**)(_QWORD *, uint64_t))(v47 + 8))(v12, v51);
  v38 = Date.isSameDay(as:)(v14);
  v39 = *(void (**)(char *, uint64_t))(v46 + 8);
  v40 = v14;
  v41 = v52;
  v39(v40, v52);
  v39(v17, v41);
  if ((v38 & 1) == 0)
  {

LABEL_4:
    v20 = 0;
  }
  *v54 = v20;
}

uint64_t sub_10045CCC0(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t DetailsStackedChartView;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  char *v29;
  uint64_t KeyPath;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD v64[3];
  _QWORD v65[3];

  v4 = type metadata accessor for Calendar(0);
  v61 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v62 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for GregorianDayRange(0);
  v58 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v57 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DayIndex(0);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v50 - v19;
  v21 = objc_msgSend(*a1, "_startDate", v18);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_5;
  }
  v22 = v21;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

  v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v23(v12, v16, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_5:
    sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_100828370);
    v47 = 0;
    return v47 & 1;
  }
  v23(v20, v12, v13);
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v25 = sub_100047110(&qword_100834260);
  v55 = v9;
  State.wrappedValue.getter(v9, v25);
  v26 = *(int *)(DetailsStackedChartView + 68);
  v56 = v20;
  v51 = a2 + v26;
  v27 = *(void **)(a2 + v26);
  v54 = v4;
  v28 = *(_BYTE *)(a2 + v26 + 8);
  sub_10010C5D0(v27, v28);
  v29 = (char *)sub_1003F70B8(v27, v28);
  sub_10010C5EC(v27, v28);
  KeyPath = swift_getKeyPath(&unk_10063D828);
  v65[0] = v29;
  v53 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v65, KeyPath, v53);
  swift_release(KeyPath);
  v31 = &v29[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v29[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v65, 0, 0);
  v32 = v57;
  v33 = v58;
  v52 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v34 = v63;
  v52(v57, v31, v63);

  v35 = v62;
  GregorianDayRange.gregorianCalendar.getter(v36);
  v58 = *(_QWORD *)(v33 + 8);
  ((void (*)(char *, uint64_t))v58)(v32, v34);
  v37 = v55;
  DayIndex.startDate(in:)(v35);
  v61 = *(_QWORD *)(v61 + 8);
  v38 = v54;
  ((void (*)(char *, uint64_t))v61)(v35, v54);
  (*(void (**)(_QWORD *, uint64_t))(v59 + 8))(v37, v60);
  v39 = *(id *)v51;
  LOBYTE(v37) = *(_BYTE *)(v51 + 8);
  sub_10010C5D0(*(id *)v51, (char)v37);
  v40 = (char *)sub_1003F70B8(v39, (char)v37);
  sub_10010C5EC(v39, (char)v37);
  v41 = swift_getKeyPath(&unk_10063D828);
  v64[0] = v40;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v64, v41, v53);
  swift_release(v41);
  v42 = &v40[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess(&v40[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange], v64, 0, 0);
  v43 = v42;
  v44 = v63;
  v52(v32, v43, v63);

  GregorianDayRange.gregorianCalendar.getter(v45);
  ((void (*)(char *, uint64_t))v58)(v32, v44);
  v46 = v56;
  v47 = Calendar.isDate(_:inSameDayAs:)(v56, v16);
  ((void (*)(char *, uint64_t))v61)(v35, v38);
  v48 = *(void (**)(char *, uint64_t))(v14 + 8);
  v48(v16, v13);
  v48(v46, v13);
  return v47 & 1;
}

uint64_t sub_10045D184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  void *v27;

  v22 = sub_100047110(&qword_100834350);
  v21 = sub_100007050(&qword_100834358);
  v20 = sub_100007050(&qword_100834360);
  v19 = sub_100007050(&qword_100834368);
  v0 = sub_100007050(&qword_100834370);
  v1 = sub_100007050(&qword_100834378);
  v2 = sub_100007050(&qword_100834380);
  v3 = sub_100007050(&qword_100834388);
  v4 = sub_100007050(&qword_100834390);
  v24 = sub_100007050(&qword_100834398);
  v25 = (ValueMetadata *)type metadata accessor for DayIndex(255);
  v26 = sub_1000E0A18(&qword_1008343A0, &qword_100834398, (void (*)(void))sub_10045FD9C);
  v27 = (void *)sub_1000083D8(&qword_100823538, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v6 = sub_1000F0610(&qword_1008343C8, &qword_100834390, (void (*)(void))sub_10045FE20, (uint64_t)&protocol conformance descriptor for <> [A : B]);
  v24 = v3;
  v25 = (ValueMetadata *)v4;
  v26 = OpaqueTypeConformance2;
  v27 = (void *)v6;
  v7 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v8 = sub_1002C51AC();
  v24 = v2;
  v25 = &type metadata for DayRangeForStackedLoadCharts;
  v26 = v7;
  v27 = (void *)v8;
  v9 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v24 = v1;
  v25 = (ValueMetadata *)&type metadata for Bool;
  v26 = v9;
  v27 = &protocol witness table for Bool;
  v10 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v11 = sub_100007050(&qword_1008343E8);
  v12 = sub_100028384(&qword_1008343F0, &qword_1008343E8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v24 = v11;
  v25 = (ValueMetadata *)v12;
  v13 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v24 = v19;
  v25 = (ValueMetadata *)v0;
  v26 = v10;
  v27 = (void *)v13;
  v14 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v15 = sub_100038CA0();
  v24 = v20;
  v25 = (ValueMetadata *)&type metadata for String;
  v26 = v14;
  v27 = (void *)v15;
  v16 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v24 = v21;
  v25 = (ValueMetadata *)v16;
  v17 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  return NavigationView.init(content:)(sub_10045FD94, v23, v22, v17);
}

uint64_t sub_10045D43C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  char v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t KeyPath;
  double v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  __int128 v65;
  _OWORD *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  uint64_t v103;
  char v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  uint64_t v106;
  char v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  char v109;
  uint64_t v110;
  uint64_t v111;

  v2 = v1;
  v96 = a1;
  v84 = type metadata accessor for DynamicTypeSize(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100047110(&qword_1008349B0);
  v87 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v80 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100047110(&qword_1008349B8);
  v90 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v81 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100047110(&qword_1008349C0);
  __chkstk_darwin(v89);
  v86 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100047110(&qword_1008349C8);
  __chkstk_darwin(v91);
  v88 = (uint64_t)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100047110(&qword_100834A10);
  v95 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v93 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = static VerticalAlignment.center.getter(v9);
  sub_1004607B8(0xD00000000000001DLL, 0x800000010069F5C0, 0xD00000000000001FLL, 0x800000010069F5E0, (uint64_t)&v99);
  v10 = (CHWorkoutDetailHeartRateTableViewCell *)v99;
  v11 = v100;
  v77 = v99;
  v12 = v101;
  v14 = v102;
  v13 = v103;
  v79 = v102;
  v15 = v104;
  v16 = v105;
  v78 = v105;
  v18 = static Font.subheadline.getter(v17);
  KeyPath = swift_getKeyPath(&unk_10063D8D0);
  v99 = v76;
  v100 = 0;
  v101 = 1;
  v102 = v10;
  v103 = v11;
  v104 = v12;
  v105 = v14;
  v106 = v13;
  v107 = v15;
  v108 = v16;
  v109 = 0;
  v110 = KeyPath;
  v111 = v18;
  v20 = static Font.Weight.semibold.getter(KeyPath);
  v21 = sub_100047110(&qword_1008349D0);
  v22 = sub_10046207C();
  v23 = v80;
  View.fontWeight(_:)(*(_QWORD *)&v20, 0, v21, v22);
  sub_1000E4458(v77, v11, v12);
  swift_release(v18);
  swift_release(KeyPath);
  swift_release(v78);
  swift_bridgeObjectRelease(v79, v24, v25, v26, v27, v28, v29, v30);
  v31 = v83;
  v32 = v82;
  v33 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, enum case for DynamicTypeSize.large(_:), v84);
  v99 = v21;
  v100 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v99, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v35 = v81;
  v36 = v85;
  View.dynamicTypeSize(_:)(v32, v85, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v23, v36);
  v37 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v38 = Color.init(_:)(v37);
  v39 = swift_getKeyPath(&unk_10063D930);
  v40 = v90;
  v41 = (uint64_t)v86;
  v42 = v92;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v86, v35, v92);
  v43 = (uint64_t *)(v41 + *(int *)(v89 + 36));
  *v43 = v39;
  v43[1] = v38;
  v44 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v35, v42);
  LOBYTE(v38) = static Edge.Set.vertical.getter(v44);
  v45 = EdgeInsets.init(_all:)(6.0);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v52 = v88;
  sub_100021CC0(v41, v88, &qword_1008349C0);
  v53 = v91;
  v54 = v52 + *(int *)(v91 + 36);
  *(_BYTE *)v54 = v38;
  *(double *)(v54 + 8) = v45;
  *(_QWORD *)(v54 + 16) = v47;
  *(_QWORD *)(v54 + 24) = v49;
  *(_QWORD *)(v54 + 32) = v51;
  *(_BYTE *)(v54 + 40) = 0;
  sub_10001BE90(v41, &qword_1008349C0);
  v55 = (_OWORD *)swift_allocObject(&unk_1007A0378, 73, 7);
  v56 = v2[1];
  v55[1] = *v2;
  v55[2] = v56;
  v55[3] = v2[2];
  *(_OWORD *)((char *)v55 + 57) = *(__int128 *)((char *)v2 + 41);
  sub_1004622C0((uint64_t *)v2);
  v57 = sub_1000E0A18(&qword_100834A00, &qword_1008349C8, (void (*)(void))sub_1004621D8);
  v58 = v93;
  v59 = v53;
  View.onTapGesture(count:perform:)(1, sub_1004622B8, v55, v53, v57);
  swift_release(v55);
  sub_10001BE90(v52, &qword_1008349C8);
  v97 = *v2;
  v98 = *((_BYTE *)v2 + 16);
  v60 = sub_100047110(&qword_100820FF8);
  Binding.projectedValue.getter(v60);
  v61 = v99;
  v62 = v100;
  v63 = v101;
  v64 = (_OWORD *)swift_allocObject(&unk_1007A03A0, 73, 7);
  v65 = v2[1];
  v64[1] = *v2;
  v64[2] = v65;
  v64[3] = v2[2];
  *(_OWORD *)((char *)v64 + 57) = *(__int128 *)((char *)v2 + 41);
  v66 = (_OWORD *)swift_allocObject(&unk_1007A03C8, 73, 7);
  v67 = v2[1];
  v66[1] = *v2;
  v66[2] = v67;
  v66[3] = v2[2];
  *(_OWORD *)((char *)v66 + 57) = *(__int128 *)((char *)v2 + 41);
  sub_1004622C0((uint64_t *)v2);
  sub_1004622C0((uint64_t *)v2);
  v68 = type metadata accessor for OvernightMetricsReorderingView(0);
  v99 = v59;
  v100 = v57;
  v69 = swift_getOpaqueTypeConformance2(&v99, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v70 = sub_1000083D8(&qword_100834A18, type metadata accessor for OvernightMetricsReorderingView, (uint64_t)&unk_10063DAD8);
  v74 = v68;
  v71 = v94;
  View.sheet<A>(isPresented:onDismiss:content:)(v61, v62, v63, sub_100462340, v64, sub_10046239C, v66, v94, v74, v69, v70);
  swift_release(v62);
  swift_release(v64);
  swift_release(v66);
  v72 = swift_release(v61);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v95 + 8))(v58, v71, v72);
}

double sub_10045DB54(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  double result;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  v1 = a1[1];
  v3 = *((_BYTE *)a1 + 16);
  v11 = *a1;
  v2 = v11;
  sub_10010799C(&v11);
  swift_retain(v1);
  v4 = sub_100047110(&qword_100820FF8);
  Binding.wrappedValue.getter(v4);
  v7 = v2;
  v8 = v1;
  v9 = v3;
  v6 = (v10 & 1) == 0;
  Binding.wrappedValue.setter(&v6, v4);
  sub_100461280(&v11);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

void sub_10045DBFC()
{
  uint64_t v0;
  SEL v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;

  v0 = sub_100047110(&qword_100834A20);
  Binding.wrappedValue.getter(v0);
  sub_10026712C(v8);
  swift_bridgeObjectRelease(v8, v1, v2, v3, v4, v5, v6, v7);
}

__n128 sub_10045DC58@<Q0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __n128 result;
  uint64_t v6;
  __n128 v7;

  v2 = sub_100047110(&qword_100834A20);
  Binding.projectedValue.getter(v2);
  *a1 = swift_getKeyPath(&unk_10063D690);
  v3 = sub_100047110((uint64_t *)&unk_100832400);
  swift_storeEnumTagMultiPayload(a1, v3, 0);
  v4 = (char *)a1 + *(int *)(type metadata accessor for OvernightMetricsReorderingView(0) + 20);
  *(_QWORD *)v4 = v6;
  result = v7;
  *(__n128 *)(v4 + 8) = v7;
  return result;
}

uint64_t sub_10045DCF8@<X0>(uint64_t a1@<X8>)
{
  return sub_10045D43C(a1);
}

uint64_t sub_10045DD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t OpaqueTypeConformance2;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char v89[16];
  uint64_t v90;
  _QWORD v91[4];

  v75 = a1;
  v87 = a2;
  v3 = type metadata accessor for OvernightMetricsReorderingView(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v83 = *(_QWORD *)(v3 - 8);
  v84 = v4;
  __chkstk_darwin(v3);
  v81 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100820FE0);
  v7 = *(_QWORD *)(v6 - 8);
  v85 = v6;
  v86 = v7;
  __chkstk_darwin(v6);
  v82 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  v10 = __chkstk_darwin(v9);
  v76 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditMode(0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100834AF8);
  __chkstk_darwin(v16);
  v18 = (unint64_t *)((char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100047110(&qword_100834AE0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100047110(&qword_100834AC8);
  v74 = v23;
  __chkstk_darwin(v23);
  v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100047110(&qword_100834AC0);
  v27 = *(_QWORD *)(v26 - 8);
  v79 = v26;
  v80 = v27;
  __chkstk_darwin(v26);
  v88 = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = a1;
  v29 = sub_100047110(&qword_100834B00);
  v30 = sub_100462C60();
  List<>.init(content:)(sub_100462C58, v89, v29, v30);
  KeyPath = swift_getKeyPath(&unk_10063DB28);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for EditMode.active(_:), v12);
  static Binding.constant(_:)(v18, v15, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v32 = sub_100047110(&qword_100834B30);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v18, 0, 1, v32);
  v33 = (uint64_t *)&v25[*(int *)(v23 + 36)];
  v34 = sub_100047110(&qword_100834AF0);
  sub_100021CC0((uint64_t)v18, (uint64_t)v33 + *(int *)(v34 + 28), &qword_100834AF8);
  *v33 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v25, v22, v19);
  sub_10001BE90((uint64_t)v18, &qword_100834AF8);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v35 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001DLL, 0x800000010069F5C0);
  v36 = Text.init(_:tableName:bundle:comment:)(v35);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  v43 = v76;
  v44 = v77;
  v45 = v78;
  (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v76, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v78);
  v73 = sub_100462BBC();
  v46 = v74;
  View.navigationBarTitle(_:displayMode:)(v36, v38, v42, v40, v43, v74, v73);
  sub_1000E4458(v36, v38, v42);
  swift_bridgeObjectRelease(v40, v47, v48, v49, v50, v51, v52, v53);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  sub_10001BE90((uint64_t)v25, &qword_100834AC8);
  v54 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000029, 0x800000010069F600);
  v56 = v55;
  LOBYTE(v38) = v57;
  v59 = v58;
  v60 = v81;
  sub_10004F8C8(v75, v81, type metadata accessor for OvernightMetricsReorderingView);
  v61 = *(unsigned __int8 *)(v83 + 80);
  v62 = (v61 + 16) & ~v61;
  v63 = swift_allocObject(&unk_1007A03F0, v62 + v84, v61 | 7);
  sub_100047C88(v60, v63 + v62, type metadata accessor for OvernightMetricsReorderingView);
  v64 = v82;
  Button<>.init(_:action:)(v54, v56, v38 & 1, v59, sub_100462D78, v63);
  v91[0] = v46;
  v91[1] = v73;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v91, &opaque type descriptor for <<opaque return type of View.navigationBarTitle(_:displayMode:)>>, 1);
  v66 = sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v67 = v88;
  v68 = v64;
  v69 = v64;
  v70 = v79;
  v71 = v85;
  View.navigationBarItems<A>(trailing:)(v69, v79, v85, OpaqueTypeConformance2, v66);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v68, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v67, v70);
}

uint64_t sub_10045E2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[8];
  void *v27;
  __int128 v28;

  v24 = a1;
  v25 = a2;
  v3 = type metadata accessor for OvernightMetricsReorderingView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100047110(&qword_100834B18);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1 + *(int *)(v3 + 20);
  v27 = *(void **)v10;
  v28 = *(_OWORD *)(v10 + 8);
  v11 = sub_100047110(&qword_100834A20);
  Binding.wrappedValue.getter(v11);
  KeyPath = swift_getKeyPath(&unk_10063DB58);
  v13 = sub_100047110(&qword_100834250);
  v14 = sub_100047110(&qword_100834B38);
  v15 = sub_100028384(&qword_100834B40, &qword_100834250, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = &type metadata for Text;
  *(_QWORD *)&v28 = &protocol witness table for Text;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v27, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
  ForEach<>.init(_:id:content:)(v26, KeyPath, sub_10045E4F8, 0, v13, v14, v15, &protocol witness table for Int, OpaqueTypeConformance2);
  sub_10004F8C8(v24, (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for OvernightMetricsReorderingView);
  v17 = *(unsigned __int8 *)(v4 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_1007A0418, v18 + v5, v17 | 7);
  sub_100047C88((uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for OvernightMetricsReorderingView);
  v20 = swift_allocObject(&unk_1007A0440, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_100462E5C;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v25, v9, v6);
  v22 = (_QWORD *)(v21 + *(int *)(sub_100047110(&qword_100834B00) + 36));
  *v22 = sub_100462ECC;
  v22[1] = v20;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10045E4F8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;

  v35 = SleepingSampleDataType.localizedName.getter(a1);
  v36 = v1;
  v2 = sub_100038CA0();
  v3 = Text.init<A>(_:)(&v35, &type metadata for String, v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = static Font.headline.getter();
  v12 = Text.font(_:)(v10, v3, v5, v9, v7, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release(v10);
  sub_1000E4458(v3, v5, v9);
  swift_bridgeObjectRelease(v7, v19, v20, v21, v22, v23, v24, v25);
  v35 = v12;
  v36 = v14;
  v37 = v16 & 1;
  v38 = v18;
  v27 = static VerticalEdge.Set.all.getter(v26);
  View.listRowSeparator(_:edges:)(2, v27, &type metadata for Text, &protocol witness table for Text);
  sub_1000E4458(v12, v14, v16 & 1);
  swift_bridgeObjectRelease(v18, v28, v29, v30, v31, v32, v33, v34);
}

double sub_10045E60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double result;
  _QWORD v20[5];

  v5 = (_QWORD *)(a3 + *(int *)(type metadata accessor for OvernightMetricsReorderingView(0) + 20));
  v6 = *v5;
  v7 = v5[1];
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)v5[2];
  swift_retain(*v5);
  swift_retain(v7);
  swift_bridgeObjectRetain(v8);
  v9 = sub_100047110(&qword_100834A20);
  Binding.wrappedValue.getter(v9);
  v10 = sub_100047110(&qword_100834250);
  v11 = sub_100028384(&qword_100834B48, &qword_100834250, (uint64_t)&protocol conformance descriptor for [A]);
  MutableCollection.move(fromOffsets:toOffset:)(a1, a2, v10, v11);
  v20[1] = v6;
  v20[2] = v7;
  v20[3] = v8;
  v20[0] = v20[4];
  Binding.wrappedValue.setter(v20, v9);
  swift_bridgeObjectRelease(v8, v12, v13, v14, v15, v16, v17, v18);
  swift_release(v7);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_10045E724()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10045E744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457C3C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

_QWORD *sub_10045E768(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t DataType;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  id v34;
  id v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  id v58;
  uint64_t v59;
  char *v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  char *v81;
  char *v82;
  void *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v8 = a2[1];
    a1[1] = v8;
    swift_retain(v5);
    swift_retain(v8);
    v9 = *(int *)(sub_100047110(&qword_100834258) + 32);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    DataType = type metadata accessor for TrainingLoadDataType(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 16))(v10, v11, DataType);
    v13 = a3[5];
    v14 = a3[6];
    v15 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v15;
    v83 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)a1 + v14) = v83;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = *v19;
    v21 = v19[1];
    *v18 = *v19;
    v18[1] = v21;
    v22 = (_QWORD *)((char *)a1 + v17);
    v23 = (char *)a2 + v17;
    v25 = *(void **)v23;
    v24 = *((_QWORD *)v23 + 1);
    v26 = a3[9];
    v27 = a3[10];
    v28 = *(_QWORD *)((char *)a2 + v26);
    *v22 = v25;
    v22[1] = v24;
    *(_QWORD *)((char *)a1 + v26) = v28;
    v29 = (char *)a1 + v27;
    *v29 = *((_BYTE *)a2 + v27);
    v30 = *(_QWORD *)((char *)a2 + v27 + 8);
    *((_QWORD *)v29 + 1) = v30;
    v31 = a3[11];
    v82 = (char *)a1 + v31;
    v80 = v24;
    v81 = (char *)a2 + v31;
    v32 = type metadata accessor for DayIndex(0);
    v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    v84 = v32;
    v85 = v33;
    v34 = v15;
    v35 = v83;
    swift_bridgeObjectRetain(v20);
    swift_retain(v21);
    v36 = v25;
    swift_retain(v80);
    v37 = swift_retain(v30);
    ((void (*)(char *, char *, uint64_t, __n128))v33)(v82, v81, v32, v37);
    v38 = *(int *)(sub_100047110(&qword_100834260) + 28);
    v39 = *(_QWORD *)&v81[v38];
    *(_QWORD *)&v82[v38] = v39;
    v40 = a3[12];
    v41 = a3[13];
    v42 = (char *)a1 + v40;
    v43 = (char *)a2 + v40;
    *v42 = *v43;
    v44 = *((_QWORD *)v43 + 1);
    *((_QWORD *)v42 + 1) = v44;
    v45 = (_QWORD *)((char *)a1 + v41);
    v46 = (_QWORD *)((char *)a2 + v41);
    v47 = *v46;
    v48 = v46[1];
    *v45 = *v46;
    v45[1] = v48;
    v49 = a3[14];
    v50 = a3[15];
    v51 = (char *)a1 + v49;
    v52 = (char *)a2 + v49;
    *v51 = *v52;
    v53 = *((_QWORD *)v52 + 1);
    v54 = *(void **)((char *)a2 + v50);
    *((_QWORD *)v51 + 1) = v53;
    *(_QWORD *)((char *)a1 + v50) = v54;
    v55 = a3[16];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    swift_retain(v39);
    swift_retain(v44);
    swift_bridgeObjectRetain(v47);
    swift_retain(v48);
    swift_retain(v53);
    v58 = v54;
    v85(v56, v57, v84);
    v59 = a3[17];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    v62 = *(id *)v61;
    LOBYTE(v44) = v61[8];
    sub_10010C5D0(*(id *)v61, v44);
    *(_QWORD *)v60 = v62;
    v60[8] = v44;
    v63 = a3[18];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v66 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(v65, v66) == 1)
    {
      v67 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v64, v65, v67);
      v68 = 1;
    }
    else
    {
      v69 = *v65;
      *v64 = *v65;
      swift_retain(v69);
      v68 = 0;
    }
    swift_storeEnumTagMultiPayload(v64, v66, v68);
    v70 = a3[19];
    v71 = (_QWORD *)((char *)a1 + v70);
    v72 = (_QWORD *)((char *)a2 + v70);
    v73 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
    {
      v74 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v71, v72, v74);
      v75 = v71;
      v76 = v73;
      v77 = 1;
    }
    else
    {
      v78 = *v72;
      *v71 = *v72;
      swift_retain(v78);
      v75 = v71;
      v76 = v73;
      v77 = 0;
    }
    swift_storeEnumTagMultiPayload(v75, v76, v77);
  }
  return a1;
}

double sub_10045EAC4(char *a1, int *a2)
{
  char *v4;
  uint64_t DataType;
  char *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double result;

  swift_release(*(_QWORD *)a1);
  swift_release(*((_QWORD *)a1 + 1));
  v4 = &a1[*(int *)(sub_100047110(&qword_100834258) + 32)];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v4, DataType);

  v6 = &a1[a2[7]];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v6, v7, v8, v9, v10, v11, v12, v13);
  swift_release(*((_QWORD *)v6 + 1));
  v14 = &a1[a2[8]];

  swift_release(*((_QWORD *)v14 + 1));
  swift_release(*(_QWORD *)&a1[a2[10] + 8]);
  v15 = &a1[a2[11]];
  v16 = type metadata accessor for DayIndex(0);
  v17 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  v18 = sub_100047110(&qword_100834260);
  swift_release(*(_QWORD *)&v15[*(int *)(v18 + 28)]);
  swift_release(*(_QWORD *)&a1[a2[12] + 8]);
  v19 = &a1[a2[13]];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v19, v20, v21, v22, v23, v24, v25, v26);
  swift_release(*((_QWORD *)v19 + 1));
  swift_release(*(_QWORD *)&a1[a2[14] + 8]);

  v17(&a1[a2[16]], v16);
  sub_10010C5EC(*(id *)&a1[a2[17]], a1[a2[17] + 8]);
  v27 = &a1[a2[18]];
  v28 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);
  }
  else
  {
    swift_release(*(_QWORD *)v27);
  }
  v30 = &a1[a2[19]];
  v31 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*(_QWORD *)v30).n128_u64[0];
  }
  return result;
}

_QWORD *sub_10045ECDC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t DataType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  id v33;
  id v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  id v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  char *v78;
  char *v79;
  void *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);

  v6 = *a2;
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  swift_retain(v6);
  swift_retain(v7);
  v8 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 16))(v9, v10, DataType);
  v12 = a3[5];
  v13 = a3[6];
  v14 = *(void **)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v14;
  v80 = *(void **)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v80;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)((char *)a2 + v15);
  v19 = *v18;
  v20 = v18[1];
  *v17 = *v18;
  v17[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v16);
  v22 = (char *)a2 + v16;
  v24 = *(void **)v22;
  v23 = *((_QWORD *)v22 + 1);
  v25 = a3[9];
  v26 = a3[10];
  v27 = *(_QWORD *)((char *)a2 + v25);
  *v21 = v24;
  v21[1] = v23;
  *(_QWORD *)((char *)a1 + v25) = v27;
  v28 = (char *)a1 + v26;
  *v28 = *((_BYTE *)a2 + v26);
  v29 = *(_QWORD *)((char *)a2 + v26 + 8);
  *((_QWORD *)v28 + 1) = v29;
  v30 = a3[11];
  v79 = (char *)a1 + v30;
  v77 = v23;
  v78 = (char *)a2 + v30;
  v31 = type metadata accessor for DayIndex(0);
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v81 = v31;
  v82 = v32;
  v33 = v14;
  v34 = v80;
  swift_bridgeObjectRetain(v19);
  swift_retain(v20);
  v35 = v24;
  swift_retain(v77);
  v36 = swift_retain(v29);
  ((void (*)(char *, char *, uint64_t, __n128))v32)(v79, v78, v31, v36);
  v37 = *(int *)(sub_100047110(&qword_100834260) + 28);
  v38 = *(_QWORD *)&v78[v37];
  *(_QWORD *)&v79[v37] = v38;
  v39 = a3[12];
  v40 = a3[13];
  v41 = (char *)a1 + v39;
  v42 = (char *)a2 + v39;
  *v41 = *v42;
  v43 = *((_QWORD *)v42 + 1);
  *((_QWORD *)v41 + 1) = v43;
  v44 = (_QWORD *)((char *)a1 + v40);
  v45 = (_QWORD *)((char *)a2 + v40);
  v46 = *v45;
  v47 = v45[1];
  *v44 = *v45;
  v44[1] = v47;
  v48 = a3[14];
  v49 = a3[15];
  v50 = (char *)a1 + v48;
  v51 = (char *)a2 + v48;
  *v50 = *v51;
  v52 = *((_QWORD *)v51 + 1);
  v53 = *(void **)((char *)a2 + v49);
  *((_QWORD *)v50 + 1) = v52;
  *(_QWORD *)((char *)a1 + v49) = v53;
  v54 = a3[16];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  swift_retain(v38);
  swift_retain(v43);
  swift_bridgeObjectRetain(v46);
  swift_retain(v47);
  swift_retain(v52);
  v57 = v53;
  v82(v55, v56, v81);
  v58 = a3[17];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = *(id *)v60;
  LOBYTE(v43) = v60[8];
  sub_10010C5D0(*(id *)v60, v43);
  *(_QWORD *)v59 = v61;
  v59[8] = v43;
  v62 = a3[18];
  v63 = (_QWORD *)((char *)a1 + v62);
  v64 = (_QWORD *)((char *)a2 + v62);
  v65 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(v64, v65) == 1)
  {
    v66 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v63, v64, v66);
    v67 = 1;
  }
  else
  {
    v68 = *v64;
    *v63 = *v64;
    swift_retain(v68);
    v67 = 0;
  }
  swift_storeEnumTagMultiPayload(v63, v65, v67);
  v69 = a3[19];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  v72 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v71, v72) == 1)
  {
    v73 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v70, v71, v73);
    v74 = 1;
  }
  else
  {
    v75 = *v71;
    *v70 = *v71;
    swift_retain(v75);
    v74 = 0;
  }
  swift_storeEnumTagMultiPayload(v70, v72, v74);
  return a1;
}

uint64_t *sub_10045F004(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t DataType;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  char *v86;
  char *v87;
  id v88;
  void *v89;
  char v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 24))(v11, v12, DataType);
  v14 = a3[5];
  v15 = *(void **)((char *)a1 + v14);
  v16 = *(void **)((char *)a2 + v14);
  *(uint64_t *)((char *)a1 + v14) = (uint64_t)v16;
  v17 = v16;

  v18 = a3[6];
  v19 = *(void **)((char *)a1 + v18);
  v20 = *(void **)((char *)a2 + v18);
  *(uint64_t *)((char *)a1 + v18) = (uint64_t)v20;
  v21 = v20;

  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(uint64_t *)((char *)a2 + v22);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + v22);
  *(uint64_t *)((char *)a1 + v22) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
  v34 = *((_QWORD *)v23 + 1);
  v35 = *((_QWORD *)v24 + 1);
  *((_QWORD *)v23 + 1) = v35;
  swift_retain(v35);
  swift_release(v34);
  v36 = a3[8];
  v37 = (uint64_t *)((char *)a1 + v36);
  v38 = (char *)a2 + v36;
  v39 = *(void **)((char *)a1 + v36);
  v40 = *(void **)((char *)a2 + v36);
  *v37 = v40;
  v41 = v40;

  v42 = v37[1];
  v43 = *((_QWORD *)v38 + 1);
  v37[1] = v43;
  swift_retain(v43);
  swift_release(v42);
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  v44 = a3[10];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  *v45 = *v46;
  v47 = *((_QWORD *)v45 + 1);
  v48 = *((_QWORD *)v46 + 1);
  *((_QWORD *)v45 + 1) = v48;
  swift_retain(v48);
  swift_release(v47);
  v49 = a3[11];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = type metadata accessor for DayIndex(0);
  v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24);
  v53(v50, v51, v52);
  v54 = *(int *)(sub_100047110(&qword_100834260) + 28);
  v55 = *(_QWORD *)&v50[v54];
  v56 = *(_QWORD *)&v51[v54];
  *(_QWORD *)&v50[v54] = v56;
  swift_retain(v56);
  swift_release(v55);
  v57 = a3[12];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *v58 = *v59;
  v60 = *((_QWORD *)v58 + 1);
  v61 = *((_QWORD *)v59 + 1);
  *((_QWORD *)v58 + 1) = v61;
  swift_retain(v61);
  swift_release(v60);
  v62 = a3[13];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = *(uint64_t *)((char *)a2 + v62);
  v66 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + v62);
  *(uint64_t *)((char *)a1 + v62) = v65;
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRelease(v66, v67, v68, v69, v70, v71, v72, v73);
  v74 = *((_QWORD *)v63 + 1);
  v75 = *((_QWORD *)v64 + 1);
  *((_QWORD *)v63 + 1) = v75;
  swift_retain(v75);
  swift_release(v74);
  v76 = a3[14];
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  *v77 = *v78;
  v79 = *((_QWORD *)v77 + 1);
  v80 = *((_QWORD *)v78 + 1);
  *((_QWORD *)v77 + 1) = v80;
  swift_retain(v80);
  swift_release(v79);
  v81 = a3[15];
  v82 = *(void **)((char *)a2 + v81);
  v83 = *(void **)((char *)a1 + v81);
  *(uint64_t *)((char *)a1 + v81) = (uint64_t)v82;
  v84 = v82;

  v53((char *)a1 + a3[16], (char *)a2 + a3[16], v52);
  v85 = a3[17];
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = *(id *)v87;
  LOBYTE(v83) = v87[8];
  sub_10010C5D0(*(id *)v87, (char)v83);
  v89 = *(void **)v86;
  v90 = v86[8];
  *(_QWORD *)v86 = v88;
  v86[8] = (char)v83;
  sub_10010C5EC(v89, v90);
  if (a1 != a2)
  {
    v91 = a3[18];
    v92 = (uint64_t *)((char *)a1 + v91);
    v93 = (uint64_t *)((char *)a2 + v91);
    sub_10001BE90((uint64_t)a1 + v91, (uint64_t *)&unk_100832400);
    v94 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(v93, v94) == 1)
    {
      v95 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v92, v93, v95);
      v96 = 1;
    }
    else
    {
      v97 = *v93;
      *v92 = *v93;
      swift_retain(v97);
      v96 = 0;
    }
    swift_storeEnumTagMultiPayload(v92, v94, v96);
    v98 = a3[19];
    v99 = (uint64_t *)((char *)a1 + v98);
    v100 = (uint64_t *)((char *)a2 + v98);
    sub_10001BE90((uint64_t)a1 + v98, &qword_100828058);
    v101 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(v100, v101) == 1)
    {
      v102 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v99, v100, v102);
      v103 = 1;
    }
    else
    {
      v104 = *v100;
      *v99 = *v100;
      swift_retain(v104);
      v103 = 0;
    }
    swift_storeEnumTagMultiPayload(v99, v101, v103);
  }
  return a1;
}

char *sub_10045F3E4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t DataType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v8 = &a1[v7];
  v9 = &a2[v7];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 32))(v8, v9, DataType);
  v11 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
  v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  v13 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[11];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for DayIndex(0);
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v19 = sub_100047110(&qword_100834260);
  *(_QWORD *)&v15[*(int *)(v19 + 28)] = *(_QWORD *)&v16[*(int *)(v19 + 28)];
  v20 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  v21 = a3[15];
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  v18(&a1[a3[16]], &a2[a3[16]], v17);
  v22 = a3[17];
  v23 = a3[18];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  v26 = &a1[v23];
  v27 = &a2[v23];
  v28 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
    swift_storeEnumTagMultiPayload(v26, v28, 1);
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  v30 = a3[19];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload(v31, v33, 1);
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_10045F62C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t DataType;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  char v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  v8 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 40))(v9, v10, DataType);
  v12 = a3[5];
  v13 = *(void **)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);

  v14 = a3[6];
  v15 = *(void **)((char *)a1 + v14);
  *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);

  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + v16);
  *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
  swift_bridgeObjectRelease(v19, v20, v21, v22, v23, v24, v25, v26);
  v27 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release(v27);
  v28 = a3[8];
  v29 = (uint64_t *)((char *)a1 + v28);
  v30 = (uint64_t *)((char *)a2 + v28);
  v31 = *(void **)((char *)a1 + v28);
  *v29 = *v30;

  v32 = v29[1];
  v29[1] = v30[1];
  swift_release(v32);
  v33 = a3[10];
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *v34 = *v35;
  v36 = *((_QWORD *)v34 + 1);
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_release(v36);
  v37 = a3[11];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = type metadata accessor for DayIndex(0);
  v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40);
  v41(v38, v39, v40);
  v42 = *(int *)(sub_100047110(&qword_100834260) + 28);
  v43 = *(_QWORD *)&v38[v42];
  *(_QWORD *)&v38[v42] = *(_QWORD *)&v39[v42];
  swift_release(v43);
  v44 = a3[12];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  *v45 = *v46;
  v47 = *((_QWORD *)v45 + 1);
  *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
  swift_release(v47);
  v48 = a3[13];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + v48);
  *(uint64_t *)((char *)a1 + v48) = *(uint64_t *)((char *)a2 + v48);
  swift_bridgeObjectRelease(v51, v52, v53, v54, v55, v56, v57, v58);
  v59 = *((_QWORD *)v49 + 1);
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  swift_release(v59);
  v60 = a3[14];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  *v61 = *v62;
  v63 = *((_QWORD *)v61 + 1);
  *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
  swift_release(v63);
  v64 = a3[15];
  v65 = *(void **)((char *)a1 + v64);
  *(uint64_t *)((char *)a1 + v64) = *(uint64_t *)((char *)a2 + v64);

  v41((char *)a1 + a3[16], (char *)a2 + a3[16], v40);
  v66 = a3[17];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  v69 = *(_QWORD *)v68;
  LOBYTE(v68) = v68[8];
  v70 = *(void **)v67;
  v71 = v67[8];
  *(_QWORD *)v67 = v69;
  v67[8] = (char)v68;
  sub_10010C5EC(v70, v71);
  if (a1 != a2)
  {
    v72 = a3[18];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    sub_10001BE90((uint64_t)a1 + v72, (uint64_t *)&unk_100832400);
    v75 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(v74, v75) == 1)
    {
      v76 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v73, v74, v76);
      swift_storeEnumTagMultiPayload(v73, v75, 1);
    }
    else
    {
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    v77 = a3[19];
    v78 = (char *)a1 + v77;
    v79 = (char *)a2 + v77;
    sub_10001BE90((uint64_t)a1 + v77, &qword_100828058);
    v80 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(v79, v80) == 1)
    {
      v81 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v78, v79, v81);
      swift_storeEnumTagMultiPayload(v78, v80, 1);
    }
    else
    {
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10045F99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10045F9A8);
}

uint64_t sub_10045F9A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_100047110(&qword_100834258);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100047110(&qword_100834260);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[11];
    }
    else
    {
      v16 = type metadata accessor for DayIndex(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[16];
      }
      else
      {
        v17 = sub_100047110(&qword_100820E68);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[18];
        }
        else
        {
          v8 = sub_100047110(&qword_100834268);
          v14 = *(_QWORD *)(v8 - 8);
          v15 = a3[19];
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[7]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10045FACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10045FAD8);
}

uint64_t sub_10045FAD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_100047110(&qword_100834258);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
      return result;
    }
    v13 = sub_100047110(&qword_100834260);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[11];
    }
    else
    {
      v16 = type metadata accessor for DayIndex(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[16];
      }
      else
      {
        v17 = sub_100047110(&qword_100820E68);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[18];
        }
        else
        {
          v10 = sub_100047110(&qword_100834268);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[19];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10045FBF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[16];

  sub_1000087BC(319, (unint64_t *)&qword_1008342D8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v12[1] = "\b";
    v12[2] = "\b";
    v12[3] = &unk_10063D738;
    v12[4] = &unk_10063D750;
    v12[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v12[6] = &unk_10063D750;
    sub_1000087BC(319, &qword_1008342E0, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v5 <= 0x3F)
    {
      v12[7] = *(_QWORD *)(v4 - 8) + 64;
      v12[8] = &unk_10063D750;
      v12[9] = &unk_10063D738;
      v12[10] = &unk_10063D750;
      v12[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6 = type metadata accessor for DayIndex(319);
      if (v7 <= 0x3F)
      {
        v12[12] = *(_QWORD *)(v6 - 8) + 64;
        v12[13] = &unk_10063D768;
        sub_1000087BC(319, (unint64_t *)&qword_100820ED8, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v12[14] = *(_QWORD *)(v8 - 8) + 64;
          sub_1000087BC(319, (unint64_t *)&qword_1008342E8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
          if (v11 <= 0x3F)
          {
            v12[15] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 16, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t sub_10045FD84(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7894, 1);
}

uint64_t sub_10045FD94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004503F8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10045FD9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008343A8;
  if (!qword_1008343A8)
  {
    v1 = sub_100007050(&qword_1008343B0);
    sub_100028384(&qword_1008343B8, &qword_1008343C0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008343A8);
  }
  return result;
}

uint64_t sub_10045FE20()
{
  return sub_1000F0610(&qword_1008343D0, &qword_1008343D8, (void (*)(void))sub_10045FE44, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_10045FE44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008343E0;
  if (!qword_1008343E0)
  {
    v1 = sub_10001E724(255, &qword_1008274C0, HKQuantity_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1008343E0);
  }
  return result;
}

uint64_t sub_10045FEA0()
{
  return sub_100460114(type metadata accessor for LoadDetailsStackedChartView, (uint64_t (*)(uint64_t))sub_10045ACFC);
}

uint64_t sub_10045FEB8()
{
  uint64_t v0;
  int *DetailsStackedChartView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t DataType;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  v2 = *((_QWORD *)DetailsStackedChartView - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v7 = v0 + v4 + *(int *)(sub_100047110(&qword_100834258) + 32);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v7, DataType);

  v9 = v0 + v4 + DetailsStackedChartView[7];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v9, v10, v11, v12, v13, v14, v15, v16);
  swift_release(*(_QWORD *)(v9 + 8));
  v17 = v0 + v4 + DetailsStackedChartView[8];

  swift_release(*(_QWORD *)(v17 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + DetailsStackedChartView[10] + 8));
  v18 = v0 + v4 + DetailsStackedChartView[11];
  v19 = type metadata accessor for DayIndex(0);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
  v20(v18, v19);
  v21 = sub_100047110(&qword_100834260);
  swift_release(*(_QWORD *)(v18 + *(int *)(v21 + 28)));
  swift_release(*(_QWORD *)(v0 + v4 + DetailsStackedChartView[12] + 8));
  v22 = v0 + v4 + DetailsStackedChartView[13];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v22, v23, v24, v25, v26, v27, v28, v29);
  swift_release(*(_QWORD *)(v22 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + DetailsStackedChartView[14] + 8));

  v20(v0 + v4 + DetailsStackedChartView[16], v19);
  sub_10010C5EC(*(id *)(v6 + DetailsStackedChartView[17]), *(_BYTE *)(v6 + DetailsStackedChartView[17] + 8));
  v30 = (_QWORD *)(v0 + v4 + DetailsStackedChartView[18]);
  v31 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    swift_release(*v30);
  }
  v33 = (_QWORD *)(v6 + DetailsStackedChartView[19]);
  v34 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v33, v35);
  }
  else
  {
    swift_release(*v33);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100460100()
{
  return sub_100460114(type metadata accessor for LoadDetailsStackedChartView, (uint64_t (*)(uint64_t))sub_10045B0DC);
}

uint64_t sub_100460114(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_100460158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8) + 80);
  return sub_10045B224(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1004601A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_100047110(&qword_100834AB8);
  v1 = sub_100007050(&qword_100834AC0);
  v2 = sub_100007050(&qword_100820FE0);
  v8 = sub_100007050(&qword_100834AC8);
  v9 = sub_100462BBC();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationBarTitle(_:displayMode:)>>, 1);
  v4 = sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v8 = v1;
  v9 = v2;
  v10 = OpaqueTypeConformance2;
  v11 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>, 1);
  return NavigationView.init(content:)(sub_100462BB4, &v7, v0, v5);
}

uint64_t sub_100460290@<X0>(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t KeyPath;
  double v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  uint64_t v88;
  char v89;
  CHWorkoutDetailHeartRateTableViewCell *v90;
  uint64_t v91;
  char v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  char v94;
  uint64_t v95;
  uint64_t v96;

  v82 = a3;
  v80 = a1;
  v81 = a2;
  v83 = a4;
  v71 = type metadata accessor for DynamicTypeSize(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100047110(&qword_1008349B0);
  v74 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v67 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100047110(&qword_1008349B8);
  v77 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v68 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100047110(&qword_1008349C0);
  __chkstk_darwin(v76);
  v73 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100047110(&qword_1008349C8);
  __chkstk_darwin(v78);
  v75 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static VerticalAlignment.center.getter(v9);
  sub_1004607B8(0x6F4D206E7261654CLL, 0xEA00000000006572, 0xD00000000000001ALL, 0x800000010069F5A0, (uint64_t)&v84);
  v12 = v84;
  v11 = v85;
  v13 = v86;
  v15 = v87;
  v14 = v88;
  v66 = v87;
  v16 = v89;
  v17 = v90;
  v65 = v90;
  v19 = static Font.subheadline.getter(v18);
  KeyPath = swift_getKeyPath(&unk_10063D8D0);
  v84 = v10;
  v85 = 0;
  v86 = 1;
  v87 = (CHWorkoutDetailHeartRateTableViewCell *)v12;
  v88 = v11;
  v89 = v13;
  v90 = v15;
  v91 = v14;
  v92 = v16;
  v93 = v17;
  v94 = 0;
  v95 = KeyPath;
  v96 = v19;
  v21 = static Font.Weight.semibold.getter(KeyPath);
  v22 = sub_100047110(&qword_1008349D0);
  v23 = sub_10046207C();
  v24 = v67;
  View.fontWeight(_:)(*(_QWORD *)&v21, 0, v22, v23);
  sub_1000E4458(v12, v11, v13);
  swift_release(v19);
  swift_release(KeyPath);
  swift_release(v65);
  swift_bridgeObjectRelease(v66, v25, v26, v27, v28, v29, v30, v31);
  v32 = v70;
  v33 = v69;
  v34 = v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, enum case for DynamicTypeSize.large(_:), v71);
  v84 = v22;
  v85 = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v84, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v36 = v68;
  v37 = v72;
  View.dynamicTypeSize(_:)(v33, v72, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v24, v37);
  v38 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v39 = Color.init(_:)(v38);
  v40 = swift_getKeyPath(&unk_10063D930);
  v41 = v77;
  v42 = (uint64_t)v73;
  v43 = v36;
  v44 = v36;
  v45 = v79;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v73, v43, v79);
  v46 = (uint64_t *)(v42 + *(int *)(v76 + 36));
  *v46 = v40;
  v46[1] = v39;
  v47 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v44, v45);
  LOBYTE(v39) = static Edge.Set.vertical.getter(v47);
  v48 = EdgeInsets.init(_all:)(6.0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v55 = v75;
  sub_100021CC0(v42, v75, &qword_1008349C0);
  v56 = v78;
  v57 = v55 + *(int *)(v78 + 36);
  *(_BYTE *)v57 = v39;
  *(double *)(v57 + 8) = v48;
  *(_QWORD *)(v57 + 16) = v50;
  *(_QWORD *)(v57 + 24) = v52;
  *(_QWORD *)(v57 + 32) = v54;
  *(_BYTE *)(v57 + 40) = 0;
  sub_10001BE90(v42, &qword_1008349C0);
  v58 = swift_allocObject(&unk_1007A0350, 33, 7);
  v59 = v80;
  v60 = v81;
  *(_QWORD *)(v58 + 16) = v80;
  *(_QWORD *)(v58 + 24) = v60;
  LOBYTE(v40) = v82 & 1;
  *(_BYTE *)(v58 + 32) = v82 & 1;
  v61 = v59;
  sub_10010C5D0(v60, v40);
  v62 = sub_1000E0A18(&qword_100834A00, &qword_1008349C8, (void (*)(void))sub_1004621D8);
  View.onTapGesture(count:perform:)(1, sub_1004621CC, v58, v56, v62);
  swift_release(v58);
  return sub_10001BE90(v55, &qword_1008349C8);
}

void sub_1004607B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  char v14;
  char v15;
  uint64_t v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v8 = LocalizedStringKey.init(stringLiteral:)(a1, a2);
  v9 = Text.init(_:tableName:bundle:comment:)(v8);
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v16 = Image.init(systemName:)(a3, a4);
  *(_QWORD *)a5 = v9;
  *(_QWORD *)(a5 + 8) = v11;
  *(_BYTE *)(a5 + 16) = v15;
  *(_QWORD *)(a5 + 24) = v13;
  *(_QWORD *)(a5 + 32) = 0;
  *(_BYTE *)(a5 + 40) = 1;
  *(_QWORD *)(a5 + 48) = v16;
  sub_1000E439C(v9, v11, v15);
  swift_bridgeObjectRetain(v13);
  sub_1000E4458(v9, v11, v15);
  swift_bridgeObjectRelease(v13, v17, v18, v19, v20, v21, v22, v23);
}

void sub_100460884(uint64_t a1, void *a2, char a3, __n128 a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;

  v7 = type metadata accessor for OvernightMetricsViewModel(0, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EffortUtilities.OvernightVitalsState(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = a3 & 1;
    sub_10010C5D0(a2, v15);
    v16 = sub_1003F70B8(a2, v15);
    sub_10010C5EC(a2, v15);
    v17 = sub_100171BD4();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    v18 = swift_release(v17);
    OvernightMetricsViewModel.overnightVitalsState.getter(v18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1003BA0BC((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1004609C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100460290(*(void **)v1, *(void **)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_1004609D8()
{
  type metadata accessor for LoadDetailsStackedChartView(0);
  return sub_10045AEC8();
}

uint64_t sub_100460A14(uint64_t a1, uint64_t a2)
{
  return sub_100460A30(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10045B2B8);
}

uint64_t sub_100460A24(uint64_t a1, uint64_t a2)
{
  return sub_100460A30(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10045B444);
}

uint64_t sub_100460A30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8) + 80);
  return a3(a1, a2, v3 + ((v6 + 16) & ~v6));
}

uint64_t sub_100460A8C()
{
  uint64_t v0;

  return sub_10045B714(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100460A94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10045B844(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100460A9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834410;
  if (!qword_100834410)
  {
    v1 = sub_100007050(&qword_100834408);
    sub_100460B20();
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834410);
  }
  return result;
}

unint64_t sub_100460B20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834418;
  if (!qword_100834418)
  {
    v1 = sub_100007050(&qword_100834420);
    sub_100028384(&qword_100834428, &qword_100834430, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100028384(&qword_100834438, &qword_10082CC18, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834418);
  }
  return result;
}

uint64_t sub_100460BC0()
{
  return sub_100460114(type metadata accessor for LoadDetailsStackedChartView, (uint64_t (*)(uint64_t))sub_10045BAF4);
}

void sub_100460BEC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_10045C940(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100460C0C(id *a1)
{
  uint64_t v1;

  return sub_10045CCC0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

CHWorkoutDetailHeartRateTableViewCell *sub_100460C28(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  CHWorkoutDetailHeartRateTableViewCell *result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  void (*v20)(char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  char v34;
  void (*v35)(char *, char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char v44;
  const char *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  _QWORD v52[2];
  CHWorkoutDetailHeartRateTableViewCell *v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;

  v5 = type metadata accessor for SleepingSampleDataType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v59 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v65 = (char *)v52 - v9;
  v12 = __chkstk_darwin(v10);
  v13 = (char *)v52 - v11;
  result = &_swiftEmptyArrayStorage;
  v67 = &_swiftEmptyArrayStorage;
  v61 = *(_QWORD *)(a1 + 16);
  if (!v61)
    return result;
  v52[1] = v2;
  v15 = 0;
  v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = *(_QWORD *)(v6 + 72);
  v60 = a1 + v16;
  v18 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v57 = v6;
  v58 = (char *)a2 + v16;
  v55 = (char *)a2 + v16 + v17;
  v56 = v16;
  v66 = v17;
  v53 = a2;
  v54 = (char *)a2 + 2 * v17 + v16;
  v19 = v65;
  v62 = (char *)v52 - v11;
  v64 = v18;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v18)(v13, v60, v5, v12);
  while (1)
  {
    v22 = *(_QWORD *)a2->cellPadding;
    if (!v22)
    {
      v20 = *(void (**)(char *, uint64_t))(v6 + 8);
LABEL_4:
      v20(v13, v5);
      goto LABEL_5;
    }
    v18(v19, v58, v5);
    v23 = sub_1000083D8(&qword_100834458, (uint64_t (*)(uint64_t))&type metadata accessor for SleepingSampleDataType, (uint64_t)&protocol conformance descriptor for SleepingSampleDataType);
    swift_bridgeObjectRetain(a2);
    v63 = v23;
    v24 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v13, v5, v23);
    v19 = v65;
    v25 = v24;
    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v65, v5);
    if ((v25 & 1) == 0)
    {
      if (v22 == 1)
        goto LABEL_18;
      v64(v19, v55, v5);
      v33 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v13, v5, v63);
      v19 = v65;
      v34 = v33;
      v20(v65, v5);
      if ((v34 & 1) == 0)
        break;
    }
    swift_bridgeObjectRelease(a2, v26, v27, v28, v29, v30, v31, v32);
LABEL_12:
    v35 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v35(v59, v13, v5);
    v36 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0)
    {
      sub_100121740(0, *(_QWORD *)v36->cellPadding + 1, 1);
      v19 = v65;
      v36 = v67;
    }
    v38 = *(_QWORD *)v36->cellPadding;
    v37 = *(_QWORD *)v36->cellInset;
    if (v38 >= v37 >> 1)
    {
      sub_100121740(v37 > 1, v38 + 1, 1);
      v19 = v65;
      v36 = v67;
    }
    *(_QWORD *)v36->cellPadding = v38 + 1;
    v35((char *)v36 + v56 + v38 * v66, v59, v5);
    v67 = v36;
    v6 = v57;
    v13 = v62;
    v18 = v64;
LABEL_5:
    if (++v15 == v61)
      return v67;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v18)(v13, v60 + v66 * v15, v5, v21);
  }
  if (v22 == 2)
  {
LABEL_18:
    swift_bridgeObjectRelease(a2, v26, v27, v28, v29, v30, v31, v32);
LABEL_19:
    v18 = v64;
    goto LABEL_4;
  }
  v39 = v54;
  v40 = 2;
  while (1)
  {
    result = (CHWorkoutDetailHeartRateTableViewCell *)((uint64_t (*)(char *, char *, uint64_t))v64)(v19, v39, v5);
    v41 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    v42 = v13;
    v43 = v19;
    v44 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v42, v5, v63);
    v20(v43, v5);
    if ((v44 & 1) != 0)
    {
      a2 = v53;
      swift_bridgeObjectRelease(v53, v45, v46, v47, v48, v49, v50, v51);
      v6 = v57;
      v19 = v65;
      v13 = v62;
      goto LABEL_12;
    }
    ++v40;
    v19 = v65;
    v39 += v66;
    v13 = v62;
    if (v41 == v22)
    {
      a2 = v53;
      swift_bridgeObjectRelease(v53, v45, v46, v47, v48, v49, v50, v51);
      v6 = v57;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100460FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004559F0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100460FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834500;
  if (!qword_100834500)
  {
    v1 = sub_100007050(&qword_1008344F8);
    sub_1000E0A18(&qword_100834508, &qword_100834510, (void (*)(void))sub_100461078);
    sub_100028384(&qword_100834548, &qword_100834550, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834500);
  }
  return result;
}

uint64_t sub_100461078()
{
  return sub_1000E0A18(&qword_100834518, &qword_100834520, (void (*)(void))sub_10046109C);
}

unint64_t sub_10046109C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834528;
  if (!qword_100834528)
  {
    v1 = sub_100007050(&qword_100834530);
    sub_100028384(&qword_100834538, &qword_100834540, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834528);
  }
  return result;
}

uint64_t sub_100461120()
{
  return SleepingSampleViewModel.dataType.getter();
}

uint64_t sub_100461140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457C3C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for SleepingSampleDataType, (uint64_t (*)(char *))&SleepingSampleViewModel.dataType.setter);
}

uint64_t sub_100461168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8) + 80);
  return sub_100457CB8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1004611C0()
{
  return sub_100460114(type metadata accessor for LoadDetailsStackedChartView, (uint64_t (*)(uint64_t))sub_1004577B0);
}

double sub_1004611D4@<D0>(uint64_t a1@<X8>)
{
  return sub_100457990(a1);
}

unint64_t sub_1004611DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008345F0;
  if (!qword_1008345F0)
  {
    v1 = sub_100007050(&qword_1008345E8);
    sub_1000F0610((unint64_t *)&qword_10082C628, &qword_10082C630, (void (*)(void))sub_1002B35FC, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008345F0);
  }
  return result;
}

_QWORD *sub_100461280(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_1004612A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004C03BC(a1, a2);
}

unint64_t sub_1004612C0()
{
  unint64_t result;

  result = qword_1008346B8;
  if (!qword_1008346B8)
  {
    result = swift_getWitnessTable(&unk_10062A780, &type metadata for SleepingSampleMetricChartView);
    atomic_store(result, (unint64_t *)&qword_1008346B8);
  }
  return result;
}

unint64_t sub_100461304()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1008346D0;
  if (!qword_1008346D0)
  {
    v1 = sub_100007050(&qword_1008346B0);
    v2[0] = &type metadata for SleepingSampleMetricChartView;
    v2[1] = sub_1004612C0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.chartXAxis(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008346D0);
  }
  return result;
}

uint64_t sub_100461394(uint64_t a1)
{
  return sub_1004613B0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10045BBC8);
}

uint64_t sub_1004613A4(uint64_t a1)
{
  return sub_1004613B0(a1, sub_10045C634);
}

uint64_t sub_1004613B0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_100461400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8) + 80);
  return sub_10045C8D8(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_100461444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834770;
  if (!qword_100834770)
  {
    v1 = sub_100007050(&qword_100834768);
    sub_1004614C8();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834770);
  }
  return result;
}

unint64_t sub_1004614C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834778;
  if (!qword_100834778)
  {
    v1 = sub_100007050(&qword_100834780);
    sub_100028384(&qword_100834788, &qword_100834790, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834778);
  }
  return result;
}

uint64_t sub_100461564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 136);
  v8 = *(_QWORD *)(a1 + 144);
  sub_100461600(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  sub_100182728(v2, v3, v4, v5);
  swift_release(v7);
  swift_release(v6);
  swift_release(v8);
  return a1;
}

double sub_100461600(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double result;

  sub_1000E4458(a1, a2, a3 & 1);
  swift_bridgeObjectRelease(a4, v14, v15, v16, v17, v18, v19, v20);
  if ((a9 & 1) == 0)
    return sub_100182728(a5, a6, a7, a8);
  return result;
}

double sub_100461678(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  double result;

  sub_1000E439C(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  if ((a9 & 1) == 0)
    return sub_100182758(a5, a6, a7, a8);
  return result;
}

uint64_t sub_1004616F0()
{
  uint64_t v0;

  return sub_100454DF8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004616F8()
{
  uint64_t v0;

  return sub_100455450(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100461700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100455580(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100461708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834878;
  if (!qword_100834878)
  {
    v1 = sub_100007050(&qword_100834868);
    sub_100028384(&qword_100826030, &qword_100826038, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834878);
  }
  return result;
}

unint64_t sub_10046178C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834880;
  if (!qword_100834880)
  {
    v1 = sub_100007050(&qword_100834870);
    sub_100461810();
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834880);
  }
  return result;
}

unint64_t sub_100461810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834888;
  if (!qword_100834888)
  {
    v1 = sub_100007050(&qword_100834890);
    sub_1001D2DD0();
    sub_100028384(&qword_100834898, &qword_10082CBF0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834888);
  }
  return result;
}

uint64_t sub_1004618A4()
{
  uint64_t v0;

  return sub_100454F48(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1004618AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008348B8;
  if (!qword_1008348B8)
  {
    v1 = sub_100007050(&qword_1008348C0);
    sub_100461930();
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008348B8);
  }
  return result;
}

unint64_t sub_100461930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008348C8;
  if (!qword_1008348C8)
  {
    v1 = sub_100007050(&qword_1008348D0);
    sub_1004619B4();
    sub_100028384(&qword_1008348F8, &qword_100834900, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008348C8);
  }
  return result;
}

unint64_t sub_1004619B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008348D8;
  if (!qword_1008348D8)
  {
    v1 = sub_100007050(&qword_1008348E0);
    sub_100028384(&qword_1008348E8, &qword_1008348F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008348D8);
  }
  return result;
}

uint64_t sub_100461A38()
{
  return TrainingLoadViewModel.dataType.getter();
}

unint64_t sub_100461A58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834980;
  if (!qword_100834980)
  {
    v1 = sub_100007050(&qword_100834968);
    sub_1000083D8(&qword_100834988, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadChart, (uint64_t)&protocol conformance descriptor for TrainingLoadChart);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834980);
  }
  return result;
}

unint64_t sub_100461ADC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834990;
  if (!qword_100834990)
  {
    v1 = sub_100007050(&qword_100834948);
    sub_100028384(&qword_1008346C0, &qword_100834680, (uint64_t)&protocol conformance descriptor for SimultaneousGesture<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100834990);
  }
  return result;
}

void destroy for LearnMoreButton(uint64_t a1)
{

  sub_10010C5EC(*(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10FitnessApp15LearnMoreButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 16);
  v6 = v3;
  sub_10010C5D0(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LearnMoreButton(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  char v9;

  v2 = a2;
  v4 = *(void **)a1;
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  v6 = v5;

  v7 = v2[1];
  LOBYTE(v2) = *((_BYTE *)v2 + 16);
  sub_10010C5D0(v7, (char)v2);
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = (_BYTE)v2;
  sub_10010C5EC(v8, v9);
  return a1;
}

uint64_t assignWithTake for LearnMoreButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  char v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10010C5EC(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for LearnMoreButton(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LearnMoreButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LearnMoreButton()
{
  return &type metadata for LearnMoreButton;
}

void destroy for ReorderOvernightMetricsButtonView(uint64_t a1)
{
  SEL v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 40), v2, v3, v4, v5, v6, v7, v8);
  sub_10010C5EC(*(id *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for ReorderOvernightMetricsButtonView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v5 = a2[3];
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[5];
  v8 = (void *)a2[6];
  *(_QWORD *)(a1 + 40) = v7;
  v9 = *((_BYTE *)a2 + 56);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v7);
  sub_10010C5D0(v8, v9);
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  return a1;
}

uint64_t *assignWithCopy for ReorderOvernightMetricsButtonView(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  char v23;

  v2 = a2;
  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = v2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)v2 + 16);
  v8 = a1[3];
  v9 = v2[3];
  a1[3] = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = v2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = v2[5];
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)a1[5];
  a1[5] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = (void *)v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_10010C5D0(v21, (char)v2);
  v22 = (void *)a1[6];
  v23 = *((_BYTE *)a1 + 56);
  a1[6] = (uint64_t)v21;
  *((_BYTE *)a1 + 56) = (_BYTE)v2;
  sub_10010C5EC(v22, v23);
  return a1;
}

uint64_t assignWithTake for ReorderOvernightMetricsButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  char v16;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
  v14 = *(_BYTE *)(a2 + 56);
  v15 = *(void **)(a1 + 48);
  v16 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v14;
  sub_10010C5EC(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReorderOvernightMetricsButtonView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReorderOvernightMetricsButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReorderOvernightMetricsButtonView()
{
  return &type metadata for ReorderOvernightMetricsButtonView;
}

uint64_t sub_100462030()
{
  return sub_100028384(&qword_1008349A0, &qword_1008349A8, (uint64_t)&protocol conformance descriptor for NavigationView<A>);
}

uint64_t sub_10046205C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B790C, 1);
}

uint64_t sub_10046206C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B78E4, 1);
}

unint64_t sub_10046207C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008349D8;
  if (!qword_1008349D8)
  {
    v1 = sub_100007050(&qword_1008349D0);
    sub_100462100();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008349D8);
  }
  return result;
}

unint64_t sub_100462100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008349E0;
  if (!qword_1008349E0)
  {
    v1 = sub_100007050(&qword_1008349E8);
    sub_100028384(&qword_1008349F0, &qword_1008349F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008349E0);
  }
  return result;
}

uint64_t sub_10046219C()
{
  uint64_t v0;

  sub_10010C5EC(*(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject(v0, 33, 7);
}

void sub_1004621CC(__n128 a1)
{
  uint64_t v1;

  sub_100460884(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

unint64_t sub_1004621D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_100834A08;
  if (!qword_100834A08)
  {
    v1 = sub_100007050(&qword_1008349C0);
    v2 = sub_100007050(&qword_1008349B0);
    v4 = sub_100007050(&qword_1008349D0);
    v5 = sub_10046207C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834A08);
  }
  return result;
}

double sub_1004622B8()
{
  uint64_t v0;

  return sub_10045DB54((uint64_t *)(v0 + 16));
}

uint64_t *sub_1004622C0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[4];
  v5 = a1[5];
  v6 = (void *)a1[6];
  v7 = *((_BYTE *)a1 + 56);
  swift_retain(a1[3]);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v2);
  swift_retain(v3);
  sub_10010C5D0(v6, v7);
  return a1;
}

void sub_100462340()
{
  sub_10045DBFC();
}

uint64_t sub_10046234C()
{
  uint64_t v0;
  SEL v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 56), v1, v2, v3, v4, v5, v6, v7);
  sub_10010C5EC(*(id *)(v0 + 64), *(_BYTE *)(v0 + 72));
  return swift_deallocObject(v0, 73, 7);
}

double sub_10046239C@<D0>(_QWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_10045DC58(a1).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for OvernightMetricsReorderingView(uint64_t a1)
{
  return sub_100024334(a1, qword_100834A80, (uint64_t)&nominal type descriptor for OvernightMetricsReorderingView);
}

uint64_t *sub_1004623B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = *v16;
    v18 = v16[1];
    *v15 = *v16;
    v15[1] = v18;
    v19 = v16[2];
    v15[2] = v19;
    swift_retain(v17);
    swift_retain(v18);
    swift_bridgeObjectRetain(v19);
  }
  return a1;
}

void sub_1004624B4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v4 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + *(int *)(a2 + 20);
  swift_release(*(_QWORD *)v6);
  swift_release(*((_QWORD *)v6 + 1));
  swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)v6 + 2), v7, v8, v9, v10, v11, v12, v13);
}

uint64_t *sub_100462538(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  *v13 = *v14;
  v13[1] = v16;
  v17 = v14[2];
  v13[2] = v17;
  swift_retain(v15);
  swift_retain(v16);
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t *sub_100462608(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, (uint64_t *)&unk_100832400);
    v6 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = *(uint64_t *)((char *)a1 + v12);
  v16 = *v14;
  *(uint64_t *)((char *)a1 + v12) = *v14;
  swift_retain(v16);
  swift_release(v15);
  v17 = v14[1];
  v18 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = v14[2];
  v20 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v13 + 2);
  *((_QWORD *)v13 + 2) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
  return a1;
}

char *sub_100462714(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v6 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  return a1;
}

char *sub_1004627CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, (uint64_t *)&unk_100832400);
    v6 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)v10;
  swift_release(v11);
  v12 = *((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release(v12);
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v9 + 2);
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t sub_1004628BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004628C8);
}

uint64_t sub_1004628C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_100820E68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10046294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100462958);
}

uint64_t sub_100462958(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_100820E68);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_1004629D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1000087BC(319, (unint64_t *)&qword_100820ED8, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10063DAC0;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_100462A60()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_1008349C8);
  v1[1] = sub_1000E0A18(&qword_100834A00, &qword_1008349C8, (void (*)(void))sub_1004621D8);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

uint64_t sub_100462ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100007050(&qword_100834A10);
  v1 = type metadata accessor for OvernightMetricsReorderingView(255);
  v5 = sub_100007050(&qword_1008349C8);
  v6 = sub_1000E0A18(&qword_100834A00, &qword_1008349C8, (void (*)(void))sub_1004621D8);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v3 = sub_1000083D8(&qword_100834A18, type metadata accessor for OvernightMetricsReorderingView, (uint64_t)&unk_10063DAD8);
  v5 = v0;
  v6 = v1;
  v7 = OpaqueTypeConformance2;
  v8 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
}

uint64_t sub_100462BA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7934, 1);
}

uint64_t sub_100462BB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10045DD38(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100462BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834AD0;
  if (!qword_100834AD0)
  {
    v1 = sub_100007050(&qword_100834AC8);
    sub_100028384(&qword_100834AD8, &qword_100834AE0, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_100028384(&qword_100834AE8, &qword_100834AF0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834AD0);
  }
  return result;
}

uint64_t sub_100462C58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10045E2A4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100462C60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834B08;
  if (!qword_100834B08)
  {
    v1 = sub_100007050(&qword_100834B00);
    sub_100462CE4();
    sub_100028384(&qword_100834B20, &qword_100834B28, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834B08);
  }
  return result;
}

unint64_t sub_100462CE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100834B10;
  if (!qword_100834B10)
  {
    v1 = sub_100007050(&qword_100834B18);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100834B10);
  }
  return result;
}

uint64_t sub_100462D78()
{
  return sub_100460114(type metadata accessor for OvernightMetricsReorderingView, (uint64_t (*)(uint64_t))sub_100310E60);
}

uint64_t sub_100462D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v1 = type metadata accessor for OvernightMetricsReorderingView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (char *)v6 + *(int *)(v1 + 20);
  swift_release(*(_QWORD *)v9);
  swift_release(*((_QWORD *)v9 + 1));
  swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)v9 + 2), v10, v11, v12, v13, v14, v15, v16);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_100462E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OvernightMetricsReorderingView(0) - 8) + 80);
  return sub_10045E60C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_100462EA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100462ECC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_10048BD9C(a1, a2, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16));
}

uint64_t sub_100462ED4()
{
  return sub_100028384(&qword_100834B50, &qword_100834B58, (uint64_t)&protocol conformance descriptor for NavigationView<A>);
}

void *sub_100462F00(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v11;
  void *v12;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = sub_1004395DC((uint64_t)a1);
      if ((v8 & 1) != 0)
      {
        v6 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v7);
        v9 = v6;
        return v6;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = __CocoaDictionary.lookup(_:)();

  if (!v4)
    return 0;
  v11 = v4;
  v5 = sub_10001E724(0, &qword_100834BA0, _HKFitnessFriendActivitySnapshot_ptr);
  swift_unknownObjectRetain(v4);
  swift_dynamicCast(&v12, &v11, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
  v6 = v12;
  swift_unknownObjectRelease(v4);
  return v6;
}

id sub_100462FD4(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  void *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v3 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", a1);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend);
  result = objc_msgSend(v4, "snapshots");
  if (result)
  {
    v6 = result;
    v7 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    v8 = sub_10001E724(0, &qword_100834BA0, _HKFitnessFriendActivitySnapshot_ptr);
    v9 = sub_1004650F0();
    v10 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, v7, v8, v9);

    v11 = v3;
    v12 = sub_100462F00(v11, (uint64_t)v10);

    swift_bridgeObjectRelease(v10, v13, v14, v15, v16, v17, v18, v19);
    if (v12)
    {
      v20 = objc_msgSend(v12, "activitySummary");
      if (v20)
      {
        if (objc_msgSend(v4, "isMe"))
          v21 = objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_pauseRingsCoordinator), "isPausedForActivitySummaryCacheIndex:", a1);
        else
          v21 = 0;
        objc_msgSend(v20, "setDeprecatedPauseForInternalSwiftClient:", v21);
      }

      v11 = v12;
    }
    else
    {
      v20 = 0;
    }

    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100463190()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend), "snapshots");
  if (result)
  {
    v2 = result;
    v3 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    v4 = sub_10001E724(0, &qword_100834BA0, _HKFitnessFriendActivitySnapshot_ptr);
    v5 = sub_1004650F0();
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4, v5);

    if ((v6 & 0xC000000000000001) != 0)
    {
      if (v6 < 0)
        v14 = v6;
      else
        v14 = v6 & 0xFFFFFFFFFFFFFF8;
      v15 = __CocoaDictionary.count.getter(v14);
    }
    else
    {
      v15 = *(_QWORD *)(v6 + 16);
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v6, v7, v8, v9, v10, v11, v12, v13);
    return (id)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100463294()
{
  sub_1004632DC((uint64_t (*)(_QWORD *))sub_1004639F8);
}

void sub_1004632D0()
{
  sub_1004632DC((uint64_t (*)(_QWORD *))sub_100464168);
}

void sub_1004632DC(uint64_t (*a1)(_QWORD *))
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend), "snapshots");
  if (!v3)
  {
LABEL_14:
    __break(1u);
    swift_release(v30);
    __break(1u);
    return;
  }
  v4 = v3;
  v5 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  v6 = sub_10001E724(0, &qword_100834BA0, _HKFitnessFriendActivitySnapshot_ptr);
  v7 = sub_1004650F0();
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6, v7);

  swift_bridgeObjectRetain(v8);
  v10 = sub_100296734(v9);
  swift_bridgeObjectRelease(v8, v11, v12, v13, v14, v15, v16, v17);
  v30 = (uint64_t)v10;
  sub_10046397C(&v30, a1);
  swift_bridgeObjectRelease(v8, v18, v19, v20, v21, v22, v23, v24);
  v25 = v30;
  if (v30 < 0 || (v30 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v30);
    v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_release(v25);
    if (v29)
      goto LABEL_5;
  }
  else if (*(_QWORD *)(v30 + 16))
  {
LABEL_5:
    if ((v25 & 0xC000000000000001) != 0)
    {
      v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
      goto LABEL_8;
    }
    if (*(_QWORD *)(v25 + 16))
    {
      v26 = *(id *)(v25 + 32);
LABEL_8:
      v27 = v26;
      objc_msgSend(v26, "longLongValue", swift_release(v25).n128_f64[0]);

      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_release(v25);
}

uint64_t sub_100463494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = type metadata accessor for DateComponents(0);
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - v15;
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v49 - v19;
  v21 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend), "currentSnapshot", v18);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "snapshotIndex");

    v24 = (id)_HKStartDateForSnapshotIndex(v23);
    if (v24)
    {
      v25 = v24;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v24);

      v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v26(v9, v16, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        v27 = ((uint64_t (*)(char *, char *, uint64_t))v26)(v20, v9, v10);
        goto LABEL_8;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    v21 = (id)sub_10018DFE8((uint64_t)v9);
  }
  v27 = Date.init()(v21);
LABEL_8:
  static Calendar.current.getter(v27);
  Date.startOfFitnessWeek(for:)(v6);
  v28 = sub_100047110((uint64_t *)&unk_100828720);
  v29 = type metadata accessor for Calendar.Component(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject(v28, v32 + *(_QWORD *)(v30 + 72), v31 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_100622F90;
  v34 = v33 + v32;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 104))(v34, enum case for Calendar.Component.day(_:), v29);
  v35 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v33);
  swift_setDeallocating(v33);
  swift_arrayDestroy(v34, 1, v29);
  swift_deallocClassInstance(v33, 32, 7);
  Calendar.dateComponents(_:from:to:)(v35, v13, v20);
  swift_bridgeObjectRelease(v35, v36, v37, v38, v39, v40, v41, v42);
  v44 = DateComponents.day.getter(v43);
  LOBYTE(v29) = v45;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v3, v52);
  v46 = *(void (**)(char *, uint64_t))(v11 + 8);
  v46(v13, v10);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v50);
  v46(v20, v10);
  if ((v29 & 1) != 0)
    v47 = 0;
  else
    v47 = v44;
  result = 6 - v47;
  if (__OFSUB__(6, v47))
    __break(1u);
  return result;
}

id sub_1004638F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailActivitySummaryProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingFriendDetailActivitySummaryProvider()
{
  return objc_opt_self(_TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider);
}

uint64_t sub_10046397C(uint64_t *a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_100149F48(v4);
    *a1 = v4;
  }
  v6 = *(_QWORD *)(v4 + 16);
  v9[0] = v4 + 32;
  v9[1] = v6;
  v7 = a2(v9);
  return specialized ContiguousArray._endMutation()(v7);
}

void sub_1004639F8(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t *v31;
  Swift::Int v32;
  Swift::Int v33;
  uint64_t *v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  void *v38;
  Swift::Int v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  unint64_t v47;
  unint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  Class *v50;
  unint64_t v51;
  uint64_t v52;
  Class v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  Class *v64;
  Class v65;
  Class v66;
  uint64_t v67;
  uint64_t v68;
  Class *v69;
  Class v70;
  Class v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  Class *v75;
  Class v76;
  Class v77;
  uint64_t v78;
  BOOL v79;
  Class isa;
  uint64_t v81;
  Class *v82;
  Class v83;
  Class v84;
  uint64_t v85;
  Class *v86;
  Class v87;
  Class v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  uint64_t *v93;
  uint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  objc_class *v103;
  objc_class *v104;
  Class *v105;
  unint64_t v106;
  uint64_t v107;
  SEL v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  CHWorkoutDetailHeartRateTableViewCell *v118;
  CHWorkoutDetailHeartRateTableViewCell *v119;
  Swift::Int v120;
  id v121;
  Swift::Int v122;
  Swift::Int v123;
  Swift::Int v124;
  Swift::Int v125;
  void **v126;
  uint64_t v127;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_1004648D8(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v12 = v3;
  else
    v12 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v120 = v4;
  v115 = a1;
  if (v3 < 2)
  {
    v16 = &_swiftEmptyArrayStorage;
    v127 = (uint64_t)&_swiftEmptyArrayStorage;
    v126 = (void **)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v19 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
LABEL_98:
      if (v19 >= 2)
      {
        v101 = *v115;
        do
        {
          v102 = v19 - 2;
          if (v19 < 2)
            goto LABEL_127;
          if (!v101)
            goto LABEL_139;
          v103 = (objc_class *)*((_QWORD *)&v16[1].super.super.super.super.isa + 2 * v102);
          v104 = *(objc_class **)&v16->cellInset[16 * v19];
          sub_100464AB8((id *)(v101 + 8 * (_QWORD)v103), (id *)(v101 + 8 * *(_QWORD *)&v16->cellPadding[16 * v19]), v101 + 8 * (_QWORD)v104, v126);
          if (v1)
            break;
          if ((uint64_t)v104 < (uint64_t)v103)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147754((uint64_t)v16);
          if (v102 >= *(_QWORD *)v16->cellPadding)
            goto LABEL_129;
          v105 = &v16[1].super.super.super.super.isa + 2 * v102;
          *v105 = v103;
          v105[1] = v104;
          v106 = *(_QWORD *)v16->cellPadding;
          if (v19 > v106)
            goto LABEL_130;
          memmove(&v16->cellPadding[16 * v19], (char *)&v16[1] + 16 * v19, 16 * (v106 - v19));
          *(_QWORD *)v16->cellPadding = v106 - 1;
          v19 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease(v16, v5, v6, v7, v8, v9, v10, v11);
      *(_QWORD *)((v127 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v107);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v127, v108, v109, v110, v111, v112, v113, v114);
      return;
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13, v14);
    *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) = v13;
    v126 = (void **)((v15 & 0xFFFFFFFFFFFFFF8) + 32);
    v127 = v15;
  }
  v17 = 0;
  v18 = *a1;
  v116 = *a1 - 8;
  v117 = *a1 + 16;
  v16 = &_swiftEmptyArrayStorage;
  v123 = v3;
  while (1)
  {
    v20 = v17++;
    v124 = v20;
    if (v17 < v3)
    {
      v21 = *(void **)(v18 + 8 * v20);
      v22 = *(id *)(v18 + 8 * v17);
      v23 = v21;
      v121 = objc_msgSend(v22, "longLongValue");
      v24 = objc_msgSend(v23, "longLongValue");

      v3 = v123;
      v17 = v20 + 2;
      if (v20 + 2 < v123)
      {
        v118 = v16;
        v25 = (id *)(v117 + 8 * v20);
        while (1)
        {
          v26 = *(v25 - 1);
          v27 = *v25;
          v28 = v26;
          v29 = objc_msgSend(v27, "longLongValue");
          v30 = objc_msgSend(v28, "longLongValue");

          if ((uint64_t)v121 < (uint64_t)v24 == (uint64_t)v29 >= (uint64_t)v30)
            break;
          ++v17;
          ++v25;
          v3 = v123;
          if (v123 == v17)
          {
            v17 = v123;
            v16 = v118;
            goto LABEL_22;
          }
        }
        v16 = v118;
        v3 = v123;
LABEL_22:
        v20 = v124;
      }
      if ((uint64_t)v121 < (uint64_t)v24)
      {
        if (v17 < v20)
          goto LABEL_133;
        if (v20 < v17)
        {
          v31 = (uint64_t *)(v116 + 8 * v17);
          v32 = v17;
          v33 = v20;
          v34 = (uint64_t *)(v18 + 8 * v20);
          do
          {
            if (v33 != --v32)
            {
              if (!v18)
                goto LABEL_138;
              v35 = *v34;
              *v34 = *v31;
              *v31 = v35;
            }
            ++v33;
            --v31;
            ++v34;
          }
          while (v33 < v32);
        }
      }
    }
    if (v17 < v3)
    {
      if (__OFSUB__(v17, v20))
        goto LABEL_131;
      if (v17 - v20 < v120)
        break;
    }
LABEL_48:
    if (v17 < v20)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150(0, *(_QWORD *)v16->cellPadding + 1, 1, (char *)v16);
    v48 = *(_QWORD *)v16->cellPadding;
    v47 = *(_QWORD *)v16->cellInset;
    v19 = v48 + 1;
    if (v48 >= v47 >> 1)
      v16 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150((char *)(v47 > 1), v48 + 1, 1, (char *)v16);
    *(_QWORD *)v16->cellPadding = v19;
    v49 = v16 + 1;
    v50 = &v16[1].super.super.super.super.isa + 2 * v48;
    *v50 = (Class)v20;
    v50[1] = (Class)v17;
    if (v48)
    {
      v125 = v17;
      while (1)
      {
        v51 = v19 - 1;
        if (v19 >= 4)
        {
          v56 = (char *)v49 + 16 * v19;
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_115;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_116;
          v63 = v19 - 2;
          v64 = &v49[-1].super.super.super.super.isa + 2 * v19;
          v66 = *v64;
          v65 = v64[1];
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_118;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_121;
          if (v68 >= v59)
          {
            v86 = &v49->super.super.super.super.isa + 2 * v51;
            v88 = *v86;
            v87 = v86[1];
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_125;
            v79 = v54 < v89;
            goto LABEL_86;
          }
        }
        else
        {
          if (v19 != 3)
          {
            isa = v16[1].super.super.super.super.isa;
            v81 = *(_QWORD *)v16[1].heartRateController;
            v62 = __OFSUB__(v81, isa);
            v73 = v81 - (_QWORD)isa;
            v74 = v62;
            goto LABEL_80;
          }
          v53 = v16[1].super.super.super.super.isa;
          v52 = *(_QWORD *)v16[1].heartRateController;
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - (_QWORD)v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_117;
        v63 = v19 - 2;
        v69 = &v49[-1].super.super.super.super.isa + 2 * v19;
        v71 = *v69;
        v70 = v69[1];
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_120;
        v75 = &v49->super.super.super.super.isa + 2 * v51;
        v77 = *v75;
        v76 = v75[1];
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_123;
        if (__OFADD__(v73, v78))
          goto LABEL_124;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_86:
          if (v79)
            v51 = v63;
          goto LABEL_88;
        }
LABEL_80:
        if ((v74 & 1) != 0)
          goto LABEL_119;
        v82 = &v49->super.super.super.super.isa + 2 * v51;
        v84 = *v82;
        v83 = v82[1];
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_122;
        if (v85 < v73)
          goto LABEL_14;
LABEL_88:
        v90 = v51 - 1;
        if (v51 - 1 >= v19)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v91 = v18;
        if (!v18)
          goto LABEL_137;
        v92 = v16;
        v93 = (uint64_t *)v49 + 2 * v90;
        v94 = *v93;
        v95 = v49;
        v96 = v51;
        v97 = &v49->super.super.super.super.isa + 2 * v51;
        v98 = v97[1];
        v99 = v91;
        sub_100464AB8((id *)(v91 + 8 * *v93), (id *)(v91 + 8 * *v97), v91 + 8 * v98, v126);
        if (v1)
        {
          v16 = v92;
          goto LABEL_109;
        }
        if (v98 < v94)
          goto LABEL_112;
        if (v96 > *(_QWORD *)v92->cellPadding)
          goto LABEL_113;
        *v93 = v94;
        *(_QWORD *)&v95->heartRateController[16 * v90] = v98;
        v100 = *(_QWORD *)v92->cellPadding;
        if (v96 >= v100)
          goto LABEL_114;
        v16 = v92;
        v19 = v100 - 1;
        memmove(v97, v97 + 2, 16 * (v100 - 1 - v96));
        v49 = v95;
        *(_QWORD *)v92->cellPadding = v100 - 1;
        v18 = v99;
        v17 = v125;
        if (v100 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v3 = v123;
    if (v17 >= v123)
      goto LABEL_98;
  }
  if (__OFADD__(v20, v120))
    goto LABEL_134;
  if (v20 + v120 >= v3)
    v36 = v3;
  else
    v36 = v20 + v120;
  if (v36 >= v20)
  {
    if (v17 != v36)
    {
      v119 = v16;
      v37 = v116 + 8 * v17;
      v122 = v36;
      do
      {
        v38 = *(void **)(v18 + 8 * v17);
        v39 = v20;
        v40 = v37;
        do
        {
          v41 = *(void **)v40;
          v42 = v38;
          v43 = v41;
          v44 = objc_msgSend(v42, "longLongValue");
          v45 = objc_msgSend(v43, "longLongValue");

          if ((uint64_t)v44 >= (uint64_t)v45)
            break;
          if (!v18)
            goto LABEL_136;
          v46 = *(void **)v40;
          v38 = *(void **)(v40 + 8);
          *(_QWORD *)v40 = v38;
          *(_QWORD *)(v40 + 8) = v46;
          v40 -= 8;
          ++v39;
        }
        while (v17 != v39);
        ++v17;
        v37 += 8;
        v20 = v124;
      }
      while (v17 != v122);
      v17 = v122;
      v16 = v119;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100464168(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t *v31;
  Swift::Int v32;
  Swift::Int v33;
  uint64_t *v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  void *v38;
  Swift::Int v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  unint64_t v47;
  unint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  Class *v50;
  unint64_t v51;
  uint64_t v52;
  Class v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  Class *v64;
  Class v65;
  Class v66;
  uint64_t v67;
  uint64_t v68;
  Class *v69;
  Class v70;
  Class v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  Class *v75;
  Class v76;
  Class v77;
  uint64_t v78;
  BOOL v79;
  Class isa;
  uint64_t v81;
  Class *v82;
  Class v83;
  Class v84;
  uint64_t v85;
  Class *v86;
  Class v87;
  Class v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  uint64_t *v93;
  uint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  objc_class *v103;
  objc_class *v104;
  Class *v105;
  unint64_t v106;
  uint64_t v107;
  SEL v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  CHWorkoutDetailHeartRateTableViewCell *v118;
  CHWorkoutDetailHeartRateTableViewCell *v119;
  Swift::Int v120;
  id v121;
  Swift::Int v122;
  Swift::Int v123;
  Swift::Int v124;
  Swift::Int v125;
  void **v126;
  uint64_t v127;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_1004649C8(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v12 = v3;
  else
    v12 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v120 = v4;
  v115 = a1;
  if (v3 < 2)
  {
    v16 = &_swiftEmptyArrayStorage;
    v127 = (uint64_t)&_swiftEmptyArrayStorage;
    v126 = (void **)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v19 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
LABEL_98:
      if (v19 >= 2)
      {
        v101 = *v115;
        do
        {
          v102 = v19 - 2;
          if (v19 < 2)
            goto LABEL_127;
          if (!v101)
            goto LABEL_139;
          v103 = (objc_class *)*((_QWORD *)&v16[1].super.super.super.super.isa + 2 * v102);
          v104 = *(objc_class **)&v16->cellInset[16 * v19];
          sub_100464DD4((id *)(v101 + 8 * (_QWORD)v103), (id *)(v101 + 8 * *(_QWORD *)&v16->cellPadding[16 * v19]), v101 + 8 * (_QWORD)v104, v126);
          if (v1)
            break;
          if ((uint64_t)v104 < (uint64_t)v103)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147754((uint64_t)v16);
          if (v102 >= *(_QWORD *)v16->cellPadding)
            goto LABEL_129;
          v105 = &v16[1].super.super.super.super.isa + 2 * v102;
          *v105 = v103;
          v105[1] = v104;
          v106 = *(_QWORD *)v16->cellPadding;
          if (v19 > v106)
            goto LABEL_130;
          memmove(&v16->cellPadding[16 * v19], (char *)&v16[1] + 16 * v19, 16 * (v106 - v19));
          *(_QWORD *)v16->cellPadding = v106 - 1;
          v19 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease(v16, v5, v6, v7, v8, v9, v10, v11);
      *(_QWORD *)((v127 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v107);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v127, v108, v109, v110, v111, v112, v113, v114);
      return;
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13, v14);
    *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) = v13;
    v126 = (void **)((v15 & 0xFFFFFFFFFFFFFF8) + 32);
    v127 = v15;
  }
  v17 = 0;
  v18 = *a1;
  v116 = *a1 - 8;
  v117 = *a1 + 16;
  v16 = &_swiftEmptyArrayStorage;
  v123 = v3;
  while (1)
  {
    v20 = v17++;
    v124 = v20;
    if (v17 < v3)
    {
      v21 = *(void **)(v18 + 8 * v20);
      v22 = *(id *)(v18 + 8 * v17);
      v23 = v21;
      v121 = objc_msgSend(v22, "longLongValue");
      v24 = objc_msgSend(v23, "longLongValue");

      v3 = v123;
      v17 = v20 + 2;
      if (v20 + 2 < v123)
      {
        v118 = v16;
        v25 = (id *)(v117 + 8 * v20);
        while (1)
        {
          v26 = *(v25 - 1);
          v27 = *v25;
          v28 = v26;
          v29 = objc_msgSend(v27, "longLongValue");
          v30 = objc_msgSend(v28, "longLongValue");

          if ((uint64_t)v24 < (uint64_t)v121 == (uint64_t)v30 >= (uint64_t)v29)
            break;
          ++v17;
          ++v25;
          v3 = v123;
          if (v123 == v17)
          {
            v17 = v123;
            v16 = v118;
            goto LABEL_22;
          }
        }
        v16 = v118;
        v3 = v123;
LABEL_22:
        v20 = v124;
      }
      if ((uint64_t)v24 < (uint64_t)v121)
      {
        if (v17 < v20)
          goto LABEL_133;
        if (v20 < v17)
        {
          v31 = (uint64_t *)(v116 + 8 * v17);
          v32 = v17;
          v33 = v20;
          v34 = (uint64_t *)(v18 + 8 * v20);
          do
          {
            if (v33 != --v32)
            {
              if (!v18)
                goto LABEL_138;
              v35 = *v34;
              *v34 = *v31;
              *v31 = v35;
            }
            ++v33;
            --v31;
            ++v34;
          }
          while (v33 < v32);
        }
      }
    }
    if (v17 < v3)
    {
      if (__OFSUB__(v17, v20))
        goto LABEL_131;
      if (v17 - v20 < v120)
        break;
    }
LABEL_48:
    if (v17 < v20)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150(0, *(_QWORD *)v16->cellPadding + 1, 1, (char *)v16);
    v48 = *(_QWORD *)v16->cellPadding;
    v47 = *(_QWORD *)v16->cellInset;
    v19 = v48 + 1;
    if (v48 >= v47 >> 1)
      v16 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150((char *)(v47 > 1), v48 + 1, 1, (char *)v16);
    *(_QWORD *)v16->cellPadding = v19;
    v49 = v16 + 1;
    v50 = &v16[1].super.super.super.super.isa + 2 * v48;
    *v50 = (Class)v20;
    v50[1] = (Class)v17;
    if (v48)
    {
      v125 = v17;
      while (1)
      {
        v51 = v19 - 1;
        if (v19 >= 4)
        {
          v56 = (char *)v49 + 16 * v19;
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_115;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_116;
          v63 = v19 - 2;
          v64 = &v49[-1].super.super.super.super.isa + 2 * v19;
          v66 = *v64;
          v65 = v64[1];
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_118;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_121;
          if (v68 >= v59)
          {
            v86 = &v49->super.super.super.super.isa + 2 * v51;
            v88 = *v86;
            v87 = v86[1];
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_125;
            v79 = v54 < v89;
            goto LABEL_86;
          }
        }
        else
        {
          if (v19 != 3)
          {
            isa = v16[1].super.super.super.super.isa;
            v81 = *(_QWORD *)v16[1].heartRateController;
            v62 = __OFSUB__(v81, isa);
            v73 = v81 - (_QWORD)isa;
            v74 = v62;
            goto LABEL_80;
          }
          v53 = v16[1].super.super.super.super.isa;
          v52 = *(_QWORD *)v16[1].heartRateController;
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - (_QWORD)v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_117;
        v63 = v19 - 2;
        v69 = &v49[-1].super.super.super.super.isa + 2 * v19;
        v71 = *v69;
        v70 = v69[1];
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_120;
        v75 = &v49->super.super.super.super.isa + 2 * v51;
        v77 = *v75;
        v76 = v75[1];
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_123;
        if (__OFADD__(v73, v78))
          goto LABEL_124;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_86:
          if (v79)
            v51 = v63;
          goto LABEL_88;
        }
LABEL_80:
        if ((v74 & 1) != 0)
          goto LABEL_119;
        v82 = &v49->super.super.super.super.isa + 2 * v51;
        v84 = *v82;
        v83 = v82[1];
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_122;
        if (v85 < v73)
          goto LABEL_14;
LABEL_88:
        v90 = v51 - 1;
        if (v51 - 1 >= v19)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v91 = v18;
        if (!v18)
          goto LABEL_137;
        v92 = v16;
        v93 = (uint64_t *)v49 + 2 * v90;
        v94 = *v93;
        v95 = v49;
        v96 = v51;
        v97 = &v49->super.super.super.super.isa + 2 * v51;
        v98 = v97[1];
        v99 = v91;
        sub_100464DD4((id *)(v91 + 8 * *v93), (id *)(v91 + 8 * *v97), v91 + 8 * v98, v126);
        if (v1)
        {
          v16 = v92;
          goto LABEL_109;
        }
        if (v98 < v94)
          goto LABEL_112;
        if (v96 > *(_QWORD *)v92->cellPadding)
          goto LABEL_113;
        *v93 = v94;
        *(_QWORD *)&v95->heartRateController[16 * v90] = v98;
        v100 = *(_QWORD *)v92->cellPadding;
        if (v96 >= v100)
          goto LABEL_114;
        v16 = v92;
        v19 = v100 - 1;
        memmove(v97, v97 + 2, 16 * (v100 - 1 - v96));
        v49 = v95;
        *(_QWORD *)v92->cellPadding = v100 - 1;
        v18 = v99;
        v17 = v125;
        if (v100 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v3 = v123;
    if (v17 >= v123)
      goto LABEL_98;
  }
  if (__OFADD__(v20, v120))
    goto LABEL_134;
  if (v20 + v120 >= v3)
    v36 = v3;
  else
    v36 = v20 + v120;
  if (v36 >= v20)
  {
    if (v17 != v36)
    {
      v119 = v16;
      v37 = v116 + 8 * v17;
      v122 = v36;
      do
      {
        v38 = *(void **)(v18 + 8 * v17);
        v39 = v20;
        v40 = v37;
        do
        {
          v41 = *(void **)v40;
          v42 = v38;
          v43 = v41;
          v44 = objc_msgSend(v42, "longLongValue");
          v45 = objc_msgSend(v43, "longLongValue");

          if ((uint64_t)v45 >= (uint64_t)v44)
            break;
          if (!v18)
            goto LABEL_136;
          v46 = *(void **)v40;
          v38 = *(void **)(v40 + 8);
          *(_QWORD *)v40 = v38;
          *(_QWORD *)(v40 + 8) = v46;
          v40 -= 8;
          ++v39;
        }
        while (v17 != v39);
        ++v17;
        v37 += 8;
        v20 = v124;
      }
      while (v17 != v122);
      v17 = v122;
      v16 = v119;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1004648D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v17 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, "longLongValue");
      v13 = objc_msgSend(v11, "longLongValue");

      if ((uint64_t)v12 >= (uint64_t)v13)
      {
LABEL_4:
        ++v4;
        v6 = v17 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v14 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

void sub_1004649C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v17 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, "longLongValue");
      v13 = objc_msgSend(v11, "longLongValue");

      if ((uint64_t)v13 >= (uint64_t)v12)
      {
LABEL_4:
        ++v4;
        v6 = v17 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v14 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_100464AB8(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t result;
  id *v32;
  id *v35;
  char *v36;
  void **v37;
  id *v38;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v38 = __src;
  v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v22 = &a4[v11];
      v36 = (char *)v22;
      v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v23 = (id *)(a3 - 8);
        v24 = v4;
        v32 = v5;
        do
        {
          v35 = v4;
          v25 = v23 + 1;
          v26 = *--v24;
          v27 = *(v22 - 1);
          v28 = v26;
          v29 = objc_msgSend(v27, "longLongValue");
          v30 = objc_msgSend(v28, "longLongValue");

          if ((uint64_t)v29 >= (uint64_t)v30)
          {
            v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22)
              *v23 = *(v22 - 1);
            v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35)
              *v23 = *v24;
            v38 = v24;
          }
          if (v24 <= v32)
            break;
          --v23;
          v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = &a4[v8];
    v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = a4;
      do
      {
        v14 = v5;
        v15 = *v13;
        v16 = *v4;
        v17 = v15;
        v18 = objc_msgSend(v16, "longLongValue");
        v19 = objc_msgSend(v17, "longLongValue");

        if ((uint64_t)v18 >= (uint64_t)v19)
        {
          v21 = v14;
          if (v14 != v13)
            *v14 = *v13;
          v37 = ++v13;
          v20 = v4;
        }
        else
        {
          v20 = v4 + 1;
          v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4)
            *v14 = *v4;
        }
        v5 = v21 + 1;
        if (v13 >= v12)
          break;
        v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      v38 = v5;
    }
LABEL_43:
    sub_100147308(&v38, &v37, &v36);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100464DD4(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t result;
  id *v32;
  id *v35;
  char *v36;
  void **v37;
  id *v38;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v38 = __src;
  v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v22 = &a4[v11];
      v36 = (char *)v22;
      v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v23 = (id *)(a3 - 8);
        v24 = v4;
        v32 = v5;
        do
        {
          v35 = v4;
          v25 = v23 + 1;
          v26 = *--v24;
          v27 = *(v22 - 1);
          v28 = v26;
          v29 = objc_msgSend(v27, "longLongValue");
          v30 = objc_msgSend(v28, "longLongValue");

          if ((uint64_t)v30 >= (uint64_t)v29)
          {
            v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22)
              *v23 = *(v22 - 1);
            v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35)
              *v23 = *v24;
            v38 = v24;
          }
          if (v24 <= v32)
            break;
          --v23;
          v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = &a4[v8];
    v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = a4;
      do
      {
        v14 = v5;
        v15 = *v13;
        v16 = *v4;
        v17 = v15;
        v18 = objc_msgSend(v16, "longLongValue");
        v19 = objc_msgSend(v17, "longLongValue");

        if ((uint64_t)v19 >= (uint64_t)v18)
        {
          v21 = v14;
          if (v14 != v13)
            *v14 = *v13;
          v37 = ++v13;
          v20 = v4;
        }
        else
        {
          v20 = v4 + 1;
          v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4)
            *v14 = *v4;
        }
        v5 = v21 + 1;
        if (v13 >= v12)
          break;
        v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      v38 = v5;
    }
LABEL_43:
    sub_100147308(&v38, &v37, &v36);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

unint64_t sub_1004650F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828940;
  if (!qword_100828940)
  {
    v1 = sub_10001E724(255, (unint64_t *)&qword_100828930, NSNumber_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100828940);
  }
  return result;
}

uint64_t *sub_10046514C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for EmptyFriendView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6);
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for EmptyFriendView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for EmptyFriendView()
{
  return &type metadata for EmptyFriendView;
}

uint64_t sub_100465240(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B79EC, 1);
}

double sub_100465250()
{
  double result;

  result = 15.0;
  xmmword_100834BA8 = xmmword_100630D30;
  *(_OWORD *)&qword_100834BB8 = xmmword_100622F80;
  return result;
}

uint64_t sub_100465270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[6];

  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  v4 = static Axis.Set.vertical.getter(a1);
  v5 = sub_100047110(&qword_100834BC8);
  v6 = sub_100465A3C();
  return ScrollView.init(_:showsIndicators:content:)(v4, 1, sub_100465A30, v8, v5, v6);
}

uint64_t sub_1004652E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _QWORD v44[31];
  _OWORD v45[13];
  _OWORD v46[2];
  _OWORD v47[15];
  char v48;

  v38 = a4;
  v42 = a5;
  v8 = sub_100047110(&qword_100834BE8);
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100047110(&qword_100834BC8);
  __chkstk_darwin(v39);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = static HorizontalAlignment.center.getter(v13, v14, v15, v16, v17);
  sub_100465624(a1, a2, a3, (uint64_t)v45);
  *(_OWORD *)((char *)&v47[11] + 7) = v45[11];
  *(_OWORD *)((char *)&v47[12] + 7) = v45[12];
  *(_OWORD *)((char *)&v47[13] + 7) = v46[0];
  v47[14] = *(_OWORD *)((char *)v46 + 9);
  *(_OWORD *)((char *)&v47[7] + 7) = v45[7];
  *(_OWORD *)((char *)&v47[8] + 7) = v45[8];
  *(_OWORD *)((char *)&v47[9] + 7) = v45[9];
  *(_OWORD *)((char *)&v47[10] + 7) = v45[10];
  *(_OWORD *)((char *)&v47[3] + 7) = v45[3];
  *(_OWORD *)((char *)&v47[4] + 7) = v45[4];
  *(_OWORD *)((char *)&v47[5] + 7) = v45[5];
  *(_OWORD *)((char *)&v47[6] + 7) = v45[6];
  *(_OWORD *)((char *)v47 + 7) = v45[0];
  *(_OWORD *)((char *)&v47[1] + 7) = v45[1];
  *(_OWORD *)((char *)&v47[2] + 7) = v45[2];
  *(_OWORD *)((char *)&v44[22] + 1) = v47[11];
  *(_OWORD *)((char *)&v44[24] + 1) = v47[12];
  *(_OWORD *)((char *)&v44[26] + 1) = v47[13];
  *(_OWORD *)((char *)&v44[28] + 1) = *(_OWORD *)((char *)v46 + 9);
  *(_OWORD *)((char *)&v44[14] + 1) = v47[7];
  *(_OWORD *)((char *)&v44[16] + 1) = v47[8];
  *(_OWORD *)((char *)&v44[18] + 1) = v47[9];
  *(_OWORD *)((char *)&v44[20] + 1) = v47[10];
  *(_OWORD *)((char *)&v44[6] + 1) = v47[3];
  *(_OWORD *)((char *)&v44[8] + 1) = v47[4];
  *(_OWORD *)((char *)&v44[10] + 1) = v47[5];
  *(_OWORD *)((char *)&v44[12] + 1) = v47[6];
  *(_OWORD *)((char *)v44 + 1) = v47[0];
  *(_OWORD *)((char *)&v44[2] + 1) = v47[1];
  v48 = 0;
  v43 = (unint64_t)v18;
  LOBYTE(v44[0]) = 0;
  *(_OWORD *)((char *)&v44[4] + 1) = v47[2];
  v20 = static Edge.Set.horizontal.getter(v19);
  v21 = sub_100047110(&qword_100834BD8);
  v22 = sub_100028384(&qword_100834BE0, &qword_100834BD8, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.scenePadding(_:)(v20, v21, v22);
  v23 = sub_100465AF0(v45);
  v24 = GeometryProxy.size.getter(v23);
  GeometryProxy.size.getter(v25);
  v27 = v26;
  v29 = static Alignment.center.getter(v28);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v43, *(_QWORD *)&v24, 0, 0, 1, 0, 1, v27, 0, 0, 1, 0, 1, v29, v30);
  v32 = v40;
  v31 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v12, v10, v41);
  v33 = &v12[*(int *)(v39 + 36)];
  v34 = *(_OWORD *)&v44[8];
  *((_OWORD *)v33 + 4) = *(_OWORD *)&v44[6];
  *((_OWORD *)v33 + 5) = v34;
  *((_OWORD *)v33 + 6) = *(_OWORD *)&v44[10];
  v35 = *(_OWORD *)v44;
  *(_OWORD *)v33 = v43;
  *((_OWORD *)v33 + 1) = v35;
  v36 = *(_OWORD *)&v44[4];
  *((_OWORD *)v33 + 2) = *(_OWORD *)&v44[2];
  *((_OWORD *)v33 + 3) = v36;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v31);
  return sub_100465BC8((uint64_t)v12, v42);
}

void sub_100465624(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;

  v8 = type metadata accessor for ActivitySharingFriendListDataProvider(0);
  v9 = sub_1000083D8((unint64_t *)&qword_1008240B0, type metadata accessor for ActivitySharingFriendListDataProvider, (uint64_t)&unk_100625DD8);
  v10 = EnvironmentObject.init()(v8, v9);
  v12 = v11;
  v13 = type metadata accessor for ActivitySharingNavigationCoordinator();
  v14 = sub_1000083D8(&qword_10081EDC0, (uint64_t (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator, (uint64_t)&unk_1006328F8);
  v15 = EnvironmentObject.init()(v13, v14);
  v17 = v16;
  if (qword_10081DDB0 != -1)
    v15 = swift_once(&qword_10081DDB0, sub_100465250);
  v18 = xmmword_100834BA8;
  v53 = unk_100834BC0;
  v54 = qword_100834BB8;
  v52 = static Edge.Set.all.getter(v15);
  if (a2)
  {
    v55 = v17;
    v56 = v12;
    KeyPath = swift_getKeyPath(&unk_10063DC48);
    v20 = swift_getKeyPath(&unk_10063DC70);
    swift_retain(a2);
    static Published.subscript.getter(&v57, v21, KeyPath, v20);
    swift_release(a2);
    swift_release(KeyPath);
    swift_release(v20);
    v22 = *(_QWORD *)v57->cellPadding;
    swift_bridgeObjectRelease(v57, v23, v24, v25, v26, v27, v28, v29);
    if (v22)
    {
      v31 = type metadata accessor for ReachableContactsDataSource(0);
      v32 = sub_1000083D8(&qword_10081EDD0, type metadata accessor for ReachableContactsDataSource, (uint64_t)&unk_1006491AC);
      swift_retain(a1);
      v33 = EnvironmentObject.init()(v31, v32);
      v50 = v34;
      v51 = v33;
      LOBYTE(v22) = static Edge.Set.all.getter(v33);
      v35 = EdgeInsets.init(_all:)(0.0);
      v37 = v36;
      v38 = a1;
      v40 = v39;
      v49 = v41;
      v22 = v22;
    }
    else
    {
      v50 = 0;
      v51 = 0;
      v38 = 0;
      v35 = 0.0;
      v37 = 0;
      v40 = 0;
      v49 = 0;
    }
    v48 = static Edge.Set.top.getter(v30);
    v42 = EdgeInsets.init(_all:)(30.0);
    *(_QWORD *)a4 = v10;
    *(_QWORD *)(a4 + 8) = v56;
    *(_QWORD *)(a4 + 16) = v18;
    *(_QWORD *)(a4 + 24) = v55;
    *(_BYTE *)(a4 + 32) = v52;
    *(_OWORD *)(a4 + 40) = v18;
    *(_QWORD *)(a4 + 56) = v54;
    *(_QWORD *)(a4 + 64) = v53;
    *(_BYTE *)(a4 + 72) = 0;
    *(_QWORD *)(a4 + 80) = v51;
    *(_QWORD *)(a4 + 88) = v50;
    *(_QWORD *)(a4 + 96) = v38;
    *(_QWORD *)(a4 + 104) = v22;
    *(double *)(a4 + 112) = v35;
    *(_QWORD *)(a4 + 120) = v37;
    *(_QWORD *)(a4 + 128) = v40;
    *(_QWORD *)(a4 + 136) = v49;
    *(_BYTE *)(a4 + 144) = 0;
    *(_QWORD *)(a4 + 152) = 0xD00000000000001DLL;
    *(_QWORD *)(a4 + 160) = 0x800000010068F0C0;
    *(_WORD *)(a4 + 168) = 257;
    *(_BYTE *)(a4 + 176) = v48;
    *(double *)(a4 + 184) = v42;
    *(_QWORD *)(a4 + 192) = v43;
    *(_QWORD *)(a4 + 200) = v44;
    *(_QWORD *)(a4 + 208) = v45;
    *(_BYTE *)(a4 + 216) = 0;
    *(_QWORD *)(a4 + 224) = 0;
    *(_BYTE *)(a4 + 232) = 1;
    swift_retain(v18);
    swift_retain(v10);
    sub_100465C18(v51, v50, v38);
    sub_100465B98(v51, v50, v38);
    swift_release(v18);
    swift_release(v10);
  }
  else
  {
    v46 = type metadata accessor for ReachableContactsDataSource(0);
    v47 = sub_1000083D8(&qword_10081EDD0, type metadata accessor for ReachableContactsDataSource, (uint64_t)&unk_1006491AC);
    EnvironmentObject.error()(0, a3, v46, v47);
    __break(1u);
  }
}

double sub_100465998@<D0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  double result;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_1007A0578, 40, 7);
  *((_QWORD *)v6 + 2) = v3;
  *((_QWORD *)v6 + 3) = v4;
  *((_QWORD *)v6 + 4) = v5;
  *a1 = sub_100465A24;
  a1[1] = v6;
  swift_retain(v4);
  *(_QWORD *)&result = swift_retain(v3).n128_u64[0];
  return result;
}

uint64_t sub_1004659F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100465A24(uint64_t a1)
{
  uint64_t *v1;

  return sub_100465270(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100465A30@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1004652E4(v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_100465A3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100834BD0;
  if (!qword_100834BD0)
  {
    v1 = sub_100007050(&qword_100834BC8);
    v2[0] = sub_100007050(&qword_100834BD8);
    v2[1] = sub_100028384(&qword_100834BE0, &qword_100834BD8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.scenePadding(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834BD0);
  }
  return result;
}

_QWORD *sub_100465AF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;

  v2 = a1[2];
  v3 = a1[11];
  v4 = a1[12];
  v13 = a1[10];
  v14 = (CHWorkoutDetailHeartRateTableViewCell *)a1[20];
  swift_release(*a1);
  swift_release(v2);
  sub_100465B98(v13, v3, v4);
  swift_bridgeObjectRelease(v14, v5, v6, v7, v8, v9, v10, v11);
  return a1;
}

uint64_t sub_100465B98(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a3)
  {
    v3 = result;
    swift_release(a3);
    return swift_release(v3);
  }
  return result;
}

uint64_t sub_100465BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100834BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100465C18(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain(result);
    return swift_retain(a3);
  }
  return result;
}

uint64_t sub_100465C44()
{
  return sub_100028384(&qword_100834BF0, &qword_100834BF8, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

_QWORD *initializeWithCopy for IntervalsTargetValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = (void *)a2[4];
  a1[4] = v6;
  swift_retain(v3);
  swift_retain(v4);
  v7 = v5;
  v8 = v6;
  return a1;
}

_QWORD *assignWithCopy for IntervalsTargetValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[3];
  v9 = (void *)a1[3];
  a1[3] = v8;
  v10 = v8;

  v11 = (void *)a2[4];
  v12 = (void *)a1[4];
  a1[4] = v11;
  v13 = v11;

  return a1;
}

uint64_t assignWithTake for IntervalsTargetValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for IntervalsTargetValue()
{
  return &type metadata for IntervalsTargetValue;
}

uint64_t sub_100465DBC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7A30, 1);
}

void sub_100465DCC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  __n128 v10;
  double v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  __n128 v17;
  int v18;
  __n128 v19;
  double v20;
  void *v21;
  void *v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  id v26;
  id v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  int v42;
  char v43;
  __n128 v44;
  double v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  __n128 v51;
  unint64_t v52;
  unint64_t v53;
  __int16 v54;
  __int16 v55;
  __n128 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  __int16 v71;
  __n128 v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  id v81;
  id v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  void *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  __int16 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  void *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  __int16 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  CHWorkoutDetailHeartRateTableViewCell *v130;
  char v131;
  char v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  __int16 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  SEL v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  int v162;
  char v163;
  __int128 v164;
  __int128 v165;
  int v166;
  char v167;
  _OWORD v168[2];

  v2 = v1;
  v4 = type metadata accessor for TargetZone.ZoneType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TargetZone.type.getter(v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for TargetZone.ZoneType.rollingPace(_:))
  {
    v168[0] = *(_OWORD *)v1;
    v10 = swift_retain(*((_QWORD *)&v168[0] + 1));
    v11 = MetricsPublisher.rollingPace.getter(v10);
    sub_10004D634((uint64_t)v168);
    v12 = *(void **)(v1 + 24);
    v13 = *(void **)(v1 + 32);
    sub_10004D65C((uint64_t)v168);
    v14 = v12;
    v15 = v13;
    v16 = MetricsPublisher.workoutStatePublisher.getter(v15);
    sub_10004D634((uint64_t)v168);
    LOBYTE(v13) = WorkoutStatePublisher.gpsUnavailable.getter(v17);
    swift_release(v16);
    *(double *)&v160 = v11;
    *((_QWORD *)&v160 + 1) = v14;
    *(_QWORD *)&v161 = v15;
    *((_QWORD *)&v161 + 1) = 14;
    LOWORD(v162) = v13 & 1;
LABEL_5:
    v25 = sub_100466BD8();
    v26 = v14;
    v27 = v15;
    _ConditionalContent<>.init(storage:)(&v160, &type metadata for PaceTargetValue, &type metadata for PaceTargetValue, v25, v25);
    if (BYTE1(v166))
      v28 = 256;
    else
      v28 = 0;
    v160 = v164;
    v161 = v165;
    LOWORD(v162) = v28 | v166;
    BYTE2(v162) = 0;
    goto LABEL_9;
  }
  v18 = v9;
  if (v9 == enum case for TargetZone.ZoneType.averagePace(_:))
  {
    v168[0] = *(_OWORD *)v2;
    v19 = swift_retain(*((_QWORD *)&v168[0] + 1));
    v20 = MetricsPublisher.averagePace.getter(v19);
    sub_10004D634((uint64_t)v168);
    v21 = *(void **)(v2 + 24);
    v22 = *(void **)(v2 + 32);
    sub_10004D65C((uint64_t)v168);
    v14 = v21;
    v15 = v22;
    v23 = MetricsPublisher.workoutStatePublisher.getter(v15);
    sub_10004D634((uint64_t)v168);
    LOBYTE(v22) = WorkoutStatePublisher.gpsUnavailable.getter(v24);
    swift_release(v23);
    *(double *)&v160 = v20;
    *((_QWORD *)&v160 + 1) = v14;
    *(_QWORD *)&v161 = v15;
    *((_QWORD *)&v161 + 1) = 8;
    LOBYTE(v162) = v22 & 1;
    BYTE1(v162) = 1;
    goto LABEL_5;
  }
  if (v9 == enum case for TargetZone.ZoneType.instantaneousPace(_:))
  {
    v168[0] = *(_OWORD *)v2;
    v44 = swift_retain(*((_QWORD *)&v168[0] + 1));
    v45 = MetricsPublisher.currentPace.getter(v44);
    sub_10004D634((uint64_t)v168);
    v46 = *(void **)(v2 + 24);
    v47 = *(void **)(v2 + 32);
    sub_10004D65C((uint64_t)v168);
    v48 = v46;
    v49 = v47;
    v50 = MetricsPublisher.workoutStatePublisher.getter(v49);
    sub_10004D634((uint64_t)v168);
    LOBYTE(v47) = WorkoutStatePublisher.gpsUnavailable.getter(v51);
    swift_release(v50);
    *(double *)&v160 = v45;
    *((_QWORD *)&v160 + 1) = v48;
    *(_QWORD *)&v161 = v49;
    *((_QWORD *)&v161 + 1) = 4;
    LOWORD(v162) = v47 & 1;
    v52 = sub_100466BD8();
    v53 = sub_100466C40();
    v26 = v48;
    v27 = v49;
    _ConditionalContent<>.init(storage:)(&v160, &type metadata for PaceTargetValue, &type metadata for CadenceTargetValue, v52, v53);
    v54 = v166;
    if (BYTE1(v166))
      v55 = 256;
    else
      v55 = 0;
LABEL_30:
    v160 = v164;
    v161 = v165;
    LOWORD(v162) = v55 | v54;
    BYTE2(v162) = 1;
LABEL_9:
    v29 = sub_100047110(&qword_100834C28);
    v30 = sub_100047110(&qword_100834C40);
    v31 = sub_100466B74();
    v32 = sub_100466C1C();
    _ConditionalContent<>.init(storage:)(&v160, v29, v30, v31, v32);
    v160 = v164;
    v161 = v165;
    HIWORD(v162) = BYTE2(v166) != 0;
    LOWORD(v162) = v166;
LABEL_10:
    v33 = sub_100047110(&qword_100834C18);
    v34 = sub_100047110(&qword_100834C58);
    v35 = sub_100466B50();
    v36 = sub_100466C84();
    _ConditionalContent<>.init(storage:)(&v160, v33, v34, v35, v36);
    if (HIBYTE(v166))
      v37 = 0x1000000;
    else
      v37 = 0;
    v160 = v164;
    v161 = v165;
    v162 = v37 | (unsigned __int16)v166 | (BYTE2(v166) << 16);
    v163 = 0;
    v38 = sub_100047110(&qword_100834C00);
    v39 = sub_1001C735C(&qword_100834C08, &qword_100834C00, (void (*)(void))sub_100466B50, (void (*)(void))sub_100466C84);
    _ConditionalContent<>.init(storage:)(&v160, v38, &type metadata for Text, v39, &protocol witness table for Text);

    goto LABEL_14;
  }
  if (v9 == enum case for TargetZone.ZoneType.instantaneousCadence(_:))
  {
    v168[0] = *(_OWORD *)v2;
    v56 = swift_retain(*((_QWORD *)&v168[0] + 1));
    v57 = MetricsPublisher.currentCadence.getter(v56);
    v59 = v58 & 1;
    sub_10004D634((uint64_t)v168);
    v62 = v2 + 24;
    v60 = *(void **)(v2 + 24);
    v61 = *(void **)(v62 + 8);
    *(_QWORD *)&v160 = v57;
    *((_QWORD *)&v160 + 1) = v59;
    *(_QWORD *)&v161 = v61;
    *((_QWORD *)&v161 + 1) = v60;
    LOBYTE(v162) = 0;
    v63 = sub_100466C40();
    v64 = sub_100466CCC();
    v65 = v61;
    v66 = v60;
    v26 = v65;
    v27 = v66;
    _ConditionalContent<>.init(storage:)(&v160, &type metadata for CadenceTargetValue, &type metadata for PowerTargetValue, v63, v64);
    v160 = v164;
    v161 = v165;
    LOWORD(v162) = v166;
    v67 = sub_100047110(&qword_100834C68);
    v68 = sub_100047110(&qword_100834C80);
    v69 = sub_100466CA8();
    v70 = sub_100466D10();
    _ConditionalContent<>.init(storage:)(&v160, v67, v68, v69, v70);
    if (BYTE1(v166))
      v71 = 256;
    else
      v71 = 0;
    v160 = v164;
    v161 = v165;
    LOWORD(v162) = v71 | v166;
    HIWORD(v162) = 256;
    goto LABEL_10;
  }
  if (v9 == enum case for TargetZone.ZoneType.averageCadence(_:))
  {
    v168[0] = *(_OWORD *)v2;
    v72 = swift_retain(*((_QWORD *)&v168[0] + 1));
    v73 = MetricsPublisher.averageCadence.getter(v72);
    v75 = v74 & 1;
    sub_10004D634((uint64_t)v168);
    v78 = v2 + 24;
    v76 = *(void **)(v2 + 24);
    v77 = *(void **)(v78 + 8);
    *(_QWORD *)&v160 = v73;
    *((_QWORD *)&v160 + 1) = v75;
    *(_QWORD *)&v161 = v77;
    *((_QWORD *)&v161 + 1) = v76;
    LOWORD(v162) = 256;
    v79 = sub_100466BD8();
    v80 = sub_100466C40();
    v81 = v77;
    v82 = v76;
    v26 = v81;
    v27 = v82;
    _ConditionalContent<>.init(storage:)(&v160, &type metadata for PaceTargetValue, &type metadata for CadenceTargetValue, v79, v80);
    v54 = v166;
    if (BYTE1(v166))
      v55 = 256;
    else
      v55 = 0;
    goto LABEL_30;
  }
  if (v9 == enum case for TargetZone.ZoneType.instantaneousPower(_:))
  {
    v168[0] = *(_OWORD *)v2;
    v83 = swift_retain(*((_QWORD *)&v168[0] + 1));
    v84 = MetricsPublisher.powerMetricsPublisher.getter(v83);
    v85 = sub_10004D634((uint64_t)v168);
    v86 = PowerMetricsPublisher.currentPower.getter(v85);
    v88 = v87;
    swift_release(v84);
    v89 = *(void **)(v2 + 24);
    *(_QWORD *)&v160 = v86;
    *((_QWORD *)&v160 + 1) = v88 & 1;
    v161 = (unint64_t)v89;
    LOBYTE(v162) = 1;
    v90 = sub_100466C40();
    v91 = sub_100466CCC();
    v26 = v89;
    _ConditionalContent<>.init(storage:)(&v160, &type metadata for CadenceTargetValue, &type metadata for PowerTargetValue, v90, v91);
    v160 = v164;
    v161 = v165;
    LOWORD(v162) = v166;
    v92 = sub_100047110(&qword_100834C68);
    v93 = sub_100047110(&qword_100834C80);
    v94 = sub_100466CA8();
    v95 = sub_100466D10();
    _ConditionalContent<>.init(storage:)(&v160, v92, v93, v94, v95);
    if (BYTE1(v166))
      v96 = 256;
    else
      v96 = 0;
    v160 = v164;
    v161 = v165;
    LOWORD(v162) = v96 | v166;
    HIWORD(v162) = 256;
    v97 = sub_100047110(&qword_100834C18);
    v98 = sub_100047110(&qword_100834C58);
    v99 = sub_100466B50();
    v100 = sub_100466C84();
    _ConditionalContent<>.init(storage:)(&v160, v97, v98, v99, v100);
    if (HIBYTE(v166))
      v101 = 0x1000000;
    else
      v101 = 0;
    v160 = v164;
    v161 = v165;
    v162 = v101 | (unsigned __int16)v166 | (BYTE2(v166) << 16);
    v163 = 0;
    v102 = sub_100047110(&qword_100834C00);
    v103 = sub_1001C735C(&qword_100834C08, &qword_100834C00, (void (*)(void))sub_100466B50, (void (*)(void))sub_100466C84);
    v104 = v102;
LABEL_47:
    _ConditionalContent<>.init(storage:)(&v160, v104, &type metadata for Text, v103, &protocol witness table for Text);
LABEL_14:

    goto LABEL_15;
  }
  if (v9 == enum case for TargetZone.ZoneType.averagePower(_:))
  {
    v168[0] = *(_OWORD *)v2;
    v105 = swift_retain(*((_QWORD *)&v168[0] + 1));
    v106 = MetricsPublisher.powerMetricsPublisher.getter(v105);
    v107 = sub_10004D634((uint64_t)v168);
    v108 = PowerMetricsPublisher.averagePower.getter(v107);
    v110 = v109;
    swift_release(v106);
    v111 = *(void **)(v2 + 24);
    *(_QWORD *)&v160 = v108;
    *((_QWORD *)&v160 + 1) = v110 & 1;
    v161 = (unint64_t)v111;
    LOBYTE(v162) = 0;
    v112 = sub_100466CCC();
    v26 = v111;
    _ConditionalContent<>.init(storage:)(&v160, &type metadata for PowerTargetValue, &type metadata for Text, v112, &protocol witness table for Text);
    v160 = v164;
    v161 = v165;
    LOBYTE(v162) = v166;
    BYTE1(v162) = 1;
    v113 = sub_100047110(&qword_100834C68);
    v114 = sub_100047110(&qword_100834C80);
    v115 = sub_100466CA8();
    v116 = sub_100466D10();
    _ConditionalContent<>.init(storage:)(&v160, v113, v114, v115, v116);
    if (BYTE1(v166))
      v117 = 256;
    else
      v117 = 0;
    v160 = v164;
    v161 = v165;
    LOWORD(v162) = v117 | v166;
    HIWORD(v162) = 256;
    v118 = sub_100047110(&qword_100834C18);
    v119 = sub_100047110(&qword_100834C58);
    v120 = sub_100466B50();
    v121 = sub_100466C84();
    _ConditionalContent<>.init(storage:)(&v160, v118, v119, v120, v121);
    if (HIBYTE(v166))
      v122 = 0x1000000;
    else
      v122 = 0;
    v160 = v164;
    v161 = v165;
    v162 = v122 | (unsigned __int16)v166 | (BYTE2(v166) << 16);
    v163 = 0;
    v123 = sub_100047110(&qword_100834C00);
    v103 = sub_1001C735C(&qword_100834C08, &qword_100834C00, (void (*)(void))sub_100466B50, (void (*)(void))sub_100466C84);
    v104 = v123;
    goto LABEL_47;
  }
  v124 = enum case for TargetZone.ZoneType.none(_:);
  v125 = LocalizedStringKey.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
  if (v18 != v124)
  {
    *(_QWORD *)&v160 = Text.init(_:tableName:bundle:comment:)(v125);
    *((_QWORD *)&v160 + 1) = v153;
    *(_QWORD *)&v161 = v154 & 1;
    *((_QWORD *)&v161 + 1) = v155;
    v162 = 0;
    v163 = 1;
    v156 = sub_100047110(&qword_100834C00);
    v157 = sub_1001C735C(&qword_100834C08, &qword_100834C00, (void (*)(void))sub_100466B50, (void (*)(void))sub_100466C84);
    _ConditionalContent<>.init(storage:)(&v160, v156, &type metadata for Text, v157, &protocol witness table for Text);
    v159 = v164;
    v158 = v165;
    v42 = v166;
    v43 = v167;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v41 = v158;
    v40 = v159;
    goto LABEL_16;
  }
  v126 = Text.init(_:tableName:bundle:comment:)(v125);
  v128 = v127;
  v130 = v129;
  v132 = v131 & 1;
  *(_QWORD *)&v160 = v126;
  *((_QWORD *)&v160 + 1) = v127;
  *(_QWORD *)&v161 = v131 & 1;
  *((_QWORD *)&v161 + 1) = v129;
  LOBYTE(v162) = 1;
  sub_1000E439C(v126, v127, v131 & 1);
  v133 = sub_100466CCC();
  swift_bridgeObjectRetain(v130);
  _ConditionalContent<>.init(storage:)(&v160, &type metadata for PowerTargetValue, &type metadata for Text, v133, &protocol witness table for Text);
  v160 = v164;
  v161 = v165;
  LOBYTE(v162) = v166;
  BYTE1(v162) = 1;
  v134 = sub_100047110(&qword_100834C68);
  v135 = sub_100047110(&qword_100834C80);
  v136 = sub_100466CA8();
  v137 = sub_100466D10();
  _ConditionalContent<>.init(storage:)(&v160, v134, v135, v136, v137);
  if (BYTE1(v166))
    v138 = 256;
  else
    v138 = 0;
  v160 = v164;
  v161 = v165;
  LOWORD(v162) = v138 | v166;
  HIWORD(v162) = 256;
  v139 = sub_100047110(&qword_100834C18);
  v140 = sub_100047110(&qword_100834C58);
  v141 = sub_100466B50();
  v142 = sub_100466C84();
  _ConditionalContent<>.init(storage:)(&v160, v139, v140, v141, v142);
  if (HIBYTE(v166))
    v143 = 0x1000000;
  else
    v143 = 0;
  v160 = v164;
  v161 = v165;
  v162 = v143 | (unsigned __int16)v166 | (BYTE2(v166) << 16);
  v163 = 0;
  v144 = sub_100047110(&qword_100834C00);
  v145 = sub_1001C735C(&qword_100834C08, &qword_100834C00, (void (*)(void))sub_100466B50, (void (*)(void))sub_100466C84);
  _ConditionalContent<>.init(storage:)(&v160, v144, &type metadata for Text, v145, &protocol witness table for Text);
  sub_1000E4458(v126, v128, v132);
  swift_bridgeObjectRelease(v130, v146, v147, v148, v149, v150, v151, v152);
LABEL_15:
  v40 = v164;
  v41 = v165;
  v42 = v166;
  v43 = v167;
LABEL_16:
  *(_OWORD *)a1 = v40;
  *(_OWORD *)(a1 + 16) = v41;
  *(_DWORD *)(a1 + 32) = v42;
  *(_BYTE *)(a1 + 36) = v43;
}

uint64_t sub_100466B50()
{
  return sub_1001C735C(&qword_100834C10, &qword_100834C18, (void (*)(void))sub_100466B74, (void (*)(void))sub_100466C1C);
}

unint64_t sub_100466B74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834C20;
  if (!qword_100834C20)
  {
    v1 = sub_100007050(&qword_100834C28);
    sub_100466BD8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834C20);
  }
  return result;
}

unint64_t sub_100466BD8()
{
  unint64_t result;

  result = qword_100834C30;
  if (!qword_100834C30)
  {
    result = swift_getWitnessTable(&unk_1006235DC, &type metadata for PaceTargetValue);
    atomic_store(result, (unint64_t *)&qword_100834C30);
  }
  return result;
}

uint64_t sub_100466C1C()
{
  return sub_1001C735C(&qword_100834C38, &qword_100834C40, (void (*)(void))sub_100466BD8, (void (*)(void))sub_100466C40);
}

unint64_t sub_100466C40()
{
  unint64_t result;

  result = qword_100834C48;
  if (!qword_100834C48)
  {
    result = swift_getWitnessTable(&unk_100639B54, &type metadata for CadenceTargetValue);
    atomic_store(result, (unint64_t *)&qword_100834C48);
  }
  return result;
}

uint64_t sub_100466C84()
{
  return sub_1001C735C(&qword_100834C50, &qword_100834C58, (void (*)(void))sub_100466CA8, (void (*)(void))sub_100466D10);
}

uint64_t sub_100466CA8()
{
  return sub_1001C735C(&qword_100834C60, &qword_100834C68, (void (*)(void))sub_100466C40, (void (*)(void))sub_100466CCC);
}

unint64_t sub_100466CCC()
{
  unint64_t result;

  result = qword_100834C70;
  if (!qword_100834C70)
  {
    result = swift_getWitnessTable(&unk_100646BD4, &type metadata for PowerTargetValue);
    atomic_store(result, (unint64_t *)&qword_100834C70);
  }
  return result;
}

unint64_t sub_100466D10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834C78;
  if (!qword_100834C78)
  {
    v1 = sub_100007050(&qword_100834C80);
    sub_100466CCC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834C78);
  }
  return result;
}

unint64_t sub_100466D80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834C88;
  if (!qword_100834C88)
  {
    v1 = sub_100007050(&qword_100834C90);
    sub_1001C735C(&qword_100834C08, &qword_100834C00, (void (*)(void))sub_100466B50, (void (*)(void))sub_100466C84);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834C88);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UnitSettingsPoolLengthUnit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100466E58 + 4 * byte_10063DD15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100466E8C + 4 * byte_10063DD10[v4]))();
}

uint64_t sub_100466E8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100466E94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100466E9CLL);
  return result;
}

uint64_t sub_100466EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100466EB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100466EB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100466EBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnitSettingsPoolLengthUnit()
{
  return &type metadata for UnitSettingsPoolLengthUnit;
}

void sub_100466ED8(_QWORD *a1@<X8>)
{
  *a1 = &off_100782EB0;
}

void sub_100466EE8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000025;
  if (*v1)
    v2 = 0xD000000000000026;
  v3 = 0x800000010069F6D0;
  if (!*v1)
    v3 = 0x800000010069F700;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100466F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834C98;
  if (!qword_100834C98)
  {
    v1 = sub_100007050(&qword_100834CA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100834C98);
  }
  return result;
}

unint64_t sub_100466F7C()
{
  unint64_t result;

  result = qword_100834CA8;
  if (!qword_100834CA8)
  {
    result = swift_getWitnessTable(&unk_10063DDFC, &type metadata for UnitSettingsPoolLengthUnit);
    atomic_store(result, (unint64_t *)&qword_100834CA8);
  }
  return result;
}

BOOL sub_100466FC0(uint64_t a1)
{
  uint64_t v2;
  _BOOL8 result;
  os_log_type_t v4;
  void *v5;
  os_log_type_t v6;
  NSObject *v7;
  uint8_t *v8;
  os_log_type_t v9;
  void *v10;
  os_log_type_t v11;
  NSObject *v12;
  uint8_t *v13;
  os_log_type_t v14;
  void *v15;
  os_log_type_t v16;
  NSObject *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = a1 - 1;
  result = 0;
  switch(v2)
  {
    case 0:
      return 1;
    case 1:
      v9 = static os_log_type_t.error.getter(0);
      v10 = (void *)HKLogActivity;
      v11 = v9;
      if (os_log_type_enabled(HKLogActivity, v9))
      {
        v12 = v10;
        v13 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v13 = 134217984;
        v19 = 2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 4);
        _os_log_impl((void *)&_mh_execute_header, v12, v11, "Unexpected pool length units %lu. Setting pool length unit to meters", v13, 0xCu);
        swift_slowDealloc(v13, -1, -1);

      }
      return 1;
    case 2:
    case 4:
      v4 = static os_log_type_t.error.getter(0);
      v5 = (void *)HKLogActivity;
      v6 = v4;
      result = os_log_type_enabled(HKLogActivity, v4);
      if (result)
      {
        v7 = v5;
        v8 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v8 = 134217984;
        v19 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v8 + 4);
        _os_log_impl((void *)&_mh_execute_header, v7, v6, "Unexpected pool length units %lu. Setting pool length unit to yards", v8, 0xCu);
        swift_slowDealloc(v8, -1, -1);

        return 0;
      }
      return result;
    case 3:
      return result;
    default:
      v14 = static os_log_type_t.error.getter(0);
      v15 = (void *)HKLogActivity;
      v16 = v14;
      if (os_log_type_enabled(HKLogActivity, v14))
      {
        v17 = v15;
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v18 = 134217984;
        v19 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v18 + 4);
        _os_log_impl((void *)&_mh_execute_header, v17, v16, "Unexpected pool length units %lu. Setting pool length unit to meters", v18, 0xCu);
        swift_slowDealloc(v18, -1, -1);

      }
      return 1;
  }
}

uint64_t sub_100467210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;

  v3 = v2;
  v5 = sub_100030DDC(a1);
  if ((v6 & 1) != 0)
  {
    v7 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v9 = *v2;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100401D0C();
      v9 = v18;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = type metadata accessor for ImpressionMetrics(0);
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, v10 + *(_QWORD *)(v12 + 72) * v7, v11);
    sub_1004D1FD4(v7, v9);
    v13 = *v3;
    *v3 = v9;
    v14 = swift_bridgeObjectRelease(v13);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56))(a2, 0, 1, v11, v14);
  }
  else
  {
    v16 = type metadata accessor for ImpressionMetrics(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16, v17);
  }
}

uint64_t sub_100467308()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocClassInstance(v0, 56, 7);
}

void sub_100467344(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  _BYTE v21[24];

  v8 = sub_100047110(&qword_10082CDC8);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((uint64_t)objc_msgSend(a3, "numberOfSections") <= a1)
  {
    swift_beginAccess(a4 + 40, v21, 33, 0);
    sub_100467210(a1, (uint64_t)v10);
    sub_100030740((uint64_t)v10);
    swift_endAccess(v21);
    v19 = sub_100030B80();
    ImpressionsCalculator.removeElement(_:)(a2);
  }
  else
  {
    objc_msgSend(a3, "rectForSection:", a1);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v19 = sub_100030B80();
    ImpressionsCalculator.addElement(_:at:)(a2, v12, v14, v16, v18);
  }
  swift_release(v19);
}

void sub_1004674A4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  Class isa;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];

  v8 = sub_100047110(&qword_10082CDC8);
  v9 = __chkstk_darwin(v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = IndexPath.section.getter(v9);
  v13 = objc_msgSend(a3, "numberOfSections");
  if (v12 >= (uint64_t)v13
    || (v14 = IndexPath.row.getter(v13),
        v14 >= (uint64_t)objc_msgSend(a3, "numberOfRowsInSection:", IndexPath.section.getter(v14))))
  {
    swift_beginAccess(a4 + 48, v27, 33, 0);
    sub_1004D1010(a1, (uint64_t)v11);
    sub_100030740((uint64_t)v11);
    swift_endAccess(v27);
    v25 = sub_100030B80();
    ImpressionsCalculator.removeElement(_:)(a2);
    swift_release(v25);
  }
  else
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a3, "rectForRowAtIndexPath:", isa);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;

    v24 = sub_100030B80();
    ImpressionsCalculator.addElement(_:at:)(a2, v17, v19, v21, v23);
    swift_release(v24);
  }
}

uint64_t sub_100467640()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  objc_class *v5;
  _BYTE *v6;
  id v7;
  id v8;
  _BYTE *v9;
  id v10;
  id v11;
  _BYTE *v12;
  id v13;
  id v14;
  _BYTE *v15;
  id v16;
  id v17;
  _BYTE *v18;
  id v19;
  id v20;
  _BYTE *v21;
  id v22;
  id v23;
  _BYTE *v24;
  id v25;
  objc_super v27;
  objc_super v28;
  objc_super v29;
  objc_super v30;
  objc_super v31;
  objc_super v32;
  objc_super v33;

  v1 = sub_100047110((uint64_t *)&unk_100828340);
  v2 = swift_allocObject(v1, 88, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100626C00;
  v3 = objc_msgSend(v0, "mondayGoal");
  v4 = objc_msgSend(v0, "goalType");
  v5 = (objc_class *)type metadata accessor for GoalDay();
  v6 = objc_allocWithZone(v5);
  v6[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v4;
  v33.receiver = v6;
  v33.super_class = v5;
  *(_QWORD *)(v2 + 32) = objc_msgSendSuper2(&v33, "init");
  v7 = objc_msgSend(v0, "tuesdayGoal");
  v8 = objc_msgSend(v0, "goalType");
  v9 = objc_allocWithZone(v5);
  v9[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v7;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v8;
  v32.receiver = v9;
  v32.super_class = v5;
  *(_QWORD *)(v2 + 40) = objc_msgSendSuper2(&v32, "init");
  v10 = objc_msgSend(v0, "wednesdayGoal");
  v11 = objc_msgSend(v0, "goalType");
  v12 = objc_allocWithZone(v5);
  v12[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v10;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v11;
  v31.receiver = v12;
  v31.super_class = v5;
  *(_QWORD *)(v2 + 48) = objc_msgSendSuper2(&v31, "init");
  v13 = objc_msgSend(v0, "thursdayGoal");
  v14 = objc_msgSend(v0, "goalType");
  v15 = objc_allocWithZone(v5);
  v15[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 3;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v13;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v14;
  v30.receiver = v15;
  v30.super_class = v5;
  *(_QWORD *)(v2 + 56) = objc_msgSendSuper2(&v30, "init");
  v16 = objc_msgSend(v0, "fridayGoal");
  v17 = objc_msgSend(v0, "goalType");
  v18 = objc_allocWithZone(v5);
  v18[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 4;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v16;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v17;
  v29.receiver = v18;
  v29.super_class = v5;
  *(_QWORD *)(v2 + 64) = objc_msgSendSuper2(&v29, "init");
  v19 = objc_msgSend(v0, "saturdayGoal");
  v20 = objc_msgSend(v0, "goalType");
  v21 = objc_allocWithZone(v5);
  v21[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 5;
  *(_QWORD *)&v21[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v19;
  *(_QWORD *)&v21[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v20;
  v28.receiver = v21;
  v28.super_class = v5;
  *(_QWORD *)(v2 + 72) = objc_msgSendSuper2(&v28, "init");
  v22 = objc_msgSend(v0, "sundayGoal");
  v23 = objc_msgSend(v0, "goalType");
  v24 = objc_allocWithZone(v5);
  v24[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 6;
  *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v22;
  *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v23;
  v27.receiver = v24;
  v27.super_class = v5;
  v25 = objc_msgSendSuper2(&v27, "init");
  *(_QWORD *)(v2 + 80) = v25;
  specialized Array._endMutation()(v25);
  return v2;
}

id sub_1004679E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id result;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v0 - 8);
  v34 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Calendar(0);
  v3 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v10);
  v11 = sub_100047110((uint64_t *)&unk_100828720);
  v12 = type metadata accessor for Calendar.Component(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v11, v15 + *(_QWORD *)(v13 + 72), v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100622F90;
  v17 = v16 + v15;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v17, enum case for Calendar.Component.weekday(_:), v12);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v16);
  swift_setDeallocating(v16);
  swift_arrayDestroy(v17, 1, v12);
  v19 = swift_deallocClassInstance(v16, 32, 7);
  Date.init()(v19);
  Calendar.dateComponents(_:from:)(v18, v2);
  swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v2, v34);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v32);
  v28 = DateComponents.weekday.getter(v27);
  LOBYTE(v18) = v29;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = 0;
  if ((v18 & 1) == 0)
  {
    if ((unint64_t)(v28 - 1) > 6)
      return 0;
    else
      return objc_msgSend(v31, *(&off_1007A07B8)[v28 - 1]);
  }
  return result;
}

char *sub_100467C4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  void *v19;
  char *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  char *result;
  char *v28;
  unint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  objc_class *v51;
  id v52;
  id v53;
  Class isa;
  void *v55;
  void *v56;
  Class v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  objc_class *v66;
  id v67;
  id v68;
  objc_class *v69;
  id v70;
  Class v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  char *v77;
  char *v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  char *v82;

  v4 = (_QWORD *)type metadata accessor for Date(0);
  v5 = (char *)*(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_105;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v8)
    goto LABEL_39;
LABEL_3:
  v9 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
LABEL_111:
    v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  else
    v10 = (char *)*(id *)(a1 + 32);
  v11 = v10;
  if (!v10[OBJC_IVAR____TtC10FitnessApp7GoalDay_day])
  {
    v81 = a2;
    v82 = v7;
    swift_bridgeObjectRelease(a1);
    if (v9)
      goto LABEL_21;
    goto LABEL_23;
  }

  if (v8 == 1)
    goto LABEL_39;
  if (!v9)
  {
    v15 = 5;
    while (1)
    {
      v16 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        goto LABEL_104;
      v17 = *(_BYTE **)(a1 + 8 * v15);
      if (!v17[OBJC_IVAR____TtC10FitnessApp7GoalDay_day])
        break;
      ++v15;
      if (v16 == v8)
        goto LABEL_39;
    }
    v81 = a2;
    v82 = v7;
    v11 = v17;
    swift_bridgeObjectRelease(a1);
LABEL_23:
    v18 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    v7 = v18;
    a2 = 1;
    goto LABEL_24;
  }
  v12 = 1;
  while (1)
  {
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
    v14 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      if (a1 < 0)
        v64 = a1;
      else
        v64 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v8 = _CocoaArrayWrapper.endIndex.getter(v64);
      if (!v8)
        goto LABEL_39;
      goto LABEL_3;
    }
    v11 = (char *)v13;
    if (!*(_BYTE *)(v13 + OBJC_IVAR____TtC10FitnessApp7GoalDay_day))
      break;
    swift_unknownObjectRelease(v13);
    ++v12;
    if (v14 == v8)
      goto LABEL_39;
  }
  v81 = a2;
  v82 = v7;
  swift_bridgeObjectRelease(a1);
LABEL_21:
  swift_bridgeObjectRetain(a1);
  v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  a2 = 0;
LABEL_24:
  if (v7[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] != 1)
  {

    if (v8 != 1)
    {
      v23 = 5;
      do
      {
        v24 = (_DWORD)a2
            ? (char *)*(id *)(a1 + 8 * v23)
            : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v23 - 4, a1);
        v7 = v24;
        v25 = v23 - 3;
        if (__OFADD__(v23 - 4, 1))
          goto LABEL_103;
        if (v24[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 1)
          goto LABEL_25;

        ++v23;
      }
      while (v25 != v8);
    }

LABEL_39:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
LABEL_25:
  v80 = v5;
  swift_bridgeObjectRelease(a1);
  if ((_DWORD)a2)
  {
    v19 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    v20 = v19;
    goto LABEL_27;
  }
  while (2)
  {
    swift_bridgeObjectRetain(a1);
    v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_27:
    v5 = v20;
    if (v20[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] != 2)
    {

      if (v8 == 1)
      {
LABEL_50:

        swift_bridgeObjectRelease(a1);
        return 0;
      }
      v9 = 5;
      while (1)
      {
        v28 = (_DWORD)a2
            ? (char *)*(id *)(a1 + 8 * v9)
            : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
        v5 = v28;
        v29 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
          break;
        if (v28[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 2)
          goto LABEL_28;

        ++v9;
        if (v29 == v8)
          goto LABEL_50;
      }
      __break(1u);
      goto LABEL_111;
    }
LABEL_28:
    v79 = v4;
    swift_bridgeObjectRelease(a1);
    if ((_DWORD)a2)
    {
      v21 = *(void **)(a1 + 32);
      swift_bridgeObjectRetain(a1);
      v22 = v21;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
      v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    }
    v4 = v22;
    if (*((_BYTE *)v22 + OBJC_IVAR____TtC10FitnessApp7GoalDay_day) != 3)
    {

      if (v8 == 1)
      {
LABEL_63:

        swift_bridgeObjectRelease(a1);
        return 0;
      }
      v32 = 5;
      while (1)
      {
        v33 = (_DWORD)a2
            ? *(id *)(a1 + 8 * v32)
            : (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, a1);
        v4 = v33;
        v34 = v32 - 3;
        if (__OFADD__(v32 - 4, 1))
          break;
        if (*((_BYTE *)v33 + OBJC_IVAR____TtC10FitnessApp7GoalDay_day) == 3)
          goto LABEL_53;

        ++v32;
        if (v34 == v8)
          goto LABEL_63;
      }
      __break(1u);
LABEL_113:
      __break(1u);
      continue;
    }
    break;
  }
LABEL_53:
  swift_bridgeObjectRelease(a1);
  if ((_DWORD)a2)
  {
    v30 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    v31 = v30;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  if (v31[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] != 4)
  {

    if (v8 == 1)
    {
LABEL_76:

      swift_bridgeObjectRelease(a1);
      return 0;
    }
    v36 = 5;
    while (1)
    {
      v31 = (_DWORD)a2
          ? (char *)*(id *)(a1 + 8 * v36)
          : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v36 - 4, a1);
      v37 = v36 - 3;
      if (__OFADD__(v36 - 4, 1))
        goto LABEL_113;
      if (v31[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 4)
        break;

      ++v36;
      if (v37 == v8)
        goto LABEL_76;
    }
  }
  v78 = v31;
  swift_bridgeObjectRelease(a1);
  if ((_DWORD)a2)
  {
    v35 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    result = v35;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 5)
  {
LABEL_79:
    v77 = result;
    swift_bridgeObjectRelease(a1);
    if ((_DWORD)a2)
    {
      v38 = *(void **)(a1 + 32);
      swift_bridgeObjectRetain(a1);
      result = v38;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
      result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    }
    if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 6)
    {
LABEL_92:
      v41 = result;
      v42 = swift_bridgeObjectRelease(a1);
      Date.init()(v42);
      v43 = *(void **)&v11[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      v44 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      v45 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      v46 = *(void **)((char *)v4 + OBJC_IVAR____TtC10FitnessApp7GoalDay_goal);
      v47 = *(void **)&v78[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      v71 = *(Class *)&v77[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      v76 = v41;
      v48 = *(void **)&v41[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      v72 = (id)objc_opt_self(HKDevice);
      v75 = v43;
      v74 = v44;
      v73 = v45;
      v49 = v46;
      v50 = v47;
      v51 = v71;
      v69 = v51;
      v52 = v48;
      v70 = v52;
      v53 = objc_msgSend(v72, "localDevice");
      v72 = v53;
      isa = Date._bridgeToObjectiveC()().super.isa;
      v71 = isa;
      v55 = (void *)objc_opt_self(HKActivityGoalSchedule);
      v68 = v53;
      v66 = v51;
      v67 = v52;
      v65 = v50;
      v56 = v50;
      v57 = isa;
      v59 = v74;
      v58 = v75;
      v60 = v73;
      v61 = v49;
      v26 = objc_msgSend(v55, "activityGoalScheduleWithDate:goalType:mondayGoal:tuesdayGoal:wednesdayGoal:thursdayGoal:fridayGoal:saturdayGoal:sundayGoal:device:metadata:", v57, v81, v75, v74, v73, v49, v65, v66, v67, v68, 0);

      (*((void (**)(char *, _QWORD *))v80 + 1))(v82, v79);
      return (char *)v26;
    }

    if (v8 == 1)
    {
LABEL_101:

      swift_bridgeObjectRelease(a1);
      return 0;
    }
    v62 = 5;
    while (1)
    {
      result = (_DWORD)a2
             ? (char *)*(id *)(a1 + 8 * v62)
             : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v62 - 4, a1);
      v63 = v62 - 3;
      if (__OFADD__(v62 - 4, 1))
        break;
      if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 6)
        goto LABEL_92;

      ++v62;
      if (v63 == v8)
        goto LABEL_101;
    }
  }
  else
  {

    if (v8 == 1)
    {
LABEL_89:

      swift_bridgeObjectRelease(a1);
      return 0;
    }
    v39 = 5;
    while (1)
    {
      result = (_DWORD)a2
             ? (char *)*(id *)(a1 + 8 * v39)
             : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v39 - 4, a1);
      v40 = v39 - 3;
      if (__OFADD__(v39 - 4, 1))
        break;
      if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 5)
        goto LABEL_79;

      ++v39;
      if (v40 == v8)
        goto LABEL_89;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for DiveDisplayStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100468484 + 4 * byte_10063DEC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004684B8 + 4 * byte_10063DEC0[v4]))();
}

uint64_t sub_1004684B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004684C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004684C8);
  return result;
}

uint64_t sub_1004684D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004684DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004684E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004684E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiveDisplayStyle()
{
  return &type metadata for DiveDisplayStyle;
}

unint64_t sub_100468508()
{
  unint64_t result;

  result = qword_100834DB0;
  if (!qword_100834DB0)
  {
    result = swift_getWitnessTable(&unk_10063DF34, &type metadata for DiveDisplayStyle);
    atomic_store(result, (unint64_t *)&qword_100834DB0);
  }
  return result;
}

uint64_t sub_10046854C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v10;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Log.default.getter(v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[TV Connection] requestGuestAuthentication succeeded!", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_100468658(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void *v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  _BYTE v17[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for RemoteParticipant(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v12 = (void *)result;
    v13 = RemoteParticipantDiscovered.participant.getter();
    static Log.default.getter(v13);
    v14._countAndFlagsBits = 0xD00000000000006DLL;
    v14._object = (void *)0x800000010069F880;
    v15._object = (void *)0x800000010069FA00;
    v15._countAndFlagsBits = 0xD000000000000025;
    Logger.trace(file:function:)(v14, v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_100469CD0();
    sub_10046AE18();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_1004687B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(void), void (*a5)(char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  _BYTE v15[24];

  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-v10 - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (void *)result;
    a4();
    a5(v11);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_100468880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v9[24];

  v2 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_storeEnumTagMultiPayload(v4, v5, 3);
  v6 = a1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess(v6, v9, 33, 0);
  sub_10004F174((uint64_t)v4, v6);
  return swift_endAccess(v9);
}

uint64_t sub_100468950()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t result;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(uint64_t (*)(), uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  uint64_t v61;
  char v62[24];

  v1 = v0;
  v57 = sub_100047110((uint64_t *)&unk_100836170);
  v2 = *(_QWORD *)(v57 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = __chkstk_darwin(v57);
  v56 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v55 - v6;
  __chkstk_darwin(v5);
  v59 = (char *)&v55 - v8;
  v9 = type metadata accessor for TVConnectionManager.State(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v55 - v13;
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v60 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v55 - v20;
  static Log.default.getter(v19);
  v22._object = (void *)0x800000010069F880;
  v22._countAndFlagsBits = 0xD00000000000006DLL;
  v23._countAndFlagsBits = 0x6F63736944646E65;
  v23._object = (void *)0xEE00292879726576;
  Logger.trace(file:function:)(v22, v23);
  v24 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v61 = v15;
  v58 = v24;
  v24(v21, v15);
  v25 = (uint64_t)&v1[OBJC_IVAR___NLTVConnectionManager_state];
  swift_beginAccess(&v1[OBJC_IVAR___NLTVConnectionManager_state], v62, 0, 0);
  sub_1000243C8(v25, (uint64_t)v14);
  swift_storeEnumTagMultiPayload(v12, v9, 4);
  sub_10046B4BC((uint64_t)v14, (uint64_t)v12);
  LOBYTE(v16) = v26;
  sub_1000242F8((uint64_t)v12);
  result = sub_1000242F8((uint64_t)v14);
  if ((v16 & 1) == 0)
  {
    sub_1000243C8(v25, (uint64_t)v14);
    swift_storeEnumTagMultiPayload(v12, v9, 5);
    sub_10046B4BC((uint64_t)v14, (uint64_t)v12);
    v29 = v28;
    sub_1000242F8((uint64_t)v12);
    result = sub_1000242F8((uint64_t)v14);
    if ((v29 & 1) == 0)
    {
      v30 = *(_QWORD *)&v1[OBJC_IVAR___NLTVConnectionManager_participantClient + 24];
      v31 = *(_QWORD *)&v1[OBJC_IVAR___NLTVConnectionManager_participantClient + 32];
      sub_100016804(&v1[OBJC_IVAR___NLTVConnectionManager_participantClient], v30);
      dispatch thunk of RemoteParticipantClientProtocol.endDiscoveringParticipants()(v30, v31);
      v32 = swift_allocObject(&unk_1007A0B20, 24, 7);
      *(_QWORD *)(v32 + 16) = v1;
      v33 = swift_allocObject(&unk_1007A0B48, 32, 7);
      *(_QWORD *)(v33 + 16) = sub_10046B950;
      *(_QWORD *)(v33 + 24) = v32;
      v34 = swift_allocObject(&unk_1007A0B70, 32, 7);
      *(_QWORD *)(v34 + 16) = sub_10016AECC;
      *(_QWORD *)(v34 + 24) = v33;
      v35 = v56;
      v36 = v57;
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v56, v7, v57);
      v37 = *(unsigned __int8 *)(v2 + 80);
      v38 = (v37 + 16) & ~v37;
      v39 = (v3 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
      v40 = swift_allocObject(&unk_1007A0B98, v39 + 16, v37 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v40 + v38, v35, v36);
      v41 = (_QWORD *)(v40 + v39);
      *v41 = sub_10046BB10;
      v41[1] = v34;
      v42 = v1;
      v43 = v59;
      Promise.init(asyncOperation:)(sub_10046B8C8, v40, (char *)&type metadata for () + 8);
      v44 = *(void (**)(char *, uint64_t))(v2 + 8);
      v44(v7, v36);
      v45 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v36);
      v47 = v46;
      v48 = swift_allocObject(&unk_1007A0BC0, 32, 7);
      *(_QWORD *)(v48 + 16) = 0;
      *(_QWORD *)(v48 + 24) = 0;
      v45(sub_1001104CC, v48);
      swift_release(v47);
      swift_release(v48);
      v49 = ((uint64_t (*)(char *, uint64_t))v44)(v43, v36);
      v50 = v60;
      v51 = static Log.default.getter(v49);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.default.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "[TV Connection] Ended discovering advertising TVs", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }

      return v58(v50, v61);
    }
  }
  return result;
}

uint64_t sub_100468DD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v2 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v2);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_storeEnumTagMultiPayload(v4, v5, 2);
  v6 = a1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess(a1 + OBJC_IVAR___NLTVConnectionManager_state, v11, 33, 0);
  sub_10004F174((uint64_t)v4, v6);
  v7 = swift_endAccess(v11);
  v8 = dispatch thunk of GuestPairingNotificationCoordinator.remove()(v7);
  return sub_100024134(v8);
}

uint64_t sub_100468EC4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void (*v51)(char *, uint64_t);
  os_log_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t Strong;
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  uint8_t *v68;
  os_log_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t aBlock[5];
  uint64_t v83;
  char v84[32];

  v1 = v0;
  v2 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v2);
  v76 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v68 - v5;
  v79 = type metadata accessor for RemoteParticipant(0);
  v77 = *(_QWORD *)(v79 - 8);
  v7 = *(_QWORD *)(v77 + 64);
  __chkstk_darwin(v79);
  __chkstk_darwin(v8);
  v80 = (char *)&v68 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v68 - v11;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v78 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - v17;
  static Log.default.getter(v19);
  v20._countAndFlagsBits = 0xD00000000000006DLL;
  v20._object = (void *)0x800000010069F880;
  v21._object = (void *)0x800000010069F980;
  v21._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v20, v21);
  v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v18, v13);
  v23 = (uint64_t)&v1[OBJC_IVAR___NLTVConnectionManager_state];
  swift_beginAccess(&v1[OBJC_IVAR___NLTVConnectionManager_state], v84, 0, 0);
  sub_1000243C8(v23, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v2))
    return sub_1000242F8((uint64_t)v6);
  v73 = v7;
  v74 = v1;
  v75 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v77;
  v26 = v79;
  v72 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  v72(v12, v6, v79);
  v27 = (uint64_t)v76;
  swift_storeEnumTagMultiPayload(v76, v2, 4);
  swift_beginAccess(v23, aBlock, 33, 0);
  sub_10004F174(v27, v23);
  v28 = swift_endAccess(aBlock);
  v29 = v78;
  static Log.default.getter(v28);
  v30 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v76 = v12;
  v31 = v12;
  v32 = v29;
  v71 = v30;
  v33 = ((uint64_t (*)(char *, char *, uint64_t))v30)(v80, v31, v26);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter(v34);
  v36 = v25;
  if (os_log_type_enabled(v34, v35))
  {
    v37 = swift_slowAlloc(12, -1);
    v70 = v13;
    v69 = v34;
    v38 = (uint8_t *)v37;
    v39 = swift_slowAlloc(32, -1);
    aBlock[0] = v39;
    *(_DWORD *)v38 = 136315138;
    v68 = v38 + 4;
    v40 = v80;
    v41 = RemoteParticipant.description.getter();
    v43 = (CHWorkoutDetailHeartRateTableViewCell *)v42;
    v81 = sub_10003E8EC(v41, v42, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, aBlock, v68);
    swift_bridgeObjectRelease(v43, v44, v45, v46, v47, v48, v49, v50);
    v51 = *(void (**)(char *, uint64_t))(v36 + 8);
    v51(v40, v26);
    v52 = v69;
    _os_log_impl((void *)&_mh_execute_header, v69, v35, "[TV Connection] User allowed TV connection for remote participant %s", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    v53 = v32;
    v54 = v70;
  }
  else
  {
    v51 = *(void (**)(char *, uint64_t))(v25 + 8);
    v51(v80, v26);

    v53 = v32;
    v54 = v13;
  }
  v22(v53, v54);
  v55 = v26;
  v56 = v74;
  v57 = v75;
  v58 = v36;
  Strong = swift_unknownObjectWeakLoadStrong(&v74[OBJC_IVAR___NLTVConnectionManager_presenter]);
  v60 = v76;
  if (Strong)
  {
    v61 = (void *)Strong;
    v71(v57, v76, v55);
    v62 = *(unsigned __int8 *)(v58 + 80);
    v63 = (v62 + 24) & ~v62;
    v64 = swift_allocObject(&unk_1007A09E0, v63 + v73, v62 | 7);
    *(_QWORD *)(v64 + 16) = v56;
    v72((char *)(v64 + v63), v57, v55);
    aBlock[4] = (uint64_t)sub_10046B860;
    v83 = v64;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1003B91BC;
    aBlock[3] = (uint64_t)&unk_1007A09F8;
    v65 = _Block_copy(aBlock);
    v66 = v83;
    v67 = v56;
    objc_msgSend(v61, "presentBrowsingConsentAlertWithCompletion:", v65, swift_release(v66).n128_f64[0]);
    _Block_release(v65);
    swift_unknownObjectRelease(v61);
  }
  return ((uint64_t (*)(char *, uint64_t))v51)(v60, v55);
}

uint64_t sub_1004693B8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  uint64_t (**v40)(uint64_t);
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void (*v55)(uint64_t (*)(), uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  __n128 v60;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[24];

  v82 = a3;
  v5 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RemoteParticipant(0);
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  __chkstk_darwin(v8);
  v75 = v9;
  v76 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100047110((uint64_t *)&unk_100836170);
  v10 = *(_QWORD *)(v80 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v80);
  v73 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  __chkstk_darwin(v15);
  v74 = (char *)&v70 - v16;
  __chkstk_darwin(v17);
  v79 = (char *)&v70 - v18;
  v81 = type metadata accessor for Logger(0);
  v19 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v70 - v24;
  if ((a1 & 1) != 0)
  {
    v26 = static Log.default.getter(v23);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[TV Connection] Consent granted", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v81);
    v30 = *(_QWORD *)(a2 + OBJC_IVAR___NLTVConnectionManager_browsingClient + 24);
    v31 = *(_QWORD *)(a2 + OBJC_IVAR___NLTVConnectionManager_browsingClient + 32);
    sub_100016804((_QWORD *)(a2 + OBJC_IVAR___NLTVConnectionManager_browsingClient), v30);
    dispatch thunk of RemoteBrowsingClientProtocol.requestGuestAuthentication(to:)(v82, v30, v31);
    v32 = swift_allocObject(&unk_1007A0A30, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_10046854C;
    *(_QWORD *)(v32 + 24) = 0;
    v72 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v33 = v73;
    v34 = v80;
    v72(v73, v14, v80);
    v35 = *(unsigned __int8 *)(v10 + 80);
    v36 = (v35 + 16) & ~v35;
    v71 = v35 | 7;
    v37 = (v11 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject(&unk_1007A0A58, v37 + 16, v35 | 7);
    v81 = a2;
    v39 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v39(v38 + v36, v33, v34);
    v40 = (uint64_t (**)(uint64_t))(v38 + v37);
    *v40 = sub_10016AEE4;
    v40[1] = (uint64_t (*)(uint64_t))v32;
    v41 = v74;
    Promise.init(asyncOperation:)(sub_10046B8C8, v38, (char *)&type metadata for () + 8);
    v42 = *(void (**)(char *, uint64_t))(v10 + 8);
    v42(v14, v34);
    v43 = swift_allocObject(&unk_1007A0A80, 32, 7);
    *(_QWORD *)(v43 + 16) = sub_100469960;
    *(_QWORD *)(v43 + 24) = 0;
    v72(v14, v41, v34);
    v44 = swift_allocObject(&unk_1007A0AA8, v37 + 16, v71);
    v39(v44 + v36, v14, v34);
    v45 = (uint64_t (**)(uint64_t))(v44 + v37);
    *v45 = sub_10010FFFC;
    v45[1] = (uint64_t (*)(uint64_t))v43;
    v46 = v79;
    Promise.init(asyncOperation:)(sub_10046B8D8, v44, (char *)&type metadata for () + 8);
    v42(v41, v34);
    v48 = v76;
    v47 = v77;
    v49 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v82, v78);
    v50 = *(unsigned __int8 *)(v47 + 80);
    v51 = (v50 + 24) & ~v50;
    v52 = swift_allocObject(&unk_1007A0AD0, v51 + v75, v50 | 7);
    v53 = (void *)v81;
    *(_QWORD *)(v52 + 16) = v81;
    (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v52 + v51, v48, v49);
    v54 = v53;
    v55 = (void (*)(uint64_t (*)(), uint64_t, __n128))Promise.operation.getter(v34);
    v57 = v56;
    v58 = swift_allocObject(&unk_1007A0AF8, 32, 7);
    *(_QWORD *)(v58 + 16) = sub_10046B8E8;
    *(_QWORD *)(v58 + 24) = v52;
    v59 = swift_retain(v52);
    v55(sub_1001104CC, v58, v59);
    swift_release(v52);
    swift_release(v57);
    v60 = swift_release(v58);
    return ((uint64_t (*)(char *, uint64_t, __n128))v42)(v46, v34, v60);
  }
  else
  {
    v62 = static Log.default.getter(v23);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.default.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = a2;
      v66 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "[TV Connection] Consent declined", v66, 2u);
      v67 = v66;
      a2 = v65;
      swift_slowDealloc(v67, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v81);
    swift_storeEnumTagMultiPayload(v7, v5, 2);
    v68 = a2 + OBJC_IVAR___NLTVConnectionManager_state;
    swift_beginAccess(a2 + OBJC_IVAR___NLTVConnectionManager_state, v83, 33, 0);
    sub_10004F174((uint64_t)v7, v68);
    v69 = swift_endAccess(v83);
    dispatch thunk of GuestPairingNotificationCoordinator.remove()(v69);
    return sub_100024134();
  }
}

uint64_t sub_100469960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  _BYTE v30[8];
  uint64_t v31;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v7);
  swift_errorRetain(a1);
  v8 = swift_errorRetain(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(12, -1);
    v27 = v1;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc(32, -1);
    v31 = v13;
    v25 = v4;
    v26 = v3;
    *(_DWORD *)v12 = 136315138;
    swift_getErrorValue(a1, v30, v29);
    v14 = Error.localizedDescription.getter(v29[1], v29[2]);
    v16 = (CHWorkoutDetailHeartRateTableViewCell *)v15;
    v28 = sub_10003E8EC(v14, v15, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v12 + 4);
    swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[TV Connection] requestGuestAuthentication failed with error %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_100469B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v6 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    swift_storeEnumTagMultiPayload(v8, v6, 2);
    v9 = a2 + OBJC_IVAR___NLTVConnectionManager_state;
    swift_beginAccess(a2 + OBJC_IVAR___NLTVConnectionManager_state, v15, 33, 0);
    sub_10004F174((uint64_t)v8, v9);
    v10 = swift_endAccess(v15);
    dispatch thunk of GuestPairingNotificationCoordinator.remove()(v10);
  }
  else
  {
    v11 = type metadata accessor for RemoteParticipant(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a3, v11);
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v12 = a2 + OBJC_IVAR___NLTVConnectionManager_state;
    swift_beginAccess(a2 + OBJC_IVAR___NLTVConnectionManager_state, v15, 33, 0);
    sub_10004F174((uint64_t)v8, v12);
    swift_endAccess(v15);
  }
  return sub_100024134();
}

void sub_100469CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  char *v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v1 = v0;
  v2 = type metadata accessor for TVConnectionManager.State(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v5 = &v15[-v4];
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Log.default.getter(v8);
  v11._countAndFlagsBits = 0xD00000000000006DLL;
  v11._object = (void *)0x800000010069F880;
  v12._object = (void *)0x800000010069F950;
  v12._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v11, v12);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
  v13 = v1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess(v1 + OBJC_IVAR___NLTVConnectionManager_state, v16, 0, 0);
  sub_1000243C8(v13, (uint64_t)v5);
  v14 = (char *)sub_100469E28 + 4 * byte_10063DF60[swift_getEnumCaseMultiPayload(v5, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100469E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000242F8(v4);
  v6 = type metadata accessor for RemoteParticipant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v0, v3, v6);
  swift_storeEnumTagMultiPayload(v0, v2, 0);
  swift_beginAccess(v1, v5 - 112, 33, 0);
  sub_10004F174(v0, v1);
  return swift_endAccess(v5 - 112);
}

void sub_100469EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v2 = v1;
  v17 = a1;
  v18 = type metadata accessor for RemoteParticipant(0);
  v3 = __chkstk_darwin(v18);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for TVConnectionManager.State(0);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v10);
  v13._countAndFlagsBits = 0xD00000000000006DLL;
  v13._object = (void *)0x800000010069F880;
  v14._object = (void *)0x800000010069F930;
  v14._countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v13, v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v15 = v2 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess(v2 + OBJC_IVAR___NLTVConnectionManager_state, v19, 0, 0);
  sub_1000243C8(v15, (uint64_t)v7);
  v16 = (char *)sub_10046A060 + 4 * asc_10063DF66[swift_getEnumCaseMultiPayload(v7, v4)];
  __asm { BR              X10 }
}

uint64_t sub_10046A060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  uint64_t v7;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___NLTVConnectionManager_presenter);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "cleanupGuestAuthentication");
    swift_unknownObjectRelease(v6);
  }
  swift_storeEnumTagMultiPayload(v2, v3, 2);
  swift_beginAccess(v1, v4 - 128, 33, 0);
  sub_10004F174(v2, v1);
  v7 = swift_endAccess(v4 - 128);
  dispatch thunk of GuestPairingNotificationCoordinator.remove()(v7);
  return sub_100024134();
}

void sub_10046A1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::String v16;
  Swift::String v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t Strong;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD aBlock[5];
  uint64_t v32;
  _BYTE v33[24];

  v1 = v0;
  v2 = type metadata accessor for TVConnectionManager.State(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&aBlock[-1] - v6;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&aBlock[-1] - v14;
  static Log.default.getter(v13);
  v16._countAndFlagsBits = 0xD00000000000006DLL;
  v16._object = (void *)0x800000010069F880;
  v17._object = (void *)0x800000010069F8F0;
  v17._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v16, v17);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v15, v8);
  v19 = v1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess(v1 + OBJC_IVAR___NLTVConnectionManager_state, v33, 0, 0);
  sub_1000243C8(v19, (uint64_t)v7);
  LODWORD(v9) = swift_getEnumCaseMultiPayload(v7, v2);
  sub_1000242F8((uint64_t)v7);
  if ((_DWORD)v9 == 4)
  {
    swift_storeEnumTagMultiPayload(v5, v2, 5);
    swift_beginAccess(v19, aBlock, 33, 0);
    sub_10004F174((uint64_t)v5, v19);
    v20 = swift_endAccess(aBlock);
    v21 = static Log.default.getter(v20);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[TV Connection] Presenting passcode prompt", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    v18(v12, v8);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___NLTVConnectionManager_presenter);
    if (Strong)
    {
      v26 = (void *)Strong;
      v27 = RemoteParticipantPasswordChallenge.passwordLength.getter();
      v28 = swift_allocObject(&unk_1007A08C8, 24, 7);
      swift_unknownObjectWeakInit(v28 + 16, v1);
      aBlock[4] = sub_10046B810;
      v32 = v28;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10046ADB4;
      aBlock[3] = &unk_1007A0908;
      v29 = _Block_copy(aBlock);
      swift_release(v32);
      objc_msgSend(v26, "promptForPasscodeWithLength:completion:", v27, v29);
      swift_unknownObjectRelease(v26);
      _Block_release(v29);
    }
  }
}

uint64_t sub_10046A4F0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint8_t *v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void **aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  void *v45;
  _QWORD *v46;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v18 = swift_bridgeObjectRetain(a2);
    v19 = (void *)static OS_dispatch_queue.main.getter(v18);
    v20 = (_QWORD *)swift_allocObject(&unk_1007A0968, 40, 7);
    v20[2] = a3;
    v20[3] = a1;
    v20[4] = a2;
    v45 = sub_10046B84C;
    v46 = v20;
    aBlock = _NSConcreteStackBlock;
    v42 = 1107296256;
    v21 = &unk_1007A0980;
  }
  else
  {
    v22 = static Log.default.getter(v15);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      v38 = v7;
      v26 = v25;
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[TV Connection] User cancelled pairing passcode prompt", v25, 2u);
      v27 = v26;
      v7 = v38;
      swift_slowDealloc(v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v19 = (void *)((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
    v45 = sub_10046B818;
    v46 = a3;
    aBlock = _NSConcreteStackBlock;
    v42 = 1107296256;
    v21 = &unk_1007A0930;
  }
  v43 = sub_10002D0F8;
  v44 = v21;
  v28 = _Block_copy(&aBlock);
  v29 = v46;
  swift_retain(a3);
  v30 = swift_release(v29);
  static DispatchQoS.unspecified.getter(v30);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v31 = sub_10002FAC0();
  v32 = sub_100047110(&qword_100828C80);
  v33 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v32, v33, v6, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v28);
  v35 = v39;
  v34 = v40;
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v12, v34);
}

void sub_10046A808(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v2 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v6 = (char *)Strong;
    swift_storeEnumTagMultiPayload(v4, v2, 2);
    v7 = (uint64_t)&v6[OBJC_IVAR___NLTVConnectionManager_state];
    swift_beginAccess(&v6[OBJC_IVAR___NLTVConnectionManager_state], v9, 33, 0);
    sub_10004F174((uint64_t)v4, v7);
    v8 = swift_endAccess(v9);
    dispatch thunk of GuestPairingNotificationCoordinator.remove()(v8);
    sub_100024134();

  }
}

uint64_t sub_10046A8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v6 = sub_100047110((uint64_t *)&unk_100836170);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + 16;
  swift_beginAccess(v13, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    v15 = (char *)Strong;
    swift_storeEnumTagMultiPayload(v12, v10, 4);
    v16 = (uint64_t)&v15[OBJC_IVAR___NLTVConnectionManager_state];
    swift_beginAccess(&v15[OBJC_IVAR___NLTVConnectionManager_state], v26, 33, 0);
    sub_10004F174((uint64_t)v12, v16);
    swift_endAccess(v26);

  }
  swift_beginAccess(v13, v29, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v13);
  if (result)
  {
    v18 = (void *)result;
    sub_1000252E0(result + OBJC_IVAR___NLTVConnectionManager_browsingClient, (uint64_t)v26);

    v19 = v27;
    v20 = v28;
    sub_100016804(v26, v27);
    dispatch thunk of RemoteBrowsingClientProtocol.tryPassword(_:)(a2, a3, v19, v20);
    v21 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v6);
    v23 = v22;
    v24 = swift_allocObject(&unk_1007A09B8, 32, 7);
    *(_QWORD *)(v24 + 16) = sub_10046AB00;
    *(_QWORD *)(v24 + 24) = 0;
    v21(sub_100110028, v24);
    swift_release(v23);
    swift_release(v24);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);
  }
  return result;
}

uint64_t sub_10046AB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD v28[3];
  _BYTE v29[8];
  uint64_t v30;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v25 - v8;
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v10 = *(_QWORD *)a1;
    v11 = swift_errorRetain(v10);
    static Log.default.getter(v11);
    swift_errorRetain(v10);
    v12 = swift_errorRetain(v10);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v30 = v16;
      *(_DWORD *)v15 = 136315138;
      v26 = v15 + 4;
      swift_getErrorValue(v10, v29, v28);
      v17 = Error.localizedDescription.getter(v28[1], v28[2]);
      v19 = v18;
      v27 = sub_10003E8EC(v17, v18, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v26);
      swift_bridgeObjectRelease(v19);
      sub_100016864(v10, 1);
      sub_100016864(v10, 1);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "[TV Connection] Passcode entry failed with error %s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

      sub_100016864(v10, 1);
    }
    else
    {
      sub_100016864(v10, 1);
      sub_100016864(v10, 1);
      swift_errorRelease(v10);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    v20 = static Log.default.getter(v7);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[TV Connection] Passcode entry succeeded", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
}

uint64_t sub_10046ADB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  swift_retain(v2);
  v3(v4, v6);
  swift_release(v2);
  return swift_bridgeObjectRelease(v6);
}

void sub_10046AE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _BYTE v12[24];

  v1 = v0;
  v2 = sub_100047110(&qword_100834EE8);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for TVConnectionManager.State(0);
  v4 = __chkstk_darwin(v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v8 = &v12[-v7 - 8];
  v9 = v1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess(v1 + OBJC_IVAR___NLTVConnectionManager_state, v12, 0, 0);
  sub_1000243C8(v9, (uint64_t)v8);
  sub_1000243C8((uint64_t)v8, (uint64_t)v6);
  v10 = (char *)sub_10046AF28 + 4 * byte_10063DF6C[swift_getEnumCaseMultiPayload(v6, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10046AF28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1000242F8(v4);
  sub_1000242F8(v1);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR___NLTVConnectionManager_sessionClient + 24);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR___NLTVConnectionManager_sessionClient + 32);
  sub_100016804((_QWORD *)(v3 + OBJC_IVAR___NLTVConnectionManager_sessionClient), v6);
  ((void (*)(uint64_t, uint64_t))dispatch thunk of SessionClientProtocol.queryActiveSession())(v6, v7);
  v8 = swift_allocObject(&unk_1007A08C8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v3);
  v9 = (void (*)(uint64_t (*)(uint64_t), uint64_t))((uint64_t (*)(uint64_t))Promise.operation.getter)(v0);
  v11 = v10;
  v12 = swift_allocObject(&unk_1007A08F0, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_10046B7BC;
  *(_QWORD *)(v12 + 24) = v8;
  swift_retain(v8);
  v9(sub_100167CD8, v12);
  swift_release(v8);
  swift_release(v11);
  swift_release(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v0);
}

uint64_t sub_10046B030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  _BYTE v12[24];

  v4 = sub_100047110(&qword_100834EF0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10046B7C8(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v4) != 1)
    return sub_10001BE90((uint64_t)v6, &qword_100834EF0);
  v7 = a2 + 16;
  sub_10001BE90((uint64_t)v6, &qword_100834EF0);
  swift_beginAccess(v7, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = *(_QWORD *)(result + OBJC_IVAR___NLTVConnectionManager_guestPairingNotificationCoordinator);
    swift_retain(v10);

    dispatch thunk of GuestPairingNotificationCoordinator.post()();
    return swift_release(v10);
  }
  return result;
}

id sub_10046B158()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVConnectionManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t *sub_10046B234(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for RemoteParticipant(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for RemoteParticipant(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_10046B320(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1000242F8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for RemoteParticipant(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for RemoteParticipant(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_10046B3F4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for RemoteParticipant(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for RemoteParticipant(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void sub_10046B4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v14 = type metadata accessor for RemoteParticipant(0);
  v4 = __chkstk_darwin(v14);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TVConnectionManager.State(0);
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v7 = sub_100047110(&qword_100834EE0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000243C8(a1, (uint64_t)v10);
  sub_1000243C8(a2, v11);
  v12 = (char *)sub_10046B60C + 4 * byte_10063DF72[swift_getEnumCaseMultiPayload(v10, v5)];
  __asm { BR              X10 }
}

uint64_t sub_10046B60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_1000243C8(v1, v4);
  if (swift_getEnumCaseMultiPayload(v5, v3))
  {
    (*(void (**)(uint64_t, _QWORD))(v0 + 8))(v4, *(_QWORD *)(v6 - 88));
    sub_10001BE90(v1, &qword_100834EE0);
    v7 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v6 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v5, v8);
    v7 = ((uint64_t (*)(uint64_t, uint64_t))static RemoteParticipant.== infix(_:_:))(v4, v2);
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
    v9(v2, v8);
    v9(v4, v8);
    sub_1000242F8(v1);
  }
  return v7 & 1;
}

uint64_t sub_10046B798()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046B7BC(uint64_t a1)
{
  uint64_t v1;

  return sub_10046B030(a1, v1);
}

uint64_t sub_10046B7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100834EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10046B810(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return sub_10046A4F0(a1, a2, v2);
}

void sub_10046B818()
{
  uint64_t v0;

  sub_10046A808(v0);
}

uint64_t sub_10046B820()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10046B84C()
{
  uint64_t *v0;

  return sub_10046A8F4(v0[2], v0[3], v0[4]);
}

uint64_t sub_10046B860(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RemoteParticipant(0) - 8) + 80);
  return sub_1004693B8(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10046B8A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10046B8C8(uint64_t a1, uint64_t a2)
{
  return sub_10046B9E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039B268);
}

uint64_t sub_10046B8D8(uint64_t a1, uint64_t a2)
{
  return sub_10046B9E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039AF90);
}

uint64_t sub_10046B8E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RemoteParticipant(0) - 8) + 80);
  return sub_100469B58(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10046B92C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046B950()
{
  uint64_t v0;

  return sub_100468DD4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10046B960()
{
  uint64_t v0;

  return sub_100468880(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10046B96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100047110((uint64_t *)&unk_100836170);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10046B9E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(sub_100047110((uint64_t *)&unk_100836170) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (_QWORD *)(v3 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a3(a1, a2, v3 + v7, *v8, v8[1]);
}

uint64_t sub_10046BA64(uint64_t a1)
{
  uint64_t v1;

  return sub_100468658(a1, v1);
}

uint64_t sub_10046BA6C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004687B4(a1, v1, (uint64_t (*)(_QWORD))&type metadata accessor for RemoteParticipant, (void (*)(void))&RemoteParticipantLost.participant.getter, (void (*)(char *))sub_100469EB0);
}

uint64_t sub_10046BA9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004687B4(a1, v1, (uint64_t (*)(_QWORD))&type metadata accessor for RemoteParticipantPasswordChallenge, (void (*)(void))&RemoteParticipantPasswordRequired.challenge.getter, (void (*)(char *))sub_10046A1EC);
}

uint64_t sub_10046BAF0(uint64_t a1)
{
  return sub_10016AECC(a1);
}

void static ShapeStyle<>.timeYellow.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "elapsedTimeColors");
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "nonGradientTextColor");

    if (v2)
    {
      Color.init(uiColor:)(v2);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

ValueMetadata *type metadata accessor for DivingDetailChartContainer()
{
  return &type metadata for DivingDetailChartContainer;
}

uint64_t sub_10046BB90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7C48, 1);
}

uint64_t sub_10046BBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[16];
  uint64_t v20;

  v4 = sub_100047110(&qword_100834F28);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v19[-v9];
  v20 = a1;
  v12 = static Axis.Set.vertical.getter(v11);
  v13 = sub_100047110(&qword_100834F30);
  v14 = sub_100028384(&qword_100834F38, &qword_100834F30, (uint64_t)&protocol conformance descriptor for VStack<A>);
  ScrollView.init(_:showsIndicators:content:)(v12, 1, sub_10046C0BC, v19, v13, v14);
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16);
  v15(v7, v10, v4);
  *(_QWORD *)a2 = 0x4014000000000000;
  *(_BYTE *)(a2 + 8) = 0;
  v16 = sub_100047110(&qword_100834F40);
  v15((_BYTE *)(a2 + *(int *)(v16 + 48)), v7, v4);
  v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v17(v10, v4);
  return ((uint64_t (*)(_BYTE *, uint64_t))v17)(v7, v4);
}

__n128 sub_10046BCF0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  __n128 result;
  __int128 v11;
  __int128 v12;
  __n128 v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  char v17;
  char v18;
  __int128 v19;
  char v20;

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_10046BD80(a1, (uint64_t)&v13);
  v5 = v14;
  v6 = v15;
  v7 = v17;
  v8 = v18;
  v9 = v20;
  result = v13;
  v11 = v16;
  v12 = v19;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_OWORD *)(a2 + 56) = v11;
  *(_BYTE *)(a2 + 72) = v7;
  *(_BYTE *)(a2 + 73) = v8;
  *(_OWORD *)(a2 + 80) = v12;
  *(_BYTE *)(a2 + 96) = v9;
  return result;
}

void sub_10046BD80(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  char v26;
  uint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  _QWORD *v50;
  _QWORD *v51;
  id v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  _OWORD v61[5];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[2];
  _OWORD v67[9];
  _OWORD v68[3];

  KeyPath = swift_getKeyPath(&unk_10063E0C0);
  v5 = swift_getKeyPath(&unk_10063E0E8);
  static Published.subscript.getter(v61, a1, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v67[8] = v65;
  v68[0] = v66[0];
  *(_OWORD *)((char *)v68 + 9) = *(_OWORD *)((char *)v66 + 9);
  v67[4] = v61[4];
  v67[5] = v62;
  v67[6] = v63;
  v67[7] = v64;
  v67[0] = v61[0];
  v67[1] = v61[1];
  v67[2] = v61[2];
  v67[3] = v61[3];
  v6 = *((_QWORD *)&v62 + 1);
  v7 = v63;
  swift_bridgeObjectRetain(v63);
  sub_1001B5240((uint64_t *)v67);
  *(_QWORD *)&v61[0] = v6;
  *((_QWORD *)&v61[0] + 1) = v7;
  v8 = sub_100038CA0();
  v9 = Text.init<A>(_:)(v61, &type metadata for String, v8);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "elapsedTimeColors");
  if (v16)
  {
    v17 = v16;
    v60 = a1;
    v18 = objc_msgSend(v16, "nonGradientTextColor");

    if (v18)
    {
      v19 = v13 & 1;
      v20 = Color.init(uiColor:)(v18);
      *(_QWORD *)&v61[0] = v20;
      v21 = Text.foregroundStyle<A>(_:)(v61, v9, v11, v19, v15, &type metadata for Color, &protocol witness table for Color);
      v23 = v22;
      v25 = v24;
      v27 = v26 & 1;
      sub_1000E4458(v9, v11, v19);
      swift_release(v20);
      swift_bridgeObjectRelease(v15, v28, v29, v30, v31, v32, v33, v34);
      v35 = static Font.title3.getter();
      v37 = Text.font(_:)(v35, v21, v23, v27, v25, v36);
      v39 = v38;
      LOBYTE(v20) = v40;
      v42 = v41;
      swift_release(v35);
      LOBYTE(v35) = v20 & 1;
      sub_1000E4458(v21, v23, v27);
      swift_bridgeObjectRelease(v25, v43, v44, v45, v46, v47, v48, v49);
      v50 = (_QWORD *)swift_allocObject(&unk_1007A0CE8, 24, 7);
      v50[2] = v60;
      v51 = (_QWORD *)swift_allocObject(&unk_1007A0D10, 24, 7);
      v51[2] = v60;
      *(_QWORD *)a2 = v37;
      *(_QWORD *)(a2 + 8) = v39;
      *(_BYTE *)(a2 + 16) = v35;
      *(_QWORD *)(a2 + 24) = v42;
      *(_QWORD *)(a2 + 32) = sub_10046C120;
      *(_QWORD *)(a2 + 40) = v50;
      *(_WORD *)(a2 + 48) = 0;
      *(_QWORD *)(a2 + 56) = sub_10012F3AC;
      *(_QWORD *)(a2 + 64) = v51;
      *(_BYTE *)(a2 + 72) = 0;
      v52 = v60;
      sub_1000E439C(v37, v39, v35);
      swift_bridgeObjectRetain(v42);
      sub_1001B1A94((uint64_t)sub_10046C120, v50, 0);
      sub_1001B1A94((uint64_t)sub_10012F3AC, v51, 0);
      sub_1001B1AB4((uint64_t)sub_10012F3AC, v51, 0);
      sub_1001B1AB4((uint64_t)sub_10046C120, v50, 0);
      sub_1000E4458(v37, v39, v35);
      swift_bridgeObjectRelease(v42, v53, v54, v55, v56, v57, v58, v59);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10046C070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v5 = sub_100047110(&qword_100834F20);
  return sub_10046BBA0(v4, a2 + *(int *)(v5 + 44));
}

double sub_10046C0BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_10046BCF0((void *)*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_10046C0CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046C0F0()
{
  return sub_100028384(&qword_100834F48, &qword_100834F50, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t initializeWithCopy for MetricTimescalePicker(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for MetricTimescalePicker(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[2] = v8;
  v9 = a2[4];
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  a1[4] = v9;
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for MetricTimescalePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for MetricTimescalePicker()
{
  return &type metadata for MetricTimescalePicker;
}

uint64_t sub_10046C278(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7C8C, 1);
}

uint64_t sub_10046C288@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[16];
  _OWORD *v26;
  _OWORD v27[2];
  __int128 v28;

  v23 = a1;
  v2 = type metadata accessor for SegmentedPickerStyle(0);
  v24 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100834F58);
  v22 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v27[0] = *v1;
  *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v1 + 9);
  v14 = sub_100047110(&qword_100823EA8);
  Binding.projectedValue.getter(v14);
  v26 = v1;
  v15 = sub_100047110(&qword_100834F60);
  v16 = sub_100204698();
  v17 = sub_100028384(&qword_100834F68, &qword_100834F60, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v18 = Picker<>.init(_:selection:content:)(v21, v9, v11 & 1, v13, &v28, sub_10046CECC, v25, &type metadata for MetricDataProviderTimeScale, v15, v16, v17);
  SegmentedPickerStyle.init()(v18);
  v19 = sub_100028384(&qword_100834F70, &qword_100834F58, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  View.pickerStyle<A>(_:)(v4, v5, v2, v19, &protocol witness table for SegmentedPickerStyle);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v5);
}

uint64_t sub_10046C490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  BOOL v23;
  void *v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  char v35;
  char v36;
  id v37;
  NSString v38;
  char *v39;
  id v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  unint64_t v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  NSString v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  char v71;
  char v72;
  id v73;
  NSString v74;
  id v75;
  uint64_t v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  unint64_t v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  NSString v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  CHWorkoutDetailHeartRateTableViewCell *v104;
  char v105;
  char v106;
  void *v107;
  id v108;
  NSString v109;
  id v110;
  uint64_t v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  unint64_t v114;
  SEL v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  SEL v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  NSString v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  CHWorkoutDetailHeartRateTableViewCell *v140;
  char v141;
  char v142;
  uint64_t v143;
  char v144;
  id v145;
  NSString v146;
  id v147;
  uint64_t v148;
  CHWorkoutDetailHeartRateTableViewCell *v149;
  CHWorkoutDetailHeartRateTableViewCell *v150;
  uint64_t v151;
  SEL v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  SEL v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v175;
  uint64_t v176;
  id v177;
  CHWorkoutDetailHeartRateTableViewCell *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  CHWorkoutDetailHeartRateTableViewCell *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  CHWorkoutDetailHeartRateTableViewCell *v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  CHWorkoutDetailHeartRateTableViewCell *v197;
  uint64_t v198;
  __int16 v199;
  uint64_t v200;
  __int16 v201;
  char v202;

  v182 = a2;
  v3 = sub_100047110(&qword_100834F78);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v185 = (uint64_t)&v175 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v184 = (uint64_t)&v175 - v7;
  __chkstk_darwin(v8);
  v183 = (uint64_t)&v175 - v9;
  __chkstk_darwin(v10);
  v180 = (char *)&v175 - v11;
  __chkstk_darwin(v12);
  v191 = (uint64_t)&v175 - v13;
  __chkstk_darwin(v14);
  v190 = (uint64_t)&v175 - v15;
  v16 = sub_100047110(&qword_100834F80);
  __chkstk_darwin(v16);
  v181 = (uint64_t)&v175 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v175 - v20;
  v22 = 1;
  v23 = *(_BYTE *)(a1 + 40) == 1;
  v179 = a1;
  if (v23 && !*(_QWORD *)(a1 + 32))
  {
    v24 = (void *)objc_opt_self(NSBundle);
    v25 = objc_msgSend(v24, "mainBundle");
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v194 = v28;
    v195 = v30;
    v187 = sub_100038CA0();
    v31 = Text.init<A>(_:)(&v194, &type metadata for String, v187);
    v33 = v32;
    v188 = v34;
    v194 = v31;
    v195 = v32;
    v36 = v35 & 1;
    v196 = v35 & 1;
    v197 = v34;
    v198 = 0;
    v199 = 1;
    v200 = 0;
    v201 = 1;
    v202 = 0;
    v37 = objc_msgSend(v24, "mainBundle");
    v38 = String._bridgeToObjectiveC()();
    v39 = v21;
    v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, 0, 0);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v21 = v39;
    v192 = v41;
    v193 = v43;
    v44 = sub_100047110(&qword_100834F88);
    v45 = sub_10046CED4();
    View.accessibilityLabel<A>(_:)(&v192, v44, &type metadata for String, v45, v187);
    swift_bridgeObjectRelease(v43, v46, v47, v48, v49, v50, v51, v52);
    sub_1000E4458(v31, v33, v36);
    swift_bridgeObjectRelease(v188, v53, v54, v55, v56, v57, v58, v59);
    v22 = 0;
  }
  v189 = v21;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v21, v22, 1, v3, v19);
  v60 = (void *)objc_opt_self(NSBundle);
  v177 = v60;
  v61 = objc_msgSend(v60, "mainBundle");
  v62 = String._bridgeToObjectiveC()();
  v63 = objc_msgSend(v61, "localizedStringForKey:value:table:", v62, 0, 0);

  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
  v66 = v65;

  v194 = v64;
  v195 = v66;
  v186 = sub_100038CA0();
  v67 = Text.init<A>(_:)(&v194, &type metadata for String, v186);
  v69 = v68;
  v178 = v70;
  v194 = v67;
  v195 = v68;
  v72 = v71 & 1;
  v196 = v71 & 1;
  v197 = v70;
  v198 = 1;
  v199 = 1;
  v200 = 1;
  v201 = 1;
  v202 = 0;
  v73 = objc_msgSend(v60, "mainBundle");
  v74 = String._bridgeToObjectiveC()();
  v75 = objc_msgSend(v73, "localizedStringForKey:value:table:", v74, 0, 0);

  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
  v78 = v77;

  v192 = v76;
  v193 = v78;
  v79 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100047110(&qword_100834F88);
  v188 = v79;
  v187 = sub_10046CED4();
  v80 = v186;
  View.accessibilityLabel<A>(_:)(&v192, v79, &type metadata for String, v187, v186);
  swift_bridgeObjectRelease(v78, v81, v82, v83, v84, v85, v86, v87);
  sub_1000E4458(v67, v69, v72);
  swift_bridgeObjectRelease(v178, v88, v89, v90, v91, v92, v93, v94);
  v95 = v177;
  v96 = objc_msgSend(v177, "mainBundle");
  v97 = String._bridgeToObjectiveC()();
  v98 = objc_msgSend(v96, "localizedStringForKey:value:table:", v97, 0, 0);

  v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v101 = v100;

  v194 = v99;
  v195 = v101;
  v176 = Text.init<A>(_:)(&v194, &type metadata for String, v80);
  v103 = v102;
  v178 = v104;
  v194 = v176;
  v195 = v102;
  v106 = v105 & 1;
  v196 = v105 & 1;
  v197 = v104;
  v198 = 2;
  v199 = 1;
  v200 = 2;
  v201 = 1;
  v202 = 0;
  v107 = v95;
  v108 = objc_msgSend(v95, "mainBundle");
  v109 = String._bridgeToObjectiveC()();
  v110 = objc_msgSend(v108, "localizedStringForKey:value:table:", v109, 0, 0);

  v111 = static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
  v113 = v112;

  v192 = v111;
  v193 = v113;
  v114 = v186;
  View.accessibilityLabel<A>(_:)(&v192, v188, &type metadata for String, v187, v186);
  swift_bridgeObjectRelease(v113, v115, v116, v117, v118, v119, v120, v121);
  sub_1000E4458(v176, v103, v106);
  swift_bridgeObjectRelease(v178, v122, v123, v124, v125, v126, v127, v128);
  v129 = objc_msgSend(v107, "mainBundle");
  v130 = String._bridgeToObjectiveC()();
  v131 = objc_msgSend(v129, "localizedStringForKey:value:table:", v130, 0, 0);

  v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
  v134 = v133;

  v194 = v132;
  v195 = v134;
  v135 = v114;
  v136 = Text.init<A>(_:)(&v194, &type metadata for String, v114);
  v138 = v137;
  v140 = v139;
  v142 = v141 & 1;
  v143 = sub_100421550(*(_QWORD *)(v179 + 48));
  v194 = v136;
  v195 = v138;
  v196 = v142;
  v197 = v140;
  v198 = v143;
  v199 = v144 & 1;
  v200 = v143;
  v201 = v199;
  v202 = 0;
  v145 = objc_msgSend(v107, "mainBundle");
  v146 = String._bridgeToObjectiveC()();
  v147 = objc_msgSend(v145, "localizedStringForKey:value:table:", v146, 0, 0);

  v148 = static String._unconditionallyBridgeFromObjectiveC(_:)(v147);
  v150 = v149;

  v192 = v148;
  v193 = v150;
  v151 = (uint64_t)v180;
  View.accessibilityLabel<A>(_:)(&v192, v188, &type metadata for String, v187, v135);
  swift_bridgeObjectRelease(v150, v152, v153, v154, v155, v156, v157, v158);
  sub_1000E4458(v136, v138, v142);
  swift_bridgeObjectRelease(v140, v159, v160, v161, v162, v163, v164, v165);
  v166 = v181;
  sub_100021CC0((uint64_t)v189, v181, &qword_100834F80);
  v167 = v190;
  v168 = v183;
  sub_100021CC0(v190, v183, &qword_100834F78);
  v169 = v191;
  v170 = v184;
  sub_100021CC0(v191, v184, &qword_100834F78);
  v171 = v185;
  sub_100021CC0(v151, v185, &qword_100834F78);
  v172 = v182;
  sub_100021CC0(v166, v182, &qword_100834F80);
  v173 = (int *)sub_100047110(&qword_100834FC8);
  sub_100021CC0(v168, v172 + v173[12], &qword_100834F78);
  sub_100021CC0(v170, v172 + v173[16], &qword_100834F78);
  sub_100021CC0(v171, v172 + v173[20], &qword_100834F78);
  sub_10001BE90(v151, &qword_100834F78);
  sub_10001BE90(v169, &qword_100834F78);
  sub_10001BE90(v167, &qword_100834F78);
  sub_10001BE90((uint64_t)v189, &qword_100834F80);
  sub_10001BE90(v171, &qword_100834F78);
  sub_10001BE90(v170, &qword_100834F78);
  sub_10001BE90(v168, &qword_100834F78);
  return sub_10001BE90(v166, &qword_100834F80);
}

uint64_t sub_10046CE8C@<X0>(uint64_t a1@<X8>)
{
  return sub_10046C288(a1);
}

uint64_t sub_10046CECC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10046C490(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10046CED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834F90;
  if (!qword_100834F90)
  {
    v1 = sub_100007050(&qword_100834F88);
    sub_10046CF58();
    sub_100028384(&qword_100834FB8, &qword_100834FC0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834F90);
  }
  return result;
}

unint64_t sub_10046CF58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834F98;
  if (!qword_100834F98)
  {
    v1 = sub_100007050(&qword_100834FA0);
    sub_100028384(&qword_100834FA8, &qword_100834FB0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100834F98);
  }
  return result;
}

uint64_t sub_10046CFDC()
{
  _QWORD v1[4];

  v1[0] = sub_100007050(&qword_100834F58);
  v1[1] = type metadata accessor for SegmentedPickerStyle(255);
  v1[2] = sub_100028384(&qword_100834F70, &qword_100834F58, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v1[3] = &protocol witness table for SegmentedPickerStyle;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
}

uint64_t sub_10046D060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + *(int *)(v6 + 36));
  v8 = *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v6 + 40)) + 16);
  swift_bridgeObjectRetain(v7);
  sub_100363920(v9, v8);
  v11 = v10;
  swift_bridgeObjectRelease(v7, v12, v13, v14, v15, v16, v17, v18);
  v36 = v11;
  KeyPath = swift_getKeyPath(&unk_10063E240);
  sub_10046E02C(v1, (uint64_t)v5);
  v20 = *(unsigned __int8 *)(v3 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_1007A0E38, v21 + v4, v20 | 7);
  sub_10046E12C((uint64_t)v5, v22 + v21);
  v23 = swift_allocObject(&unk_1007A0E60, 32, 7);
  *(_QWORD *)(v23 + 16) = sub_10046E170;
  *(_QWORD *)(v23 + 24) = v22;
  v24 = sub_100047110(&qword_10081EF78);
  v25 = sub_100047110(&qword_100835078);
  v26 = sub_100028384(&qword_10081EF88, &qword_10081EF78, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = sub_100007050(&qword_100835080);
  v28 = sub_100007050(&qword_100835088);
  v29 = sub_10046E1E8();
  v34 = v28;
  v35 = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v34, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v34 = v27;
  v35 = OpaqueTypeConformance2;
  v31 = swift_getOpaqueTypeConformance2(&v34, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  return ForEach<>.init(_:id:content:)(&v36, KeyPath, sub_1000E25AC, v23, v24, v25, v26, &protocol witness table for Int, v31);
}

int *sub_10046D240@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *result;
  void *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  unint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t OpaqueTypeConformance2;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD v55[2];

  v54 = a1;
  v50 = a4;
  v49 = type metadata accessor for WorkoutViewStyle(0);
  v6 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AccessibilityChildBehavior(0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008350A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100835088);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_100835080);
  v46 = *(_QWORD *)(v17 - 8);
  v47 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100835078);
  v44 = *(_QWORD *)(v20 - 8);
  v45 = v20;
  __chkstk_darwin(v20);
  v43 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a3;
  sub_10046D580(a3, a2, (uint64_t)v13);
  result = (int *)(id)HKWorkoutMetricTypeDescription(a2);
  if (result)
  {
    v23 = result;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v26 = v25;

    v27 = sub_10046E26C();
    View.accessibilityIdentifier(_:)(v24, v26, v11, v27);
    swift_bridgeObjectRelease(v26, v28, v29, v30, v31, v32, v33, v34);
    v35 = sub_10001BE90((uint64_t)v13, &qword_1008350A0);
    static AccessibilityChildBehavior.combine.getter(v35);
    v36 = sub_10046E1E8();
    View.accessibilityElement(children:)(v10, v14, v36);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v53);
    sub_10001BE90((uint64_t)v16, &qword_100835088);
    result = (int *)type metadata accessor for MirrorHeartRateZonesMetricsPlatter(0);
    if ((v54 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v37 = *(_QWORD *)((char *)v51 + result[10]);
      if (*(_QWORD *)(v37 + 16) > v54)
      {
        v39 = v48;
        v38 = v49;
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v48, v37+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v54, v49);
        v55[0] = v14;
        v55[1] = v36;
        OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v55, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
        v41 = v43;
        v42 = v47;
        View.workoutViewStyle(_:)(v39, v47, OpaqueTypeConformance2);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v39, v38);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v42);
        return (int *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v50, v41, v45);
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10046D580@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[5];

  v51 = a2;
  v53 = a3;
  v54 = sub_100047110(&qword_10081EFB0);
  v49 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100047110(&qword_1008350C0);
  __chkstk_darwin(v52);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ZoneViewType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ZoneMetricView(0, v10);
  v50 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[2];
  v17 = swift_retain(v16);
  v18 = HeartRateMetricsPublisher.liveHeartRateZones.getter(v17);
  v20 = swift_release(v16);
  if (v18)
  {
    v21 = dispatch thunk of LiveZones.zones.getter(v19);
    swift_release(v18);
    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v40 = v21;
      else
        v40 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v18 = _CocoaArrayWrapper.endIndex.getter(v40);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v21, v41, v42, v43, v44, v45, v46, v47);
    }
    else
    {
      v18 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v21, v22, v23, v24, v25, v26, v27, v28);
  }
  if (v51 == 38 && v18 <= 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for ZoneViewType.heartRateZone(_:), v8, v20);
    type metadata accessor for LiveHeartRateZone(0);
    v29 = static LiveHeartRateZone.canonicals()();
    v30 = sub_100047110(&qword_1008350C8);
    swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
    v31 = LiveZones.init(zones:currentZoneIndex:isStale:)(v29, 0, 1, 1);
    v55[3] = v30;
    v55[4] = sub_100028384(&qword_1008350D0, &qword_1008350C8, (uint64_t)&protocol conformance descriptor for LiveZones<A>);
    v55[0] = v31;
    ZoneMetricView.init(zoneViewType:liveZones:value:isStale:)(v12, v55, 0, 1, 1);
    v32 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v7, v15, v13);
    swift_storeEnumTagMultiPayload(v7, v52, 0);
    v33 = sub_1000083D8(&qword_1008350B8, (uint64_t (*)(uint64_t))&type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v33, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
    _ConditionalContent<>.init(storage:)(v7, v13, v54, v33, OpaqueTypeConformance2);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v13);
  }
  else
  {
    static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(v51, a1[3], a1[4], *a1);
    v36 = v49;
    v37 = v54;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v7, v5, v54);
    swift_storeEnumTagMultiPayload(v7, v52, 1);
    v38 = sub_1000083D8(&qword_1008350B8, (uint64_t (*)(uint64_t))&type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
    v39 = swift_getOpaqueTypeConformance2(v38, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
    _ConditionalContent<>.init(storage:)(v7, v13, v37, v38, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v5, v37);
  }
}

_QWORD *sub_10046D910(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if (a1[2] >= 3uLL && a1[4] == 38)
  {
    v2 = a1[5];
    swift_bridgeObjectRetain(a1);
    if (v2 == 5)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
        v1 = sub_1004DEE94(v1);
      *((_OWORD *)v1 + 2) = xmmword_10063E190;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a1);
  }
  return v1;
}

uint64_t *sub_10046D990(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = (void *)a2[3];
    v10 = (void *)a2[4];
    a1[3] = (uint64_t)v9;
    a1[4] = (uint64_t)v10;
    v11 = a3[8];
    v22 = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    v13 = type metadata accessor for MetricPlatterConstants(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain(v4);
    swift_retain(v8);
    v15 = v9;
    v16 = v10;
    v14(v22, v12, v13);
    v17 = a3[9];
    v18 = a3[10];
    v19 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)v7 + v17) = v19;
    v20 = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)v7 + v18) = v20;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
  }
  return v7;
}

uint64_t sub_10046DA8C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 16));

  v4 = a1 + a2[8];
  v5 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10]));
}

uint64_t *sub_10046DB0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;

  v7 = *a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v8 = a2[2];
  v9 = (void *)a2[3];
  a1[2] = v8;
  a1[3] = (uint64_t)v9;
  v10 = (void *)a2[4];
  a1[4] = (uint64_t)v10;
  v11 = a3[8];
  v22 = (char *)a1 + v11;
  v12 = (char *)a2 + v11;
  v13 = type metadata accessor for MetricPlatterConstants(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain(v7);
  swift_retain(v8);
  v15 = v9;
  v16 = v10;
  v14(v22, v12, v13);
  v17 = a3[9];
  v18 = a3[10];
  v19 = *(uint64_t *)((char *)a2 + v17);
  *(uint64_t *)((char *)a1 + v17) = v19;
  v20 = *(uint64_t *)((char *)a2 + v18);
  *(uint64_t *)((char *)a1 + v18) = v20;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  return a1;
}

uint64_t *sub_10046DBE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  a1[1] = a2[1];
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a2[3];
  v11 = (void *)a1[3];
  a1[3] = (uint64_t)v10;
  v12 = v10;

  v13 = (void *)a2[4];
  v14 = (void *)a1[4];
  a1[4] = (uint64_t)v13;
  v15 = v13;

  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[9];
  v21 = *(uint64_t *)((char *)a2 + v20);
  v22 = *(uint64_t *)((char *)a1 + v20);
  *(uint64_t *)((char *)a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[10];
  v24 = *(uint64_t *)((char *)a2 + v23);
  v25 = *(uint64_t *)((char *)a1 + v23);
  *(uint64_t *)((char *)a1 + v23) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  return a1;
}

uint64_t sub_10046DCDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  return a1;
}

uint64_t *sub_10046DD6C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_release(v8);
  v9 = (void *)a1[3];
  a1[3] = a2[3];

  v10 = (void *)a1[4];
  a1[4] = a2[4];

  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[9];
  v16 = *(uint64_t *)((char *)a1 + v15);
  *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[10];
  v18 = *(uint64_t *)((char *)a1 + v17);
  *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t sub_10046DE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10046DE44);
}

uint64_t sub_10046DE44(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricPlatterConstants(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_10046DEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10046DECC);
}

char *sub_10046DECC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MetricPlatterConstants(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MirrorHeartRateZonesMetricsPlatter(uint64_t a1)
{
  uint64_t result;

  result = qword_100835028;
  if (!qword_100835028)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorHeartRateZonesMetricsPlatter);
  return result;
}

uint64_t sub_10046DF7C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_10063E1D8;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MetricPlatterConstants(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10046E01C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7CDC, 1);
}

uint64_t sub_10046E02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10046E070()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v1 = (int *)type metadata accessor for MirrorHeartRateZonesMetricsPlatter(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v7 + 16));

  v8 = v7 + v1[8];
  v9 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[9]), v10, v11, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[10]), v17, v18, v19, v20, v21, v22, v23);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10046E12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int *sub_10046E170@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MirrorHeartRateZonesMetricsPlatter(0) - 8) + 80);
  return sub_10046D240(a1, a2, (_QWORD *)(v3 + ((v7 + 16) & ~v7)), a3);
}

uint64_t sub_10046E1C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10046E1E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835090;
  if (!qword_100835090)
  {
    v1 = sub_100007050(&qword_100835088);
    sub_10046E26C();
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835090);
  }
  return result;
}

unint64_t sub_10046E26C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835098;
  if (!qword_100835098)
  {
    v1 = sub_100007050(&qword_1008350A0);
    sub_10046E2D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100835098);
  }
  return result;
}

unint64_t sub_10046E2D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1008350A8;
  if (!qword_1008350A8)
  {
    v1 = sub_100007050(&qword_1008350B0);
    v2 = sub_1000083D8(&qword_1008350B8, (uint64_t (*)(uint64_t))&type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008350A8);
  }
  return result;
}

unint64_t sub_10046E364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008350D8;
  if (!qword_1008350D8)
  {
    v1 = sub_100007050(&qword_1008350E0);
    sub_100028384(&qword_1008350E8, &qword_1008350F0, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10046E3E8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008350D8);
  }
  return result;
}

unint64_t sub_10046E3E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1008350F8;
  if (!qword_1008350F8)
  {
    v1 = sub_100007050(&qword_100835100);
    v2 = sub_100007050(&qword_100835080);
    v4 = sub_100007050(&qword_100835088);
    v5 = sub_10046E1E8();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1008350F8);
  }
  return result;
}

uint64_t sub_10046E4A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10063E370);
  v5 = swift_getKeyPath(&unk_10063E398);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10046E520(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10063E370);
  v5 = swift_getKeyPath(&unk_10063E398);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

id sub_10046E58C()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSLengthFormatter), "init");
  result = objc_msgSend(v0, "setUnitStyle:", 1);
  qword_100835108 = (uint64_t)v0;
  return result;
}

uint64_t sub_10046E5D8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10063E328);
  v2 = swift_getKeyPath(&unk_10063E350);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_10046E648()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(void **)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_dataCalculator];
  v2 = *(_QWORD *)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workout];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workoutActivity];
  v4 = swift_allocObject(&unk_1007A0F10, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v8[4] = sub_100471140;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10046F1D8;
  v8[3] = &unk_1007A0F28;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = v0;
  objc_msgSend(v1, "swimmingSplitsForWorkout:workoutActivity:completion:", v2, v3, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

void sub_10046E738(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  id v33;
  char *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t KeyPath;
  uint64_t v44;
  void (*v45)(uint64_t *, _QWORD);
  uint64_t *v46;
  uint64_t *v47;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  const char *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  double v93;
  const char *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  char v101;
  char v102;
  uint64_t v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  double v111;
  id v112;
  id v113;
  const char *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  double v124;
  uint64_t i;
  uint64_t v126;
  int v127;
  uint64_t v128;
  const char *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  double v136;
  id v137;
  id v138;
  void *v139;
  int64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  id v144;
  NSString v145;
  id v146;
  uint64_t v147;
  CHWorkoutDetailHeartRateTableViewCell *v148;
  CHWorkoutDetailHeartRateTableViewCell *v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  __n128 v153;
  uint64_t v154;
  const char *v155;
  const char *v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  _BOOL8 v167;
  uint64_t v168;
  char v169;
  unint64_t v170;
  _QWORD *v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  const char *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  uint64_t v184;
  int64_t v185;
  id v188;
  int64_t v189;
  unint64_t v190;
  uint64_t v191;
  int64_t v192;
  char *v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  _QWORD v198[3];
  char v199[8];
  uint64_t v200;
  uint64_t v201[4];

  if (a2)
  {
    v4 = swift_errorRetain(a2);
    v5 = static os_log_type_t.error.getter(v4);
    v6 = (void *)HKLogWorkouts;
    v7 = v5;
    if (os_log_type_enabled(HKLogWorkouts, v5))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v8 = v6;
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v201[0] = v10;
      *(_DWORD *)v9 = 136315138;
      swift_getErrorValue(a2, v199, v198);
      v11 = Error.localizedDescription.getter(v198[1], v198[2]);
      v13 = (CHWorkoutDetailHeartRateTableViewCell *)v12;
      v200 = sub_10003E8EC(v11, v12, v201);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v9 + 4);
      swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v8, v7, "Error loading swimming splits: %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
    return;
  }
  if (!a1)
  {
LABEL_96:
    sub_10046FF50();
    return;
  }
  v184 = a1 + 64;
  v21 = 1 << *(_BYTE *)(a1 + 32);
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v190 = v22 & *(_QWORD *)(a1 + 64);
  v197 = (uint64_t *)&a3[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_averagePaces];
  v185 = (unint64_t)(v21 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v23 = 0;
LABEL_10:
  if (!v190)
  {
    v27 = __OFADD__(v23, 1);
    v28 = v23 + 1;
    v26 = a1;
    if (v27)
      goto LABEL_103;
    if (v28 < v185)
    {
      v29 = *(_QWORD *)(v184 + 8 * v28);
      if (v29)
      {
LABEL_22:
        v190 = (v29 - 1) & v29;
        v189 = v28;
        v25 = __clz(__rbit64(v29)) + (v28 << 6);
        goto LABEL_23;
      }
      v30 = v28 + 1;
      if (v28 + 1 < v185)
      {
        v29 = *(_QWORD *)(v184 + 8 * v30);
        if (v29)
          goto LABEL_21;
        v30 = v28 + 2;
        if (v28 + 2 < v185)
        {
          v29 = *(_QWORD *)(v184 + 8 * v30);
          if (!v29)
          {
            v30 = v28 + 3;
            if (v28 + 3 < v185)
            {
              v29 = *(_QWORD *)(v184 + 8 * v30);
              if (v29)
                goto LABEL_21;
              while (1)
              {
                v28 = v30 + 1;
                if (__OFADD__(v30, 1))
                  goto LABEL_104;
                if (v28 >= v185)
                  break;
                v29 = *(_QWORD *)(v184 + 8 * v28);
                ++v30;
                if (v29)
                  goto LABEL_22;
              }
            }
            goto LABEL_95;
          }
LABEL_21:
          v28 = v30;
          goto LABEL_22;
        }
      }
    }
LABEL_95:
    swift_release(a1);
    goto LABEL_96;
  }
  v24 = __clz(__rbit64(v190));
  v190 &= v190 - 1;
  v189 = v23;
  v25 = v24 | (v23 << 6);
  v26 = a1;
LABEL_23:
  v31 = 8 * v25;
  v32 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)(v26 + 56) + v31);
  v188 = *(id *)(*(_QWORD *)(v26 + 48) + v31);
  v33 = objc_msgSend(v188, "integerValue", swift_bridgeObjectRetain(v32).n128_f64[0]);
  v34 = a3;
  v35 = sub_100471238((uint64_t)v32, (uint64_t)v34);
  swift_bridgeObjectRelease(v32, v36, v37, v38, v39, v40, v41, v42);

  KeyPath = swift_getKeyPath(&unk_10063E328);
  v44 = swift_getKeyPath(&unk_10063E350);
  v45 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(v201, v34, KeyPath, v44);
  v47 = v46;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v46);
  v200 = *v47;
  *v47 = 0x8000000000000000;
  sub_1003FFEE4((uint64_t)v35, (uint64_t)v33, isUniquelyReferenced_nonNull_native);
  v49 = (CHWorkoutDetailHeartRateTableViewCell *)*v47;
  *v47 = v200;
  swift_bridgeObjectRelease(v49, v50, v51, v52, v53, v54, v55, v56);
  v45(v201, 0);
  swift_release(KeyPath);
  swift_release(v44);
  v57 = swift_getKeyPath(&unk_10063E328);
  v58 = swift_getKeyPath(&unk_10063E350);
  v193 = v34;
  static Published.subscript.getter(v201, v34, v57, v58);
  swift_release(v57);
  swift_release(v58);
  v59 = 0;
  v191 = v201[0] + 64;
  v194 = v201[0];
  v60 = 1 << *(_BYTE *)(v201[0] + 32);
  if (v60 < 64)
    v61 = ~(-1 << v60);
  else
    v61 = -1;
  v62 = v61 & *(_QWORD *)(v201[0] + 64);
  v192 = (unint64_t)(v60 + 63) >> 6;
  while (1)
  {
    if (v62)
    {
      v72 = __clz(__rbit64(v62));
      v73 = (v62 - 1) & v62;
      v74 = v72 | (v59 << 6);
    }
    else
    {
      v75 = v59 + 1;
      if (__OFADD__(v59, 1))
        goto LABEL_101;
      if (v75 >= v192)
      {
LABEL_9:

        swift_release(v194);
        v23 = v189;
        goto LABEL_10;
      }
      v76 = *(_QWORD *)(v191 + 8 * v75);
      ++v59;
      if (!v76)
      {
        v59 = v75 + 1;
        if (v75 + 1 >= v192)
          goto LABEL_9;
        v76 = *(_QWORD *)(v191 + 8 * v59);
        if (!v76)
        {
          v59 = v75 + 2;
          if (v75 + 2 >= v192)
            goto LABEL_9;
          v76 = *(_QWORD *)(v191 + 8 * v59);
          if (!v76)
          {
            v77 = v75 + 3;
            if (v77 >= v192)
              goto LABEL_9;
            v76 = *(_QWORD *)(v191 + 8 * v77);
            if (!v76)
            {
              while (1)
              {
                v59 = v77 + 1;
                if (__OFADD__(v77, 1))
                  goto LABEL_102;
                if (v59 >= v192)
                  goto LABEL_9;
                v76 = *(_QWORD *)(v191 + 8 * v59);
                ++v77;
                if (v76)
                  goto LABEL_44;
              }
            }
            v59 = v77;
          }
        }
      }
LABEL_44:
      v73 = (v76 - 1) & v76;
      v74 = __clz(__rbit64(v76)) + (v59 << 6);
    }
    v78 = 8 * v74;
    v79 = *(_QWORD *)(v194 + 56);
    v196 = *(_QWORD *)(*(_QWORD *)(v194 + 48) + v78);
    v80 = *(_QWORD *)(v79 + v78);
    v81 = v80 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v80 >> 62)
    {
      if (v80 < 0)
        v175 = *(_QWORD *)(v79 + v78);
      else
        v175 = v80 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)(v79 + v78), 2);
      v176 = _CocoaArrayWrapper.endIndex.getter(v175);
      v82 = v176;
      if (!v176)
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v80, v177, v178, v179, v180, v181, v182, v183);
        v91 = 0.0;
        v101 = 1;
        goto LABEL_53;
      }
      if (v176 < 1)
        goto LABEL_98;
    }
    else
    {
      v82 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*(_QWORD *)(v79 + v78), 2);
      if (!v82)
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v80, v83, v84, v85, v86, v87, v88, v89);
        v91 = 0.0;
        v102 = 1;
LABEL_57:
        v103 = *(_QWORD *)(v81 + 16);
        v101 = v102;
        goto LABEL_58;
      }
    }
    v90 = 0;
    v91 = 0.0;
    do
    {
      if ((v80 & 0xC000000000000001) != 0)
        v92 = specialized _ArrayBuffer._getElementSlowPath(_:)(v90, v80);
      else
        swift_retain(*(_QWORD *)(v80 + 8 * v90 + 32));
      ++v90;
      v93 = *(double *)(v92 + 64);
      swift_release(v92);
      v91 = v91 + v93;
    }
    while (v82 != v90);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v80, v94, v95, v96, v97, v98, v99, v100);
    v101 = 0;
    v102 = 0;
    v81 = v80 & 0xFFFFFFFFFFFFFF8;
    if (!((unint64_t)v80 >> 62))
      goto LABEL_57;
LABEL_53:
    if (v80 < 0)
      v81 = v80;
    swift_bridgeObjectRetain(v80);
    v103 = _CocoaArrayWrapper.endIndex.getter(v81);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v80, v104, v105, v106, v107, v108, v109, v110);
LABEL_58:
    v111 = (double)v103;
    v112 = objc_msgSend(*(id *)&v193[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager], "fitnessUIFormattingManager", v184);
    v113 = objc_msgSend(v112, "stringWithDuration:durationFormat:", 1, round(v91 / (double)v103));

    if (v113)
    {
      v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
      v123 = v122;

      v124 = 0.0;
      if ((v101 & 1) != 0)
        goto LABEL_71;
    }
    else
    {
      v121 = 0;
      v123 = 0xE000000000000000;
      v124 = 0.0;
      if ((v101 & 1) != 0)
        goto LABEL_71;
    }
    if (v82 < 1)
      goto LABEL_99;
    swift_bridgeObjectRetain(v80);
    for (i = 0; i != v82; ++i)
    {
      if ((v80 & 0xC000000000000001) != 0)
        v126 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v80);
      else
        swift_retain(*(_QWORD *)(v80 + 8 * i + 32));
      v127 = *(unsigned __int8 *)(v126 + 128);
      v128 = *(_QWORD *)(v126 + 120);
      swift_release(v126);
      v136 = (double)v128;
      if (v127)
        v136 = 0.0;
      v124 = v124 + v136;
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v80, v129, v130, v131, v132, v133, v134, v135);
LABEL_71:
    v195 = v73;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v80, v114, v115, v116, v117, v118, v119, v120);
    v137 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v124 / v111);
    v138 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:", v137, 1);
    if (v138)
    {
      v139 = v138;
      v140 = v59;
      v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v138);
      v143 = v142;

    }
    else
    {
      v140 = v59;
      v141 = 0;
      v143 = 0xE000000000000000;
    }
    v144 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v145 = String._bridgeToObjectiveC()();
    v146 = objc_msgSend(v144, "localizedStringForKey:value:table:", v145, 0, 0);

    v147 = static String._unconditionallyBridgeFromObjectiveC(_:)(v146);
    v149 = v148;

    v150 = sub_100047110((uint64_t *)&unk_100827460);
    v151 = swift_allocObject(v150, 112, 7);
    *(_OWORD *)(v151 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v151 + 56) = &type metadata for String;
    v152 = sub_100038CF8();
    *(_QWORD *)(v151 + 32) = v121;
    *(_QWORD *)(v151 + 40) = v123;
    *(_QWORD *)(v151 + 96) = &type metadata for String;
    *(_QWORD *)(v151 + 104) = v152;
    *(_QWORD *)(v151 + 64) = v152;
    *(_QWORD *)(v151 + 72) = v141;
    *(_QWORD *)(v151 + 80) = v143;
    v154 = String.init(format:_:)(v147, v149, v151, v153);
    v156 = v155;
    swift_bridgeObjectRelease(v149, v155, v157, v158, v159, v160, v161, v162);
    swift_beginAccess(v197, v201, 33, 0);
    v163 = swift_isUniquelyReferenced_nonNull_native(*v197);
    v200 = *v197;
    v164 = v200;
    *v197 = 0x8000000000000000;
    v165 = sub_100030DDC(v196);
    v166 = *(_QWORD *)(v164 + 16);
    v167 = (v64 & 1) == 0;
    v168 = v166 + v167;
    if (__OFADD__(v166, v167))
      break;
    v169 = (char)v64;
    if (*(_QWORD *)(v164 + 24) >= v168)
    {
      if ((v163 & 1) == 0)
        sub_100403E10();
    }
    else
    {
      sub_1003FC7EC(v168, v163);
      v170 = sub_100030DDC(v196);
      if ((v169 & 1) != (v64 & 1))
        goto LABEL_105;
      v165 = v170;
    }
    v59 = v140;
    v171 = (_QWORD *)v200;
    v62 = v195;
    if ((v169 & 1) != 0)
    {
      v63 = *(_QWORD *)(v200 + 56) + 16 * v165;
      swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v63 + 8), v64, v65, v66, v67, v68, v69, v70);
      *(_QWORD *)v63 = v154;
      *(_QWORD *)(v63 + 8) = v156;
    }
    else
    {
      *(_QWORD *)(v200 + 8 * (v165 >> 6) + 64) |= 1 << v165;
      *(_QWORD *)(v171[6] + 8 * v165) = v196;
      v172 = (uint64_t *)(v171[7] + 16 * v165);
      *v172 = v154;
      v172[1] = (uint64_t)v156;
      v173 = v171[2];
      v27 = __OFADD__(v173, 1);
      v174 = v173 + 1;
      if (v27)
        goto LABEL_100;
      v171[2] = v174;
    }
    v71 = (CHWorkoutDetailHeartRateTableViewCell *)*v197;
    *v197 = (uint64_t)v171;
    swift_bridgeObjectRelease(v71, v64, v65, v66, v67, v68, v69, v70);
    swift_endAccess(v201);

  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_10046F1D8(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2, void *a3)
{
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  void (*v6)(CHWorkoutDetailHeartRateTableViewCell *, void *);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v4 = a2;
  v6 = *(void (**)(CHWorkoutDetailHeartRateTableViewCell *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    v8 = sub_100047110(&qword_1008351A8);
    v9 = sub_1004650F0();
    v4 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, v7, v8, v9);
  }
  swift_retain(v5);
  v10 = a3;
  v6(v4, a3);
  swift_release(v5);

  swift_bridgeObjectRelease(v4, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_10046F284()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  unint64_t v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  const char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;

  KeyPath = swift_getKeyPath(&unk_10063E370);
  v2 = swift_getKeyPath(&unk_10063E398);
  static Published.subscript.getter(&v33, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = (uint64_t)v33;
  v4 = swift_getKeyPath(&unk_10063E328);
  v5 = swift_getKeyPath(&unk_10063E350);
  static Published.subscript.getter(&v33, v0, v4, v5);
  swift_release(v4);
  swift_release(v5);
  v13 = v33;
  if (*(_QWORD *)v33->cellPadding && (v14 = sub_100030DDC(v3), (v6 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)v13[1].cellInset + 8 * v14);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRelease(v13, v16, v17, v18, v19, v20, v21, v22);
    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v32 = v15;
      else
        v32 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v30 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease_n(v15, 2);
    }
    else
    {
      v30 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v15, v23, v24, v25, v26, v27, v28, v29);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v13, v6, v7, v8, v9, v10, v11, v12);
    return 0;
  }
  return v30;
}

void sub_10046F3C4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell **v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _BYTE v13[24];

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = *(_QWORD *)(v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
  if (*(_QWORD *)(v2 + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v3 = *(unsigned __int8 *)(v2 + a1 + 32);
  v4 = (CHWorkoutDetailHeartRateTableViewCell **)(v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columnSizes);
  swift_beginAccess(v4, v13, 0, 0);
  v5 = *v4;
  if (*(_QWORD *)v5->cellPadding)
  {
    swift_bridgeObjectRetain(v5);
    sub_1004396A8(v3);
    if ((v6 & 1) != 0)
      swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
    else
      swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
  }
}

void sub_10046F484(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  id v6;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
    if (*(_QWORD *)(v2 + 16) > a1)
    {
      v3 = v2 + a1;
      v4 = *(void **)(v1 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager);
      v5 = *(_BYTE *)(v3 + 32);
      v6 = objc_msgSend(v4, "fitnessUIFormattingManager");
      sub_1001A5750((uint64_t)v6, v5);

      return;
    }
  }
  __break(1u);
}

void sub_10046F50C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  uint64_t v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  char v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t OpaqueTypeConformance2;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void *v86;
  void *v87;
  char v88;
  CHWorkoutDetailHeartRateTableViewCell *v89;

  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100820D90);
  __chkstk_darwin(v9);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
  if (*(_QWORD *)(v12 + 16) <= a2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = *(unsigned __int8 *)(v12 + a2 + 32);
  KeyPath = swift_getKeyPath(&unk_10063E370);
  v15 = swift_getKeyPath(&unk_10063E398);
  static Published.subscript.getter(&v86, v2, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  v84 = v11;
  v85 = v9;
  v82 = v6;
  v83 = v5;
  v81 = v8;
  if (v13 == 3)
  {
    sub_10046FC10(a1, (uint64_t)v86);
LABEL_10:
    v22 = v25;
    v24 = v26;
    goto LABEL_12;
  }
  if (v13 == 1)
  {
    sub_10046F948(a1, (uint64_t)v86);
    goto LABEL_10;
  }
  if (v13)
  {
    v22 = 0;
    v24 = (void *)0xE000000000000000;
    goto LABEL_12;
  }
  v16 = objc_opt_self(NSNumberFormatter);
  v17 = __OFADD__(a1, 1);
  v18 = a1 + 1;
  if (!v17)
  {
    v19 = (void *)v16;
    v20 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v18);
    v21 = objc_msgSend(v19, "localizedStringFromNumber:numberStyle:", v20, 0);

    v22 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

LABEL_12:
    v86 = v22;
    v87 = v24;
    v27 = sub_100038CA0();
    v28 = Text.init<A>(_:)(&v86, &type metadata for String, v27);
    v30 = v29;
    v32 = v31;
    v34 = v33 & 1;
    v36 = static Font.body.getter(v35);
    v38 = Text.font(_:)(v36, v28, v30, v34, v32, v37);
    v40 = v39;
    v42 = v41;
    v44 = v43;
    swift_release(v36);
    v45 = v42 & 1;
    sub_1000E4458(v28, v30, v34);
    swift_bridgeObjectRelease(v32, v46, v47, v48, v49, v50, v51, v52);
    sub_1001A5D38(v13);
    v54 = v53;
    v55 = (void *)Text.foregroundColor(_:)(v53, v38, v40, v45, v44);
    v57 = v56;
    LOBYTE(v32) = v58;
    v60 = v59;
    swift_release(v54);
    sub_1000E4458(v38, v40, v45);
    swift_bridgeObjectRelease(v44, v61, v62, v63, v64, v65, v66, v67);
    v86 = v55;
    v87 = v57;
    v88 = v32 & 1;
    v89 = v60;
    v69 = v81;
    v68 = v82;
    v70 = v83;
    (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v81, enum case for DynamicTypeSize.large(_:), v83);
    v71 = v84;
    View.dynamicTypeSize(_:)(v69, &type metadata for Text, &protocol witness table for Text);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    sub_1000E4458((uint64_t)v86, (uint64_t)v87, v88);
    swift_bridgeObjectRelease(v89, v72, v73, v74, v75, v76, v77, v78);
    v86 = &type metadata for Text;
    v87 = &protocol witness table for Text;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    AnyView.init<A>(_:)(v71, v85, OpaqueTypeConformance2);
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_10046F878()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[3];

  KeyPath = swift_getKeyPath(&unk_10063E370);
  v2 = swift_getKeyPath(&unk_10063E398);
  static Published.subscript.getter(v11, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v11[0];
  v4 = (uint64_t *)(v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_averagePaces);
  swift_beginAccess(v4, v11, 0, 0);
  v5 = *v4;
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  v6 = sub_100030DDC(v3);
  if ((v7 & 1) == 0)
    return 0;
  v8 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v6);
  v9 = *v8;
  swift_bridgeObjectRetain(v8[1]);
  return v9;
}

void sub_10046F948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  NSString v21;
  id v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __n128 v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;

  v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager), "fitnessUIFormattingManager");
  v6 = objc_msgSend(v5, "unitManager");

  if (!v6)
    goto LABEL_12;
  v7 = objc_msgSend(v6, "userDistanceHKUnitForDistanceType:", 3);

  if (qword_10081DDB8 != -1)
    swift_once(&qword_10081DDB8, sub_10046E58C);
  v8 = objc_msgSend((id)qword_100835108, "unitStringFromValue:unit:", objc_msgSend((id)objc_opt_self(HKUnit), "lengthFormatterUnitFromUnit:", v7), 1.0);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_opt_self(FIUIFormattingManager);
  v13 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((unsigned __int128)(a2 * (__int128)v13) >> 64 != (a2 * v13) >> 63)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  v14 = (void *)v12;
  v15 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2 * v13);
  v16 = objc_msgSend(v14, "stringWithNumber:decimalPrecision:", v15, 1);

  if (v16)
  {
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0xE000000000000000;
  }
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, 0, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = sub_100047110((uint64_t *)&unk_100827460);
  v27 = swift_allocObject(v26, 112, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v27 + 56) = &type metadata for String;
  v28 = sub_100038CF8();
  *(_QWORD *)(v27 + 32) = v17;
  *(_QWORD *)(v27 + 40) = v19;
  *(_QWORD *)(v27 + 96) = &type metadata for String;
  *(_QWORD *)(v27 + 104) = v28;
  *(_QWORD *)(v27 + 64) = v28;
  *(_QWORD *)(v27 + 72) = v9;
  *(_QWORD *)(v27 + 80) = v11;
  String.init(format:_:)(v23, v25, v27, v29);

  swift_bridgeObjectRelease(v25, v30, v31, v32, v33, v34, v35, v36);
}

void sub_10046FC10(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  unint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  NSString v46;
  id v47;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  __n128 v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_10063E328);
  v7 = swift_getKeyPath(&unk_10063E350);
  static Published.subscript.getter(&v62, v3, KeyPath, v7);
  swift_release(KeyPath);
  swift_release(v7);
  v15 = v62;
  if (!*(_QWORD *)v62->cellPadding || (v16 = sub_100030DDC(a2), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease(v15, v8, v9, v10, v11, v12, v13, v14);
    return;
  }
  v17 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v15[1].cellInset + 8 * v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
  if (((unint64_t)v17 & 0xC000000000000001) != 0)
  {
    v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v17);
    goto LABEL_7;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (*(_QWORD *)(((unint64_t)v17 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v25 = *((_QWORD *)&v17[1].super.super.super.super.isa + a1);
  swift_retain(v25);
LABEL_7:
  swift_bridgeObjectRelease(v17, v26, v27, v28, v29, v30, v31, v32);
  if ((*(_BYTE *)(v25 + 40) & 1) != 0 || (*(_BYTE *)(v25 + 128) & 1) != 0 || *(double *)(v25 + 32) <= 0.0)
  {
    swift_release(v25);
  }
  else
  {
    v33 = *(_QWORD *)(v25 + 120);
    v34 = objc_msgSend(*(id *)(v3 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager), "fitnessUIFormattingManager");
    v35 = objc_msgSend(v34, "stringWithDuration:durationFormat:", 1, *(double *)(v25 + 64));

    if (v35)
    {
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

    }
    else
    {
      v36 = 0;
      v38 = 0xE000000000000000;
    }
    v39 = (void *)objc_opt_self(FIUIFormattingManager);
    v40 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v33);
    v41 = objc_msgSend(v39, "stringWithNumber:decimalPrecision:", v40, 1);

    if (v41)
    {
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

    }
    else
    {
      v42 = 0;
      v44 = 0xE000000000000000;
    }
    v45 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v46 = String._bridgeToObjectiveC()();
    v47 = objc_msgSend(v45, "localizedStringForKey:value:table:", v46, 0, 0);

    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v50 = v49;

    v51 = sub_100047110((uint64_t *)&unk_100827460);
    v52 = swift_allocObject(v51, 112, 7);
    *(_OWORD *)(v52 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v52 + 56) = &type metadata for String;
    v53 = sub_100038CF8();
    *(_QWORD *)(v52 + 32) = v36;
    *(_QWORD *)(v52 + 40) = v38;
    *(_QWORD *)(v52 + 96) = &type metadata for String;
    *(_QWORD *)(v52 + 104) = v53;
    *(_QWORD *)(v52 + 64) = v53;
    *(_QWORD *)(v52 + 72) = v42;
    *(_QWORD *)(v52 + 80) = v44;
    String.init(format:_:)(v48, v50, v52, v54);
    swift_release(v25);
    swift_bridgeObjectRelease(v50, v55, v56, v57, v58, v59, v60, v61);
  }
}

void sub_10046FF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[5];
  char v35[32];

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_10063E328);
  v3 = swift_getKeyPath(&unk_10063E350);
  static Published.subscript.getter(v34, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v26 = v34[0] + 64;
  v28 = v34[0];
  v29 = 0;
  v4 = 1 << *(_BYTE *)(v34[0] + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v30 = v5 & *(_QWORD *)(v34[0] + 64);
  v25 = OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns;
  v32 = v1;
  v6 = v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columnSizes;
  v27 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
LABEL_4:
    if (v30)
    {
      v7 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      v8 = v7 | (v29 << 6);
      goto LABEL_20;
    }
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      goto LABEL_35;
    if (v9 >= v27)
      break;
    v10 = *(_QWORD *)(v26 + 8 * v9);
    v11 = v29 + 1;
    if (!v10)
    {
      v11 = v29 + 2;
      if (v29 + 2 >= v27)
        break;
      v10 = *(_QWORD *)(v26 + 8 * v11);
      if (!v10)
      {
        v11 = v29 + 3;
        if (v29 + 3 >= v27)
          break;
        v10 = *(_QWORD *)(v26 + 8 * v11);
        if (!v10)
        {
          v12 = v29 + 4;
          if (v29 + 4 >= v27)
            break;
          v10 = *(_QWORD *)(v26 + 8 * v12);
          if (!v10)
          {
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_36;
              if (v11 >= v27)
                goto LABEL_33;
              v10 = *(_QWORD *)(v26 + 8 * v11);
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          v11 = v29 + 4;
        }
      }
    }
LABEL_19:
    v29 = v11;
    v30 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
    v13 = 8 * v8;
    v14 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + v13);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v17 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + v13);
      else
        v17 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v15 = _CocoaArrayWrapper.endIndex.getter(v17);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v14, v18, v19, v20, v21, v22, v23, v24);
      if (v15 < 0)
      {
        __break(1u);
        JUMPOUT(0x1004707A4);
      }
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v15)
    {
      v16 = 0;
      v33 = *(_QWORD *)(v32 + v25);
      while (v16 != v15)
      {
        v31 = v16 + 1;
        if (*(_QWORD *)(v33 + 16))
        {
          sub_100047110(&qword_1008255C8);
          swift_bridgeObjectRetain(v33);
          swift_beginAccess(v6, v35, 0, 0);
          __asm { BR              X8 }
        }
        ++v16;
        if (v31 == v15)
          goto LABEL_4;
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      JUMPOUT(0x1004707F0);
    }
  }
LABEL_33:
  swift_release(v28);
}

_QWORD *sub_100470830(void *a1, void *a2, void *a3, void *a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;

  v9 = sub_100047110(&qword_1008351A0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource__metrics];
  v18 = _swiftEmptyDictionarySingleton;
  v14 = v4;
  v15 = sub_100047110(&qword_100835160);
  Published.init(initialValue:)(&v18, v15);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(_QWORD *)&v14[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_averagePaces] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v14[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns] = &off_100780CD0;
  *(_QWORD *)&v14[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columnSizes] = _swiftEmptyDictionarySingleton;

  return sub_10021FF54(a1, a2, a3, a4);
}

void sub_1004709B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  SEL v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v1 = v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource__metrics;
  v2 = sub_100047110(&qword_1008351A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_averagePaces), v3, v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns), v10, v11, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columnSizes), v17, v18, v19, v20, v21, v22, v23);
}

id sub_100470A28()
{
  return sub_1001C25EC(type metadata accessor for WorkoutDetailSwimmingSplitDataSource);
}

uint64_t sub_100470AA8()
{
  return type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailSwimmingSplitDataSource(uint64_t a1)
{
  return sub_100024334(a1, (uint64_t *)&unk_100835148, (uint64_t)&nominal type descriptor for WorkoutDetailSwimmingSplitDataSource);
}

void sub_100470AC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_100470B40(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 208);
  }
}

void sub_100470B40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100835158)
  {
    v2 = sub_100007050(&qword_100835160);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100835158);
  }
}

uint64_t sub_100470B98()
{
  return 3;
}

uint64_t sub_100470BA0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x160))();
}

uint64_t sub_100470BBC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x178))();
}

uint64_t sub_100470BDC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x180))();
}

uint64_t sub_100470BF8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100470C34()
{
  return 8;
}

unint64_t sub_100470C3C@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_titles);
    if (*(_QWORD *)(v5 + 16) > result)
    {
      v6 = type metadata accessor for AttributedString(0);
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v3, v6);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100470CB8(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  const char *v48;
  char v49;
  uint64_t v50;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_values);
  if (*(_QWORD *)(v4 + 16) <= a2)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  v6 = v4 + 16 * a2;
  v8 = *(_QWORD *)(v6 + 32);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(v6 + 40);
  v9 = sub_100047110((uint64_t *)&unk_100827460);
  result = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(result + 16) = xmmword_100622F90;
  if (__OFADD__(v5, 1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = result;
  *(_QWORD *)(result + 56) = &type metadata for Int;
  *(_QWORD *)(result + 64) = &protocol witness table for Int;
  *(_QWORD *)(result + 32) = v5 + 1;
  v11 = swift_bridgeObjectRetain(v7);
  v12 = String.init(format:_:)(v8, v7, v10, v11);
  v14 = v13;
  swift_bridgeObjectRelease(v7, v13, v15, v16, v17, v18, v19, v20);
  v47 = v12;
  v48 = v14;
  v21 = sub_100038CA0();
  result = Text.init<A>(_:)(&v47, &type metadata for String, v21);
  v25 = *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
  if (*(_QWORD *)(v25 + 16) > a2)
  {
    v26 = result;
    v27 = v22;
    v28 = v24;
    v29 = v23 & 1;
    sub_1001A5D38(*(_BYTE *)(v25 + a2 + 32));
    v31 = v30;
    v32 = Text.foregroundColor(_:)(v30, v26, v27, v29, v28);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    swift_release(v31);
    v47 = v32;
    v48 = v34;
    v49 = v36 & 1;
    v50 = v38;
    v39 = AnyView.init<A>(_:)(&v47, &type metadata for Text, &protocol witness table for Text);
    sub_1000E4458(v26, v27, v29);
    swift_bridgeObjectRelease(v28, v40, v41, v42, v43, v44, v45, v46);
    return v39;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100470E6C()
{
  return 0x39342F2238332732;
}

_QWORD *sub_100470E84(void *a1, void *a2, void *a3, void *a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v8 = OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_titles;
  v9 = sub_100047110(&qword_100821638);
  v10 = type metadata accessor for AttributedString(0);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100624A40;
  v12 = v4;
  AttributedString.init(stringLiteral:)(0, 0xE000000000000000);
  AttributedString.init(stringLiteral:)(1701669204, 0xE400000000000000);
  AttributedString.init(stringLiteral:)(1701011792, 0xE400000000000000);
  *(_QWORD *)&v4[v8] = v11;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_values] = &off_100780CF8;

  return sub_100470830(a1, a2, a3, a4);
}

uint64_t sub_100471010()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_titles));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_values));
}

id sub_10047103C()
{
  return sub_1001C25EC(type metadata accessor for WorkoutDetailColumnMetricSwimmingPreviewDataSource);
}

uint64_t sub_100471080()
{
  return type metadata accessor for WorkoutDetailColumnMetricSwimmingPreviewDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailColumnMetricSwimmingPreviewDataSource(uint64_t a1)
{
  return sub_100024334(a1, (uint64_t *)&unk_100835190, (uint64_t)&nominal type descriptor for WorkoutDetailColumnMetricSwimmingPreviewDataSource);
}

uint64_t sub_10047109C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 440);
}

uint64_t sub_1004710E0(uint64_t a1)
{
  uint64_t result;

  result = sub_1000083D8((unint64_t *)&qword_100828038, type metadata accessor for WorkoutDetailSwimmingSplitDataSource, (uint64_t)&unk_10063E2D4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10047111C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100471140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10046E738(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_100471148@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10063E328);
  v5 = swift_getKeyPath(&unk_10063E350);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1004711C4(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10063E328);
  v5 = swift_getKeyPath(&unk_10063E350);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

CHWorkoutDetailHeartRateTableViewCell *sub_100471238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *result;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = &_swiftEmptyArrayStorage;
    if (!v4)
      break;
    result = (CHWorkoutDetailHeartRateTableViewCell *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    v7 = *(void **)(a2 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workout);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      v10 = type metadata accessor for WorkoutDurationMetrics();
      a2 = swift_allocObject(v10, 160, 7);
      *(_QWORD *)(a2 + 24) = 0;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 40) = 1;
      *(_QWORD *)(a2 + 48) = 0;
      *(_BYTE *)(a2 + 56) = 1;
      *(_QWORD *)(a2 + 72) = 0;
      *(_BYTE *)(a2 + 80) = 1;
      *(_OWORD *)(a2 + 88) = 0u;
      *(_OWORD *)(a2 + 104) = 0u;
      *(_QWORD *)(a2 + 120) = 0;
      *(_BYTE *)(a2 + 128) = 1;
      *(_QWORD *)(a2 + 144) = 0;
      *(_QWORD *)(a2 + 152) = 0;
      *(_QWORD *)(a2 + 136) = 0;
      v11 = v7;
      v12 = v9;
      *(double *)(a2 + 32) = (double)(uint64_t)objc_msgSend(v12, "splitDelimiterDistance");
      *(_BYTE *)(a2 + 40) = 0;
      objc_msgSend(v12, "durationScaledToFillSplit");
      *(_QWORD *)(a2 + 64) = v13;
      *(_QWORD *)(a2 + 120) = objc_msgSend(v12, "strokeCountScaledToFillSplit");
      *(_BYTE *)(a2 + 128) = 0;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, a2);
      specialized ContiguousArray._endMutation()(v16);
      if (v4 == v6)
        return &_swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v18, v19, v20, v21, v22, v23, v24);
  }
  return result;
}

double sub_100471444@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10063E498);
  v5 = swift_getKeyPath(&unk_10063E4C0);
  static Published.subscript.getter(v9, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = v10;
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a2 = v9[0];
  *(_OWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1004714C8(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v11[4];
  char v12;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *a2;
  v7 = *(_BYTE *)(a1 + 32);
  KeyPath = swift_getKeyPath(&unk_10063E498);
  v9 = swift_getKeyPath(&unk_10063E4C0);
  v11[0] = v2;
  v11[1] = v3;
  v11[2] = v4;
  v11[3] = v5;
  v12 = v7;
  sub_10047473C(v2, v3, v4, v5, v7);
  swift_retain(v6);
  return static Published.subscript.setter(v11, v6, KeyPath, v9);
}

double sub_100471570@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  KeyPath = swift_getKeyPath(&unk_10063E498);
  v4 = swift_getKeyPath(&unk_10063E4C0);
  static Published.subscript.getter(v8, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = v9;
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

void sub_1004715F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[57];
  uint64_t v14;
  _QWORD v15[4];

  sub_1003D1A4C(a1, (uint64_t)&v14);
  v2 = type metadata accessor for Alert.Button(0);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v13[19] = (char *)v13 - v6;
  __chkstk_darwin(v7);
  v13[20] = (char *)v13 - v8;
  __chkstk_darwin(v9);
  v13[22] = (char *)v13 - v10;
  v11 = sub_100047110(&qword_1008352C8);
  __chkstk_darwin(v11);
  v13[23] = (char *)v13 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[24] = a1;
  sub_1003D1A4C(a1, (uint64_t)v15);
  __asm { BR              X10 }
}

uint64_t sub_100471760()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;

  v6 = *(_QWORD *)(v5 - 120);
  v7 = v1;
  v8 = objc_msgSend(v4, "as_competitionLearnMoreTitleForExperienceType:", v6);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  *(_QWORD *)(v5 - 200) = v9;
  *(_QWORD *)(v5 - 192) = v11;
  v12 = v3;
  v13 = sub_100038CA0();
  v14 = Text.init<A>(_:)(v5 - 200, &type metadata for String, v13);
  v0[25] = v15;
  v0[26] = v14;
  v17 = v16;
  v19 = v18;
  v20 = objc_msgSend(v4, "as_competitionLearnMoreFullDescriptionForExperienceType:", 1);
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  *(_QWORD *)(v5 - 200) = v21;
  *(_QWORD *)(v5 - 192) = v23;
  v24 = Text.init<A>(_:)(v5 - 200, &type metadata for String, v13);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v32 = v0[23];
  v31(v32, 1, 1, v2);
  ((void (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))Alert.init(title:message:dismissButton:))(v0[26], v0[25], v17 & 1, v19, v24, v26, v30, v28, v32);
  return sub_100474758(v0[24]);
}

double sub_10047433C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  _QWORD v23[4];

  v1 = v0;
  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_1007A0FA8, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain(v1);
  if (v9 == 1)
  {
    sub_10003423C((uint64_t)v4);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_1007A0FD0, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1008352C0;
  *(_QWORD *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_1008282A0, v19);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100474508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a4;
  return swift_task_switch(sub_100474520, 0, 0);
}

uint64_t sub_100474520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 64) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100474588, v2, v3);
}

uint64_t sub_100474588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  KeyPath = swift_getKeyPath(&unk_10063E498);
  v3 = swift_getKeyPath(&unk_10063E4C0);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_BYTE *)(v0 + 48) = -1;
  swift_retain(v1);
  static Published.subscript.setter(v0 + 16, v1, KeyPath, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100474614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp43ActivitySharingFriendDetailAlertCoordinator__presentedAlertType;
  v2 = sub_100047110(&qword_10081EED0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100474664()
{
  return type metadata accessor for ActivitySharingFriendDetailAlertCoordinator(0);
}

uint64_t sub_10047466C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ActivitySharingFriendDetailAlertCoordinator(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004746A8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004746D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1008352BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000DA0E4;
  v3[7] = v2;
  return swift_task_switch(sub_100474520, 0, 0);
}

id sub_10047473C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1)
    return sub_100274928(result, a2, a3, a4, a5);
  return result;
}

double sub_100474750()
{
  uint64_t v0;

  return sub_100583088(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100474758(uint64_t a1)
{
  sub_1002749B8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_10047478C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1004747C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t, __n128);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t, __n128);
  id v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v46 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v7 - 8) + 16);
    ((void (*)(_QWORD *, _QWORD *, uint64_t))v8)(a1, a2, v7);
    v9 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
    v10 = v9[5];
    v11 = *(_QWORD *)((char *)a2 + v10);
    *(_QWORD *)((char *)a1 + v10) = v11;
    v12 = v9[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v9[7];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v9[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v15);
    v23 = swift_bridgeObjectRetain(v19);
    v8(v21, v22, v7, v23);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[5];
    v29 = a3[6];
    v30 = *(void **)((char *)a2 + v28);
    *(_QWORD *)((char *)a1 + v28) = v30;
    v31 = *(void **)((char *)a2 + v29);
    *(_QWORD *)((char *)a1 + v29) = v31;
    v32 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v33 = (_QWORD *)((char *)a1 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = *v34;
    v36 = v34[1];
    *v33 = *v34;
    v33[1] = v36;
    v37 = a3[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = type metadata accessor for AttributedString(0);
    v41 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v40 - 8) + 16);
    v42 = v30;
    v43 = v31;
    swift_retain(v35);
    v44 = swift_retain(v36);
    v41(v38, v39, v40, v44);
    v45 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
    v46 = *(_QWORD *)&v39[v45];
    *(_QWORD *)&v38[v45] = v46;
  }
  swift_retain(v46);
  return a1;
}

double sub_10047498C(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;

  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v6[5]), v7, v8, v9, v10, v11, v12, v13);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v6[6] + 8), v14, v15, v16, v17, v18, v19, v20);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v6[7] + 8), v21, v22, v23, v24, v25, v26, v27);
  v5(a1 + v6[8], v4);
  v28 = a1 + v6[9];
  v29 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);

  v30 = (_QWORD *)(a1 + a2[8]);
  swift_release(*v30);
  swift_release(v30[1]);
  v31 = a1 + a2[9];
  v32 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = *(_QWORD *)(v31 + *(int *)(sub_100047110(&qword_1008239C8) + 28));
  *(_QWORD *)&result = swift_release(v33).n128_u64[0];
  return result;
}

uint64_t sub_100474AB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, __n128);
  id v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  v9 = v8[5];
  v10 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v10;
  v11 = v8[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v8[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v8[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v14);
  v22 = swift_bridgeObjectRetain(v18);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(v20, v21, v6, v22);
  v23 = v8[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[5];
  v28 = a3[6];
  v29 = *(void **)(a2 + v27);
  *(_QWORD *)(a1 + v27) = v29;
  v30 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v30;
  v31 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  v35 = v33[1];
  *v32 = *v33;
  v32[1] = v35;
  v36 = a3[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = type metadata accessor for AttributedString(0);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v39 - 8) + 16);
  v41 = v29;
  v42 = v30;
  swift_retain(v34);
  v43 = swift_retain(v35);
  v40(v37, v38, v39, v43);
  v44 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
  v45 = *(_QWORD *)(v38 + v44);
  *(_QWORD *)(v37 + v44) = v45;
  swift_retain(v45);
  return a1;
}

uint64_t sub_100474C4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  v9 = v8[5];
  v10 = *(_QWORD *)(a2 + v9);
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
  v19 = v8[6];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v22 = v21[1];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)v20[1];
  v20[1] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
  v31 = v8[7];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v34 = v33[1];
  v35 = (CHWorkoutDetailHeartRateTableViewCell *)v32[1];
  v32[1] = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35, v36, v37, v38, v39, v40, v41, v42);
  v7(a1 + v8[8], a2 + v8[8], v6);
  v43 = v8[9];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[5];
  v48 = *(void **)(a2 + v47);
  v49 = *(void **)(a1 + v47);
  *(_QWORD *)(a1 + v47) = v48;
  v50 = v48;

  v51 = a3[6];
  v52 = *(void **)(a2 + v51);
  v53 = *(void **)(a1 + v51);
  *(_QWORD *)(a1 + v51) = v52;
  v54 = v52;

  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v55 = a3[8];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = *(_QWORD *)(a1 + v55);
  v59 = *(_QWORD *)(a2 + v55);
  *(_QWORD *)(a1 + v55) = v59;
  swift_retain(v59);
  swift_release(v58);
  v60 = *(_QWORD *)(v56 + 8);
  v61 = *(_QWORD *)(v57 + 8);
  *(_QWORD *)(v56 + 8) = v61;
  swift_retain(v61);
  swift_release(v60);
  v62 = a3[9];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  v66 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
  v67 = *(_QWORD *)(v63 + v66);
  v68 = *(_QWORD *)(v64 + v66);
  *(_QWORD *)(v63 + v66) = v68;
  swift_retain(v68);
  swift_release(v67);
  return a1;
}

uint64_t sub_100474E3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_OWORD *)(a1 + v8[6]) = *(_OWORD *)(a2 + v8[6]);
  *(_OWORD *)(a1 + v8[7]) = *(_OWORD *)(a2 + v8[7]);
  v7(a1 + v8[8], a2 + v8[8], v6);
  v9 = v8[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = sub_100047110(&qword_1008239C8);
  *(_QWORD *)(v16 + *(int *)(v19 + 28)) = *(_QWORD *)(v17 + *(int *)(v19 + 28));
  return a1;
}

uint64_t sub_100474F74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  v9 = v8[5];
  v10 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease(v10, v11, v12, v13, v14, v15, v16, v17);
  v18 = v8[6];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)v19[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
  v31 = v8[7];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  v36 = (CHWorkoutDetailHeartRateTableViewCell *)v32[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease(v36, v37, v38, v39, v40, v41, v42, v43);
  v7(a1 + v8[8], a2 + v8[8], v6);
  v44 = v8[9];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
  v48 = a3[5];
  v49 = *(void **)(a1 + v48);
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);

  v50 = a3[6];
  v51 = *(void **)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);

  v52 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = *(_QWORD *)(a1 + v52);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  swift_release(v55);
  v56 = *(_QWORD *)(v53 + 8);
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  swift_release(v56);
  v57 = a3[9];
  v58 = a1 + v57;
  v59 = a2 + v57;
  v60 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v58, v59, v60);
  v61 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
  v62 = *(_QWORD *)(v58 + v61);
  *(_QWORD *)(v58 + v61) = *(_QWORD *)(v59 + v61);
  swift_release(v62);
  return a1;
}

uint64_t sub_100475110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047511C);
}

uint64_t sub_10047511C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for FitnessPlusStackViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100047110(&qword_1008239C8);
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1004751C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004751D4);
}

uint64_t sub_1004751D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for FitnessPlusStackViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_100047110(&qword_1008239C8);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FitnessPlusStackItemView(uint64_t a1)
{
  uint64_t result;

  result = qword_100835330;
  if (!qword_100835330)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FitnessPlusStackItemView);
  return result;
}

void sub_1004752B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v2 = type metadata accessor for FitnessPlusStackViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = &unk_10063E510;
    v6[4] = &unk_10063E528;
    sub_100186CA8(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

uint64_t sub_100475360(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B7F5C, 1);
}

uint64_t sub_100475370()
{
  uint64_t result;

  result = static Font.body.getter();
  qword_1008352D0 = result;
  return result;
}

uint64_t sub_10047538C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  void *v23;
  NSDate v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = v1;
  v66 = a1;
  v67 = type metadata accessor for TaskPriority(0);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v64 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FitnessPlusStackItemView(0);
  v61 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v62 = v5;
  v63 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100835378);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributedString(0);
  v58 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - v12;
  v14 = (int *)sub_100047110(&qword_100835380);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v57 = (uint64_t)&v56 - v18;
  v56 = sub_100047110(&qword_100835388);
  __chkstk_darwin(v56);
  v60 = (uint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_BYTE *)(v2 + *(int *)(v4 + 28));
  v21 = sub_100047110(&qword_1008239C8);
  State.wrappedValue.getter(v13, v21);
  v22 = sub_1003877C0();
  AttributedString.init(_:)(v22);
  v23 = (void *)objc_opt_self(CHListAndDetailViewDateFormatter);
  v24.super.isa = Date._bridgeToObjectiveC()().super.isa;
  if (qword_10081DBB8 != -1)
    swift_once(&qword_10081DBB8, sub_1003868D4);
  v25 = objc_msgSend(v23, "formattedListStringForDate:font:", v24.super.isa, qword_100830648);

  v26 = objc_msgSend(v25, "string");
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  *v16 = swift_getKeyPath(&unk_10063E590);
  v30 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v16, v30, 0);
  v31 = (char *)v16 + v14[15];
  *(_OWORD *)v31 = xmmword_100628E90;
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  *((_BYTE *)v16 + v14[9]) = v20;
  v32 = v58;
  v33 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v33((char *)v16 + v14[10], v13, v8);
  v33((char *)v16 + v14[11], v10, v8);
  v34 = (_QWORD *)((char *)v16 + v14[12]);
  *v34 = v27;
  v34[1] = v29;
  *(_QWORD *)((char *)v16 + v14[13]) = 0;
  v35 = v59;
  sub_100475884(v2, v59);
  v36 = *(void (**)(char *, uint64_t))(v32 + 8);
  v36(v10, v8);
  v36(v13, v8);
  sub_100045AD4(v35, (uint64_t)v16 + v14[14], &qword_100835378);
  v37 = (uint64_t)v16;
  v38 = v57;
  sub_100045AD4(v37, v57, &qword_100835380);
  v39 = v2 + *(int *)(type metadata accessor for FitnessPlusStackViewModel(0) + 36);
  v40 = v60;
  sub_100021CC0(v38, v60, &qword_100835380);
  v41 = v40 + *(int *)(v56 + 52);
  v42 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v41, v39, v42);
  sub_10001BE90(v38, &qword_100835380);
  v43 = v63;
  sub_10004F8C8(v2, v63, type metadata accessor for FitnessPlusStackItemView);
  v44 = *(unsigned __int8 *)(v61 + 80);
  v45 = (v44 + 16) & ~v44;
  v46 = swift_allocObject(&unk_1007A10F0, v45 + v62, v44 | 7);
  v47 = sub_100476704(v43, v46 + v45);
  v48 = v64;
  static TaskPriority.userInitiated.getter(v47);
  v49 = sub_100047110(&qword_1008353A0);
  v50 = v66;
  v51 = (char *)(v66 + *(int *)(v49 + 36));
  v52 = type metadata accessor for _TaskModifier(0);
  v53 = v65;
  v54 = v67;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(&v51[*(int *)(v52 + 20)], v48, v67);
  *(_QWORD *)v51 = &unk_100835398;
  *((_QWORD *)v51 + 1) = v46;
  sub_100021CC0(v40, v50, &qword_100835388);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v54);
  return sub_10001BE90(v40, &qword_100835388);
}

void sub_100475884(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;

  v69 = a2;
  v3 = sub_100047110(&qword_100821238);
  __chkstk_darwin(v3);
  v65 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v66);
  v6 = (_OWORD *)((char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_100047110(&qword_1008353A8);
  __chkstk_darwin(v67);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008353B0);
  __chkstk_darwin(v9);
  v68 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - v12;
  v14 = sub_100047110(&qword_1008353B8);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FitnessPlusStackItemView(0);
  v71 = *(_OWORD *)(a1 + *(int *)(v17 + 32));
  v18 = sub_100047110(&qword_100823188);
  v19 = State.wrappedValue.getter(&v70, v18);
  v20 = v70;
  if (v70)
  {
    v61 = v3;
    v62 = a1;
    v63 = v14;
    v64 = v13;
    v21 = (void *)objc_opt_self(ARUIMetricColors);
    v22 = objc_msgSend(v21, "briskColors", swift_retain(v20).n128_f64[0]);
    if (v22)
    {
      v23 = v22;
      v60 = v9;
      v24 = objc_msgSend(v22, "nonGradientTextColor");

      if (v24)
      {
        v25 = v17;
        v26 = Color.init(_:)(v24);
        KeyPath = swift_getKeyPath(&unk_10063E6A0);
        v28 = (char *)v6 + *(int *)(v66 + 20);
        v29 = enum case for RoundedCornerStyle.continuous(_:);
        v30 = type metadata accessor for RoundedCornerStyle(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v29, v30);
        __asm { FMOV            V0.2D, #4.0 }
        *v6 = _Q0;
        v36 = v65;
        sub_10004F8C8((uint64_t)v6, v65, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
        *(_WORD *)(v36 + *(int *)(v61 + 36)) = 256;
        sub_100021CC0(v36, (uint64_t)&v8[*(int *)(v67 + 36)], &qword_100821238);
        *(_QWORD *)v8 = v20;
        *((_QWORD *)v8 + 1) = 0;
        *((_WORD *)v8 + 8) = 1;
        *((_QWORD *)v8 + 3) = KeyPath;
        *((_QWORD *)v8 + 4) = v26;
        swift_retain(v20);
        swift_retain(KeyPath);
        swift_retain(v26);
        sub_10001BE90(v36, &qword_100821238);
        sub_100011F54((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
        swift_release(v26);
        swift_release(KeyPath);
        swift_release(v20);
        if (*(_BYTE *)(v62 + *(int *)(v25 + 28)))
          v38 = 0x4048000000000000;
        else
          v38 = 0x4041000000000000;
        v39 = static Alignment.center.getter(v37);
        _FrameLayout.init(width:height:alignment:)(&v71, v38, 0, v38, 0, v39, v40);
        v41 = v68;
        sub_100021CC0((uint64_t)v8, v68, &qword_1008353A8);
        v42 = v60;
        v43 = (_OWORD *)(v41 + *(int *)(v60 + 36));
        v44 = v72;
        *v43 = v71;
        v43[1] = v44;
        v43[2] = v73;
        sub_10001BE90((uint64_t)v8, &qword_1008353A8);
        v45 = (uint64_t)v64;
        sub_100045AD4(v41, (uint64_t)v64, &qword_1008353B0);
        sub_100021CC0(v45, (uint64_t)v16, &qword_1008353B0);
        swift_storeEnumTagMultiPayload(v16, v63, 0);
        v46 = sub_100047110(&qword_1008231E0);
        v47 = sub_100476A08();
        v48 = sub_10016F0EC((unint64_t *)&qword_100823208, &qword_1008231E0);
        _ConditionalContent<>.init(storage:)(v16, v42, v46, v47, v48);
        swift_release(v20);
        sub_10001BE90(v45, &qword_1008353B0);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  if (*(_BYTE *)(a1 + *(int *)(v17 + 28)))
    v49 = 0x4048000000000000;
  else
    v49 = 0x4041000000000000;
  v50 = static Alignment.center.getter(v19);
  _FrameLayout.init(width:height:alignment:)(&v71, v49, 0, v49, 0, v50, v51);
  v52 = v71;
  v53 = BYTE8(v71);
  v54 = v72;
  v55 = BYTE8(v72);
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  *((_QWORD *)v16 + 2) = v52;
  v16[24] = v53;
  *((_QWORD *)v16 + 4) = v54;
  v16[40] = v55;
  *((_OWORD *)v16 + 3) = v73;
  swift_storeEnumTagMultiPayload(v16, v14, 1);
  v56 = sub_100047110(&qword_1008231E0);
  v57 = sub_100476A08();
  v58 = sub_10016F0EC((unint64_t *)&qword_100823208, &qword_1008231E0);
  _ConditionalContent<>.init(storage:)(v16, v9, v56, v57, v58);
}

uint64_t sub_100475DC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1[5] = a1;
  v2 = type metadata accessor for FitnessPlusStackItemView(0);
  v1[6] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[7] = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v1[8] = v4;
  v1[9] = swift_task_alloc((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FitnessPlusStackViewModel(0);
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100823AE8);
  v1[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Image.ResizingMode(0);
  v1[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[13] = v8;
  v1[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v1[15] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100475ECC, v10, v11);
}

uint64_t sub_100475ECC()
{
  uint64_t v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *);

  swift_release(*(_QWORD *)(v0 + 120));
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:", v1);

  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v3 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v9 = v2;
    v10 = Image.init(uiImage:)(v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for Image.ResizingMode.stretch(_:), v6);
    v11 = Image.resizable(capInsets:resizingMode:)(v3, v10, 0.0, 0.0, 0.0, 0.0);
    v12 = swift_release(v10);
    (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v6, v12);
    v13 = enum case for Image.TemplateRenderingMode.template(_:);
    v14 = type metadata accessor for Image.TemplateRenderingMode(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(v5, v13, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v5, 0, 1, v14);
    v16 = Image.renderingMode(_:)(v5, v11);
    swift_release(v11);
    sub_10001BE90(v5, &qword_100823AE8);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v8 + *(int *)(v7 + 32));
    *(_QWORD *)(v0 + 32) = v16;
    v17 = sub_100047110(&qword_100823188);
    State.wrappedValue.setter(v0 + 32, v17);

  }
  v18 = *(_QWORD *)(v0 + 112);
  v19 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 64);
  v21 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 56);
  v24 = *(_QWORD *)(v0 + 40);
  sub_10004F8C8(v24, v19, type metadata accessor for FitnessPlusStackViewModel);
  sub_10004F8C8(v24, v21, type metadata accessor for FitnessPlusStackItemView);
  v25 = *(unsigned __int8 *)(v23 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (void (*)(char *))swift_allocObject(&unk_1007A1118, v26 + v22, v25 | 7);
  sub_100476704(v21, (uint64_t)v27 + v26);
  sub_100394930(v19, (void (*)(char *))sub_1004767B0, v27);
  swift_release(v27);
  sub_100011F54(v19, type metadata accessor for FitnessPlusStackViewModel);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100476148(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = type metadata accessor for FitnessPlusStackItemView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v7);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v45 = v9;
    v46 = v8;
    v12 = *(void **)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
    v44 = a1;
    AttributedString.init(_:)(v12);
    KeyPath = swift_getKeyPath(&unk_10063E5C0);
    __chkstk_darwin(KeyPath);
    *(&v43 - 2) = v14;
    v15 = swift_getKeyPath(&unk_10063E5F0);
    v47 = static Color.white.getter(v16);
    v17 = sub_1000EA158();
    AttributedString.subscript.setter(&v47, v15, v17);
    v18 = swift_getKeyPath(&unk_10063E630);
    __chkstk_darwin(v18);
    *(&v43 - 2) = v19;
    v20 = swift_getKeyPath(&unk_10063E660);
    if (qword_10081DDC0 != -1)
      swift_once(&qword_10081DDC0, sub_100475370);
    v21 = qword_1008352D0;
    v47 = qword_1008352D0;
    v22 = sub_1000EA1DC();
    swift_retain(v21);
    v23 = AttributedString.subscript.setter(&v47, v20, v22);
    __chkstk_darwin(v23);
    *(&v43 - 2) = a2;
    *(&v43 - 1) = (uint64_t)v11;
    v25 = static Animation.default.getter(v24);
    withAnimation<A>(_:_:)(v25, sub_10047681C, &v43 - 4, (char *)&type metadata for () + 8);
    swift_release(v25);
    if (*(_BYTE *)(a2 + *(int *)(v4 + 28)))
      v26 = 48.0;
    else
      v26 = 34.0;
    sub_10004F8C8(a2, (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FitnessPlusStackItemView);
    v27 = *(unsigned __int8 *)(v5 + 80);
    v28 = (v27 + 16) & ~v27;
    v29 = swift_allocObject(&unk_1007A1180, v28 + v6, v27 | 7);
    sub_100476704((uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
    v30 = v44;
    sub_10039636C(v44, (uint64_t)sub_100476998, v29, v26, v26);
    swift_release(v29);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v46);
  }
  else
  {
    v31 = static os_log_type_t.error.getter(v8);
    v32 = (void *)HKLogActivity;
    v33 = sub_100047110((uint64_t *)&unk_100827460);
    v34 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_100622F90;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = sub_100038CF8();
    *(_QWORD *)(v34 + 32) = 0xD000000000000019;
    *(_QWORD *)(v34 + 40) = 0x800000010069FF90;
    v35 = v32;
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v35, "%@ failed to fetch catalog item view model for stack", 52, 2, v34);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v34, v36, v37, v38, v39, v40, v41, v42);
  }
}

uint64_t sub_1004764F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;
  uint64_t v14;

  v3 = type metadata accessor for AttributedString(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v14 - v9, a2, v3, v8);
  type metadata accessor for FitnessPlusStackItemView(0);
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  v12 = sub_100047110(&qword_1008239C8);
  State.wrappedValue.setter(v6, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

double sub_1004765E8(void *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  double result;
  _QWORD v5[6];

  if (a1)
  {
    v5[2] = a2;
    v5[3] = a1;
    v2 = a1;
    v3 = static Animation.default.getter(v2);
    withAnimation<A>(_:_:)(v3, sub_1004769F0, v5, (char *)&type metadata for () + 8);

    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

uint64_t sub_100476680(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = Image.init(uiImage:)(a2);
  type metadata accessor for FitnessPlusStackItemView(0);
  v5 = v2;
  v3 = sub_100047110(&qword_100823188);
  return State.wrappedValue.setter(&v5, v3);
}

uint64_t sub_100476704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FitnessPlusStackItemView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100476748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusStackItemView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_100835394);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1000DA0E4;
  return sub_100475DC8(v3);
}

uint64_t sub_1004767B0(uint64_t a1)
{
  return sub_1004769A4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100476148);
}

uint64_t sub_1004767C8()
{
  return 8;
}

uint64_t sub_1004767D4(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1004767DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1004767F0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100476808()
{
  return 8;
}

uint64_t sub_10047681C()
{
  uint64_t v0;

  return sub_1004764F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100476838()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  int *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = (int *)type metadata accessor for FitnessPlusStackItemView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v10[5]), v11, v12, v13, v14, v15, v16, v17);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v10[6] + 8), v18, v19, v20, v21, v22, v23, v24);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v10[7] + 8), v25, v26, v27, v28, v29, v30, v31);
  v9(v7 + v10[8], v8);
  v32 = v7 + v10[9];
  v33 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);

  v34 = (_QWORD *)(v7 + v1[8]);
  swift_release(*v34);
  swift_release(v34[1]);
  v35 = v7 + v1[9];
  v36 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  v37 = sub_100047110(&qword_1008239C8);
  swift_release(*(_QWORD *)(v35 + *(int *)(v37 + 28)));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100476998(uint64_t a1)
{
  return sub_1004769A4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1004765E8);
}

uint64_t sub_1004769A4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusStackItemView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1004769F0()
{
  uint64_t v0;

  return sub_100476680(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_100476A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008353C0;
  if (!qword_1008353C0)
  {
    v1 = sub_100007050(&qword_1008353B0);
    sub_100476A74();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008353C0);
  }
  return result;
}

unint64_t sub_100476A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008353C8;
  if (!qword_1008353C8)
  {
    v1 = sub_100007050(&qword_1008353A8);
    sub_100476AF8();
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008353C8);
  }
  return result;
}

unint64_t sub_100476AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008353D0;
  if (!qword_1008353D0)
  {
    v1 = sub_100007050(&qword_1008353D8);
    sub_10016F0EC((unint64_t *)&qword_100826780, &qword_100826788);
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008353D0);
  }
  return result;
}

unint64_t sub_100476BA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008353E0;
  if (!qword_1008353E0)
  {
    v1 = sub_100007050(&qword_1008353A0);
    sub_100028384(&qword_1008353E8, &qword_100835388, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
    sub_1002D7EE0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008353E0);
  }
  return result;
}

Class sub_100476C60(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  Class isa;
  uint64_t v12;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1;
  a3();

  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return isa;
}

id sub_100477028()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownhillRunBridge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DownhillRunBridge()
{
  return objc_opt_self(CHWorkoutDownhillRun);
}

uint64_t sub_100477188()
{
  char *v0;
  void *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  Class isa;
  SEL v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for ActivityTileSectionHeader();
  objc_msgSendSuper2(&v16, "prepareForReuse");
  v1 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_activeConstraints];
  sub_100039898();
  swift_bridgeObjectRetain(v2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2, v4, v5, v6, v7, v8, v9, v10);
  objc_msgSend(v1, "deactivateConstraints:", isa);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel], "setText:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel], "setText:", 0);
  v11 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button];
  objc_msgSend(v11, "setTitle:forState:", 0, 0);
  objc_msgSend(v11, "setHidden:", 1);
  v12 = &v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction];
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction];
  v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction + 8];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  return sub_100022BA4(v13, v14);
}

id sub_100477374()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityTileSectionHeader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1004773D0()
{
  return 0xD000000000000019;
}

void sub_1004773EC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(char *, uint64_t);
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel;
  v7 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081DDC8 != -1)
    swift_once(&qword_10081DDC8, sub_10004E6B8);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  sub_10003CE9C(v8, (uint64_t)qword_100835420);
  v9 = UIListContentConfiguration.textProperties.getter();
  v10 = (void *)UIListContentConfiguration.TextProperties.font.getter(v9);
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  v12 = (void *)UILabel.withFont(_:)(v10);

  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "labelColor");
  v15 = (void *)UILabel.withTextColor(_:)(v14);

  objc_msgSend(v15, "setLineBreakMode:", 0);
  objc_msgSend(v15, "setNumberOfLines:", 0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v6] = v15;
  v16 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081DDD0 != -1)
    swift_once(&qword_10081DDD0, sub_10004E6A4);
  sub_10003CE9C(v8, (uint64_t)qword_100835438);
  v18 = UIListContentConfiguration.textProperties.getter();
  v19 = (void *)UIListContentConfiguration.TextProperties.font.getter(v18);
  v11(v5, v2);
  v20 = (void *)UILabel.withFont(_:)(v19);

  v21 = objc_msgSend(v13, "secondaryLabelColor");
  v22 = (void *)UILabel.withTextColor(_:)(v21);

  objc_msgSend(v22, "setLineBreakMode:", 0);
  objc_msgSend(v22, "setNumberOfLines:", 0);
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v16] = v22;
  v23 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button;
  v24 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  if (qword_10081DDE0 != -1)
    swift_once(&qword_10081DDE0, sub_100008AEC);
  objc_msgSend(v24, "setTintColor:", qword_100835458);
  if (qword_10081DDD8 != -1)
    swift_once(&qword_10081DDD8, sub_100005914);
  v25 = qword_100835450;
  v26 = objc_msgSend(v24, "titleLabel");
  objc_msgSend(v26, "setFont:", v25);

  objc_msgSend(v24, "setHidden:", 1);
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v23] = v24;
  v27 = &v1[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_activeConstraints] = &_swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/ActivityTileSectionHeader.swift", 42, 2, 136, 0);
  __break(1u);
}

uint64_t sub_1004777E8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10047780C(char a1)
{
  uint64_t v1;

  return sub_1004FCBF0(a1, *(_QWORD *)(v1 + 16));
}

id sub_100477814()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  objc_super v45;
  char v46[24];
  char v47[24];
  char v48[24];
  char v49[24];
  char v50[24];
  __int128 v51;
  uint64_t v52;
  char v53[24];
  __int128 v54;
  uint64_t v55;

  v1 = v0;
  v2 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider];
  v3 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_queryExecutor];
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_chartQuery];
  if (v4)
  {
    v5 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore];
    v6 = v2;
    v7 = v3;
    objc_msgSend(v5, "stopQuery:", v4);
  }
  else
  {
    v8 = v2;
    v9 = v3;
  }
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_basalEnergyQuery])
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore], "stopQuery:");

  v10 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener], v53, 0, 0);
  sub_1002666C4(v10, (uint64_t)&v51);
  if (v52)
  {
    sub_100038FD4(&v51, &v54);
    v11 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v12 = v55;
    v13 = sub_100016804(&v54, v55);
    v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v12);
    objc_msgSend(v11, "removeObserver:", v14);

    swift_unknownObjectRelease(v14);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v54);
  }
  else
  {
    sub_1000F996C((uint64_t)&v51);
  }
  v15 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener], v50, 0, 0);
  sub_1002666C4(v15, (uint64_t)&v51);
  if (v52)
  {
    sub_100038FD4(&v51, &v54);
    v16 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v17 = v55;
    v18 = sub_100016804(&v54, v55);
    v19 = _bridgeAnythingToObjectiveC<A>(_:)(v18, v17);
    objc_msgSend(v16, "removeObserver:", v19);

    swift_unknownObjectRelease(v19);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v54);
  }
  else
  {
    sub_1000F996C((uint64_t)&v51);
  }
  v20 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener], v49, 0, 0);
  sub_1002666C4(v20, (uint64_t)&v51);
  if (v52)
  {
    sub_100038FD4(&v51, &v54);
    v21 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v22 = v55;
    v23 = sub_100016804(&v54, v55);
    v24 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v22);
    objc_msgSend(v21, "removeObserver:", v24);

    swift_unknownObjectRelease(v24);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v54);
  }
  else
  {
    sub_1000F996C((uint64_t)&v51);
  }
  v25 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener], v48, 0, 0);
  sub_1002666C4(v25, (uint64_t)&v51);
  if (v52)
  {
    sub_100038FD4(&v51, &v54);
    v26 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v27 = v55;
    v28 = sub_100016804(&v54, v55);
    v29 = _bridgeAnythingToObjectiveC<A>(_:)(v28, v27);
    objc_msgSend(v26, "removeObserver:", v29);

    swift_unknownObjectRelease(v29);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v54);
  }
  else
  {
    sub_1000F996C((uint64_t)&v51);
  }
  v30 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener], v47, 0, 0);
  sub_1002666C4(v30, (uint64_t)&v51);
  if (v52)
  {
    sub_100038FD4(&v51, &v54);
    v31 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v32 = v55;
    v33 = sub_100016804(&v54, v55);
    v34 = _bridgeAnythingToObjectiveC<A>(_:)(v33, v32);
    objc_msgSend(v31, "removeObserver:", v34);

    swift_unknownObjectRelease(v34);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v54);
  }
  else
  {
    sub_1000F996C((uint64_t)&v51);
  }
  v35 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener], v46, 0, 0);
  sub_1002666C4(v35, (uint64_t)&v51);
  if (v52)
  {
    sub_100038FD4(&v51, &v54);
    v36 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v37 = v55;
    v38 = sub_100016804(&v54, v55);
    v39 = _bridgeAnythingToObjectiveC<A>(_:)(v38, v37);
    objc_msgSend(v36, "removeObserver:", v39);

    swift_unknownObjectRelease(v39);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v54);
  }
  else
  {
    sub_1000F996C((uint64_t)&v51);
  }
  v40 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery];
  if (v40)
  {
    v41 = v40;
    dispatch thunk of ActivityAwardsDateQuery.deactivate()();

  }
  v42 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription;
  v43 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription];
  if (v43)
  {
    objc_msgSend(v43, "invalidate");
    v43 = *(void **)&v1[v42];
  }
  *(_QWORD *)&v1[v42] = 0;
  swift_unknownObjectRelease(v43);
  v45.receiver = v1;
  v45.super_class = (Class)type metadata accessor for HistoryDayViewController(0);
  return objc_msgSendSuper2(&v45, "dealloc");
}

uint64_t sub_100478058()
{
  return type metadata accessor for HistoryDayViewController(0);
}

uint64_t type metadata accessor for HistoryDayViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008354F8;
  if (!qword_1008354F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HistoryDayViewController);
  return result;
}

uint64_t sub_100478124(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v2 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate];
  *(_QWORD *)(v2 + 8) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v43 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary] = 0;
  v45 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell] = 0;
  v49 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell] = 0;
  v52 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell] = 0;
  v55 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell] = 0;
  v57 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell] = 0;
  v60 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell] = 0;
  v61 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringsConfigurationCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringsConfigurationCell] = 0;
  v62 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription] = 0;
  v3 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener];
  *v3 = 0u;
  v3[1] = 0u;
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener];
  *v4 = 0u;
  v4[1] = 0u;
  v5 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener];
  *v5 = 0u;
  v5[1] = 0u;
  v6 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener];
  *v6 = 0u;
  v6[1] = 0u;
  v7 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener];
  *v7 = 0u;
  v7[1] = 0u;
  v59 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery] = 0;
  v8 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener];
  *v8 = 0u;
  v8[1] = 0u;
  v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] = 0;
  v56 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts] = 0;
  v58 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels] = 0;
  v9 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
  v47 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
  v10 = v1;

  *(_QWORD *)&v1[v9] = &_swiftEmptyArrayStorage;
  v50 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController) = 0;
  v54 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData) = 0;
  *((_BYTE *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData) = 0;
  *((_BYTE *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation) = 0;
  v46 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy) = 0;
  *((_BYTE *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) = 0;
  v44 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage) = 0;
  v11 = (char *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText;
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v48 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator) = 0;
  v51 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC) = 0;
  sub_1000F61B4(v2);

  swift_unknownObjectRelease(*(_QWORD *)&v1[v62]);
  sub_1000F996C((uint64_t)v3);
  sub_1000F996C((uint64_t)v4);
  sub_1000F996C((uint64_t)v5);
  sub_1000F996C((uint64_t)v6);
  sub_1000F996C((uint64_t)v7);

  sub_1000F996C((uint64_t)v8);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v1[v56], v12, v13, v14, v15, v16, v17, v18);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v1[v58], v19, v20, v21, v22, v23, v24, v25);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v1[v47], v26, v27, v28, v29, v30, v31, v32);

  swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)v11 + 1), v33, v34, v35, v36, v37, v38, v39);
  v40 = *(void **)((char *)v10 + v51);

  v41 = type metadata accessor for HistoryDayViewController(0);
  swift_deallocPartialClassInstance(v10, v41, *(unsigned int *)((swift_isaMask & *v10) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v10) + 0x34));
  return 0;
}

id sub_1004784F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id result;
  void *v8;
  void *v9;
  id v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  _QWORD *v13;
  void (*v14)(char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  __n128 v23;
  uint64_t **v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  _QWORD aBlock[5];
  uint64_t v37;
  objc_super v38;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for HistoryDayViewController(0);
  v38.receiver = v0;
  v38.super_class = v6;
  objc_msgSendSuper2(&v38, "viewDidLoad");
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers), "addObject:", v0);
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v8 = result;
    v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView];
    objc_msgSend(result, "addSubview:", v9);

    objc_msgSend(v9, "setDataSource:", v0);
    objc_msgSend(v9, "setDelegate:", v0);
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v9, "setBackgroundColor:", v10);

    objc_msgSend(v9, "setSeparatorStyle:", 0);
    objc_msgSend(v9, "setRowHeight:", UITableViewAutomaticDimension);
    objc_msgSend(v9, "setEstimatedRowHeight:", 100.0);
    objc_msgSend(v9, "setSectionHeaderTopPadding:", 0.0);
    objc_msgSend(v9, "contentInset");
    objc_msgSend(v9, "setContentInset:");
    objc_msgSend(v9, "contentInset");
    objc_msgSend(v9, "setContentInset:");
    objc_msgSend(v9, "contentInset");
    objc_msgSend(v9, "setContentInset:");
    v11 = &v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date];
    v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v12(v5, &v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v2);
    v13 = sub_1001935D0();
    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v5, v2);
    v15 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
    *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts] = v13;
    swift_bridgeObjectRelease(v15, v16, v17, v18, v19, v20, v21, v22);
    if ((ACHShouldUseNewAwardsSystem(v23) & 1) == 0)
    {
      v12(v5, v11, v2);
      v24 = sub_100193878((uint64_t)v5);
      v14(v5, v2);
      v25 = *(CHWorkoutDetailHeartRateTableViewCell **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards];
      *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards] = v24;
      swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
    }
    v33 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider];
    v34 = swift_allocObject(&unk_1007A1400, 24, 7);
    swift_unknownObjectWeakInit(v34 + 16, v1);
    aBlock[4] = sub_10047E604;
    v37 = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000197D4;
    aBlock[3] = &unk_1007A1710;
    v35 = _Block_copy(aBlock);
    objc_msgSend(v33, "allMindfulnessSessionsWithCompletion:", v35, swift_release(v37).n128_f64[0]);
    _Block_release(v35);
    sub_10047B3D0();
    sub_100182D20(v9);
    return sub_10047889C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10047889C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void **v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void **v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  void **v39;
  uint64_t v40;
  __n128 v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, _QWORD, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id result;
  void *v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  void *v83;
  void **v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  void *v90;
  void **v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  void *v99;
  void **v100;
  uint64_t v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t ObjectType;
  uint64_t v126;
  id v127;
  _QWORD v128[3];
  void **aBlock;
  uint64_t v130;
  void *v131;
  void *v132;
  void *v133;
  uint64_t v134;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v120 = type metadata accessor for Date(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for Calendar(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for DateComponents(0);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v121 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v124 = (char *)&v113 - v6;
  v7 = swift_allocObject(&unk_1007A1400, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v0);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider);
  v9 = OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_workoutDataProvider;
  v10 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_workoutDataProvider);
  v133 = sub_10047E698;
  v134 = v7;
  aBlock = _NSConcreteStackBlock;
  v130 = 1107296256;
  v131 = sub_10002D0F8;
  v132 = &unk_1007A14E0;
  v11 = _Block_copy(&aBlock);
  v12 = v134;
  v13 = v10;
  swift_retain(v7);
  objc_msgSend(v13, "addUpdateHandler:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);

  v14 = *(void **)(v8 + v9);
  v133 = sub_10047E698;
  v134 = v7;
  aBlock = _NSConcreteStackBlock;
  v130 = 1107296256;
  v131 = sub_10002D0F8;
  v132 = &unk_1007A1508;
  v15 = _Block_copy(&aBlock);
  v16 = v134;
  v126 = v7;
  swift_retain(v7);
  v17 = v14;
  objc_msgSend(v17, "addAnimatedUpdateHandler:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);

  v18 = (void *)objc_opt_self(NSNotificationCenter);
  v19 = objc_msgSend(v18, "defaultCenter");
  if (qword_10081D640 != -1)
    swift_once(&qword_10081D640, sub_10004CE14);
  v20 = (void *)qword_100869F70;
  v21 = (void *)objc_opt_self(NSOperationQueue);
  v22 = v20;
  v23 = objc_msgSend(v21, "mainQueue");
  v24 = swift_allocObject(&unk_1007A1400, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, v0);
  v133 = sub_10047E6A0;
  v134 = v24;
  aBlock = _NSConcreteStackBlock;
  v130 = 1107296256;
  v131 = sub_1000398D4;
  v132 = &unk_1007A1530;
  v25 = _Block_copy(&aBlock);
  v26 = (void **)objc_msgSend(v19, "addObserverForName:object:queue:usingBlock:", v22, 0, v23, v25, swift_release(v134).n128_f64[0]);
  _Block_release(v25);

  v132 = (void *)swift_getObjectType(v26);
  aBlock = v26;
  v27 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener, v128, 33, 0);
  sub_10004C69C((uint64_t)&aBlock, v27);
  swift_endAccess(v128);
  v28 = objc_msgSend(v18, "defaultCenter");
  v29 = objc_msgSend(v21, "mainQueue");
  v30 = swift_allocObject(&unk_1007A1400, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v0);
  v133 = sub_10047E6A8;
  v134 = v30;
  aBlock = _NSConcreteStackBlock;
  v130 = 1107296256;
  v131 = sub_1000398D4;
  v132 = &unk_1007A1558;
  v31 = _Block_copy(&aBlock);
  v32 = (void **)objc_msgSend(v28, "addObserverForName:object:queue:usingBlock:", UIApplicationSignificantTimeChangeNotification, 0, v29, v31, swift_release(v134).n128_f64[0]);
  _Block_release(v31);

  v132 = (void *)swift_getObjectType(v32);
  aBlock = v32;
  v33 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener, v128, 33, 0);
  sub_10004C69C((uint64_t)&aBlock, v33);
  swift_endAccess(v128);
  v34 = objc_msgSend(v18, "defaultCenter");
  v35 = kFIMindfulnessSessionDataProviderDidUpdateNotification;
  v36 = objc_msgSend(v21, "mainQueue");
  v37 = swift_allocObject(&unk_1007A1400, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16, v0);
  v133 = sub_10047E6B0;
  v134 = v37;
  aBlock = _NSConcreteStackBlock;
  v130 = 1107296256;
  v131 = sub_1000398D4;
  v132 = &unk_1007A1580;
  v38 = _Block_copy(&aBlock);
  v39 = (void **)objc_msgSend(v34, "addObserverForName:object:queue:usingBlock:", v35, 0, v36, v38, swift_release(v134).n128_f64[0]);
  _Block_release(v38);

  v132 = (void *)swift_getObjectType(v39);
  aBlock = v39;
  v40 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener, v128, 33, 0);
  sub_10004C69C((uint64_t)&aBlock, v40);
  swift_endAccess(v128);
  v42 = ACHShouldUseNewAwardsSystem(v41);
  v127 = v18;
  if (!v42)
  {
    v79 = objc_msgSend(v18, "defaultCenter");
    v80 = AAUIAchievementsDataProviderDidFinishInitialLoadNotification;
    v81 = objc_msgSend(v21, "mainQueue");
    v82 = swift_allocObject(&unk_1007A1400, 24, 7);
    swift_unknownObjectWeakInit(v82 + 16, v0);
    v133 = sub_10047E6B8;
    v134 = v82;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_1000398D4;
    v132 = &unk_1007A15A8;
    v83 = _Block_copy(&aBlock);
    v84 = (void **)objc_msgSend(v79, "addObserverForName:object:queue:usingBlock:", v80, 0, v81, v83, swift_release(v134).n128_f64[0]);
    _Block_release(v83);

    v132 = (void *)swift_getObjectType(v84);
    aBlock = v84;
    v85 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener;
    swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener, v128, 33, 0);
    sub_10004C69C((uint64_t)&aBlock, v85);
    swift_endAccess(v128);
    v86 = objc_msgSend(v127, "defaultCenter");
    v87 = AAUIAchievementsDataProviderDidUpdateAchievementNotification;
    v95 = v21;
    v88 = objc_msgSend(v21, "mainQueue");
    v89 = swift_allocObject(&unk_1007A1400, 24, 7);
    swift_unknownObjectWeakInit(v89 + 16, v1);
    v133 = sub_10047E6B8;
    v134 = v89;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_1000398D4;
    v132 = &unk_1007A15D0;
    v90 = _Block_copy(&aBlock);
    v91 = (void **)objc_msgSend(v86, "addObserverForName:object:queue:usingBlock:", v87, 0, v88, v90, swift_release(v134).n128_f64[0]);
    _Block_release(v90);

    v132 = (void *)swift_getObjectType(v91);
    aBlock = v91;
    v92 = v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener;
    swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener, v128, 33, 0);
    v93 = v92;
    v78 = v127;
    sub_10004C69C((uint64_t)&aBlock, v93);
    swift_endAccess(v128);
    goto LABEL_9;
  }
  v114 = v21;
  if (qword_10081D548 != -1)
    swift_once(&qword_10081D548, sub_100005A80);
  v43 = v117;
  v44 = sub_10003CE9C(v117, (uint64_t)qword_100869D10);
  v45 = v116;
  v46 = v115;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v115, v44, v43);
  v47 = sub_100047110((uint64_t *)&unk_100828720);
  v48 = type metadata accessor for Calendar.Component(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(_QWORD *)(v49 + 72);
  v51 = *(unsigned __int8 *)(v49 + 80);
  v52 = (v51 + 32) & ~v51;
  v53 = swift_allocObject(v47, v52 + 3 * v50, v51 | 7);
  *(_OWORD *)(v53 + 16) = xmmword_100624A40;
  v54 = v53 + v52;
  v55 = *(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 104);
  v55(v54, enum case for Calendar.Component.day(_:), v48);
  v55(v54 + v50, enum case for Calendar.Component.month(_:), v48);
  v55(v54 + 2 * v50, enum case for Calendar.Component.year(_:), v48);
  v56 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v53);
  swift_setDeallocating(v53);
  swift_arrayDestroy(v54, 3, v48);
  swift_deallocClassInstance(v53, 32, 7);
  v57 = v119;
  v58 = v118;
  v59 = v120;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v118, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v120);
  v60 = v124;
  Calendar.dateComponents(_:from:)(v56, v58);
  swift_bridgeObjectRelease(v56, v61, v62, v63, v64, v65, v66, v67);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v43);
  v68 = v122;
  v69 = v121;
  v70 = v123;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v121, v60, v123);
  v71 = swift_allocObject(&unk_1007A1400, 24, 7);
  swift_unknownObjectWeakInit(v71 + 16, v1);
  v72 = swift_allocObject(&unk_1007A1400, 24, 7);
  swift_unknownObjectWeakInit(v72 + 16, v1);
  v73 = objc_allocWithZone((Class)type metadata accessor for ActivityAwardsDateQuery(0));
  v74 = ActivityAwardsDateQuery.init(dateComponents:initialAwardsHandler:updateHandler:)(v69, sub_10047E704, v71, sub_10047E704, v72);
  v75 = static os_log_type_t.default.getter(v74);
  result = (id)ACHLogUI();
  if (result)
  {
    v77 = result;
    os_log(_:dso:log:_:_:)(v75, &_mh_execute_header, result, "Activating awards date query", 28, 2, &_swiftEmptyArrayStorage);

    dispatch thunk of ActivityAwardsDateQuery.activate()();
    v78 = v127;
    v94 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery) = v74;

    (*(void (**)(char *, uint64_t))(v68 + 8))(v124, v70);
    v95 = v114;
LABEL_9:
    v96 = objc_msgSend(v78, "defaultCenter");
    v97 = objc_msgSend(v95, "mainQueue");
    v98 = swift_allocObject(&unk_1007A1400, 24, 7);
    swift_unknownObjectWeakInit(v98 + 16, v1);
    v133 = sub_10047E6D0;
    v134 = v98;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_1000398D4;
    v132 = &unk_1007A15F8;
    v99 = _Block_copy(&aBlock);
    v100 = (void **)objc_msgSend(v96, "addObserverForName:object:queue:usingBlock:", UIContentSizeCategoryDidChangeNotification, 0, v97, v99, swift_release(v134).n128_f64[0]);
    _Block_release(v99);

    v132 = (void *)swift_getObjectType(v100);
    aBlock = v100;
    v101 = v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener;
    swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener, v128, 33, 0);
    sub_10004C69C((uint64_t)&aBlock, v101);
    swift_endAccess(v128);
    v102 = objc_msgSend(v78, "defaultCenter");
    v103 = objc_msgSend((id)objc_opt_self(FIPauseRingsCoordinator), "didUpdatePauseStateNotification");
    v104 = objc_msgSend(v95, "mainQueue");
    v105 = swift_allocObject(&unk_1007A1400, 24, 7);
    swift_unknownObjectWeakInit(v105 + 16, v1);
    v106 = swift_allocObject(&unk_1007A1630, 32, 7);
    v107 = ObjectType;
    *(_QWORD *)(v106 + 16) = v105;
    *(_QWORD *)(v106 + 24) = v107;
    v133 = sub_10047E6FC;
    v134 = v106;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_1000398D4;
    v132 = &unk_1007A1648;
    v108 = _Block_copy(&aBlock);
    v109 = objc_msgSend(v102, "addObserverForName:object:queue:usingBlock:", v103, 0, v104, v108, swift_release(v134).n128_f64[0]);
    _Block_release(v108);
    swift_unknownObjectRelease(v109);

    v110 = objc_msgSend((id)objc_opt_self(APSubject), "subjectMonitorRegistry");
    v111 = objc_msgSend(v110, "addMonitor:", v1);
    swift_unknownObjectRelease(v110);
    v112 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription) = v111;
    swift_release(v126);
    return (id)swift_unknownObjectRelease(v112);
  }
  __break(1u);
  __break(1u);
  return result;
}

void sub_10047985C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10047A7D4();

  }
}

void sub_1004798AC(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t Strong;
  void *v17;
  void *v18;
  _BYTE *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _BYTE *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  void *v29;
  _BYTE v30[24];
  _QWORD v31[3];
  _QWORD v32[5];
  __int128 v33;
  __int128 v34;

  v4 = Notification.userInfo.getter(a1);
  if (v4)
  {
    v5 = (CHWorkoutDetailHeartRateTableViewCell *)v4;
    v31[0] = 0xD000000000000010;
    v31[1] = 0x8000000100688AB0;
    AnyHashable.init<A>(_:)(v32, v31, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)v5->cellPadding && (v13 = sub_10004C814((uint64_t)v32), (v6 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)v5[1].cellInset + 32 * v13, (uint64_t)&v33);
    }
    else
    {
      v33 = 0u;
      v34 = 0u;
    }
    swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
    sub_10004CC10((uint64_t)v32);
    if (*((_QWORD *)&v34 + 1))
    {
      if ((swift_dynamicCast(v31, &v33, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v14 = a3 + 16;
        v15 = v31[0];
        swift_beginAccess(v14, v32, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v14);
        if (Strong)
        {
          v17 = (void *)Strong;
          v18 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell);
          v19 = v18;

          if (v18)
          {
            v19[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isWheelchair] = v15;
            sub_1002D1218();

          }
        }
        swift_beginAccess(v14, &v33, 0, 0);
        v20 = swift_unknownObjectWeakLoadStrong(v14);
        if (v20)
        {
          v21 = (void *)v20;
          v22 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell);
          v23 = v22;

          if (v22)
          {
            v23[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_isWheelchair] = v15;
            sub_10018A750();

          }
        }
        swift_beginAccess(v14, v31, 0, 0);
        v24 = swift_unknownObjectWeakLoadStrong(v14);
        if (v24)
        {
          v25 = (void *)v24;
          v26 = *(void **)(v24 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell);
          v27 = v26;

          if (v26)
          {
            v27[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair] = v15;
            sub_1004FD64C();

          }
        }
        swift_beginAccess(v14, v30, 0, 0);
        v28 = swift_unknownObjectWeakLoadStrong(v14);
        if (v28)
        {
          v29 = (void *)v28;
          sub_10047A488((uint64_t)&off_100782F58, 1u);

        }
      }
    }
    else
    {
      sub_1000F996C((uint64_t)&v33);
    }
  }
}

void sub_100479AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  char v16[24];

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for Calendar(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (_BYTE *)Strong;
    if (qword_10081D558 != -1)
      swift_once(&qword_10081D558, sub_100006F7C);
    v13 = sub_10003CE9C(v7, (uint64_t)qword_100869D40);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
    (*(void (**)(char *, _BYTE *, uint64_t))(v4 + 16))(v6, &v12[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v3);
    v14 = Calendar.isDateInToday(_:)(v6) & 1;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v14 != v12[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday])
    {
      v12[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday] = v14;
      sub_10047A488((uint64_t)&off_100782F80, 1u);
    }

  }
}

void sub_100479C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD aBlock[5];
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider);
    v6 = swift_allocObject(&unk_1007A1400, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v4);
    aBlock[4] = sub_10047E604;
    v9 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000197D4;
    aBlock[3] = &unk_1007A16C0;
    v7 = _Block_copy(aBlock);
    objc_msgSend(v5, "allMindfulnessSessionsWithCompletion:", v7, swift_release(v9).n128_f64[0]);
    _Block_release(v7);

  }
}

void sub_100479D70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10047AE20(a1);

  }
}

void sub_100479DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10047B1D8();

  }
}

void sub_100479E18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView), "reloadData");

  }
}

uint64_t sub_100479E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  void *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  void *v45;
  __n128 v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t aBlock[5];
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[16];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v63 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  v13 = static os_log_type_t.default.getter(v12);
  v14 = (void *)HKLogActivity;
  v15 = v13;
  if (os_log_type_enabled(HKLogActivity, v13))
  {
    v58 = v14;
    v16 = swift_slowAlloc(22, -1);
    v60 = v5;
    v17 = v16;
    v18 = swift_slowAlloc(64, -1);
    v59 = v6;
    v19 = v18;
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315394;
    v20 = _typeName(_:qualified:)(a3, 0);
    v22 = (CHWorkoutDetailHeartRateTableViewCell *)v21;
    v66 = sub_10003E8EC(v20, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v17 + 4);
    swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
    *(_WORD *)(v17 + 12) = 2080;
    v30 = objc_msgSend((id)objc_opt_self(FIPauseRingsCoordinator), "didUpdatePauseStateNotification");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    v66 = sub_10003E8EC(v31, (unint64_t)v33, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v17 + 14);
    swift_bridgeObjectRelease(v33, v34, v35, v36, v37, v38, v39, v40);
    v41 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, v15, "%s received notification %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    v42 = v19;
    v6 = v59;
    swift_slowDealloc(v42, -1, -1);
    v43 = v17;
    v5 = v60;
    swift_slowDealloc(v43, -1, -1);

  }
  swift_beginAccess(v11, &v66, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v11);
  if (result)
  {
    v45 = (void *)result;
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v47 = (void *)static OS_dispatch_queue.main.getter(v46);
    v48 = swift_allocObject(&unk_1007A1680, 24, 7);
    *(_QWORD *)(v48 + 16) = v45;
    aBlock[4] = (uint64_t)sub_10047E71C;
    v65 = v48;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002D0F8;
    aBlock[3] = (uint64_t)&unk_1007A1698;
    v49 = _Block_copy(aBlock);
    v50 = v65;
    v51 = v45;
    swift_release(v50);
    static DispatchQoS.unspecified.getter(v52);
    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    v53 = sub_10002FAC0();
    v54 = sub_100047110(&qword_100828C80);
    v55 = sub_10002FB08();
    v56 = v63;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v54, v55, v5, v53);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v56, v49);
    _Block_release(v49);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v56, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v10, v62);
  }
  return result;
}

double sub_10047A2EC(char a1)
{
  char *v1;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  double result;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for HistoryDayViewController(0);
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setDelegate:", v1);

  }
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator] = 0;

  v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] = 1;
  sub_10047C3BC();
  v6 = swift_allocObject(&unk_1007A16F8, 24, 7);
  *(_QWORD *)(v6 + 16) = v1;
  v7 = v1;
  sub_100151A58((uint64_t)sub_10047E748, v6, 0.2);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_10047A3CC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData) == 1
    && (*(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation) & 1) == 0)
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation) = 1;
    sub_10047BF2C(1);
  }
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate);
  if (result)
  {
    v3 = result;
    sub_10021B750();
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_10047A488(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  void (*v26)(char *, uint64_t);
  void *v27;
  id v28;
  NSIndexSet *v29;
  void *v30;
  void *v31;
  void *v32;
  char *v34;
  uint64_t v35;
  unsigned int v36;
  char *v37;

  v36 = a2;
  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v34 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v34 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v34 - v16;
  v18 = __chkstk_darwin(v15);
  v37 = (char *)&v34 - v19;
  IndexSet.init()(v18);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v17, v4);
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v34 = v17;
    v35 = v2;
    swift_bridgeObjectRetain(a1);
    v21 = 0;
    do
    {
      v22 = *(unsigned __int8 *)(a1 + v21 + 32);
      if (*(_BYTE *)(a1 + v21 + 32) && (_DWORD)v22 != 1)
      {
        switch((_DWORD)v22)
        {
          case 2:
            v22 = 2;
            break;
          case 3:
            v22 = 3;
            break;
          case 4:
            v22 = 4;
            break;
          case 5:
            v22 = 5;
            break;
          case 6:
            v22 = 6;
            break;
          default:
            if (asc_100782EFF[0] == (_DWORD)v22)
            {
              v22 = 7;
            }
            else if (asc_100782EFF[1] == (_DWORD)v22)
            {
              v22 = 8;
            }
            else if (asc_100782EFF[2] == (_DWORD)v22)
            {
              v22 = 9;
            }
            else if (asc_100782EFF[3] == (_DWORD)v22)
            {
              v22 = 10;
            }
            else
            {
              v22 = 0;
            }
            break;
        }
      }
      ++v21;
      IndexSet.init(integer:)(v22);
      IndexSet.union(_:)(v8);
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v8, v4);
      v23(v14, v4);
      v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v24(v14, v11, v4);
    }
    while (v20 != v21);
    swift_bridgeObjectRelease(a1);
    v17 = v34;
    v2 = v35;
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  }
  v25 = v37;
  v24(v37, v14, v4);
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v17, v4);
  v27 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView);
  if ((v36 & 1) != 0)
  {
    v28 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView), "window"));

    if (!v28)
    {
      objc_msgSend(v27, "reloadData");
      return ((uint64_t (*)(char *, uint64_t))v26)(v25, v4);
    }
    IndexSet._bridgeToObjectiveC()(v29);
    v31 = v30;
    objc_msgSend(v27, "reloadSections:withRowAnimation:", v30, 100);
  }
  else
  {
    IndexSet._bridgeToObjectiveC()((NSIndexSet *)v36);
    v31 = v32;
    objc_msgSend(v27, "reloadSections:withRowAnimation:", v32, 5);
  }

  return ((uint64_t (*)(char *, uint64_t))v26)(v25, v4);
}

void sub_10047A7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  char v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  uint64_t v22;
  char v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  void *v32;
  id v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1001935D0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v20 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts;
    v21 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1
                                                    + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
    if (v21)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts));
      v23 = sub_1001829A0(v22, (uint64_t)v12);
      swift_bridgeObjectRelease(v21, v24, v25, v26, v27, v28, v29, v30);
      if ((v23 & 1) != 0)
      {
        swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
        return;
      }
      v31 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + v20);
    }
    else
    {
      v31 = 0;
    }
    *(_QWORD *)(v1 + v20) = v12;
    swift_bridgeObjectRelease(v31, v13, v14, v15, v16, v17, v18, v19);
    sub_10047A488((uint64_t)&off_100782F30, 1u);
    v32 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData);
    if (v32)
    {
      v33 = v32;
      sub_10047BC58(v33);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10047A9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_1007A1450, 32, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_10047E640;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007A1468;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  swift_retain(a2);
  swift_bridgeObjectRetain(a1);
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10002FAC0();
  v18 = sub_100047110(&qword_100828C80);
  v19 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10047AB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v21, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v9 = (char *)result;
    static Calendar.current.getter(result);
    type metadata accessor for MindfulnessSessionViewModel(0);
    v10 = static MindfulnessSessionViewModel.makeMindfulnessSessionViewModels(from:)(a2);
    __chkstk_darwin(v10);
    *(&v20 - 2) = (uint64_t)v7;
    *(&v20 - 1) = (uint64_t)v9;
    v12 = sub_10050EC4C((uint64_t (*)(id *))sub_10047E648, &v20 - 4, v11);
    v13 = (unint64_t)v12;
    v14 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels;
    v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels];
    if (v15)
    {
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v15);
      v17 = sub_1002A0FD8(v16, v13);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v13);
      if ((v17 & 1) != 0)
      {

        v18 = swift_bridgeObjectRelease(v13);
        return (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v18);
      }
      v19 = *(_QWORD *)&v9[v14];
    }
    else
    {
      v19 = 0;
    }
    *(_QWORD *)&v9[v14] = v13;
    swift_bridgeObjectRelease(v19);
    sub_10047A488((uint64_t)&off_100782FF8, 1u);

    return (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v18);
  }
  return result;
}

uint64_t sub_10047AD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v15 - v10;
  MindfulnessSessionViewModel.endDate.getter(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v4);
  v12 = Calendar.isDate(_:inSameDayAs:)(v11, v8);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v11, v4);
  return v12 & 1;
}

void sub_10047AE20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  uint64_t v32;
  __n128 v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = &_swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v48 = v7;
    v49 = v6;
    if (v10)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v11, v12, v13, v14, v15, v16, v17);
    v31 = &_swiftEmptyArrayStorage;
LABEL_18:
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v34 = (void *)static OS_dispatch_queue.main.getter(v33);
    v35 = swift_allocObject(&unk_1007A14A0, 32, 7);
    *(_QWORD *)(v35 + 16) = v31;
    v36 = v47;
    *(_QWORD *)(v35 + 24) = v47;
    aBlock[4] = sub_10047E690;
    v51 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_1007A14B8;
    v37 = _Block_copy(aBlock);
    v38 = v51;
    v39 = v36;
    swift_release(v38);
    static DispatchQoS.unspecified.getter(v40);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v41 = sub_10002FAC0();
    v42 = sub_100047110(&qword_100828C80);
    v43 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v43, v2, v41);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v49);
    return;
  }
  if (a1 < 0)
    v32 = a1;
  else
    v32 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v10 = _CocoaArrayWrapper.endIndex.getter(v32);
  v48 = v7;
  v49 = v6;
  if (!v10)
    goto LABEL_17;
LABEL_3:
  if (v10 >= 1)
  {
    v45 = v3;
    v46 = v2;
    for (i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v28 = *(id *)(a1 + 8 * i + 32);
      v29 = v28;
      v30 = objc_msgSend(v28, "hasClientRequiredURLs");
      if ((_DWORD)v30)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v19 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v29);
        specialized ContiguousArray._endMutation()(v20);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v21, v22, v23, v24, v25, v26, v27);
    v31 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
    v3 = v45;
    v2 = v46;
    goto LABEL_18;
  }
  __break(1u);
}

void sub_10047B108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  unsigned __int8 v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;

  v4 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
  v5 = *(CHWorkoutDetailHeartRateTableViewCell **)(a2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
  swift_bridgeObjectRetain(v5);
  v6 = sub_1002A0CE4(a1, (unint64_t)v5);
  swift_bridgeObjectRelease(v5, v7, v8, v9, v10, v11, v12, v13);
  if ((v6 & 1) == 0)
  {
    v14 = *(_QWORD *)(a2 + v4);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v23 = *(_QWORD *)(a2 + v4);
      else
        v23 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + v4));
      v15 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v14, v24, v25, v26, v27, v28, v29, v30);
      v14 = *(_QWORD *)(a2 + v4);
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(a2 + v4) = a1;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v14, v16, v17, v18, v19, v20, v21, v22);
    sub_10047A488((uint64_t)&off_100783020, v15 == 0);
  }
}

void sub_10047B1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  unsigned __int8 v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    if (v2 < 0)
      v29 = v2;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v28 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v2, v30, v31, v32, v33, v34, v35, v36);
    v2 = *(_QWORD *)(v1 + v6);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
  v11 = (uint64_t)sub_100193878((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v6 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
  swift_bridgeObjectRetain(v12);
  v13 = sub_1002A0CE4(v11, (unint64_t)v12);
  swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
  if ((v13 & 1) != 0)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v11, v21, v22, v23, v24, v25, v26, v27);
    return;
  }
  v2 = *(_QWORD *)(v1 + v6);
  if ((unint64_t)v2 >> 62)
    goto LABEL_9;
  v28 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  *(_QWORD *)(v1 + v6) = v11;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v2, v21, v22, v23, v24, v25, v26, v27);
  sub_10047A488((uint64_t)&off_100782FA8, v28 == 0);
}

void sub_10047B3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __n128 v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[5];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v43[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Calendar(0);
  v6 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v8 = (char *)&v43[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (_QWORD *)((char *)&v43[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v12 = static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = _dispatchPreconditionTest(_:)(v12);
  v15 = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v14 & 1) != 0)
  {
    static Calendar.current.getter(v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
    v16 = Calendar.isDateInToday(_:)(v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v42);
    v17 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController;
    v18 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController);
    v19 = v1;
    if ((v16 & 1) != 0)
    {
      if (!v18)
      {
        sub_1000252E0(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_appRecommendationDataProvider, (uint64_t)v45);
        v20 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext);
        sub_1000252E0(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_seymourRecommendationDataProvider, (uint64_t)v44);
        sub_1000252E0(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_walkSuggestionDataProvider, (uint64_t)v43);
        v21 = sub_10017C044((uint64_t)v45, v45[3]);
        v42 = (uint64_t)&v42;
        v22 = __chkstk_darwin(v21);
        v24 = (_QWORD *)((char *)&v43[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
        v26 = sub_10017C044((uint64_t)v44, v44[3]);
        v27 = __chkstk_darwin(v26);
        v29 = (_QWORD *)((char *)&v43[-1] - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
        v31 = sub_10017C044((uint64_t)v43, v43[3]);
        v32 = v19;
        v33 = __chkstk_darwin(v31);
        (*(void (**)(__n128))(v34 + 16))(v33);
        v35 = *v24;
        v36 = *v29;
        v37 = v20;
        v38 = sub_10047D644(v35, v37, v36);

        _s10FitnessApp24HistoryViewActionContextVwxx_0(v43);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v44);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v45);
        v39 = *(void **)(v32 + v17);
        *(_QWORD *)(v32 + v17) = v38;

        v40 = *(_QWORD *)(v32 + v17);
        if (v40)
        {
          v41 = v40 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate;
          *(_QWORD *)(v41 + 8) = &off_1007A1240;
          swift_unknownObjectWeakAssign(v41, v32);
        }
      }
      sub_10047A488((uint64_t)&off_100782F08, v18 == 0);
    }
    else
    {
      *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController) = 0;

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10047B780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  char v11;
  void *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  _QWORD *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  __n128 v19;
  uint64_t **v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  double v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  id v30;
  id v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (id *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    v12 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
    if (v12)
    {
      v31 = v12;
      v30 = objc_msgSend(v31, "activityMoveMode");
      v13 = *(char **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider);
      v14 = v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date;
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      v15(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
      v16 = sub_1001935D0();
      v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v17(v5, v2);
      v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts) = v16;
      v19 = swift_bridgeObjectRelease(v18);
      if ((ACHShouldUseNewAwardsSystem(v19) & 1) == 0)
      {
        v15(v5, v14, v2);
        v20 = sub_100193878((uint64_t)v5);
        v17(v5, v2);
        v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards) = v20;
        swift_bridgeObjectRelease(v21);
      }
      v22 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider);
      v23 = swift_allocObject(&unk_1007A1400, 24, 7);
      swift_unknownObjectWeakInit(v23 + 16, v1);
      aBlock[4] = sub_10047E604;
      v33 = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000197D4;
      aBlock[3] = &unk_1007A1418;
      v24 = _Block_copy(aBlock);
      objc_msgSend(v22, "allMindfulnessSessionsWithCompletion:", v24, swift_release(v33).n128_f64[0]);
      _Block_release(v24);
      v15(v5, v14, v2);
      v25 = (char *)swift_allocObject(&unk_1007A1400, 24, 7);
      swift_unknownObjectWeakInit(v25 + 16, v1);
      v26 = sub_10019672C((uint64_t)v5, (uint64_t)v30, v13, v25);
      ((void (*)(char *, uint64_t, double))v17)(v5, v2, v26);
      v27 = swift_release(v25);
      ((void (*)(char *, uint64_t, uint64_t, __n128))v15)(v5, v14, v2, v27);
      v28 = swift_allocObject(&unk_1007A1400, 24, 7);
      swift_unknownObjectWeakInit(v28 + 16, v1);
      swift_retain(v28);
      sub_100194764((uint64_t)v5, (uint64_t)sub_10047E60C, v28);

      v29 = swift_release(v28);
      ((void (*)(char *, uint64_t, __n128))v17)(v5, v2, v29);
      swift_release(v28);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10047BAC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  _BYTE v8[24];

  if (a1)
  {
    v4 = a3 + 16;
    swift_beginAccess(a3 + 16, v8, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = (void *)Strong;
      v7 = a1;
      sub_10047BC58(v7);

    }
  }
}

void sub_10047BB28(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18[24];

  if (a1)
  {
    v3 = a2 + 16;
    swift_beginAccess(a2 + 16, v18, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = (char *)Strong;
      v6 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
      if (v6)
      {
        v7 = v6;
        v8 = a1;
        v9 = objc_msgSend(v7, "activeEnergyBurned");
        v10 = objc_msgSend(v9, "_quantityByAddingQuantity:", v8);
        v11 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy;
        v12 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy];
        *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy] = v10;
        v13 = v10;

        v14 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell];
        if (v14)
        {
          v15 = *(void **)&v5[v11];
          v16 = v15;
          v17 = v14;
          sub_100303514(v15);

          v9 = v17;
          v13 = v16;
        }

        v5 = v7;
      }

    }
  }
}

void sub_10047BC58(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  _BYTE *v30;

  v2 = v1;
  v3 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData;
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData];
  if (v4)
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData] = a1;
    v5 = a1;

    sub_10047BF2C(0);
  }
  else
  {
    v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData] = 1;
    v6 = *(void **)&v2[v3];
    *(_QWORD *)&v2[v3] = a1;
    v7 = a1;

    v8 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell;
    v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell];
    if (v9)
    {
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
      v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts);
      *(_QWORD *)(v9 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease(v11);
    }
    v12 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell];
    if (v13)
    {
      v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
      v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts);
      *(_QWORD *)(v13 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts) = v14;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v15);
      v16 = *(void **)&v2[v12];
      if (v16)
      {
        v17 = (void *)objc_opt_self(HKUnit);
        v18 = v16;
        v19 = objc_msgSend(v17, "minuteUnit");
        v20 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v19, (double)*(uint64_t *)&v7[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_numberOfActiveMinutes]);

        sub_100303514(v20);
      }
    }
    v21 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell];
    if (v21)
    {
      v22 = *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_standData];
      v23 = *(_QWORD *)&v21[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData];
      *(_QWORD *)&v21[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = v22;
      v24 = v21;
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRelease(v23);
      sub_10018A90C();

    }
    v25 = *(char **)&v2[v8];
    if (v25 && *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartData])
    {
      v26 = v25;
      sub_100307C38();

    }
    v27 = *(char **)&v2[v12];
    if (v27 && *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartData])
    {
      v28 = v27;
      sub_100307C38();

    }
    if (v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] == 1)
    {
      v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation] = 1;
      v29 = swift_allocObject(&unk_1007A13D8, 24, 7);
      *(_QWORD *)(v29 + 16) = v2;
      v30 = v2;
      sub_100151A58((uint64_t)sub_10047E5BC, v29, 0.2);
      swift_release(v29);
    }
  }
}

uint64_t sub_10047BF2C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[5];
  _QWORD *v48;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData];
  if (v13)
  {
    v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
    if (v14)
    {
      v45 = result;
      v46 = v5;
      if ((a1 & 1) != 0)
      {
        v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell];
        if (v15)
        {
          v16 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_moveData];
          v17 = v13;
          swift_bridgeObjectRetain(v14);
          v18 = v15;
          swift_bridgeObjectRetain(v16);
          sub_100301D00(v19, v14, 0, 0);

          swift_bridgeObjectRelease(v16);
        }
        else
        {
          v21 = v13;
          swift_bridgeObjectRetain(v14);
        }
        v22 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell];
        if (v22)
        {
          v23 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_exerciseData];
          v24 = v22;
          swift_bridgeObjectRetain(v23);
          sub_100301D00(v25, v14, 0, 0);

          swift_bridgeObjectRelease(v23);
        }
        v26 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell];
        if (v26)
        {
          v27 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_standData];
          v28 = *(_QWORD *)&v26[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData];
          *(_QWORD *)&v26[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = v27;
          v29 = v26;
          swift_bridgeObjectRetain(v27);
          swift_bridgeObjectRelease(v28);
          sub_10018A90C();

        }
      }
      else
      {
        v20 = v13;
        swift_bridgeObjectRetain(v14);
      }
      v30 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell];
      if (v30)
      {
        v31 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_standData];
        v32 = *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData];
        *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = v31;
        v33 = v30;
        swift_bridgeObjectRetain(v31);
        swift_bridgeObjectRelease(v32);
        sub_10018A90C();

      }
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v35 = (void *)static OS_dispatch_queue.main.getter(v34);
      v36 = (_QWORD *)swift_allocObject(&unk_1007A1388, 40, 7);
      v36[2] = v2;
      v36[3] = v13;
      v36[4] = v14;
      aBlock[4] = sub_10047E5B0;
      v48 = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002D0F8;
      aBlock[3] = &unk_1007A13A0;
      v37 = _Block_copy(aBlock);
      v38 = v48;
      v39 = v13;
      v40 = v2;
      swift_release(v38);
      static DispatchQoS.unspecified.getter(v41);
      aBlock[0] = _swiftEmptyArrayStorage;
      v42 = sub_10002FAC0();
      v43 = sub_100047110(&qword_100828C80);
      v44 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v43, v44, v4, v42);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v37);
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v45);
    }
  }
  return result;
}

id sub_10047C2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v6 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v6, "begin");
  objc_msgSend(v6, "setAnimationDuration:", 0.25);
  v8 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp17ActivityChartData_moveData);
    v10 = v8;
    swift_bridgeObjectRetain(v9);
    sub_100301D00(v11, a3, 1, 1);

    v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  v12 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp17ActivityChartData_exerciseData);
    v14 = v12;
    swift_bridgeObjectRetain(v13);
    sub_100301D00(v15, a3, 1, 1);

    v7 = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  return objc_msgSend(v6, "commit", *(double *)&v7);
}

void sub_10047C3BC()
{
  uint64_t v0;
  char *v1;
  void *v2;
  uint64_t v3;
  char *v4;
  id v5;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary))
  {
    if (!v1)
      return;
    v2 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView];
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary];
    v4 = v1;
    objc_msgSend(v2, "hk_configureWithActivitySummary:animated:", v3, 1);
    v5 = objc_msgSend(v2, "ringGroup");
    objc_msgSend(v5, "setIsPaused:", v4[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused]);
  }
  else
  {
    if (!v1)
      return;
    v4 = v1;
    v5 = (id)ARUIRingsView.emptyRings()();
  }

}

void sub_10047C518()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char *v7;
  void (*v8)(char *, char *, uint64_t);
  id v9;
  Class isa;
  void (*v11)(char *, uint64_t);
  id v12;
  Class v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  Class v27;
  id v28;
  Class v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary];
  if (v6)
  {
    v7 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date];
    v8 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v8(v5, &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v2);
    v9 = v6;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v11(v5, v2);
    v12 = sub_10005F930(v9, isa, *(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser));

    v8(v5, v7, v2);
    v13 = Date._bridgeToObjectiveC()().super.isa;
    v11(v5, v2);
    v14 = sub_10005FBF8(v13);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v18 = sub_100047110(&qword_10082CEC0);
    v19 = swift_allocObject(v18, 128, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100624A40;
    *(_QWORD *)(v19 + 56) = type metadata accessor for HistoryDayViewController(0);
    *(_QWORD *)(v19 + 32) = v1;
    v20 = sub_10001E724(0, (unint64_t *)&qword_1008284B0, UIImage_ptr);
    *(_QWORD *)(v19 + 64) = v12;
    *(_QWORD *)(v19 + 120) = &type metadata for String;
    *(_QWORD *)(v19 + 88) = v20;
    *(_QWORD *)(v19 + 96) = v15;
    *(_QWORD *)(v19 + 104) = v17;
    v21 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage] = v12;
    v22 = v12;
    v23 = v1;
    swift_bridgeObjectRetain(v17);

    v24 = (uint64_t *)&v23[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText];
    v25 = *(_QWORD *)&v23[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText + 8];
    *v24 = v15;
    v24[1] = v17;
    swift_bridgeObjectRelease(v25);
    v26 = objc_allocWithZone((Class)UIActivityViewController);
    v27 = Array._bridgeToObjectiveC()().super.isa;
    v28 = objc_msgSend(v26, "initWithActivityItems:applicationActivities:", v27, 0, swift_bridgeObjectRelease(v19).n128_f64[0]);

    v29 = (Class)sub_10005FD28();
    if (!v29)
    {
      type metadata accessor for ActivityType(0);
      v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v31);
      v29 = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v30 = swift_bridgeObjectRelease(v32).n128_u64[0];
    }
    objc_msgSend(v28, "setExcludedActivityTypes:", v29, v30);

    aBlock[4] = ASFriendListDisplayMode.id.getter;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_1007A1350;
    v33 = _Block_copy(aBlock);
    objc_msgSend(v23, "presentViewController:animated:completion:", v28, 1, v33);
    _Block_release(v33);

  }
}

uint64_t sub_10047C838(void *a1, char *a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  char *v35;
  id v36;
  char *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  __int128 v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  void **aBlock;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  void *v62;
  id (*v63)();
  uint64_t v64;

  if (AAUIShouldUseNewTrophyCase(a1))
  {
    v58 = type metadata accessor for TrophyCaseAwardDetailViewController();
    v13 = *(void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider]
                   + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_healthStore);
    v14 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_friendListManager];
    sub_1000252E0((uint64_t)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider], (uint64_t)&aBlock);
    v15 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_badgeImageFactory];
    v16 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementResourceProvider];
    v17 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager];
    v18 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider];
    v19 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator];
    v49 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext];
    v50 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutFormattingManager];
    v51 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutDataProvider];
    v20 = a1;
    v57 = v13;
    v56 = v14;
    v55 = v15;
    v54 = v16;
    v53 = v17;
    v52 = v18;
    v21 = v19;
    v22 = v49;
    v23 = v50;
    v24 = v51;
    LOBYTE(v17) = objc_msgSend(v20, "unearned") ^ 1;
    v25 = (uint64_t)v62;
    v26 = (uint64_t)v63;
    v27 = sub_10017C044((uint64_t)&aBlock, (uint64_t)v62);
    *(_QWORD *)&v48 = v21;
    *((_QWORD *)&v48 + 1) = v22;
    v28 = sub_1005A7AB0(v20, v57, v56, v27, v55, v54, v53, v52, v48, v23, v24, 0, 0, (char)v17, 1, 0, v58, v25, v26);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&aBlock);
  }
  else
  {
    v28 = objc_msgSend(objc_allocWithZone((Class)CHAchievementDetailViewController), "initWithAchievement:locProvider:formatsForFriend:forDayView:forModalPresentation:shouldShowCelebration:", a1, *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider], 0, 1, 0, 0);
  }
  v29 = swift_allocObject(&unk_1007A12C0, 24, 7);
  *(_QWORD *)(v29 + 16) = a2;
  v30 = swift_allocObject(&unk_1007A12E8, 24, 7);
  *(_QWORD *)(v30 + 16) = a2;
  v31 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_insetContentView];
  v32 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
  v63 = sub_10047E514;
  v64 = v29;
  aBlock = _NSConcreteStackBlock;
  v60 = 1107296256;
  v61 = sub_10002D0F8;
  v62 = &unk_1007A1300;
  v33 = _Block_copy(&aBlock);
  v34 = v64;
  v35 = a2;
  swift_unknownObjectRetain(v28);
  v36 = v31;
  swift_retain(v29);
  swift_retain(v30);
  v37 = v6;
  swift_release(v34);
  v63 = sub_10047E548;
  v64 = v30;
  aBlock = _NSConcreteStackBlock;
  v60 = 1107296256;
  v61 = sub_10002D0F8;
  v62 = &unk_1007A1328;
  v38 = _Block_copy(&aBlock);
  swift_release(v64);
  v39 = objc_msgSend(v32, "initWithPresentingViewController:detailViewController:shouldPlayFlipInAnimation:initialBadgeFrame:conversionView:didStartAnimationBlock:didFinishAnimationBlock:", v37, v28, 1, v36, v33, v38, a3, a4, a5, a6);

  swift_unknownObjectRelease(v28);
  _Block_release(v38);
  _Block_release(v33);
  v40 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator;
  v41 = *(void **)&v37[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator];
  *(_QWORD *)&v37[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator] = v39;

  v42 = *(void **)&v37[v40];
  if (v42)
    objc_msgSend(v42, "setShouldAdjustForInset:", 0);
  v43 = objc_opt_self(UIViewController);
  v44 = swift_dynamicCastObjCClass(v28, v43);
  if (v44)
  {
    v45 = v44;
    swift_unknownObjectRetain(v28);
    v46 = objc_msgSend(v37, "navigationController");
    objc_msgSend(v46, "pushViewController:animated:", v45, 1);

    swift_release(v30);
    swift_release(v29);
    swift_unknownObjectRelease(v28);
  }
  else
  {
    swift_release(v30);
    swift_release(v29);
  }
  return swift_unknownObjectRelease(v28);
}

uint64_t sub_10047CCD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[53];

  v4[0] = &unk_10063E770;
  v4[1] = &unk_10063E788;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_10063E7A0;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = &unk_10063E7B8;
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[19] = &unk_10063E7B8;
    v4[20] = &unk_10063E7B8;
    v4[21] = &unk_10063E7B8;
    v4[22] = &unk_10063E788;
    v4[23] = &unk_10063E788;
    v4[24] = &unk_10063E788;
    v4[25] = &unk_10063E788;
    v4[26] = &unk_10063E788;
    v4[27] = &unk_10063E788;
    v4[28] = &unk_10063E788;
    v4[29] = &unk_10063E7A0;
    v4[30] = &unk_10063E7A0;
    v4[31] = &unk_10063E788;
    v4[32] = &unk_10063E7D0;
    v4[33] = &unk_10063E7D0;
    v4[34] = &unk_10063E7D0;
    v4[35] = &unk_10063E7D0;
    v4[36] = &unk_10063E7D0;
    v4[37] = &unk_10063E788;
    v4[38] = &unk_10063E7D0;
    v4[39] = &unk_10063E7A0;
    v4[40] = &unk_10063E788;
    v4[41] = &unk_10063E788;
    v4[42] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[43] = &unk_10063E788;
    v4[44] = &unk_10063E788;
    v4[45] = &unk_10063E7A0;
    v4[46] = &unk_10063E7A0;
    v4[47] = &unk_10063E788;
    v4[48] = &unk_10063E7A0;
    v4[49] = &unk_10063E788;
    v4[50] = &unk_10063E7E8;
    v4[51] = &unk_10063E788;
    v4[52] = &unk_10063E788;
    return swift_updateClassMetadata2(a1, 256, 53, v4, a1 + 80);
  }
  return result;
}

void sub_10047CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10047DBB4(a2, a3);
}

uint64_t sub_10047CF10(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = static os_log_type_t.default.getter(a1);
  v2 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v1, &_mh_execute_header, v2, "[HistoryDayViewController] appProtectionSubjectsChanged, refreshing workout icons", 81, 2, &_swiftEmptyArrayStorage);

  return sub_10047A488((uint64_t)&off_100783070, 1u);
}

id sub_10047CFDC(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id result;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  NSString v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  NSString *v44;
  NSString v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  NSString *v49;
  NSString v50;
  objc_super v51;
  __int128 v52[2];
  _QWORD v53[5];
  _QWORD v54[5];
  _QWORD v55[5];

  v55[3] = type metadata accessor for AppRecommendationDataProvider();
  v55[4] = &off_1007A2968;
  v55[0] = a1;
  v54[3] = type metadata accessor for SeymourWorkoutRecommendationDataProvider(0);
  v54[4] = &off_100786360;
  v54[0] = a3;
  *(_QWORD *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight] = 0;
  v53[3] = &type metadata for WalkSuggestionDataProvider;
  v53[4] = &off_1007A6E18;
  v8 = &a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  *(_QWORD *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription] = 0;
  v9 = &a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations] = &_swiftEmptyArrayStorage;
  sub_1000252E0((uint64_t)v55, (uint64_t)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider]);
  *(_QWORD *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_fitnessAppContext] = a2;
  sub_1000252E0((uint64_t)v54, (uint64_t)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendationDataProvider]);
  sub_1000252E0((uint64_t)v53, (uint64_t)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionDataProvider]);
  type metadata accessor for BasicImpressionsTracker(0);
  v10 = a4;
  v11 = a2;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_impressionsTracker] = BasicImpressionsTracker.__allocating_init(threshold:)(0.5);
  v12 = *(_QWORD *)&v11[OBJC_IVAR___CHFitnessAppContext_dependencies];
  swift_retain(v12);
  v13 = sub_100047110((uint64_t *)&unk_1008282C0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v52, 0, 0, v13);
  swift_release(v12);
  sub_10002411C(v52, (uint64_t)&v10[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_artworkImageLoader]);
  swift_retain(v12);
  v14 = sub_100047110((uint64_t *)&unk_1008361E0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v52, 0, 0, v14);
  swift_release(v12);
  v15 = v52[0];
  *(_OWORD *)&v10[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_eventHub] = v52[0];
  v16 = type metadata accessor for SubscriptionToken(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = swift_unknownObjectRetain(v15);
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_subscriptionToken] = SubscriptionToken.init(eventHub:)(v17, *((_QWORD *)&v15 + 1));
  swift_retain(v12);
  v18 = sub_100047110(&qword_100835510);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v52, 0, 0, v18);
  swift_release(v12);
  sub_10002411C(v52, (uint64_t)&v10[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_networkEvaluator]);

  v19 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v51.receiver = v10;
  v51.super_class = (Class)type metadata accessor for AddToYourRingCollectionViewController();
  v20 = objc_msgSendSuper2(&v51, "initWithCollectionViewLayout:", v19);

  v21 = v20;
  result = objc_msgSend(v21, "collectionView");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v23 = result;
  v24 = sub_1005C6040();
  objc_msgSend(v23, "setCollectionViewLayout:", v24);

  result = objc_msgSend(v21, "collectionView");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v25 = result;
  v26 = type metadata accessor for WalkSuggestionCollectionViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v26);
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v28);

  result = objc_msgSend(v21, "collectionView");
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v29 = result;
  v30 = type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  v31 = swift_getObjCClassFromMetadata(v30);
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "registerClass:forCellWithReuseIdentifier:", v31, v32);

  result = objc_msgSend(v21, "collectionView");
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v33 = result;
  v34 = type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  v35 = swift_getObjCClassFromMetadata(v34);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "registerClass:forCellWithReuseIdentifier:", v35, v36);

  result = objc_msgSend(v21, "collectionView");
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v37 = result;
  v38 = type metadata accessor for AppStoreAppRecommendationCollectionViewCell();
  v39 = swift_getObjCClassFromMetadata(v38);
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "registerClass:forCellWithReuseIdentifier:", v39, v40);

  result = objc_msgSend(v21, "collectionView");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v41 = result;
  v42 = type metadata accessor for AddToYourRingSectionHeaderView();
  v43 = swift_getObjCClassFromMetadata(v42);
  v44 = UICollectionElementKindSectionHeader;
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v43, v44, v45);

  result = objc_msgSend(v21, "collectionView");
  if (result)
  {
    v46 = result;
    v47 = type metadata accessor for AddToYourRingSectionSeparatorView();
    v48 = swift_getObjCClassFromMetadata(v47);
    v49 = UICollectionElementKindSectionFooter;
    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v48, v49, v50);

    sub_1005B2CA4();
    sub_1005B3278();

    _s10FitnessApp24HistoryViewActionContextVwxx_0(v53);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v54);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v55);
    return v21;
  }
LABEL_15:
  __break(1u);
  return result;
}

id sub_10047D644(uint64_t a1, void *a2, uint64_t a3)
{
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  id v20;
  _QWORD v23[3];
  ValueMetadata *v24;
  char **v25;
  _QWORD v26[3];
  uint64_t v27;
  _UNKNOWN **v28;
  _QWORD v29[3];
  uint64_t v30;
  _UNKNOWN **v31;

  v30 = type metadata accessor for AppRecommendationDataProvider();
  v31 = &off_1007A2968;
  v29[0] = a1;
  v27 = type metadata accessor for SeymourWorkoutRecommendationDataProvider(0);
  v28 = &off_100786360;
  v26[0] = a3;
  v24 = &type metadata for WalkSuggestionDataProvider;
  v25 = &off_1007A6E18;
  v6 = (char *)objc_allocWithZone((Class)type metadata accessor for AddToYourRingCollectionViewController());
  v7 = sub_10017C044((uint64_t)v29, v30);
  v8 = __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
  v12 = sub_10017C044((uint64_t)v26, v27);
  v13 = __chkstk_darwin(v12);
  v15 = (_QWORD *)((char *)&v23[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
  v17 = sub_10017C044((uint64_t)v23, (uint64_t)v24);
  v18 = __chkstk_darwin(v17);
  (*(void (**)(__n128))(v19 + 16))(v18);
  v20 = sub_10047CFDC(*v10, a2, *v15, v6);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v23);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v29);
  return v20;
}

id sub_10047D7F4()
{
  uint64_t v0;
  id v1;
  void *v2;
  UIImage *v3;
  NSData *v4;
  NSData *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  id v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  NSString v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v1 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage);
  if (v2)
  {
    v3 = v2;
    v4 = UIImagePNGRepresentation(v3);
    if (v4)
    {
      v5 = v4;
      v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v8 = v7;

      v9 = objc_allocWithZone((Class)LPImage);
      sub_1001AE60C(v6, v8);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v11 = String._bridgeToObjectiveC()();
      v12 = objc_msgSend(v9, "initWithData:MIMEType:", isa, v11);
      sub_10004D9E4(v6, v8);

      objc_msgSend(v1, "setImage:", v12);
      v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0
                                                      + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText
                                                      + 8);
      if (v13)
      {
        swift_bridgeObjectRetain(v13);
        v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
      }
      else
      {
        v14 = 0;
      }
      objc_msgSend(v1, "setSummary:", v14);

      sub_10004D9E4(v6, v8);
    }

  }
  return v1;
}

void *sub_10047D97C(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  id v16;
  os_log_type_t v17;
  void *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  if (!a1)
    return v4;
  v5 = v3;
  if (a1 != (void *)2)
  {
    if (a1 == (void *)1)
    {
      v8 = type metadata accessor for TrophyCaseAwardDetailViewController();
      v4 = 0;
      if (!objc_msgSend(a3, "isKindOfClass:", swift_getObjCClassFromMetadata(v8)))
        return v4;
      v9 = type metadata accessor for HistoryPagingViewController(0);
      v4 = 0;
      if (!objc_msgSend(a2, "isKindOfClass:", swift_getObjCClassFromMetadata(v9)))
        return v4;
      v10 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC);
      *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC) = a2;
      v11 = a2;

      goto LABEL_9;
    }
    v17 = static os_log_type_t.fault.getter(a1);
    v18 = (void *)HKLogActivity;
    v19 = v17;
    if (os_log_type_enabled(HKLogActivity, v17))
    {
      v20 = v18;
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v25 = v22;
      *(_DWORD *)v21 = 136315138;
      v24 = sub_10003E8EC(0xD000000000000037, 0x8000000100690570, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v21 + 4);
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "%s found unexpected UINavigationController.Operation; skipping transition",
        v21,
        0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    return 0;
  }
  v12 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC);
  if (!v12)
    return 0;
  sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v13 = a3;
  v14 = v12;
  v15 = static NSObject.== infix(_:_:)(v14, v13);

  v4 = 0;
  if ((v15 & 1) == 0)
    return v4;
LABEL_9:
  v4 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator);
  if (v4)
    v16 = v4;
  return v4;
}

void sub_10047DBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __n128 v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Swift::String v26;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  Swift::String v35;
  uint64_t v36;
  Swift::String v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  Swift::String v46;
  unint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  uint64_t v74;
  void *v75;
  char v76;
  char v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  void *v83;
  _BYTE *v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  void *v89;
  id v90;
  char *v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  unsigned int v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;

  v3 = v2;
  v110 = a2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v12 = static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v108 = v6;
  v109 = v5;
  v15 = HKLogActivity;
  v16 = static os_log_type_t.default.getter(v15);
  v17 = sub_100047110((uint64_t *)&unk_100827460);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100622F90;
  v112 = 0;
  v113 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease(v113, v19, v20, v21, v22, v23, v24, v25);
  v112 = 0xD00000000000001CLL;
  v113 = (CHWorkoutDetailHeartRateTableViewCell *)0x80000001006A03F0;
  v111 = a1;
  v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v26._object;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(object, v28, v29, v30, v31, v32, v33, v34);
  v35._countAndFlagsBits = 8236;
  v35._object = (void *)0xE200000000000000;
  String.append(_:)(v35);
  v36 = v110;
  v111 = v110;
  v37._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  v38 = (CHWorkoutDetailHeartRateTableViewCell *)v37._object;
  String.append(_:)(v37);
  swift_bridgeObjectRelease(v38, v39, v40, v41, v42, v43, v44, v45);
  v46._countAndFlagsBits = 93;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  v47 = v112;
  v48 = v113;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_100038CF8();
  *(_QWORD *)(v18 + 32) = v47;
  *(_QWORD *)(v18 + 40) = v48;
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v15, v16, v18);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v18, v49, v50, v51, v52, v53, v54, v55);
  v56 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex;
  v57 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex);
  if (v57 >= a1 && v57 <= v36)
  {
    v58 = v3;
    v59 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider);
    v60 = v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date;
    v62 = v108;
    v61 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v8, v60, v109);
    v63 = objc_msgSend(*(id *)(v59 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache), "activitySummaryForCacheIndex:", sub_1000237E8());
    (*(void (**)(char *, uint64_t))(v62 + 8))(v8, v61);
    if (v63)
    {
      v64 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary;
      v65 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
      if (v65)
      {
        v66 = v65;
        v67 = objc_msgSend(v66, "_allFieldsAreEqual:", v63);
        if ((_DWORD)v67)
        {
          v68 = static os_log_type_t.default.getter(v67);
          v69 = HKLogActivity;
          os_log(_:dso:log:_:_:)(v68, &_mh_execute_header, v69, "Activity summary updated, but fields did not change. Not updating UI.", 69, 2, &_swiftEmptyArrayStorage);
          goto LABEL_36;
        }

        v70 = *(void **)(v58 + v64);
      }
      else
      {
        v70 = 0;
      }
      *(_QWORD *)(v58 + v64) = v63;
      v69 = v63;

      v71 = *(void **)(v58 + v64);
      if (!v71)
      {
LABEL_38:

        return;
      }
      v72 = v71;
      if (!v70)
        sub_10047B780();
      v73 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell);
      if (v73)
      {
        v74 = *(_QWORD *)(v58 + v56);
        v75 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
        v76 = *(_BYTE *)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
        v77 = *(_BYTE *)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday);
        v78 = v72;
        v79 = v73;
        sub_1002D281C(v74, v71, v75, v76, v77);

      }
      sub_10047C3BC();
      v80 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell);
      v81 = v80;
      v66 = v72;
      sub_1005DA53C(v80, v71);

      v82 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
      v83 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell);
      if (v83)
      {
        v84 = v83;
        v85 = objc_msgSend(v66, "appleExerciseTime");
        v86 = objc_msgSend(v66, "appleExerciseTimeGoal");
        if (v84[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType])
          sub_1003033B4(v85, v86);
        else
          sub_100303228(v85, v86);

        v87 = *(void **)(v58 + v82);
        if (v87)
        {
          v88 = *(id *)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData);
          if (v88)
          {
            v89 = (void *)objc_opt_self(HKUnit);
            v90 = v87;
            v91 = (char *)v88;
            v92 = objc_msgSend(v89, "minuteUnit");
            v88 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v92, (double)*(uint64_t *)&v91[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_numberOfActiveMinutes]);

          }
          else
          {
            v93 = v87;
          }
          sub_100303514(v88);

        }
      }
      v94 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell);
      if (v94)
      {
        v95 = v94;
        v96 = objc_msgSend(v66, "appleStandHours");
        v97 = objc_msgSend(v66, "appleStandHoursGoal");
        sub_10018B37C(v96, v97);

      }
      v98 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell);
      if (v98)
      {
        v99 = v98;
        v100 = objc_msgSend(v66, "stepCount");
        v101 = objc_msgSend(v66, "_pushCount");
        v102 = objc_msgSend(v66, "distanceWalkingRunning");
        sub_1004FE4AC(v100, v101, v102, *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager));

      }
      v103 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell);
      if (v103)
      {
        v104 = v103;
        v105 = objc_msgSend(v66, "_flightsClimbed");
        sub_10020C2B8(v105);

      }
      v106 = objc_msgSend(v66, "_isStandalonePhoneSummary");
      if (v106 != *(unsigned __int8 *)(v58
                                      + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary))
      {
        *(_BYTE *)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary) = v106;
        sub_10047A488((uint64_t)&off_100783048, 1u);
      }
      if (*(_BYTE *)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) == 1)
      {
        *(_BYTE *)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) = 0;
        sub_10047C518();
      }
      v107 = *(void **)(v58 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController);
      if (!v107)
      {
LABEL_37:

        goto LABEL_38;
      }
      v63 = v107;
      sub_1005B3278();
LABEL_36:

      goto LABEL_37;
    }
  }
}

uint64_t sub_10047E310()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1007A1270, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_10047E50C;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007A1288;
  v13 = _Block_copy(aBlock);
  v14 = v22;
  v15 = v1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v17 = sub_10002FAC0();
  v18 = sub_100047110(&qword_100828C80);
  v19 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10047E4E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10047E50C()
{
  uint64_t v0;

  return sub_10047CF10(*(_QWORD *)(v0 + 16));
}

id sub_10047E514()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_achievementCellContentView)+ OBJC_IVAR____TtC10FitnessApp26AchievementCellContentView_achievementBadgeView), "setHidden:", 1);
}

id sub_10047E548()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_achievementCellContentView)+ OBJC_IVAR____TtC10FitnessApp26AchievementCellContentView_achievementBadgeView), "setHidden:", 0);
}

uint64_t sub_10047E57C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_10047E5B0()
{
  uint64_t *v0;

  return sub_10047C2B4(v0[2], v0[3], v0[4]);
}

uint64_t sub_10047E5BC()
{
  return sub_10047BF2C(1);
}

uint64_t sub_10047E5E0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10047E604(uint64_t a1)
{
  uint64_t v1;

  return sub_10047A9AC(a1, v1);
}

void sub_10047E60C(void *a1)
{
  uint64_t v1;

  sub_10047BB28(a1, v1);
}

uint64_t sub_10047E614()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10047E640()
{
  uint64_t v0;

  return sub_10047AB9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10047E648(uint64_t a1)
{
  uint64_t v1;

  return sub_10047AD28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_10047E664()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10047E690()
{
  uint64_t v0;

  sub_10047B108(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10047E698()
{
  uint64_t v0;

  sub_10047985C(v0);
}

void sub_10047E6A0(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  sub_1004798AC(a2, a1, v2);
}

void sub_10047E6A8(uint64_t a1)
{
  uint64_t v1;

  sub_100479AEC(a1, v1);
}

void sub_10047E6B0(uint64_t a1)
{
  uint64_t v1;

  sub_100479C84(a1, v1);
}

void sub_10047E6B8(uint64_t a1)
{
  uint64_t v1;

  sub_100479DC8(a1, v1);
}

void sub_10047E6D0(uint64_t a1)
{
  uint64_t v1;

  sub_100479E18(a1, v1);
}

uint64_t sub_10047E6D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10047E6FC(uint64_t a1)
{
  uint64_t v1;

  return sub_100479E7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10047E704(uint64_t a1)
{
  uint64_t v1;

  sub_100479D70(a1, v1);
}

uint64_t sub_10047E71C()
{
  return sub_10047A488((uint64_t)&off_100782FD0, 1u);
}

uint64_t sub_10047E748()
{
  uint64_t v0;

  return sub_10047A3CC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10047E7D8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1952541798;
  if (*v0 != 1)
    v1 = 1853321060;
  if (*v0)
    return v1;
  else
    return 28789;
}

void sub_10047E818()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer);
  v2 = sub_100047110(&qword_10082CEC0);
  v3 = swift_allocObject(v2, 96, 7);
  v4 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors);
  *(_OWORD *)(v3 + 16) = xmmword_100620BC0;
  v6 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC10FitnessApp14GradientColors_dark), "CGColor");
  type metadata accessor for CGColor(0);
  v8 = v7;
  *(_QWORD *)(v3 + 56) = v7;
  *(_QWORD *)(v3 + 32) = v6;
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(v0 + v4)
                                                             + OBJC_IVAR____TtC10FitnessApp14GradientColors_light), "CGColor"));
  *(_QWORD *)(v3 + 88) = v8;
  *(_QWORD *)(v3 + 64) = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setColors:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

char *sub_10047E930(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  Class isa;
  Class v20;
  objc_class *v21;
  char *v22;
  id v23;
  Class v24;
  objc_class *v25;
  char *v26;
  char *v27;
  id v28;
  uint64_t v29;
  char *v35;
  char *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  id v51;
  id v52;
  NSString v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  objc_super v70;
  objc_super v71;
  objc_super v72;

  v9 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  v10 = objc_allocWithZone((Class)CALayer);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v13 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v14 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = (void *)objc_opt_self(UIColor);
  v17 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v17);

  *(_QWORD *)&v11[v14] = v15;
  v18 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors;
  sub_10013AD0C();
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.6, 1.0, 0.0, 1.0).super.isa;
  v20 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.84706, 1.0, 0.0, 1.0).super.isa;
  v21 = (objc_class *)type metadata accessor for GradientColors();
  v22 = (char *)objc_allocWithZone(v21);
  *(_QWORD *)&v22[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(_QWORD *)&v22[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v20;
  v72.receiver = v22;
  v72.super_class = v21;
  v23 = objc_msgSendSuper2(&v72, "init");
  v24 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.65068, 1.0, 0.0, 1.0).super.isa;
  v25 = (objc_class *)type metadata accessor for MetricColors();
  v26 = (char *)objc_allocWithZone(v25);
  *(_QWORD *)&v26[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v23;
  *(_QWORD *)&v26[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v24;
  v71.receiver = v26;
  v71.super_class = v25;
  v27 = (char *)objc_msgSendSuper2(&v71, "init");
  v28 = *(id *)&v27[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  *(_QWORD *)&v11[v18] = v28;
  v29 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_circleColor;
  *(UIColor *)&v11[v29] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.14902, 0.14902, 0.14902, 1.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY] = 0;
  *(_OWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_upArrowNormalizedCenterStart] = xmmword_10063E830;
  *(_OWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_downArrowNormalizedCenterStart] = xmmword_10063E840;
  __asm { FMOV            V0.2D, #0.5 }
  *(_OWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_normalizedArrowCenter] = _Q0;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 1;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] = 1;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection] = 3;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] = 1;
  v35 = &v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds];
  *(_OWORD *)v35 = 0u;
  *((_OWORD *)v35 + 1) = 0u;

  v70.receiver = v11;
  v70.super_class = (Class)type metadata accessor for TrendArrowIndicatorView();
  v36 = (char *)objc_msgSendSuper2(&v70, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v36, "setClipsToBounds:", 1);
  v37 = objc_msgSend(v36, "layer");
  v38 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  objc_msgSend(v37, "addSublayer:", *(_QWORD *)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer]);

  v39 = *(void **)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_circleColor];
  v40 = *(id *)&v36[v38];
  v41 = objc_msgSend(v39, "CGColor");
  objc_msgSend(v40, "setBackgroundColor:", v41);

  v42 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer;
  v43 = *(void **)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer];
  objc_msgSend(v36, "addSubview:", v43);
  sub_10047E818();
  v44 = objc_msgSend(v43, "layer");
  v45 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  objc_msgSend(v44, "addSublayer:", *(_QWORD *)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer]);

  v46 = objc_msgSend(*(id *)&v36[v42], "layer");
  v47 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  objc_msgSend(v46, "addSublayer:", *(_QWORD *)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer]);

  v48 = *(void **)&v36[v47];
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterSourceAtop);
  v50 = v49;
  v51 = objc_allocWithZone((Class)CAFilter);
  v52 = v48;
  v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v50, v54, v55, v56, v57, v58, v59, v60);
  v61 = objc_msgSend(v51, "initWithType:", v53);

  objc_msgSend(v52, "setCompositingFilter:", v61);
  v62 = *(id *)&v36[v45];
  v63 = objc_msgSend(v16, "blackColor");
  v64 = objc_msgSend(v63, "CGColor");

  objc_msgSend(v62, "setStrokeColor:", v64);
  v65 = *(id *)&v36[v45];
  v66 = objc_msgSend(v16, "clearColor");
  v67 = objc_msgSend(v66, "CGColor");

  objc_msgSend(v65, "setFillColor:", v67);
  v68 = *(void **)&v36[v45];
  objc_msgSend(v68, "setLineCap:", kCALineCapRound);
  objc_msgSend(v68, "setLineJoin:", kCALineJoinMiter);
  sub_10047F30C();

  return v36;
}

uint64_t sub_10047EF58(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  Class isa;
  Class v13;
  objc_class *v14;
  char *v15;
  id v16;
  Class v17;
  objc_class *v18;
  char *v19;
  char *v20;
  id v21;
  uint64_t v22;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  objc_super v36;
  objc_super v37;

  v2 = v1;
  v3 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  v35 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  v4 = objc_allocWithZone((Class)CALayer);
  v5 = v2;
  *(_QWORD *)&v2[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  v33 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v7 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  v32 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v8 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  *(_QWORD *)&v5[v8] = v9;
  v11 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors;
  sub_10013AD0C();
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.6, 1.0, 0.0, 1.0).super.isa;
  v13 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.84706, 1.0, 0.0, 1.0).super.isa;
  v14 = (objc_class *)type metadata accessor for GradientColors();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v13;
  v37.receiver = v15;
  v37.super_class = v14;
  v16 = objc_msgSendSuper2(&v37, "init");
  v17 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.65068, 1.0, 0.0, 1.0).super.isa;
  v18 = (objc_class *)type metadata accessor for MetricColors();
  v19 = (char *)objc_allocWithZone(v18);
  *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v16;
  *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v17;
  v36.receiver = v19;
  v36.super_class = v18;
  v20 = (char *)objc_msgSendSuper2(&v36, "init");
  v21 = *(id *)&v20[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  *(_QWORD *)&v5[v11] = v21;
  v22 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_circleColor;
  *(UIColor *)&v5[v22] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.14902, 0.14902, 0.14902, 1.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY] = 0;
  *(_OWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_upArrowNormalizedCenterStart] = xmmword_10063E830;
  *(_OWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_downArrowNormalizedCenterStart] = xmmword_10063E840;

  __asm { FMOV            V0.2D, #0.5 }
  *(_OWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_normalizedArrowCenter] = _Q0;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 1;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] = 1;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection] = 3;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] = 1;
  v28 = &v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds];
  *(_OWORD *)v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;

  v29 = *(void **)&v5[v22];
  v30 = type metadata accessor for TrendArrowIndicatorView();
  swift_deallocPartialClassInstance(v5, v30, 176, 7);
  return 0;
}

void sub_10047F30C()
{
  char *v0;
  CGFloat Width;
  uint64_t v2;
  CGFloat MaxX;
  uint64_t v4;
  CGFloat v5;
  uint64_t v6;
  CGFloat Height;
  uint64_t v8;
  double v9;
  double v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v11);
  v2 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX] = Width * 0.24;
  objc_msgSend(v0, "bounds");
  MaxX = CGRectGetMaxX(v12);
  v4 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX] = MaxX - *(double *)&v0[v2];
  objc_msgSend(v0, "bounds");
  v5 = CGRectGetHeight(v13) * 0.33;
  v6 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY] = v5;
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v14);
  v8 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY] = v5 + Height * 0.24;
  v9 = *(double *)&v0[v2];
  if (qword_10081DD70 != -1)
    swift_once(&qword_10081DD70, sub_1000071BC);
  v10 = *(double *)&qword_10086AA00;
  *(double *)&v0[v2] = UIRoundToScale(v9, *(double *)&qword_10086AA00);
  *(double *)&v0[v4] = UIRoundToScale(*(double *)&v0[v4], v10);
  *(double *)&v0[v6] = UIRoundToScale(*(double *)&v0[v6], v10);
  *(double *)&v0[v8] = UIRoundToScale(*(double *)&v0[v8], v10);
}

id sub_10047F44C()
{
  char *v0;
  id v1;
  uint64_t v2;
  CGRect v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v2 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY;
  objc_msgSend(v1, "moveToPoint:", *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX], *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY]);
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "addLineToPoint:", CGRectGetMidX(v4), *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY]);
  objc_msgSend(v1, "addLineToPoint:", *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX], *(double *)&v0[v2]);
  return v1;
}

id sub_10047F4FC()
{
  char *v0;
  id v1;
  double v2;
  CGFloat MaxY;
  uint64_t v4;
  double MidX;
  double v6;
  CGRect v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v2 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX];
  objc_msgSend(v0, "bounds");
  MaxY = CGRectGetMaxY(v8);
  v4 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY;
  objc_msgSend(v1, "moveToPoint:", v2, MaxY - *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY]);
  objc_msgSend(v0, "bounds");
  MidX = CGRectGetMidX(v9);
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "addLineToPoint:", MidX, CGRectGetMaxY(v10) - *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY]);
  v6 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "addLineToPoint:", v6, CGRectGetMaxY(v11) - *(double *)&v0[v4]);
  return v1;
}

void sub_10047F60C(void *a1, char a2)
{
  _BYTE *v2;
  int v5;
  uint64_t v6;
  int v7;
  void *v8;
  double Width;
  double Height;
  char **v11;
  id v12;
  uint64_t v13;
  double v14;
  double MidX;
  void *v16;
  uint64_t v17;
  double v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  double v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  id v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  id v44;
  NSString v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  Class isa;
  Class v52;
  id v53;
  NSString v54;
  void *v55;
  NSString v56;
  uint64_t v57;
  _BYTE *v58;
  id v59;
  void *v60;
  id v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;

  v5 = v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection];
  v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] = (_BYTE)a1;
  v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection] = v5;
  v6 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation;
  if ((v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] & 1) != 0
    || v5 == 1
    || v5 != a1)
  {
    objc_msgSend(v2, "bounds");
    v78.origin.x = 0.0;
    v78.origin.y = 0.0;
    v78.size.width = 0.0;
    v78.size.height = 0.0;
    v7 = 0;
    if (!CGRectEqualToRect(v62, v78) && (a2 & 1) != 0)
    {
      sub_10047FF70(a1);
      v2[v6] = 0;
      v7 = 1;
    }
  }
  else
  {
    v7 = 0;
  }
  v8 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer];
  objc_msgSend(v8, "setAlpha:", 1.0);
  objc_msgSend(v2, "bounds");
  Width = CGRectGetWidth(v63);
  objc_msgSend(v2, "bounds");
  Height = CGRectGetHeight(v64);
  v11 = &selRef_tableView_titleForHeaderInSection_;
  if ((_BYTE)a1)
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    if (a1 == 1)
    {
      v13 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX;
      v14 = *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX];
      objc_msgSend(v2, "bounds");
      objc_msgSend(v12, "moveToPoint:", v14, CGRectGetMidY(v65));
      objc_msgSend(v2, "bounds");
      MidX = CGRectGetMidX(v66);
      objc_msgSend(v2, "bounds");
      objc_msgSend(v12, "addLineToPoint:", MidX, CGRectGetMidY(v67));
      v16 = v8;
      v17 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX;
      v18 = *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX];
      objc_msgSend(v2, "bounds");
      objc_msgSend(v12, "addLineToPoint:", v18, CGRectGetMidY(v68));
      v19 = objc_msgSend(v12, "CGPath");

      v20 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
      v21 = *(double *)&v2[v13];
      objc_msgSend(v2, "bounds");
      objc_msgSend(v20, "moveToPoint:", v21, CGRectGetMidY(v69));
      objc_msgSend(v2, "bounds");
      v22 = CGRectGetMidX(v70);
      objc_msgSend(v2, "bounds");
      objc_msgSend(v20, "addLineToPoint:", v22, CGRectGetMidY(v71));
      v23 = *(double *)&v2[v17];
      v8 = v16;
      v11 = &selRef_tableView_titleForHeaderInSection_;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v20, "addLineToPoint:", v23, CGRectGetMidY(v72));
      v24 = 7.0;
      v25 = 0.0;
      v26 = 115.0;
    }
    else
    {
      objc_msgSend(v2, "bounds");
      v30 = CGRectGetMidX(v74);
      objc_msgSend(v2, "bounds");
      v31 = CGRectGetMaxY(v75) - *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
      objc_msgSend(v12, "moveToPoint:", v30, v31);
      objc_msgSend(v12, "addLineToPoint:", v30, v31);
      v19 = objc_msgSend(v12, "CGPath");

      v20 = sub_10047F4FC();
      v24 = 8.0;
      v25 = 0.0;
      v26 = 150.0;
    }
  }
  else
  {
    v27 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(v2, "bounds");
    v28 = CGRectGetMidX(v73);
    v29 = *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
    objc_msgSend(v27, "moveToPoint:", v28, v29);
    objc_msgSend(v27, "addLineToPoint:", v28, v29);
    v19 = objc_msgSend(v27, "CGPath");

    v20 = sub_10047F44C();
    v24 = 7.0;
    v25 = 11.0;
    v26 = 115.0;
  }
  v32 = Width * 0.5;
  v33 = Height * 0.5;
  v34 = objc_msgSend(v20, v11[307]);

  objc_msgSend(v2, "bounds");
  CGRectGetWidth(v76);
  objc_msgSend(v2, "bounds");
  CGRectGetHeight(v77);
  if (v7)
  {
    v35 = String._bridgeToObjectiveC()();
    v36 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v35);

    v37 = v36;
    objc_msgSend(v37, "setBeginTime:", CACurrentMediaTime() + 0.133);

    objc_msgSend(v37, "setDuration:", 0.33);
    v38 = objc_allocWithZone((Class)CAMediaTimingFunction);
    v39 = v37;
    LODWORD(v40) = 1039516303;
    LODWORD(v41) = 1043878380;
    LODWORD(v42) = 1044549468;
    LODWORD(v43) = 1.0;
    v44 = objc_msgSend(v38, "initWithControlPoints::::", v40, v41, v42, v43);
    objc_msgSend(v39, "setTimingFunction:", v44);

    objc_msgSend(v39, "setFromValue:", v19);
    objc_msgSend(v39, "setToValue:", v34);
    v45 = String._bridgeToObjectiveC()();
    v46 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v45);

    objc_msgSend(v46, "setDuration:", 0.84);
    v47 = (void *)objc_opt_self(CAMediaTimingFunction);
    v48 = v46;
    v49 = objc_msgSend(v47, "functionWithName:", kCAMediaTimingFunctionLinear);
    objc_msgSend(v48, "setTimingFunction:", v49);

    objc_msgSend(v48, "setStiffness:", 1000.0);
    objc_msgSend(v48, "setDamping:", v26);
    objc_msgSend(v48, "setMass:", v24);
    objc_msgSend(v48, "setInitialVelocity:", v25);
    v50 = v48;
    isa = CGPoint._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v50, "setFromValue:", isa);

    v52 = CGPoint._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v50, "setToValue:", v52);

    v53 = objc_msgSend(v8, "layer");
    v54 = String._bridgeToObjectiveC()();
    objc_msgSend(v53, "addAnimation:forKey:", v50, v54);

    v55 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer];
    v56 = String._bridgeToObjectiveC()();
    objc_msgSend(v55, "addAnimation:forKey:", v39, v56);

    v57 = swift_allocObject(&unk_1007A1878, 48, 7);
    *(_QWORD *)(v57 + 16) = v2;
    *(_QWORD *)(v57 + 24) = v34;
    *(double *)(v57 + 32) = v32;
    *(double *)(v57 + 40) = v33;
    v58 = v2;
    v59 = v34;
    sub_100151A58((uint64_t)sub_100480A1C, v57, 0.2155);
    swift_release(v57);
    v34 = v19;
    v19 = v59;
  }
  else
  {
    v60 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v60, "begin");
    objc_msgSend(v60, "setDisableActions:", 1);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer], "setPath:", v34);
    v61 = objc_msgSend(v8, "layer");
    objc_msgSend(v61, "setPosition:", v32, v33);

    objc_msgSend(v60, "commit");
  }

  v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 1;
}

void sub_10047FEE4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v7;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer), "setPath:", a2);
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer), "layer"));
  objc_msgSend(v7, "setPosition:", a3, a4);

}

id sub_10047FF70(id result)
{
  char *v1;
  char v2;
  int v3;
  void *v4;

  v2 = (char)result;
  if ((v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] & 1) != 0
    || (v3 = v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection], (v3 | 2) == 3)
    || v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] != v3)
  {
    v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 0;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer], "setAlpha:", 0.0);
    v4 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v4, "begin");
    objc_msgSend(v4, "setDisableActions:", 1);
    sub_100480050(v2, v1);
    return objc_msgSend(v4, "commit");
  }
  return result;
}

void sub_100480050(char a1, char *a2)
{
  void *v3;
  id v4;
  double v5;
  double MidX;
  double v7;
  id v8;
  double v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  id v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  id v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  if (a1)
  {
    v3 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer];
    if (a1 == 1)
    {
      v4 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
      v5 = *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX];
      objc_msgSend(a2, "bounds");
      objc_msgSend(v4, "moveToPoint:", v5, CGRectGetMidY(v19));
      objc_msgSend(a2, "bounds");
      MidX = CGRectGetMidX(v20);
      objc_msgSend(a2, "bounds");
      objc_msgSend(v4, "addLineToPoint:", MidX, CGRectGetMidY(v21));
      v7 = *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX];
      objc_msgSend(a2, "bounds");
      objc_msgSend(v4, "addLineToPoint:", v7, CGRectGetMidY(v22));
      v8 = objc_msgSend(v4, "CGPath");

      objc_msgSend(v3, "setPath:", v8);
      v9 = 0.5;
    }
    else
    {
      v14 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
      objc_msgSend(a2, "bounds");
      v15 = CGRectGetMidX(v24);
      objc_msgSend(a2, "bounds");
      v16 = CGRectGetMaxY(v25) - *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
      objc_msgSend(v14, "moveToPoint:", v15, v16);
      objc_msgSend(v14, "addLineToPoint:", v15, v16);
      v8 = objc_msgSend(v14, "CGPath");

      objc_msgSend(v3, "setPath:", v8);
      v9 = -0.3;
    }
  }
  else
  {
    v10 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer];
    v11 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(a2, "bounds");
    v12 = CGRectGetMidX(v23);
    v13 = *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
    objc_msgSend(v11, "moveToPoint:", v12, v13);
    objc_msgSend(v11, "addLineToPoint:", v12, v13);
    v8 = objc_msgSend(v11, "CGPath");

    objc_msgSend(v10, "setPath:", v8);
    v9 = 1.3;
  }

  v18 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer], "layer");
  objc_msgSend(a2, "bounds");
  v17 = CGRectGetWidth(v26) * 0.5;
  objc_msgSend(a2, "bounds");
  objc_msgSend(v18, "setPosition:", v17, CGRectGetHeight(v27) * v9);

}

void sub_100480390()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  unint64_t v20;
  objc_super v21;
  CGRect v22;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for TrendArrowIndicatorView();
  objc_msgSendSuper2(&v21, "layoutSubviews");
  v9 = (double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds];
  v22.origin.x = v2;
  v22.origin.y = v4;
  v22.size.width = v6;
  v22.size.height = v8;
  if (!CGRectEqualToRect(v22, *(CGRect *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds]))
  {
    *v9 = v2;
    v9[1] = v4;
    v9[2] = v6;
    v9[3] = v8;
    v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer];
    objc_msgSend(v10, "setFrame:", v2, v4, v6, v8);
    objc_msgSend(v10, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    sub_10047F30C();
    v19 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v19, "begin");
    objc_msgSend(v19, "setDisableActions:", 1);
    sub_100480524((uint64_t)v0, v2, v4, v6, v8, v12, v14, v16, v18);
    objc_msgSend(v19, "commit");
    v20 = v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection];
    if ((v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] & 1) != 0)
      sub_10047F60C((void *)v20, 0);
    else
      sub_10047FF70((id)v20);
  }
}

id sub_100480524(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  void *v17;
  double Width;
  void *v19;
  void *v20;
  CGRect v23;

  v17 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer);
  Width = CGRectGetWidth(*(CGRect *)&a2);
  if (qword_10081DD70 != -1)
    swift_once(&qword_10081DD70, sub_1000071BC);
  objc_msgSend(v17, "setLineWidth:", UIRoundToScale(Width * 0.11, *(double *)&qword_10086AA00));
  v19 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer);
  objc_msgSend(v19, "setFrame:", a2, a3, a4, a5);
  v20 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer);
  objc_msgSend(v20, "setFrame:", a6, a7, a8, a9);
  objc_msgSend(v20, "bounds");
  objc_msgSend(v17, "setFrame:");
  objc_msgSend(v19, "bounds");
  objc_msgSend(v19, "setCornerRadius:", CGRectGetWidth(v23) * 0.5);
  objc_msgSend(v20, "setEndPoint:", 0.5, 0.275);
  return objc_msgSend(v20, "setStartPoint:", 0.5, 0.725);
}

id sub_100480700()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendArrowIndicatorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendArrowIndicatorView()
{
  return objc_opt_self(_TtC10FitnessApp23TrendArrowIndicatorView);
}

uint64_t storeEnumTagSinglePayload for TrendArrowIndicatorAnimationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100480814 + 4 * byte_10063E895[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100480848 + 4 * byte_10063E890[v4]))();
}

uint64_t sub_100480848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100480850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100480858);
  return result;
}

uint64_t sub_100480864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10048086CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100480870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100480878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrendArrowIndicatorAnimationState()
{
  return &type metadata for TrendArrowIndicatorAnimationState;
}

uint64_t storeEnumTagSinglePayload for TrendArrowIndicatorDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004808E0 + 4 * byte_10063E89F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100480914 + 4 * byte_10063E89A[v4]))();
}

uint64_t sub_100480914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048091C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100480924);
  return result;
}

uint64_t sub_100480930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100480938);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10048093C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100480944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrendArrowIndicatorDirection()
{
  return &type metadata for TrendArrowIndicatorDirection;
}

unint64_t sub_100480964()
{
  unint64_t result;

  result = qword_1008355D0;
  if (!qword_1008355D0)
  {
    result = swift_getWitnessTable(&unk_10063E960, &type metadata for TrendArrowIndicatorDirection);
    atomic_store(result, (unint64_t *)&qword_1008355D0);
  }
  return result;
}

unint64_t sub_1004809AC()
{
  unint64_t result;

  result = qword_1008355D8;
  if (!qword_1008355D8)
  {
    result = swift_getWitnessTable(&unk_10063E9C8, &type metadata for TrendArrowIndicatorAnimationState);
    atomic_store(result, (unint64_t *)&qword_1008355D8);
  }
  return result;
}

uint64_t sub_1004809F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100480A1C()
{
  uint64_t v0;

  sub_10047FEE4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

void destroy for MirrorRaceOnRouteView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));

}

_QWORD *initializeWithCopy for MirrorRaceOnRouteView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  v7 = (void *)a2[7];
  a1[6] = v6;
  a1[7] = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  v8 = v6;
  v9 = v7;
  return a1;
}

_QWORD *assignWithCopy for MirrorRaceOnRouteView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a2[6];
  v11 = (void *)a1[6];
  a1[6] = v10;
  v12 = v10;

  v13 = (void *)a2[7];
  v14 = (void *)a1[7];
  a1[7] = v13;
  v15 = v13;

  return a1;
}

_QWORD *assignWithTake for MirrorRaceOnRouteView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_release(v7);
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(a1[5]);
  v8 = (void *)a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);

  v9 = (void *)a1[7];
  a1[7] = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorRaceOnRouteView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorRaceOnRouteView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorRaceOnRouteView()
{
  return &type metadata for MirrorRaceOnRouteView;
}

uint64_t sub_100480CA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B86C4, 1);
}

uint64_t sub_100480CB4@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  double v33;
  __n128 v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  double v47;
  id v48;
  void (**v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  void (*v76)(char *, _QWORD, _QWORD *);
  unint64_t v77;
  char *v78;
  _QWORD *v79;
  void (*v80)(char *, _QWORD *);
  uint64_t v81;
  double v82;
  id v83;
  void (**v84)(char *, uint64_t);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t OpaqueTypeConformance2;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  int *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  void (*v115)(char *, uint64_t);
  void (*v116)(char *, uint64_t);
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  void (**v122)(char *, uint64_t);
  id v123;
  void (*v124)(char *, _QWORD *);
  void (*v125)(char *, _QWORD, _QWORD *);
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  _QWORD *v143;
  id *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;

  v142 = a2;
  v139 = sub_100047110(&qword_10081EFB0);
  v141 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v138 = (char *)&v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_100047110(&qword_10082F1F0);
  v150 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v148 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v149 = (char *)&v122 - v6;
  v136 = type metadata accessor for RaceRemainingDistanceMetricView(0);
  v137 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v135 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100047110(&qword_1008355E0);
  v156 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v155 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v158 = (char *)&v122 - v10;
  v134 = type metadata accessor for MetricPlatterConstants(0);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v130 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RacePosition(0);
  __chkstk_darwin(v12);
  v126 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for RaceElevationMetricView(0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v127 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100047110(&qword_1008355E8);
  __chkstk_darwin(v129);
  v128 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100047110(&qword_1008355F0);
  v153 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v152 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v157 = (char *)&v122 - v18;
  v143 = (_QWORD *)type metadata accessor for WorkoutViewStyle(0);
  v19 = *(v143 - 1);
  v20 = __chkstk_darwin(v143);
  v22 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for RaceSecondsAheadOfGhostMetricView(0, v20);
  v122 = *(void (***)(char *, uint64_t))(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v122 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100047110(&qword_1008355F8);
  v146 = *(_QWORD *)(v154 - 8);
  v26 = v146;
  __chkstk_darwin(v154);
  v151 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v122 - v29;
  v145 = (char *)&v122 - v29;
  v144 = a1;
  v162 = *((_OWORD *)a1 + 1);
  v31 = *((_QWORD *)&v162 + 1);
  v32 = swift_retain(*((_QWORD *)&v162 + 1));
  v33 = RacePositionStatePublisher.secondsAheadOfGhost.getter(v32);
  sub_10004D634((uint64_t)&v162);
  type metadata accessor for RaceWorkoutConfiguration(0);
  v34 = swift_retain(v31);
  v35 = RacePositionStatePublisher.secondsAheadOfGhost.getter(v34);
  v36 = sub_10004D634((uint64_t)&v162);
  v37 = static RaceWorkoutConfiguration.performanceColorFor(_:)(v36, v35);
  v38 = Color.init(_:)(v37);
  v123 = a1[7];
  RaceSecondsAheadOfGhostMetricView.init(secondsAheadOfGhost:color:formattingManager:didCrossFinishLine:)(v38, v123, 0, v33);
  v125 = *(void (**)(char *, _QWORD, _QWORD *))(v19 + 104);
  v39 = v143;
  v125(v22, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v143);
  v40 = sub_1000083D8(&qword_100835600, (uint64_t (*)(uint64_t))&type metadata accessor for RaceSecondsAheadOfGhostMetricView, (uint64_t)&protocol conformance descriptor for RaceSecondsAheadOfGhostMetricView);
  v41 = v151;
  View.workoutViewStyle(_:)(v22, v23, v40);
  v124 = *(void (**)(char *, _QWORD *))(v19 + 8);
  v124(v22, v39);
  v122[1](v25, v23);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v30, v41, v154);
  swift_retain(v31);
  v42 = v126;
  RacePositionStatePublisher.racePosition.getter(v43);
  sub_10004D634((uint64_t)&v162);
  swift_retain(v31);
  v45 = RacePositionStatePublisher.positionOnRoute.getter(v44);
  sub_10004D634((uint64_t)&v162);
  swift_retain(v31);
  v47 = RacePositionStatePublisher.ghostPositionOnRoute.getter(v46);
  sub_10004D634((uint64_t)&v162);
  v48 = v144[6];
  v161 = *((_OWORD *)v144 + 2);
  v49 = (void (**)(char *, uint64_t))v48;
  v122 = v49;
  v50 = sub_10004D65C((uint64_t)&v161);
  v51 = RaceInformationPublisher.routePoints.getter(v50);
  sub_10004D634((uint64_t)&v161);
  v53 = type metadata accessor for RaceElevationChartProperties(0, v52);
  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  v54 = RaceElevationChartProperties.init(activityType:chartPoints:)(v49, v51);
  v55 = v123;
  v56 = v127;
  v57 = RaceElevationMetricView.init(racePosition:positionOnRoute:ghostPositionOnRoute:chartProperties:formattingManager:)(v42, v54, v55, v45, v47);
  v58 = static Edge.Set.bottom.getter(v57);
  LOBYTE(v39) = v58;
  v59 = v130;
  v60 = MetricPlatterConstants.init()(v58);
  v61 = MetricPlatterConstants.heightOfChartLabels.getter(v60);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v59, v134);
  v62 = EdgeInsets.init(_all:)(v61 + 8.0);
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = v131;
  v70 = v128;
  v71 = v132;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v128, v56, v132);
  v72 = v129;
  v73 = &v70[*(int *)(v129 + 36)];
  v74 = (uint64_t)v70;
  *v73 = (char)v39;
  *((double *)v73 + 1) = v62;
  *((_QWORD *)v73 + 2) = v64;
  *((_QWORD *)v73 + 3) = v66;
  *((_QWORD *)v73 + 4) = v68;
  v73[40] = 0;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v71);
  v75 = v143;
  v76 = v125;
  v125(v22, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v143);
  v77 = sub_1004817F8();
  v78 = v152;
  View.workoutViewStyle(_:)(v22, v72, v77);
  v79 = v75;
  v80 = v124;
  v124(v22, v75);
  sub_10048187C(v74);
  (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v157, v78, v147);
  swift_retain(v31);
  v82 = RacePositionStatePublisher.remainingRouteDistance.getter(v81);
  sub_10004D634((uint64_t)&v162);
  v83 = v55;
  v134 = (uint64_t)v83;
  v84 = v122;
  v85 = FIUIDistanceTypeForActivityType(v122);
  v86 = v135;
  RaceRemainingDistanceMetricView.init(remainingDistance:formattingManager:distanceType:)(*(_QWORD *)&v82, 0, v83, v85);
  v87 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  v76(v22, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v79);
  v88 = sub_1000083D8(&qword_100835610, (uint64_t (*)(uint64_t))&type metadata accessor for RaceRemainingDistanceMetricView, (uint64_t)&protocol conformance descriptor for RaceRemainingDistanceMetricView);
  v89 = v155;
  v90 = v136;
  View.workoutViewStyle(_:)(v22, v136, v88);
  v80(v22, v79);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v86, v90);
  (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v158, v89, v159);
  v160 = *(_OWORD *)v144;
  v91 = *((_QWORD *)&v160 + 1);
  swift_retain(*((_QWORD *)&v160 + 1));
  v92 = v138;
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(4, v134, v84, v91);
  sub_10004D634((uint64_t)&v160);
  v93 = v79;
  v94 = ((uint64_t (*)(char *, uint64_t, _QWORD *))v76)(v22, v87, v79);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v94, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
  v96 = v148;
  v97 = v139;
  View.workoutViewStyle(_:)(v22, v139, OpaqueTypeConformance2);
  v80(v22, v93);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v92, v97);
  v98 = v150;
  v99 = v149;
  v100 = v96;
  v101 = v140;
  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v149, v96, v140);
  v102 = *(void (**)(char *, char *, uint64_t))(v146 + 16);
  v103 = v151;
  v104 = v154;
  v102(v151, v145, v154);
  v143 = *(_QWORD **)(v153 + 16);
  v105 = v152;
  v106 = v147;
  ((void (*)(char *, char *, uint64_t))v143)(v152, v157, v147);
  v107 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
  v107(v155, v158, v159);
  v144 = *(id **)(v98 + 16);
  ((void (*)(char *, char *, uint64_t))v144)(v100, v99, v101);
  v108 = v142;
  v102((char *)v142, v103, v104);
  v109 = (int *)sub_100047110(&qword_100835618);
  ((void (*)(uint64_t, char *, uint64_t))v143)(v108 + v109[12], v105, v106);
  v110 = v108 + v109[16];
  v111 = v108;
  v112 = v155;
  v113 = v159;
  v107((char *)v110, v155, v159);
  v114 = v148;
  ((void (*)(uint64_t, char *, uint64_t))v144)(v111 + v109[20], v148, v101);
  v115 = *(void (**)(char *, uint64_t))(v150 + 8);
  v115(v149, v101);
  v116 = *(void (**)(char *, uint64_t))(v156 + 8);
  v116(v158, v113);
  v117 = *(void (**)(char *, uint64_t))(v153 + 8);
  v118 = v106;
  v117(v157, v106);
  v119 = *(void (**)(char *, uint64_t))(v146 + 8);
  v120 = v154;
  v119(v145, v154);
  v115(v114, v101);
  v116(v112, v113);
  v117(v152, v118);
  return ((uint64_t (*)(char *, uint64_t))v119)(v151, v120);
}

uint64_t sub_1004817C8@<X0>(char *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  _OWORD v5[4];

  v2 = v1[1];
  v5[0] = *v1;
  v5[1] = v2;
  v3 = v1[3];
  v5[2] = v1[2];
  v5[3] = v3;
  return sub_100480CB4((id *)v5, a1);
}

unint64_t sub_1004817F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835608;
  if (!qword_100835608)
  {
    v1 = sub_100007050(&qword_1008355E8);
    sub_1000083D8(&qword_100824470, (uint64_t (*)(uint64_t))&type metadata accessor for RaceElevationMetricView, (uint64_t)&protocol conformance descriptor for RaceElevationMetricView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835608);
  }
  return result;
}

uint64_t sub_10048187C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_1008355E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004818C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835620;
  if (!qword_100835620)
  {
    v1 = sub_100007050(&qword_100835628);
    sub_100028384(&qword_1008350E8, &qword_1008350F0, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100028384(&qword_100835630, &qword_100835638, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835620);
  }
  return result;
}

double sub_10048195C@<D0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  double v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, __n128);
  _QWORD *v33;
  double result;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v39 = a6;
  v36 = a4;
  LODWORD(v37) = a5 & 1;
  v11 = type metadata accessor for AttributedString(0);
  v38 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - v15;
  v17 = type metadata accessor for WorkoutItemView(0);
  v18 = *(int *)(v17 + 44);
  v19 = v17;
  v35 = v17;
  v40 = 0;
  v20 = sub_100047110(&qword_100823078);
  State.init(wrappedValue:)(&v41, &v40, v20);
  *(_OWORD *)(a7 + v18) = v41;
  v21 = *(int *)(v19 + 48);
  v40 = 0;
  State.init(wrappedValue:)(&v41, &v40, v20);
  *(_OWORD *)(a7 + v21) = v41;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  v22 = a2;
  v23 = v36;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = v23;
  *(_BYTE *)(a7 + 32) = (_BYTE)v37;
  v24 = v39;
  *(_QWORD *)(a7 + 40) = v39;
  v25 = a1;
  v26 = v22;
  v37 = a3;
  v36 = v23;
  v27 = objc_msgSend(v26, "formattedTypeForWorkout:workoutActivity:context:", v25, 0, CFSTR("WorkoutsListDisplayContext"), swift_retain(v24).n128_f64[0]);
  AttributedString.init(_:)(v27);
  v29 = static Font.body.getter(v28);
  AttributedString.with(font:)();
  v30 = swift_release(v29);
  v31 = v38;
  v32 = *(void (**)(char *, uint64_t, __n128))(v38 + 8);
  v32(v13, v11, v30);
  v33 = (_QWORD *)(a7 + *(int *)(v35 + 40));
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v13, v16, v11);
  State.init(wrappedValue:)(v33, v13, v11);
  ((void (*)(char *, uint64_t))v32)(v16, v11);

  *(_QWORD *)&result = swift_release(v39).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for WorkoutItemView(uint64_t a1)
{
  uint64_t result;

  result = qword_100835698;
  if (!qword_100835698)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutItemView);
  return result;
}

char *sub_100481BC4(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v32)(char *, uint64_t, uint64_t, __n128);
  char *v33;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v10 = a2[3];
    *((_QWORD *)a1 + 3) = v10;
    a1[32] = *((_BYTE *)a2 + 32);
    v11 = a2[5];
    v12 = a3[10];
    v33 = &a1[v12];
    v13 = (uint64_t)a2 + v12;
    *((_QWORD *)a1 + 5) = v11;
    v14 = type metadata accessor for AttributedString(0);
    v32 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
    v15 = v4;
    v16 = v8;
    v17 = v9;
    v18 = v10;
    v19 = swift_retain(v11);
    v32(v33, v13, v14, v19);
    v20 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
    v21 = *(_QWORD *)(v13 + v20);
    *(_QWORD *)&v33[v20] = v21;
    v22 = a3[11];
    v23 = a3[12];
    v24 = &v7[v22];
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = *v25;
    v27 = v25[1];
    *(_QWORD *)v24 = *v25;
    *((_QWORD *)v24 + 1) = v27;
    v28 = &v7[v23];
    v29 = (uint64_t *)((char *)a2 + v23);
    v30 = *v29;
    v4 = (char *)v29[1];
    *(_QWORD *)v28 = *v29;
    *((_QWORD *)v28 + 1) = v4;
    swift_retain(v21);
    swift_retain(v26);
    swift_retain(v27);
    swift_retain(v30);
  }
  swift_retain(v4);
  return v7;
}

double sub_100481D10(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  double result;

  swift_release(*(_QWORD *)(a1 + 40));
  v4 = a1 + a2[10];
  v5 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = sub_100047110(&qword_1008239C8);
  swift_release(*(_QWORD *)(v4 + *(int *)(v6 + 28)));
  v7 = (_QWORD *)(a1 + a2[11]);
  swift_release(*v7);
  swift_release(v7[1]);
  v8 = (_QWORD *)(a1 + a2[12]);
  swift_release(*v8);
  *(_QWORD *)&result = swift_release(v8[1]).n128_u64[0];
  return result;
}

uint64_t sub_100481DC8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t, uint64_t, __n128);

  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v8 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = a3[10];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + 40) = v9;
  v13 = type metadata accessor for AttributedString(0);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
  v14 = v5;
  v15 = v6;
  v16 = v8;
  v17 = v7;
  v18 = swift_retain(v9);
  v32(v11, v12, v13, v18);
  v19 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
  v20 = *(_QWORD *)(v12 + v19);
  *(_QWORD *)(v11 + v19) = v20;
  v21 = a3[11];
  v22 = a3[12];
  v23 = (uint64_t *)(a1 + v21);
  v24 = (uint64_t *)(a2 + v21);
  v25 = *v24;
  v26 = v24[1];
  *v23 = *v24;
  v23[1] = v26;
  v27 = (uint64_t *)(a1 + v22);
  v28 = (uint64_t *)(a2 + v22);
  v29 = *v28;
  v30 = v28[1];
  *v27 = *v28;
  v27[1] = v30;
  swift_retain(v20);
  swift_retain(v25);
  swift_retain(v26);
  swift_retain(v29);
  swift_retain(v30);
  return a1;
}

uint64_t sub_100481EEC(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 40);
  v19 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v18;
  swift_retain(v18);
  swift_release(v19);
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  v24 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
  v25 = *(_QWORD *)(v21 + v24);
  v26 = *(_QWORD *)(v22 + v24);
  *(_QWORD *)(v21 + v24) = v26;
  swift_retain(v26);
  swift_release(v25);
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a1 + v27);
  v31 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(a1 + v27) = v31;
  swift_retain(v31);
  swift_release(v30);
  v32 = *(_QWORD *)(v28 + 8);
  v33 = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 8) = v33;
  swift_retain(v33);
  swift_release(v32);
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = (uint64_t *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34);
  v38 = *v36;
  *(_QWORD *)(a1 + v34) = *v36;
  swift_retain(v38);
  swift_release(v37);
  v39 = *(_QWORD *)(v35 + 8);
  v40 = v36[1];
  *(_QWORD *)(v35 + 8) = v40;
  swift_retain(v40);
  swift_release(v39);
  return a1;
}

uint64_t sub_100482060(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[10];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = sub_100047110(&qword_1008239C8);
  *(_QWORD *)(v8 + *(int *)(v11 + 28)) = *(_QWORD *)(v9 + *(int *)(v11 + 28));
  v12 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_100482108(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v10);
  v11 = a3[10];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = *(int *)(sub_100047110(&qword_1008239C8) + 28);
  v16 = *(_QWORD *)(v12 + v15);
  *(_QWORD *)(v12 + v15) = *(_QWORD *)(v13 + v15);
  swift_release(v16);
  v17 = a3[11];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  swift_release(v20);
  v21 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  swift_release(v21);
  v22 = a3[12];
  v23 = a1 + v22;
  v24 = (_QWORD *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *v24;
  swift_release(v25);
  v26 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v23 + 8) = v24[1];
  swift_release(v26);
  return a1;
}

uint64_t sub_10048223C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100482248);
}

uint64_t sub_100482248(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110(&qword_1008239C8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t sub_1004822C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004822D4);
}

char *sub_1004822D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100047110(&qword_1008239C8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

void sub_10048234C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = &unk_10063EAB8;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100186CA8(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(v2 - 8) + 64;
    v4[7] = &unk_10063EAD0;
    v4[8] = &unk_10063EAD0;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
  }
}

uint64_t sub_1004823EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B8714, 1);
}

uint64_t sub_1004823FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  const char *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  id *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  SEL v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD v125[16];
  _OWORD v126[17];

  v2 = (id *)v1;
  v123 = a1;
  v124 = type metadata accessor for TaskPriority(0);
  v122 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v121 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WorkoutItemView(0);
  v117 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v118 = v5;
  v119 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for AppEntityVisualState(0);
  v114 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v112 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008356F0);
  __chkstk_darwin(v7);
  v108 = (uint64_t)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)sub_100047110(&qword_1008356F8);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for UUID(0);
  v102 = *(_QWORD *)(v12 - 8);
  v103 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AttributedString(0);
  v107 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v99 - v19;
  v109 = sub_100047110(&qword_100835700);
  __chkstk_darwin(v109);
  v110 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100047110(&qword_100835708);
  v113 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v111 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = *(unsigned __int8 *)(v1 + 32);
  v23 = sub_100047110(&qword_1008239C8);
  v105 = v20;
  State.wrappedValue.getter(v20, v23);
  v24 = *(id *)v1;
  v25 = v2[1];
  v26 = objc_msgSend(v25, "formattedGoalForWorkout:context:", *v2, CFSTR("WorkoutsListDisplayContext"));
  v106 = v17;
  AttributedString.init(_:)(v26);
  v27 = objc_msgSend(v25, "formattedDateForWorkout:context:", v24, CFSTR("WorkoutsListDisplayContext"));
  v28 = objc_msgSend(v27, "string");

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v100 = v30;
  v101 = v29;

  v120 = v2;
  v31 = objc_msgSend(v24, "UUID");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v31);

  v33 = UUID.uuidString.getter(v32);
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v102 + 8))(v14, v103);
  v36 = AAUIAwardsDataProvider.achievements(forWorkoutIdentifier:)(v33, v35);
  swift_bridgeObjectRelease(v35, v37, v38, v39, v40, v41, v42, v43);
  if ((unint64_t)v36 >> 62)
  {
    if (v36 < 0)
      v91 = v36;
    else
      v91 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v51 = _CocoaArrayWrapper.endIndex.getter(v91);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v36, v92, v93, v94, v95, v96, v97, v98);
  }
  else
  {
    v51 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v36, v44, v45, v46, v47, v48, v49, v50);
  *v11 = swift_getKeyPath(&unk_10063EB38);
  v52 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v11, v52, 0);
  v53 = (char *)v11 + v9[15];
  *(_OWORD *)v53 = xmmword_100628E90;
  *((_QWORD *)v53 + 2) = 0;
  *((_QWORD *)v53 + 3) = 0;
  *((_BYTE *)v11 + v9[9]) = v104;
  v54 = v107;
  v55 = *(void (**)(char *, _QWORD *, uint64_t))(v107 + 16);
  v56 = v105;
  v55((char *)v11 + v9[10], v105, v15);
  v57 = v106;
  v55((char *)v11 + v9[11], v106, v15);
  v58 = (_QWORD *)((char *)v11 + v9[12]);
  v59 = v100;
  *v58 = v101;
  v58[1] = v59;
  *(_QWORD *)((char *)v11 + v9[13]) = v51;
  v60 = v108;
  v61 = v120;
  sub_100482B70((uint64_t)v120, v108);
  v62 = *(void (**)(char *, uint64_t))(v54 + 8);
  v62(v57, v15);
  v62(v56, v15);
  sub_100045AD4(v60, (uint64_t)v11 + v9[14], &qword_1008356F0);
  v63 = v110;
  sub_100045AD4((uint64_t)v11, v110, &qword_1008356F8);
  v64 = *v61;
  v65 = objc_msgSend(*v61, "UUID");
  v66 = v109;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v65);

  sub_1001641A8(v64, v61[1], v125);
  *(_QWORD *)&v126[0] = &_swiftEmptyArrayStorage;
  v67 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  v68 = sub_100047110((uint64_t *)&unk_10083D740);
  v69 = sub_100028384((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740, (uint64_t)&protocol conformance descriptor for [A]);
  v70 = v112;
  v71 = v68;
  v72 = v116;
  dispatch thunk of SetAlgebra.init<A>(_:)(v126, v71, v69, v116, v67);
  v73 = sub_100028384(&qword_100835710, &qword_100835700, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
  v74 = sub_100112214();
  v75 = v111;
  View.appEntity<A>(_:state:)(v125, v70, v66, &type metadata for WorkoutEntity, v73, v74);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v70, v72);
  v126[12] = v125[12];
  v126[13] = v125[13];
  v126[14] = v125[14];
  v126[15] = v125[15];
  v126[8] = v125[8];
  v126[9] = v125[9];
  v126[10] = v125[10];
  v126[11] = v125[11];
  v126[4] = v125[4];
  v126[5] = v125[5];
  v126[6] = v125[6];
  v126[7] = v125[7];
  v126[0] = v125[0];
  v126[1] = v125[1];
  v126[2] = v125[2];
  v126[3] = v125[3];
  sub_100112258(v126);
  sub_10001BE90(v63, &qword_100835700);
  v76 = v119;
  sub_10004F8C8((uint64_t)v61, v119, type metadata accessor for WorkoutItemView);
  v77 = *(unsigned __int8 *)(v117 + 80);
  v78 = (v77 + 16) & ~v77;
  v79 = swift_allocObject(&unk_1007A19B0, v78 + v118, v77 | 7);
  v80 = sub_100483BD8(v76, v79 + v78);
  v81 = v121;
  static TaskPriority.userInitiated.getter(v80);
  v82 = sub_100047110(&qword_100835728);
  v83 = v123;
  v84 = (char *)(v123 + *(int *)(v82 + 36));
  v85 = type metadata accessor for _TaskModifier(0);
  v86 = v122;
  v87 = v124;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(&v84[*(int *)(v85 + 20)], v81, v124);
  *(_QWORD *)v84 = &unk_100835720;
  *((_QWORD *)v84 + 1) = v79;
  v88 = v113;
  v89 = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v113 + 16))(v83, v75, v115);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v81, v87);
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v75, v89);
}

uint64_t sub_100482B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  __int128 v53;

  v48 = a2;
  v45 = sub_100047110(&qword_100821238);
  __chkstk_darwin(v45);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v44);
  v6 = (_OWORD *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = sub_100047110(&qword_100823AC8);
  __chkstk_darwin(v47);
  v8 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - v10;
  v46 = sub_100047110(&qword_100835750);
  __chkstk_darwin(v46);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WorkoutItemView(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *(_OWORD *)(a1 + *(int *)(v17 + 48));
  v18 = sub_100047110(&qword_100823188);
  State.wrappedValue.getter(&v49, v18);
  v19 = v49;
  sub_10004F8C8(a1, (uint64_t)v16, type metadata accessor for WorkoutItemView);
  if (v19)
  {
    sub_100011F54((uint64_t)v16, type metadata accessor for WorkoutItemView);
LABEL_4:
    v21 = (char *)v6 + *(int *)(v44 + 20);
    v22 = enum case for RoundedCornerStyle.continuous(_:);
    v23 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
    __asm { FMOV            V0.2D, #4.0 }
    *v6 = _Q0;
    sub_10004F8C8((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v4[*(int *)(v45 + 36)] = 256;
    v29 = v47;
    sub_100021CC0((uint64_t)v4, (uint64_t)v8 + *(int *)(v47 + 36), &qword_100821238);
    *v8 = v19;
    swift_retain(v19);
    sub_10001BE90((uint64_t)v4, &qword_100821238);
    sub_100011F54((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    sub_100045AD4((uint64_t)v8, (uint64_t)v11, &qword_100823AC8);
    sub_100021CC0((uint64_t)v11, (uint64_t)v13, &qword_100823AC8);
    swift_storeEnumTagMultiPayload(v13, v46, 0);
    v30 = sub_100047110(&qword_1008231E0);
    v31 = sub_100186FDC();
    v32 = sub_100340828();
    _ConditionalContent<>.init(storage:)(v13, v29, v30, v31, v32);
    swift_release(v19);
    return sub_10001BE90((uint64_t)v11, &qword_100823AC8);
  }
  v50 = *(_OWORD *)&v16[*(int *)(v14 + 44)];
  State.wrappedValue.getter(&v49, v18);
  v19 = v49;
  v20 = sub_100011F54((uint64_t)v16, type metadata accessor for WorkoutItemView);
  if (v19)
    goto LABEL_4;
  if (*(_BYTE *)(a1 + 32))
    v34 = 0x4048000000000000;
  else
    v34 = 0x4041000000000000;
  v35 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(&v50, v34, 0, v34, 0, v35, v36);
  v37 = v50;
  v38 = BYTE8(v50);
  v39 = v51;
  v40 = v52;
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *((_QWORD *)v13 + 2) = v37;
  v13[24] = v38;
  *((_QWORD *)v13 + 4) = v39;
  v13[40] = v40;
  *((_OWORD *)v13 + 3) = v53;
  swift_storeEnumTagMultiPayload(v13, v46, 1);
  v41 = sub_100047110(&qword_1008231E0);
  v42 = sub_100186FDC();
  v43 = sub_100340828();
  return _ConditionalContent<>.init(storage:)(v13, v47, v41, v42, v43);
}

uint64_t sub_100482F68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[2] = a1;
  v2 = *(_QWORD *)(type metadata accessor for WorkoutItemView(0) - 8);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 + 64);
  v1[4] = v3;
  v1[5] = swift_task_alloc((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100482FFC, v5, v6);
}

uint64_t sub_100482FFC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = *(char **)(v1 + 16);
  v3 = *(id *)v1;
  v4 = sub_1005EEA88(v3);

  if ((v4 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 24);
    sub_10004F8C8(*(_QWORD *)(v0 + 16), v5, type metadata accessor for WorkoutItemView);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = (v8 + 16) & ~v8;
    v10 = swift_allocObject(&unk_1007A19D8, v9 + v6, v8 | 7);
    sub_100483BD8(v5, v10 + v9);
    v11 = v3;
    sub_10010E6C8(v11, (void (*)(_QWORD))sub_100483D78, v10, v2);
    swift_release(v10);

  }
  v12 = *(_QWORD *)(v0 + 40);
  sub_1004830E4();
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1004830E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24[2];

  v1 = type metadata accessor for WorkoutItemView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  sub_10004F8C8(v0, (uint64_t)v4, type metadata accessor for WorkoutItemView);
  v10 = type metadata accessor for MainActor(0);
  v11 = static MainActor.shared.getter(v10);
  v12 = *(unsigned __int8 *)(v2 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = v13 + v3;
  v15 = v12 | 7;
  v16 = swift_allocObject(&unk_1007A1A00, v14, v12 | 7);
  *(_QWORD *)(v16 + 16) = v11;
  *(_QWORD *)(v16 + 24) = &protocol witness table for MainActor;
  sub_100483BD8((uint64_t)v4, v16 + v13);
  v17 = sub_10020D9C0((uint64_t)v7, (uint64_t)&unk_100835738, v16);
  v18 = swift_release(v17);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v9)(v7, 1, 1, v8, v18);
  v19 = sub_10004F8C8(v24[1], (uint64_t)v4, type metadata accessor for WorkoutItemView);
  v20 = static MainActor.shared.getter(v19);
  v21 = swift_allocObject(&unk_1007A1A28, v14, v15);
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
  sub_100483BD8((uint64_t)v4, v21 + v13);
  v22 = sub_10020D9C0((uint64_t)v7, (uint64_t)&unk_100835748, v21);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

void sub_1004832B8(void *a1, void **a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[6];

  if (a1)
  {
    v19[2] = a2;
    v19[3] = a1;
    v3 = a1;
    v4 = static Animation.default.getter(v3);
    withAnimation<A>(_:_:)(v4, sub_100483DB4, v19, (char *)&type metadata for () + 8);

    swift_release(v4);
  }
  else
  {
    v5 = static os_log_type_t.error.getter(0);
    v6 = (void *)HKLogActivity;
    v7 = sub_100047110((uint64_t *)&unk_100827460);
    v8 = swift_allocObject(v7, 112, 7);
    *(_OWORD *)(v8 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v8 + 56) = &type metadata for String;
    *(_QWORD *)(v8 + 64) = sub_100038CF8();
    *(_QWORD *)(v8 + 32) = 0xD000000000000010;
    *(_QWORD *)(v8 + 40) = 0x800000010068C9F0;
    v9 = *a2;
    *(_QWORD *)(v8 + 96) = sub_10027D46C();
    *(_QWORD *)(v8 + 104) = sub_1000083D8((unint64_t *)&qword_100839280, (uint64_t (*)(uint64_t))sub_10027D46C, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v8 + 72) = v9;
    v10 = v6;
    v11 = v9;
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v10, "%@ failed to fetch catalog item view model for workout %@", 57, 2, v8);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_100483448(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = type metadata accessor for AttributedString(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v12 - v8;
  AttributedString.init(_:)(*(id *)(a2 + OBJC_IVAR___CHCatalogItemViewModel_title));
  type metadata accessor for WorkoutItemView(0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  v10 = sub_100047110(&qword_1008239C8);
  State.wrappedValue.setter(v6, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_100483548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004835B4, v6, v7);
}

uint64_t sub_1004835B4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_release(*(_QWORD *)(v0 + 48));
  v2.n128_u64[0] = 0x4041000000000000;
  if (*(_BYTE *)(v1 + 32))
    v2.n128_f64[0] = 48.0;
  v3 = dispatch thunk of WorkoutImageProvider.placeholderImage(for:width:)(*(_QWORD *)v1, v2);
  v4 = Image.init(uiImage:)(v3);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + *(int *)(type metadata accessor for WorkoutItemView(0) + 44));
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_100047110(&qword_100823188);
  State.wrappedValue.setter(v0 + 32, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100483654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a4;
  v5 = type metadata accessor for WorkoutItemView(0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[8] = v7;
  v4[9] = v8;
  return swift_task_switch(sub_1004836E0, v7, v8);
}

uint64_t sub_1004836E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  double v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, double);

  v1 = *(uint64_t **)(v0 + 40);
  v6 = (uint64_t (*)(uint64_t, double))((char *)&async function pointer to dispatch thunk of WorkoutImageProvider.fetchImage(for:width:)
                                               + async function pointer to dispatch thunk of WorkoutImageProvider.fetchImage(for:width:));
  v2 = *v1;
  if (*((_BYTE *)v1 + 32))
    v3 = 48.0;
  else
    v3 = 34.0;
  v4 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of WorkoutImageProvider.fetchImage(for:width:)
                                  + 1));
  *(_QWORD *)(v0 + 80) = v4;
  *v4 = v0;
  v4[1] = sub_10048376C;
  return v6(v2, v3);
}

uint64_t sub_10048376C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  *(_QWORD *)(*(_QWORD *)v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[8];
    v7 = v4[9];
    v8 = sub_100483878;
  }
  else
  {
    v4[12] = a1;
    v6 = v4[8];
    v7 = v4[9];
    v8 = sub_1004837E0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1004837E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = static Animation.default.getter(v3);
  withAnimation<A>(_:_:)(v4, sub_100483FD8, v3, (char *)&type metadata for () + 8);
  swift_release(v4);

  swift_task_dealloc(v3);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100483878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t *v25;
  NSObject *log;
  uint64_t v27;
  os_log_type_t type;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));
  v4 = static os_log_type_t.error.getter(v3);
  v5 = HKLogActivity;
  sub_10004F8C8(v1, v2, type metadata accessor for WorkoutItemView);
  if (os_log_type_enabled(v5, v4))
  {
    type = v4;
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(id **)(v0 + 48);
    v24 = (uint64_t)v7;
    swift_errorRetain(v6);
    swift_errorRetain(v6);
    log = v5;
    v8 = swift_slowAlloc(32, -1);
    v25 = (uint64_t *)swift_slowAlloc(8, -1);
    v27 = swift_slowAlloc(64, -1);
    v29 = v27;
    *(_DWORD *)v8 = 136315650;
    *(_QWORD *)(v0 + 16) = sub_10003E8EC(0x4974756F6B726F57, 0xEF776569566D6574, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4);
    *(_WORD *)(v8 + 12) = 2080;
    v9 = objc_msgSend(*v7, "description");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    *(_QWORD *)(v0 + 24) = sub_10003E8EC(v10, (unint64_t)v12, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v8 + 14);
    swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
    sub_100011F54(v24, type metadata accessor for WorkoutItemView);
    *(_WORD *)(v8 + 22) = 2112;
    swift_errorRetain(v6);
    v20 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v0 + 32) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v8 + 24);
    *v25 = v20;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s Error fetching workout image for workout: %s with error: %@", (uint8_t *)v8, 0x20u);
    v21 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v25, 1, v21);
    swift_slowDealloc(v25, -1, -1);
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v8, -1, -1);
    swift_errorRelease(v6);

  }
  else
  {
    v22 = *(_QWORD *)(v0 + 88);
    sub_100011F54(*(_QWORD *)(v0 + 48), type metadata accessor for WorkoutItemView);
    swift_errorRelease(v22);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100483B54(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = Image.init(uiImage:)(a2);
  type metadata accessor for WorkoutItemView(0);
  v5 = v2;
  v3 = sub_100047110(&qword_100823188);
  return State.wrappedValue.setter(&v5, v3);
}

uint64_t sub_100483BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutItemView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100483C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutItemView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_10083571C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1000EA380;
  return sub_100482F68(v3);
}

uint64_t sub_100483C84()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = (int *)type metadata accessor for WorkoutItemView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;

  swift_release(*(_QWORD *)(v7 + 40));
  v8 = v7 + v1[10];
  v9 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = sub_100047110(&qword_1008239C8);
  swift_release(*(_QWORD *)(v8 + *(int *)(v10 + 28)));
  v11 = (_QWORD *)(v7 + v1[11]);
  swift_release(*v11);
  swift_release(v11[1]);
  v12 = (_QWORD *)(v7 + v1[12]);
  swift_release(*v12);
  swift_release(v12[1]);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100483D78(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutItemView(0) - 8) + 80);
  sub_1004832B8(a1, (void **)(v1 + ((v3 + 16) & ~v3)));
}

uint64_t sub_100483DB4()
{
  uint64_t v0;

  return sub_100483448(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100483DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutItemView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_100835734);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000EA380;
  return sub_100483548(a1, v5, v6, v7);
}

uint64_t sub_100483E58()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = (int *)type metadata accessor for WorkoutItemView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;

  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v8 = v0 + v4 + v1[10];
  v9 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = sub_100047110(&qword_1008239C8);
  swift_release(*(_QWORD *)(v8 + *(int *)(v10 + 28)));
  v11 = (_QWORD *)(v7 + v1[11]);
  swift_release(*v11);
  swift_release(v11[1]);
  v12 = (_QWORD *)(v7 + v1[12]);
  swift_release(*v12);
  swift_release(v12[1]);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100483F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutItemView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_100835744);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000DA0E4;
  return sub_100483654(a1, v5, v6, v7);
}

uint64_t sub_100483FD8()
{
  uint64_t v0;

  return sub_100483B54(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_100483FF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_100835758;
  if (!qword_100835758)
  {
    v1 = sub_100007050(&qword_100835728);
    v2[0] = sub_100007050(&qword_100835700);
    v2[1] = &type metadata for WorkoutEntity;
    v2[2] = sub_100028384(&qword_100835710, &qword_100835700, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
    v2[3] = sub_100112214();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.appEntity<A>(_:state:)>>, 1);
    sub_1000083D8((unint64_t *)&qword_100823278, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835758);
  }
  return result;
}

uint64_t destroy for DiscoverySheetDataModel(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for DiscoverySheetDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for DiscoverySheetDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t assignWithTake for DiscoverySheetDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for DiscoverySheetDataModel()
{
  return &type metadata for DiscoverySheetDataModel;
}

uint64_t sub_100484208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v33 = type metadata accessor for SheetItem(0);
  v0 = *(_QWORD *)(v33 - 8);
  v1 = __chkstk_darwin(v33);
  v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = IntroSheet.title.getter(v1);
  v6 = v5;
  v7 = IntroSheet.items.getter();
  v8 = v7;
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v29[1] = v6;
    v29[2] = v4;
    v36 = _swiftEmptyArrayStorage;
    sub_1001219E0(0, v9, 0);
    v10 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
    v29[0] = v8;
    v11 = v8 + v10;
    v12 = *(_QWORD *)(v0 + 72);
    v30 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v0 + 16);
    v31 = v12;
    v32 = v0;
    do
    {
      v13 = v33;
      v14 = v30(v3, v11, v33);
      v15 = SheetItem.title.getter(v14);
      v34 = v16;
      v35 = v15;
      v17 = SheetItem.body.getter();
      v19 = v18;
      v20 = SheetItem.imageName.getter();
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v13);
      v23 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
      {
        sub_1001219E0(0, v23[2] + 1, 1);
        v23 = v36;
      }
      v25 = v23[2];
      v24 = v23[3];
      if (v25 >= v24 >> 1)
      {
        sub_1001219E0(v24 > 1, v25 + 1, 1);
        v23 = v36;
      }
      v23[2] = v25 + 1;
      v26 = &v23[6 * v25];
      v27 = v34;
      v26[4] = v35;
      v26[5] = v27;
      v26[6] = v17;
      v26[7] = v19;
      v26[8] = v20;
      v26[9] = v22;
      v0 = v32;
      v11 += v31;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v29[0]);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
  }
  return 0;
}

uint64_t sub_1004843F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v33 = type metadata accessor for SheetItem(0);
  v0 = *(_QWORD *)(v33 - 8);
  v1 = __chkstk_darwin(v33);
  v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = WhatsNewSheet.title.getter(v1);
  v6 = v5;
  v7 = WhatsNewSheet.items.getter();
  v8 = v7;
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v29[1] = v6;
    v29[2] = v4;
    v36 = _swiftEmptyArrayStorage;
    sub_1001219E0(0, v9, 0);
    v10 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
    v29[0] = v8;
    v11 = v8 + v10;
    v12 = *(_QWORD *)(v0 + 72);
    v30 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v0 + 16);
    v31 = v12;
    v32 = v0;
    do
    {
      v13 = v33;
      v14 = v30(v3, v11, v33);
      v15 = SheetItem.title.getter(v14);
      v34 = v16;
      v35 = v15;
      v17 = SheetItem.body.getter();
      v19 = v18;
      v20 = SheetItem.imageName.getter();
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v13);
      v23 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
      {
        sub_1001219E0(0, v23[2] + 1, 1);
        v23 = v36;
      }
      v25 = v23[2];
      v24 = v23[3];
      if (v25 >= v24 >> 1)
      {
        sub_1001219E0(v24 > 1, v25 + 1, 1);
        v23 = v36;
      }
      v23[2] = v25 + 1;
      v26 = &v23[6 * v25];
      v27 = v34;
      v26[4] = v35;
      v26[5] = v27;
      v26[6] = v17;
      v26[7] = v19;
      v26[8] = v20;
      v26[9] = v22;
      v0 = v32;
      v11 += v31;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v29[0]);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
  }
  return 1;
}

uint64_t destroy for DiscoverySheetDataModel.BulletedItemDataModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for DiscoverySheetDataModel.BulletedItemDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for DiscoverySheetDataModel.BulletedItemDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for DiscoverySheetDataModel.BulletedItemDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

ValueMetadata *type metadata accessor for DiscoverySheetDataModel.BulletedItemDataModel()
{
  return &type metadata for DiscoverySheetDataModel.BulletedItemDataModel;
}

uint64_t storeEnumTagSinglePayload for DiscoverySheetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100484798 + 4 * byte_10063EB75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004847CC + 4 * byte_10063EB70[v4]))();
}

uint64_t sub_1004847CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004847D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004847DCLL);
  return result;
}

uint64_t sub_1004847E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004847F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004847F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004847FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoverySheetType()
{
  return &type metadata for DiscoverySheetType;
}

unint64_t sub_10048481C()
{
  unint64_t result;

  result = qword_100835760;
  if (!qword_100835760)
  {
    result = swift_getWitnessTable(&unk_10063EC24, &type metadata for DiscoverySheetType);
    atomic_store(result, (unint64_t *)&qword_100835760);
  }
  return result;
}

uint64_t *sub_100484860(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  id v27;
  id v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = (uint64_t)v16;
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v17;
    v18 = a3[7];
    v19 = a3[8];
    v20 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v20;
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    v23 = *(uint64_t *)((char *)a2 + v19);
    v24 = *((_QWORD *)v22 + 1);
    v25 = v22[16];
    v26 = v16;
    v27 = v17;
    v28 = v20;
    sub_1000EB3F4(v23, v24, v25);
    *(_QWORD *)v21 = v23;
    *((_QWORD *)v21 + 1) = v24;
    v21[16] = v25;
  }
  return a1;
}

uint64_t sub_100484990(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }

  return sub_1000EB41C(*(_QWORD *)((char *)a1 + a2[8]), *(_QWORD *)((char *)a1 + a2[8] + 8), *((_BYTE *)a1 + a2[8] + 16));
}

uint64_t *sub_100484A2C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  id v25;
  id v26;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = *(void **)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
  v15 = *(void **)((char *)a2 + v13);
  *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = *(void **)((char *)a2 + v16);
  *(uint64_t *)((char *)a1 + v16) = (uint64_t)v18;
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  v21 = *(uint64_t *)((char *)a2 + v17);
  v22 = *((_QWORD *)v20 + 1);
  v23 = v20[16];
  v24 = v14;
  v25 = v15;
  v26 = v18;
  sub_1000EB3F4(v21, v22, v23);
  *(_QWORD *)v19 = v21;
  *((_QWORD *)v19 + 1) = v22;
  v19[16] = v23;
  return a1;
}

uint64_t *sub_100484B30(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = *(void **)((char *)a2 + v12);
  v14 = *(void **)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
  v15 = v13;

  v16 = a3[6];
  v17 = *(void **)((char *)a2 + v16);
  v18 = *(void **)((char *)a1 + v16);
  *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
  v19 = v17;

  v20 = a3[7];
  v21 = *(void **)((char *)a2 + v20);
  v22 = *(void **)((char *)a1 + v20);
  *(uint64_t *)((char *)a1 + v20) = (uint64_t)v21;
  v23 = v21;

  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  LOBYTE(v22) = v26[16];
  sub_1000EB3F4(*(_QWORD *)v26, v28, (char)v22);
  v29 = *(_QWORD *)v25;
  v30 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v25 = v27;
  *((_QWORD *)v25 + 1) = v28;
  v31 = v25[16];
  v25[16] = (char)v22;
  sub_1000EB41C(v29, v30, v31);
  return a1;
}

char *sub_100484C70(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  return a1;
}

char *sub_100484D44(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = *(void **)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];

  v10 = a3[6];
  v11 = *(void **)&a1[v10];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];

  v12 = a3[7];
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = v16[16];
  v18 = *(_QWORD *)v15;
  v19 = *((_QWORD *)v15 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v20 = v15[16];
  v15[16] = v17;
  sub_1000EB41C(v18, v19, v20);
  return a1;
}

uint64_t sub_100484E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100484E68);
}

uint64_t sub_100484E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100484EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100484EF4);
}

uint64_t sub_100484EF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FriendCompetitionView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008357C0;
  if (!qword_1008357C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FriendCompetitionView);
  return result;
}

void sub_100484FAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = &unk_10063EC78;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_100485030(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B87B8, 1);
}

uint64_t sub_100485040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.caption(_:), v7, v9);
  v12 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  v13 = static Font.system(_:design:weight:)(v11, v6, 0, 1);
  sub_10001BE90((uint64_t)v6, &qword_10081F2F8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  v14 = Font.leading(_:)(v3, v13);
  v15 = swift_release(v13);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v15);
  qword_10086ABD8 = v14;
  return result;
}

uint64_t sub_1004851E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t result;
  uint64_t v21;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.title3(_:), v7, v9);
  v12 = enum case for Font.Design.rounded(_:);
  v13 = type metadata accessor for Font.Design(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  v16 = static Font.Weight.medium.getter(v15);
  v17 = static Font.system(_:design:weight:)(v11, v6, *(_QWORD *)&v16, 0);
  sub_10001BE90((uint64_t)v6, &qword_10081F2F8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  v18 = Font.leading(_:)(v3, v17);
  v19 = swift_release(v17);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v19);
  qword_10086ABE0 = v18;
  return result;
}

uint64_t sub_1004853B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t result;
  uint64_t v19;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.caption(_:), v7, v9);
  v12 = enum case for Font.Design.rounded(_:);
  v13 = type metadata accessor for Font.Design(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  v15 = static Font.system(_:design:weight:)(v11, v6, 0, 1);
  sub_10001BE90((uint64_t)v6, &qword_10081F2F8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  v16 = Font.leading(_:)(v3, v15);
  v17 = swift_release(v15);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v17);
  qword_10086ABE8 = v16;
  return result;
}

uint64_t sub_100485584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned __int8 v17;
  void (*v18)(char *, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a1;
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_100047110(&qword_100835808);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100047110(&qword_100835810);
  __chkstk_darwin(v37);
  v36 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = static HorizontalAlignment.leading.getter(v13);
  v14 = v1 + *(int *)(type metadata accessor for FriendCompetitionView(0) + 32);
  v16 = *(_QWORD *)v14;
  v15 = *(_QWORD *)(v14 + 8);
  v17 = *(_BYTE *)(v14 + 16);
  sub_1003F6E18((uint64_t)v8);
  LODWORD(v15) = sub_10054FD90((uint64_t)v8, v16, v15, v17);
  v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v8, v2);
  v34 = v3;
  if (v15 > 1)
  {
    v20 = 0x4028000000000000;
  }
  else
  {
    sub_1003F6E18((uint64_t)v8);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DynamicTypeSize.xxLarge(_:), v2);
    v19 = static DynamicTypeSize.< infix(_:_:)(v8, v5);
    v18(v5, v2);
    v18(v8, v2);
    v20 = 0x402E000000000000;
    if ((v19 & 1) != 0)
      v20 = 0x4034000000000000;
  }
  *(_QWORD *)v11 = v35;
  *((_QWORD *)v11 + 1) = v20;
  v11[16] = 0;
  v21 = sub_100047110(&qword_100835818);
  sub_100485888(v1, (uint64_t)&v11[*(int *)(v21 + 44)]);
  v22 = *(_QWORD *)v14;
  v23 = *(_QWORD *)(v14 + 8);
  v24 = *(_BYTE *)(v14 + 16);
  sub_1003F6E18((uint64_t)v8);
  LODWORD(v22) = sub_10054FD90((uint64_t)v8, v22, v23, v24);
  v25 = ((uint64_t (*)(char *, uint64_t))v18)(v8, v2);
  if (v22 > 1)
  {
    v28 = 0;
    v27 = 0x4000000000000000;
  }
  else
  {
    sub_1003F6E18((uint64_t)v8);
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v5, enum case for DynamicTypeSize.xxLarge(_:), v2);
    v26 = static DynamicTypeSize.< infix(_:_:)(v8, v5);
    v18(v5, v2);
    v25 = ((uint64_t (*)(char *, uint64_t))v18)(v8, v2);
    if ((v26 & 1) != 0)
      v27 = 0xC000000000000000;
    else
      v27 = 0;
    if ((v26 & 1) != 0)
      v28 = 0xC014000000000000;
    else
      v28 = 0;
  }
  v29 = static Edge.Set.all.getter(v25);
  v30 = v36;
  sub_100021CC0((uint64_t)v11, v36, &qword_100835808);
  v31 = v30 + *(int *)(v37 + 36);
  *(_BYTE *)v31 = v29;
  *(_QWORD *)(v31 + 8) = v27;
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  *(_QWORD *)(v31 + 32) = v28;
  *(_BYTE *)(v31 + 40) = 0;
  sub_10001BE90((uint64_t)v11, &qword_100835808);
  return sub_100045AD4(v30, v38, &qword_100835810);
}

uint64_t sub_100485888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  Class isa;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  int *v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  id v69;
  NSString v70;
  id v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  __n128 v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  Class v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[2];

  v127 = a2;
  v130 = type metadata accessor for Date(0);
  v120 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v129 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v4);
  v128 = (uint64_t)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for AttributedString(0);
  v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 - 8);
  __chkstk_darwin(v132);
  v124 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v133 = (uint64_t)&v112 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v112 - v13;
  v15 = type metadata accessor for CompetitionRowView(0);
  __chkstk_darwin(v15);
  v126 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v123 = (uint64_t *)((char *)&v112 - v18);
  __chkstk_darwin(v19);
  v125 = (uint64_t)&v112 - v20;
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v112 - v22);
  __chkstk_darwin(v24);
  v131 = (uint64_t)&v112 - v25;
  v26 = type metadata accessor for FriendCompetitionView(0);
  v27 = *(void **)(a1 + *(int *)(v26 + 24));
  v28 = a1;
  v116 = sub_1004860A4(v27);
  v29 = (CHWorkoutDetailHeartRateTableViewCell *)objc_msgSend(v27, "displayName");
  v30 = v29;
  if (v29)
  {
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v33 = v32;

    v30 = (CHWorkoutDetailHeartRateTableViewCell *)v33;
  }
  else
  {
    v31 = 0;
    v33 = 0xE000000000000000;
  }
  v34 = swift_bridgeObjectRetain(v30);
  AttributeContainer.init()(v34);
  v121 = v8;
  AttributedString.init(_:attributes:)(v31, v33, v8);
  KeyPath = swift_getKeyPath(&unk_10063ECE0);
  __chkstk_darwin(KeyPath);
  *(&v112 - 2) = v36;
  v37 = swift_getKeyPath(&unk_10063ED10);
  if (qword_10081DDE8 != -1)
    swift_once(&qword_10081DDE8, sub_100485040);
  v38 = qword_10086ABD8;
  v134[0] = qword_10086ABD8;
  v39 = sub_1000EA1DC();
  v119 = v39;
  swift_retain(v38);
  AttributedString.subscript.setter(v134, v37, v39);
  swift_bridgeObjectRelease(v30, v40, v41, v42, v43, v44, v45, v46);
  v47 = *(int *)(v26 + 28);
  v48 = v26;
  v113 = v26;
  v49 = v28;
  v50 = *(void **)(v28 + v47);
  v51 = v47;
  v114 = v47;
  v52 = objc_msgSend(v50, "opponentTotalScore");
  v53 = sub_100486218((uint64_t)v52, v133);
  v54 = v129;
  Date.init()(v53);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v120 = *(_QWORD *)(v120 + 8);
  ((void (*)(char *, uint64_t))v120)(v54, v130);
  v56 = objc_msgSend(v50, "dailyScoreForParticipant:onDate:", 1, isa);

  v57 = v128;
  sub_1004868D4((uint64_t)v56, v128);
  v118 = (id)objc_opt_self(UIColor);
  v58 = Color.init(uiColor:)(objc_msgSend(v118, "as_colorForParticipant:competition:", 1, *(_QWORD *)(v49 + v51)));
  v115 = v49 + *(int *)(v48 + 32);
  v59 = *(_QWORD *)v115;
  v60 = *(_QWORD *)(v115 + 8);
  LOBYTE(v56) = *(_BYTE *)(v115 + 16);
  *v23 = swift_getKeyPath(&unk_10063ED50);
  v117 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v23, v117, 0);
  *(_QWORD *)((char *)v23 + *(int *)(v15 + 20)) = v116;
  v61 = (char *)v23 + *(int *)(v15 + 24);
  v62 = (int *)v15;
  v63 = (void (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v122 + 4);
  v122 = v63;
  v64 = v14;
  v65 = v132;
  v63((uint64_t)v61, (uint64_t)v64, v132);
  v63((uint64_t)v23 + v62[7], v133, v65);
  sub_100045AD4(v57, (uint64_t)v23 + v62[8], (uint64_t *)&unk_10082EDF0);
  *(_QWORD *)((char *)v23 + v62[9]) = v58;
  v66 = (char *)v23 + v62[10];
  *(_QWORD *)v66 = v59;
  *((_QWORD *)v66 + 1) = v60;
  v66[16] = (char)v56;
  sub_10048701C((uint64_t)v23, v131);
  v67 = *(void **)(v49 + *(int *)(v113 + 20));
  sub_1000EB3F4(v59, v60, (char)v56);
  v68 = sub_1004860A4(v67);
  v69 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v70 = String._bridgeToObjectiveC()();
  v71 = objc_msgSend(v69, "localizedStringForKey:value:table:", v70, 0, 0);

  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
  v74 = v73;

  v75 = swift_bridgeObjectRetain(v74);
  v76 = v121;
  AttributeContainer.init()(v75);
  v77 = v133;
  AttributedString.init(_:attributes:)(v72, v74, v76);
  v78 = swift_getKeyPath(&unk_10063ECE0);
  __chkstk_darwin(v78);
  *(&v112 - 2) = v79;
  v80 = swift_getKeyPath(&unk_10063ED10);
  v134[0] = qword_10086ABD8;
  swift_retain(qword_10086ABD8);
  AttributedString.subscript.setter(v134, v80, v119);
  swift_bridgeObjectRelease(v74, v81, v82, v83, v84, v85, v86, v87);
  v88 = v114;
  v89 = *(void **)(v49 + v114);
  v90 = objc_msgSend(v89, "myTotalScore");
  v91 = v124;
  v92 = sub_100486218((uint64_t)v90, v124);
  v93 = v129;
  Date.init()(v92);
  v94 = Date._bridgeToObjectiveC()().super.isa;
  ((void (*)(char *, uint64_t))v120)(v93, v130);
  v95 = objc_msgSend(v89, "dailyScoreForParticipant:onDate:", 0, v94);

  v96 = v128;
  sub_1004868D4((uint64_t)v95, v128);
  v97 = Color.init(uiColor:)(objc_msgSend(v118, "as_colorForParticipant:competition:", 0, *(_QWORD *)(v49 + v88)));
  v98 = *(_QWORD *)v115;
  v99 = *(_QWORD *)(v115 + 8);
  LOBYTE(v57) = *(_BYTE *)(v115 + 16);
  v100 = swift_getKeyPath(&unk_10063ED50);
  v101 = (uint64_t)v123;
  *v123 = v100;
  swift_storeEnumTagMultiPayload(v101, v117, 0);
  *(_QWORD *)(v101 + v62[5]) = v68;
  v102 = v77;
  v103 = v132;
  v104 = v122;
  v122(v101 + v62[6], v102, v132);
  v104(v101 + v62[7], v91, v103);
  sub_100045AD4(v96, v101 + v62[8], (uint64_t *)&unk_10082EDF0);
  *(_QWORD *)(v101 + v62[9]) = v97;
  v105 = v101 + v62[10];
  *(_QWORD *)v105 = v98;
  *(_QWORD *)(v105 + 8) = v99;
  *(_BYTE *)(v105 + 16) = v57;
  v106 = v125;
  sub_10048701C(v101, v125);
  v107 = v131;
  sub_100487060(v131, v101);
  v108 = v126;
  sub_100487060(v106, v126);
  v109 = v127;
  sub_100487060(v101, v127);
  v110 = sub_100047110(&qword_100835820);
  sub_100487060(v108, v109 + *(int *)(v110 + 48));
  sub_1000EB3F4(v98, v99, v57);
  sub_1004870A4(v106);
  sub_1004870A4(v107);
  sub_1004870A4(v108);
  return sub_1004870A4(v101);
}

uint64_t sub_1004860A4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  void (*v14)(char *, uint64_t);
  char v15;
  double v16;
  id v17;
  uint64_t v19;

  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - v8;
  v10 = v1 + *(int *)(type metadata accessor for FriendCompetitionView(0) + 32);
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_BYTE *)(v10 + 16);
  sub_1003F6E18((uint64_t)v9);
  LODWORD(v12) = sub_10054FD90((uint64_t)v9, v11, v12, v13);
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v9, v3);
  if (v12 > 1)
  {
    v16 = 40.0;
  }
  else
  {
    sub_1003F6E18((uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.xxLarge(_:), v3);
    v15 = static DynamicTypeSize.< infix(_:_:)(v9, v6);
    v14(v6, v3);
    v14(v9, v3);
    if ((v15 & 1) != 0)
      v16 = 40.0;
    else
      v16 = 20.0;
  }
  type metadata accessor for ActivitySharingAvatarProvider();
  v17 = sub_1004B1860(a1, v16);
  return Image.init(uiImage:)(v17);
}

uint64_t sub_100486218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  id v37;
  NSString v38;
  id v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  const char *v49;
  const char *v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  __n128 v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD *, _QWORD);
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  _QWORD v104[4];

  v4 = sub_100047110(&qword_1008337E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v7);
  v101 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100833758);
  __chkstk_darwin(v9);
  v102 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100047110(&qword_100833760);
  v100 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v98 = (uint64_t)&v92 - v13;
  v14 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AttributedString(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v92 - v22;
  v24 = (void *)objc_opt_self(FIUIFormattingManager);
  v25 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", a1);
  v26 = objc_msgSend(v24, "stringWithNumber:decimalPrecision:", v25, 1);

  if (!v26)
    return AttributedString.init()(v27);
  v92 = v6;
  v97 = a2;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v93 = v29;
  v94 = v28;

  v30 = (void *)objc_opt_self(NSBundle);
  v96 = v17;
  v31 = objc_msgSend(v30, "mainBundle");
  v32 = String._bridgeToObjectiveC()();
  v95 = v18;
  v33 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, 0, 0);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  v37 = objc_msgSend(v30, "mainBundle");
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, 0, 0);

  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v42 = v41;

  v43 = sub_100047110((uint64_t *)&unk_100827460);
  v44 = swift_allocObject(v43, 112, 7);
  *(_OWORD *)(v44 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v44 + 56) = &type metadata for String;
  v45 = sub_100038CF8();
  v46 = v93;
  *(_QWORD *)(v44 + 32) = v94;
  *(_QWORD *)(v44 + 40) = v46;
  *(_QWORD *)(v44 + 96) = &type metadata for String;
  *(_QWORD *)(v44 + 104) = v45;
  *(_QWORD *)(v44 + 64) = v45;
  *(_QWORD *)(v44 + 72) = v34;
  *(_QWORD *)(v44 + 80) = v36;
  v47 = swift_bridgeObjectRetain(v36);
  v48 = String.init(format:_:)(v40, v42, v44, v47);
  v50 = v49;
  v51 = v95;
  swift_bridgeObjectRelease(v42, v49, v52, v53, v54, v55, v56, v57);
  AttributeContainer.init()(v58);
  v59 = v50;
  v60 = v96;
  AttributedString.init(_:attributes:)(v48, v59, v16);
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v20, v23, v60);
  v104[0] = v34;
  v104[1] = v36;
  v61 = type metadata accessor for Locale(0);
  v62 = (uint64_t)v101;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v101, 1, 1, v61);
  v63 = sub_1004870E0();
  v64 = sub_100038CA0();
  v65 = (uint64_t)v102;
  AttributedStringProtocol.range<A>(of:options:locale:)(v104, 0, v62, v60, &type metadata for String, v63, v64);
  sub_10001BE90(v62, (uint64_t *)&unk_10082ED90);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v60);
  swift_bridgeObjectRelease(v36, v66, v67, v68, v69, v70, v71, v72);
  v73 = v103;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v65, 1, v103) == 1)
  {
    v74 = &qword_100833758;
    v75 = v65;
  }
  else
  {
    v77 = v98;
    sub_100045AD4(v65, v98, &qword_100833760);
    v78 = v99;
    sub_100021CC0(v77, v99, &qword_100833760);
    KeyPath = swift_getKeyPath(&unk_10063ED80);
    __chkstk_darwin(KeyPath);
    *(&v92 - 2) = v80;
    v81 = swift_getKeyPath(&unk_10063EDB0);
    v82 = v92;
    static Text.Scale.secondary.getter();
    v83 = type metadata accessor for Text.Scale(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
    v84 = sub_100028384((unint64_t *)&qword_100833770, &qword_100833760, (uint64_t)&protocol conformance descriptor for Range<A>);
    v85 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v104, v78, v73, v84);
    v86 = sub_10043E458();
    AttributedSubstring.subscript.setter(v82, v81, v86);
    v85(v104, 0);
    sub_10001BE90(v78, &qword_100833760);
    v75 = v77;
    v74 = &qword_100833760;
  }
  sub_10001BE90(v75, v74);
  v87 = swift_getKeyPath(&unk_10063ECE0);
  __chkstk_darwin(v87);
  *(&v92 - 2) = v88;
  v89 = swift_getKeyPath(&unk_10063ED10);
  if (qword_10081DDF0 != -1)
    swift_once(&qword_10081DDF0, sub_1004851E8);
  v90 = qword_10086ABE0;
  v104[0] = qword_10086ABE0;
  v91 = sub_1000EA1DC();
  swift_retain(v90);
  AttributedString.subscript.setter(v104, v89, v91);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v51 + 32))(v97, v23, v60);
}

uint64_t sub_1004868D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  NSString v34;
  id v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  const char *v51;
  const char *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  __n128 v59;
  const char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD *, _QWORD);
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  _QWORD v105[4];

  v5 = sub_100047110(&qword_1008337E8);
  __chkstk_darwin(v5);
  v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100833758);
  __chkstk_darwin(v11);
  v103 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100047110(&qword_100833760);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v101 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v100 = (uint64_t)&v93 - v15;
  v16 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AttributedString(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v93 - v24;
  if (objc_msgSend(*(id *)(v2 + *(int *)(type metadata accessor for FriendCompetitionView(0) + 28)), "stage") != (id)1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a2, 1, 1, v19);
  v26 = (void *)objc_opt_self(FIUIFormattingManager);
  v27 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", a1);
  v28 = objc_msgSend(v26, "stringWithNumber:decimalPrecision:", v27, 1);

  if (!v28)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a2, 1, 1, v19);
  v94 = v7;
  v98 = a2;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v96 = v30;
  v97 = v29;

  v31 = (void *)objc_opt_self(NSBundle);
  v32 = objc_msgSend(v31, "mainBundle");
  v99 = v25;
  v33 = v32;
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

  v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v37 = v36;

  v38 = objc_msgSend(v31, "mainBundle");
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, 0, 0);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  v44 = sub_100047110((uint64_t *)&unk_100827460);
  v45 = swift_allocObject(v44, 112, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v45 + 56) = &type metadata for String;
  v46 = sub_100038CF8();
  v47 = v96;
  *(_QWORD *)(v45 + 32) = v97;
  *(_QWORD *)(v45 + 40) = v47;
  *(_QWORD *)(v45 + 96) = &type metadata for String;
  *(_QWORD *)(v45 + 104) = v46;
  v48 = v95;
  *(_QWORD *)(v45 + 64) = v46;
  *(_QWORD *)(v45 + 72) = v48;
  *(_QWORD *)(v45 + 80) = v37;
  v49 = swift_bridgeObjectRetain(v37);
  v50 = String.init(format:_:)(v41, v43, v45, v49);
  v52 = v51;
  swift_bridgeObjectRelease(v43, v51, v53, v54, v55, v56, v57, v58);
  AttributeContainer.init()(v59);
  v60 = v52;
  v61 = v99;
  AttributedString.init(_:attributes:)(v50, v60, v18);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v61, v19);
  v105[0] = v48;
  v105[1] = v37;
  v62 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v10, 1, 1, v62);
  v63 = sub_1004870E0();
  v64 = sub_100038CA0();
  v65 = (uint64_t)v103;
  AttributedStringProtocol.range<A>(of:options:locale:)(v105, 0, v10, v19, &type metadata for String, v63, v64);
  sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_10082ED90);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  swift_bridgeObjectRelease(v37, v66, v67, v68, v69, v70, v71, v72);
  v73 = v104;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v65, 1, v104) == 1)
  {
    v74 = &qword_100833758;
    v75 = v65;
  }
  else
  {
    v77 = v100;
    sub_100045AD4(v65, v100, &qword_100833760);
    v78 = v101;
    sub_100021CC0(v77, v101, &qword_100833760);
    KeyPath = swift_getKeyPath(&unk_10063ED80);
    __chkstk_darwin(KeyPath);
    *(&v93 - 2) = v80;
    v81 = swift_getKeyPath(&unk_10063EDB0);
    v82 = v94;
    static Text.Scale.secondary.getter();
    v83 = type metadata accessor for Text.Scale(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
    v84 = sub_100028384((unint64_t *)&qword_100833770, &qword_100833760, (uint64_t)&protocol conformance descriptor for Range<A>);
    v85 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v105, v78, v73, v84);
    v86 = sub_10043E458();
    AttributedSubstring.subscript.setter(v82, v81, v86);
    v85(v105, 0);
    sub_10001BE90(v78, &qword_100833760);
    v75 = v77;
    v74 = &qword_100833760;
  }
  sub_10001BE90(v75, v74);
  v87 = swift_getKeyPath(&unk_10063ECE0);
  __chkstk_darwin(v87);
  *(&v93 - 2) = v88;
  v89 = swift_getKeyPath(&unk_10063ED10);
  v90 = v98;
  if (qword_10081DDF8 != -1)
    swift_once(&qword_10081DDF8, sub_1004853B8);
  v91 = qword_10086ABE8;
  v105[0] = qword_10086ABE8;
  v92 = sub_1000EA1DC();
  swift_retain(v91);
  AttributedString.subscript.setter(v105, v89, v92);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v90, v61, v19);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v90, 0, 1, v19);
}

uint64_t sub_100486FE0()
{
  return 8;
}

uint64_t sub_100486FEC(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100486FF4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100487008(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10048701C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CompetitionRowView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100487060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CompetitionRowView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004870A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CompetitionRowView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004870E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833768;
  if (!qword_100833768)
  {
    v1 = type metadata accessor for AttributedString(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributedString, v1);
    atomic_store(result, (unint64_t *)&qword_100833768);
  }
  return result;
}

uint64_t sub_100487134()
{
  return 8;
}

unint64_t sub_10048714C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835828;
  if (!qword_100835828)
  {
    v1 = sub_100007050(&qword_100835810);
    sub_100028384(&qword_100835830, &qword_100835808, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835828);
  }
  return result;
}

uint64_t sub_1004871DC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Class isa;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_12;
  v18 = _swiftEmptyArrayStorage;
  result = sub_100121554(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v5 = v18;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, "CGColor");
      type metadata accessor for CGColor(0);
      v17 = v11;

      *(_QWORD *)&v16 = v10;
      v18 = v5;
      v13 = v5[2];
      v12 = v5[3];
      if (v13 >= v12 >> 1)
      {
        sub_100121554(v12 > 1, v13 + 1, 1);
        v5 = v18;
      }
      ++v7;
      v5[2] = v13 + 1;
      sub_100038FD4(&v16, &v5[4 * v13 + 4]);
    }
    while (v4 != v7);
LABEL_12:
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setColors:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_10048737C(uint64_t a1, __int128 *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  int v16;
  id v17;
  _QWORD *v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  Swift::String v42;
  uint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;
  void *object;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v67;
  unint64_t v68;
  unint64_t v69;
  _OWORD v70[3];
  uint64_t v71;
  uint64_t v72;

  v4 = v3;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 43) = *(_OWORD *)(a1 + 27);
  v9 = a2[1];
  *(_OWORD *)(v4 + 64) = *a2;
  *(_OWORD *)(v4 + 80) = v9;
  v10 = a2[5];
  *(_OWORD *)(v4 + 128) = a2[4];
  *(_OWORD *)(v4 + 144) = v10;
  v11 = a2[3];
  v13 = *a2;
  v12 = a2[1];
  v14 = a2[2];
  *(_OWORD *)(v4 + 96) = v14;
  *(_OWORD *)(v4 + 112) = v11;
  *(_QWORD *)(v4 + 184) = 0;
  *(_QWORD *)(v4 + 192) = 6;
  *(_QWORD *)(v4 + 208) = 0;
  *(_QWORD *)(v4 + 216) = 0;
  *(_QWORD *)(v4 + 200) = 0;
  *(_BYTE *)(v4 + 160) = *((_BYTE *)a2 + 96);
  *(_QWORD *)(v4 + 168) = a3;
  *(_QWORD *)(v4 + 176) = 0;
  v71 = *((_QWORD *)a2 + 6);
  v70[1] = v12;
  v70[2] = v14;
  v70[0] = v13;
  v15 = *((_BYTE *)a2 + 58);
  v16 = *((unsigned __int8 *)a2 + 56);
  sub_10003EE38(a2);
  sub_10003EE38(a2);
  sub_100133118(a1);
  v17 = a3;
  v18 = sub_1004888B0((uint64_t *)v70);
  v19 = sub_100488AB4(v18, v15, (uint64_t)v17);
  v21 = v20;
  swift_bridgeObjectRelease(v18);
  if (v19 < v21 && v16 == 2)
  {
    swift_release(v4);
    sub_10003EDC4((uint64_t *)a2);
    sub_1004E3DDC(*(unsigned __int8 *)(a1 + 41), v15);
    v23 = v22;
    v25 = v24;
    v26 = sub_100128D54(a1);
    v27 = static os_log_type_t.error.getter(v26);
    v28 = (void *)HKLogActivity;
    v29 = sub_100047110((uint64_t *)&unk_100827460);
    v67 = v17;
    v30 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_100622F90;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    v31 = sub_100038CF8();
    *(_QWORD *)(v30 + 64) = v31;
    *(_QWORD *)(v30 + 32) = v23;
    *(_QWORD *)(v30 + 40) = v25;
    v32 = v28;
    os_log(_:dso:log:_:_:)(v27, &_mh_execute_header, v32, "[#trends] Metric: %{public}@", 28, 2, v30);

    swift_bridgeObjectRelease(v30);
    v68 = 0;
    v69 = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    v33._countAndFlagsBits = 0xD000000000000019;
    v33._object = (void *)0x80000001006A0790;
    String.append(_:)(v33);
    Double.write<A>(to:)(&v68, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v19);
    v34._countAndFlagsBits = 0xD000000000000015;
    v34._object = (void *)0x80000001006A07B0;
    String.append(_:)(v34);
    v35 = Double.write<A>(to:)(&v68, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v21);
    v36 = v68;
    v37 = v69;
    v38 = static os_log_type_t.error.getter(v35);
    v39 = (void *)HKLogActivity;
    v40 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v40 + 16) = xmmword_100622F90;
    *(_QWORD *)(v40 + 56) = &type metadata for String;
    *(_QWORD *)(v40 + 64) = v31;
    *(_QWORD *)(v40 + 32) = v36;
    *(_QWORD *)(v40 + 40) = v37;
    v41 = v39;
    os_log(_:dso:log:_:_:)(v38, &_mh_execute_header, v41, "%{public}@", 10, 2, v40);

    swift_bridgeObjectRelease(v40);
    v68 = 0;
    v69 = 0xE000000000000000;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease(v69);
    v68 = 0xD000000000000011;
    v69 = 0x80000001006A07D0;
    v42._countAndFlagsBits = 1853321060;
    v42._object = (void *)0xE400000000000000;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(0xE400000000000000);
    v43 = sub_10003EDC4((uint64_t *)a2);
    v44 = v68;
    v45 = v69;
    v46 = static os_log_type_t.error.getter(v43);
    v47 = (void *)HKLogActivity;
    v48 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v48 + 16) = xmmword_100622F90;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    *(_QWORD *)(v48 + 64) = v31;
    *(_QWORD *)(v48 + 32) = v44;
    *(_QWORD *)(v48 + 40) = v45;
    v49 = v47;
    os_log(_:dso:log:_:_:)(v46, &_mh_execute_header, v49, "%{public}@", 10, 2, v48);

    swift_bridgeObjectRelease(v48);
    v51 = static os_log_type_t.error.getter(v50);
    v52 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v51, &_mh_execute_header, v52, "[#trends] Unexpected condition found: 90-day avg > 365-day avg && arrow == down", 79, 2, _swiftEmptyArrayStorage);

    v53 = sub_100148108();
    v54 = swift_allocError(&type metadata for TrendsCoachingError, v53, 0, 0);
    swift_willThrow(v54);

  }
  else
  {
    sub_100128D54(a1);
    sub_10003EDC4((uint64_t *)a2);
    v55 = *(_QWORD *)(*(_QWORD *)&v70[0] + 16);
    if (v55 == 365)
    {

      sub_10003EDC4((uint64_t *)a2);
    }
    else
    {
      _StringGuts.grow(_:)(58);
      v56._countAndFlagsBits = 0xD000000000000037;
      v56._object = (void *)0x800000010068A9B0;
      String.append(_:)(v56);
      sub_10003EDC4((uint64_t *)a2);
      v72 = v55;
      v57._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v57._object;
      String.append(_:)(v57);
      swift_bridgeObjectRelease(object);
      v59._countAndFlagsBits = 46;
      v59._object = (void *)0xE100000000000000;
      String.append(_:)(v59);
      v61 = static os_log_type_t.error.getter(v60);
      v62 = (void *)HKLogActivity;
      v63 = sub_100047110((uint64_t *)&unk_100827460);
      v64 = swift_allocObject(v63, 72, 7);
      *(_OWORD *)(v64 + 16) = xmmword_100622F90;
      *(_QWORD *)(v64 + 56) = &type metadata for String;
      *(_QWORD *)(v64 + 64) = sub_100038CF8();
      *(_QWORD *)(v64 + 32) = 0;
      *(_QWORD *)(v64 + 40) = 0xE000000000000000;
      v65 = v62;
      os_log(_:dso:log:_:_:)(v61, &_mh_execute_header, v65, "%{public}@", 10, 2, v64);

      swift_bridgeObjectRelease(v64);
    }
  }
  return v4;
}

void sub_10048792C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  double v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  void *v64;
  Swift::String v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  Swift::String v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  id v78;
  Swift::String v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  id v85;
  Swift::String v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  unsigned __int8 v104;
  unint64_t v105;
  __int128 v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  unsigned __int8 v111;
  char v112;
  __int128 v113;
  _QWORD *v114;
  _OWORD v115[3];
  uint64_t v116;

  v2 = v1;
  if (*(_BYTE *)(v1 + 192) == 6)
  {
    v99 = a1;
    v3 = *(_BYTE *)(v1 + 122);
    v4 = *(double *)(v1 + 128);
    v100 = *(_BYTE *)(v1 + 57);
    sub_1004E3DDC(v100, v3);
    v6 = v5;
    v8 = v7;
    v9 = static os_log_type_t.default.getter(v5);
    v10 = (void *)HKLogActivity;
    v11 = sub_100047110((uint64_t *)&unk_100827460);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100622F90;
    *(_QWORD *)(v12 + 56) = &type metadata for String;
    v105 = sub_100038CF8();
    *(_QWORD *)(v12 + 64) = v105;
    *(_QWORD *)(v12 + 32) = v6;
    *(_QWORD *)(v12 + 40) = v8;
    v13 = v10;
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v13, "[#trends] Metric: %{public}@", 28, 2, v12);

    swift_bridgeObjectRelease(v12);
    v14 = *(_OWORD *)(v2 + 80);
    v115[0] = *(_OWORD *)(v2 + 64);
    v115[1] = v14;
    v115[2] = *(_OWORD *)(v2 + 96);
    v116 = *(_QWORD *)(v2 + 112);
    v114 = sub_1004888B0((uint64_t *)v115);
    v15 = sub_100488348(&v114);
    v16 = v114;
    v103 = v3;
    v17 = v3;
    v18 = *(_QWORD *)(v2 + 168);
    v19 = sub_100488AB4(v114, v17, v18);
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)&v106 = 0;
    *((_QWORD *)&v106 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(103);
    v24._countAndFlagsBits = 0xD000000000000027;
    v24._object = (void *)0x80000001006A0850;
    String.append(_:)(v24);
    *(_QWORD *)&v113 = v15;
    v25._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v25._object;
    String.append(_:)(v25);
    swift_bridgeObjectRelease(object);
    v27._countAndFlagsBits = 0xD000000000000010;
    v27._object = (void *)0x80000001006A07F0;
    String.append(_:)(v27);
    Double.write<A>(to:)(&v106, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v19);
    v28._object = (void *)0x80000001006A0810;
    v28._countAndFlagsBits = 0x1000000000000011;
    String.append(_:)(v28);
    Double.write<A>(to:)(&v106, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v21);
    v29._countAndFlagsBits = 0x1000000000000017;
    v29._object = (void *)0x80000001006A0830;
    String.append(_:)(v29);
    v30 = Double.write<A>(to:)(&v106, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v23);
    v31 = v106;
    v32 = static os_log_type_t.default.getter(v30);
    v33 = (void *)HKLogActivity;
    v34 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_100622F90;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = v105;
    *(_OWORD *)(v34 + 32) = v31;
    v35 = v33;
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v35, "%{public}@", 10, 2, v34);

    swift_bridgeObjectRelease(v34);
    if (v15 < 2)
    {
      v39 = 0;
      v36 = v11;
      v37 = v103;
      v38 = v18;
    }
    else
    {
      v36 = v11;
      v37 = v103;
      v38 = v18;
      if ((unint64_t)v15 < 8)
      {
        v39 = 1;
      }
      else if ((unint64_t)v15 <= 0x5A)
      {
        v39 = 2;
      }
      else
      {
        v39 = 3;
      }
    }
    v42 = sub_100035C90(v38, v37, v21);
    *(double *)(v2 + 176) = v42;
    v102 = v15;
    v104 = v39;
    *(_QWORD *)(v2 + 184) = v15;
    *(_QWORD *)(v2 + 192) = v39;
    *(double *)(v2 + 200) = v19;
    *(double *)(v2 + 208) = v21;
    *(double *)(v2 + 216) = v23;
    *(_QWORD *)&v106 = 0;
    *((_QWORD *)&v106 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    v43._countAndFlagsBits = 0xD000000000000019;
    v43._object = (void *)0x80000001006A0790;
    String.append(_:)(v43);
    Double.write<A>(to:)(&v106, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v19);
    v44._object = (void *)0x80000001006A07B0;
    v44._countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v44);
    v45 = Double.write<A>(to:)(&v106, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v21);
    v46 = v106;
    v47 = static os_log_type_t.default.getter(v45);
    v48 = (void *)HKLogActivity;
    v49 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v49 + 16) = xmmword_100622F90;
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    *(_QWORD *)(v49 + 64) = v105;
    *(_OWORD *)(v49 + 32) = v46;
    v50 = v48;
    os_log(_:dso:log:_:_:)(v47, &_mh_execute_header, v50, "%{public}@", 10, 2, v49);

    swift_bridgeObjectRelease(v49);
    *(_QWORD *)&v106 = 0;
    *((_QWORD *)&v106 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease(*((_QWORD *)&v106 + 1));
    *(_QWORD *)&v106 = 0xD000000000000011;
    *((_QWORD *)&v106 + 1) = 0x80000001006A07D0;
    v51 = 1952541798;
    if (*(_BYTE *)(v2 + 120) != 1)
      v51 = 1853321060;
    if (*(_BYTE *)(v2 + 120))
      v52 = v51;
    else
      v52 = 28789;
    if (*(_BYTE *)(v2 + 120))
      v53 = 0xE400000000000000;
    else
      v53 = 0xE200000000000000;
    v54 = v53;
    String.append(_:)(*(Swift::String *)&v52);
    swift_bridgeObjectRelease(v53);
    v55 = v106;
    v57 = static os_log_type_t.default.getter(v56);
    v58 = (void *)HKLogActivity;
    v59 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v59 + 16) = xmmword_100622F90;
    *(_QWORD *)(v59 + 56) = &type metadata for String;
    *(_QWORD *)(v59 + 64) = v105;
    *(_OWORD *)(v59 + 32) = v55;
    v101 = v36;
    v60 = v58;
    os_log(_:dso:log:_:_:)(v57, &_mh_execute_header, v60, "%{public}@", 10, 2, v59);

    swift_bridgeObjectRelease(v59);
    *(_QWORD *)&v106 = 0;
    *((_QWORD *)&v106 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    v61._countAndFlagsBits = 0xD000000000000018;
    v61._object = (void *)0x80000001006A0880;
    String.append(_:)(v61);
    Double.write<A>(to:)(&v106, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v42);
    v62._countAndFlagsBits = 0x20726F6620;
    v62._object = (void *)0xE500000000000000;
    String.append(_:)(v62);
    *(_QWORD *)&v113 = v15;
    v63._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v64 = v63._object;
    String.append(_:)(v63);
    swift_bridgeObjectRelease(v64);
    v65._countAndFlagsBits = 0x29732879616420;
    v65._object = (void *)0xE700000000000000;
    String.append(_:)(v65);
    v66 = v106;
    v68 = static os_log_type_t.default.getter(v67);
    v69 = (void *)HKLogActivity;
    v70 = swift_allocObject(v101, 72, 7);
    *(_OWORD *)(v70 + 16) = xmmword_100622F90;
    *(_QWORD *)(v70 + 56) = &type metadata for String;
    *(_QWORD *)(v70 + 64) = v105;
    *(_OWORD *)(v70 + 32) = v66;
    v71 = v69;
    os_log(_:dso:log:_:_:)(v68, &_mh_execute_header, v71, "%{public}@", 10, 2, v70);

    swift_bridgeObjectRelease(v70);
    *(_QWORD *)&v106 = 0;
    *((_QWORD *)&v106 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    v72._countAndFlagsBits = 0xD000000000000021;
    v72._object = (void *)0x80000001006A08A0;
    String.append(_:)(v72);
    v73 = Double.write<A>(to:)(&v106, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v4);
    v74 = v106;
    v75 = static os_log_type_t.default.getter(v73);
    v76 = (void *)HKLogActivity;
    v77 = swift_allocObject(v101, 72, 7);
    *(_OWORD *)(v77 + 16) = xmmword_100622F90;
    *(_QWORD *)(v77 + 56) = &type metadata for String;
    *(_QWORD *)(v77 + 64) = v105;
    *(_OWORD *)(v77 + 32) = v74;
    v78 = v76;
    os_log(_:dso:log:_:_:)(v75, &_mh_execute_header, v78, "%{public}@", 10, 2, v77);

    swift_bridgeObjectRelease(v77);
    *(_QWORD *)&v106 = 0;
    *((_QWORD *)&v106 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    v79._countAndFlagsBits = 0xD000000000000017;
    v79._object = (void *)0x80000001006A08D0;
    String.append(_:)(v79);
    LOBYTE(v113) = v104;
    v80 = _print_unlocked<A, B>(_:_:)(&v113, &v106, &type metadata for TrendsCoachingGoalBucket, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v81 = v106;
    v82 = static os_log_type_t.default.getter(v80);
    v83 = (void *)HKLogActivity;
    v84 = swift_allocObject(v101, 72, 7);
    *(_OWORD *)(v84 + 16) = xmmword_100622F90;
    *(_QWORD *)(v84 + 56) = &type metadata for String;
    *(_QWORD *)(v84 + 64) = v105;
    *(_OWORD *)(v84 + 32) = v81;
    v85 = v83;
    os_log(_:dso:log:_:_:)(v82, &_mh_execute_header, v85, "%{public}@", 10, 2, v84);

    swift_bridgeObjectRelease(v84);
    *(_QWORD *)&v106 = 0;
    *((_QWORD *)&v106 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    v113 = v106;
    v86._object = (void *)0x80000001006A08F0;
    v86._countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v86);
    v87 = *(_QWORD *)(v2 + 32);
    v88 = *(_BYTE *)(v2 + 40);
    v89 = *(_QWORD *)(v2 + 48);
    v90 = *(_BYTE *)(v2 + 56);
    v91 = *(_BYTE *)(v2 + 58);
    v106 = *(_OWORD *)(v2 + 16);
    v107 = v87;
    v108 = v88;
    v109 = v89;
    v110 = v90;
    v111 = v100;
    v112 = v91;
    v92 = _print_unlocked<A, B>(_:_:)(&v106, &v113, &type metadata for TrendsCoachingUserInfo, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v93 = v113;
    v94 = static os_log_type_t.default.getter(v92);
    v95 = (void *)HKLogActivity;
    v96 = swift_allocObject(v101, 72, 7);
    *(_OWORD *)(v96 + 16) = xmmword_100622F90;
    *(_QWORD *)(v96 + 56) = &type metadata for String;
    *(_QWORD *)(v96 + 64) = v105;
    *(_OWORD *)(v96 + 32) = v93;
    v97 = v95;
    v98 = v94;
    v41 = v104;
    os_log(_:dso:log:_:_:)(v98, &_mh_execute_header, v97, "%{public}@", 10, 2, v96);

    swift_bridgeObjectRelease(v96);
    v40 = v102;
    a1 = v99;
  }
  else
  {
    v21 = *(double *)(v1 + 208);
    v23 = *(double *)(v1 + 216);
    v19 = *(double *)(v1 + 200);
    v40 = *(_QWORD *)(v1 + 184);
    v41 = *(_BYTE *)(v1 + 192);
    v42 = *(double *)(v2 + 176);
  }
  *(double *)a1 = v42;
  *(_QWORD *)(a1 + 8) = v40;
  *(_BYTE *)(a1 + 16) = v41;
  *(double *)(a1 + 24) = v19;
  *(double *)(a1 + 32) = v21;
  *(double *)(a1 + 40) = v23;
}

uint64_t sub_100488348(_QWORD **a1)
{
  uint64_t v1;
  char v3;
  double v4;
  _QWORD *v5;
  _QWORD *v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;
  _QWORD *v13;
  double v14;
  _QWORD *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  double v29;
  double *v30;
  Swift::String v31;
  Swift::String v32;
  void *object;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  unsigned __int8 v37;
  double v38;
  Swift::String v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  double v49;
  double v50;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  unsigned __int8 v55;
  unsigned __int8 v56;

  v3 = *(_BYTE *)(v1 + 122);
  v4 = *(double *)(v1 + 128);
  v5 = *a1;
  v6 = sub_100488988(*a1, 0x5AuLL);
  v7 = sub_100184420((uint64_t)v6);
  swift_bridgeObjectRelease(v6);
  v8 = *(_QWORD *)(v1 + 168);
  v9 = sub_100488AB4(v5, v3, v8);
  if (v9 < v10)
    return 0;
  v52 = a1;
  v11 = 0;
  v12 = v4 * v7;
  while (1)
  {
    v13 = sub_100488988(v5, 0x16DuLL);
    v14 = sub_100184420((uint64_t)v13);
    swift_bridgeObjectRelease(v13);
    v15 = sub_100488988(v5, 0x5AuLL);
    v16 = sub_100184420((uint64_t)v15);
    v18 = v17;
    swift_bridgeObjectRelease(v15);
    v19 = v5[2];
    v20 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v21 = swift_unknownObjectRetain_n(v5, 2);
    v22 = (_QWORD *)swift_dynamicCastClass(v21, v20);
    if (!v22)
    {
      swift_bridgeObjectRelease(v5);
      v22 = _swiftEmptyArrayStorage;
    }
    v23 = v22[2];
    swift_release(v22);
    if (v23 == v19 - (v19 != 0))
    {
      v24 = (_QWORD *)swift_dynamicCastClass(v5, v20);
      if (!v24)
      {
        swift_bridgeObjectRelease(v5);
        v24 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v5);
      v24 = sub_100295A68((uint64_t)v5, (uint64_t)(v5 + 4), v19 != 0, (2 * v19) | 1);
    }
    swift_bridgeObjectRelease(v5);
    v25 = sub_100488988(v24, 0x5AuLL);
    v26 = v25[2];
    swift_bridgeObjectRelease(v25);
    v56 = 0;
    v55 = 0;
    if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
      v24 = sub_10003D330(0, v24[2] + 1, 1, v24);
    v28 = v24[2];
    v27 = v24[3];
    v5 = v28 >= v27 >> 1 ? sub_10003D330((_QWORD *)(v27 > 1), v28 + 1, 1, v24) : v24;
    v29 = v18 / (double)v26;
    v5[2] = v28 + 1;
    v30 = (double *)&v5[3 * v28];
    v30[4] = v12;
    v30[5] = v29;
    *((_BYTE *)v30 + 48) = 0;
    v53 = 0;
    v54 = 0xE000000000000000;
    _StringGuts.grow(_:)(93);
    v31._countAndFlagsBits = 0x73646E657274235BLL;
    v31._object = (void *)0xEE0020796144205DLL;
    String.append(_:)(v31);
    v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v32._object;
    String.append(_:)(v32);
    swift_bridgeObjectRelease(object);
    v34._countAndFlagsBits = 0xD000000000000010;
    v34._object = (void *)0x80000001006A07F0;
    String.append(_:)(v34);
    Double.write<A>(to:)(&v53, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v14);
    v35._countAndFlagsBits = 0x1000000000000011;
    v35._object = (void *)0x80000001006A0810;
    String.append(_:)(v35);
    Double.write<A>(to:)(&v53, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v16);
    v36._countAndFlagsBits = 0x1000000000000017;
    v36._object = (void *)0x80000001006A0830;
    String.append(_:)(v36);
    v37 = v56;
    v38 = v56 ? 0.0 : v12;
    Double.write<A>(to:)(&v53, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v38);
    v39._countAndFlagsBits = 0x69655720A280E220;
    v39._object = (void *)0xAD0000203A746867;
    String.append(_:)(v39);
    v40 = ((v55 | v37) & 1) != 0 ? 0.0 : v29;
    Double.write<A>(to:)(&v53, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v40);
    v41 = v53;
    v42 = v54;
    v44 = static os_log_type_t.debug.getter(v43);
    v45 = (void *)HKLogActivity;
    v46 = sub_100047110((uint64_t *)&unk_100827460);
    v47 = swift_allocObject(v46, 72, 7);
    *(_OWORD *)(v47 + 16) = xmmword_100622F90;
    *(_QWORD *)(v47 + 56) = &type metadata for String;
    *(_QWORD *)(v47 + 64) = sub_100038CF8();
    *(_QWORD *)(v47 + 32) = v41;
    *(_QWORD *)(v47 + 40) = v42;
    v48 = v45;
    os_log(_:dso:log:_:_:)(v44, &_mh_execute_header, v48, "%{public}@", 10, 2, v47);

    swift_bridgeObjectRelease(v47);
    if (v11 == 364)
      break;
    ++v11;
    v49 = sub_100488AB4(v5, v3, v8);
    if (v49 < v50)
      goto LABEL_25;
  }
  v11 = 365;
LABEL_25:
  *v52 = v5;
  return v11;
}

uint64_t sub_1004887E8(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for TrendListMetric(0);
    return a2;
  }
  return result;
}

uint64_t sub_10048884C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(v1);

  return swift_deallocClassInstance(v0, 224, 7);
}

uint64_t type metadata accessor for TrendsCoachingStatisticsManager()
{
  return objc_opt_self(_TtC10FitnessApp31TrendsCoachingStatisticsManager);
}

_QWORD *sub_1004888B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  __int128 v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *a1;
  v2 = *(_QWORD *)(*a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = sub_10003D330(0, 1, 1, _swiftEmptyArrayStorage);
  v4 = v3[2];
  v5 = 3 * v4;
  v6 = (_BYTE *)(v1 + 48);
  do
  {
    v7 = *((_OWORD *)v6 - 1);
    v8 = *v6;
    v9 = v3[3];
    v10 = v4 + 1;
    if (v4 >= v9 >> 1)
    {
      v14 = *((_OWORD *)v6 - 1);
      v12 = sub_10003D330((_QWORD *)(v9 > 1), v4 + 1, 1, v3);
      v7 = v14;
      v3 = v12;
    }
    v3[2] = v10;
    v11 = &v3[v5];
    *((_OWORD *)v11 + 2) = v7;
    *((_BYTE *)v11 + 48) = v8;
    v5 += 3;
    v6 += 24;
    v4 = v10;
    --v2;
  }
  while (v2);
  return v3;
}

_QWORD *sub_100488988(_QWORD *result, unint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    v4 = result[2];
    v5 = v4 - a2;
    if (v4 < a2)
      v5 = 0;
    if (v5 == v4)
      return _swiftEmptyArrayStorage;
    if (v5 < v4)
    {
      swift_bridgeObjectRetain(result);
      if (v4 >= a2)
        v7 = a2;
      else
        v7 = v4;
      v8 = (char *)v3 + 24 * v4 - 24 * v7 + 48;
      v6 = _swiftEmptyArrayStorage;
      do
      {
        if ((*v8 & 1) == 0)
        {
          v11 = *((_OWORD *)v8 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            v6 = sub_10013FD18(0, v6[2] + 1, 1, v6);
          v10 = v6[2];
          v9 = v6[3];
          if (v10 >= v9 >> 1)
            v6 = sub_10013FD18((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
          v6[2] = v10 + 1;
          *(_OWORD *)&v6[2 * v10 + 4] = v11;
        }
        v8 += 24;
        --v7;
      }
      while (v7);
      swift_unknownObjectRelease(v3);
      return v6;
    }
  }
  __break(1u);
  return result;
}

double sub_100488AB4(_QWORD *a1, char a2, uint64_t a3)
{
  _QWORD *v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  _QWORD *v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;

  v6 = sub_100488988(a1, 0x16DuLL);
  v7 = sub_100184420((uint64_t)v6);
  swift_bridgeObjectRelease(v6);
  v8 = sub_100035C90(a3, a2, v7);
  sub_100036BCC(a3, a2);
  v10 = v9;
  v11 = (void *)objc_opt_self(HKQuantity);
  v12 = objc_msgSend(v11, "quantityWithUnit:doubleValue:", v10, v8);

  LOBYTE(v10) = byte_10063EE42[a2];
  sub_1000364C8((char)v10);
  v14 = v13;
  objc_msgSend(v12, "doubleValueForUnit:", v13);
  v16 = v15;

  v17 = sub_100488988(a1, 0x5AuLL);
  v18 = sub_100184420((uint64_t)v17);
  swift_bridgeObjectRelease(v17);
  v19 = sub_100035C90(a3, a2, v18);
  sub_100036BCC(a3, a2);
  v21 = v20;
  v22 = objc_msgSend(v11, "quantityWithUnit:doubleValue:", v20, v19);

  sub_1000364C8((char)v10);
  v24 = v23;
  objc_msgSend(v22, "doubleValueForUnit:", v23);

  return v16;
}

unint64_t sub_100488C5C()
{
  unint64_t result;

  result = qword_100835920;
  if (!qword_100835920)
  {
    result = swift_getWitnessTable(&unk_10063EEA8, &type metadata for WorkoutSplitEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100835920);
  }
  return result;
}

unint64_t sub_100488CA4()
{
  unint64_t result;

  result = qword_100835928[0];
  if (!qword_100835928[0])
  {
    result = swift_getWitnessTable(&unk_10063EF08, &type metadata for WorkoutSplitEntityQuery);
    atomic_store(result, qword_100835928);
  }
  return result;
}

uint64_t sub_100488CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  sub_100047110(&qword_1008201E0);
  v2 = type metadata accessor for AppDependencyManager(0);
  v8 = 0u;
  v9 = 0u;
  v10 = 0;
  v3 = static AppDependencyManager.shared.getter(v2);
  v4 = AppDependency.__allocating_init(key:manager:)(&v8, v3);
  v5 = sub_100047110(&qword_1008201E8);
  v10 = 0;
  v8 = 0u;
  v9 = 0u;
  v6 = static AppDependencyManager.shared.getter(v5);
  result = AppDependency.__allocating_init(key:manager:)(&v8, v6);
  *a1 = v4;
  a1[1] = result;
  return result;
}

uint64_t sub_100488D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(v1 + 8);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100835978 + dword_100835978);
  v5 = (_QWORD *)swift_task_alloc(unk_10083597C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001A48BC;
  return v7(a1, v4);
}

uint64_t sub_100488E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *(_QWORD **)(v1 + 8);
  v6 = (uint64_t (*)(_QWORD *))((char *)&dword_100835970 + dword_100835970);
  v4 = (_QWORD *)swift_task_alloc(unk_100835974);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100100D3C;
  return v6(v3);
}

unint64_t sub_100488E70()
{
  unint64_t result;

  result = qword_100835940;
  if (!qword_100835940)
  {
    result = swift_getWitnessTable(&unk_10063EF30, &type metadata for WorkoutSplitEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100835940);
  }
  return result;
}

unint64_t sub_100488EB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835948;
  if (!qword_100835948)
  {
    v1 = sub_100007050(qword_100835950);
    sub_10020703C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100835948);
  }
  return result;
}

uint64_t sub_100488F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100206724();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for WorkoutSplitEntityQuery()
{
  return &type metadata for WorkoutSplitEntityQuery;
}

void sub_100488F98(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  unint64_t v6;
  __int128 *v7;
  unint64_t i;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = a1 + 48;
    v26 = v2 - 1;
    v5 = &_swiftEmptyArrayStorage;
    v31 = *(_QWORD *)(a1 + 16);
    v27 = a1 + 48;
    do
    {
      v28 = v5;
      if (v3 <= v2)
        v6 = v2;
      else
        v6 = v3;
      v33 = v6;
      v7 = (__int128 *)(v4 + 72 * v3);
      for (i = v3; ; ++i)
      {
        if (v33 == i)
        {
          __break(1u);
          return;
        }
        v35 = *(v7 - 1);
        v36 = *v7;
        v9 = *((_QWORD *)v7 + 2);
        v10 = *((_QWORD *)v7 + 4);
        v29 = *((_QWORD *)v7 + 3);
        v30 = *((_QWORD *)v7 + 5);
        v11 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v7 + 6);
        v34 = i + 1;
        v12 = *((_QWORD *)v7 - 2);
        swift_retain_n(v12, 2);
        swift_retain(*((_QWORD *)&v35 + 1));
        swift_retain(v36);
        swift_retain(*((_QWORD *)&v36 + 1));
        v13 = v9;
        swift_retain(v9);
        swift_retain(v10);
        swift_bridgeObjectRetain(v11);
        LOBYTE(v9) = sub_1002D3AF0(v12, a2);
        swift_release(v12);
        if ((v9 & 1) != 0)
          break;
        swift_bridgeObjectRelease(v11, v14, v15, v16, v17, v18, v19, v20);
        swift_release(v10);
        swift_release(v13);
        swift_release(*((_QWORD *)&v36 + 1));
        swift_release(v36);
        swift_release(*((_QWORD *)&v35 + 1));
        swift_release(v12);
        v7 = (__int128 *)((char *)v7 + 72);
        if (v31 == v34)
          return;
      }
      v5 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
      {
        sub_100121C74(0, *(_QWORD *)v28->cellPadding + 1, 1);
        v5 = v28;
      }
      v21 = v35;
      v22 = v36;
      v24 = *(_QWORD *)v5->cellPadding;
      v23 = *(_QWORD *)v5->cellInset;
      if (v24 >= v23 >> 1)
      {
        sub_100121C74(v23 > 1, v24 + 1, 1);
        v22 = v36;
        v21 = v35;
        v5 = v28;
      }
      *(_QWORD *)v5->cellPadding = v24 + 1;
      v25 = (char *)v5 + 72 * v24;
      *((_OWORD *)v25 + 2) = v21;
      *((_OWORD *)v25 + 3) = v22;
      *((_QWORD *)v25 + 8) = v13;
      *((_QWORD *)v25 + 9) = v29;
      *((_QWORD *)v25 + 10) = v10;
      *((_QWORD *)v25 + 11) = v30;
      *((_QWORD *)v25 + 12) = v11;
      v4 = v27;
      v2 = v31;
      v3 = i + 1;
    }
    while (v26 != i);
  }
}

void sub_1004891F4(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  int v16;
  id v17;
  unsigned int v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  double v37;
  double v38;
  id v39;
  uint64_t v40;
  double v41;
  double v42;
  id v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  id v59;
  void *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  _OWORD v77[4];
  uint64_t v78;

  v4 = sub_100047110(&qword_100821EB0);
  __chkstk_darwin(v4);
  v73 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100821E10);
  __chkstk_darwin(v6);
  v72 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100821E40);
  __chkstk_darwin(v8);
  v71 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  __chkstk_darwin(v10);
  v70 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a1;
  v12 = objc_msgSend(a1, "fiui_activityType");
  if (v12)
  {
    v13 = v12;
    AppDependency.wrappedValue.getter(v77);
    v14 = *(void **)&v77[0];
    v15 = objc_msgSend(*(id *)&v77[0], "unitManager");

    if (v15)
    {
      v16 = a2 & 1;
      v17 = objc_msgSend(v15, "userDistanceHKUnitForActivityType:", v13);

      v68 = FIUIDistanceTypeForActivityType(v13);
      v18 = objc_msgSend(v17, "_isMetricDistance");
      v19 = 1;
      if (!v18)
        v19 = 2;
      v67 = v19;
      v69 = v16;
      if (v16)
        v20 = objc_msgSend(v76, "fiui_workoutCustomSplits");
      else
        v20 = objc_msgSend(v76, "fiui_workoutSplitsForUserPreferredDistanceUnit:", v17);
      v21 = v20;
      if (!v21)
      {

LABEL_26:
        return;
      }
      v22 = sub_10001E724(0, &qword_100835968, FIUIWorkoutSplit_ptr);
      v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

      v59 = v17;
      if ((unint64_t)v23 >> 62)
      {
        if (v23 < 0)
          v58 = v23;
        else
          v58 = v23 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v23);
        v24 = _CocoaArrayWrapper.endIndex.getter(v58);
        swift_bridgeObjectRelease(v23);
      }
      else
      {
        v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v60 = v13;
      if (!v24)
      {
LABEL_25:

        swift_bridgeObjectRelease(v23);
        v17 = v60;
        goto LABEL_26;
      }
      v66 = (id)objc_opt_self(NSUnitDuration);
      v65 = (id)objc_opt_self(NSUnitLength);
      v64 = (id)objc_opt_self(NSUnitSpeed);
      if (v24 >= 1)
      {
        v25 = 0;
        v61 = v23 & 0xC000000000000001;
        v26 = _swiftEmptyArrayStorage;
        v63 = v23;
        v62 = v24;
        v28 = (uint64_t)v71;
        v27 = (uint64_t)v72;
        do
        {
          if (v61)
            v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
          else
            v29 = *(id *)(v23 + 8 * v25 + 32);
          v30 = v29;
          v31 = objc_msgSend(v76, "UUID", v59);
          v32 = v70;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          v34 = UUID.uuidString.getter(v33);
          v36 = v35;
          (*(void (**)(char *, uint64_t))(v74 + 8))(v32, v75);
          objc_msgSend(v30, "duration");
          v38 = v37;
          v39 = objc_msgSend(v66, "seconds");
          v40 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
          Measurement.init(value:unit:)(v39, v40, v38);
          objc_msgSend(v30, "distanceInMeters");
          v42 = v41;
          v43 = objc_msgSend(v65, "meters");
          v44 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
          Measurement.init(value:unit:)(v43, v44, v42);
          objc_msgSend(v30, "distanceInMeters");
          v46 = v45;
          objc_msgSend(v30, "duration");
          v48 = v46 / v47;
          v49 = objc_msgSend(v64, "metersPerSecond");
          v50 = sub_10001E724(0, &qword_100821EA8, NSUnitSpeed_ptr);
          v51 = (uint64_t)v73;
          Measurement.init(value:unit:)(v49, v50, v48);
          sub_10020894C(v25, v28, v27, v51, v68, v34, v36, v69, (uint64_t *)v77, v67);

          if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
            v26 = sub_100140ED4(0, v26[2] + 1, 1, v26);
          v53 = v26[2];
          v52 = v26[3];
          if (v53 >= v52 >> 1)
            v26 = sub_100140ED4((_QWORD *)(v52 > 1), v53 + 1, 1, v26);
          ++v25;
          v26[2] = v53 + 1;
          v54 = &v26[9 * v53];
          *((_OWORD *)v54 + 2) = v77[0];
          v55 = v77[1];
          v56 = v77[2];
          v57 = v77[3];
          v54[12] = v78;
          *((_OWORD *)v54 + 4) = v56;
          *((_OWORD *)v54 + 5) = v57;
          *((_OWORD *)v54 + 3) = v55;

          v23 = v63;
        }
        while (v62 != v25);
        goto LABEL_25;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1004897F0(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;

  v2[34] = a1;
  v2[35] = a2;
  v2[36] = *a2;
  return swift_task_switch(sub_100489810, 0, 0);
}

uint64_t sub_100489810()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v1 = v0[34];
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v29 = v0[34];
    else
      v29 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v0[34]);
    v2 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v1, v30, v31, v32, v33, v34, v35, v36);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = &_swiftEmptyArrayStorage;
  if (!v2)
  {
LABEL_15:
    v0[37] = v3;
    sub_100047110(&qword_1008201E0);
    v20 = type metadata accessor for AppDependencyManager(0);
    v37 = 0u;
    v38 = 0u;
    v39 = 0;
    v21 = static AppDependencyManager.shared.getter(v20);
    v22 = AppDependency.__allocating_init(key:manager:)(&v37, v21);
    v0[38] = v22;
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    v23 = static AppDependencyManager.shared.getter(v22);
    v24 = AppDependency.__allocating_init(key:manager:)(&v37, v23);
    v0[39] = v24;
    v25 = sub_100047110(&qword_100822D10);
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    v26 = static AppDependencyManager.shared.getter(v25);
    v27 = AppDependency.__allocating_init(key:manager:)(&v37, v26);
    v0[40] = v27;
    v28 = (_QWORD *)swift_task_alloc(dword_10082484C);
    v0[41] = v28;
    *v28 = v0;
    v28[1] = sub_100489AA4;
    return sub_1001A347C((uint64_t)v3, v22, v24, v27);
  }
  *(_QWORD *)&v37 = &_swiftEmptyArrayStorage;
  result = sub_1001214C4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
    if ((v1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v0[34]);
        v8 = *(_QWORD *)(v6 + 16);
        v7 = *(_QWORD *)(v6 + 24);
        swift_bridgeObjectRetain(v7);
        swift_unknownObjectRelease(v6);
        *(_QWORD *)&v37 = v3;
        v10 = *(_QWORD *)v3->cellPadding;
        v9 = *(_QWORD *)v3->cellInset;
        if (v10 >= v9 >> 1)
        {
          sub_1001214C4(v9 > 1, v10 + 1, 1);
          v3 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
        }
        ++v5;
        *(_QWORD *)v3->cellPadding = v10 + 1;
        v11 = (char *)v3 + 16 * v10;
        *((_QWORD *)v11 + 4) = v8;
        *((_QWORD *)v11 + 5) = v7;
      }
      while (v2 != v5);
    }
    else
    {
      v12 = v0[34] + 32;
      v13 = *(_QWORD *)(v37 + 16);
      v14 = 16 * v13;
      do
      {
        v16 = *(_QWORD *)(*(_QWORD *)v12 + 16);
        v15 = *(_QWORD *)(*(_QWORD *)v12 + 24);
        *(_QWORD *)&v37 = v3;
        v17 = *(_QWORD *)v3->cellInset;
        v18 = v13 + 1;
        swift_bridgeObjectRetain(v15);
        if (v13 >= v17 >> 1)
        {
          sub_1001214C4(v17 > 1, v18, 1);
          v3 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
        }
        *(_QWORD *)v3->cellPadding = v18;
        v19 = (char *)v3 + v14;
        *((_QWORD *)v19 + 4) = v16;
        *((_QWORD *)v19 + 5) = v15;
        v14 += 16;
        v12 += 8;
        ++v13;
        --v2;
      }
      while (v2);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100489AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 328);
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v12 = sub_100489C94;
  }
  else
  {
    v13 = *(_QWORD *)(v3 + 312);
    v14 = *(_QWORD *)(v3 + 320);
    v15 = *(_QWORD *)(v3 + 304);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v3 + 296), v5, v6, v7, v8, v9, v10, v11);
    swift_release(v15);
    swift_release(v13);
    swift_release(v14);
    v12 = sub_100489B3C;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_100489B3C(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t i;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  const char *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;

  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 336);
  v10 = *(_QWORD *)v9->cellPadding;
  if (v10)
  {
    v11 = v9 + 1;
    for (i = v10 - 1; ; --i)
    {
      v13 = *(_OWORD *)v11[1].cellPadding;
      v15 = *(_OWORD *)&v11->super.super.super.super.isa;
      v14 = *(_OWORD *)v11->cellPadding;
      *(_OWORD *)(v8 + 48) = *(_OWORD *)&v11[1].super.super.super.super.isa;
      *(_OWORD *)(v8 + 64) = v13;
      *(_OWORD *)(v8 + 16) = v15;
      *(_OWORD *)(v8 + 32) = v14;
      v16 = *(_OWORD *)v11[3].cellPadding;
      v18 = *(_OWORD *)&v11[2].super.super.super.super.isa;
      v17 = *(_OWORD *)v11[2].cellPadding;
      *(_OWORD *)(v8 + 112) = *(_OWORD *)&v11[3].super.super.super.super.isa;
      *(_OWORD *)(v8 + 128) = v16;
      *(_OWORD *)(v8 + 80) = v18;
      *(_OWORD *)(v8 + 96) = v17;
      v19 = *(_OWORD *)v11[5].cellPadding;
      v21 = *(_OWORD *)&v11[4].super.super.super.super.isa;
      v20 = *(_OWORD *)v11[4].cellPadding;
      *(_OWORD *)(v8 + 176) = *(_OWORD *)&v11[5].super.super.super.super.isa;
      *(_OWORD *)(v8 + 192) = v19;
      *(_OWORD *)(v8 + 144) = v21;
      *(_OWORD *)(v8 + 160) = v20;
      v22 = *(_OWORD *)v11[7].cellPadding;
      v24 = *(_OWORD *)&v11[6].super.super.super.super.isa;
      v23 = *(_OWORD *)v11[6].cellPadding;
      *(_OWORD *)(v8 + 240) = *(_OWORD *)&v11[7].super.super.super.super.isa;
      *(_OWORD *)(v8 + 256) = v22;
      *(_OWORD *)(v8 + 208) = v24;
      *(_OWORD *)(v8 + 224) = v23;
      v25 = *(void **)(v8 + 240);
      sub_100112010((_QWORD *)(v8 + 16));
      sub_1004891F4(v25, 0);
      sub_10013D64C(v26);
      sub_1004891F4(v25, 1);
      sub_10013D64C(v27);
      sub_100112258((_QWORD *)(v8 + 16));
      if (!i)
        break;
      v11 += 8;
    }
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 336), v28, v29, v30, v31, v32, v33, v34);
  }
  else
  {
    swift_bridgeObjectRelease(v9, a2, a3, a4, a5, a6, a7, a8);
  }
  v35 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 272);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
  sub_100488F98(v36, (uint64_t)v35);
  v38 = v37;
  swift_bridgeObjectRelease(v35, v39, v40, v41, v42, v43, v44, v45);
  swift_bridgeObjectRelease_n(&_swiftEmptyArrayStorage, 2);
  return (*(uint64_t (**)(uint64_t))(v8 + 8))(v38);
}

uint64_t sub_100489C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 296);
  swift_release(*(_QWORD *)(v0 + 304));
  swift_release(v1);
  swift_release(v2);
  swift_bridgeObjectRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100489CEC(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
  *(_QWORD *)(v1 + 280) = *a1;
  return swift_task_switch(sub_100489D0C, 0, 0);
}

uint64_t sub_100489D0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  sub_100047110(&qword_1008201E0);
  v1 = type metadata accessor for AppDependencyManager(0);
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  v2 = static AppDependencyManager.shared.getter(v1);
  v3 = AppDependency.__allocating_init(key:manager:)(&v11, v2);
  v0[36] = v3;
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  v4 = static AppDependencyManager.shared.getter(v3);
  v5 = AppDependency.__allocating_init(key:manager:)(&v11, v4);
  v0[37] = v5;
  v6 = sub_100047110(&qword_100822D10);
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  v7 = static AppDependencyManager.shared.getter(v6);
  v8 = AppDependency.__allocating_init(key:manager:)(&v11, v7);
  v0[38] = v8;
  v9 = (_QWORD *)swift_task_alloc(dword_100824844);
  v0[39] = v9;
  *v9 = v0;
  v9[1] = sub_100489E20;
  return sub_1001A3D94(v3, v5, v8);
}

uint64_t sub_100489E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 312);
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1003DB57C;
  }
  else
  {
    v6 = v3[37];
    v7 = v3[38];
    swift_release(v3[36]);
    swift_release(v6);
    swift_release(v7);
    v5 = sub_100489EB0;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100489EB0(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  __int128 *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;

  v9 = *(_QWORD *)(v8 + 320);
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
    v33 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 320);
LABEL_5:
    swift_bridgeObjectRelease(v33, a2, a3, a4, a5, a6, a7, a8);
    v32 = &_swiftEmptyArrayStorage;
    return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v8 + 8))(v32);
  }
  v11 = *(_OWORD *)(v9 + 32);
  v12 = *(_OWORD *)(v9 + 48);
  v13 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 64) = v13;
  *(_OWORD *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 32) = v12;
  v14 = *(_OWORD *)(v9 + 96);
  v15 = *(_OWORD *)(v9 + 112);
  v16 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 128) = v16;
  *(_OWORD *)(v8 + 80) = v14;
  *(_OWORD *)(v8 + 96) = v15;
  v17 = *(_OWORD *)(v9 + 160);
  v18 = *(_OWORD *)(v9 + 176);
  v19 = *(_OWORD *)(v9 + 208);
  *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 192);
  *(_OWORD *)(v8 + 192) = v19;
  *(_OWORD *)(v8 + 144) = v17;
  *(_OWORD *)(v8 + 160) = v18;
  v20 = *(_OWORD *)(v9 + 224);
  v21 = *(_OWORD *)(v9 + 240);
  v22 = *(_OWORD *)(v9 + 272);
  *(_OWORD *)(v8 + 240) = *(_OWORD *)(v9 + 256);
  *(_OWORD *)(v8 + 256) = v22;
  *(_OWORD *)(v8 + 208) = v20;
  *(_OWORD *)(v8 + 224) = v21;
  v23 = *(void **)(v8 + 240);
  sub_100112010((_QWORD *)(v8 + 16));
  sub_1004891F4(v23, 1);
  v32 = v31;
  if (!*(_QWORD *)v31->cellPadding)
  {
    v35 = (__int128 *)(v9 + 288);
    while (1)
    {
      swift_bridgeObjectRelease(v32, v24, v25, v26, v27, v28, v29, v30);
      sub_1004891F4(v23, 0);
      v32 = v36;
      sub_100112258((_QWORD *)(v8 + 16));
      if (*(_QWORD *)v32->cellPadding)
      {
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 320), v37, v38, v39, v40, v41, v42, v43);
        return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v8 + 8))(v32);
      }
      swift_bridgeObjectRelease(v32, v37, v38, v39, v40, v41, v42, v43);
      if (!--v10)
        break;
      v44 = *v35;
      v45 = v35[1];
      v46 = v35[3];
      *(_OWORD *)(v8 + 48) = v35[2];
      *(_OWORD *)(v8 + 64) = v46;
      *(_OWORD *)(v8 + 16) = v44;
      *(_OWORD *)(v8 + 32) = v45;
      v47 = v35[4];
      v48 = v35[5];
      v49 = v35[7];
      *(_OWORD *)(v8 + 112) = v35[6];
      *(_OWORD *)(v8 + 128) = v49;
      *(_OWORD *)(v8 + 80) = v47;
      *(_OWORD *)(v8 + 96) = v48;
      v50 = v35[8];
      v51 = v35[9];
      v52 = v35[11];
      *(_OWORD *)(v8 + 176) = v35[10];
      *(_OWORD *)(v8 + 192) = v52;
      *(_OWORD *)(v8 + 144) = v50;
      *(_OWORD *)(v8 + 160) = v51;
      v53 = v35[12];
      v54 = v35[13];
      v55 = v35[15];
      *(_OWORD *)(v8 + 240) = v35[14];
      *(_OWORD *)(v8 + 256) = v55;
      *(_OWORD *)(v8 + 208) = v53;
      *(_OWORD *)(v8 + 224) = v54;
      v23 = *(void **)(v8 + 240);
      sub_100112010((_QWORD *)(v8 + 16));
      sub_1004891F4(v23, 1);
      v32 = v56;
      v35 += 16;
      if (*(_QWORD *)v56->cellPadding)
        goto LABEL_3;
    }
    v33 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 320);
    goto LABEL_5;
  }
LABEL_3:
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 320), v24, v25, v26, v27, v28, v29, v30);
  sub_100112258((_QWORD *)(v8 + 16));
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v8 + 8))(v32);
}

char *sub_10048A060(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView;
  v10 = objc_allocWithZone((Class)UIImageView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = objc_msgSend(v12, "layer");
  objc_msgSend(v13, "setCornerRadius:", 6.0);

  objc_msgSend(v12, "setClipsToBounds:", 1);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v12;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  v14 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView]);

  sub_10048A1E0();
  return v14;
}

void sub_10048A1E0()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100623750;
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v5, "leadingAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "leadingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v4 + 40) = v13;
  v14 = objc_msgSend(v5, "trailingAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v4 + 48) = v17;
  v18 = objc_msgSend(v5, "bottomAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "bottomAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v4 + 56) = v21;
  specialized Array._endMutation()(v22);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v23, v24, v25, v26, v27, v28, v29);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_10048A4AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell()
{
  return objc_opt_self(_TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell);
}

void sub_10048A50C()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "setCornerRadius:", 6.0);

  objc_msgSend(v2, "setClipsToBounds:", 1);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutDetailGuidedRunMediaMomentArtworkCell.swift", 61, 2, 44, 0);
  __break(1u);
}

uint64_t *sub_10048A5FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v12 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = v12;
  }
  swift_retain(v12);
  return a1;
}

double sub_10048A6D4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t *sub_10048A744(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = *(uint64_t *)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = v13;
  swift_retain(v13);
  return a1;
}

uint64_t *sub_10048A7F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, (uint64_t *)&unk_100832400);
    v6 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = *(uint64_t *)((char *)a2 + v12);
  v14 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  return a1;
}

char *sub_10048A8C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10048A970(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, (uint64_t *)&unk_100832400);
    v6 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(_QWORD *)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release(v9);
  return a1;
}

uint64_t sub_10048AA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048AA44);
}

uint64_t sub_10048AA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_100820E68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10048AAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048AAD0);
}

uint64_t sub_10048AAD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_100820E68);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WorkoutChartableMetricsView(uint64_t a1)
{
  uint64_t result;

  result = qword_100835A08;
  if (!qword_100835A08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutChartableMetricsView);
  return result;
}

void sub_10048AB88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100117758(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_10048ABFC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B88D4, 1);
}

uint64_t sub_10048AC0C()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_10048AC2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100047110(&qword_100834AF8);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10048BB48(a1, (uint64_t)v4);
  return EnvironmentValues.editMode.setter(v4);
}

uint64_t sub_10048ACA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t OpaqueTypeConformance2;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char v90[16];
  uint64_t v91;
  _QWORD v92[4];

  v76 = a1;
  v88 = a2;
  v3 = type metadata accessor for WorkoutChartableMetricsView(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v84 = *(_QWORD *)(v3 - 8);
  v85 = v4;
  __chkstk_darwin(v3);
  v82 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100820FE0);
  v7 = *(_QWORD *)(v6 - 8);
  v86 = v6;
  v87 = v7;
  __chkstk_darwin(v6);
  v83 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  v10 = __chkstk_darwin(v9);
  v77 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditMode(0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100834AF8);
  __chkstk_darwin(v16);
  v18 = (unint64_t *)((char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100047110(&qword_100835A68);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100047110(&qword_100835A50);
  v75 = v23;
  __chkstk_darwin(v23);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100047110(&qword_100835A48);
  v27 = *(_QWORD *)(v26 - 8);
  v80 = v26;
  v81 = v27;
  __chkstk_darwin(v26);
  v89 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = a1;
  v29 = sub_100047110(&qword_100835A70);
  v30 = sub_10048BA18();
  List<>.init(content:)(sub_10048BA10, v90, v29, v30);
  KeyPath = swift_getKeyPath(&unk_10063F040);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for EditMode.active(_:), v12);
  static Binding.constant(_:)(v18, v15, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v32 = sub_100047110(&qword_100834B30);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v18, 0, 1, v32);
  v33 = (uint64_t *)&v25[*(int *)(v23 + 36)];
  v34 = sub_100047110(&qword_100834AF0);
  sub_10048BB48((uint64_t)v18, (uint64_t)v33 + *(int *)(v34 + 28));
  *v33 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v25, v22, v19);
  sub_10001BE90((uint64_t)v18, &qword_100834AF8);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v35 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001DLL, 0x800000010069F5C0);
  v36 = Text.init(_:tableName:bundle:comment:)(v35);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  v43 = v77;
  v44 = v78;
  v45 = v79;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v79);
  v74 = sub_10048B974();
  v46 = v75;
  View.navigationBarTitle(_:displayMode:)(v36, v38, v42, v40, v43, v75, v74);
  sub_1000E4458(v36, v38, v42);
  swift_bridgeObjectRelease(v40, v47, v48, v49, v50, v51, v52, v53);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  sub_10001BE90((uint64_t)v25, &qword_100835A50);
  v54 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000029, 0x800000010069F600);
  v56 = v55;
  LOBYTE(v38) = v57;
  v59 = v58;
  v60 = v82;
  sub_10004F8C8(v76, v82, type metadata accessor for WorkoutChartableMetricsView);
  v61 = *(unsigned __int8 *)(v84 + 80);
  v62 = (v61 + 16) & ~v61;
  v63 = swift_allocObject(&unk_1007A1E20, v62 + v85, v61 | 7);
  sub_10048BB94(v60, v63 + v62);
  v64 = v38 & 1;
  v65 = v83;
  Button<>.init(_:action:)(v54, v56, v64, v59, sub_10048BBD8, v63);
  v92[0] = v46;
  v92[1] = v74;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v92, &opaque type descriptor for <<opaque return type of View.navigationBarTitle(_:displayMode:)>>, 1);
  v67 = sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v68 = v89;
  v69 = v65;
  v70 = v65;
  v71 = v80;
  v72 = v86;
  View.navigationBarItems<A>(trailing:)(v70, v80, v86, OpaqueTypeConformance2, v67);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v69, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v68, v71);
}

uint64_t sub_10048B200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  char v36[24];

  v33 = a2;
  v3 = type metadata accessor for WorkoutChartableMetricsView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100835A88);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(int *)(v3 + 20);
  v30 = a1;
  v11 = *(_QWORD *)(a1 + v10);
  swift_beginAccess(v11 + 16, v36, 0, 0);
  v35 = *(_QWORD *)(v11 + 16);
  v12 = v35;
  sub_10004F8C8(a1, (uint64_t)v6, type metadata accessor for WorkoutChartableMetricsView);
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = v14 + v5;
  v16 = v13 | 7;
  v17 = swift_allocObject(&unk_1007A1E48, v15, v13 | 7);
  sub_10048BB94((uint64_t)v6, v17 + v14);
  swift_bridgeObjectRetain(v12);
  v18 = sub_100047110(&qword_100835A90);
  v19 = sub_100047110(&qword_100834B38);
  v20 = sub_100028384(&qword_100835A98, &qword_100835A90, (uint64_t)&protocol conformance descriptor for [A]);
  v34[0] = &type metadata for Text;
  v34[1] = &protocol witness table for Text;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v34, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
  v22 = sub_10048BC54();
  ForEach<>.init(_:content:)(&v35, sub_10048BC08, v17, v18, &type metadata for String, v19, v20, OpaqueTypeConformance2, v22);
  sub_10004F8C8(v30, (uint64_t)v6, type metadata accessor for WorkoutChartableMetricsView);
  v23 = swift_allocObject(&unk_1007A1E70, v15, v16);
  sub_10048BB94((uint64_t)v6, v23 + v14);
  v24 = swift_allocObject(&unk_1007A1E98, 32, 7);
  *(_QWORD *)(v24 + 16) = sub_10048BD50;
  *(_QWORD *)(v24 + 24) = v23;
  v26 = v31;
  v25 = v32;
  v27 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v33, v9, v32);
  v28 = (_QWORD *)(v27 + *(int *)(sub_100047110(&qword_100835A70) + 36));
  *v28 = sub_10048BDE4;
  v28[1] = v24;
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v25);
}

uint64_t sub_10048B48C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char *v33;
  char v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  int v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  uint64_t v94;
  char v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;

  v92 = a3;
  v5 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100834B38);
  v90 = *(_QWORD *)(v8 - 8);
  v91 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  sub_1005392D4(*a1);
  v93 = v12;
  v94 = v13;
  v14 = sub_100038CA0();
  v15 = Text.init<A>(_:)(&v93, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for WorkoutChartableMetricsView(0) + 20));
  KeyPath = swift_getKeyPath(&unk_10063F070);
  v24 = swift_getKeyPath(&unk_10063F098);
  static Published.subscript.getter(&v93, v22, KeyPath, v24);
  swift_release(KeyPath);
  swift_release(v24);
  v25 = v93;
  if (*(_QWORD *)v93->cellPadding && (v26 = sub_100439D68(v11), (v27 & 1) != 0))
  {
    v28 = v26;
    v29 = *(_QWORD *)v25[1].cellInset;
    v30 = type metadata accessor for WorkoutChartViewModel(0);
    v89 = v17;
    v31 = v15;
    v32 = v21;
    v33 = v10;
    v34 = v19;
    v35 = *(_QWORD *)(v30 - 8);
    sub_10004F8C8(v29 + *(_QWORD *)(v35 + 72) * v28, (uint64_t)v7, type metadata accessor for WorkoutChartViewModel);
    v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
    v19 = v34;
    v10 = v33;
    v21 = v32;
    v15 = v31;
    v17 = v89;
    v36(v7, 0, 1, v30);
  }
  else
  {
    v30 = type metadata accessor for WorkoutChartViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v7, 1, 1, v30);
  }
  swift_bridgeObjectRelease(v25, v37, v38, v39, v40, v41, v42, v43);
  type metadata accessor for WorkoutChartViewModel(0);
  v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v7, 1, v30);
  sub_10001BE90((uint64_t)v7, &qword_1008202F0);
  if (v44 == 1)
    v46 = static Color.gray.getter(v45);
  else
    v46 = static Color.white.getter(v45);
  v47 = v46;
  v48 = v19 & 1;
  v49 = Text.foregroundColor(_:)(v46, v15, v17, v19 & 1, v21);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  swift_release(v47);
  LOBYTE(v47) = v53 & 1;
  sub_1000E4458(v15, v17, v48);
  swift_bridgeObjectRelease(v21, v56, v57, v58, v59, v60, v61, v62);
  v63 = static Font.headline.getter();
  v65 = Text.font(_:)(v63, v49, v51, v53 & 1, v55, v64);
  v67 = v66;
  v69 = v68;
  v71 = v70;
  swift_release(v63);
  sub_1000E4458(v49, v51, v47);
  swift_bridgeObjectRelease(v55, v72, v73, v74, v75, v76, v77, v78);
  v93 = (CHWorkoutDetailHeartRateTableViewCell *)v65;
  v94 = v67;
  v95 = v69 & 1;
  v96 = v71;
  v80 = static VerticalEdge.Set.all.getter(v79);
  View.listRowSeparator(_:edges:)(2, v80, &type metadata for Text, &protocol witness table for Text);
  sub_1000E4458(v65, v67, v69 & 1);
  swift_bridgeObjectRelease(v71, v81, v82, v83, v84, v85, v86, v87);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v90 + 32))(v92, v10, v91);
}

uint64_t sub_10048B7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v6 = type metadata accessor for WorkoutChartableMetricsView(0);
  swift_beginAccess(*(_QWORD *)(a3 + *(int *)(v6 + 20)) + 16, v10, 33, 0);
  v7 = sub_100047110(&qword_100835A90);
  v8 = sub_100028384(&qword_100835AA8, &qword_100835A90, (uint64_t)&protocol conformance descriptor for [A]);
  MutableCollection.move(fromOffsets:toOffset:)(a1, a2, v7, v8);
  return swift_endAccess(v10);
}

uint64_t sub_10048B880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_100047110(&qword_100835A40);
  v1 = sub_100007050(&qword_100835A48);
  v2 = sub_100007050(&qword_100820FE0);
  v8 = sub_100007050(&qword_100835A50);
  v9 = sub_10048B974();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationBarTitle(_:displayMode:)>>, 1);
  v4 = sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v8 = v1;
  v9 = v2;
  v10 = OpaqueTypeConformance2;
  v11 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>, 1);
  return NavigationView.init(content:)(sub_10048B96C, &v7, v0, v5);
}

uint64_t sub_10048B96C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10048ACA4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10048B974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835A58;
  if (!qword_100835A58)
  {
    v1 = sub_100007050(&qword_100835A50);
    sub_100028384(&qword_100835A60, &qword_100835A68, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_100028384(&qword_100834AE8, &qword_100834AF0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835A58);
  }
  return result;
}

uint64_t sub_10048BA10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10048B200(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10048BA18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835A78;
  if (!qword_100835A78)
  {
    v1 = sub_100007050(&qword_100835A70);
    sub_10048BA9C();
    sub_100028384(&qword_100834B20, &qword_100834B28, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835A78);
  }
  return result;
}

unint64_t sub_10048BA9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100835A80;
  if (!qword_100835A80)
  {
    v1 = sub_100007050(&qword_100835A88);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100835A80);
  }
  return result;
}

uint64_t sub_10048BB24()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_10048BB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100834AF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10048BB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutChartableMetricsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10048BBD8()
{
  type metadata accessor for WorkoutChartableMetricsView(0);
  return sub_100310E60();
}

uint64_t sub_10048BC08@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartableMetricsView(0) - 8) + 80);
  return sub_10048B48C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_10048BC54()
{
  unint64_t result;

  result = qword_100835AA0;
  if (!qword_100835AA0)
  {
    result = swift_getWitnessTable(&unk_100644834, &type metadata for ChartableMetric);
    atomic_store(result, (unint64_t *)&qword_100835AA0);
  }
  return result;
}

uint64_t sub_10048BC9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for WorkoutChartableMetricsView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)v6 + *(int *)(v1 + 20)));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10048BD50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartableMetricsView(0) - 8) + 80);
  return sub_10048B7D0(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_10048BD9C(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t, _QWORD))
{
  return a3(a1, *a2);
}

uint64_t sub_10048BDC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10048BDE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
}

uint64_t sub_10048BE10()
{
  return sub_100028384(&qword_100835AB0, &qword_100835AB8, (uint64_t)&protocol conformance descriptor for NavigationView<A>);
}

ValueMetadata *type metadata accessor for LinearFunction()
{
  return &type metadata for LinearFunction;
}

ValueMetadata *type metadata accessor for FitLine()
{
  return &type metadata for FitLine;
}

uint64_t getEnumTagSinglePayload for MannKendallParameters(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MannKendallParameters(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MannKendallParameters()
{
  return &type metadata for MannKendallParameters;
}

uint64_t sub_10048BEC0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  v9 = a1;
  swift_bridgeObjectRetain(a1);
  sub_10048C774(&v9);
  v2 = v9;
  v3 = sub_10013DCAC(a1);
  v4 = v3[2];
  swift_bridgeObjectRelease(v3);
  v5 = v4 - 1;
  if (v4 < 1)
    v5 = v4;
  v6 = v5 >> 1;
  if ((v4 & 1) != 0)
    v6 = (unint64_t)v4 >> 1;
  v7 = *(_QWORD *)(v2 + 16);
  if ((v7 & 1) != 0)
  {
    if (v6 < v7)
      return swift_release(v2);
    goto LABEL_12;
  }
  if (v6 >= v7)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 + 1 < v7)
    return swift_release(v2);
LABEL_13:
  __break(1u);
  result = swift_release(v2);
  __break(1u);
  return result;
}

uint64_t sub_10048BFAC()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;

  v1 = *(double *)(v0 + 32);
  v2 = v1 * 100.0;
  v3 = (1.0 - v1) * 100.0;
  v4 = sub_100047110((uint64_t *)&unk_100827460);
  v5 = swift_allocObject(v4, 192, 7);
  v6.n128_u64[1] = 8;
  *(_OWORD *)(v5 + 16) = xmmword_100624D00;
  v7 = *(_QWORD *)(v0 + 8);
  *(_QWORD *)(v5 + 56) = &type metadata for Double;
  *(_QWORD *)(v5 + 64) = &protocol witness table for Double;
  *(_QWORD *)(v5 + 32) = v7;
  v6.n128_u64[0] = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v5 + 96) = &type metadata for Double;
  *(_QWORD *)(v5 + 104) = &protocol witness table for Double;
  *(_QWORD *)(v5 + 72) = v6.n128_u64[0];
  *(_QWORD *)(v5 + 136) = &type metadata for Double;
  *(_QWORD *)(v5 + 144) = &protocol witness table for Double;
  *(double *)(v5 + 112) = v2;
  *(_QWORD *)(v5 + 176) = &type metadata for Double;
  *(_QWORD *)(v5 + 184) = &protocol witness table for Double;
  *(double *)(v5 + 152) = v3;
  return String.init(format:_:)(0x1000000000000080, 0x80000001006A09B0, v5, v6);
}

uint64_t sub_10048C05C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  double v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v20 = &_swiftEmptyDictionarySingleton;
LABEL_23:
    v25 = swift_bridgeObjectRetain(v20);
    v26 = sub_10048D0D8(v25, (uint64_t)v20);
    swift_bridgeObjectRelease_n(v20, 2);
    return v26;
  }
  swift_bridgeObjectRetain(a1);
  v3 = 0;
  v4 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    v5 = *(double *)(a1 + 8 * v3 + 32);
    v6 = v4[2];
    if (v6)
    {
      v7 = sub_10043974C(*(double *)(a1 + 8 * v3 + 32));
      if ((v8 & 1) != 0)
        v6 = *(_QWORD *)(v4[7] + 8 * v7);
      else
        v6 = 0;
    }
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    v10 = swift_bridgeObjectRetain(v4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    v13 = sub_10043974C(v5);
    v14 = v4[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      goto LABEL_25;
    v17 = v12;
    if (v4[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v20 = v4;
        if ((v12 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_100401F54();
        v20 = v4;
        if ((v17 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1003F9168(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_10043974C(v5);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_27;
      v13 = v18;
      v20 = v4;
      if ((v17 & 1) != 0)
      {
LABEL_3:
        *(_QWORD *)(v20[7] + 8 * v13) = v9;
        goto LABEL_4;
      }
    }
    v20[(v13 >> 6) + 8] |= 1 << v13;
    v21 = 8 * v13;
    *(double *)(v20[6] + v21) = v5;
    *(_QWORD *)(v20[7] + v21) = v9;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_26;
    v20[2] = v24;
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease(0x8000000000000000);
    swift_bridgeObjectRelease(v4);
    v4 = v20;
    if (v1 == v3)
    {
      swift_bridgeObjectRelease(a1);
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Double);
  __break(1u);
  return result;
}

double sub_10048C260(int64x2_t *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  double v4;
  int64x2_t *v5;
  uint64_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  float64x2_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v2 = a1[1].u64[0];
  if (!v2)
  {
    v4 = 0.0;
    return (((double)a2 + -1.0) * (double)a2 * ((double)a2 + (double)a2 + 5.0) - v4) / 18.0;
  }
  if (v2 < 4)
  {
    v3 = 0;
    v4 = 0.0;
LABEL_8:
    v17 = v2 - v3;
    v18 = &a1[2].i64[v3];
    do
    {
      v19 = *v18++;
      v4 = v4 + ((double)v19 + -1.0) * (double)v19 * ((double)v19 + (double)v19 + 5.0);
      --v17;
    }
    while (v17);
    return (((double)a2 + -1.0) * (double)a2 * ((double)a2 + (double)a2 + 5.0) - v4) / 18.0;
  }
  v3 = v2 & 0x7FFFFFFFFFFFFFFCLL;
  v5 = a1 + 3;
  v4 = 0.0;
  __asm
  {
    FMOV            V1.2D, #-1.0
    FMOV            V2.2D, #5.0
  }
  v12 = v2 & 0x7FFFFFFFFFFFFFFCLL;
  do
  {
    v13 = vcvtq_f64_s64(v5[-1]);
    v14 = vcvtq_f64_s64(*v5);
    v15 = vmulq_f64(vmulq_f64(vaddq_f64(v13, _Q1), v13), vaddq_f64(vaddq_f64(v13, v13), _Q2));
    v16 = vmulq_f64(vmulq_f64(vaddq_f64(v14, _Q1), v14), vaddq_f64(vaddq_f64(v14, v14), _Q2));
    v4 = v4 + v15.f64[0] + v15.f64[1] + v16.f64[0] + v16.f64[1];
    v5 += 2;
    v12 -= 4;
  }
  while (v12);
  if (v2 != v3)
    goto LABEL_8;
  return (((double)a2 + -1.0) * (double)a2 * ((double)a2 + (double)a2 + 5.0) - v4) / 18.0;
}

double sub_10048C368(int64x2_t *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  int64x2_t *v6;
  uint64_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  float64x2_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  double v20;
  double result;

  v2 = a1[1].u64[0];
  if (!v2)
  {
    v5 = 0.0;
    goto LABEL_11;
  }
  if (v2 >= 4)
  {
    v3 = v2 & 0x7FFFFFFFFFFFFFFCLL;
    v6 = a1 + 3;
    v4 = 0.0;
    __asm { FMOV            V1.2D, #-1.0 }
    v12 = v2 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      v13 = vcvtq_f64_s64(v6[-1]);
      v14 = vcvtq_f64_s64(*v6);
      v15 = vmulq_f64(vaddq_f64(v13, _Q1), v13);
      v16 = vmulq_f64(vaddq_f64(v14, _Q1), v14);
      v4 = v4 + v15.f64[0] + v15.f64[1] + v16.f64[0] + v16.f64[1];
      v6 += 2;
      v12 -= 4;
    }
    while (v12);
    if (v2 == v3)
      goto LABEL_10;
  }
  else
  {
    v3 = 0;
    v4 = 0.0;
  }
  v17 = v2 - v3;
  v18 = &a1[2].i64[v3];
  do
  {
    v19 = *v18++;
    v4 = v4 + ((double)v19 + -1.0) * (double)v19;
    --v17;
  }
  while (v17);
LABEL_10:
  v5 = v4 * 0.5;
LABEL_11:
  v20 = ((double)a2 + -1.0) * (double)a2 * 0.5;
  result = sqrt(v20) * sqrt(v20 - v5);
  if (fabs(result) < 2.22044605e-16)
    return 1.0;
  return result;
}

uint64_t sub_10048C460()
{
  double *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0 * 86400.0;
  v2 = sub_100047110((uint64_t *)&unk_100827460);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100622F90;
  *(_QWORD *)(v3 + 56) = &type metadata for Double;
  *(_QWORD *)(v3 + 64) = &protocol witness table for Double;
  *(double *)(v3 + 32) = v1;
  return String.init(format:_:)(0x6634302E25, 0xE500000000000000, v3, (__n128)xmmword_100622F90);
}

double sub_10048C4DC(uint64_t a1, double a2)
{
  int64_t v2;
  unint64_t v5;
  double *v6;
  double v7;
  double v8;
  unint64_t v9;
  double v10;
  double v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1001214E0(0, v2, 0);
    v5 = _swiftEmptyArrayStorage[2];
    v6 = (double *)(a1 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v9 = _swiftEmptyArrayStorage[3];
      if (v5 >= v9 >> 1)
        sub_1001214E0(v9 > 1, v5 + 1, 1);
      _swiftEmptyArrayStorage[2] = v5 + 1;
      *(double *)&_swiftEmptyArrayStorage[v5 + 4] = v8 - v7 * a2;
      v6 += 2;
      ++v5;
      --v2;
    }
    while (v2);
  }
  sub_10048BEC0((uint64_t)_swiftEmptyArrayStorage);
  v11 = v10;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v11;
}

void sub_10048C5D0(uint64_t *a1@<X0>, double *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double v10;
  double v11;
  uint64_t v12;
  double *v13;
  _QWORD *v14;
  double v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)a2 + 1;
  if (__OFADD__(*(_QWORD *)a2, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  v7 = *(_QWORD *)(a3 + 16);
  if (v7 < v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5 < 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = *a1;
  if (v5 == v7)
  {
    swift_bridgeObjectRetain(a3);
    v9 = _swiftEmptyArrayStorage;
LABEL_6:
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    sub_10013C534((uint64_t)v9);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(a3);
    *a4 = v8;
    return;
  }
  if (v5 < (unint64_t)v7)
  {
    v10 = a2[1];
    v11 = a2[2];
    swift_bridgeObjectRetain(a3);
    v12 = ~v4 + v7;
    v13 = (double *)(a3 + 16 * v4 + 56);
    v14 = _swiftEmptyArrayStorage;
    v9 = _swiftEmptyArrayStorage;
    do
    {
      v15 = *(v13 - 1);
      v16 = *v13;
      v17 = swift_bridgeObjectRetain(v14);
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v9 = sub_10003D454(0, v14[2] + 1, 1, v14);
      v19 = v9[2];
      v18 = v9[3];
      if (v19 >= v18 >> 1)
        v9 = sub_10003D454((_QWORD *)(v18 > 1), v19 + 1, 1, v9);
      v9[2] = v19 + 1;
      *(double *)&v9[v19 + 4] = (v16 - v11) / (v15 - v10);
      swift_bridgeObjectRelease(v14);
      v13 += 2;
      v14 = v9;
      --v12;
    }
    while (v12);
    goto LABEL_6;
  }
LABEL_18:
  __break(1u);
}

void sub_10048C774(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_1001477E0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_10048C7DC(v4);
  *a1 = v2;
}

void sub_10048C7DC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t *v21;
  uint64_t v22;
  Swift::Int v23;
  double *v24;
  double v25;
  Swift::Int v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  Swift::Int v98;
  Swift::Int v99;
  uint64_t v100;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v82 = 0;
      v83 = *v2;
      v84 = 1;
      while (1)
      {
        v85 = *(double *)(v83 + 8 * v84);
        v86 = v82;
        do
        {
          v87 = v83 + 8 * v86;
          if (v85 >= *(double *)v87)
            break;
          if (!v83)
            goto LABEL_142;
          *(_QWORD *)(v87 + 8) = *(_QWORD *)v87;
          *(double *)(v83 + 8 * v86--) = v85;
        }
        while (v86 != -1);
        ++v84;
        ++v82;
        if (v84 == v3)
          return;
      }
    }
    goto LABEL_138;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_147:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v98 = v4;
  v99 = v3;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_103;
    }
    v97 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for Double);
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v99;
    v97 = (_QWORD *)v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v95 = v2;
  v96 = *v2 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v100 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_139;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v96 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_145;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_137;
      if (v9 - v13 < v98)
      {
        v23 = v13 + v98;
        if (__OFADD__(v13, v98))
          goto LABEL_140;
        if (v23 >= v3)
          v23 = v3;
        if (v23 < v13)
          goto LABEL_141;
        if (v9 != v23)
        {
          v24 = (double *)(v96 + 8 * v9);
          do
          {
            v25 = *(double *)(v10 + 8 * v9);
            v26 = v13;
            v27 = v24;
            do
            {
              v28 = *v27;
              if (v25 >= *v27)
                break;
              if (!v10)
                goto LABEL_143;
              *v27 = v25;
              v27[1] = v28;
              --v27;
              ++v26;
            }
            while (v9 != v26);
            ++v9;
            ++v24;
          }
          while (v9 != v23);
          v9 = v23;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100147150(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v100;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_100147150((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v100;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
      break;
    v12 = 1;
LABEL_15:
    v3 = v99;
    if (v9 >= v99)
    {
      v8 = v97;
      v2 = v95;
LABEL_103:
      v97 = v8;
      if (v12 < 2)
      {
LABEL_114:
        v81 = v11;
        goto LABEL_115;
      }
      v88 = *v2;
      while (1)
      {
        v89 = v12 - 2;
        if (v12 < 2)
          break;
        if (!v88)
          goto LABEL_146;
        v80 = v11;
        v90 = v11 + 32;
        v91 = *(_QWORD *)&v11[16 * v89 + 32];
        v92 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_10048CE6C((double *)(v88 + 8 * v91), (double *)(v88 + 8 * *(_QWORD *)&v90[16 * v12 - 16]), v88 + 8 * v92, __dst);
        if (v1)
          goto LABEL_94;
        if (v92 < v91)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
          v80 = sub_100147754((uint64_t)v80);
        if (v89 >= *((_QWORD *)v80 + 2))
          goto LABEL_135;
        v93 = &v80[16 * v89 + 32];
        *(_QWORD *)v93 = v91;
        *((_QWORD *)v93 + 1) = v92;
        v94 = *((_QWORD *)v80 + 2);
        if (v12 > v94)
          goto LABEL_136;
        memmove(&v80[16 * v12 + 16], &v80[16 * v12 + 32], 16 * (v94 - v12));
        v11 = v80;
        *((_QWORD *)v80 + 2) = v94 - 1;
        v12 = v94 - 1;
        if (v94 <= 2)
          goto LABEL_114;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    v33 = v12 - 1;
    if (v12 >= 4)
    {
      v38 = &v31[16 * v12];
      v39 = *((_QWORD *)v38 - 8);
      v40 = *((_QWORD *)v38 - 7);
      v44 = __OFSUB__(v40, v39);
      v41 = v40 - v39;
      if (v44)
        goto LABEL_121;
      v43 = *((_QWORD *)v38 - 6);
      v42 = *((_QWORD *)v38 - 5);
      v44 = __OFSUB__(v42, v43);
      v36 = v42 - v43;
      v37 = v44;
      if (v44)
        goto LABEL_122;
      v45 = v12 - 2;
      v46 = &v31[16 * v12 - 32];
      v48 = *(_QWORD *)v46;
      v47 = *((_QWORD *)v46 + 1);
      v44 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      if (v44)
        goto LABEL_124;
      v44 = __OFADD__(v36, v49);
      v50 = v36 + v49;
      if (v44)
        goto LABEL_127;
      if (v50 >= v41)
      {
        v68 = &v31[16 * v33];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v44 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v44)
          goto LABEL_131;
        v61 = v36 < v71;
        goto LABEL_83;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v62 = *((_QWORD *)v11 + 4);
        v63 = *((_QWORD *)v11 + 5);
        v44 = __OFSUB__(v63, v62);
        v55 = v63 - v62;
        v56 = v44;
        goto LABEL_77;
      }
      v35 = *((_QWORD *)v11 + 4);
      v34 = *((_QWORD *)v11 + 5);
      v44 = __OFSUB__(v34, v35);
      v36 = v34 - v35;
      v37 = v44;
    }
    if ((v37 & 1) != 0)
      goto LABEL_123;
    v45 = v12 - 2;
    v51 = &v31[16 * v12 - 32];
    v53 = *(_QWORD *)v51;
    v52 = *((_QWORD *)v51 + 1);
    v54 = __OFSUB__(v52, v53);
    v55 = v52 - v53;
    v56 = v54;
    if (v54)
      goto LABEL_126;
    v57 = &v31[16 * v33];
    v59 = *(_QWORD *)v57;
    v58 = *((_QWORD *)v57 + 1);
    v44 = __OFSUB__(v58, v59);
    v60 = v58 - v59;
    if (v44)
      goto LABEL_129;
    if (__OFADD__(v55, v60))
      goto LABEL_130;
    if (v55 + v60 >= v36)
    {
      v61 = v36 < v60;
LABEL_83:
      if (v61)
        v33 = v45;
      goto LABEL_85;
    }
LABEL_77:
    if ((v56 & 1) != 0)
      goto LABEL_125;
    v64 = &v31[16 * v33];
    v66 = *(_QWORD *)v64;
    v65 = *((_QWORD *)v64 + 1);
    v44 = __OFSUB__(v65, v66);
    v67 = v65 - v66;
    if (v44)
      goto LABEL_128;
    if (v67 < v55)
      goto LABEL_15;
LABEL_85:
    v72 = v33 - 1;
    if (v33 - 1 >= v12)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v10)
      goto LABEL_144;
    v73 = &v31[16 * v72];
    v74 = *(_QWORD *)v73;
    v75 = v31;
    v76 = &v31[16 * v33];
    v77 = *((_QWORD *)v76 + 1);
    sub_10048CE6C((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
    if (v1)
      break;
    if (v77 < v74)
      goto LABEL_118;
    if (v33 > *((_QWORD *)v11 + 2))
      goto LABEL_119;
    *(_QWORD *)v73 = v74;
    *(_QWORD *)&v75[16 * v72 + 8] = v77;
    v78 = *((_QWORD *)v11 + 2);
    if (v33 >= v78)
      goto LABEL_120;
    v12 = v78 - 1;
    memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
    v31 = v75;
    *((_QWORD *)v11 + 2) = v78 - 1;
    v10 = v100;
    if (v78 <= 2)
      goto LABEL_15;
  }
  v80 = v11;
LABEL_94:
  v81 = v80;
LABEL_115:
  swift_bridgeObjectRelease(v81);
  v97[2] = 0;
  swift_bridgeObjectRelease(v97);
}

uint64_t sub_10048CE6C(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_10014746C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10048D0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v12 = 0;
  v13 = _swiftEmptyArrayStorage;
  while (1)
  {
    while (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      if (*(_QWORD *)(a2 + 16))
        goto LABEL_20;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v12 >= v10)
      goto LABEL_32;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    if (!v17)
      break;
LABEL_19:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
    if (*(_QWORD *)(a2 + 16))
    {
LABEL_20:
      v19 = *(double *)(*(_QWORD *)(a1 + 48) + 8 * v15);
      result = sub_10043974C(v19);
      if ((v20 & 1) != 0)
      {
        v21 = *(_QWORD *)(a2 + 56);
        if (*(uint64_t *)(v21 + 8 * result) >= 2)
        {
          result = sub_10043974C(v19);
          if ((v22 & 1) != 0)
          {
            v27 = v3;
            v23 = *(_QWORD *)(v21 + 8 * result);
            result = swift_isUniquelyReferenced_nonNull_native(v13);
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_100140934(0, v13[2] + 1, 1, v13);
              v13 = (_QWORD *)result;
            }
            v25 = v13[2];
            v24 = v13[3];
            v26 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              result = (uint64_t)sub_100140934((_QWORD *)(v24 > 1), v25 + 1, 1, v13);
              v26 = v25 + 1;
              v13 = (_QWORD *)result;
            }
            v13[2] = v26;
            v13[v25 + 4] = v23;
            v3 = v27;
          }
        }
      }
    }
  }
  v18 = v12 + 1;
  if (v12 + 1 >= v10)
    goto LABEL_32;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v12 + 2;
  if (v12 + 2 >= v10)
    goto LABEL_32;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v12 + 3;
  if (v12 + 3 >= v10)
    goto LABEL_32;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_32:
    swift_release(a1);
    return (uint64_t)v13;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
LABEL_18:
    v12 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v10)
      goto LABEL_32;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_19;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10048D300@<X0>(uint64_t result@<X0>, double *a2@<X8>)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  double *v12;
  double v13;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  int64x2_t *v20;
  double v21;
  BOOL v22;
  double v23;
  double v24;
  double v25;

  v4 = *(_QWORD *)(result + 16);
  if (!v4)
    goto LABEL_46;
  v6 = (v4 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v13 = 0.0;
    goto LABEL_22;
  }
  v7 = 0;
  v8 = v4 - 2;
  v9 = 0.0;
  v10 = 1;
  v11 = 1.0;
  v12 = (double *)(result + 32);
  v13 = 0.0;
  while (1)
  {
    if (v4 < (unint64_t)v10)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v10 != v4)
      break;
    v13 = v13 + 0.0;
    if (v4 == v6)
      goto LABEL_22;
LABEL_5:
    v12 = (double *)(result + 32 + 8 * v10);
    ++v7;
    if (__OFADD__(v10++, 1))
      goto LABEL_45;
  }
  v15 = *v12;
  v16 = 0.0;
  v17 = v7;
  while (1)
  {
    v18 = *(double *)(result + 40 + 8 * v17);
    if (vabdd_f64(v18, v15) < 2.22044605e-16)
    {
      v16 = v16 + 0.0;
      if (v8 == v17)
        goto LABEL_19;
      goto LABEL_16;
    }
    if (v18 - v15 <= 0.0)
      break;
    v16 = v16 + 1.0;
    if (v8 == v17)
      goto LABEL_19;
LABEL_16:
    v19 = v17 + 2;
    if (v17 + 2 >= v10)
    {
      ++v17;
      if (v19 < v4)
        continue;
    }
    __break(1u);
    goto LABEL_38;
  }
  v16 = v16 + -1.0;
  if (v8 != v17)
    goto LABEL_16;
LABEL_19:
  v13 = v13 + v16;
  if (v10 != v6)
    goto LABEL_5;
LABEL_22:
  v20 = (int64x2_t *)sub_10048C05C(result);
  v2 = sub_10048C368(v20, v4);
  v3 = sub_10048C260(v20, v4);
  result = swift_bridgeObjectRelease(v20);
  if (v3 <= 0.0)
  {
    v23 = 1.0;
    v22 = v13 <= 0.0;
    if (v13 != 0.0)
      goto LABEL_27;
    v21 = 0.0;
  }
  else
  {
    v21 = 0.0;
    v22 = v13 <= 0.0;
    v23 = sqrt(v3);
    if (v13 != 0.0)
    {
LABEL_27:
      if (v22)
        v24 = 1.0;
      else
        v24 = -1.0;
      v21 = v13 + v24;
    }
  }
  v9 = v21 / v23;
  v11 = fabs(v9);
  if (v11 <= 2.58)
  {
    if (v11 <= 2.33)
    {
      if (v11 <= 1.96)
      {
LABEL_38:
        if (v11 <= 1.645)
        {
          v22 = v11 <= 1.28;
          v25 = 0.8;
          if (v22)
            v25 = 0.0;
        }
        else
        {
          v25 = 0.9;
        }
      }
      else
      {
        v25 = 0.95;
      }
    }
    else
    {
      v25 = 0.98;
    }
  }
  else
  {
    v25 = 0.99;
  }
  *a2 = v13;
  a2[1] = v13 / v2;
  a2[2] = v3;
  a2[3] = v9;
  a2[4] = v25;
  return result;
}

uint64_t storeEnumTagSinglePayload for MathError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10048D5A0 + 4 * byte_10063F0F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10048D5D4 + 4 * byte_10063F0F0[v4]))();
}

uint64_t sub_10048D5D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048D5DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10048D5E4);
  return result;
}

uint64_t sub_10048D5F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10048D5F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10048D5FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048D604(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MathError()
{
  return &type metadata for MathError;
}

unint64_t sub_10048D624()
{
  unint64_t result;

  result = qword_100835AC0;
  if (!qword_100835AC0)
  {
    result = swift_getWitnessTable(&unk_10063F1D4, &type metadata for MathError);
    atomic_store(result, (unint64_t *)&qword_100835AC0);
  }
  return result;
}

char *sub_10048D668(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView;
  v10 = objc_allocWithZone((Class)type metadata accessor for WorkoutsListContentView());
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v12;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
  v13 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView];
  v15 = v13;
  objc_msgSend(v15, "addSubview:", v14);
  sub_10048D844();

  return v15;
}

void sub_10048D844()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100623750;
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "leadingAnchor");
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v19, v20, v21, v22, v23, v24, v25);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_10048DA80(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  _BYTE *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  v8 = *(_BYTE **)(v4 + OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView);
  v9 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout];
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout] = a1;
  v10 = a1;

  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_achievementCount] = a4;
  v11 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager];
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager] = a3;
  v12 = a3;

  v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_diveDisplayStyle] = 1;
  sub_1005ED270(v10, a2, v12, a4, 1, 0, 0);
  return objc_msgSend(v8, "configureWithCurrentWorkout");
}

id sub_10048DB4C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrophyCaseAwardDetailWorkoutCell()
{
  return objc_opt_self(_TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell);
}

id sub_10048DC24(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  NSString v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  objc_super v32;

  *(_QWORD *)&v3[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_navigationDelegate], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_analyticsHandler], 0);
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    v6 = 0;
  }
  v32.receiver = v3;
  v32.super_class = (Class)type metadata accessor for WorkoutDetailMapAndWeatherTableViewCell();
  v14 = objc_msgSendSuper2(&v32, "initWithStyle:reuseIdentifier:", a1, v6);

  v15 = (void *)objc_opt_self(NSLayoutConstraint);
  v16 = sub_100047110((uint64_t *)&unk_100828340);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100623630;
  v18 = v14;
  v19 = objc_msgSend(v18, "contentView");
  v20 = objc_msgSend(v19, "heightAnchor");

  v21 = objc_msgSend(v20, "constraintGreaterThanOrEqualToConstant:", 132.0);
  *(_QWORD *)(v17 + 32) = v21;
  specialized Array._endMutation()(v22);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v17, v24, v25, v26, v27, v28, v29, v30);
  objc_msgSend(v15, "activateConstraints:", isa);

  return v18;
}

void sub_10048DEE4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t Strong;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  _QWORD v30[5];
  uint64_t v31;
  char v32[24];
  char v33[24];

  v7 = a4 + 16;
  v8 = objc_msgSend(a1, "formattedDescriptionForWorkout:context:", a2, CFSTR("DayViewDisplayContext"));
  v9 = v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, "string");

    v9 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v12 = v11;

  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(a1, "shareTextForWorkout:", a2);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  if (v12)
    v17 = (uint64_t)v9;
  else
    v17 = 0;
  if (v12)
    v18 = v12;
  else
    v18 = 0xE000000000000000;
  v19 = sub_10005FD28();
  type metadata accessor for ActivityType(0);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  objc_allocWithZone((Class)type metadata accessor for WorkoutRouteViewController());
  v22 = sub_100274CC8(a3, v17, v18, 1, v14, v16, v21);
  v23 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v22);
  swift_beginAccess(v7, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong
    && (v25 = (void *)Strong,
        v26 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_navigationDelegate),
        v25,
        v26))
  {
    v27 = swift_allocObject(&unk_1007A21A0, 24, 7);
    swift_beginAccess(v7, v32, 0, 0);
    v28 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    swift_unknownObjectWeakInit(v27 + 16, v28);

    v30[4] = sub_10048FE4C;
    v31 = v27;
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 1107296256;
    v30[2] = sub_10002D0F8;
    v30[3] = &unk_1007A2230;
    v29 = _Block_copy(v30);
    objc_msgSend(v26, "presentViewController:completion:", v23, v29, swift_release(v31).n128_f64[0]);

    swift_unknownObjectRelease(v26);
    _Block_release(v29);
  }
  else
  {

  }
}

void sub_10048E16C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_analyticsHandler);

    if (v4)
    {
      objc_msgSend(v4, "didPresentRouteView");
      swift_unknownObjectRelease(v4);
    }
  }
}

uint64_t sub_10048E1E8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_1007A21A0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a2);
  v14 = swift_allocObject(&unk_1007A21F0, 32, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = a1;
  aBlock[4] = sub_10048FE34;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007A2208;
  v15 = _Block_copy(aBlock);
  v16 = v26;
  v17 = a1;
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v19 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100047110(&qword_100828C80);
  v21 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10048E424(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel);
    swift_retain(v6);

    if (v6)
    {
      v7 = *(_QWORD *)(v6 + 16);
      swift_retain(v7);
      swift_release(v6);
      KeyPath = swift_getKeyPath(&unk_10063F2E8);
      v9 = swift_getKeyPath(&unk_10063F310);
      v25[0] = 0;
      static Published.subscript.setter(v25, v7, KeyPath, v9);
    }
  }
  if (a2)
  {
    swift_beginAccess(v3, v25, 0, 0);
    v10 = swift_unknownObjectWeakLoadStrong(v3);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = *(_QWORD *)(v10 + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel);
      swift_retain(v12);
      v13 = a2;

      if (v12)
      {
        v14 = *(_QWORD *)(v12 + 16);
        swift_retain(v14);
        swift_release(v12);
        v13 = v13;
        v15 = Image.init(uiImage:)();
        v16 = swift_getKeyPath(&unk_10063F330);
        v17 = swift_getKeyPath(&unk_10063F358);
        v24 = v15;
        swift_retain(v14);
        static Published.subscript.setter(&v24, v14, v16, v17);
        swift_release(v14);
      }

    }
  }
  else
  {
    swift_beginAccess(v3, v25, 0, 0);
    v18 = swift_unknownObjectWeakLoadStrong(v3);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = *(_QWORD *)(v18 + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel);
      swift_retain(v20);

      if (v20)
      {
        v21 = *(_QWORD *)(v20 + 16);
        swift_retain(v21);
        swift_release(v20);
        v22 = swift_getKeyPath(&unk_10063F330);
        v23 = swift_getKeyPath(&unk_10063F358);
        v24 = 0;
        static Published.subscript.setter(&v24, v21, v22, v23);
      }
    }
  }
}

id sub_10048E6DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailMapAndWeatherTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailMapAndWeatherTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailMapAndWeatherTableViewCell);
}

uint64_t sub_10048E784(void *a1, id a2)
{
  id v3;
  void *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  unint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  unint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  char v62;
  char v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  const char *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  uint64_t v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  char v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  _QWORD v97[2];
  __int128 v98;
  __int128 v99;

  if (!a2 || (v3 = objc_msgSend(a2, "metadata")) == 0)
  {
    v98 = 0u;
    v99 = 0u;
    goto LABEL_10;
  }
  v4 = v3;
  v5 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyWorkoutWeatherSourceName);
  v14 = (CHWorkoutDetailHeartRateTableViewCell *)v7;
  if (!*(_QWORD *)v5->cellPadding || (v15 = sub_100438F74(v6, v7), (v7 & 1) == 0))
  {
    v98 = 0u;
    v99 = 0u;
    swift_bridgeObjectRelease(v14, (SEL)v7, v8, v9, v10, v11, v12, v13);
    swift_bridgeObjectRelease(v5, v30, v31, v32, v33, v34, v35, v36);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)v5[1].cellInset + 32 * v15, (uint64_t)&v98);
  swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
  swift_bridgeObjectRelease(v5, v23, v24, v25, v26, v27, v28, v29);
  if (!*((_QWORD *)&v99 + 1))
  {
LABEL_10:
    sub_10001BE90((uint64_t)&v98, (uint64_t *)&unk_100828420);
LABEL_11:
    v37 = objc_msgSend(a1, "metadata");
    if (v37)
    {
      v38 = v37;
      v39 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v37, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyWorkoutWeatherSourceName);
      v48 = (CHWorkoutDetailHeartRateTableViewCell *)v41;
      if (*(_QWORD *)v39->cellPadding && (v49 = sub_100438F74(v40, v41), (v41 & 1) != 0))
      {
        sub_10003E9BC(*(_QWORD *)v39[1].cellInset + 32 * v49, (uint64_t)&v98);
      }
      else
      {
        v98 = 0u;
        v99 = 0u;
      }
      swift_bridgeObjectRelease(v48, (SEL)v41, v42, v43, v44, v45, v46, v47);
      swift_bridgeObjectRelease(v39, v50, v51, v52, v53, v54, v55, v56);
      if (*((_QWORD *)&v99 + 1))
      {
        if ((swift_dynamicCast(v97, &v98, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
          goto LABEL_23;
        goto LABEL_18;
      }
    }
    else
    {
      v98 = 0u;
      v99 = 0u;
    }
    sub_10001BE90((uint64_t)&v98, (uint64_t *)&unk_100828420);
    goto LABEL_23;
  }
  if ((swift_dynamicCast(v97, &v98, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_11;
LABEL_18:
  v58 = v97[0];
  v57 = (CHWorkoutDetailHeartRateTableViewCell *)v97[1];
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(kHKAppleWeatherSourceName);
  v61 = v59;
  if (v58 != v60 || v57 != v59)
  {
    v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v57, v60, v59, 0);
    swift_bridgeObjectRelease(v61, v65, v66, v67, v68, v69, v70, v71);
    if ((v64 & 1) != 0)
    {
      swift_bridgeObjectRelease(v57, v72, v73, v74, v75, v76, v77, v78);
      goto LABEL_23;
    }
    v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(kHKAppleWeatherLogoSourceName);
    v81 = v79;
    if (v58 != v80 || v57 != v79)
    {
      v82 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v57, v80, v79, 0);
      swift_bridgeObjectRelease(v57, v83, v84, v85, v86, v87, v88, v89);
      swift_bridgeObjectRelease(v81, v90, v91, v92, v93, v94, v95, v96);
      v62 = v82 ^ 1;
      return v62 & 1;
    }
  }
  swift_bridgeObjectRelease_n(v57, 2);
LABEL_23:
  v62 = 0;
  return v62 & 1;
}

void sub_10048EA54(void *a1, uint64_t a2, void *a3, void *a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  const char *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  NSString v47;
  id v48;
  uint64_t v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  unint64_t v52;
  uint64_t v53;
  const char *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  char v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  void *v67;
  double v68;
  double v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  __n128 v82;
  const char *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  NSString v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  id v95;
  uint64_t v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  CHWorkoutDetailHeartRateTableViewCell *v98;
  unint64_t v99;
  uint64_t v100;
  const char *v101;
  const char *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  unint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  const char *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  unint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  void *v133;
  void *v134;
  id v135;
  double v136;
  double v137;
  id v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  NSString v144;
  id v145;
  uint64_t v146;
  CHWorkoutDetailHeartRateTableViewCell *v147;
  CHWorkoutDetailHeartRateTableViewCell *v148;
  unint64_t v149;
  uint64_t v150;
  const char *v151;
  const char *v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  unint64_t v163;
  unint64_t v164;
  char *v165;
  id v166;
  void *v167;
  id v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  NSString v174;
  id v175;
  uint64_t v176;
  CHWorkoutDetailHeartRateTableViewCell *v177;
  CHWorkoutDetailHeartRateTableViewCell *v178;
  unint64_t v179;
  uint64_t v180;
  const char *v181;
  const char *v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  unint64_t v193;
  unint64_t v194;
  char *v195;
  id v196;
  void *v197;
  id v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  unint64_t v203;
  unint64_t v204;
  char *v205;
  uint64_t v206;
  _QWORD *v207;
  void *v208;
  uint64_t v209;
  id v210;
  id v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  void *v222;
  CHWorkoutDetailHeartRateTableViewCell *v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  void *v227;
  void *v228;
  void *v229;
  void *v230;
  void *v231;
  CHWorkoutDetailHeartRateTableViewCell *v232;
  unint64_t v233;
  SEL v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  uint64_t v241;
  id v242;
  unsigned int v243;
  uint64_t v244;
  uint64_t v245;
  objc_class *v246;
  _BYTE *v247;
  char *v248;
  id v249;
  void *v250;
  uint64_t v251;
  objc_class *v252;
  _BYTE *v253;
  char *v254;
  id v255;
  id v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void *v260;
  id v261;
  void *v262;
  uint64_t v263;
  id v264;
  double v265;
  double v266;
  void *v267;
  char *v268;
  unint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  const char *v276;
  uint64_t v277;
  uint64_t v278;
  void *v279;
  char *v280;
  uint64_t v281;
  void *v282;
  int v283;
  uint64_t v284;
  void *v285;
  const char *v286;
  uint64_t v287;
  uint64_t v288;
  const char *v289;
  uint64_t v290;
  char *v291;
  objc_super v292;
  id v293;
  __int128 v294;
  __int128 v295;
  uint64_t v296;
  objc_super v297;

  v5 = v4;
  v279 = a4;
  v9 = sub_100047110(&qword_100835B40);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v275 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100835B48);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v275 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v290 = a2;
  v17 = objc_msgSend(a3, "waterTemperatureForWorkout:workoutActivity:", a1, a2, v14);
  v291 = v5;
  v282 = a3;
  v278 = v9;
  v281 = v10;
  v280 = v12;
  if (v17)
  {
    v18 = v17;
    v19 = (id)_HKWeatherTemperatureUnit();
    if (!v19)
    {
      __break(1u);
      goto LABEL_71;
    }
    v20 = v19;
    v21 = (void *)objc_opt_self(FIUIFormattingManager);
    objc_msgSend(v18, "doubleValueForUnit:", v20);
    v23 = v22;

    v24 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v23);
    v25 = objc_msgSend(v21, "stringWithNumber:decimalPrecision:", v24, 1);

    if (v25)
    {
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = (void *)objc_opt_self(NSBundle);
      v30 = objc_msgSend(v29, "mainBundle");
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      v36 = sub_100047110((uint64_t *)&unk_100827460);
      v37 = swift_allocObject(v36, 72, 7);
      *(_OWORD *)(v37 + 16) = xmmword_100622F90;
      *(_QWORD *)(v37 + 56) = &type metadata for String;
      *(_QWORD *)(v37 + 64) = sub_100038CF8();
      *(_QWORD *)(v37 + 32) = v26;
      *(_QWORD *)(v37 + 40) = v28;
      v288 = String.init(format:_:)(v33, v35, v37, v38);
      v289 = v39;
      swift_bridgeObjectRelease(v35, v39, v40, v41, v42, v43, v44, v45);
      objc_msgSend(a1, "fiui_swimmingLocationType");
      v46 = objc_msgSend(v29, "mainBundle");
      v47 = String._bridgeToObjectiveC()();
      v48 = objc_msgSend(v46, "localizedStringForKey:value:table:", v47, 0, 0);

      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
      v51 = v50;

      *(_QWORD *)&v294 = v49;
      *((_QWORD *)&v294 + 1) = v51;
      v52 = sub_100038CA0();
      v53 = StringProtocol.localizedUppercase.getter(&type metadata for String, v52);
      v286 = v54;
      v287 = v53;
      swift_bridgeObjectRelease(v51, v54, v55, v56, v57, v58, v59, v60);

      a3 = v282;
      v61 = (void *)v290;
      v5 = v291;
      v62 = 0;
      v284 = 0x80000001006A0D10;
      v285 = (void *)0xD00000000000001CLL;
      v283 = 1;
      goto LABEL_7;
    }

  }
  v284 = 0;
  v285 = 0;
  v286 = 0;
  v287 = 0;
  v288 = 0;
  v289 = 0;
  v283 = 254;
  v62 = 1;
  v61 = (void *)v290;
LABEL_7:
  v63 = objc_msgSend(a3, "weatherTemperatureForWorkout:workoutActivity:", a1, v61);
  if (!v63)
  {
    v94 = &_swiftEmptyArrayStorage;
    if ((v62 & 1) != 0)
      goto LABEL_23;
    goto LABEL_18;
  }
  v64 = v63;
  v65 = (id)_HKWeatherTemperatureUnit();
  if (!v65)
  {
LABEL_71:
    sub_10048FDF0(v285, v284, v287, (uint64_t)v286, 0, 0, v288, (uint64_t)v289, v283);
    __break(1u);
    return;
  }
  v66 = v65;
  v67 = (void *)objc_opt_self(FIUIFormattingManager);
  objc_msgSend(v64, "doubleValueForUnit:", v66);
  v69 = v68;

  v70 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v69);
  v71 = objc_msgSend(v67, "stringWithNumber:decimalPrecision:", v70, 1);

  if (v71)
  {
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
    v74 = v73;

    v75 = type metadata accessor for FitnessUILocalizationFeature(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v16, 1, 1, v75);
    v76 = String.fitnessUILocalizedString(feature:)(v16, 0x5F52454854414557, 0xEC000000504D4554);
    v78 = v77;
    sub_10001BE90((uint64_t)v16, &qword_100835B48);
    v79 = sub_100047110((uint64_t *)&unk_100827460);
    v80 = v61;
    v81 = swift_allocObject(v79, 72, 7);
    *(_OWORD *)(v81 + 16) = xmmword_100622F90;
    *(_QWORD *)(v81 + 56) = &type metadata for String;
    *(_QWORD *)(v81 + 64) = sub_100038CF8();
    *(_QWORD *)(v81 + 32) = v72;
    *(_QWORD *)(v81 + 40) = v74;
    v277 = String.init(format:_:)(v76, v78, v81, v82);
    v276 = v83;
    swift_bridgeObjectRelease(v78, v83, v84, v85, v86, v87, v88, v89);
    v90 = sub_10030AAAC(a1, v80);
    v275 = v91;
    v92 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v93 = String._bridgeToObjectiveC()();
    v95 = objc_msgSend(v92, "localizedStringForKey:value:table:", v93, 0, 0);

    v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
    v98 = v97;

    *(_QWORD *)&v294 = v96;
    *((_QWORD *)&v294 + 1) = v98;
    v99 = sub_100038CA0();
    v100 = StringProtocol.localizedUppercase.getter(&type metadata for String, v99);
    v102 = v101;
    swift_bridgeObjectRelease(v98, v101, v103, v104, v105, v106, v107, v108);
    v94 = sub_100141614(0, 1, 1, &_swiftEmptyArrayStorage, v109, v110, v111, v112);
    v118 = *(_QWORD *)v94->cellPadding;
    v117 = *(_QWORD *)v94->cellInset;
    if (v118 >= v117 >> 1)
      v94 = sub_100141614((CHWorkoutDetailHeartRateTableViewCell *)(v117 > 1), v118 + 1, 1, v94, v113, v114, v115, v116);
    *(_QWORD *)v94->cellPadding = v118 + 1;
    v119 = (char *)v94 + 72 * v118;
    *((_QWORD *)v119 + 4) = 0xD000000000000012;
    *((_QWORD *)v119 + 5) = 0x80000001006A0C90;
    *((_QWORD *)v119 + 6) = v100;
    *((_QWORD *)v119 + 7) = v102;
    v120 = v275;
    *((_QWORD *)v119 + 8) = v90;
    *((_QWORD *)v119 + 9) = v120;
    v121 = v276;
    *((_QWORD *)v119 + 10) = v277;
    *((_QWORD *)v119 + 11) = v121;
    v119[96] = 1;
    v61 = (void *)v290;
    v5 = v291;
    a3 = v282;
  }
  else
  {
    v94 = &_swiftEmptyArrayStorage;
  }

  if ((v62 & 1) == 0)
  {
LABEL_18:
    sub_1001F6890(v285, v284, v287, (uint64_t)v286, 0, 0, v288, (uint64_t)v289, v283);
    if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
      v94 = sub_100141614(0, *(_QWORD *)v94->cellPadding + 1, 1, v94, v122, v123, v124, v125);
    v127 = *(_QWORD *)v94->cellPadding;
    v126 = *(_QWORD *)v94->cellInset;
    if (v127 >= v126 >> 1)
      v94 = sub_100141614((CHWorkoutDetailHeartRateTableViewCell *)(v126 > 1), v127 + 1, 1, v94, v122, v123, v124, v125);
    *(_QWORD *)v94->cellPadding = v127 + 1;
    v128 = (char *)v94 + 72 * v127;
    v129 = v284;
    *((_QWORD *)v128 + 4) = v285;
    *((_QWORD *)v128 + 5) = v129;
    v130 = (uint64_t)v286;
    *((_QWORD *)v128 + 6) = v287;
    *((_QWORD *)v128 + 7) = v130;
    *((_QWORD *)v128 + 8) = 0;
    *((_QWORD *)v128 + 9) = 0;
    v131 = (uint64_t)v289;
    *((_QWORD *)v128 + 10) = v288;
    *((_QWORD *)v128 + 11) = v131;
    v128[96] = v283;
  }
LABEL_23:
  v132 = objc_msgSend(a3, "weatherHumidityForWorkout:workoutActivity:", a1, v61);
  if (v132)
  {
    v133 = v132;
    v134 = (void *)objc_opt_self(FIUIFormattingManager);
    v135 = objc_msgSend((id)objc_opt_self(HKUnit), "percentUnit");
    objc_msgSend(v133, "doubleValueForUnit:", v135);
    v137 = v136;

    v138 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v137 / 100.0);
    v139 = objc_msgSend(v134, "percentStringWithNumber:", v138);

    if (v139)
    {
      v140 = static String._unconditionallyBridgeFromObjectiveC(_:)(v139);
      v142 = v141;

      v143 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v144 = String._bridgeToObjectiveC()();
      v145 = objc_msgSend(v143, "localizedStringForKey:value:table:", v144, 0, 0);

      v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(v145);
      v148 = v147;

      *(_QWORD *)&v294 = v146;
      *((_QWORD *)&v294 + 1) = v148;
      v149 = sub_100038CA0();
      v150 = StringProtocol.localizedUppercase.getter(&type metadata for String, v149);
      v152 = v151;
      swift_bridgeObjectRelease(v148, v151, v153, v154, v155, v156, v157, v158);
      if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
        v94 = sub_100141614(0, *(_QWORD *)v94->cellPadding + 1, 1, v94, v159, v160, v161, v162);
      v164 = *(_QWORD *)v94->cellPadding;
      v163 = *(_QWORD *)v94->cellInset;
      if (v164 >= v163 >> 1)
        v94 = sub_100141614((CHWorkoutDetailHeartRateTableViewCell *)(v163 > 1), v164 + 1, 1, v94, v159, v160, v161, v162);
      *(_QWORD *)v94->cellPadding = v164 + 1;
      v165 = (char *)v94 + 72 * v164;
      *((_OWORD *)v165 + 2) = xmmword_10063F280;
      *((_QWORD *)v165 + 6) = v150;
      *((_QWORD *)v165 + 7) = v152;
      *((_QWORD *)v165 + 8) = 0;
      *((_QWORD *)v165 + 9) = 0;
      *((_QWORD *)v165 + 10) = v140;
      *((_QWORD *)v165 + 11) = v142;
      v165[96] = 1;
      v61 = (void *)v290;
      v5 = v291;
      a3 = v282;
    }

  }
  v166 = objc_msgSend(a3, "airQualityIndexForWorkout:workoutActivity:", a1, v61);
  if (v166)
  {
    v167 = v166;
    v168 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:", v166, 1);
    if (v168)
    {
      v169 = v168;
      v170 = static String._unconditionallyBridgeFromObjectiveC(_:)(v168);
      v172 = v171;

      v173 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v174 = String._bridgeToObjectiveC()();
      v175 = objc_msgSend(v173, "localizedStringForKey:value:table:", v174, 0, 0);

      v176 = static String._unconditionallyBridgeFromObjectiveC(_:)(v175);
      v178 = v177;

      *(_QWORD *)&v294 = v176;
      *((_QWORD *)&v294 + 1) = v178;
      v179 = sub_100038CA0();
      v180 = StringProtocol.localizedUppercase.getter(&type metadata for String, v179);
      v182 = v181;
      swift_bridgeObjectRelease(v178, v181, v183, v184, v185, v186, v187, v188);
      if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
        v94 = sub_100141614(0, *(_QWORD *)v94->cellPadding + 1, 1, v94, v189, v190, v191, v192);
      v194 = *(_QWORD *)v94->cellPadding;
      v193 = *(_QWORD *)v94->cellInset;
      if (v194 >= v193 >> 1)
        v94 = sub_100141614((CHWorkoutDetailHeartRateTableViewCell *)(v193 > 1), v194 + 1, 1, v94, v189, v190, v191, v192);
      *(_QWORD *)v94->cellPadding = v194 + 1;
      v195 = (char *)v94 + 72 * v194;
      *((_OWORD *)v195 + 2) = xmmword_10063F290;
      *((_QWORD *)v195 + 6) = v180;
      *((_QWORD *)v195 + 7) = v182;
      *((_QWORD *)v195 + 8) = 0;
      *((_QWORD *)v195 + 9) = 0;
      *((_QWORD *)v195 + 10) = v170;
      *((_QWORD *)v195 + 11) = v172;
      v195[96] = 1;
      v61 = (void *)v290;
      v5 = v291;
      a3 = v282;
    }

  }
  v196 = objc_msgSend(a3, "locationForWorkout:workoutActivity:", a1, v61);
  if (v196)
  {
    v197 = v196;
    if ((sub_10048E784(a1, v61) & 1) != 0)
    {
      v198 = v197;
      if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
        v94 = sub_100141614(0, *(_QWORD *)v94->cellPadding + 1, 1, v94, v199, v200, v201, v202);
      v204 = *(_QWORD *)v94->cellPadding;
      v203 = *(_QWORD *)v94->cellInset;
      if (v204 >= v203 >> 1)
        v94 = sub_100141614((CHWorkoutDetailHeartRateTableViewCell *)(v203 > 1), v204 + 1, 1, v94, v199, v200, v201, v202);
      *(_QWORD *)v94->cellPadding = v204 + 1;
      v205 = (char *)v94 + 72 * v204;
      *((_QWORD *)v205 + 4) = v197;
      *(_OWORD *)(v205 + 40) = 0u;
      *(_OWORD *)(v205 + 56) = 0u;
      *(_OWORD *)(v205 + 72) = 0u;
      *((_QWORD *)v205 + 11) = 0;
      v205[96] = 0x80;
    }

  }
  v206 = swift_allocObject(&unk_1007A21A0, 24, 7);
  swift_unknownObjectWeakInit(v206 + 16, v5);
  v207 = (_QWORD *)swift_allocObject(&unk_1007A21C8, 48, 7);
  v207[2] = a3;
  v207[3] = a1;
  v208 = v279;
  v207[4] = v279;
  v207[5] = v206;
  v209 = type metadata accessor for WorkoutDetailMapView.ViewModel(0);
  swift_allocObject(v209, *(unsigned int *)(v209 + 48), *(unsigned __int16 *)(v209 + 52));
  v210 = a3;
  v211 = a1;
  v212 = v208;
  v213 = sub_100432F10(1, 0, (uint64_t)sub_10048FD94, (uint64_t)v207);
  v214 = type metadata accessor for WorkoutDetailMapAndWeatherView.ViewModel();
  v215 = swift_allocObject(v214, 32, 7);
  *(_QWORD *)(v215 + 16) = v213;
  *(_QWORD *)(v215 + 24) = v94;
  v216 = sub_1000083D8(&qword_100835B50, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailMapAndWeatherView.ViewModel, (uint64_t)&unk_10062CBFC);
  swift_retain(v213);
  swift_retain(v215);
  v290 = ObservedObject.init(wrappedValue:)(v217, v214, v216);
  v219 = v218;
  v220 = *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel];
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel] = v215;
  swift_retain(v215);
  v221 = objc_msgSend(v211, "metadata", swift_release(v220).n128_f64[0]);
  if (!v221)
  {
    v294 = 0u;
    v295 = 0u;
LABEL_57:
    sub_10001BE90((uint64_t)&v294, (uint64_t *)&unk_100828420);
    goto LABEL_58;
  }
  v222 = v221;
  v223 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v221, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v224 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyWorkoutExtendedMode);
  v232 = (CHWorkoutDetailHeartRateTableViewCell *)v225;
  if (*(_QWORD *)v223->cellPadding && (v233 = sub_100438F74(v224, v225), (v225 & 1) != 0))
  {
    sub_10003E9BC(*(_QWORD *)v223[1].cellInset + 32 * v233, (uint64_t)&v294);
  }
  else
  {
    v294 = 0u;
    v295 = 0u;
  }
  swift_bridgeObjectRelease(v232, (SEL)v225, v226, v227, v228, v229, v230, v231);
  swift_bridgeObjectRelease(v223, v234, v235, v236, v237, v238, v239, v240);
  v5 = v291;
  if (!*((_QWORD *)&v295 + 1))
    goto LABEL_57;
  v241 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  if ((swift_dynamicCast(&v293, &v294, (char *)&type metadata for Any + 8, v241, 6) & 1) == 0)
  {
LABEL_58:
    v244 = v278;
    goto LABEL_59;
  }
  v242 = v293;
  v243 = objc_msgSend(v293, "BOOLValue");
  v244 = v278;
  if (v243)
  {
    v245 = type metadata accessor for WorkoutExtendedModePathRenderer();
    v246 = (objc_class *)type metadata accessor for WorkoutRouteMapGenerator();
    v247 = objc_allocWithZone(v246);
    v247[OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive] = 0;
    *(_QWORD *)&v247[OBJC_IVAR___CHWorkoutRouteMapGenerator_pinWidth] = 0x402E000000000000;
    *(_QWORD *)&v247[OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings] = 0;
    *(_QWORD *)&v247[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter] = 0;
    v248 = &v247[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize];
    *(_QWORD *)v248 = 0;
    *((_QWORD *)v248 + 1) = 0;
    v248[16] = 1;
    *(_QWORD *)&v247[OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass] = v245;
    v292.receiver = v247;
    v292.super_class = v246;
    v5 = v291;
    v249 = objc_msgSendSuper2(&v292, "init");
    v250 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator];
    *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator] = v249;

    goto LABEL_60;
  }

LABEL_59:
  v251 = type metadata accessor for WorkoutGradientPathRenderer();
  v252 = (objc_class *)type metadata accessor for WorkoutRouteMapGenerator();
  v253 = objc_allocWithZone(v252);
  v253[OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive] = 0;
  *(_QWORD *)&v253[OBJC_IVAR___CHWorkoutRouteMapGenerator_pinWidth] = 0x402E000000000000;
  *(_QWORD *)&v253[OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings] = 0;
  *(_QWORD *)&v253[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter] = 0;
  v254 = &v253[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize];
  *(_QWORD *)v254 = 0;
  *((_QWORD *)v254 + 1) = 0;
  v254[16] = 1;
  *(_QWORD *)&v253[OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass] = v251;
  v297.receiver = v253;
  v297.super_class = v252;
  v255 = objc_msgSendSuper2(&v297, "init");
  v250 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator];
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator] = v255;
LABEL_60:

  v256 = objc_msgSend(v211, "workoutActivityType");
  v257 = OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator;
  if (v256 == (id)84)
  {
    v258 = *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator];
    if (v258)
    {
      *(_BYTE *)(v258 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) = 1;
      v257 = OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator;
    }
  }
  v259 = *(_QWORD *)&v5[v257];
  if (v259)
  {
    v260 = *(void **)(v259 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
    *(_QWORD *)(v259 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings) = v212;
    v261 = v212;

    v262 = *(void **)&v5[v257];
    if (v262)
    {
      v263 = qword_10081DD68;
      v264 = v262;
      if (v263 != -1)
        swift_once(&qword_10081DD68, sub_100433394);
      v265 = *(double *)&qword_10086A9E8;
      v266 = *(double *)&qword_10086A9F0;
      sub_10001E724(0, &qword_100835B58, UITraitCollection_ptr);
      v267 = (void *)static UITraitCollection.withSystemPreferredContentSizeCategory.getter();
      v268 = v5;
      sub_10053B65C((uint64_t)v267, (uint64_t)v264, v268, v265, v266, 3.0, 16.0, 16.0, 16.0, 16.0);

    }
  }
  __chkstk_darwin(v256);
  v273 = v290;
  v274 = v219;
  v269 = sub_10048FDAC();
  v270 = v280;
  v271 = UIHostingConfiguration<>.init(content:)(sub_10048FDA0, &v275 - 4, &type metadata for WorkoutDetailMapAndWeatherView, v269);
  v272 = static Edge.Set.all.getter(v271);
  *((_QWORD *)&v295 + 1) = v244;
  v296 = sub_100028384(qword_100835B68, &qword_100835B40, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_10004C480(&v294);
  UIHostingConfiguration.margins(_:_:)(v272, v244, 0.0);
  (*(void (**)(char *, uint64_t))(v281 + 8))(v270, v244);
  UITableViewCell.contentConfiguration.setter(&v294);
  sub_10048FDF0(v285, v284, v287, (uint64_t)v286, 0, 0, v288, (uint64_t)v289, v283);
  swift_release(v219);
  swift_release(v215);
  swift_release(v213);
}

uint64_t sub_10048FD34()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10048FD58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10048FD94()
{
  uint64_t v0;

  sub_10048DEE4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10048FDA0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_retain(v2);
}

unint64_t sub_10048FDAC()
{
  unint64_t result;

  result = qword_100835B60;
  if (!qword_100835B60)
  {
    result = swift_getWitnessTable(&unk_10062CBAC, &type metadata for WorkoutDetailMapAndWeatherView);
    atomic_store(result, (unint64_t *)&qword_100835B60);
  }
  return result;
}

void sub_10048FDF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 <= 0xFDu)
    sub_1001F6928(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10048FE08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10048FE34()
{
  uint64_t v0;

  sub_10048E424(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10048FE4C()
{
  uint64_t v0;

  sub_10048E16C(v0);
}

void sub_10048FE5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "(";
    v6[2] = &unk_10063F400;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

uint64_t *sub_10048FEF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (((v8 & 0xFFFFFFFFFFFFFFF8) + v11 + 49) & ~v11) + *(_QWORD *)(v10 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain(v15);
  }
  else
  {
    v16 = *((unsigned __int8 *)a2 + v8);
    if (v16 >= 2)
    {
      if (v8 <= 3)
        v17 = v8;
      else
        v17 = 4;
      __asm { BR              X13 }
    }
    v18 = v8 + 1;
    if (v16 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v19 = 1;
    }
    else
    {
      v20 = *a2;
      *a1 = *a2;
      swift_retain(v20);
      v19 = 0;
    }
    *((_BYTE *)a1 + v8) = v19;
    v21 = ((unint64_t)a1 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)a2 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)(v22 + 24);
    *(_QWORD *)(v21 + 24) = v23;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
    (**(void (***)(unint64_t, unint64_t))(v23 - 8))(v21, v22);
    *(_BYTE *)(v21 + 40) = *(_BYTE *)(v22 + 40);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v21 + v11 + 41) & ~v11, (v22 + v11 + 41) & ~v11, v9);
  }
  return a1;
}

uint64_t sub_1004900F0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, v4);
  else
    swift_release(*a1);
  v9 = (_QWORD *)(((unint64_t)a1 + v6 + 8) & 0xFFFFFFFFFFFFFFF8);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v9);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)v9 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t *sub_1004901F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v12 = *a2;
    *a1 = *a2;
    swift_retain(v12);
    v11 = 0;
  }
  *((_BYTE *)a1 + v8) = v11;
  v13 = v8 + 8;
  v14 = ((unint64_t)a1 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 24) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  (**(void (***)(unint64_t, unint64_t))(v16 - 8))(v14, v15);
  *(_BYTE *)(v14 + 40) = *(_BYTE *)(v15 + 40);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v17 + 16))((*(unsigned __int8 *)(v17 + 80) + 41 + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (*(unsigned __int8 *)(v17 + 80) + 41 + v15) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  return a1;
}

uint64_t *sub_100490354(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  __n128 v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(a1, v6);
    else
      v11 = swift_release(*a1);
    v12 = *((unsigned __int8 *)a2 + v8);
    if (v12 >= 2)
    {
      if (v8 <= 3)
        v13 = v8;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t, __n128))(v7 + 16))(a1, a2, v6, v11);
      *((_BYTE *)a1 + v8) = 1;
    }
    else
    {
      v14 = *a2;
      *a1 = *a2;
      *((_BYTE *)a1 + v8) = 0;
      swift_retain(v14);
    }
  }
  v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8) + 64);
  if (v15 <= 8)
    v15 = 8;
  v16 = v15 + 8;
  v17 = ((unint64_t)a1 + v16) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)a2 + v16) & 0xFFFFFFFFFFFFFFF8;
  sub_1000F1A58((_QWORD *)v17, (_QWORD *)v18);
  *(_BYTE *)(v17 + 40) = *(_BYTE *)(v18 + 40);
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 24))((*(unsigned __int8 *)(v19 + 80) + 41 + v17) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), (*(unsigned __int8 *)(v19 + 80) + 41 + v18) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

_QWORD *sub_100490594(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = ((unint64_t)a1 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)a2 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_OWORD *)v13;
  v15 = *(_OWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_OWORD *)v12 = v14;
  *(_OWORD *)(v12 + 16) = v15;
  *(_BYTE *)(v12 + 40) = *(_BYTE *)(v13 + 40);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 32))((*(unsigned __int8 *)(v16 + 80) + 41 + v12) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (*(unsigned __int8 *)(v16 + 80) + 41 + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

_QWORD *sub_1004906D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  __n128 v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  if (a1 != a2)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      v11 = swift_release(*a1);
    v12 = *((unsigned __int8 *)a2 + v8);
    if (v12 >= 2)
    {
      if (v8 <= 3)
        v13 = v8;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v7 + 32))(a1, a2, v6, v11);
      v14 = 1;
    }
    else
    {
      v14 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v8) = v14;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8) + 64);
  if (v15 <= 8)
    v15 = 8;
  v16 = v15 + 8;
  v17 = ((unint64_t)a1 + v16) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)a2 + v16) & 0xFFFFFFFFFFFFFFF8;
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)v17);
  v19 = *(_OWORD *)v18;
  v20 = *(_OWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_OWORD *)v17 = v19;
  *(_OWORD *)(v17 + 16) = v20;
  *(_BYTE *)(v17 + 40) = *(_BYTE *)(v18 + 40);
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 40))((*(unsigned __int8 *)(v21 + 80) + 41 + v17) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(unsigned __int8 *)(v21 + 80) + 41 + v18) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

uint64_t sub_100490920(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  int v18;
  unint64_t v19;
  unint64_t v20;

  v6 = type metadata accessor for DynamicTypeSize(0);
  if (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v8 + 80);
  if (a2 <= v10)
    goto LABEL_27;
  v12 = (((v7 & 0xFFFFFFFFFFFFFFF8) + v11 + 49) & ~v11) + *(_QWORD *)(v8 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((a2 - v10 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v16 < 2)
    {
LABEL_27:
      v19 = (a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8;
      if ((v9 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v8 + 48))((v19 + v11 + 41) & ~v11);
      v20 = *(_QWORD *)(v19 + 24);
      if (v20 >= 0xFFFFFFFF)
        LODWORD(v20) = -1;
      return (v20 + 1);
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_27;
LABEL_18:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 <= 3)
      v18 = v12;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  return v10 + v17 + 1;
}

void sub_100490ACC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v8 = type metadata accessor for DynamicTypeSize(0);
  v9 = 8;
  if (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) > 8uLL)
    v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFFu)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = (((v9 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v10 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  if (a3 <= v11)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_100000004;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &_mh_execute_header.magic + 1;
  }
  if (v11 < a2)
  {
    v14 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t type metadata accessor for CardFamilyEntryLinkView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014E7CC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CardFamilyEntryLinkView);
}

uint64_t sub_100490D18(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1006B8A98, 1);
}

uint64_t sub_100490D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[16];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  ValueMetadata *v67;
  uint64_t v68;
  void *v69;
  uint64_t WitnessTable;
  uint64_t v71;

  v58 = *(_QWORD *)(a1 + 16);
  v59 = a2;
  v4 = type metadata accessor for ModifiedContent(255, v58, &type metadata for _PaddingLayout);
  v5 = sub_100007050(&qword_100835BF0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v4, v5, &type metadata for Spacer, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v8 = type metadata accessor for VStack(255, v7);
  v9 = sub_100007050(&qword_10081F658);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v8);
  v71 = sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
  v55 = v10;
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v66 = v10;
  v67 = (ValueMetadata *)&type metadata for Never;
  v68 = v53;
  v69 = &protocol witness table for Never;
  v11 = type metadata accessor for NavigationLink(0, &v66);
  v56 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - v12;
  v14 = swift_getWitnessTable(&protocol conformance descriptor for NavigationLink<A, B>, v11);
  v50 = v14;
  v49 = sub_100491944();
  v66 = v11;
  v67 = &type metadata for OpaqueButtonStyle;
  v68 = v14;
  v69 = (void *)v49;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v54 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v51 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v17 = (char *)&v48 - v16;
  v18 = sub_100007050(&qword_100827A00);
  v19 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v18);
  v57 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v48 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v52 = (uint64_t)&v48 - v22;
  v23 = a1;
  v24 = v2;
  v25 = (_QWORD *)(v2 + *(int *)(a1 + 36));
  v26 = v25[3];
  v27 = v25[4];
  sub_100016804(v25, v26);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  v30 = v29;
  LOBYTE(v27) = v31;
  v32 = sub_10054FEFC(v28, v29, v31);
  sub_1000EB41C(v28, v30, v27);
  LOBYTE(v66) = v32;
  v33 = *(_QWORD *)(v23 + 24);
  v61 = v58;
  v62 = v33;
  v63 = v24;
  v34 = sub_10011D8E8();
  v35 = NavigationLink<>.init<A>(value:label:)(&v66, sub_100491988, v60, v55, &type metadata for CardTypeFamily, v53, v34);
  v36 = v50;
  v37 = (void *)v49;
  View.buttonStyle<A>(_:)(v35, v11, &type metadata for OpaqueButtonStyle, v50, v49);
  v38.n128_f64[0] = (*(double (**)(char *, uint64_t))(v56 + 8))(v13, v11);
  v39 = static Color.white.getter(v38);
  v66 = v11;
  v67 = &type metadata for OpaqueButtonStyle;
  v68 = v36;
  v69 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v41 = (uint64_t)v48;
  v42 = v51;
  View.accentColor(_:)(v39, v51, OpaqueTypeConformance2);
  v43 = swift_release(v39);
  (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v17, v42, v43);
  v44 = sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v64 = OpaqueTypeConformance2;
  v65 = v44;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v45 = v52;
  sub_10029340C(v41, v19, v52);
  v46 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v46(v41, v19);
  sub_100291778(v45, v19, v59);
  return ((uint64_t (*)(uint64_t, uint64_t))v46)(v45, v19);
}

uint64_t sub_1004911A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata3;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a3;
  v35 = a4;
  v6 = type metadata accessor for ModifiedContent(255, a2, &type metadata for _PaddingLayout);
  v7 = sub_100007050(&qword_100835BF0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v6, v7, &type metadata for Spacer, 0, 0);
  v9 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
  v10 = type metadata accessor for VStack(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v32 - v12;
  v14 = sub_100007050(&qword_10081F658);
  v15 = type metadata accessor for ModifiedContent(0, v10, v14);
  v33 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - v19;
  v36 = a2;
  v37 = v34;
  v38 = a1;
  v26 = static HorizontalAlignment.center.getter(v21, v22, v23, v24, v25);
  VStack.init(alignment:spacing:content:)(v26, 0, 0, sub_100491994);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v10);
  v28 = sub_1004919A0();
  View.contentShape<A>(_:eoFill:)(v28, 0, v10, &type metadata for Rectangle, WitnessTable, v28);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
  v39 = WitnessTable;
  v40 = v29;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  sub_10029340C((uint64_t)v17, v15, (uint64_t)v20);
  v30 = *(void (**)(char *, uint64_t))(v33 + 8);
  v30(v17, v15);
  sub_100291778((uint64_t)v20, v15, v35);
  return ((uint64_t (*)(char *, uint64_t))v30)(v20, v15);
}

uint64_t sub_1004913F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  char v32;
  uint64_t KeyPath;
  __n128 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  uint64_t v48;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t (*v57)(uint64_t, uint64_t, __n128);
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  __n128 v69;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  char *v72;
  uint64_t WitnessTable;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  void *v80;
  _QWORD v81[3];
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  uint64_t v88;
  char v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  __int16 v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100[5];

  v5 = a2;
  v75 = a4;
  v7 = type metadata accessor for ModifiedContent(0, a2, &type metadata for _PaddingLayout);
  v76 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - v11;
  v77 = (char *)&v71 - v11;
  v14 = type metadata accessor for CardFamilyEntryLinkView(0, v5, a3, v13);
  v15 = static Edge.Set.bottom.getter(v14);
  v16 = sub_10049183C(v14);
  View.padding(_:_:)(v15, *(_QWORD *)&v16, 0, v5, a3);
  v100[3] = a3;
  v100[4] = (uint64_t)&protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  v72 = v9;
  sub_10029340C((uint64_t)v9, v7, (uint64_t)v12);
  v74 = *(void (**)(char *, uint64_t))(v76 + 8);
  v17 = v9;
  v18 = v7;
  v74(v17, v7);
  v19 = (_QWORD *)(a1 + *(int *)(v14 + 36));
  v20 = v19[3];
  v21 = v19[4];
  sub_100016804(v19, v20);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  v24 = v23;
  LOBYTE(v21) = v25;
  LOBYTE(v5) = sub_10054FEFC(v22, v23, v25);
  sub_1000EB41C(v22, v24, v21);
  v84 = sub_10011E794(v5);
  v85 = v26;
  v27 = sub_100038CA0();
  v28 = Text.init<A>(_:)(&v84, &type metadata for String, v27);
  v30 = v29;
  v71 = v31;
  LOBYTE(v22) = v32 & 1;
  KeyPath = swift_getKeyPath(&unk_10063F478);
  LOBYTE(v12) = static Edge.Set.horizontal.getter(KeyPath);
  v34.n128_f64[0] = EdgeInsets.init(_all:)(60.0);
  v35 = v34.n128_u64[0];
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v42 = static Font.footnote.getter(v34);
  v43 = swift_getKeyPath(&unk_10063F4A8);
  LODWORD(v5) = static HierarchicalShapeStyle.secondary.getter(v44);
  v45 = (uint64_t)v72;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v72, v77, v18);
  v84 = v28;
  v85 = v30;
  v46 = v22;
  v86 = v22;
  v47 = v71;
  v87 = v71;
  v88 = KeyPath;
  v89 = 1;
  v90 = (char)v12;
  v91 = v35;
  v92 = v37;
  v93 = v39;
  v94 = v41;
  v95 = 0;
  v96 = 256;
  v97 = v43;
  v98 = v42;
  v99 = v5;
  v100[0] = v45;
  v100[1] = (uint64_t)&v84;
  v82 = 0;
  v83 = 0;
  v100[2] = (uint64_t)&v82;
  v48 = v28;
  v49 = v28;
  LOBYTE(v28) = v46;
  sub_1000E439C(v48, v30, v46);
  swift_bridgeObjectRetain(v47);
  swift_retain(KeyPath);
  swift_retain(v43);
  swift_retain(v42);
  v81[0] = v18;
  v81[1] = sub_100047110(&qword_100835BF0);
  v81[2] = &type metadata for Spacer;
  v78 = WitnessTable;
  v79 = sub_1004919F4();
  v80 = &protocol witness table for Spacer;
  sub_100522738(v100, 3uLL, (uint64_t)v81);
  sub_1000E4458(v49, v30, v28);
  swift_release(v42);
  swift_release(v43);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v47, v50, v51, v52, v53, v54, v55, v56);
  v57 = (uint64_t (*)(uint64_t, uint64_t, __n128))v74;
  v74(v77, v18);
  v58 = v87;
  v59 = v88;
  v60 = v97;
  v61 = v98;
  sub_1000E4458(v84, v85, v86);
  swift_release(v60);
  swift_release(v59);
  swift_bridgeObjectRelease(v58, v62, v63, v64, v65, v66, v67, v68);
  v69 = swift_release(v61);
  return v57(v45, v18, v69);
}

double sub_10049183C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  double result;
  uint64_t v13;

  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v13 - v8;
  sub_1003F6E18((uint64_t)&v13 - v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.xxxLarge(_:), v3);
  v10 = static DynamicTypeSize.< infix(_:_:)(v9, v6);
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  result = 15.0;
  if ((v10 & 1) == 0)
  {
    result = 94.0;
    if (!*(_BYTE *)(v1 + *(int *)(a1 + 40)))
      return 30.0;
  }
  return result;
}

unint64_t sub_100491944()
{
  unint64_t result;

  result = qword_100835BF8;
  if (!qword_100835BF8)
  {
    result = swift_getWitnessTable(&unk_100636A14, &type metadata for OpaqueButtonStyle);
    atomic_store(result, (unint64_t *)&qword_100835BF8);
  }
  return result;
}

uint64_t sub_100491988@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1004911A0(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100491994@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1004913F8(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1004919A0()
{
  unint64_t result;

  result = qword_100835C00;
  if (!qword_100835C00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Rectangle, &type metadata for Rectangle);
    atomic_store(result, (unint64_t *)&qword_100835C00);
  }
  return result;
}

unint64_t sub_1004919F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835C08;
  if (!qword_100835C08)
  {
    v1 = sub_100007050(&qword_100835BF0);
    sub_100491A78();
    sub_100028384(&qword_100820870, &qword_100820878, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835C08);
  }
  return result;
}

unint64_t sub_100491A78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835C10;
  if (!qword_100835C10)
  {
    v1 = sub_100007050(&qword_100835C18);
    sub_1000E0A18(&qword_100835C20, &qword_100835C28, (void (*)(void))sub_10011DA7C);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835C10);
  }
  return result;
}

uint64_t sub_100491B1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void *v18;
  uint64_t WitnessTable;
  uint64_t v20;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _PaddingLayout);
  v2 = sub_100007050(&qword_100835BF0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v1, v2, &type metadata for Spacer, 0, 0);
  v4 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v4);
  v5 = type metadata accessor for VStack(255, v4);
  v6 = sub_100007050(&qword_10081F658);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v5);
  v20 = sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
  v15 = v7;
  v16 = (ValueMetadata *)&type metadata for Never;
  v17 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  v18 = &protocol witness table for Never;
  v8 = type metadata accessor for NavigationLink(255, &v15);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for NavigationLink<A, B>, v8);
  v10 = sub_100491944();
  v15 = v8;
  v16 = &type metadata for OpaqueButtonStyle;
  v17 = v9;
  v18 = (void *)v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v12 = sub_100007050(&qword_100827A00);
  v13 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v12);
  v15 = v8;
  v16 = &type metadata for OpaqueButtonStyle;
  v17 = v9;
  v18 = (void *)v10;
  swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
}

double destroy for DashboardCardProgressView(_QWORD *a1)
{
  double result;

  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  *(_QWORD *)&result = swift_release(a1[6]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for DashboardCardProgressView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for DashboardCardProgressView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1000F1A58((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain(v5);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for DashboardCardProgressView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for DashboardCardProgressView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DashboardCardProgressView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DashboardCardProgressView()
{
  return &type metadata for DashboardCardProgressView;
}

uint64_t sub_100491ED0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B8AE8, 1);
}

uint64_t sub_100491EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  void (**v24)();
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v27 = a1;
  v2 = sub_100047110(&qword_10081EE68);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100832E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100832E68);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100835C30);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProgressView<>.init<>()(v13);
  v16 = *(_QWORD *)(v1 + 48);
  LOBYTE(v28[0]) = *(_BYTE *)(v1 + 40);
  *((_QWORD *)&v28[0] + 1) = v16;
  v17 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v30, v17);
  if ((_BYTE)v30)
    v18 = 0.0;
  else
    v18 = 1.0;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  *(double *)&v8[*(int *)(v6 + 36)] = v18;
  v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v20 = static Alignment.center.getter(v19);
  sub_1003EC7A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, INFINITY, 0, v20, v21);
  sub_10001BE90((uint64_t)v8, &qword_100832E60);
  sub_1001004F8(v1, (uint64_t)v28);
  v22 = swift_allocObject(&unk_1007A2398, 72, 7);
  v23 = v28[1];
  *(_OWORD *)(v22 + 16) = v28[0];
  *(_OWORD *)(v22 + 32) = v23;
  *(_OWORD *)(v22 + 48) = v28[2];
  *(_QWORD *)(v22 + 64) = v29;
  sub_1004922BC((uint64_t)v11, (uint64_t)v15);
  v24 = (void (**)())&v15[*(int *)(v12 + 36)];
  *v24 = sub_1004922B4;
  v24[1] = (void (*)())v22;
  v24[2] = 0;
  v24[3] = 0;
  sub_10001BE90((uint64_t)v11, &qword_100832E68);
  return sub_100492304((uint64_t)v15, v27);
}

void sub_10049216C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  id v6;
  _QWORD aBlock[5];
  uint64_t v8;
  _OWORD v9[3];
  uint64_t v10;

  v2 = (void *)objc_opt_self(NSTimer);
  sub_1001004F8(a1, (uint64_t)v9);
  v3 = swift_allocObject(&unk_1007A23C0, 72, 7);
  v4 = v9[1];
  *(_OWORD *)(v3 + 16) = v9[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v9[2];
  *(_QWORD *)(v3 + 64) = v10;
  aBlock[4] = sub_100492350;
  v8 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000277E8;
  aBlock[3] = &unk_1007A23D8;
  v5 = _Block_copy(aBlock);
  swift_release(v8);
  v6 = objc_msgSend(v2, "scheduledTimerWithTimeInterval:repeats:block:", 0, v5, 2.0);
  _Block_release(v5);

}

uint64_t sub_10049225C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[9];
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 48);
  v5[1] = *(_BYTE *)(a2 + 40);
  v6 = v2;
  v5[0] = 0;
  v3 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(v5, v3);
}

void sub_1004922B4()
{
  uint64_t v0;

  sub_10049216C(v0 + 16);
}

uint64_t sub_1004922BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100832E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100492304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100835C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100492350(uint64_t a1)
{
  uint64_t v1;

  return sub_10049225C(a1, v1 + 16);
}

uint64_t sub_100492358()
{
  return sub_1000E0A18(&qword_100835C38, &qword_100835C30, (void (*)(void))sub_10049238C);
}

uint64_t sub_10049238C()
{
  return sub_1000E0A18(&qword_100835C40, &qword_100832E68, (void (*)(void))sub_1004923B0);
}

uint64_t sub_1004923B0()
{
  return sub_1000E0A18(&qword_100835C48, &qword_100832E60, (void (*)(void))sub_1004923D4);
}

unint64_t sub_1004923D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081EE60;
  if (!qword_10081EE60)
  {
    v1 = sub_100007050(&qword_10081EE68);
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10081EE60);
  }
  return result;
}

char *sub_100492420(char *a1, char **a2, uint64_t a3)
{
  char *v4;
  int v5;
  char *v6;
  char v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v48;
  char *v49;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v43 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = &v43[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v6 = *a2;
    v7 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    a1[8] = v7;
    v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
    v9 = v8[5];
    v10 = &v4[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v6;
    v13(v10, v11, v12);
    v15 = v8[6];
    v16 = &v4[v15];
    v17 = (uint64_t)a2 + v15;
    v18 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = v8[7];
    v20 = *(char **)((char *)a2 + v19);
    *(_QWORD *)&v4[v19] = v20;
    *(_QWORD *)&v4[v8[8]] = *(char **)((char *)a2 + v8[8]);
    v21 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
    v22 = v21[5];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v4[v22] = v23;
    v24 = v21[6];
    v25 = *(char **)((char *)a2 + v24);
    *(_QWORD *)&v4[v24] = v25;
    v26 = v21[7];
    v27 = *(char **)((char *)a2 + v26);
    *(_QWORD *)&v4[v26] = v27;
    v28 = v21[8];
    v29 = *(char **)((char *)a2 + v28);
    *(_QWORD *)&v4[v28] = v29;
    v4[v21[9]] = *((_BYTE *)a2 + v21[9]);
    v30 = v21[10];
    v48 = (uint64_t)a2 + v30;
    v49 = &v4[v30];
    v31 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v33 = v20;
    v34 = v23;
    v35 = v25;
    v36 = v27;
    v37 = v29;
    v32(v49, v48, v31);
    v38 = v21[11];
    v39 = *(char **)((char *)a2 + v38);
    *(_QWORD *)&v4[v38] = v39;
    v40 = *(int *)(a3 + 20);
    v41 = &v4[v40];
    v42 = (uint64_t)a2 + v40;
    v44 = *(void **)v42;
    v43 = *(char **)(v42 + 8);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v45 = v39;
    v46 = v44;
  }
  swift_retain(v43);
  return v4;
}

double sub_1004925EC(id *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  double result;

  v4 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v5 = (char *)a1 + v4[5];
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + v4[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  v9 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v10 = (char *)a1 + v9[10];
  v11 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  v12 = (char *)a1 + *(int *)(a2 + 20);
  *(_QWORD *)&result = swift_release(*((_QWORD *)v12 + 1)).n128_u64[0];
  return result;
}

uint64_t sub_1004926FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  char v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  int *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v47;
  uint64_t v48;

  v5 = *(void **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  v7 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v5;
  v12(v9, v10, v11);
  v14 = v7[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = v7[7];
  v19 = *(void **)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  v20 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v21 = v20[5];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  v23 = v20[6];
  v24 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = v20[7];
  v26 = *(void **)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  v27 = v20[8];
  v28 = *(void **)(a2 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  *(_BYTE *)(a1 + v20[9]) = *(_BYTE *)(a2 + v20[9]);
  v29 = v20[10];
  v47 = a2 + v29;
  v48 = a1 + v29;
  v30 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32 = v19;
  v33 = v22;
  v34 = v24;
  v35 = v26;
  v36 = v28;
  v31(v48, v47, v30);
  v37 = v20[11];
  v38 = *(void **)(a2 + v37);
  *(_QWORD *)(a1 + v37) = v38;
  v39 = *(int *)(a3 + 20);
  v40 = (_QWORD *)(a1 + v39);
  v41 = a2 + v39;
  v43 = *(void **)v41;
  v42 = *(_QWORD *)(v41 + 8);
  *v40 = *(_QWORD *)v41;
  v40[1] = v42;
  v44 = v38;
  v45 = v43;
  swift_retain(v42);
  return a1;
}

uint64_t sub_1004928A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  char v7;
  void *v8;
  id v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  int *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  v8 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v9 = v6;

  v10 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v11 = v10[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v10[7];
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  v23 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v24 = v23[5];
  v25 = *(void **)(a2 + v24);
  v26 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v27 = v25;

  v28 = v23[6];
  v29 = *(void **)(a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = v23[7];
  v33 = *(void **)(a2 + v32);
  v34 = *(void **)(a1 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  v35 = v33;

  v36 = v23[8];
  v37 = *(void **)(a2 + v36);
  v38 = *(void **)(a1 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v39 = v37;

  *(_BYTE *)(a1 + v23[9]) = *(_BYTE *)(a2 + v23[9]);
  v40 = v23[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  v44 = v23[11];
  v45 = *(void **)(a2 + v44);
  v46 = *(void **)(a1 + v44);
  *(_QWORD *)(a1 + v44) = v45;
  v47 = v45;

  v48 = *(int *)(a3 + 20);
  v49 = (_QWORD *)(a1 + v48);
  v50 = a2 + v48;
  v51 = *(void **)(a1 + v48);
  v52 = *(void **)v50;
  *v49 = *(_QWORD *)v50;
  v53 = v52;

  v54 = v49[1];
  v55 = *(_QWORD *)(v50 + 8);
  v49[1] = v55;
  swift_retain(v55);
  swift_release(v54);
  return a1;
}

uint64_t sub_100492A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[7];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v19 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v20 = v19[5];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  v22 = v19[6];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v24 = v19[7];
  v25 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);

  v26 = v19[8];
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  *(_BYTE *)(a1 + v19[9]) = *(_BYTE *)(a2 + v19[9]);
  v28 = v19[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = v19[11];
  v33 = *(void **)(a1 + v32);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);

  v34 = *(int *)(a3 + 20);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = *(void **)(a1 + v34);
  *v35 = *v36;

  v38 = v35[1];
  v35[1] = v36[1];
  swift_release(v38);
  return a1;
}

uint64_t sub_100492C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100492C24);
}

uint64_t sub_100492C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_100492CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100492CB8);
}

uint64_t sub_100492CB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for ActivitySharingAvatarView(uint64_t a1)
{
  uint64_t result;

  result = qword_100835CA8;
  if (!qword_100835CA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivitySharingAvatarView);
  return result;
}

uint64_t sub_100492D6C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ActivitySharingHighlightViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10063F590;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100492DDC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B8B38, 1);
}

uint64_t sub_100492DEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char *v47;
  _QWORD v48[8];
  unsigned __int8 v49;

  v44 = a1;
  v43 = type metadata accessor for _TaskModifier(0);
  __chkstk_darwin(v43);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v47 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActivitySharingAvatarView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100047110(&qword_100835CE0);
  __chkstk_darwin(v39);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v1;
  sub_1004930E4(v1, (uint64_t)v48);
  v13 = v48[0];
  v12 = v48[1];
  v14 = v48[4];
  v37 = v48[3];
  v38 = v48[2];
  v15 = v48[5];
  v36 = v48[6];
  v46 = v48[7];
  v45 = v49;
  sub_10004F8C8(v1, (uint64_t)v9, type metadata accessor for ActivitySharingAvatarView);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_1007A2448, v17 + v8, v16 | 7);
  v19 = sub_100047C88((uint64_t)v9, v18 + v17, type metadata accessor for ActivitySharingAvatarView);
  v20 = v47;
  static TaskPriority.userInitiated.getter(v19);
  v22 = v40;
  v21 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v3[*(int *)(v43 + 20)], v20, v41);
  v35 = v3;
  *(_QWORD *)v3 = &unk_100835CF0;
  *((_QWORD *)v3 + 1) = v18;
  sub_10004F8C8((uint64_t)v3, (uint64_t)&v11[*(int *)(v39 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _TaskModifier);
  *(_QWORD *)v11 = v13;
  *((_QWORD *)v11 + 1) = v12;
  v24 = v37;
  v23 = v38;
  *((_QWORD *)v11 + 2) = v38;
  *((_QWORD *)v11 + 3) = v24;
  *((_QWORD *)v11 + 4) = v14;
  *((_QWORD *)v11 + 5) = v15;
  v25 = v36;
  v26 = v46;
  *((_QWORD *)v11 + 6) = v36;
  *((_QWORD *)v11 + 7) = v26;
  v27 = v45;
  v11[64] = v45;
  sub_100493720(v13, v12, v23, v24, v14, v15, v25, v26, v27);
  sub_1002D7E34((uint64_t)v35);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v47, v21);
  sub_100493730(v13, v12, v23, v24, v14, v15, v25, v46, v45);
  v28 = v42 + *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 20);
  v29 = sub_100047110(&qword_100835CF8);
  v30 = v44;
  v31 = v44 + *(int *)(v29 + 52);
  v32 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v31, v28, v32);
  return sub_100493740((uint64_t)v11, v30);
}

double sub_1004930E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double result;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  _BYTE v18[24];
  __int128 v19;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  unsigned __int8 v29;
  __int128 v30;

  v21 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for ActivitySharingAvatarView(0) + 20));
  v3 = sub_100047110(&qword_100835D08);
  v4 = State.wrappedValue.getter(v18, v3);
  if (*(_QWORD *)v18)
  {
    v5 = *(id *)v18;
    v6 = Image.init(uiImage:)(v5);
    *(_QWORD *)v18 = v6;
    *(_OWORD *)&v18[8] = 0u;
    v19 = 0u;
    memset(v20, 0, 25);
    swift_retain(v6);
    v7 = sub_100047110(&qword_1008231E0);
    v8 = sub_100340828();
    _ConditionalContent<>.init(storage:)(v18, &type metadata for Image, v7, &protocol witness table for Image, v8);
    swift_release(v6);

  }
  else
  {
    v9 = static Alignment.center.getter(v4);
    _FrameLayout.init(width:height:alignment:)(&v26, 0x4040000000000000, 0, 0x4040000000000000, 0, v9, v10);
    *(_OWORD *)v18 = xmmword_100630D40;
    *(_QWORD *)&v18[16] = v26;
    *(_QWORD *)&v19 = v27;
    *((_QWORD *)&v19 + 1) = v28;
    *(_QWORD *)&v20[0] = v29;
    *(_OWORD *)((char *)v20 + 8) = v30;
    BYTE8(v20[1]) = 1;
    v11 = sub_100047110(&qword_1008231E0);
    v12 = sub_100340828();
    _ConditionalContent<>.init(storage:)(v18, &type metadata for Image, v11, &protocol witness table for Image, v12);
  }
  result = *(double *)&v21;
  v14 = v22;
  v15 = v23;
  v16 = v24;
  v17 = v25;
  *(_OWORD *)a2 = v21;
  *(_OWORD *)(a2 + 16) = v14;
  *(_OWORD *)(a2 + 32) = v15;
  *(_OWORD *)(a2 + 48) = v16;
  *(_BYTE *)(a2 + 64) = v17;
  return result;
}

uint64_t sub_10049326C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[6] = a1;
  v2 = *(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewModel(0) - 8);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 + 64);
  v1[8] = v3;
  v1[9] = swift_task_alloc((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10081E650);
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[11] = v5;
  v1[12] = static MainActor.shared.getter(v5);
  return swift_task_switch(sub_100493308, 0, 0);
}

uint64_t sub_100493308()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;

  v2 = v0[9];
  v1 = v0[10];
  v4 = v0[7];
  v3 = v0[8];
  v5 = v0[6];
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  sub_10004F8C8(v5, v2, type metadata accessor for ActivitySharingHighlightViewModel);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(&unk_1007A2470, v8 + v3, v7 | 7);
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  sub_100047C88(v2, v9 + v8, type metadata accessor for ActivitySharingHighlightViewModel);
  v10 = sub_10020DCA0(v1, (uint64_t)&unk_100835D00, v9);
  v0[13] = v10;
  v11 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  v0[14] = v11;
  v12 = sub_100493944();
  *v11 = v0;
  v11[1] = sub_100493420;
  return Task<>.value.getter(v0 + 4, v10, v12);
}

uint64_t sub_100493420()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_release(v1);
  return swift_task_switch(sub_10049347C, 0, 0);
}

uint64_t sub_10049347C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[11];
  v0[15] = v0[4];
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004934D0, v2, v3);
}

uint64_t sub_1004934D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 96));
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v4 + *(int *)(type metadata accessor for ActivitySharingAvatarView(0) + 20));
  *(_QWORD *)(v0 + 40) = v1;
  v5 = sub_100047110(&qword_100835D08);
  State.wrappedValue.setter(v0 + 40, v5);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100493568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for ActivitySharingAvatarView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v7 + v8[5];
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[6];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  v13 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v14 = v7 + v13[10];
  v15 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);

  v16 = v7 + *(int *)(v1 + 20);
  swift_release(*(_QWORD *)(v16 + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004936BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingAvatarView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_100835CEC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1000DA0E4;
  return sub_10049326C(v3);
}

uint64_t sub_100493720(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_100493730(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_100493740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100835CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100493788()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v7 + v8[5];
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[6];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  v13 = v7 + v1[10];
  v14 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004938C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewModel(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_10082ABAC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000EA380;
  return sub_10026FDD0(a1, v5, v6, v7);
}

unint64_t sub_100493944()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008284B0;
  if (!qword_1008284B0)
  {
    v1 = objc_opt_self(UIImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1008284B0);
  }
  return result;
}

unint64_t sub_100493984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835D10;
  if (!qword_100835D10)
  {
    v1 = sub_100007050(&qword_100835CF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835D10);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareActivityCard()
{
  return &type metadata for ShareActivityCard;
}

uint64_t sub_1004939E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B8B7C, 1);
}

uint64_t sub_1004939F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v48 = a3;
  v49 = a4;
  v47 = a2;
  v52 = a5;
  v53 = type metadata accessor for AccessibilityChildBehavior(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v50);
  v9 = (_OWORD *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100047110(&qword_100832E50);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100832E58);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100835D18);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100835D20);
  __chkstk_darwin(v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter(v22, v23, v24, v25, v26);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v27 = sub_100047110(&qword_100835D28);
  v28 = sub_100493D6C(a1, v47, v48, v49, (uint64_t)&v12[*(int *)(v27 + 44)]);
  v29 = static Alignment.center.getter(v28);
  sub_1003EC7FC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v29, v30);
  sub_10001BE90((uint64_t)v12, &qword_100832E50);
  v31 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v32 = Color.init(uiColor:)(v31);
  LOBYTE(a1) = static Edge.Set.all.getter(v32);
  sub_100021CC0((uint64_t)v15, (uint64_t)v18, &qword_100832E58);
  v33 = &v18[*(int *)(v16 + 36)];
  *(_QWORD *)v33 = v32;
  v33[8] = a1;
  sub_10001BE90((uint64_t)v15, &qword_100832E58);
  v34 = (char *)v9 + *(int *)(v50 + 20);
  v35 = enum case for RoundedCornerStyle.continuous(_:);
  v36 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v34, v35, v36);
  __asm { FMOV            V0.2D, #10.0 }
  *v9 = _Q0;
  v42 = (uint64_t)&v21[*(int *)(v19 + 36)];
  sub_100234158((uint64_t)v9, v42);
  *(_WORD *)(v42 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0((uint64_t)v18, (uint64_t)v21, &qword_100835D18);
  sub_1001D2ACC((uint64_t)v9);
  v43 = sub_10001BE90((uint64_t)v18, &qword_100835D18);
  static AccessibilityChildBehavior.combine.getter(v43);
  v44 = sub_100494C40();
  View.accessibilityElement(children:)(v7, v19, v44);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v53);
  return sub_10001BE90((uint64_t)v21, &qword_100835D20);
}

uint64_t sub_100493D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  char v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  uint64_t v49;
  char v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  char v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  __n128 v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  SEL v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  uint64_t v148;
  uint64_t v149;
  int v150;
  int v151;
  uint64_t v152;
  CHWorkoutDetailHeartRateTableViewCell *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  __int128 v167;
  __int128 v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unsigned __int8 v182;
  _BYTE v183[7];
  _BYTE v184[7];
  int v185;
  char v186;
  char v187;
  _BYTE v188[7];
  unsigned __int8 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  _BYTE v209[7];
  __int128 v210;
  __int128 v211;
  char v212;

  v159 = a3;
  v160 = a4;
  v155 = a1;
  v156 = a2;
  v170 = a5;
  v171 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v171);
  v169 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100835D50);
  v162 = *(_QWORD *)(v6 - 8);
  v163 = v6;
  __chkstk_darwin(v6);
  v157 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100047110(&qword_100835D58);
  __chkstk_darwin(v161);
  v158 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100047110(&qword_100835D60);
  __chkstk_darwin(v165);
  v164 = (uint64_t)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v167 = sub_100047110(&qword_100835D68);
  __chkstk_darwin(v167);
  v166 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v168 = sub_100047110(&qword_100835D70);
  __chkstk_darwin(v168);
  v180 = (uint64_t)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v181 = (uint64_t)&v148 - v13;
  v14 = type metadata accessor for Font.TextStyle(0);
  v176 = *(_QWORD *)(v14 - 8);
  v177 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v17);
  v19 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100835D78);
  __chkstk_darwin(v20);
  v179 = (uint64_t)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v178 = (uint64_t)&v148 - v23;
  v24 = Image.init(systemName:)(0x332E6E6F73726570, 0xED00006C6C69662ELL);
  v25 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v19, 1, 1, v25);
  v26 = static Font.system(size:weight:design:)(0, 1, v19, 47.0);
  sub_10001BE90((uint64_t)v19, &qword_10081F2F8);
  KeyPath = swift_getKeyPath(&unk_10063F698);
  v28 = static Edge.Set.all.getter(KeyPath);
  v30 = static Color.secondary.getter(v29);
  v31 = swift_getKeyPath(&unk_10063F6C8);
  v199 = v24;
  v200 = KeyPath;
  v201 = v26;
  LOBYTE(v202) = v28;
  v203 = xmmword_100622F80;
  v204 = xmmword_100630D30;
  LOBYTE(v205) = 0;
  v206 = v31;
  v207 = v30;
  v32 = sub_100047110(&qword_100835D80);
  v33 = sub_100494DDC();
  View.accessibilityHidden(_:)(1, v32, v33);
  swift_release(v30);
  swift_release(v31);
  swift_release(v26);
  swift_release(KeyPath);
  swift_release(v24);
  v34 = LocalizedStringKey.init(stringLiteral:)(0x43415F4552414853, 0xEE00595449564954);
  v35 = Text.init(_:tableName:bundle:comment:)(v34);
  v37 = v36;
  v39 = v38;
  v41 = v40 & 1;
  v43 = v176;
  v42 = v177;
  v44 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v176 + 104))(v16, enum case for Font.TextStyle.headline(_:), v177);
  static Font.Weight.semibold.getter(v44);
  v45 = static Font.system(_:weight:)(v16);
  v46.n128_f64[0] = (*(double (**)(char *, uint64_t))(v43 + 8))(v16, v42);
  v47 = Text.font(_:)(v45, v35, v37, v41, v39, v46);
  v153 = v48;
  v154 = v47;
  v152 = v49;
  LOBYTE(v16) = v50;
  swift_release(v45);
  v151 = v16 & 1;
  sub_1000E4458(v35, v37, v41);
  swift_bridgeObjectRelease(v39, v51, v52, v53, v54, v55, v56, v57);
  v150 = static Edge.Set.all.getter(v58);
  v59 = v155;
  v60 = v156;
  v199 = sub_100494E80(v155, v156);
  v200 = v61;
  v62 = sub_100038CA0();
  v63 = Text.init<A>(_:)(&v199, &type metadata for String, v62);
  v65 = v64;
  v67 = v66;
  v69 = v68 & 1;
  v71 = static Color.secondary.getter(v70);
  v72 = Text.foregroundColor(_:)(v71, v63, v65, v69, v67);
  v148 = v73;
  v149 = v72;
  LOBYTE(v45) = v74;
  v172 = v75;
  swift_release(v71);
  sub_1000E4458(v63, v65, v69);
  swift_bridgeObjectRelease(v67, v76, v77, v78, v79, v80, v81, v82);
  v176 = swift_getKeyPath(&unk_10063F6F8);
  v177 = static Font.subheadline.getter(v83);
  v175 = swift_getKeyPath(&unk_10063F698);
  v173 = swift_getKeyPath(&unk_10063F728);
  v174 = static Edge.Set.all.getter(v173);
  v189 = v45 & 1;
  v187 = 1;
  v182 = 0;
  v84 = (_QWORD *)swift_allocObject(&unk_1007A2550, 48, 7);
  v84[2] = v59;
  v84[3] = v60;
  v85 = v159;
  v86 = v160;
  v84[4] = v159;
  v84[5] = v86;
  swift_retain(v85);
  swift_retain(v59);
  v87 = sub_100047110(&qword_100835DA0);
  v88 = sub_1000E0A18(&qword_100835DA8, &qword_100835DA0, (void (*)(void))sub_1004950B8);
  v89 = v157;
  Button.init(action:label:)(sub_1004950AC, v84, sub_10049491C, 0, v87, v88);
  v91 = static Color.white.getter(v90);
  v92 = swift_getKeyPath(&unk_10063F6C8);
  v94 = v162;
  v93 = v163;
  v95 = (uint64_t)v158;
  (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v158, v89, v163);
  v96 = (uint64_t *)(v95 + *(int *)(v161 + 36));
  *v96 = v92;
  v96[1] = v91;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v93);
  v97 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
  v98 = Color.init(uiColor:)(v97);
  LOBYTE(v92) = static Edge.Set.all.getter(v98);
  v99 = v164;
  sub_100021CC0(v95, v164, &qword_100835D58);
  v100 = v99 + *(int *)(v165 + 36);
  *(_QWORD *)v100 = v98;
  *(_BYTE *)(v100 + 8) = v92;
  sub_10001BE90(v95, &qword_100835D58);
  v101 = v169;
  v102 = &v169[*(int *)(v171 + 20)];
  v103 = enum case for RoundedCornerStyle.continuous(_:);
  v104 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 104))(v102, v103, v104);
  __asm { FMOV            V0.2D, #10.0 }
  *v101 = _Q0;
  v110 = (uint64_t)v166;
  v111 = (uint64_t)&v166[*(int *)(v167 + 36)];
  sub_100234158((uint64_t)v101, v111);
  *(_WORD *)(v111 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0(v99, v110, &qword_100835D60);
  sub_1001D2ACC((uint64_t)v101);
  v112 = sub_10001BE90(v99, &qword_100835D60);
  LOBYTE(v111) = static Edge.Set.bottom.getter(v112);
  v113 = EdgeInsets.init(_all:)(30.0);
  v115 = v114;
  v117 = v116;
  v119 = v118;
  v120 = v180;
  sub_100021CC0(v110, v180, &qword_100835D68);
  v121 = v120 + *(int *)(v168 + 36);
  *(_BYTE *)v121 = v111;
  *(double *)(v121 + 8) = v113;
  *(_QWORD *)(v121 + 16) = v115;
  *(_QWORD *)(v121 + 24) = v117;
  *(_QWORD *)(v121 + 32) = v119;
  *(_BYTE *)(v121 + 40) = 0;
  sub_10001BE90(v110, &qword_100835D68);
  v122 = v181;
  sub_1004950DC(v120, v181);
  v123 = v179;
  sub_100021CC0(v178, v179, &qword_100835D78);
  LOBYTE(v24) = v189;
  LODWORD(v169) = v189;
  LOBYTE(v110) = v187;
  LODWORD(v171) = v182;
  sub_100021CC0(v122, v120, &qword_100835D70);
  v124 = v170;
  sub_100021CC0(v123, v170, &qword_100835D78);
  v125 = (int *)sub_100047110(&qword_100835DC0);
  v126 = v124 + v125[12];
  v127 = v124;
  v129 = v153;
  v128 = v154;
  v130 = v152;
  *(_QWORD *)v126 = v154;
  *(_QWORD *)(v126 + 8) = v130;
  v131 = v150;
  LOBYTE(v120) = v151;
  *(_BYTE *)(v126 + 16) = v151;
  *(_QWORD *)(v126 + 24) = v129;
  *(_BYTE *)(v126 + 32) = v131;
  *(_QWORD *)(v126 + 40) = 0;
  *(_QWORD *)(v126 + 48) = 0;
  *(_OWORD *)(v126 + 56) = xmmword_100622F60;
  *(_BYTE *)(v126 + 72) = 0;
  v132 = v124 + v125[16];
  v134 = v148;
  v133 = v149;
  *(_QWORD *)&v190 = v149;
  *((_QWORD *)&v190 + 1) = v148;
  LOBYTE(v191) = v24;
  *(_DWORD *)((char *)&v191 + 1) = *(_DWORD *)v188;
  DWORD1(v191) = *(_DWORD *)&v188[3];
  *((_QWORD *)&v191 + 1) = v172;
  v192 = (unint64_t)v176;
  LOBYTE(v193) = v110;
  LOBYTE(v24) = v110;
  *(_WORD *)((char *)&v193 + 1) = 256;
  BYTE7(v193) = v186;
  *(_DWORD *)((char *)&v193 + 3) = v185;
  *((_QWORD *)&v193 + 1) = v175;
  *(_QWORD *)&v194 = v177;
  *((_QWORD *)&v194 + 1) = v173;
  LOBYTE(v195) = 1;
  DWORD1(v195) = *(_DWORD *)&v184[3];
  *(_DWORD *)((char *)&v195 + 1) = *(_DWORD *)v184;
  BYTE8(v195) = v174;
  HIDWORD(v195) = *(_DWORD *)&v183[3];
  *(_DWORD *)((char *)&v195 + 9) = *(_DWORD *)v183;
  v167 = xmmword_10063F600;
  v168 = xmmword_10063F610;
  v196 = xmmword_10063F600;
  v197 = xmmword_10063F610;
  v198 = v171;
  v135 = v195;
  *(_BYTE *)(v132 + 128) = v171;
  *(_OWORD *)(v132 + 96) = xmmword_10063F600;
  *(_OWORD *)(v132 + 112) = xmmword_10063F610;
  v136 = v190;
  v137 = v191;
  *(_OWORD *)(v132 + 64) = v194;
  *(_OWORD *)(v132 + 80) = v135;
  v138 = v193;
  *(_OWORD *)(v132 + 32) = v192;
  *(_OWORD *)(v132 + 48) = v138;
  *(_OWORD *)v132 = v136;
  *(_OWORD *)(v132 + 16) = v137;
  v139 = v180;
  sub_100021CC0(v180, v127 + v125[20], &qword_100835D70);
  sub_1000E439C(v128, v130, v120);
  swift_bridgeObjectRetain(v129);
  sub_100495124((uint64_t)&v190);
  sub_10001BE90(v181, &qword_100835D70);
  sub_10001BE90(v178, &qword_100835D78);
  sub_10001BE90(v139, &qword_100835D70);
  v199 = v133;
  v200 = v134;
  LOBYTE(v201) = (_BYTE)v169;
  *(_DWORD *)((char *)&v201 + 1) = *(_DWORD *)v188;
  HIDWORD(v201) = *(_DWORD *)&v188[3];
  v202 = v172;
  v203 = (unint64_t)v176;
  LOWORD(v204) = v24;
  BYTE2(v204) = 1;
  *(_DWORD *)((char *)&v204 + 3) = v185;
  BYTE7(v204) = v186;
  *((_QWORD *)&v204 + 1) = v175;
  v205 = v177;
  v206 = v173;
  LOBYTE(v207) = 1;
  HIDWORD(v207) = *(_DWORD *)&v184[3];
  *(_DWORD *)((char *)&v207 + 1) = *(_DWORD *)v184;
  v208 = v174;
  *(_DWORD *)&v209[3] = *(_DWORD *)&v183[3];
  *(_DWORD *)v209 = *(_DWORD *)v183;
  v210 = v167;
  v211 = v168;
  v212 = v171;
  sub_100495198((uint64_t)&v199);
  sub_1000E4458(v128, v130, v120);
  swift_bridgeObjectRelease(v129, v140, v141, v142, v143, v144, v145, v146);
  return sub_10001BE90(v179, &qword_100835D78);
}

void sub_1004948A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  if (a3)
  {
    swift_retain(a3);
    sub_10029D9F0(v5);
    swift_release(a3);
  }
  else
  {
    v7 = type metadata accessor for ActivitySharingNavigationCoordinator();
    v8 = sub_1000083D8(&qword_10081EDC0, (uint64_t (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator, (uint64_t)&unk_1006328F8);
    EnvironmentObject.error()(0, a4, v7, v8);
    __break(1u);
  }
}

__n128 sub_10049491C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  char v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  char v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t v35;
  uint64_t v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __n128 result;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  _OWORD v61[15];
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  _BYTE v70[7];
  CHWorkoutDetailHeartRateTableViewCell *v71;
  char v72;
  _BYTE v73[7];
  __int128 v74;
  __int128 v75;
  char v76;
  _BYTE v77[7];
  uint64_t v78;
  char v79;
  _BYTE v80[7];
  uint64_t v81;
  char v82;
  _BYTE v83[7];
  __int128 v84;
  _BYTE v85[7];
  char v86;
  _BYTE v87[7];
  char v88;
  _BYTE v89[7];
  char v90;
  _BYTE v91[7];
  _BYTE v92[7];
  char v93;

  v2 = type metadata accessor for Font.TextStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000022, 0x80000001006A0DA0);
  v7 = Text.init(_:tableName:bundle:comment:)(v6);
  v9 = v8;
  v58 = v10;
  v12 = v11 & 1;
  v13.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Font.TextStyle.body(_:), v2);
  static Font.Weight.bold.getter(v13);
  v14 = static Font.system(_:weight:)(v5);
  v15.n128_f64[0] = (*(double (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = v58;
  v17 = Text.font(_:)(v14, v7, v9, v12, v58, v15);
  v59 = v18;
  v60 = v19;
  LOBYTE(v2) = v20;
  swift_release(v14);
  LOBYTE(v14) = v2 & 1;
  sub_1000E4458(v7, v9, v12);
  swift_bridgeObjectRelease(v16, v21, v22, v23, v24, v25, v26, v27);
  v29 = static Edge.Set.all.getter(v28);
  LOBYTE(v2) = v29;
  v30 = static Alignment.center.getter(v29);
  v32 = _FrameLayout.init(width:height:alignment:)(&v62, 0x406C200000000000, 0, 0, 1, v30, v31);
  v93 = v14;
  v90 = 0;
  v88 = v63;
  v86 = v65;
  v33 = v17;
  v67 = v17;
  v35 = v59;
  v34 = v60;
  v68 = v59;
  v69 = v14;
  *(_DWORD *)v70 = *(_DWORD *)v92;
  *(_DWORD *)&v70[3] = *(_DWORD *)&v92[3];
  v71 = v60;
  v72 = v2;
  *(_DWORD *)v73 = *(_DWORD *)v91;
  *(_DWORD *)&v73[3] = *(_DWORD *)&v91[3];
  __asm { FMOV            V0.2D, #10.0 }
  v74 = _Q0;
  v75 = _Q0;
  v76 = 0;
  *(_DWORD *)v77 = *(_DWORD *)v89;
  *(_DWORD *)&v77[3] = *(_DWORD *)&v89[3];
  v78 = v62;
  v79 = v63;
  *(_DWORD *)v80 = *(_DWORD *)v87;
  *(_DWORD *)&v80[3] = *(_DWORD *)&v87[3];
  v81 = v64;
  v82 = v65;
  *(_DWORD *)&v83[3] = *(_DWORD *)&v85[3];
  *(_DWORD *)v83 = *(_DWORD *)v85;
  v84 = v66;
  v41 = static Alignment.center.getter(v32);
  sub_1003EC854(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v61, 40.0, 0, 0.0, 1, v41, v42);
  sub_1000E4458(v33, v35, v14);
  swift_bridgeObjectRelease(v34, v43, v44, v45, v46, v47, v48, v49);
  v50 = v61[13];
  *(_OWORD *)(a1 + 192) = v61[12];
  *(_OWORD *)(a1 + 208) = v50;
  *(_OWORD *)(a1 + 224) = v61[14];
  v51 = v61[9];
  *(_OWORD *)(a1 + 128) = v61[8];
  *(_OWORD *)(a1 + 144) = v51;
  v52 = v61[11];
  *(_OWORD *)(a1 + 160) = v61[10];
  *(_OWORD *)(a1 + 176) = v52;
  v53 = v61[5];
  *(_OWORD *)(a1 + 64) = v61[4];
  *(_OWORD *)(a1 + 80) = v53;
  v54 = v61[7];
  *(_OWORD *)(a1 + 96) = v61[6];
  *(_OWORD *)(a1 + 112) = v54;
  v55 = v61[1];
  *(_OWORD *)a1 = v61[0];
  *(_OWORD *)(a1 + 16) = v55;
  result = (__n128)v61[3];
  *(_OWORD *)(a1 + 32) = v61[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_100494C34@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1004939F0(*v1, v1[1], v1[2], v1[3], a1);
}

unint64_t sub_100494C40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835D30;
  if (!qword_100835D30)
  {
    v1 = sub_100007050(&qword_100835D20);
    sub_100494CC4();
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835D30);
  }
  return result;
}

unint64_t sub_100494CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835D38;
  if (!qword_100835D38)
  {
    v1 = sub_100007050(&qword_100835D18);
    sub_100494D48();
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835D38);
  }
  return result;
}

unint64_t sub_100494D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835D40;
  if (!qword_100835D40)
  {
    v1 = sub_100007050(&qword_100832E58);
    sub_100028384(&qword_100835D48, &qword_100832E50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835D40);
  }
  return result;
}

unint64_t sub_100494DDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835D88;
  if (!qword_100835D88)
  {
    v1 = sub_100007050(&qword_100835D80);
    sub_1000E0A18((unint64_t *)&qword_100835D90, &qword_100835D98, (void (*)(void))sub_1001D2DD0);
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835D88);
  }
  return result;
}

uint64_t sub_100494E80(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38[3];

  if (a1)
  {
    KeyPath = swift_getKeyPath(&unk_10063F758);
    v4 = swift_getKeyPath(&unk_10063F780);
    swift_retain(a1);
    static Published.subscript.getter(v38, v5, KeyPath, v4);
    swift_release(a1);
    swift_release(KeyPath);
    swift_release(v4);
    if (v38[0])
    {
      v14 = v38[1];
      v13 = (uint64_t)v38[2];
      swift_bridgeObjectRelease(v38[0], v6, v7, v8, v9, v10, v11, v12);
      swift_bridgeObjectRelease(v14, v15, v16, v17, v18, v19, v20, v21);
      if ((unint64_t)v13 >> 62)
      {
        if (v13 >= 0)
          v29 = v13 & 0xFFFFFFFFFFFFFF8;
        else
          v29 = v13;
        swift_bridgeObjectRetain(v13);
        _CocoaArrayWrapper.endIndex.getter(v29);
        swift_bridgeObjectRelease_n(v13, 2);
      }
      else
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v13, v22, v23, v24, v25, v26, v27, v28);
      }
    }
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    return v33;
  }
  else
  {
    v36 = type metadata accessor for ActivitySharingFriendListDataProvider(0);
    v37 = sub_1000083D8((unint64_t *)&qword_1008240B0, type metadata accessor for ActivitySharingFriendListDataProvider, (uint64_t)&unk_100625DD8);
    result = EnvironmentObject.error()(0, a2, v36, v37);
    __break(1u);
  }
  return result;
}

uint64_t sub_100495080()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1004950AC()
{
  uint64_t *v0;

  sub_1004948A8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1004950B8()
{
  return sub_1000E0A18(&qword_100835DB0, &qword_100835DB8, (void (*)(void))sub_100192040);
}

uint64_t sub_1004950DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100835D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100495124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_100495198(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v7, v8, v9, v10, v11, v12, v13);
  swift_release(v5);
  return a1;
}

uint64_t sub_100495214()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_100835D20);
  v1[1] = sub_100494C40();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t ConditionalFrameWidthModifier.init(applyFrame:width:)(char a1)
{
  return a1 & 1;
}

uint64_t ConditionalFrameHeightModifier.body(content:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _OWORD v31[3];

  v30[0] = a3;
  v30[1] = a5;
  v8 = sub_100047110(&qword_100835DC8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100835DD0);
  __chkstk_darwin(v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100835DD8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || (a4 & 1) != 0)
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    v27(v11, a1, v8, v17);
    ((void (*)(char *, char *, uint64_t))v27)(v14, v11, v8);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v28 = sub_10049578C(&qword_100835DE0, &qword_100835DD8, &qword_100835DE8, &qword_100835DC8);
    v29 = sub_100495804(&qword_100835DE8, &qword_100835DC8);
    _ConditionalContent<>.init(storage:)(v14, v15, v8, v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v20 = static Alignment.center.getter(v16);
    _FrameLayout.init(width:height:alignment:)(v31, 0, 1, v30[0], 0, v20, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v19, a1, v8);
    v22 = &v19[*(int *)(v15 + 36)];
    v23 = v31[1];
    *(_OWORD *)v22 = v31[0];
    *((_OWORD *)v22 + 1) = v23;
    *((_OWORD *)v22 + 2) = v31[2];
    sub_100021CC0((uint64_t)v19, (uint64_t)v14, &qword_100835DD8);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v24 = sub_10049578C(&qword_100835DE0, &qword_100835DD8, &qword_100835DE8, &qword_100835DC8);
    v25 = sub_100495804(&qword_100835DE8, &qword_100835DC8);
    _ConditionalContent<>.init(storage:)(v14, v15, v8, v24, v25);
    return sub_10001BE90((uint64_t)v19, &qword_100835DD8);
  }
}

uint64_t sub_1004954F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ConditionalFrameHeightModifier.body(content:)(a1, *(_BYTE *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t ConditionalFrameWidthModifier.body(content:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _OWORD v31[3];

  v30[0] = a3;
  v30[1] = a5;
  v8 = sub_100047110(&qword_100835DF0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100835DF8);
  __chkstk_darwin(v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100835E00);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || (a4 & 1) != 0)
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    v27(v11, a1, v8, v17);
    ((void (*)(char *, char *, uint64_t))v27)(v14, v11, v8);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v28 = sub_10049578C(&qword_100835E08, &qword_100835E00, &qword_100835E10, &qword_100835DF0);
    v29 = sub_100495804(&qword_100835E10, &qword_100835DF0);
    _ConditionalContent<>.init(storage:)(v14, v15, v8, v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v20 = static Alignment.center.getter(v16);
    _FrameLayout.init(width:height:alignment:)(v31, v30[0], 0, 0, 1, v20, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v19, a1, v8);
    v22 = &v19[*(int *)(v15 + 36)];
    v23 = v31[1];
    *(_OWORD *)v22 = v31[0];
    *((_OWORD *)v22 + 1) = v23;
    *((_OWORD *)v22 + 2) = v31[2];
    sub_100021CC0((uint64_t)v19, (uint64_t)v14, &qword_100835E00);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v24 = sub_10049578C(&qword_100835E08, &qword_100835E00, &qword_100835E10, &qword_100835DF0);
    v25 = sub_100495804(&qword_100835E10, &qword_100835DF0);
    _ConditionalContent<>.init(storage:)(v14, v15, v8, v24, v25);
    return sub_10001BE90((uint64_t)v19, &qword_100835E00);
  }
}

uint64_t sub_10049578C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007050(a2);
    sub_100495804(a3, a4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100495804(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100007050(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100495844(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ConditionalFrameHeightModifier.body(content:)>>, 1);
}

uint64_t sub_100495854(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ConditionalFrameWidthModifier.body(content:)>>, 1);
}

uint64_t sub_100495864()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_10049587C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ConditionalFrameWidthModifier.body(content:)(a1, *(_BYTE *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for ConditionalFrameHeightModifier()
{
  return &type metadata for ConditionalFrameHeightModifier;
}

uint64_t _s10FitnessApp30ConditionalFrameHeightModifierVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s10FitnessApp30ConditionalFrameHeightModifierVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionalFrameWidthModifier()
{
  return &type metadata for ConditionalFrameWidthModifier;
}

unint64_t sub_100495950()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835E18;
  if (!qword_100835E18)
  {
    v1 = sub_100007050(&qword_100835E20);
    sub_10049578C(&qword_100835DE0, &qword_100835DD8, &qword_100835DE8, &qword_100835DC8);
    sub_100495804(&qword_100835DE8, &qword_100835DC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835E18);
  }
  return result;
}

unint64_t sub_1004959F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835E28;
  if (!qword_100835E28)
  {
    v1 = sub_100007050(&qword_100835E30);
    sub_10049578C(&qword_100835E08, &qword_100835E00, &qword_100835E10, &qword_100835DF0);
    sub_100495804(&qword_100835E10, &qword_100835DF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835E28);
  }
  return result;
}

id sub_100495AA4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)ARUIRenderer), "init");
  qword_10086ABF0 = (uint64_t)result;
  return result;
}

uint64_t sub_100495AD8(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for ActivityRingsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

__n128 initializeWithTake for ActivityRingsView(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityRingsView(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityRingsView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 19))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityRingsView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingsView()
{
  return &type metadata for ActivityRingsView;
}

void *sub_100495CA0(double a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  id v8;
  id v9;
  float v10;
  void *v11;
  float v12;
  void *v13;
  double v14;
  __n128 v15;
  double v16;
  float v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  char **v23;
  id v24;
  id v25;
  id v26;

  v7 = a4 & 1;
  v8 = objc_msgSend((id)objc_opt_self(ARUIRingGroup), "activityRingGroupForRingType:", 3);
  v9 = objc_msgSend(objc_allocWithZone((Class)ARUIRingsView), "initWithRingGroup:", v8);

  v10 = a1;
  v11 = (void *)ARUIRingsView.withRingGroupDiameter(_:)(v10);

  v12 = a1 * 0.105769231;
  v13 = (void *)ARUIRingsView.withRingGroupThickness(_:)(v12);

  v14 = (a1 + -29.0) / 114.0;
  v15.n128_f64[0] = v14 * -0.0288461538 + 0.0432692308;
  if (v14 >= 1.0)
    v15.n128_f64[0] = 0.0144230769;
  if (v14 > 0.0)
    v16 = v15.n128_f64[0];
  else
    v16 = 0.0432692308;
  v17 = v16 * a1;
  v18 = (void *)ARUIRingsView.withRingGroupInterspacing(_:)(v17, v15);

  v19 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v20 = (void *)UIView.backgroundColor(_:)();

  v21 = (void *)ARUIRingsView.emptyRings()();
  objc_msgSend(v21, "hk_configureWithActivitySummary:animated:", a3, v7);
  if ((a4 & 0x100) != 0)
  {
    v22 = (void *)objc_opt_self(ARUISpriteSheetFactory);
    v23 = &selRef_defaultSpriteSheet;
    if ((a4 & 0x10000) != 0)
      v23 = &selRef_wheelchairSpriteSheet;
    v24 = objc_msgSend(v22, *v23);
    v25 = objc_msgSend(v21, "ringGroup");
    objc_msgSend(v25, "setSpriteSheet:", v24);

    v26 = objc_msgSend(v21, "ringGroup");
    objc_msgSend(v26, "playSpriteAnimation");

  }
  return v21;
}

void *sub_100495EB8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v1 + 17))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)(v1 + 16);
  if (*(_BYTE *)(v1 + 18))
    v4 = 0x10000;
  else
    v4 = 0;
  return sub_100495CA0(*(double *)(v1 + 8), a1, *(_QWORD *)v1, v3 | v4);
}

id sub_100495EF0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, "hk_configureWithActivitySummary:animated:", *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_100495F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100496010();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100495F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100496010();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100495FA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100496010();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100495FCC()
{
  unint64_t result;

  result = qword_100835E38;
  if (!qword_100835E38)
  {
    result = swift_getWitnessTable(&unk_10063F8D4, &type metadata for ActivityRingsView);
    atomic_store(result, (unint64_t *)&qword_100835E38);
  }
  return result;
}

unint64_t sub_100496010()
{
  unint64_t result;

  result = qword_100835E40;
  if (!qword_100835E40)
  {
    result = swift_getWitnessTable(&unk_10063F924, &type metadata for ActivityRingsView);
    atomic_store(result, (unint64_t *)&qword_100835E40);
  }
  return result;
}

id sub_1004961BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityTypeKeyMigratorBridge(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10049622C()
{
  return type metadata accessor for ActivityTypeKeyMigratorBridge(0);
}

uint64_t type metadata accessor for ActivityTypeKeyMigratorBridge(uint64_t a1)
{
  uint64_t result;

  result = qword_100835E70;
  if (!qword_100835E70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivityTypeKeyMigratorBridge);
  return result;
}

uint64_t sub_100496270(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for ActivityTypeKeyMigrator(319, a2);
  if (v4 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1004962DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch(sub_1004962F4, 0, 0);
}

uint64_t sub_1004962F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 48) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = (_QWORD *)swift_task_alloc(dword_100835EAC);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_10010B514;
  v3[2] = Strong;
  return swift_task_switch(sub_1004963AC, Strong, 0);
}

uint64_t sub_100496394()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_1004963AC, v0, 0);
}

uint64_t sub_1004963AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD *v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = static os_log_type_t.default.getter(a1);
  v4 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "[AppRecommendationDataProvider] Activating...", 45, 2, _swiftEmptyArrayStorage);

  if (*(_BYTE *)(v2 + 232) == 1)
  {
    v6 = static os_log_type_t.error.getter(v5);
    v7 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v6, &_mh_execute_header, v7, "[AppRecommendationDataProvider] Data Provider already activated", 63, 2, _swiftEmptyArrayStorage);

    v8 = sub_100497C94();
    v9 = swift_allocError(&type metadata for AppRecommendationDataProvider.AppRecommendationError, v8, 0, 0);
    *v10 = 1;
    swift_willThrow(v9);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc(dword_100835EB4);
    *(_QWORD *)(v1 + 24) = v12;
    *v12 = v1;
    v12[1] = sub_100496504;
    v13 = *(_QWORD *)(v1 + 16);
    v12[169] = v13;
    return swift_task_switch(sub_100496568, v13, 0);
  }
}

uint64_t sub_100496504()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100496550()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1352) = v0;
  return swift_task_switch(sub_100496568, v0, 0);
}

uint64_t sub_100496568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = sub_100007050(&qword_100836000);
  swift_asyncLet_begin(v0 + 656, 0, v2, &unk_100835FF8, v1, v0 + 1344);
  v3.n128_f64[0] = swift_asyncLet_begin(v0 + 16, 0, v2, &unk_100836010, v1, v0 + 1336);
  return swift_asyncLet_get(v0 + 656, v0 + 1344, sub_100496620, v0 + 1296, v3);
}

uint64_t sub_100496620()
{
  uint64_t v0;

  return swift_task_switch(sub_100496634, *(_QWORD *)(v0 + 1352), 0);
}

uint64_t sub_100496634()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = v0[168];
  v0[170] = v1;
  if (v1)
  {
    v2 = swift_bridgeObjectRetain(v1);
    return swift_asyncLet_get(v0 + 2, v0 + 167, sub_100496738, v0 + 162, v2);
  }
  else
  {
    v4 = v0[169];
    v5 = static os_log_type_t.error.getter(0);
    v6 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v6, "[AppRecommendationDataProvider] Failed to get recommendations, setting state to inactive", 88, 2, _swiftEmptyArrayStorage);

    v7 = *(_QWORD *)(v4 + 216);
    v8 = *(_QWORD *)(v4 + 224);
    *(_QWORD *)(v4 + 216) = 0;
    *(_QWORD *)(v4 + 224) = 0;
    v9 = *(_BYTE *)(v4 + 232);
    *(_BYTE *)(v4 + 232) = 2;
    sub_10031C718(v7, v8, v9);
    return swift_asyncLet_finish(v0 + 2, v0 + 167, sub_100496888, v0 + 162);
  }
}

uint64_t sub_100496738()
{
  uint64_t v0;

  return swift_task_switch(sub_10049674C, *(_QWORD *)(v0 + 1352), 0);
}

uint64_t sub_10049674C(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;

  v9 = *(_QWORD *)(v8 + 1336);
  v10 = *(_QWORD *)(v8 + 1360);
  if (v9)
  {
    v11 = *(_QWORD *)(v8 + 1352);
    swift_bridgeObjectRetain(*(_QWORD *)(v8 + 1336));
    v13 = static os_log_type_t.default.getter(v12);
    v14 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v14, "[AppRecommendationDataProvider] Got recommendations, setting state to active", 76, 2, _swiftEmptyArrayStorage);

    v17 = *(_BYTE *)(v11 + 232);
    v16 = (char *)(v11 + 232);
    v15 = v17;
    v18 = *((_QWORD *)v16 - 2);
    v19 = *((_QWORD *)v16 - 1);
    v20 = 1;
    *((_QWORD *)v16 - 2) = v10;
    *((_QWORD *)v16 - 1) = v9;
  }
  else
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 1360), a2, a3, a4, a5, a6, a7, a8);
    v21 = *(_QWORD *)(v8 + 1352);
    v23 = static os_log_type_t.error.getter(v22);
    v24 = HKLogActivity;
    v20 = 2;
    os_log(_:dso:log:_:_:)(v23, &_mh_execute_header, v24, "[AppRecommendationDataProvider] Failed to get recommendations, setting state to inactive", 88, 2, _swiftEmptyArrayStorage);

    v25 = *(_BYTE *)(v21 + 232);
    v16 = (char *)(v21 + 232);
    v15 = v25;
    v18 = *((_QWORD *)v16 - 2);
    v19 = *((_QWORD *)v16 - 1);
    *((_QWORD *)v16 - 2) = 0;
    *((_QWORD *)v16 - 1) = 0;
  }
  *v16 = v20;
  sub_10031C718(v18, v19, v15);
  return swift_asyncLet_finish(v8 + 16, v8 + 1336, sub_100496888, v8 + 1296);
}

uint64_t sub_100496888()
{
  uint64_t v0;

  return swift_task_switch(sub_10049689C, *(_QWORD *)(v0 + 1352), 0);
}

uint64_t sub_10049689C()
{
  uint64_t v0;

  return swift_asyncLet_finish(v0 + 656, v0 + 1344, sub_1004968B4, v0 + 16);
}

uint64_t sub_1004968B4()
{
  uint64_t v0;

  return swift_task_switch(sub_1004968C8, *(_QWORD *)(v0 + 1352), 0);
}

uint64_t sub_1004968C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004968D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1004968E8, 0, 0);
}

uint64_t sub_1004968E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 32) = sub_100016804((_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 144));
  return swift_task_switch(sub_100496930, v1, 0);
}

uint64_t sub_100496930()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 + 200);
  v0[5] = v2;
  v3 = *(_BYTE *)(v1 + 208);
  v4 = dword_100824A9C;
  swift_bridgeObjectRetain(v2);
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1004969A4;
  return sub_1001ABEFC(v2, v3);
}

uint64_t sub_1004969A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t (*v13)();

  v4 = *v2;
  v5 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v2 + 40);
  swift_task_dealloc(*(_QWORD *)(*v2 + 48));
  swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
  if (v1)
  {
    swift_errorRelease(v1);
    v13 = sub_100496A3C;
  }
  else
  {
    *(_QWORD *)(v4 + 56) = a1;
    v13 = sub_100496A24;
  }
  return swift_task_switch(v13, 0, 0);
}

uint64_t sub_100496A24()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100496A3C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100496A50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100496A68, 0, 0);
}

uint64_t sub_100496A68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *sub_100016804((_QWORD *)(*(_QWORD *)(v0 + 24) + 160), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 184));
  v2 = (_QWORD *)swift_task_alloc(dword_100839224);
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_100496AC4;
  return sub_1005247A4(v1);
}

uint64_t sub_100496AC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t (*v5)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 32));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = sub_100496A3C;
  }
  else
  {
    *(_QWORD *)(v4 + 40) = a1;
    v5 = sub_100496B3C;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100496B3C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100496B54(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 112), a2, a3, a4, a5, a6, a7, a8);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v8 + 120));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v8 + 160));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 200), v9, v10, v11, v12, v13, v14, v15);
  sub_10031C718(*(_QWORD *)(v8 + 216), *(_QWORD *)(v8 + 224), *(_BYTE *)(v8 + 232));
  swift_defaultActor_destroy(v8);
  return swift_defaultActor_deallocate(v8);
}

uint64_t type metadata accessor for AppRecommendationDataProvider()
{
  return objc_opt_self(_TtC10FitnessApp29AppRecommendationDataProvider);
}

uint64_t sub_100496BC0(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRetain(result);
    return swift_bridgeObjectRetain(a2);
  }
  else if (!a3)
  {
    return swift_retain(result);
  }
  return result;
}

uint64_t destroy for AppRecommendationDataProvider.State(uint64_t a1)
{
  return sub_10031C718(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10FitnessApp29AppRecommendationDataProviderC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100496BC0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AppRecommendationDataProvider.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100496BC0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10031C718(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AppRecommendationDataProvider.State(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10031C718(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FitnessPlusCardDataProvider.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FitnessPlusCardDataProvider.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_100496D78(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100496D90(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppRecommendationDataProvider.State()
{
  return &type metadata for AppRecommendationDataProvider.State;
}

ValueMetadata *type metadata accessor for AppRecommendationDataProvider.AppIconCacheStatus()
{
  return &type metadata for AppRecommendationDataProvider.AppIconCacheStatus;
}

uint64_t sub_100496DC8(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 192) = v4;
  *(double *)(v5 + 176) = a3;
  *(double *)(v5 + 184) = a4;
  *(double *)(v5 + 168) = a2;
  *(_QWORD *)(v5 + 160) = a1;
  v6 = sub_100047110(&qword_10081E650);
  *(_QWORD *)(v5 + 200) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100496E30, v4, 0);
}

uint64_t sub_100496E30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  Swift::String v9;
  Swift::String v10;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  void *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell **v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  unint64_t v49;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  char v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  __n128 v74;
  os_log_type_t v75;
  void *v76;
  os_log_type_t v77;
  const char *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  SEL v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  SEL v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  SEL v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  _QWORD *v123;
  unint64_t v124;
  NSObject *log;
  NSObject *loga;
  os_log_t logb[2];
  CHWorkoutDetailHeartRateTableViewCell *v129;
  CHWorkoutDetailHeartRateTableViewCell *v130;

  v1 = *(_QWORD **)(v0 + 160);
  v2 = v0 + 56;
  v4 = *(double *)(v0 + 176);
  v3 = *(double *)(v0 + 184);
  v5 = *(double *)(v0 + 168);
  v6 = v1[3];
  v7 = v1[4];
  sub_100016804(v1, v6);
  v129 = (CHWorkoutDetailHeartRateTableViewCell *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  v130 = v8;
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = Double.description.getter(v5);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object, v12, v13, v14, v15, v16, v17, v18);
  v19._countAndFlagsBits = 120;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = Double.description.getter(v4);
  v21 = (CHWorkoutDetailHeartRateTableViewCell *)v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
  v29._countAndFlagsBits = 120;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = Double.description.getter(v3);
  v31 = (CHWorkoutDetailHeartRateTableViewCell *)v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v31, v32, v33, v34, v35, v36, v37, v38);
  v40 = (uint64_t)v129;
  v39 = v130;
  *(_QWORD *)(v0 + 208) = v129;
  *(_QWORD *)(v0 + 216) = v39;
  v42 = static os_log_type_t.default.getter(v41);
  v43 = (void *)HKLogActivity;
  v44 = v42;
  if (os_log_type_enabled(HKLogActivity, v42))
  {
    swift_bridgeObjectRetain_n(v39, 2);
    log = v43;
    v45 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v129 = (CHWorkoutDetailHeartRateTableViewCell *)v46;
    *(_DWORD *)v45 = 136315138;
    swift_bridgeObjectRetain(v39);
    *(_QWORD *)(v0 + 152) = sub_10003E8EC(v40, (unint64_t)v39, (uint64_t *)&v129);
    v2 = v0 + 56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v45 + 4);
    swift_bridgeObjectRelease_n(v39, 3);
    _os_log_impl((void *)&_mh_execute_header, log, v44, "[AppRecommendationDataProvider] Looking up artwork for key %s", v45, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);

  }
  v47 = (CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)(v0 + 192) + 112);
  swift_beginAccess(v47, v2, 0, 0);
  v48 = *v47;
  if (!*(_QWORD *)(*v47)->cellPadding)
    goto LABEL_9;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v48);
  v49 = sub_100438F74(v40, (uint64_t)v39);
  if ((v50 & 1) == 0)
  {
    swift_bridgeObjectRelease(v48, v50, v51, v52, v53, v54, v55, v56);
    swift_bridgeObjectRelease(v39, v94, v95, v96, v97, v98, v99, v100);
LABEL_9:
    v101 = *(_QWORD *)(v0 + 200);
    v102 = *(_QWORD *)(v0 + 184);
    *(_OWORD *)logb = *(_OWORD *)(v0 + 168);
    v103 = *(_QWORD *)(v0 + 160);
    v104 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v101, 1, 1, v104);
    sub_1000252E0(v103, v0 + 16);
    v105 = swift_allocObject(&unk_1007A29A0, 112, 7);
    *(_QWORD *)(v105 + 16) = 0;
    *(_QWORD *)(v105 + 24) = 0;
    *(_QWORD *)(v105 + 32) = v40;
    *(_QWORD *)(v105 + 40) = v39;
    sub_10002411C((__int128 *)(v0 + 16), v105 + 48);
    *(_OWORD *)(v105 + 88) = *(_OWORD *)logb;
    *(_QWORD *)(v105 + 104) = v102;
    swift_bridgeObjectRetain(v39);
    v106 = sub_1005A91A0(v101, (uint64_t)&unk_100835FE0, v105);
    *(_QWORD *)(v0 + 248) = v106;
    swift_beginAccess(v47, v0 + 80, 33, 0);
    swift_bridgeObjectRetain(v39);
    swift_retain(v106);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v47);
    v129 = *v47;
    *v47 = (CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000;
    sub_1003FF5F4(v106, 0, v40, (uint64_t)v39, isUniquelyReferenced_nonNull_native);
    v108 = *v47;
    *v47 = v129;
    swift_bridgeObjectRelease(v108, v109, v110, v111, v112, v113, v114, v115);
    swift_bridgeObjectRelease(v39, v116, v117, v118, v119, v120, v121, v122);
    swift_endAccess(v0 + 80);
    v123 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
    *(_QWORD *)(v0 + 256) = v123;
    v124 = sub_100493944();
    v90 = sub_100047110(&qword_10082EEA0);
    *v123 = v0;
    v123[1] = sub_1004974FC;
    v91 = v0 + 128;
    v92 = v106;
    v93 = v124;
    return Task.value.getter(v91, v92, v93, v90, &protocol self-conformance witness table for Error);
  }
  v57 = *(_QWORD *)v48[1].cellInset + 16 * v49;
  v58 = *(void **)v57;
  *(_QWORD *)(v0 + 224) = *(_QWORD *)v57;
  v59 = *(_BYTE *)(v57 + 8);
  sub_10010C5D0(v58, v59);
  swift_bridgeObjectRelease(v48, v60, v61, v62, v63, v64, v65, v66);
  swift_bridgeObjectRelease(v39, v67, v68, v69, v70, v71, v72, v73);
  v75 = static os_log_type_t.debug.getter(v74);
  v76 = (void *)HKLogActivity;
  v77 = v75;
  if (os_log_type_enabled(HKLogActivity, v75))
  {
    swift_bridgeObjectRetain(v39);
    loga = v76;
    v85 = (uint8_t *)swift_slowAlloc(12, -1);
    v86 = swift_slowAlloc(32, -1);
    v129 = (CHWorkoutDetailHeartRateTableViewCell *)v86;
    *(_DWORD *)v85 = 136315138;
    swift_bridgeObjectRetain(v39);
    *(_QWORD *)(v0 + 144) = sub_10003E8EC(v40, (unint64_t)v39, (uint64_t *)&v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v85 + 4);
    swift_bridgeObjectRelease_n(v39, 3);
    _os_log_impl((void *)&_mh_execute_header, loga, v77, "[AppRecommendationDataProvider][%s] Found artwork in cache.", v85, 0xCu);
    swift_arrayDestroy(v86, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v86, -1, -1);
    swift_slowDealloc(v85, -1, -1);

    if ((v59 & 1) == 0)
    {
LABEL_7:
      v87 = async function pointer to Task.value.getter[1];
      swift_retain(v58);
      v88 = (_QWORD *)swift_task_alloc(v87);
      *(_QWORD *)(v0 + 232) = v88;
      v89 = sub_100493944();
      v90 = sub_100047110(&qword_10082EEA0);
      *v88 = v0;
      v88[1] = sub_100497440;
      v91 = v0 + 136;
      v92 = (uint64_t)v58;
      v93 = v89;
      return Task.value.getter(v91, v92, v93, v90, &protocol self-conformance witness table for Error);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v39, v78, v79, v80, v81, v82, v83, v84);
    if ((v59 & 1) == 0)
      goto LABEL_7;
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  return (*(uint64_t (**)(void *))(v0 + 8))(v58);
}

uint64_t sub_100497440()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100497654;
  else
    v4 = sub_1004974A4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 192), 0);
}

uint64_t sub_1004974A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 224);
  sub_10010C5EC(v1, 0);
  sub_10010C5EC(v1, 0);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1004974FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v11 = *(_QWORD *)(v2 + 192);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v2 + 216), v4, v5, v6, v7, v8, v9, v10);
    v12 = sub_1004976A4;
    v13 = v11;
  }
  else
  {
    v13 = *(_QWORD *)(v2 + 192);
    v12 = sub_100497570;
  }
  return swift_task_switch(v12, v13, 0);
}

uint64_t sub_100497570()
{
  uint64_t v0;
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(void **)(v0 + 128);
  swift_beginAccess(v4 + 112, v0 + 104, 33, 0);
  v6 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + 112));
  v24 = *(_QWORD *)(v4 + 112);
  *(_QWORD *)(v4 + 112) = 0x8000000000000000;
  sub_1003FF5F4((uint64_t)v5, 1, v3, (uint64_t)v2, isUniquelyReferenced_nonNull_native);
  v8 = *(CHWorkoutDetailHeartRateTableViewCell **)(v4 + 112);
  *(_QWORD *)(v4 + 112) = v24;
  swift_bridgeObjectRelease(v8, v9, v10, v11, v12, v13, v14, v15);
  swift_bridgeObjectRelease(v2, v16, v17, v18, v19, v20, v21, v22);
  swift_endAccess(v0 + 104);
  swift_release(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  return (*(uint64_t (**)(id))(v0 + 8))(v6);
}

uint64_t sub_100497654()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 224);
  sub_10010C5EC(v1, 0);
  sub_10010C5EC(v1, 0);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004976A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004976E0(uint64_t a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(double *)(v9 + 88) = a3;
  *(double *)(v9 + 96) = a4;
  *(double *)(v9 + 80) = a2;
  *(_QWORD *)(v9 + 64) = a8;
  *(_QWORD *)(v9 + 72) = a9;
  *(_QWORD *)(v9 + 48) = a1;
  *(_QWORD *)(v9 + 56) = a7;
  return swift_task_switch(sub_100497704, 0, 0);
}

uint64_t sub_100497704(__n128 a1)
{
  uint64_t v1;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, double, double, double);
  uint64_t v17;

  v2 = static os_log_type_t.debug.getter(a1);
  v3 = (void *)HKLogActivity;
  v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v6 = *(_QWORD *)(v1 + 56);
    v5 = *(_QWORD *)(v1 + 64);
    swift_bridgeObjectRetain_n(v5, 2);
    v7 = v3;
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain(v5);
    *(_QWORD *)(v1 + 40) = sub_10003E8EC(v6, v5, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v8 + 4);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v7, v4, "[AppRecommendationDataProvider][%s] Fetching artwork.", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  v10 = *(_QWORD **)(v1 + 72);
  v11 = v10[3];
  v12 = v10[4];
  sub_100016804(v10, v11);
  v13 = *(int **)(v12 + 40);
  v16 = (uint64_t (*)(uint64_t, uint64_t, double, double, double))((char *)v13 + *v13);
  v14 = (_QWORD *)swift_task_alloc(v13[1]);
  *(_QWORD *)(v1 + 104) = v14;
  *v14 = v1;
  v14[1] = sub_1004978B4;
  return v16(v11, v12, *(double *)(v1 + 80), *(double *)(v1 + 88), *(double *)(v1 + 96));
}

uint64_t sub_1004978B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 104);
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10049799C;
  else
    v5 = sub_100497920;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100497920()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    **(_QWORD **)(v0 + 48) = v1;
  }
  else
  {
    v2 = sub_100497C94();
    v3 = swift_allocError(&type metadata for AppRecommendationDataProvider.AppRecommendationError, v2, 0, 0);
    *v4 = 2;
    swift_willThrow(v3);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10049799C(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v26[2];

  v2 = static os_log_type_t.error.getter(a1);
  v3 = (void *)HKLogActivity;
  v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v5 = *(_QWORD *)(v1 + 120);
    v7 = *(_QWORD *)(v1 + 56);
    v6 = *(_QWORD *)(v1 + 64);
    swift_bridgeObjectRetain(v6);
    swift_errorRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_errorRetain(v5);
    v8 = v3;
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v26[0] = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain(v6);
    *(_QWORD *)(v1 + 16) = sub_10003E8EC(v7, v6, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v9 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v1 + 24) = v5;
    swift_errorRetain(v5);
    v11 = sub_100047110(&qword_10082EEA0);
    v12 = String.init<A>(describing:)(v1 + 24, v11);
    v14 = (CHWorkoutDetailHeartRateTableViewCell *)v13;
    *(_QWORD *)(v1 + 32) = sub_10003E8EC(v12, v13, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v1 + 40, v9 + 14);
    swift_bridgeObjectRelease(v14, v15, v16, v17, v18, v19, v20, v21);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v4, "[AppRecommendationDataProvider][%s] Failed to fetch artwork: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_errorRelease(v5);

  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v1 + 120));
  }
  v22 = sub_100497C94();
  v23 = swift_allocError(&type metadata for AppRecommendationDataProvider.AppRecommendationError, v22, 0, 0);
  *v24 = 2;
  swift_willThrow(v23);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100497BC4()
{
  uint64_t v0;
  SEL v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 40), v1, v2, v3, v4, v5, v6, v7);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100497BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v9 = *(_OWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = swift_task_alloc(dword_100835FDC);
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_1000DA0E4;
  *(_QWORD *)(v7 + 96) = v6;
  *(_OWORD *)(v7 + 80) = v9;
  *(_QWORD *)(v7 + 64) = v5;
  *(_QWORD *)(v7 + 72) = v1 + 48;
  *(_QWORD *)(v7 + 48) = a1;
  *(_QWORD *)(v7 + 56) = v4;
  return swift_task_switch(sub_100497704, 0, 0);
}

unint64_t sub_100497C94()
{
  unint64_t result;

  result = qword_100835FE8;
  if (!qword_100835FE8)
  {
    result = swift_getWitnessTable(&unk_10063FB80, &type metadata for AppRecommendationDataProvider.AppRecommendationError);
    atomic_store(result, &qword_100835FE8);
  }
  return result;
}

uint64_t sub_100497CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_100835FF4);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1000EA380;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1004968E8, 0, 0);
}

uint64_t sub_100497D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_10083600C);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1000EA380;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_100496A68, 0, 0);
}

uint64_t storeEnumTagSinglePayload for AppRecommendationDataProvider.AppRecommendationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100497DE4 + 4 * byte_10063F9F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100497E18 + 4 * asc_10063F9F0[v4]))();
}

uint64_t sub_100497E18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100497E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100497E28);
  return result;
}

uint64_t sub_100497E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100497E3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100497E40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100497E48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppRecommendationDataProvider.AppRecommendationError()
{
  return &type metadata for AppRecommendationDataProvider.AppRecommendationError;
}

unint64_t sub_100497E68()
{
  unint64_t result;

  result = qword_100836020;
  if (!qword_100836020)
  {
    result = swift_getWitnessTable(&unk_10063FB58, &type metadata for AppRecommendationDataProvider.AppRecommendationError);
    atomic_store(result, (unint64_t *)&qword_100836020);
  }
  return result;
}

void destroy for ActivitySharingFriendDetailViewModel(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);

  swift_release(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

}

uint64_t initializeWithCopy for ActivitySharingFriendDetailViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *a2;
  v4 = (void *)a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = a2[2];
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  v7 = (void *)a2[5];
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  v9 = (void *)a2[7];
  v8 = a2[8];
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  v10 = a2[9];
  v11 = (void *)a2[10];
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  swift_retain(v3);
  v12 = v4;
  swift_retain(v6);
  v13 = v7;
  v14 = v9;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  v15 = v11;
  return a1;
}

uint64_t *assignWithCopy for ActivitySharingFriendDetailViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = (uint64_t)v6;
  v8 = v6;

  v9 = a2[2];
  v10 = a1[2];
  a1[2] = v9;
  swift_retain(v9);
  swift_release(v10);
  a1[3] = a2[3];
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  v11 = (void *)a2[5];
  v12 = (void *)a1[5];
  a1[5] = (uint64_t)v11;
  v13 = v11;

  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  v14 = (void *)a1[7];
  v15 = (void *)a2[7];
  a1[7] = (uint64_t)v15;
  v16 = v15;

  v17 = a2[8];
  v18 = a1[8];
  a1[8] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  v19 = a2[9];
  v20 = a1[9];
  a1[9] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = (void *)a2[10];
  v22 = (void *)a1[10];
  a1[10] = (uint64_t)v21;
  v23 = v21;

  *((_BYTE *)a1 + 88) = *((_BYTE *)a2 + 88);
  return a1;
}

__n128 initializeWithTake for ActivitySharingFriendDetailViewModel(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ActivitySharingFriendDetailViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  swift_release(*(_QWORD *)a1);
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingFriendDetailViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingFriendDetailViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailViewModel()
{
  return &type metadata for ActivitySharingFriendDetailViewModel;
}

uint64_t sub_100498224(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v21 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = (uint64_t)v11;
          v13 = *(id *)(v21 + 32 + 8 * v1);
        }
        v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v9 = sub_1004DEE2C(v21);
          v21 = v9;
        }
        v15 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v17 = sub_1004DEE2C(v21);
          v21 = v17;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v6 = (v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_1002958E8(v1);
    v21 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

uint64_t sub_10049843C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_100047110(&qword_1008221B0);
  v15 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v3);
  v16 = (uint64_t)&v15 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 < 2)
    return a1;
  v9 = 0;
  v10 = v8 >> 1;
  for (i = v8 - 1; ; --i)
  {
    if (v9 == i)
      goto LABEL_4;
    v12 = *(_QWORD *)(a1 + 16);
    if (v9 >= v12)
      break;
    v13 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v14 = *(_QWORD *)(v15 + 72);
    result = sub_10049A6E4(a1 + v13 + v14 * v9, v16);
    if (i >= v12)
      goto LABEL_14;
    sub_10049A6E4(a1 + v13 + v14 * i, (uint64_t)v5);
    result = swift_isUniquelyReferenced_nonNull_native(a1);
    if ((result & 1) == 0)
    {
      result = sub_1004DEE80(a1);
      a1 = result;
    }
    if (v9 >= *(_QWORD *)(a1 + 16))
      goto LABEL_15;
    result = sub_10049A72C((uint64_t)v5, a1 + v13 + v14 * v9);
    if (i >= *(_QWORD *)(a1 + 16))
      goto LABEL_16;
    result = sub_10049A72C(v16, a1 + v13 + v14 * i);
LABEL_4:
    if (v10 == ++v9)
      return a1;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1004985C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 56) = v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 64) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10049862C, v3, v4);
}

uint64_t sub_10049862C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  id v28;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = *(_BYTE *)(v1 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  if ((v2 & 1) != 0)
  {
    v13 = (_OWORD *)swift_allocObject(&unk_1007A2B90, 105, 7);
    v14 = *(_OWORD *)(v3 + 16);
    v13[1] = *(_OWORD *)v3;
    v13[2] = v14;
    v16 = *(_OWORD *)(v3 + 48);
    v15 = *(_OWORD *)(v3 + 64);
    v17 = *(_OWORD *)(v3 + 32);
    *(_OWORD *)((char *)v13 + 89) = *(_OWORD *)(v3 + 73);
    v13[4] = v16;
    v13[5] = v15;
    v13[3] = v17;
    v18 = swift_allocObject(&unk_1007A2BB8, 128, 7);
    v19 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v18 + 32) = v19;
    v20 = *(_OWORD *)(v3 + 32);
    v21 = *(_OWORD *)(v3 + 48);
    v22 = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v18 + 89) = *(_OWORD *)(v3 + 73);
    *(_OWORD *)(v18 + 64) = v21;
    *(_OWORD *)(v18 + 80) = v22;
    *(_OWORD *)(v18 + 48) = v20;
    *(_QWORD *)(v18 + 112) = &unk_100836060;
    *(_QWORD *)(v18 + 120) = v13;
    v23 = *(_QWORD *)v3;
    v24 = *(void **)(v3 + 40);
    v25 = *(_QWORD *)(v3 + 24);
    KeyPath = swift_getKeyPath(&unk_10063FC58);
    v27 = swift_getKeyPath(&unk_10063FC80);
    *(_QWORD *)(v0 + 16) = v24;
    *(_QWORD *)(v0 + 24) = v25;
    *(_QWORD *)(v0 + 32) = &unk_100836070;
    *(_QWORD *)(v0 + 40) = v18;
    *(_BYTE *)(v0 + 48) = 8;
    sub_10027B95C((uint64_t *)v3);
    sub_10027B95C((uint64_t *)v3);
    v28 = v24;
    swift_retain(v23);
    v9 = v0 + 16;
    v10 = v23;
    v11 = KeyPath;
    v12 = v27;
  }
  else
  {
    v4 = *(_QWORD *)v3;
    v5 = *(void **)(v3 + 40);
    v6 = swift_getKeyPath(&unk_10063FC58);
    v7 = swift_getKeyPath(&unk_10063FC80);
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = 0;
    *(_QWORD *)(v0 + 40) = 0;
    *(_BYTE *)(v0 + 48) = 7;
    v8 = v5;
    swift_retain(v4);
    v9 = v0 + 16;
    v10 = v4;
    v11 = v6;
    v12 = v7;
  }
  static Published.subscript.setter(v9, v10, v11, v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004987CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[25] = a1;
  v2 = sub_100047110((uint64_t *)&unk_10082E690);
  v1[26] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v3);
  v1[28] = swift_task_alloc(v3);
  v1[29] = swift_task_alloc(v3);
  v1[30] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[31] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[32] = v5;
  v1[33] = v6;
  return swift_task_switch(sub_100498888, v5, v6);
}

uint64_t sub_100498888()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = v0[25];
  v3 = *(void **)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 40);
  v0[34] = v4;
  v0[7] = (char *)v0 + 153;
  v0[2] = v0;
  v0[3] = sub_100498934;
  v5 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1003362E4;
  v6[3] = &unk_1007A2BD0;
  v6[4] = v5;
  objc_msgSend(v3, "sendCompetitionRequestToFriend:completion:", v4, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_100498934()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 280) = v2;
  if (v2)
    v3 = sub_100498C70;
  else
    v3 = sub_100498990;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 264));
}

uint64_t sub_100498990()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t **v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  NSObject *log;
  uint64_t v38;

  v2 = (uint64_t **)(v0 + 200);
  v1 = *(uint64_t **)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 248));
  v4 = static os_log_type_t.default.getter(v3);
  v5 = HKLogActivity;
  sub_10027B95C(v1);
  sub_10027B95C(v1);
  if (os_log_type_enabled(v5, v4))
  {
    v6 = *(void **)(v0 + 272);
    v7 = *(uint64_t **)(v0 + 200);
    sub_10027B95C(v7);
    sub_10027B95C(v7);
    log = v5;
    v8 = swift_slowAlloc(22, -1);
    v35 = (_QWORD *)swift_slowAlloc(8, -1);
    v36 = swift_slowAlloc(32, -1);
    v38 = v36;
    *(_DWORD *)v8 = 136446466;
    v9 = objc_msgSend(v6, "UUID");
    if (v9)
    {
      v10 = v9;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v9);

      v11 = 0;
    }
    else
    {
      v11 = 1;
    }
    v13 = *(void **)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v17 = *(uint64_t **)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 208);
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, v11, 1, v18);
    sub_100218188(v15, v14);
    v19 = Optional.description.getter(v16);
    v21 = v20;
    sub_10004D914(v14);
    *(_QWORD *)(v0 + 192) = sub_10003E8EC(v19, (unint64_t)v21, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v8 + 4);
    swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
    sub_10043169C(v17);
    sub_10043169C(v17);
    *(_WORD *)(v8 + 12) = 2112;
    *(_QWORD *)(v0 + 168) = v13;
    v29 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v8 + 14);
    *v35 = v13;
    sub_10043169C(v17);
    sub_10043169C(v17);
    _os_log_impl((void *)&_mh_execute_header, log, v4, "Successfully sent competition request to friend: %{public}s - %@", (uint8_t *)v8, 0x16u);
    v30 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v35, 1, v30);
    swift_slowDealloc(v35, -1, -1);
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {
    v12 = *v2;
    sub_10043169C(*v2);
    sub_10043169C(v12);
  }
  v31 = *(_QWORD *)(v0 + 232);
  v33 = *(_QWORD *)(v0 + 216);
  v32 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100498C70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  NSObject *log;
  uint64_t v49;

  v1 = *(uint64_t **)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 248));
  v3 = swift_willThrow(v2);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = HKLogActivity;
  sub_10027B95C(v1);
  sub_10027B95C(v1);
  if (os_log_type_enabled(v5, v4))
  {
    v45 = v0 + 184;
    v6 = *(void **)(v0 + 272);
    v7 = *(_QWORD *)(v0 + 280);
    v8 = *(uint64_t **)(v0 + 200);
    sub_10027B95C(v8);
    swift_errorRetain(v7);
    sub_10027B95C(v8);
    swift_errorRetain(v7);
    log = v5;
    v9 = swift_slowAlloc(32, -1);
    v10 = (uint64_t *)swift_slowAlloc(16, -1);
    v46 = swift_slowAlloc(32, -1);
    v49 = v46;
    *(_DWORD *)v9 = 136446722;
    v11 = objc_msgSend(v6, "UUID");
    v47 = v4;
    if (v11)
    {
      v12 = v11;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);

      v13 = 0;
    }
    else
    {
      v13 = 1;
    }
    v16 = *(void **)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 280);
    v18 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 224);
    v20 = *(uint64_t **)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 208);
    v21 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, v13, 1, v21);
    sub_100218188(v18, v17);
    v22 = Optional.description.getter(v19);
    v24 = v23;
    sub_10004D914(v17);
    *(_QWORD *)(v0 + 160) = sub_10003E8EC(v22, (unint64_t)v24, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v9 + 4);
    swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
    sub_10043169C(v20);
    sub_10043169C(v20);
    *(_WORD *)(v9 + 12) = 2114;
    swift_errorRetain(v15);
    v32 = _swift_stdlib_bridgeErrorToNSError(v15);
    *(_QWORD *)(v0 + 176) = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v45, v9 + 14);
    *v10 = v32;
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    *(_WORD *)(v9 + 22) = 2112;
    *(_QWORD *)(v0 + 184) = v16;
    v33 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, v0 + 192, v9 + 24);
    v10[1] = (uint64_t)v16;
    sub_10043169C(v20);
    sub_10043169C(v20);
    _os_log_impl((void *)&_mh_execute_header, log, v47, "Failed to send competition request to friend: %{public}s error: %{public}@ - %@", (uint8_t *)v9, 0x20u);
    v34 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v10, 2, v34);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {
    v14 = *(uint64_t **)(v0 + 200);
    sub_10043169C(v14);
    sub_10043169C(v14);
  }
  v36 = *(void **)(v0 + 272);
  v35 = *(_QWORD *)(v0 + 280);
  v37 = **(_QWORD **)(v0 + 200);
  KeyPath = swift_getKeyPath(&unk_10063FC58);
  v39 = swift_getKeyPath(&unk_10063FC80);
  *(_QWORD *)(v0 + 120) = v36;
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 152) = 9;
  v40 = v36;
  swift_retain(v37);
  static Published.subscript.setter(v0 + 120, v37, KeyPath, v39);
  swift_errorRelease(v35);
  v41 = *(_QWORD *)(v0 + 232);
  v43 = *(_QWORD *)(v0 + 216);
  v42 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100499028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[15] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[16] = v5;
  v3[17] = v6;
  return swift_task_switch(sub_100499098, v5, v6);
}

uint64_t sub_100499098()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  id v17;
  int *v19;
  _QWORD *v20;
  uint64_t (*v21)(void);

  v1 = *(void **)(*(_QWORD *)(v0 + 96) + 40);
  if (!objc_msgSend(v1, "supportsCompetitions"))
  {
    v13 = *(uint64_t **)(v0 + 96);
    swift_release(*(_QWORD *)(v0 + 120));
    v14 = *v13;
    KeyPath = swift_getKeyPath(&unk_10063FC58);
    v16 = swift_getKeyPath(&unk_10063FC80);
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 32) = 0;
    *(_QWORD *)(v0 + 40) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 48) = 10;
    v17 = v1;
    swift_retain(v14);
    v9 = v0 + 16;
    v10 = v14;
    v11 = KeyPath;
    v12 = v16;
    goto LABEL_5;
  }
  if ((objc_msgSend(v1, "isMyActivityDataCurrentlyHidden") & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(uint64_t **)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    swift_release(*(_QWORD *)(v0 + 120));
    v5 = *v3;
    v6 = swift_getKeyPath(&unk_10063FC58);
    v7 = swift_getKeyPath(&unk_10063FC80);
    *(_QWORD *)(v0 + 56) = v1;
    *(_QWORD *)(v0 + 64) = v4;
    *(_QWORD *)(v0 + 72) = v2;
    *(_QWORD *)(v0 + 80) = 0;
    *(_BYTE *)(v0 + 88) = 11;
    v8 = v1;
    swift_retain(v2);
    swift_retain(v5);
    v9 = v0 + 56;
    v10 = v5;
    v11 = v6;
    v12 = v7;
LABEL_5:
    static Published.subscript.setter(v9, v10, v11, v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v19 = *(int **)(v0 + 104);
  v21 = (uint64_t (*)(void))((char *)v19 + *v19);
  v20 = (_QWORD *)swift_task_alloc(v19[1]);
  *(_QWORD *)(v0 + 144) = v20;
  *v20 = v0;
  v20[1] = sub_10049922C;
  return v21();
}

uint64_t sub_10049922C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_100499278, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_100499278()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004992A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[30] = a1;
  v2 = sub_100047110((uint64_t *)&unk_10082E690);
  v1[31] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[32] = swift_task_alloc(v3);
  v1[33] = swift_task_alloc(v3);
  v1[34] = swift_task_alloc(v3);
  v1[35] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[36] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[37] = v5;
  v1[38] = v6;
  return swift_task_switch(sub_100499364, v5, v6);
}

uint64_t sub_100499364()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = v0[30];
  v3 = *(void **)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 40);
  v0[39] = v4;
  v0[7] = (char *)v0 + 153;
  v0[2] = v0;
  v0[3] = sub_100499410;
  v5 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1003362E4;
  v6[3] = &unk_1007A2B68;
  v6[4] = v5;
  objc_msgSend(v3, "acceptCompetitionRequestFromFriend:completion:", v4, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_100499410()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 320) = v2;
  if (v2)
    v3 = sub_1004997B4;
  else
    v3 = sub_10049946C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 304));
}

uint64_t sub_10049946C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t **v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  NSObject *log;
  uint64_t v38;

  v2 = (uint64_t **)(v0 + 240);
  v1 = *(uint64_t **)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 288));
  v4 = static os_log_type_t.default.getter(v3);
  v5 = HKLogActivity;
  sub_10027B95C(v1);
  sub_10027B95C(v1);
  if (os_log_type_enabled(v5, v4))
  {
    v6 = *(void **)(v0 + 312);
    v7 = *(uint64_t **)(v0 + 240);
    sub_10027B95C(v7);
    sub_10027B95C(v7);
    log = v5;
    v8 = swift_slowAlloc(22, -1);
    v35 = (_QWORD *)swift_slowAlloc(8, -1);
    v36 = swift_slowAlloc(32, -1);
    v38 = v36;
    *(_DWORD *)v8 = 136446466;
    v9 = objc_msgSend(v6, "UUID");
    if (v9)
    {
      v10 = v9;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v9);

      v11 = 0;
    }
    else
    {
      v11 = 1;
    }
    v13 = *(void **)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 272);
    v14 = *(_QWORD *)(v0 + 280);
    v17 = *(uint64_t **)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 248);
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, v11, 1, v18);
    sub_100218188(v15, v14);
    v19 = Optional.description.getter(v16);
    v21 = v20;
    sub_10004D914(v14);
    *(_QWORD *)(v0 + 232) = sub_10003E8EC(v19, v21, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v8 + 4);
    swift_bridgeObjectRelease(v21);
    sub_10043169C(v17);
    sub_10043169C(v17);
    *(_WORD *)(v8 + 12) = 2112;
    *(_QWORD *)(v0 + 208) = v13;
    v22 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v8 + 14);
    *v35 = v13;
    sub_10043169C(v17);
    sub_10043169C(v17);
    _os_log_impl((void *)&_mh_execute_header, log, v4, "Successfully accepted competition request from friend: %{public}s - %@", (uint8_t *)v8, 0x16u);
    v23 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v35, 1, v23);
    swift_slowDealloc(v35, -1, -1);
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {
    v12 = *v2;
    sub_10043169C(*v2);
    sub_10043169C(v12);
  }
  v24 = *(void **)(v0 + 312);
  v25 = *(uint64_t **)(v0 + 240);
  v26 = *v25;
  v27 = v25[3];
  KeyPath = swift_getKeyPath(&unk_10063FC58);
  v29 = swift_getKeyPath(&unk_10063FC80);
  *(_QWORD *)(v0 + 120) = v24;
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  *(_QWORD *)(v0 + 128) = v27;
  *(_BYTE *)(v0 + 152) = 13;
  v30 = v24;
  swift_retain(v26);
  static Published.subscript.setter(v0 + 120, v26, KeyPath, v29);
  v31 = *(_QWORD *)(v0 + 272);
  v33 = *(_QWORD *)(v0 + 256);
  v32 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004997B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  NSObject *log;
  uint64_t v42;

  v1 = *(uint64_t **)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 288));
  v3 = swift_willThrow(v2);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = HKLogActivity;
  sub_10027B95C(v1);
  sub_10027B95C(v1);
  if (os_log_type_enabled(v5, v4))
  {
    v38 = v0 + 224;
    v6 = *(void **)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 320);
    v8 = *(uint64_t **)(v0 + 240);
    sub_10027B95C(v8);
    swift_errorRetain(v7);
    sub_10027B95C(v8);
    swift_errorRetain(v7);
    log = v5;
    v9 = swift_slowAlloc(32, -1);
    v10 = (uint64_t *)swift_slowAlloc(16, -1);
    v39 = swift_slowAlloc(32, -1);
    v42 = v39;
    *(_DWORD *)v9 = 136446722;
    v11 = objc_msgSend(v6, "UUID");
    v40 = v4;
    if (v11)
    {
      v12 = v11;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);

      v13 = 0;
    }
    else
    {
      v13 = 1;
    }
    v16 = *(void **)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 320);
    v18 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 264);
    v20 = *(uint64_t **)(v0 + 240);
    v19 = *(_QWORD *)(v0 + 248);
    v21 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, v13, 1, v21);
    sub_100218188(v18, v17);
    v22 = Optional.description.getter(v19);
    v24 = v23;
    sub_10004D914(v17);
    *(_QWORD *)(v0 + 200) = sub_10003E8EC(v22, v24, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v9 + 4);
    swift_bridgeObjectRelease(v24);
    sub_10043169C(v20);
    sub_10043169C(v20);
    *(_WORD *)(v9 + 12) = 2114;
    swift_errorRetain(v15);
    v25 = _swift_stdlib_bridgeErrorToNSError(v15);
    *(_QWORD *)(v0 + 224) = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v38, v0 + 232, v9 + 14);
    *v10 = v25;
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    *(_WORD *)(v9 + 22) = 2112;
    *(_QWORD *)(v0 + 216) = v16;
    v26 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v38, v9 + 24);
    v10[1] = (uint64_t)v16;
    sub_10043169C(v20);
    sub_10043169C(v20);
    _os_log_impl((void *)&_mh_execute_header, log, v40, "Failed to accept competition request from friend: %{public}s error: %{public}@ - %@", (uint8_t *)v9, 0x20u);
    v27 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v10, 2, v27);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {
    v14 = *(uint64_t **)(v0 + 240);
    sub_10043169C(v14);
    sub_10043169C(v14);
  }
  v29 = *(void **)(v0 + 312);
  v28 = *(_QWORD *)(v0 + 320);
  v30 = **(_QWORD **)(v0 + 240);
  KeyPath = swift_getKeyPath(&unk_10063FC58);
  v32 = swift_getKeyPath(&unk_10063FC80);
  *(_QWORD *)(v0 + 160) = v29;
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0;
  *(_QWORD *)(v0 + 168) = 0;
  *(_BYTE *)(v0 + 192) = 14;
  v33 = v29;
  swift_retain(v30);
  static Published.subscript.setter(v0 + 160, v30, KeyPath, v32);
  swift_errorRelease(v28);
  v34 = *(_QWORD *)(v0 + 272);
  v36 = *(_QWORD *)(v0 + 256);
  v35 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100499B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[10] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[11] = v5;
  v3[12] = v6;
  return swift_task_switch(sub_100499BDC, v5, v6);
}

uint64_t sub_100499BDC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  int *v10;
  _QWORD *v11;
  uint64_t (*v12)(void);

  v1 = *(void **)(*(_QWORD *)(v0 + 56) + 40);
  if ((objc_msgSend(v1, "isMyActivityDataCurrentlyHidden") & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(uint64_t **)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    swift_release(*(_QWORD *)(v0 + 80));
    v5 = *v3;
    KeyPath = swift_getKeyPath(&unk_10063FC58);
    v7 = swift_getKeyPath(&unk_10063FC80);
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = v4;
    *(_QWORD *)(v0 + 32) = v2;
    *(_QWORD *)(v0 + 40) = 0;
    *(_BYTE *)(v0 + 48) = 15;
    v8 = v1;
    swift_retain(v2);
    swift_retain(v5);
    static Published.subscript.setter(v0 + 16, v5, KeyPath, v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = *(int **)(v0 + 64);
    v12 = (uint64_t (*)(void))((char *)v10 + *v10);
    v11 = (_QWORD *)swift_task_alloc(v10[1]);
    *(_QWORD *)(v0 + 104) = v11;
    *v11 = v0;
    v11[1] = sub_100499CF8;
    return v12();
  }
}

uint64_t sub_100499CF8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  return swift_task_switch(sub_100499D44, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_100499D44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100499D74()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_10063FC30);
  v1 = sub_100047110(&qword_100821A78);
  v2 = sub_100028384(&qword_100836038, &qword_100821A78, (uint64_t)&protocol conformance descriptor for Set<A>);
  v3 = sub_1000083D8((unint64_t *)&qword_1008274E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v4 = Sequence.sorted<A>(key:)(KeyPath, v1, v2, v3);
  swift_release(KeyPath);
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v4);
    return;
  }
  if (v4 < 0)
    v14 = v4;
  else
    v14 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v5)
    goto LABEL_18;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, "hkWorkoutFromFriendWorkout");

      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v7);
      }
    }
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_100499F60(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v1 = objc_msgSend(a1, "friendWorkouts");
  v2 = (uint64_t)_swiftEmptyArrayStorage;
  if (v1)
  {
    v3 = v1;
    v4 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    v5 = sub_100047110(&qword_100821A78);
    v6 = sub_1004650F0();
    v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5, v6);

    v20 = v7;
    KeyPath = swift_getKeyPath(&unk_10063FBF8);
    v9 = sub_100047110(&qword_100836028);
    v10 = sub_100028384(&qword_100836030, &qword_100836028, (uint64_t)&protocol conformance descriptor for [A : B]);
    v11 = Sequence.sorted<A>(key:)(KeyPath, v9, v10, &protocol witness table for Int);
    swift_release(KeyPath);
    swift_bridgeObjectRelease(v20);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain(v11);
      v13 = (uint64_t *)(v11 + 40);
      do
      {
        v14 = *v13;
        v15 = (id)*(v13 - 1);
        swift_bridgeObjectRetain(v14);
        sub_100499D74();
        v17 = v16;
        swift_bridgeObjectRelease(v14);

        sub_10013BFBC(v17);
        v13 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n(v11, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v11);
    }
    v2 = sub_100498224((unint64_t)_swiftEmptyArrayStorage);
  }
  if ((v2 & 0x8000000000000000) == 0 && (v2 & 0x4000000000000000) == 0)
    return v2 & 0xFFFFFFFFFFFFFF8;
  v18 = sub_1002958E8(v2);
  swift_bridgeObjectRelease(v2);
  return (uint64_t)v18;
}

id sub_10049A11C(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t inited;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  NSString *v27;
  id v28;
  NSString *v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class v33;
  id v34;
  NSString *v36;
  NSString *v37;
  id v38;
  uint64_t v39;
  _BYTE v41[112];
  _BYTE v42[120];

  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v4 = objc_msgSend(a1, "as_detailedSharingDurationString");
  if (v4)
  {
    v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v7 = 0xE000000000000000;
  }
  v39 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v39, v42);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v9 = (void *)objc_opt_self(UIColor);
  v37 = NSForegroundColorAttributeName;
  v38 = v9;
  v10 = objc_msgSend(v9, "secondaryLabelColor");
  v11 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v12 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 80) = v3;
  v36 = NSFontAttributeName;
  v13 = v3;
  v14 = sub_100038C84(inited);
  v15 = objc_allocWithZone((Class)NSMutableAttributedString);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v15, "initWithString:attributes:", v16, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if ((objc_msgSend(a1, "hasPendingCompetitionRequestFromMe") & 1) != 0
    || objc_msgSend(a1, "isCompetitionActive"))
  {
    v19 = objc_msgSend(a1, "as_competitionStatusBreadcrumbStringForExperienceType:", a2);
    if (v19)
    {
      v20 = v19;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v23 = objc_allocWithZone((Class)NSAttributedString);
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(v23, "initWithString:", v24);

      objc_msgSend(v18, "appendAttributedString:", v25);
      v26 = swift_initStackObject(v39, v41);
      *(_OWORD *)(v26 + 16) = xmmword_100620BC0;
      *(_QWORD *)(v26 + 32) = v37;
      v27 = v37;
      *(_QWORD *)(v26 + 40) = objc_msgSend(v38, "as_darkCompetitionGold");
      *(_QWORD *)(v26 + 64) = v11;
      *(_QWORD *)(v26 + 72) = v36;
      *(_QWORD *)(v26 + 104) = v12;
      *(_QWORD *)(v26 + 80) = v13;
      v28 = v13;
      v29 = v36;
      v30 = sub_100038C84(v26);
      v31 = objc_allocWithZone((Class)NSAttributedString);
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v22);
      v33 = Dictionary._bridgeToObjectiveC()().super.isa;
      v34 = objc_msgSend(v31, "initWithString:attributes:", v32, v33, swift_bridgeObjectRelease(v30).n128_f64[0]);

      objc_msgSend(v18, "appendAttributedString:", v34);
    }
  }

  return v18;
}

void sub_10049A4F8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  id v16;
  id v17;
  id v18;
  void *v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  id v27;
  unsigned __int8 v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  swift_retain(a1);
  v16 = a3;
  v17 = a5;
  v18 = objc_msgSend(v16, "currentSnapshot", swift_retain(a7).n128_f64[0]);
  v31 = a7;
  v32 = a2;
  v29 = v17;
  v30 = a1;
  if (v18)
  {
    v19 = v18;
    if ((objc_msgSend(v18, "hasCarriedForwardGoals") & 1) != 0)
    {
      v20 = a4;
      v21 = 0;
    }
    else
    {
      v22 = objc_msgSend(v19, "activitySummary");
      v21 = v22;
      v20 = a4;
      if (v22)
        objc_msgSend(v22, "setDeprecatedPauseForInternalSwiftClient:", a4 & 1);
    }

  }
  else
  {
    v20 = a4;
    v21 = 0;
  }
  v23 = sub_100499F60(v16);
  v24 = FIExperienceTypeWithHealthStore(a6);
  v25 = sub_10049A11C(v16, v24);
  v26 = FIDeviceMeetsMinimumOSVersionGlory();
  v27 = objc_msgSend(v16, "currentCacheIndex");
  v28 = objc_msgSend(v16, "estimatedIsStandaloneForSnapshotIndex:", v27);

  *(_QWORD *)a8 = v30;
  *(_QWORD *)(a8 + 8) = v29;
  *(_QWORD *)(a8 + 16) = v31;
  *(_QWORD *)(a8 + 24) = v24;
  *(_BYTE *)(a8 + 32) = v26;
  *(_QWORD *)(a8 + 40) = v16;
  *(_BYTE *)(a8 + 48) = v20 & 1;
  *(_QWORD *)(a8 + 56) = v21;
  *(_QWORD *)(a8 + 64) = v23;
  *(_QWORD *)(a8 + 72) = v32;
  *(_QWORD *)(a8 + 80) = v25;
  *(_BYTE *)(a8 + 88) = v28;
}

const char *sub_10049A6A4()
{
  return "integerValue";
}

id sub_10049A6B0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "integerValue");
  *a2 = result;
  return result;
}

uint64_t sub_10049A6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_1008221B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10049A72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_1008221B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10049A77C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  return swift_deallocObject(v0, 105, 7);
}

uint64_t sub_10049A7D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10083605C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_1004987CC(v0 + 16);
}

uint64_t sub_10049A824()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  swift_release(*(_QWORD *)(v0 + 120));
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10049A888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0 + 16;
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = (_QWORD *)swift_task_alloc(dword_10083606C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1000DA0E4;
  return sub_100499028(v2, v4, v3);
}

uint64_t sub_10049A8E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10063FCE0;
  result = type metadata accessor for Binding(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 56);
    return 0;
  }
  return result;
}

uint64_t *sub_10049A960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, unint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v9 = v8 & (v6 + 16);
  v10 = v6 & 0x100000;
  if (v7 > 7 || v10 != 0 || ((v7 + 16) & (unint64_t)~v7) + *(_QWORD *)(v5 + 64) + v9 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + v9);
    swift_retain(v13);
  }
  else
  {
    v14 = ~v7;
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    v16 = (_QWORD *)(v8 & ((unint64_t)a1 + 23));
    v17 = (uint64_t *)(v8 & ((unint64_t)a2 + 23));
    v18 = *v17;
    *v16 = *v17;
    v19 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    v20 = (uint64_t *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    v21 = *v20;
    *v19 = *v20;
    v22 = v7 + 8;
    v23 = ((unint64_t)v19 + v22) & v14;
    v24 = ((unint64_t)v20 + v22) & v14;
    v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v15);
    swift_retain(v18);
    swift_retain(v21);
    v25(v23, v24, v4);
  }
  return a1;
}

uint64_t sub_10049AA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (_QWORD *)((a1 + (v6 | 7) + 16) & ~(v6 | 7));
  swift_release(*v7);
  v8 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release(*v8);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)v8 + v6 + 8) & ~v6, v4);
}

_QWORD *sub_10049AAD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 | 7) + 16;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  v10 = (uint64_t *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  v11 = *v10;
  *v9 = *v10;
  v12 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (uint64_t *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  *v12 = *v13;
  v15 = ((unint64_t)v12 + v7 + 8) & ~v7;
  v16 = ((unint64_t)v13 + v7 + 8) & ~v7;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain(v4);
  swift_retain(v11);
  swift_retain(v14);
  v17(v15, v16, v5);
  return a1;
}

_QWORD *sub_10049AB8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 | 7) + 16;
  v12 = (uint64_t *)(((unint64_t)a1 + v11) & ~(v10 | 7));
  v13 = (uint64_t *)(((unint64_t)a2 + v11) & ~(v10 | 7));
  v14 = *v12;
  v15 = *v13;
  *v12 = *v13;
  swift_retain(v15);
  swift_release(v14);
  v16 = (uint64_t *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (uint64_t *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v17;
  v19 = *v16;
  *v16 = *v17;
  swift_retain(v18);
  swift_release(v19);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 24))(((unint64_t)v16 + v10 + 8) & ~v10, ((unint64_t)v17 + v10 + 8) & ~v10, v8);
  return a1;
}

_OWORD *sub_10049AC68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 | 7) + 16;
  v7 = (_QWORD *)(((unint64_t)a1 + v6) & ~(v5 | 7));
  v8 = (_QWORD *)(((unint64_t)a2 + v6) & ~(v5 | 7));
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v9 + v5 + 8) & ~v5, ((unint64_t)v10 + v5 + 8) & ~v5);
  return a1;
}

_QWORD *sub_10049ACE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 | 7) + 16;
  v12 = (uint64_t *)(((unint64_t)a1 + v11) & ~(v10 | 7));
  v13 = (uint64_t *)(((unint64_t)a2 + v11) & ~(v10 | 7));
  v14 = *v12;
  *v12 = *v13;
  swift_release(v14);
  v15 = (uint64_t *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (uint64_t *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = *v15;
  *v15 = *v16;
  swift_release(v17);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 40))(((unint64_t)v15 + v10 + 8) & ~v10, ((unint64_t)v16 + v10 + 8) & ~v10, v8);
  return a1;
}

uint64_t sub_10049AD9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  unint64_t v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (v5 >= 0)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = v8 | 7;
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_25;
  v11 = ((v8 + 16) & ~v8) + *(_QWORD *)(v4 + 64) + ((v8 + 16) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)(a1 + v11);
      if (!v13)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (!*(_WORD *)(a1 + v11))
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v15 < 2)
    {
LABEL_25:
      if (v7 != 0x7FFFFFFF)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v8
                                                                      + ((((a1 + v9 + 16) & ~v9) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 8) & ~v8);
      v17 = *(_QWORD *)(a1 + 8);
      if (v17 >= 0xFFFFFFFF)
        LODWORD(v17) = -1;
      return (v17 + 1);
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v11);
  if (!*(_BYTE *)(a1 + v11))
    goto LABEL_25;
LABEL_18:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if (!(_DWORD)v11)
    return v7 + v16 + 1;
  if (v11 > 3)
    LODWORD(v11) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10049AE84 + 4 * byte_10063FCA0[(v11 - 1)]))();
}

void sub_10049AF14(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (v7 >= 0)
    v8 = 0x7FFFFFFF;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v6 + 64) + ((v9 + 16) & ~(v9 | 7));
  v11 = a3 >= v8;
  v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      v15 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v15))
      {
        v13 = &dword_100000004;
      }
      else if (v15 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v15 > 1;
      }
    }
    else
    {
      v13 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v13 = 0;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v16;
          *((_BYTE *)a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, ((v9 + 16) & ~v9) + *(_QWORD *)(v6 + 64) + ((v9 + 16) & ~(v9 | 7)));
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t type metadata accessor for UnitsSettingsSectionView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for UnitsSettingsSectionView);
}

uint64_t sub_10049B14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 32);
  v5[0] = *(_OWORD *)(a2 + 16);
  v5[1] = v3;
  v6 = v2;
  return swift_getOpaqueTypeConformance2(v5, &unk_1006B8E98, 1);
}

uint64_t sub_10049B188(uint64_t a1)
{
  uint64_t v1;

  v1 = type metadata accessor for Binding(0, *(_QWORD *)(a1 + 16));
  return Binding.projectedValue.getter(v1);
}

uint64_t sub_10049B1C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t WitnessTable;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;

  v25 = a2;
  v4 = a1[2];
  v23 = a1[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v23, v4, &protocol requirements base descriptor for CaseIterable, &associated type descriptor for CaseIterable.AllCases);
  v6 = a1[5];
  v22 = a1[4];
  v7 = type metadata accessor for UnitsSettingsItemView(255, v4, v22, v6);
  v8 = a1[6];
  v37 = AssociatedTypeWitness;
  v38 = &type metadata for String;
  v39 = v7;
  v40 = v8;
  v41 = &protocol witness table for String;
  v9 = type metadata accessor for ForEach(255, &v37);
  v10 = type metadata accessor for Section(0, &type metadata for Text);
  v24 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - v14;
  v37 = sub_10049B3E4();
  v38 = v16;
  LOBYTE(v39) = v17 & 1;
  v40 = v18;
  v27 = v4;
  v28 = v23;
  v29 = v22;
  v30 = v6;
  v31 = v8;
  v32 = v2;
  WitnessTable = swift_getWitnessTable(&unk_100648E08, v7);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v9);
  Section<>.init(header:content:)(&v37, sub_10049B900, v26, &type metadata for Text, v9, &protocol witness table for Text, v19);
  v33 = &protocol witness table for Text;
  v34 = v19;
  v35 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v10);
  sub_10029340C((uint64_t)v12, v10, (uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v24 + 8);
  v20(v12, v10);
  sub_100291778((uint64_t)v15, v10, v25);
  return ((uint64_t (*)(char *, uint64_t))v20)(v15, v10);
}

uint64_t sub_10049B3E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain(v2);
  v3 = LocalizedStringKey.init(stringLiteral:)(v1, v2);
  return Text.init(_:tableName:bundle:comment:)(v3);
}

uint64_t sub_10049B444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t WitnessTable;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;

  v48 = a1;
  v49 = a7;
  v51 = a2;
  v52 = a3;
  v41 = a3;
  v42 = a5;
  v53 = a4;
  v54 = a5;
  v43 = a4;
  v55 = a6;
  v40 = a6;
  v12 = type metadata accessor for UnitsSettingsSectionView(0, (uint64_t)&v51);
  v13 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  v14 = *(_QWORD *)(v13 + 64);
  v15 = v13;
  __chkstk_darwin(v12);
  v45 = (char *)&v38 - v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for CaseIterable, &associated type descriptor for CaseIterable.AllCases);
  v46 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  v39 = (char *)&v38 - v18;
  v44 = type metadata accessor for UnitsSettingsItemView(255, a2, a4, a5);
  v51 = AssociatedTypeWitness;
  v52 = &type metadata for String;
  v53 = v44;
  v54 = (uint64_t)a6;
  v55 = &protocol witness table for String;
  v19 = type metadata accessor for ForEach(0, &v51);
  v47 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v38 - v24;
  v26 = v41;
  dispatch thunk of static CaseIterable.allCases.getter(a2, v41, v23);
  v27 = v15;
  v28 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v45, v48, v12);
  v29 = *(unsigned __int8 *)(v15 + 80);
  v30 = (v29 + 56) & ~v29;
  v31 = (char *)swift_allocObject(&unk_1007A2C58, v30 + v14, v29 | 7);
  *((_QWORD *)v31 + 2) = a2;
  *((_QWORD *)v31 + 3) = v26;
  v32 = v42;
  *((_QWORD *)v31 + 4) = v43;
  *((_QWORD *)v31 + 5) = v32;
  v33 = v40;
  *((_QWORD *)v31 + 6) = v40;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v31[v30], v28, v38);
  v34 = v44;
  WitnessTable = swift_getWitnessTable(&unk_100648E08, v44);
  ForEach<>.init(_:content:)(v39, sub_10049B9E0, v31, v46, &type metadata for String, v34, v33, WitnessTable, v32);
  v50 = WitnessTable;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v19);
  sub_10029340C((uint64_t)v21, v19, (uint64_t)v25);
  v36 = *(void (**)(char *, uint64_t))(v47 + 8);
  v36(v21, v19);
  sub_100291778((uint64_t)v25, v19, v49);
  return ((uint64_t (*)(char *, uint64_t))v36)(v25, v19);
}

uint64_t sub_10049B710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  v32 = a7;
  v33 = a2;
  v30 = a4;
  v34 = a8;
  v12 = type metadata accessor for Binding(0, a3);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UnitsSettingsItemView(0, a3, a5, a6);
  v31 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v30 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, a1, a3, v23);
  v35[0] = a3;
  v35[1] = v30;
  v35[2] = a5;
  v35[3] = a6;
  v35[4] = v32;
  v26 = type metadata accessor for UnitsSettingsSectionView(0, (uint64_t)v35);
  v27 = type metadata accessor for Binding(0, *(_QWORD *)(v26 + 16));
  Binding.projectedValue.getter(v27);
  sub_1005CC970((uint64_t)v18, (uint64_t)v14, a3, a5, a6, (uint64_t)v21);
  swift_getWitnessTable(&unk_100648E08, v19);
  sub_10029340C((uint64_t)v21, v19, (uint64_t)v25);
  v28 = *(void (**)(char *, uint64_t))(v31 + 8);
  v28(v21, v19);
  sub_100291778((uint64_t)v25, v19, v34);
  return ((uint64_t (*)(char *, uint64_t))v28)(v25, v19);
}

uint64_t sub_10049B900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10049B444(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), a1);
}

uint64_t sub_10049B910()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v21[0] = *(_OWORD *)(v0 + 16);
  v20 = *(_QWORD *)&v21[0];
  v21[1] = v2;
  v22 = v1;
  v3 = type metadata accessor for UnitsSettingsSectionView(0, (uint64_t)v21);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v6 + 8), v10, v11, v12, v13, v14, v15, v16);
  v17 = (char *)(v9 + *(int *)(v3 + 60));
  swift_release(*(_QWORD *)v17);
  swift_release(*((_QWORD *)v17 + 1));
  v18 = type metadata accessor for Binding(0, v20);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(&v17[*(int *)(v18 + 32)], v20);
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_10049B9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UnitsSettingsSectionView(0, (uint64_t)v12) - 8)
                           + 80);
  return sub_10049B710(a1, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_10049BA74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v1 = *a1;
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a1[1], *a1, &protocol requirements base descriptor for CaseIterable, &associated type descriptor for CaseIterable.AllCases);
  v6 = type metadata accessor for UnitsSettingsItemView(255, v1, v2, v3);
  v10[0] = AssociatedTypeWitness;
  v10[1] = &type metadata for String;
  v10[2] = v6;
  v10[3] = v4;
  v10[4] = &protocol witness table for String;
  v7 = type metadata accessor for ForEach(255, v10);
  v8 = type metadata accessor for Section(255, &type metadata for Text);
  swift_getWitnessTable(&unk_100648E08, v6);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v7);
  return swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v8);
}

char *sub_10049BBCC()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  ValueWitnessTable *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  objc_class *v61;
  char *v62;
  double v63;
  objc_class *v64;
  char *v65;
  void *v66;
  char *v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  void *v77;
  os_log_type_t v78;
  BOOL v79;
  NSObject *v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  id v97;
  objc_super v98;
  objc_super v99;
  _QWORD v100[2];
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  ValueMetadata *v104;
  _UNKNOWN **v105;

  ObjectType = swift_getObjectType(v0);
  v2 = sub_100047110(&qword_100824FE0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window] = 0;
  v6 = objc_allocWithZone((Class)HKHealthStore);
  v7 = v0;
  v8 = objc_msgSend(v6, "init");
  v9 = objc_msgSend(objc_allocWithZone((Class)_HKWheelchairUseCharacteristicCache), "initWithHealthStore:", v8);
  if (!v9)
    __break(1u);
  v10 = v9;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_wheelchairUseCache] = v9;
  type metadata accessor for Dependencies(0);
  v104 = (ValueMetadata *)sub_10001E724(0, (unint64_t *)&unk_1008361C0, _HKWheelchairUseCharacteristicCache_ptr);
  v105 = (_UNKNOWN **)&protocol witness table for _HKWheelchairUseCharacteristicCache;
  *(_QWORD *)&v103 = v10;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v11 = v10;
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = static Dependencies.browsing(wheelchairStatus:queue:)(&v103, v13);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v103);
  v15 = OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_dependencies;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_dependencies] = v14;
  v16 = qword_10081D6E8;
  swift_retain(v14);
  if (v16 != -1)
    swift_once(&qword_10081D6E8, sub_1001B9EB8);
  v17 = sub_10003CE9C(v2, (uint64_t)qword_100824FC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v17, v2);
  TestProperty.wrappedValue.getter(&v103, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v97 = v8;
  v95 = ObjectType;
  if (v103 == 1)
  {
    v18 = type metadata accessor for AppCoordinator(0);
    swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
    v21 = AppCoordinator.init(dependencies:)(v14);
    v23 = 0x8000000000000000;
  }
  else
  {
    v19 = objc_allocWithZone((Class)type metadata accessor for BrowsingViewController(0));
    v20 = swift_retain(v14);
    v21 = BrowsingViewController.init(dependencies:fitnessSettingsProvider:)(v20);
    v22 = type metadata accessor for MetricSceneLifecycleTracker(0);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v23 = MetricSceneLifecycleTracker.init(dependencies:)(v14);
  }
  v24 = (uint64_t *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator];
  *v24 = v21;
  v24[1] = v23;
  v25 = *(_QWORD *)&v7[v15];
  v26 = type metadata accessor for EngagementAppBadgeProvider();
  v27 = swift_allocObject(v26, 56, 7);
  swift_retain(v25);
  v28 = sub_100047110((uint64_t *)&unk_1008361D0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)((_QWORD *)(v27 + 16), 0, 0, v28);
  swift_release(v25);
  v29 = OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_engagementAppBadgeProvider;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_engagementAppBadgeProvider] = v27;
  v30 = *(_QWORD *)&v7[v15];
  swift_retain(v30);
  v31 = sub_100047110(&qword_100830D78);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v103, 0, 0, v31);
  swift_release(v30);
  v32 = *(_QWORD *)&v7[v29];
  v33 = *(_QWORD *)&v7[v15];
  swift_retain(v32);
  swift_retain(v33);
  v34 = sub_100047110((uint64_t *)&unk_1008361E0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v100, 0, 0, v34);
  swift_release(v33);
  v35 = v100[0];
  v36 = v100[1];
  v37 = *(_QWORD *)&v7[v15];
  swift_retain(v37);
  v38 = sub_100047110(&qword_100839780);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v101, 0, 0, v38);
  swift_release(v37);
  v39 = objc_allocWithZone((Class)type metadata accessor for FitnessAppBadgeAggregator());
  v40 = sub_100025EF4(0, &v103, v32, v35, v36, &v101);
  swift_release(v32);
  swift_unknownObjectRelease(v35);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_fitnessAppBadgeAggregator] = v40;
  v41 = *(_QWORD *)&v7[v15];
  v42 = (void *)*v24;
  v43 = v24[1];
  v104 = &type metadata for SeymourBrowsingCoordinator;
  v105 = &off_10078C638;
  *(_QWORD *)&v103 = v42;
  *((_QWORD *)&v103 + 1) = v43;
  v44 = type metadata accessor for URLNavigator();
  v45 = swift_allocObject(v44, 200, 7);
  v46 = sub_10017C044((uint64_t)&v103, (uint64_t)&type metadata for SeymourBrowsingCoordinator);
  __chkstk_darwin(v46);
  v48 = (uint64_t *)((char *)&v94 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  ((void (*)(_QWORD *, uint64_t))v49->initializeWithCopy)(v48, v50);
  v51 = *v48;
  v52 = v48[1];
  sub_1001B9E4C(v42, v43);
  sub_1001B9E4C(v42, v43);
  sub_1001B9E4C(v42, v43);
  swift_retain(v41);
  v54 = sub_100538CCC(v53, v51, v52, (uint64_t)v42, v43, 0, v45);
  swift_release(v41);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v103);
  sub_1001B9E74(v42, v43);
  v55 = OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator] = v54;
  v56 = *(_QWORD *)&v7[v15];
  swift_retain(v56);
  v57 = sub_100047110((uint64_t *)&unk_1008361F0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v103, 0, 0, v57);
  swift_release(v56);
  v58 = v103;
  v59 = *(_QWORD *)&v7[v15];
  swift_unknownObjectRetain(v103);
  swift_retain(v59);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v103, 0, 0, v34);
  swift_release(v59);
  v60 = *(_QWORD *)&v7[v55];
  v61 = (objc_class *)type metadata accessor for SeymourNotificationResponseCoordinator();
  v96 = v103;
  v62 = (char *)objc_allocWithZone(v61);
  *(_QWORD *)&v62[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_amsBag] = v58;
  *(_OWORD *)&v62[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_eventHub] = v96;
  *(_QWORD *)&v62[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_urlNavigator] = v60;
  v99.receiver = v62;
  v99.super_class = v61;
  *(_QWORD *)&v63 = swift_retain(v60).n128_u64[0];
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_seymourNotificationResponseCoordinator] = objc_msgSendSuper2(&v99, "init", v63);

  v64 = (objc_class *)type metadata accessor for TabletSceneDelegate();
  v98.receiver = v7;
  v98.super_class = v64;
  v65 = (char *)objc_msgSendSuper2(&v98, "init");
  swift_unknownObjectWeakAssign(*(_QWORD *)&v65[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_fitnessAppBadgeAggregator]+ OBJC_IVAR___CHFitnessAppBadgeAggregator_delegate, v65);
  v66 = (void *)objc_opt_self(UNUserNotificationCenter);
  v67 = v65;
  v68 = objc_msgSend(v66, "currentNotificationCenter");
  objc_msgSend(v68, "setDelegate:", v67);

  v69 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  *(_QWORD *)&v103 = 0;
  LODWORD(v61) = objc_msgSend(v69, "setCategory:error:", AVAudioSessionCategoryAmbient, &v103);

  v70 = v103;
  if ((_DWORD)v61)
  {
    v71 = (id)v103;
    swift_unknownObjectRelease(v58);

  }
  else
  {
    v72 = (id)v103;
    v73 = _convertNSErrorToError(_:)(v70);

    v75 = swift_willThrow(v74);
    v76 = static os_log_type_t.default.getter(v75);
    v77 = (void *)HKLogActivity;
    v78 = v76;
    v79 = os_log_type_enabled(HKLogActivity, v76);
    v80 = v77;
    if (v79)
    {
      v81 = (uint8_t *)swift_slowAlloc(12, -1);
      v82 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v103 = v82;
      *(_DWORD *)v81 = 136315138;
      v83 = _typeName(_:qualified:)(v95, 0);
      v85 = (CHWorkoutDetailHeartRateTableViewCell *)v84;
      v101 = sub_10003E8EC(v83, v84, (uint64_t *)&v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v81 + 4);
      swift_bridgeObjectRelease(v85, v86, v87, v88, v89, v90, v91, v92);
      _os_log_impl((void *)&_mh_execute_header, v80, v78, "%s failed to set AVAudioSession category to ambient", v81, 0xCu);
      swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v82, -1, -1);
      swift_slowDealloc(v81, -1, -1);
    }
    swift_unknownObjectRelease(v58);

    swift_errorRelease(v73);
  }
  return v67;
}

id sub_10049C430()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TabletSceneDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TabletSceneDelegate()
{
  return objc_opt_self(_TtC10FitnessApp19TabletSceneDelegate);
}

uint64_t sub_10049C51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for Logger(0);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[9] = v10;
  v6[10] = v11;
  return swift_task_switch(sub_10049C5B4, v10, v11);
}

uint64_t sub_10049C5B4()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[2] + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator);
  v0[11] = *v1;
  v0[12] = v1[1];
  return swift_task_switch(sub_10049C5E8, 0, 0);
}

uint64_t sub_10049C5E8()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  _QWORD *v8;

  if ((v0[12] & 0x8000000000000000) == 0)
    return swift_task_switch(sub_10049C7E0, v0[9], v0[10]);
  v3 = v0[6];
  v2 = v0[7];
  v4 = v0[5];
  swift_retain(v0[11]);
  static Log.default.getter(v5);
  v6._countAndFlagsBits = 0xD00000000000006FLL;
  v6._object = (void *)0x80000001006A1100;
  v7._object = (void *)0x80000001006A1170;
  v7._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to AppCoordinator.activate(with:)[1]);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_10049C6D0;
  return AppCoordinator.activate(with:)(v0[3]);
}

uint64_t sub_10049C6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10049C76C;
  else
    v3 = sub_10049C734;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10049C734()
{
  uint64_t v0;

  sub_1001B9E74(*(void **)(v0 + 88), *(_QWORD *)(v0 + 96));
  return swift_task_switch(sub_10049C7E0, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_10049C76C()
{
  uint64_t v0;

  sub_1001B9E74(*(void **)(v0 + 88), *(_QWORD *)(v0 + 96));
  return swift_task_switch(sub_10049C7A4, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_10049C7A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10049C7E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 64));
  sub_100548978(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10049CC50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  unint64_t v39;
  char v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  uint64_t v60;
  uint64_t v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  unint64_t v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  _QWORD v79[3];
  char *v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  void *v88;
  CHWorkoutDetailHeartRateTableViewCell *v89;
  _QWORD v90[5];
  uint64_t v91;

  v79[2] = a2;
  v91 = type metadata accessor for URL(0);
  v85 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v84 = (char *)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v79 - v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = __CocoaSet.makeIterator()(v7);
    v9 = sub_10001E724(0, &qword_100836190, UIOpenURLContext_ptr);
    v10 = sub_10049E79C();
    v11 = Set.Iterator.init(_cocoa:)(v90, v8, v9, v10);
    a1 = v90[0];
    v83 = v90[1];
    v12 = v90[2];
    v13 = v90[3];
    v14 = v90[4];
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a1 + 32);
    v16 = *(_QWORD *)(a1 + 56);
    v83 = a1 + 56;
    v17 = ~v15;
    v18 = -v15;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v14 = v19 & v16;
    swift_bridgeObjectRetain(a1);
    v12 = v17;
    v13 = 0;
  }
  v79[0] = v12;
  v81 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v82 = (unint64_t)(v12 + 64) >> 6;
  v80 = (char *)&type metadata for Swift.AnyObject + 8;
  while (a1 < 0)
  {
    v23 = __CocoaSet.Iterator.next()(v11);
    if (!v23)
      goto LABEL_41;
    v24 = v23;
    v86 = v23;
    v25 = sub_10001E724(0, &qword_100836190, UIOpenURLContext_ptr);
    swift_unknownObjectRetain(v24);
    swift_dynamicCast(&v88, &v86, v80, v25, 7);
    v26 = v88;
    swift_unknownObjectRelease(v24);
    v22 = v13;
    v20 = v14;
    if (!v26)
      goto LABEL_41;
LABEL_36:
    v30 = objc_msgSend(v26, "URL", v79[0]);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

    v31 = URL.scheme.getter();
    v33 = v32;
    v34 = *(uint64_t (**)(char *, uint64_t))(v85 + 8);
    v35 = v34(v6, v91);
    if (v33)
    {
      v36 = static EngagementConstants.badgeLaunchURLString.getter(v35);
      v38 = v37;
      v88 = (void *)v36;
      v89 = v37;
      v86 = v31;
      v87 = v33;
      v39 = sub_100038CA0();
      v40 = StringProtocol.contains<A>(_:)(&v86, &type metadata for String, &type metadata for String, v39, v39);
      swift_bridgeObjectRelease(v33, v41, v42, v43, v44, v45, v46, v47);
      swift_bridgeObjectRelease(v38, v48, v49, v50, v51, v52, v53, v54);
      if ((v40 & 1) != 0)
      {
        sub_100010160();
        sub_100017444();
        sub_10001ADE4();
      }
    }
    v55 = objc_msgSend(v26, "URL");
    v56 = v84;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v55);

    v57 = URL.scheme.getter();
    v59 = v58;
    v60 = v34(v56, v91);
    if (v59)
    {
      v61 = static EngagementConstants.notificationNewFeaturesTopic.getter(v60);
      v63 = v62;
      v88 = (void *)v61;
      v89 = v62;
      v86 = v57;
      v87 = v59;
      v64 = sub_100038CA0();
      StringProtocol.contains<A>(_:)(&v86, &type metadata for String, &type metadata for String, v64, v64);

      swift_bridgeObjectRelease(v59, v65, v66, v67, v68, v69, v70, v71);
      swift_bridgeObjectRelease(v63, v72, v73, v74, v75, v76, v77, v78);
    }
    else
    {

    }
    v13 = v22;
    v14 = v20;
  }
  if (v14)
  {
    v20 = (v14 - 1) & v14;
    v21 = __clz(__rbit64(v14)) | (v13 << 6);
    v22 = v13;
LABEL_35:
    v26 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v21);
    if (!v26)
      goto LABEL_41;
    goto LABEL_36;
  }
  v27 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v27 >= v82)
      goto LABEL_41;
    v28 = *(_QWORD *)(v83 + 8 * v27);
    v22 = v13 + 1;
    if (!v28)
    {
      v22 = v13 + 2;
      if (v13 + 2 >= v82)
        goto LABEL_41;
      v28 = *(_QWORD *)(v83 + 8 * v22);
      if (!v28)
      {
        v22 = v13 + 3;
        if (v13 + 3 >= v82)
          goto LABEL_41;
        v28 = *(_QWORD *)(v83 + 8 * v22);
        if (!v28)
        {
          v22 = v13 + 4;
          if (v13 + 4 >= v82)
            goto LABEL_41;
          v28 = *(_QWORD *)(v83 + 8 * v22);
          if (!v28)
          {
            v22 = v13 + 5;
            if (v13 + 5 >= v82)
              goto LABEL_41;
            v28 = *(_QWORD *)(v83 + 8 * v22);
            if (!v28)
            {
              v29 = v13 + 6;
              while (v82 != v29)
              {
                v28 = *(_QWORD *)(v83 + 8 * v29++);
                if (v28)
                {
                  v22 = v29 - 1;
                  goto LABEL_34;
                }
              }
LABEL_41:
              sub_100133140(a1);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v20 = (v28 - 1) & v28;
    v21 = __clz(__rbit64(v28)) + (v22 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

void sub_10049D0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  unint64_t v37;
  char v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  _QWORD v53[3];
  char *v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[5];
  uint64_t v61;

  v53[2] = a2;
  v3 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = sub_10001E724(0, &qword_100836190, UIOpenURLContext_ptr);
    v9 = sub_10049E79C();
    v10 = Set.Iterator.init(_cocoa:)(v60, v7, v8, v9);
    a1 = v60[0];
    v57 = v60[1];
    v11 = v60[2];
    v12 = v60[3];
    v13 = v60[4];
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 56);
    v57 = a1 + 56;
    v16 = ~v14;
    v17 = -v14;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v13 = v18 & v15;
    swift_bridgeObjectRetain(a1);
    v11 = v16;
    v12 = 0;
  }
  v53[0] = v11;
  v55 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v56 = (unint64_t)(v11 + 64) >> 6;
  v54 = (char *)&type metadata for Swift.AnyObject + 8;
  while (a1 < 0)
  {
    v22 = __CocoaSet.Iterator.next()(v10);
    if (!v22)
      goto LABEL_38;
    v23 = v22;
    v58[0] = v22;
    v24 = sub_10001E724(0, &qword_100836190, UIOpenURLContext_ptr);
    swift_unknownObjectRetain(v23);
    swift_dynamicCast(v59, v58, v54, v24, 7);
    v25 = (id)v59[0];
    swift_unknownObjectRelease(v23);
    v21 = v12;
    v19 = v13;
    if (!v25)
      goto LABEL_38;
LABEL_35:
    v29 = objc_msgSend(v25, "URL", v53[0]);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v30 = URL.scheme.getter();
    v32 = v31;
    v33 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v5, v3);
    if (v32)
    {
      v34 = static EngagementConstants.badgeLaunchURLString.getter(v33);
      v36 = v35;
      v59[0] = v34;
      v59[1] = v35;
      v58[0] = v30;
      v58[1] = v32;
      v37 = sub_100038CA0();
      v38 = StringProtocol.contains<A>(_:)(v58, &type metadata for String, &type metadata for String, v37, v37);
      swift_bridgeObjectRelease(v32, v39, v40, v41, v42, v43, v44, v45);
      swift_bridgeObjectRelease(v36, v46, v47, v48, v49, v50, v51, v52);
      if ((v38 & 1) != 0)
      {
        sub_100010160();
        sub_100017444();
        sub_10001ADE4();
      }
    }

    v12 = v21;
    v13 = v19;
  }
  if (v13)
  {
    v19 = (v13 - 1) & v13;
    v20 = __clz(__rbit64(v13)) | (v12 << 6);
    v21 = v12;
LABEL_34:
    v25 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v20);
    if (!v25)
      goto LABEL_38;
    goto LABEL_35;
  }
  v26 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v26 >= v56)
      goto LABEL_38;
    v27 = *(_QWORD *)(v57 + 8 * v26);
    v21 = v12 + 1;
    if (!v27)
    {
      v21 = v12 + 2;
      if (v12 + 2 >= v56)
        goto LABEL_38;
      v27 = *(_QWORD *)(v57 + 8 * v21);
      if (!v27)
      {
        v21 = v12 + 3;
        if (v12 + 3 >= v56)
          goto LABEL_38;
        v27 = *(_QWORD *)(v57 + 8 * v21);
        if (!v27)
        {
          v21 = v12 + 4;
          if (v12 + 4 >= v56)
            goto LABEL_38;
          v27 = *(_QWORD *)(v57 + 8 * v21);
          if (!v27)
          {
            v21 = v12 + 5;
            if (v12 + 5 >= v56)
              goto LABEL_38;
            v27 = *(_QWORD *)(v57 + 8 * v21);
            if (!v27)
            {
              v28 = v12 + 6;
              while (v56 != v28)
              {
                v27 = *(_QWORD *)(v57 + 8 * v28++);
                if (v27)
                {
                  v21 = v28 - 1;
                  goto LABEL_33;
                }
              }
LABEL_38:
              sub_100133140(a1);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v19 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v21 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

void sub_10049D474(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  id v23;
  double v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  char *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  char *v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v6 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_opt_self(UIWindowScene);
  v10 = swift_dynamicCastObjCClass(a1, v9);
  if (v10)
  {
    v11 = v10;
    v12 = objc_allocWithZone((Class)UIWindow);
    v13 = a1;
    v14 = objc_msgSend(v12, "initWithWindowScene:", v11);
    v15 = OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window;
    v16 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window];
    *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window] = v14;

    v17 = *(void **)&v3[v15];
    if (v17
      && (sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr),
          v18 = v17,
          v19 = (void *)static UIColor.keyTint.getter(),
          objc_msgSend(v18, "setTintColor:", v19),
          v18,
          v19,
          (v20 = *(void **)&v3[v15]) != 0))
    {
      v21 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator];
      v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator + 8];
      v23 = v20;
      if ((v22 & 0x8000000000000000) != 0)
      {
        v26 = sub_1001B9E4C(v21, v22);
        v27 = AppCoordinator.rootViewController.getter(v26);
        sub_1001B9E74(v21, v22);
        v21 = (void *)v27;
      }
      else
      {
        sub_1001B9E4C(v21, v22);
        *(_QWORD *)&v24 = swift_release(v22).n128_u64[0];
      }
      objc_msgSend(v23, "setRootViewController:", v21, v24);

      v25 = *(void **)&v3[v15];
    }
    else
    {
      v25 = 0;
    }
    objc_msgSend(v25, "makeKeyAndVisible");
    v28 = objc_msgSend(a2, "URLContexts");
    v29 = sub_10001E724(0, &qword_100836190, UIOpenURLContext_ptr);
    v30 = sub_10049E79C();
    v31 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v28, v29, v30);

    v32 = v3;
    sub_10049CC50((uint64_t)v31, (uint64_t)v32);
    swift_bridgeObjectRelease(v31, v33, v34, v35, v36, v37, v38, v39);

    v40 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v8, 1, 1, v40);
    type metadata accessor for MainActor(0);
    v41 = v13;
    v42 = v32;
    v43 = a2;
    v44 = static MainActor.shared.getter(v43);
    v45 = (_QWORD *)swift_allocObject(&unk_1007A2DA0, 56, 7);
    v45[2] = v44;
    v45[3] = &protocol witness table for MainActor;
    v45[4] = v42;
    v45[5] = v11;
    v45[6] = v43;
    v46 = sub_1005A9074((uint64_t)v8, (uint64_t)&unk_1008361B0, (uint64_t)v45);
    swift_release(v46);

  }
}

uint64_t sub_10049D754(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t (*)(), uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;

  v2 = type metadata accessor for NavigationAnnotation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100836170);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100839C10);
  v11 = swift_allocObject(v10, ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72), *(unsigned __int8 *)(v3 + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100622F90;
  static NavigationAnnotation.external.getter();
  v22 = v11;
  v12 = sub_10049E668();
  v13 = sub_100047110(&qword_100836180);
  v14 = sub_10049E6B0();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v13, v14, v2, v12);
  sub_1005495EC(a1, (uint64_t)v5, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v6);
  v17 = v16;
  v18 = swift_allocObject(&unk_1007A2D78, 32, 7);
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  v15(sub_1001104CC, v18);
  swift_release(v17);
  v19 = swift_release(v18);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v19);
}

void sub_10049D91C(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(uint64_t (*)(), uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  _QWORD v29[2];

  v3 = type metadata accessor for NavigationAnnotation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100836170);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1;
  sub_10049D0BC((uint64_t)a1, (uint64_t)v11);

  swift_bridgeObjectRetain(a1);
  v13 = (void *)sub_100548964(v12);
  swift_bridgeObjectRelease(a1, v14, v15, v16, v17, v18, v19, v20);
  if (v13)
  {
    v29[0] = &_swiftEmptyArrayStorage;
    v21 = sub_10049E668();
    v22 = sub_100047110(&qword_100836180);
    v23 = sub_10049E6B0();
    dispatch thunk of SetAlgebra.init<A>(_:)(v29, v22, v23, v3, v21);
    sub_10054A154(v13, (uint64_t)v6, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v24 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v7);
    v26 = v25;
    v27 = swift_allocObject(&unk_1007A2D50, 32, 7);
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0;
    v24(sub_1001104CC, v27);

    swift_release(v26);
    v28 = swift_release(v27);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v28);
  }
}

uint64_t sub_10049DAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  _QWORD *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t ObjectType;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t (*)(), uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = sub_100047110((uint64_t *)&unk_100836170);
  v41 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BadgingCountsUpdated(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_fitnessAppBadgeAggregator);
  static Log.default.getter(v14);
  v15._countAndFlagsBits = 0xD000000000000065;
  v15._object = (void *)0x800000010068BFB0;
  v16._object = (void *)0x800000010068C020;
  v16._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v15, v16);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v17 = *(_QWORD *)(v13 + OBJC_IVAR___CHFitnessAppBadgeAggregator_appBadgeCount);
  v18 = *(CHWorkoutDetailHeartRateTableViewCell **)(v13 + OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedEngagementBadges);
  swift_bridgeObjectRetain(v18);
  v20 = sub_10004C800(v19);
  swift_bridgeObjectRelease(v18, v21, v22, v23, v24, v25, v26, v27);
  BadgingCountsUpdated.init(appBadgeCount:seymourTabBadges:)(v17, v20, v28);
  v29 = *(_QWORD *)(v13 + OBJC_IVAR___CHFitnessAppBadgeAggregator_eventHub + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v13 + OBJC_IVAR___CHFitnessAppBadgeAggregator_eventHub));
  dispatch thunk of EventHubProtocol.publish<A>(_:)(v8, v5, &protocol witness table for BadgingCountsUpdated, ObjectType, v29);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_BYTE *)(v13 + OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour) = 1;
  v31 = *(_QWORD **)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_engagementAppBadgeProvider);
  v32 = v31[5];
  v33 = v31[6];
  sub_100016804(v31 + 2, v32);
  dispatch thunk of EngagementClientProtocol.deleteAllEngagementBadges()(v32, v33);
  v34 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v2);
  v36 = v35;
  v37 = swift_allocObject(&unk_1007A2D28, 32, 7);
  *(_QWORD *)(v37 + 16) = 0;
  *(_QWORD *)(v37 + 24) = 0;
  v34(sub_1001104CC, v37);
  swift_release(v36);
  v38 = swift_release(v37);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v41 + 8))(v4, v2, v38);
}

uint64_t sub_10049DD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010160();
  sub_100017444();
  sub_10001ADE4();
  v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator);
  if ((*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator + 8) & 0x8000000000000000) != 0)
  {
    v7 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    v8 = (_QWORD *)swift_allocObject(&unk_1007A2D00, 40, 7);
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v5;
    swift_retain(v5);
    v9 = sub_1005A9074((uint64_t)v4, (uint64_t)&unk_100836188, (uint64_t)v8);
    swift_release(v9);
  }
  else
  {
    v6 = v5;
    dispatch thunk of BrowsingViewController.reportBrowsingBeganEvent()();

  }
  v10 = *(_QWORD **)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator);
  v11 = v10[14];
  v12 = v10[15];
  sub_100016804(v10 + 11, v11);
  return dispatch thunk of MetricSceneLifecycleReporting.reportDidBecomeActive()(v11, v12);
}

uint64_t sub_10049DE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint8_t *v32;
  uint8_t *v33;
  char *v34;
  _BYTE *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  unint64_t v43;
  void *v44;
  id v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  void (*v49)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;

  v0 = sub_100047110((uint64_t *)&unk_100836170);
  v73 = *(_QWORD *)(v0 - 8);
  v74 = v0;
  __chkstk_darwin(v0);
  v72 = (char *)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v69);
  v70 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NavigationRoutingBehavior(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NavigationSource(0);
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NavigationPriority(0);
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NavigationIntent(0);
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  __chkstk_darwin(v13);
  v64 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NavigationResource(0);
  v56 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  __chkstk_darwin(v15);
  v62 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for NavigationRequest(0);
  v67 = *(_QWORD *)(v17 - 8);
  v68 = v17;
  __chkstk_darwin(v17);
  v63 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Logger(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = static Log.engagement.getter(v23);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    v55 = v12;
    v28 = v4;
    v29 = v3;
    v30 = v9;
    v31 = v6;
    v32 = v27;
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Fitness received open notification settings", v27, 2u);
    v33 = v32;
    v6 = v31;
    v9 = v30;
    v3 = v29;
    v4 = v28;
    v12 = v55;
    swift_slowDealloc(v33, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v34 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v62, enum case for NavigationResource.notificationSettings(_:), v57);
  v35 = v64;
  *v64 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v58 + 104))(v35, enum case for NavigationIntent.presentModal(_:), v59);
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v12, enum case for NavigationPriority.takeover(_:), v61);
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v9, enum case for NavigationSource.default(_:), v66);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for NavigationRoutingBehavior.default(_:), v3);
  v75 = &_swiftEmptyArrayStorage;
  v36 = v6;
  v37 = sub_10049E668();
  v38 = sub_100047110(&qword_100836180);
  v39 = sub_10049E6B0();
  v40 = v70;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v75, v38, v39, v69, v37);
  v41 = v63;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v34, v35, v9, v36, v12, v40);
  v42 = sub_100016804((_QWORD *)(*(_QWORD *)(v71 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator) + 48), *(_QWORD *)(*(_QWORD *)(v71 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator) + 72));
  v44 = (void *)*v42;
  v43 = v42[1];
  if ((v43 & 0x8000000000000000) != 0)
  {
    v47 = swift_retain(*v42);
    v46 = v72;
    AppCoordinator.navigateToRequest(_:)(v41, v47);
    sub_1001B9E74(v44, v43);
  }
  else
  {
    v45 = v44;
    v46 = v72;
    BrowsingViewController.navigateToRequest(_:)(v41);

  }
  v48 = v74;
  v49 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v74);
  v51 = v50;
  v52 = swift_allocObject(&unk_1007A2CD8, 32, 7);
  *(_QWORD *)(v52 + 16) = 0;
  *(_QWORD *)(v52 + 24) = 0;
  v49(sub_100110028, v52);
  swift_release(v51);
  v53 = swift_release(v52);
  (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v46, v48, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v41, v68);
}

void sub_10049E388(void *a1, uint64_t a2, void (**a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *v18;
  NSObject **v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject **v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  v13 = _Block_copy(a3);
  static Log.engagement.getter(v13);
  v14 = a1;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v33 = a2;
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = (NSObject **)swift_slowAlloc(8, -1);
    v34 = v6;
    v35 = v14;
    v31 = v17;
    v32 = v7;
    *(_DWORD *)v17 = 138412290;
    v18 = v14;
    v7 = v32;
    v6 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v17 + 4);
    v19 = v30;
    *v30 = v14;

    a2 = v33;
    v20 = v16;
    v21 = v31;
    _os_log_impl((void *)&_mh_execute_header, v15, v20, "Fitness received notification response %@", v31, 0xCu);
    v22 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v19, 1, v22);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {

    v15 = v14;
  }

  v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v23(v12, v6);
  v24 = objc_msgSend((id)objc_opt_self(AMSUserNotification), "shouldHandleNotificationResponse:", v14);
  if ((_DWORD)v24)
  {
    v25 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_seymourNotificationResponseCoordinator);
    _Block_copy(a3);
    sub_1004A7E4C(v14, v25, a3);
    _Block_release(a3);
  }
  else
  {
    v26 = static Log.engagement.getter(v24);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unhandled user notification response", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    v23(v9, v6);
    a3[2](a3);
  }
  _Block_release(a3);
}

unint64_t sub_10049E668()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008396E0;
  if (!qword_1008396E0)
  {
    v1 = type metadata accessor for NavigationAnnotation(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationAnnotation, v1);
    atomic_store(result, (unint64_t *)&qword_1008396E0);
  }
  return result;
}

unint64_t sub_10049E6B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008396F0;
  if (!qword_1008396F0)
  {
    v1 = sub_100007050(&qword_100836180);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1008396F0);
  }
  return result;
}

uint64_t sub_10049E700()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10049E72C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100824FEC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  return sub_1001BA0CC();
}

unint64_t sub_10049E79C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836198;
  if (!qword_100836198)
  {
    v1 = sub_10001E724(255, &qword_100836190, UIOpenURLContext_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100836198);
  }
  return result;
}

uint64_t sub_10049E7FC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10049E838(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1008361AC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000DA0E4;
  return sub_10049C51C(a1, v4, v5, v6, v7, v8);
}

uint64_t *sub_10049E8B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = *(void **)((char *)a2 + v12);
  v14 = *(void **)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
  v15 = v13;

  v16 = a3[6];
  v17 = *(void **)((char *)a1 + v16);
  v18 = *(void **)((char *)a2 + v16);
  *(uint64_t *)((char *)a1 + v16) = (uint64_t)v18;
  v19 = v18;

  v20 = a3[7];
  v21 = *(void **)((char *)a1 + v20);
  v22 = *(void **)((char *)a2 + v20);
  *(uint64_t *)((char *)a1 + v20) = (uint64_t)v22;
  v23 = v22;

  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  LOBYTE(v21) = v26[16];
  sub_1000EB3F4(*(_QWORD *)v26, v28, (char)v21);
  v29 = *(_QWORD *)v25;
  v30 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v25 = v27;
  *((_QWORD *)v25 + 1) = v28;
  v31 = v25[16];
  v25[16] = (char)v21;
  sub_1000EB41C(v29, v30, v31);
  return a1;
}

char *sub_10049E9F8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = *(void **)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];

  v10 = a3[6];
  v11 = *(void **)&a1[v10];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];

  v12 = a3[7];
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = v16[16];
  v18 = *(_QWORD *)v15;
  v19 = *((_QWORD *)v15 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v20 = v15[16];
  v15[16] = v17;
  sub_1000EB41C(v18, v19, v20);
  return a1;
}

uint64_t sub_10049EB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10049EB1C);
}

uint64_t sub_10049EB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10049EB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10049EBA8);
}

uint64_t sub_10049EBA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FriendCardRingsView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008362B8;
  if (!qword_1008362B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FriendCardRingsView);
  return result;
}

void sub_10049EC60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    v4[3] = "\b";
    v4[4] = &unk_10063FDD0;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_10049ECEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B8F80, 1);
}

uint64_t sub_10049ECFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t result;
  uint64_t v21;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.footnote(_:), v7, v9);
  v12 = enum case for Font.Design.rounded(_:);
  v13 = type metadata accessor for Font.Design(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  v16 = static Font.Weight.medium.getter(v15);
  v17 = static Font.system(_:design:weight:)(v11, v6, *(_QWORD *)&v16, 0);
  sub_10001BE90((uint64_t)v6, &qword_10081F2F8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  v18 = Font.leading(_:)(v3, v17);
  v19 = swift_release(v17);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v19);
  qword_10086AC00 = v18;
  return result;
}

id sub_10049EECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  id result;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  char v49;
  char v50;
  uint64_t KeyPath;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  Class isa;
  Class v66;
  objc_class *v67;
  char *v68;
  id v69;
  Class v70;
  objc_class *v71;
  char *v72;
  char *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  CHWorkoutDetailHeartRateTableViewCell *v136;
  CHWorkoutDetailHeartRateTableViewCell *v137;
  char v138;
  uint64_t v139;
  double v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  __n128 v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  SEL v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  uint64_t v159;
  Class v160;
  Class v161;
  objc_class *v162;
  char *v163;
  id v164;
  Class v165;
  objc_class *v166;
  char *v167;
  char *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  CHWorkoutDetailHeartRateTableViewCell *v177;
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  SEL v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  SEL v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  uint64_t v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  objc_super v255;
  objc_super v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  _OWORD v273[9];
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  _OWORD v280[2];
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  uint64_t v288;
  _OWORD v289[10];
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  uint64_t v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  uint64_t v321;
  _OWORD v322[10];
  _OWORD v323[10];
  objc_super v324;
  objc_super v325;
  _OWORD v326[8];
  uint64_t v327;
  uint64_t v328;
  char v329;
  CHWorkoutDetailHeartRateTableViewCell *v330;
  uint64_t v331;
  char v332;

  v224 = a2;
  v225 = sub_100047110(&qword_100836318);
  __chkstk_darwin(v225);
  v215 = (uint64_t)&v211 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.Leading(0);
  v212 = *(_QWORD *)(v4 - 8);
  v213 = v4;
  __chkstk_darwin(v4);
  v211 = (char *)&v211 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100836320);
  __chkstk_darwin(v6);
  v214 = (uint64_t)&v211 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v219 = (uint64_t *)((char *)&v211 - v9);
  __chkstk_darwin(v10);
  v227 = (uint64_t)&v211 - v11;
  v221 = sub_100047110(&qword_100836328);
  __chkstk_darwin(v221);
  v223 = (uint64_t)&v211 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_100047110(&qword_100836330);
  __chkstk_darwin(v222);
  v217 = (uint64_t)&v211 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100836338);
  __chkstk_darwin(v14);
  v16 = (char *)&v211 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_100047110(&qword_100836340);
  __chkstk_darwin(v218);
  v216 = (uint64_t)&v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v211 - v19;
  __chkstk_darwin(v21);
  v220 = (uint64_t)&v211 - v22;
  v23 = type metadata accessor for DynamicTypeSize(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v211 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for FriendCardRingsView(0);
  v27 = a1 + *(int *)(v226 + 32);
  v29 = *(_QWORD *)v27;
  v28 = *(_QWORD *)(v27 + 8);
  v30 = *(_BYTE *)(v27 + 16);
  v228 = a1;
  sub_1003F6E18((uint64_t)v26);
  LODWORD(a1) = sub_10054FD90((uint64_t)v26, v29, v28, v30);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if ((_DWORD)a1 == 2)
  {
    *(_QWORD *)v16 = static VerticalAlignment.center.getter(v31);
    *((_QWORD *)v16 + 1) = 0;
    v16[16] = 1;
    v32 = sub_100047110(&qword_100836368);
    v33 = v228;
    sub_10049FEAC(v228, (uint64_t)&v16[*(int *)(v32 + 44)]);
    v35 = static Edge.Set.all.getter(v34);
    sub_100021CC0((uint64_t)v16, (uint64_t)v20, &qword_100836338);
    v36 = &v20[*(int *)(v218 + 36)];
    *v36 = v35;
    *(_OWORD *)(v36 + 8) = xmmword_100629490;
    *(_OWORD *)(v36 + 24) = xmmword_100622F60;
    v36[40] = 0;
    sub_10001BE90((uint64_t)v16, &qword_100836338);
    v37 = v220;
    sub_100045AD4((uint64_t)v20, v220, &qword_100836340);
    result = objc_msgSend(*(id *)(v33 + *(int *)(v226 + 20)), "displayName");
    if (result)
    {
      v39 = result;
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v42 = v41;

      *(_QWORD *)&v306 = v40;
      *((_QWORD *)&v306 + 1) = v42;
      v43 = sub_100038CA0();
      v44 = Text.init<A>(_:)(&v306, &type metadata for String, v43);
      v46 = v45;
      v48 = v47;
      v50 = v49 & 1;
      KeyPath = swift_getKeyPath(&unk_10063FE38);
      v327 = v44;
      v328 = v46;
      v329 = v50;
      v330 = v48;
      v331 = KeyPath;
      v332 = 1;
      v53 = static Alignment.leading.getter(v52);
      sub_1003ECA0C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v323, 0.0, 1, 0.0, 1, v53, v54);
      sub_1000E4458(v44, v46, v50);
      swift_release(KeyPath);
      swift_bridgeObjectRelease(v48, v55, v56, v57, v58, v59, v60, v61);
      v263 = v323[6];
      v264 = v323[7];
      v265 = v323[8];
      v266 = v323[9];
      v259 = v323[2];
      v260 = v323[3];
      v261 = v323[4];
      v262 = v323[5];
      v257 = v323[0];
      v258 = v323[1];
      v62.n128_f64[0] = sub_1004A0A38(v228, v326);
      v63 = static Alignment.leading.getter(v62);
      sub_1003ECBE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v267, 0.0, 1, 0.0, 1, v63, v64);
      sub_1004A1E04((uint64_t)v326);
      sub_10013AD0C();
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
      v66 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
      v67 = (objc_class *)type metadata accessor for GradientColors();
      v68 = (char *)objc_allocWithZone(v67);
      *(_QWORD *)&v68[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
      *(_QWORD *)&v68[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v66;
      v256.receiver = v68;
      v256.super_class = v67;
      v69 = objc_msgSendSuper2(&v256, "init");
      v70 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
      v71 = (objc_class *)type metadata accessor for MetricColors();
      v72 = (char *)objc_allocWithZone(v71);
      *(_QWORD *)&v72[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v69;
      *(_QWORD *)&v72[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v70;
      v255.receiver = v72;
      v255.super_class = v71;
      v73 = (char *)objc_msgSendSuper2(&v255, "init");
      v74 = *(id *)&v73[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

      v75 = Color.init(uiColor:)(v74);
      v285 = v273[6];
      v286 = v273[7];
      v287 = v273[8];
      v281 = v273[2];
      v282 = v273[3];
      v284 = v273[5];
      v283 = v273[4];
      v278 = v271;
      v279 = v272;
      v280[1] = v273[1];
      v280[0] = v273[0];
      v274 = v267;
      v275 = v268;
      v277 = v270;
      v276 = v269;
      v288 = v75;
      v76 = v216;
      sub_100021CC0(v37, v216, &qword_100836340);
      v251 = v263;
      v252 = v264;
      v253 = v265;
      v254 = v266;
      v247 = v259;
      v248 = v260;
      v249 = v261;
      v250 = v262;
      v245 = v257;
      v246 = v258;
      v241 = v285;
      v242 = v286;
      v243 = v287;
      v244 = v288;
      v237 = v281;
      v238 = v282;
      v239 = v283;
      v240 = v284;
      v233 = v278;
      v234 = v279;
      v235 = v280[0];
      v236 = v280[1];
      v229 = v274;
      v230 = v275;
      v231 = v276;
      v232 = v277;
      v77 = v217;
      sub_100021CC0(v76, v217, &qword_100836340);
      v78 = sub_100047110(&qword_100836370);
      v79 = (_OWORD *)(v77 + *(int *)(v78 + 48));
      v81 = v251;
      v80 = v252;
      v289[6] = v251;
      v289[7] = v252;
      v83 = v253;
      v82 = v254;
      v289[8] = v253;
      v289[9] = v254;
      v84 = v250;
      v289[4] = v249;
      v289[5] = v250;
      v86 = v247;
      v85 = v248;
      v289[3] = v248;
      v289[2] = v247;
      v87 = v245;
      v88 = v246;
      v289[0] = v245;
      v289[1] = v246;
      v79[4] = v249;
      v79[5] = v84;
      v79[2] = v86;
      v79[3] = v85;
      v79[8] = v83;
      v79[9] = v82;
      v79[6] = v81;
      v79[7] = v80;
      *v79 = v87;
      v79[1] = v88;
      v89 = v77 + *(int *)(v78 + 64);
      v90 = v241;
      v302 = v241;
      v303 = v242;
      v91 = v243;
      v304 = v243;
      v92 = v237;
      v93 = v237;
      v298 = v237;
      v299 = v238;
      v94 = v239;
      v95 = v239;
      v300 = v239;
      v301 = v240;
      v96 = v233;
      v97 = v233;
      v294 = v233;
      v295 = v234;
      v98 = v235;
      v99 = v235;
      v296 = v235;
      v297 = v236;
      v100 = v229;
      v101 = v229;
      v290 = v229;
      v291 = v230;
      v102 = v231;
      v103 = v231;
      v292 = v231;
      v293 = v232;
      v104 = v242;
      v105 = v242;
      *(_OWORD *)(v89 + 192) = v241;
      *(_OWORD *)(v89 + 208) = v104;
      *(_OWORD *)(v89 + 224) = v91;
      v106 = v238;
      v107 = v238;
      *(_OWORD *)(v89 + 128) = v92;
      *(_OWORD *)(v89 + 144) = v106;
      v108 = v240;
      v109 = v240;
      *(_OWORD *)(v89 + 160) = v94;
      *(_OWORD *)(v89 + 176) = v108;
      v110 = v234;
      v111 = v234;
      *(_OWORD *)(v89 + 64) = v96;
      *(_OWORD *)(v89 + 80) = v110;
      v112 = v236;
      v113 = v236;
      *(_OWORD *)(v89 + 96) = v98;
      *(_OWORD *)(v89 + 112) = v112;
      v114 = v230;
      v115 = v230;
      *(_OWORD *)v89 = v100;
      *(_OWORD *)(v89 + 16) = v114;
      v116 = v232;
      v117 = v232;
      *(_OWORD *)(v89 + 32) = v102;
      *(_OWORD *)(v89 + 48) = v116;
      v318 = v90;
      v319 = v105;
      v320 = v243;
      v314 = v93;
      v315 = v107;
      v316 = v95;
      v317 = v109;
      v310 = v97;
      v311 = v111;
      v312 = v99;
      v313 = v113;
      v306 = v101;
      v307 = v115;
      v305 = v244;
      *(_QWORD *)(v89 + 240) = v244;
      v321 = v244;
      v308 = v103;
      v309 = v117;
      sub_1001E05F0((uint64_t)v289);
      sub_1004A1E6C((uint64_t)&v290);
      sub_1001E05F0((uint64_t)&v257);
      sub_1004A1E6C((uint64_t)&v274);
      sub_1004A1EE0((uint64_t)&v306);
      v322[6] = v251;
      v322[7] = v252;
      v322[8] = v253;
      v322[9] = v254;
      v322[2] = v247;
      v322[3] = v248;
      v322[4] = v249;
      v322[5] = v250;
      v322[0] = v245;
      v322[1] = v246;
      sub_1001E06B4((uint64_t)v322);
      sub_10001BE90(v76, &qword_100836340);
      v118 = v223;
      sub_100021CC0(v77, v223, &qword_100836330);
      swift_storeEnumTagMultiPayload(v118, v221, 0);
      v119 = sub_100028384(&qword_100836358, &qword_100836330, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v120 = sub_100028384(&qword_100836360, &qword_100836318, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      _ConditionalContent<>.init(storage:)(v118, v222, v225, v119, v120);
      sub_10001BE90(v77, &qword_100836330);
      sub_1004A1EE0((uint64_t)&v274);
      sub_1001E06B4((uint64_t)&v257);
      v121 = v37;
      v122 = &qword_100836340;
      return (id)sub_10001BE90(v121, v122);
    }
    __break(1u);
  }
  else
  {
    v123 = static Alignment.bottomTrailing.getter(v31);
    v124 = (uint64_t)v219;
    *v219 = v123;
    *(_QWORD *)(v124 + 8) = v125;
    v126 = sub_100047110(&qword_100836348);
    v127 = v228;
    sub_1004A0598(v228, (uint64_t *)(v124 + *(int *)(v126 + 44)));
    sub_100045AD4(v124, v227, &qword_100836320);
    result = objc_msgSend(*(id *)(v127 + *(int *)(v226 + 20)), "displayName");
    if (result)
    {
      v128 = result;
      v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v131 = v130;

      *(_QWORD *)&v306 = v129;
      *((_QWORD *)&v306 + 1) = v131;
      v132 = sub_100038CA0();
      v133 = Text.init<A>(_:)(&v306, &type metadata for String, v132);
      v135 = v134;
      v137 = v136;
      v139 = v138 & 1;
      v141 = static Font.body.getter(v140);
      v143 = v211;
      v142 = v212;
      v144 = v213;
      (*(void (**)(char *, _QWORD, uint64_t))(v212 + 104))(v211, enum case for Font.Leading.tight(_:), v213);
      v145 = Font.leading(_:)(v143, v141);
      v146 = swift_release(v141);
      v147.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v142 + 8))(v143, v144, v146);
      v148 = Text.font(_:)(v145, v133, v135, v139, v137, v147);
      v220 = v149;
      LOBYTE(v141) = v150;
      v226 = v151;
      swift_release(v145);
      LODWORD(v219) = v141 & 1;
      sub_1000E4458(v133, v135, v139);
      swift_bridgeObjectRelease(v137, v152, v153, v154, v155, v156, v157, v158);
      v159 = swift_getKeyPath(&unk_10063FE38);
      sub_1004A0A38(v228, &v267);
      sub_10013AD0C();
      v160 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
      v161 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
      v162 = (objc_class *)type metadata accessor for GradientColors();
      v163 = (char *)objc_allocWithZone(v162);
      *(_QWORD *)&v163[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v160;
      *(_QWORD *)&v163[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v161;
      v325.receiver = v163;
      v325.super_class = v162;
      v164 = objc_msgSendSuper2(&v325, "init");
      v165 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
      v166 = (objc_class *)type metadata accessor for MetricColors();
      v167 = (char *)objc_allocWithZone(v166);
      *(_QWORD *)&v167[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v164;
      *(_QWORD *)&v167[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v165;
      v324.receiver = v167;
      v324.super_class = v166;
      v168 = (char *)objc_msgSendSuper2(&v324, "init");
      v169 = *(id *)&v168[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

      v170 = Color.init(uiColor:)(v169);
      v278 = v271;
      v279 = v272;
      v280[0] = v273[0];
      *(_OWORD *)((char *)v280 + 10) = *(_OWORD *)((char *)v273 + 10);
      v274 = v267;
      v275 = v268;
      v276 = v269;
      v277 = v270;
      *(_QWORD *)&v281 = v170;
      v171 = v214;
      sub_100021CC0(v227, v214, &qword_100836320);
      v235 = v280[0];
      v236 = v280[1];
      *(_QWORD *)&v237 = v281;
      v231 = v276;
      v232 = v277;
      v233 = v278;
      v234 = v279;
      v229 = v274;
      v230 = v275;
      v172 = v215;
      sub_100021CC0(v171, v215, &qword_100836320);
      v173 = (int *)sub_100047110(&qword_100836350);
      v174 = v172 + v173[12];
      *(_QWORD *)v174 = 0;
      *(_BYTE *)(v174 + 8) = 0;
      v175 = v172 + v173[16];
      v176 = v220;
      *(_QWORD *)v175 = v148;
      *(_QWORD *)(v175 + 8) = v176;
      LOBYTE(v135) = (_BYTE)v219;
      *(_BYTE *)(v175 + 16) = (_BYTE)v219;
      v177 = (CHWorkoutDetailHeartRateTableViewCell *)v226;
      *(_QWORD *)(v175 + 24) = v226;
      *(_QWORD *)(v175 + 32) = v159;
      *(_BYTE *)(v175 + 40) = 1;
      v178 = v172 + v173[20];
      v179 = v231;
      v180 = v231;
      v293 = v232;
      v292 = v231;
      v181 = v229;
      v182 = v229;
      v291 = v230;
      v290 = v229;
      v294 = v233;
      v295 = v234;
      v296 = v235;
      v297 = v236;
      v183 = v236;
      v185 = v235;
      v184 = v236;
      *(_OWORD *)(v178 + 96) = v235;
      *(_OWORD *)(v178 + 112) = v183;
      v186 = v232;
      v187 = v233;
      v188 = v232;
      v189 = v233;
      *(_OWORD *)(v178 + 32) = v179;
      *(_OWORD *)(v178 + 48) = v186;
      v190 = v234;
      v191 = v234;
      *(_OWORD *)(v178 + 64) = v187;
      *(_OWORD *)(v178 + 80) = v190;
      v192 = v230;
      v193 = v230;
      *(_OWORD *)v178 = v181;
      *(_OWORD *)(v178 + 16) = v192;
      v312 = v185;
      v313 = v184;
      v308 = v180;
      v309 = v188;
      v311 = v191;
      v310 = v189;
      *(_QWORD *)&v298 = v237;
      *(_QWORD *)(v178 + 128) = v237;
      *(_QWORD *)&v314 = v237;
      v307 = v193;
      v306 = v182;
      sub_1000E439C(v148, v176, v135);
      swift_bridgeObjectRetain(v177);
      swift_retain(v159);
      sub_1004A1BE0((uint64_t)&v290);
      sub_1000E439C(v148, v176, v135);
      swift_bridgeObjectRetain(v177);
      v218 = v159;
      swift_retain(v159);
      sub_1004A1BE0((uint64_t)&v274);
      sub_1004A1C54((uint64_t)&v306);
      sub_1000E4458(v148, v176, v135);
      swift_release(v159);
      swift_bridgeObjectRelease(v177, v194, v195, v196, v197, v198, v199, v200);
      sub_10001BE90(v171, &qword_100836320);
      v201 = v223;
      sub_100021CC0(v172, v223, &qword_100836318);
      swift_storeEnumTagMultiPayload(v201, v221, 1);
      v202 = sub_100028384(&qword_100836358, &qword_100836330, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v203 = sub_100028384(&qword_100836360, &qword_100836318, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      _ConditionalContent<>.init(storage:)(v201, v222, v225, v202, v203);
      sub_10001BE90(v172, &qword_100836318);
      sub_1004A1C54((uint64_t)&v274);
      sub_1000E4458(v148, v176, v135);
      swift_release(v218);
      swift_bridgeObjectRelease(v177, v204, v205, v206, v207, v208, v209, v210);
      v121 = v227;
      v122 = &qword_100836320;
      return (id)sub_10001BE90(v121, v122);
    }
  }
  __break(1u);
  return result;
}

void sub_10049FEAC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  unsigned int v20;
  void (*v21)(char *, uint64_t);
  char v22;
  double v23;
  id v24;
  uint64_t v25;
  char v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _OWORD *v33;
  uint64_t v34;

  v4 = sub_100047110(&qword_100836378);
  __chkstk_darwin(v4);
  v34 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v33 = (_OWORD *)((char *)&v31 - v7);
  v8 = type metadata accessor for DynamicTypeSize(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = type metadata accessor for FriendCardRingsView(0);
  v32 = *(void **)(a1 + *(int *)(v15 + 20));
  v16 = a1 + *(int *)(v15 + 32);
  v18 = *(_QWORD *)v16;
  v17 = *(_QWORD *)(v16 + 8);
  v19 = *(_BYTE *)(v16 + 16);
  sub_1003F6E18((uint64_t)v14);
  v20 = sub_10054FD90((uint64_t)v14, v18, v17, v19);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  if (v20 > 1)
  {
    v23 = 60.0;
  }
  else
  {
    sub_1003F6E18((uint64_t)v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.xxxLarge(_:), v8);
    v22 = static DynamicTypeSize.< infix(_:_:)(v14, v11);
    v21(v11, v8);
    v21(v14, v8);
    if ((v22 & 1) != 0)
      v23 = 80.0;
    else
      v23 = 50.0;
  }
  type metadata accessor for ActivitySharingAvatarProvider();
  v24 = sub_1004B1860(v32, v23);
  v25 = Image.init(uiImage:)(v24);
  v26 = static Edge.Set.all.getter(v25);
  v27 = v33;
  sub_1004A014C(v33);
  v28 = v34;
  sub_100021CC0((uint64_t)v27, v34, &qword_100836378);
  *(_QWORD *)a2 = v25;
  *(_BYTE *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0x4014000000000000;
  *(_BYTE *)(a2 + 48) = 0;
  v29 = sub_100047110(&qword_100836380);
  sub_100021CC0(v28, a2 + *(int *)(v29 + 48), &qword_100836378);
  v30 = a2 + *(int *)(v29 + 64);
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 1;
  swift_retain(v25);
  sub_10001BE90((uint64_t)v27, &qword_100836378);
  sub_10001BE90(v28, &qword_100836378);
  swift_release(v25);
}

void sub_1004A014C(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  void (*v18)(char *, uint64_t);
  char v19;
  double v20;
  uint64_t v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  unsigned __int8 v28;
  float v29;
  float v30;
  float v31;
  id v32;
  uint64_t v33;
  char v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  __int128 v64;

  v52 = sub_100047110(&qword_100821238);
  __chkstk_darwin(v52);
  v50 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v51);
  v5 = (double *)((char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - v11;
  v13 = type metadata accessor for FriendCardRingsView(0);
  v49 = objc_msgSend(*(id *)(v1 + *(int *)(v13 + 24)), "activitySummary");
  v14 = v1 + *(int *)(v13 + 32);
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_BYTE *)(v14 + 16);
  sub_1003F6E18((uint64_t)v12);
  LODWORD(v15) = sub_10054FD90((uint64_t)v12, v15, v16, v17);
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v12, v6);
  if (v15 > 1)
  {
    v20 = 60.0;
  }
  else
  {
    sub_1003F6E18((uint64_t)v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DynamicTypeSize.xxLarge(_:), v6);
    v19 = static DynamicTypeSize.< infix(_:_:)(v12, v9);
    v18(v9, v6);
    v18(v12, v6);
    if ((v19 & 1) != 0)
      v20 = 40.0;
    else
      v20 = 30.0;
  }
  v21 = (uint64_t)v50;
  v22 = v49;
  v23 = (void *)objc_opt_self(ARUIRingGroup);
  objc_msgSend(v23, "preferredActivityRingThicknessForDiameter:", v20);
  v25 = v24;
  objc_msgSend(v23, "preferredActivityRingInterspacingForDiameter:", v20);
  v27 = v26;
  if (v22)
    v28 = objc_msgSend(v22, "paused");
  else
    v28 = 0;
  v32 = sub_100032490();
  v33 = Color.init(uiColor:)(v32);
  v34 = static Edge.Set.all.getter(v33);
  v35 = sub_1004A18E4();
  v36 = sub_1004A18E4();
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(&v60, *(_QWORD *)&v35, 0, *(_QWORD *)&v36, 0, v38, v39);
  *(_QWORD *)&v53 = v22;
  BYTE8(v53) = v28;
  v29 = v20;
  *((float *)&v53 + 3) = v29;
  v30 = v25;
  *(float *)&v54 = v30;
  v31 = v27;
  *((float *)&v54 + 1) = v31;
  BYTE8(v54) = 2;
  *(_DWORD *)((char *)&v54 + 9) = 0;
  v55 = 0uLL;
  *(_QWORD *)&v56 = v33;
  BYTE8(v56) = v34;
  *(_QWORD *)&v57 = v60;
  BYTE8(v57) = v61;
  *(_QWORD *)&v58 = v62;
  BYTE8(v58) = v63;
  v59 = v64;
  v40 = sub_1004A18E4() * 0.5;
  v41 = (char *)v5 + *(int *)(v51 + 20);
  v42 = enum case for RoundedCornerStyle.continuous(_:);
  v43 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  *v5 = v40;
  v5[1] = v40;
  sub_10004F8C8((uint64_t)v5, v21, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v21 + *(int *)(v52 + 36)) = 256;
  v44 = sub_100047110(&qword_100836378);
  sub_100021CC0(v21, (uint64_t)a1 + *(int *)(v44 + 36), &qword_100821238);
  v45 = v58;
  a1[4] = v57;
  a1[5] = v45;
  a1[6] = v59;
  v46 = v54;
  *a1 = v53;
  a1[1] = v46;
  v47 = v56;
  a1[2] = v55;
  a1[3] = v47;
  sub_1004A1F54((uint64_t)&v53);
  sub_10001BE90(v21, &qword_100821238);
  sub_100011F54((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);

  sub_100022BA4(0, 0);
  swift_release(v33);
}

void sub_1004A0598(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned int v21;
  void (*v22)(char *, uint64_t);
  char v23;
  double v24;
  id v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t *v41;

  v41 = a2;
  v3 = sub_100047110(&qword_100836378);
  __chkstk_darwin(v3);
  v39 = (_OWORD *)((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = sub_100047110(&qword_1008363B8);
  __chkstk_darwin(v38);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v40 = (uint64_t)&v36 - v8;
  v9 = type metadata accessor for DynamicTypeSize(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - v14;
  v16 = type metadata accessor for FriendCardRingsView(0);
  v37 = *(void **)(a1 + *(int *)(v16 + 20));
  v17 = a1 + *(int *)(v16 + 32);
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v20 = *(_BYTE *)(v17 + 16);
  sub_1003F6E18((uint64_t)v15);
  v21 = sub_10054FD90((uint64_t)v15, v18, v19, v20);
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v15, v9);
  if (v21 > 1)
  {
    v24 = 60.0;
  }
  else
  {
    sub_1003F6E18((uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DynamicTypeSize.xxxLarge(_:), v9);
    v23 = static DynamicTypeSize.< infix(_:_:)(v15, v12);
    v22(v12, v9);
    v22(v15, v9);
    if ((v23 & 1) != 0)
      v24 = 80.0;
    else
      v24 = 50.0;
  }
  type metadata accessor for ActivitySharingAvatarProvider();
  v25 = sub_1004B1860(v37, v24);
  v26 = Image.init(uiImage:)(v25);
  v27 = v39;
  sub_1004A014C(v39);
  sub_1004A0894();
  v29 = v28;
  v31 = v30;
  sub_100021CC0((uint64_t)v27, (uint64_t)v6, &qword_100836378);
  v32 = &v6[*(int *)(v38 + 36)];
  *(_QWORD *)v32 = v29;
  *((_QWORD *)v32 + 1) = v31;
  sub_10001BE90((uint64_t)v27, &qword_100836378);
  v33 = v40;
  sub_100045AD4((uint64_t)v6, v40, &qword_1008363B8);
  sub_100021CC0(v33, (uint64_t)v6, &qword_1008363B8);
  v34 = v41;
  *v41 = v26;
  v35 = sub_100047110(&qword_1008363C0);
  sub_100021CC0((uint64_t)v6, (uint64_t)v34 + *(int *)(v35 + 48), &qword_1008363B8);
  swift_retain(v26);
  sub_10001BE90(v33, &qword_1008363B8);
  sub_10001BE90((uint64_t)v6, &qword_1008363B8);
  swift_release(v26);
}

void sub_1004A0894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  char v16;
  uint64_t v17;

  v1 = type metadata accessor for DynamicTypeSize(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = v0 + *(int *)(type metadata accessor for FriendCardRingsView(0) + 32);
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_BYTE *)(v8 + 16);
  sub_1003F6E18((uint64_t)v7);
  LODWORD(v9) = sub_10054FD90((uint64_t)v7, v9, v10, v11);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v7, v1);
  if (v9 <= 1)
  {
    sub_1003F6E18((uint64_t)v7);
    v13 = enum case for DynamicTypeSize.xxLarge(_:);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v14(v4, enum case for DynamicTypeSize.xxLarge(_:), v1);
    v15 = static DynamicTypeSize.< infix(_:_:)(v7, v4);
    v12(v4, v1);
    v12(v7, v1);
    if ((v15 & 1) == 0)
    {
      sub_1003F6E18((uint64_t)v7);
      v14(v4, v13, v1);
      v16 = static DynamicTypeSize.== infix(_:_:)(v7, v4);
      v12(v4, v1);
      v12(v7, v1);
      if ((v16 & 1) == 0)
        sub_1004A18E4();
    }
  }
}

double sub_1004A0A38@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, _QWORD, uint64_t);
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  __int128 v79;
  _OWORD *v80;
  __int128 v81;
  double result;
  __int128 v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _OWORD v98[2];
  _OWORD v99[6];
  _OWORD v100[2];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  _OWORD v107[2];
  __int128 v108;
  _BYTE v109[32];
  _BYTE v110[32];
  _BYTE v111[42];

  v91 = a2;
  v3 = type metadata accessor for FriendCardRingsView(0);
  __chkstk_darwin(v3);
  v90 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for DynamicTypeSize(0);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v88 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v84 - v7;
  v9 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v84 - v13;
  v15 = type metadata accessor for AttributedString(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v84 - v20;
  sub_1004A10B8((uint64_t)v14);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v14, 1, v15) != 1)
  {
    v86 = v18;
    v23 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v23(v21, v14, v15);
    sub_1004A12D0((uint64_t)v11);
    if (v22(v11, 1, v15) == 1)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      goto LABEL_5;
    }
    v84 = v21;
    v85 = v15;
    v36 = v16;
    v23(v86, v11, v15);
    sub_1003F6E18((uint64_t)v8);
    v37 = v87;
    v38 = v88;
    v39 = *(void (**)(char *, _QWORD, uint64_t))(v87 + 104);
    v40 = v89;
    v39(v88, enum case for DynamicTypeSize.xxLarge(_:), v89);
    v41 = static DynamicTypeSize.== infix(_:_:)(v8, v38);
    v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v42(v38, v40);
    v42(v8, v40);
    v87 = a1;
    v43 = a1;
    v44 = v90;
    sub_10004F8C8(v43, v90, type metadata accessor for FriendCardRingsView);
    if ((v41 & 1) != 0)
    {
      v45 = sub_100011F54(v44, type metadata accessor for FriendCardRingsView);
      v50 = (uint64_t)v84;
    }
    else
    {
      v51 = v44;
      sub_1003F6E18((uint64_t)v8);
      v39(v38, enum case for DynamicTypeSize.xxxLarge(_:), v40);
      v52 = static DynamicTypeSize.== infix(_:_:)(v8, v38);
      v42(v38, v40);
      v42(v8, v40);
      v45 = sub_100011F54(v51, type metadata accessor for FriendCardRingsView);
      v50 = (uint64_t)v84;
      if ((v52 & 1) == 0)
      {
        v61 = static VerticalAlignment.center.getter(v45);
        v54 = (uint64_t)v86;
        sub_1004A165C(v50, (uint64_t)v86, (uint64_t)&v108);
        v62 = v109[0];
        v63 = *(_QWORD *)&v109[8];
        v64 = v110[0];
        v65 = *(_QWORD *)&v110[8];
        v66 = v111[0];
        v67 = *(_QWORD *)&v111[8];
        v68 = v108;
        v69 = *(_OWORD *)&v109[16];
        v70 = *(_OWORD *)&v110[16];
        v108 = (unint64_t)v61;
        v109[0] = 0;
        *(_OWORD *)&v109[8] = v68;
        v109[24] = v62;
        *(_QWORD *)v110 = v63;
        *(_OWORD *)&v110[8] = v69;
        v110[24] = v64;
        *(_QWORD *)v111 = v65;
        *(_OWORD *)&v111[8] = v70;
        v111[24] = v66;
        *(_QWORD *)&v111[32] = v67;
        sub_1004A2048((uint64_t)&v108);
        goto LABEL_11;
      }
    }
    v53 = static HorizontalAlignment.center.getter(v45, v46, v47, v48, v49);
    v54 = (uint64_t)v86;
    sub_1004A1508(v50, (uint64_t)v86, (uint64_t)&v108);
    v55 = v109[0];
    v56 = *(_QWORD *)&v109[8];
    v57 = v110[0];
    v58 = *(_QWORD *)&v110[8];
    v59 = v108;
    v60 = *(_OWORD *)&v109[16];
    v108 = (unint64_t)v53;
    v109[0] = 0;
    *(_OWORD *)&v109[8] = v59;
    v109[24] = v55;
    *(_QWORD *)v110 = v56;
    *(_OWORD *)&v110[8] = v60;
    v110[24] = v57;
    *(_QWORD *)v111 = v58;
    sub_1004A205C((uint64_t)&v108);
LABEL_11:
    sub_100045AD4((uint64_t)&v108, (uint64_t)&v101, &qword_1008363B0);
    v71 = sub_100047110(&qword_100826750);
    v72 = sub_100047110(&qword_1008363A8);
    v73 = sub_100028384(&qword_100826760, &qword_100826750, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v74 = sub_100028384(&qword_1008363A0, &qword_1008363A8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(&v101, v71, v72, v73, v74);
    v105 = v96;
    v106 = v97;
    v107[0] = v98[0];
    *(_OWORD *)((char *)v107 + 9) = *(_OWORD *)((char *)v98 + 9);
    v101 = v92;
    v102 = v93;
    v103 = v94;
    v104 = v95;
    sub_1004A2054((uint64_t)&v101);
    sub_100045AD4((uint64_t)&v101, (uint64_t)&v108, &qword_100836388);
    v75 = sub_100047110(&qword_100836390);
    v76 = sub_1004A1FAC();
    _ConditionalContent<>.init(storage:)(&v108, v75, &type metadata for Text, v76, &protocol witness table for Text);
    v77 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v78 = v85;
    v77(v54, v85);
    v77(v50, v78);
    *(_OWORD *)&v110[16] = v99[4];
    *(_OWORD *)v111 = v99[5];
    *(_OWORD *)&v111[16] = v100[0];
    *(_OWORD *)&v111[26] = *(_OWORD *)((char *)v100 + 10);
    v108 = v99[0];
    *(_OWORD *)v109 = v99[1];
    *(_OWORD *)&v109[16] = v99[2];
    *(_OWORD *)v110 = v99[3];
    goto LABEL_12;
  }
  v11 = v14;
LABEL_5:
  sub_10001BE90((uint64_t)v11, (uint64_t *)&unk_10082EDF0);
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, 0, 0);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  *(_QWORD *)&v108 = v27;
  *((_QWORD *)&v108 + 1) = v29;
  v30 = sub_100038CA0();
  *(_QWORD *)&v101 = Text.init<A>(_:)(&v108, &type metadata for String, v30);
  *((_QWORD *)&v101 + 1) = v31;
  LOBYTE(v102) = v32 & 1;
  *((_QWORD *)&v102 + 1) = v33;
  sub_1004A1FA0((uint64_t)&v101);
  sub_100045AD4((uint64_t)&v101, (uint64_t)v99, &qword_100836388);
  v34 = sub_100047110(&qword_100836390);
  v35 = sub_1004A1FAC();
  _ConditionalContent<>.init(storage:)(v99, v34, &type metadata for Text, v35, &protocol witness table for Text);
LABEL_12:
  v79 = *(_OWORD *)v111;
  v80 = v91;
  v91[4] = *(_OWORD *)&v110[16];
  v80[5] = v79;
  v80[6] = *(_OWORD *)&v111[16];
  *(_OWORD *)((char *)v80 + 106) = *(_OWORD *)&v111[26];
  v81 = *(_OWORD *)v109;
  *v80 = v108;
  v80[1] = v81;
  result = *(double *)&v109[16];
  v83 = *(_OWORD *)v110;
  v80[2] = *(_OWORD *)&v109[16];
  v80[3] = v83;
  return result;
}

uint64_t sub_1004A10B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  NSString v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v3 = *(void **)(v1 + *(int *)(type metadata accessor for FriendCardRingsView(0) + 24));
  if (!v3)
    goto LABEL_10;
  v4 = v3;
  v5 = objc_msgSend(v4, "activitySummary");
  if (!v5)
  {
    v6 = v4;
LABEL_9:

LABEL_10:
    v26 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 1, 1, v26);
  }
  v6 = v5;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kASDisplayContextCompanion);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
  v17 = objc_msgSend((id)objc_opt_self(ASDisplayContext), "displayContextWithName:", v9);

  v18 = objc_msgSend(v6, "as_movePercentStringWithContext:snapshot:", v17, v4);
  if (!v18)
  {

    goto LABEL_9;
  }
  v19 = v18;
  AttributedString.init(_:)(v19);
  KeyPath = swift_getKeyPath(&unk_10063FE68);
  __chkstk_darwin(KeyPath);
  v21 = swift_getKeyPath(&unk_10063FE98);
  if (qword_10081DE08 != -1)
    swift_once(&qword_10081DE08, sub_10049ECFC);
  v22 = qword_10086AC00;
  v27 = qword_10086AC00;
  v23 = sub_1000EA1DC();
  swift_retain(v22);
  AttributedString.subscript.setter(&v27, v21, v23);

  v24 = type metadata accessor for AttributedString(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 0, 1, v24);
}

uint64_t sub_1004A12D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v3 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FriendCardRingsView(0);
  v7 = *(void **)(v1 + *(int *)(v6 + 24));
  if (!v7)
    goto LABEL_9;
  v8 = *(void **)(v1 + *(int *)(v6 + 28));
  if (!v8)
    goto LABEL_9;
  v9 = v7;
  v10 = v8;
  v11 = objc_msgSend(v9, "activitySummary");
  if (!v11)
  {

LABEL_9:
    v15 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  v12 = v11;
  if (objc_msgSend(v11, "activityMoveMode") == (id)2)
  {
    v13 = objc_msgSend(v12, "appleMoveTime");
    v14 = objc_msgSend(v12, "appleMoveTimeGoal");
    if (qword_10081DE08 != -1)
      swift_once(&qword_10081DE08, sub_10049ECFC);
    sub_1001B5C6C(v13, v14, (void (*)(_QWORD, _QWORD, _QWORD))qword_10086AC00, (uint64_t)v5);
  }
  else
  {
    v13 = objc_msgSend(v12, "activeEnergyBurned");
    v14 = objc_msgSend(v12, "activeEnergyBurnedGoal");
    if (qword_10081DE08 != -1)
      swift_once(&qword_10081DE08, sub_10049ECFC);
    sub_1001B583C(v13, v14, v10, (void (*)(_QWORD, _QWORD, _QWORD))qword_10086AC00, (uint64_t)v5);
  }

  return sub_100045AD4((uint64_t)v5, a1, (uint64_t *)&unk_10082EDF0);
}

void sub_1004A1508(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  char v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  char v40;

  v6 = type metadata accessor for AttributedString(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v11(v9, a1, v6, v7);
  v12 = Text.init(_:)(v9);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v9, a2, v6);
  v19 = Text.init(_:)(v9);
  v21 = v20;
  v23 = v22;
  v40 = v18;
  LOBYTE(v11) = v24 & 1;
  *(_QWORD *)a3 = v12;
  *(_QWORD *)(a3 + 8) = v14;
  *(_BYTE *)(a3 + 16) = v18;
  *(_QWORD *)(a3 + 24) = v16;
  *(_QWORD *)(a3 + 32) = v19;
  *(_QWORD *)(a3 + 40) = v20;
  *(_BYTE *)(a3 + 48) = v24 & 1;
  *(_QWORD *)(a3 + 56) = v22;
  sub_1000E439C(v12, v14, v18);
  swift_bridgeObjectRetain(v16);
  sub_1000E439C(v19, v21, (char)v11);
  swift_bridgeObjectRetain(v23);
  sub_1000E4458(v19, v21, (char)v11);
  swift_bridgeObjectRelease(v23, v25, v26, v27, v28, v29, v30, v31);
  sub_1000E4458(v12, v14, v40);
  swift_bridgeObjectRelease(v16, v32, v33, v34, v35, v36, v37, v38);
}

void sub_1004A165C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  uint64_t v16;
  char v17;
  char v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;

  v66 = a2;
  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributedString(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v13(v11, a1, v8, v9);
  v14 = Text.init(_:)(v11);
  v64 = v15;
  v65 = v14;
  v67 = v16;
  v18 = v17 & 1;
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  AttributeContainer.init()(v25);
  AttributedString.init(_:attributes:)(v22, v24, v7);
  v26 = Text.init(_:)(v11);
  v28 = v27;
  v30 = v29;
  LOBYTE(v21) = v31 & 1;
  ((void (*)(char *, uint64_t, uint64_t))v13)(v11, v66, v8);
  v32 = Text.init(_:)(v11);
  v34 = v33;
  v36 = v35;
  v69 = v18;
  v68 = (char)v21;
  LOBYTE(v13) = v37 & 1;
  v38 = v65;
  v39 = v67;
  *(_QWORD *)a3 = v65;
  *(_QWORD *)(a3 + 8) = v39;
  *(_BYTE *)(a3 + 16) = v18;
  v40 = v18;
  v41 = v64;
  *(_QWORD *)(a3 + 24) = v64;
  *(_QWORD *)(a3 + 32) = v26;
  *(_QWORD *)(a3 + 40) = v28;
  *(_BYTE *)(a3 + 48) = (_BYTE)v21;
  *(_QWORD *)(a3 + 56) = v30;
  *(_QWORD *)(a3 + 64) = v32;
  *(_QWORD *)(a3 + 72) = v34;
  *(_BYTE *)(a3 + 80) = (_BYTE)v13;
  *(_QWORD *)(a3 + 88) = v35;
  v42 = v38;
  sub_1000E439C(v38, v39, v40);
  swift_bridgeObjectRetain(v41);
  sub_1000E439C(v26, v28, (char)v21);
  swift_bridgeObjectRetain(v30);
  sub_1000E439C(v32, v34, (char)v13);
  swift_bridgeObjectRetain(v36);
  sub_1000E4458(v32, v34, (char)v13);
  swift_bridgeObjectRelease(v36, v43, v44, v45, v46, v47, v48, v49);
  sub_1000E4458(v26, v28, v68);
  swift_bridgeObjectRelease(v30, v50, v51, v52, v53, v54, v55, v56);
  sub_1000E4458(v42, v67, v69);
  swift_bridgeObjectRelease(v41, v57, v58, v59, v60, v61, v62, v63);
}

double sub_1004A18E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void (*v12)(char *, uint64_t);
  char v13;
  double v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  double v18;
  char v19;
  uint64_t v21;

  v1 = type metadata accessor for DynamicTypeSize(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - v6;
  v8 = v0 + *(int *)(type metadata accessor for FriendCardRingsView(0) + 32);
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_BYTE *)(v8 + 16);
  sub_1003F6E18((uint64_t)v7);
  LODWORD(v9) = sub_10054FD90((uint64_t)v7, v9, v10, v11);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v7, v1);
  if (v9 > 1)
  {
    v14 = 60.0;
  }
  else
  {
    sub_1003F6E18((uint64_t)v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DynamicTypeSize.xxLarge(_:), v1);
    v13 = static DynamicTypeSize.< infix(_:_:)(v7, v4);
    v12(v4, v1);
    v12(v7, v1);
    if ((v13 & 1) != 0)
      v14 = 40.0;
    else
      v14 = 30.0;
  }
  v15 = *(_QWORD *)v8;
  v16 = *(_QWORD *)(v8 + 8);
  v17 = *(_BYTE *)(v8 + 16);
  sub_1003F6E18((uint64_t)v7);
  LODWORD(v15) = sub_10054FD90((uint64_t)v7, v15, v16, v17);
  v12(v7, v1);
  v18 = 2.0;
  if (v15 <= 1)
  {
    sub_1003F6E18((uint64_t)v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DynamicTypeSize.xxLarge(_:), v1);
    v19 = static DynamicTypeSize.< infix(_:_:)(v7, v4);
    v12(v4, v1);
    v12(v7, v1);
    v18 = 2.0;
    if ((v19 & 1) != 0)
      v18 = 4.0;
  }
  return v14 + v18;
}

uint64_t sub_1004A1AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = sub_100047110(&qword_100836300);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v7, v8, v9, v10, v11);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v12 = sub_100047110(&qword_100836308);
  v13 = sub_10049EECC(v2, (uint64_t)&v6[*(int *)(v12 + 44)]);
  LOBYTE(v2) = static Edge.Set.bottom.getter(v13);
  v14 = EdgeInsets.init(_all:)(-2.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_100021CC0((uint64_t)v6, a1, &qword_100836300);
  v21 = a1 + *(int *)(sub_100047110(&qword_100836310) + 36);
  *(_BYTE *)v21 = v2;
  *(double *)(v21 + 8) = v14;
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = v18;
  *(_QWORD *)(v21 + 32) = v20;
  *(_BYTE *)(v21 + 40) = 0;
  return sub_10001BE90((uint64_t)v6, &qword_100836300);
}

uint64_t sub_1004A1BE0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 128);
  sub_10041B35C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120), *(_BYTE *)(a1 + 121));
  swift_retain(v2);
  return a1;
}

uint64_t sub_1004A1C54(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 128);
  sub_1004A1CC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 112), *(_BYTE *)(a1 + 120), *(_BYTE *)(a1 + 121));
  swift_release(v2);
  return a1;
}

void sub_1004A1CC8(uint64_t a1, uint64_t a2, uint64_t a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, char a6, CHWorkoutDetailHeartRateTableViewCell *a7, uint64_t a8, uint64_t a9, char a10, CHWorkoutDetailHeartRateTableViewCell *a11, uint64_t a12, uint64_t a13, char a14, CHWorkoutDetailHeartRateTableViewCell *a15, char a16, char a17)
{
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  if ((a17 & 1) != 0)
  {
    sub_1000E4458(a1, a2, a3 & 1);
    swift_bridgeObjectRelease(a4, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    sub_1004A1D34(a1, a2, a3, (uint64_t)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1);
  }
}

void sub_1004A1D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, CHWorkoutDetailHeartRateTableViewCell *a7, uint64_t a8, uint64_t a9, char a10, CHWorkoutDetailHeartRateTableViewCell *a11, uint64_t a12, uint64_t a13, char a14, CHWorkoutDetailHeartRateTableViewCell *a15, char a16)
{
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;

  v18 = a11;
  sub_1000E4458(a4, a5, a6 & 1);
  swift_bridgeObjectRelease(a7, v19, v20, v21, v22, v23, v24, v25);
  sub_1000E4458(a8, a9, a10 & 1);
  if ((a16 & 1) != 0)
  {
    swift_bridgeObjectRelease(a11, v26, v27, v28, v29, v30, v31, v32);
    sub_1000E4458(a12, a13, a14 & 1);
    v18 = a15;
  }
  swift_bridgeObjectRelease(v18, v26, v27, v28, v29, v30, v31, v32);
}

uint64_t sub_1004A1E04(uint64_t a1)
{
  sub_1004A1CC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 112), *(_BYTE *)(a1 + 120), *(_BYTE *)(a1 + 121));
  return a1;
}

uint64_t sub_1004A1E6C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 240);
  sub_10041B35C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120), *(_BYTE *)(a1 + 121));
  swift_retain(v2);
  return a1;
}

uint64_t sub_1004A1EE0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 240);
  sub_1004A1CC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 112), *(_BYTE *)(a1 + 120), *(_BYTE *)(a1 + 121));
  swift_release(v2);
  return a1;
}

uint64_t sub_1004A1F54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(id *)a1;
  sub_10003AFE0(v2, v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_1004A1FA0(uint64_t result)
{
  *(_BYTE *)(result + 121) = 1;
  return result;
}

unint64_t sub_1004A1FAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836398;
  if (!qword_100836398)
  {
    v1 = sub_100007050(&qword_100836390);
    sub_100028384(&qword_100826760, &qword_100826750, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100028384(&qword_1008363A0, &qword_1008363A8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836398);
  }
  return result;
}

uint64_t sub_1004A2048(uint64_t result)
{
  *(_BYTE *)(result + 120) = 1;
  return result;
}

uint64_t sub_1004A2054(uint64_t result)
{
  *(_BYTE *)(result + 121) = 0;
  return result;
}

uint64_t sub_1004A205C(uint64_t result)
{
  *(_BYTE *)(result + 120) = 0;
  return result;
}

uint64_t sub_1004A206C()
{
  return 8;
}

uint64_t sub_1004A2078(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1004A2080(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1004A2094(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1004A20A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008363C8;
  if (!qword_1008363C8)
  {
    v1 = sub_100007050(&qword_100836310);
    sub_100028384(&qword_1008363D0, &qword_100836300, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008363C8);
  }
  return result;
}

void (*sub_1004A2128(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1004A5ACC(v4, a2);
  return sub_100378D50;
}

void (*sub_1004A2174(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1004A5B4C(v4, a2);
  return sub_100378D50;
}

uint64_t sub_1004A21C0()
{
  return sub_1004A2260((uint64_t)&unk_10063FFF8, (uint64_t)&unk_100640020);
}

void (*sub_1004A21D4(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10063FFF8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100640020);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1001B9084;
}

uint64_t sub_1004A224C()
{
  return sub_1004A2260((uint64_t)&unk_10063FFB0, (uint64_t)&unk_10063FFD8);
}

uint64_t sub_1004A2260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

id sub_1004A22C8(void *a1, void *a2, void *a3, void *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  void *v29;
  void *v30;
  char *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id result;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  objc_class *v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  objc_super v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;

  v50 = a4;
  v51 = a1;
  v47 = a3;
  v52 = a2;
  v5 = type metadata accessor for DispatchQoS.QoSClass(0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082B700);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008351A0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR___CHWorkoutDetailSplitDataSource__metrics];
  v54 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
  v17 = v4;
  v18 = sub_100047110(&qword_100835160);
  Published.init(initialValue:)(&v54, v18);
  v19 = v16;
  v20 = v47;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v15, v12);
  v21 = &v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource__columns];
  v54 = &_swiftEmptyArrayStorage;
  v22 = sub_100047110(&qword_10082B6E0);
  Published.init(initialValue:)(&v54, v22);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v21, v11, v8);
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  v23 = OBJC_IVAR___CHWorkoutDetailSplitDataSource_internalQueue;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v25 = v48;
  v24 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v7, enum case for DispatchQoS.QoSClass.userInitiated(_:), v49);
  v26 = static OS_dispatch_queue.global(qos:)(v7);
  v27 = v7;
  v28 = v50;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  *(_QWORD *)&v17[v23] = v26;
  v30 = v51;
  v29 = v52;
  v31 = &v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingStandardSplits] = 0;
  v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingCustomSplits] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_dataCalculator] = v20;
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager] = v28;
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout] = v30;
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity] = v29;
  if (v29)
  {
    v32 = v20;
    v33 = v28;
    v34 = v30;
    v35 = v29;
    v36 = objc_msgSend(v35, "fiui_activityType");
  }
  else
  {
    v37 = v20;
    v38 = v28;
    result = objc_msgSend(v30, "fiui_activityType");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v36 = result;
    v35 = 0;
  }
  if (FIUIPaceFormatForWorkoutActivityType(v36) == 4)
    v40 = 8;
  else
    v40 = 3;
  if (objc_msgSend(v36, "effectiveTypeIdentifier") == (id)13)
    v41 = 9;
  else
    v41 = 6;
  v42 = sub_100047110(&qword_100821570);
  v43 = swift_allocObject(v42, 38, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100632400;
  *(_WORD *)(v43 + 32) = 512;
  *(_BYTE *)(v43 + 34) = v40;
  *(_WORD *)(v43 + 35) = 1284;
  *(_BYTE *)(v43 + 37) = v41;
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSplitDataSource_defaultColumns] = v43;

  v44 = (objc_class *)type metadata accessor for WorkoutDetailSplitDataSource(0);
  v53.receiver = v17;
  v53.super_class = v44;
  v45 = objc_msgSendSuper2(&v53, "init");
  sub_1004A26CC();

  return v45;
}

void sub_1004A26CC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  void **v13;
  uint64_t v14;
  double (*v15)(uint64_t, uint64_t, void *);
  void *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate];
  if (v1)
    objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator), "startAnimating");
  v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_dataCalculator];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout];
  v4 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity];
  v5 = swift_allocObject(&unk_1007A2E88, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  v17 = sub_1004A5A0C;
  v18 = v5;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_1004A2EDC;
  v16 = &unk_1007A2EA0;
  v6 = _Block_copy(&v13);
  v7 = v18;
  v8 = v0;
  objc_msgSend(v2, "customSplitsForWorkout:workoutActivity:completion:", v3, v4, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  v9 = swift_allocObject(&unk_1007A2ED8, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  v17 = sub_1004A5A14;
  v18 = v9;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_1004A2EDC;
  v16 = &unk_1007A2EF0;
  v10 = _Block_copy(&v13);
  v11 = v18;
  v12 = v8;
  objc_msgSend(v2, "splitsForWorkout:workoutActivity:completion:", v3, v4, v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
}

void sub_1004A2864(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  dispatch_group_t v33;
  id v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  void *v38;
  id v39;
  NSObject *v40;
  id v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  dispatch_group_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  dispatch_group_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[8];
  _QWORD *v64;
  void **aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  void *v68;
  void *v69;
  _QWORD *v70;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v15 = sub_100047110(&qword_10082CEC0);
    v16 = swift_allocObject(v15, 64, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100622F90;
    swift_getErrorValue(a2, v63, &v61);
    v17 = v61;
    v18 = v62;
    *(_QWORD *)(v16 + 56) = v62;
    v19 = sub_10004C480((_QWORD *)(v16 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v16, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a2);
    return;
  }
  if (a1)
  {
    v59 = v12;
    v57 = dispatch_group_create();
    v49 = sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v21 = (void *)static OS_dispatch_queue.main.getter(v20);
    v22 = swift_allocObject(&unk_1007A3068, 32, 7);
    *(_QWORD *)(v22 + 16) = a3;
    *(_QWORD *)(v22 + 24) = a1;
    v69 = sub_1004A5F58;
    v70 = (_QWORD *)v22;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_1007A3080;
    v23 = _Block_copy(&aBlock);
    v60 = a1;
    v24 = v23;
    v25 = v70;
    v58 = a3;
    swift_bridgeObjectRetain(v60);
    swift_release(v25);
    static DispatchQoS.unspecified.getter(v26);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v27 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v28 = sub_100047110(&qword_100828C80);
    v29 = sub_10002FB08();
    v55 = v28;
    v56 = v27;
    v53 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v28, v29, v6, v27);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v24);
    v30 = v60;
    _Block_release(v24);

    v54 = *(void (**)(char *, uint64_t))(v7 + 8);
    v54(v9, v6);
    v52 = *(void (**)(char *, uint64_t))(v11 + 8);
    v52(v14, v59);
    if ((unint64_t)v30 >> 62)
    {
      if (v30 >= 0)
        v42 = v30 & 0xFFFFFFFFFFFFFF8;
      else
        v42 = v30;
      swift_bridgeObjectRetain(v30);
      v31 = _CocoaArrayWrapper.endIndex.getter(v42);
      if (v31)
        goto LABEL_6;
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v30);
      if (v31)
      {
LABEL_6:
        if (v31 < 1)
        {
          __break(1u);
          return;
        }
        v32 = 0;
        v51 = *(_QWORD *)&v58[OBJC_IVAR___CHWorkoutDetailSplitDataSource_internalQueue];
        v50 = v30 & 0xC000000000000001;
        v33 = v57;
        do
        {
          if (v50)
            v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
          else
            v34 = *(id *)(v30 + 8 * v32 + 32);
          v35 = v34;
          v36 = (_QWORD *)swift_allocObject(&unk_1007A30B8, 40, 7);
          v37 = v58;
          v36[2] = v58;
          v36[3] = v35;
          v36[4] = v32;
          v69 = sub_1004A5F78;
          v70 = v36;
          aBlock = _NSConcreteStackBlock;
          v66 = 1107296256;
          v67 = sub_10002D0F8;
          v68 = &unk_1007A30D0;
          v38 = _Block_copy(&aBlock);
          v39 = v37;
          v40 = v33;
          v41 = v35;
          static DispatchQoS.unspecified.getter(v41);
          v64 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
          OS_dispatch_queue.async(group:qos:flags:execute:)(v33, v14, v9, v38);
          _Block_release(v38);

          v54(v9, v6);
          v52(v14, v59);
          swift_release(v70);
          ++v32;
          v30 = v60;
        }
        while (v31 != v32);
      }
    }
    v43 = swift_bridgeObjectRelease(v30);
    v44 = (void *)static OS_dispatch_queue.main.getter(v43);
    v45 = swift_allocObject(&unk_1007A3108, 24, 7);
    v46 = v58;
    *(_QWORD *)(v45 + 16) = v58;
    v69 = sub_1004A5FAC;
    v70 = (_QWORD *)v45;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_1007A3120;
    v47 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v46);
    v64 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
    v48 = v57;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v14, v9, v44, v47);
    _Block_release(v47);

    v54(v9, v6);
    v52(v14, v59);
    swift_release(v70);
  }
}

uint64_t sub_1004A2DE4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void (*v5)(_QWORD *);
  uint64_t *v6;
  void (*v7)(_QWORD *);
  __n128 v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD v15[4];

  v5 = sub_1004A21D4(v15);
  v7 = sub_1004A2174(v14, 0);
  v9 = *v6;
  if (!*v6)
    goto LABEL_8;
  v10 = v6;
  swift_retain(a3);
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(v9);
  *v10 = v9;
  if (v9 >> 62 || (result & 1) == 0)
  {
    result = sub_1004DEE2C(v9);
    v9 = result;
    *v10 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
    swift_release(v12);
    v8 = specialized Array._endMutation()(v13);
LABEL_8:
    ((void (*)(_QWORD *, _QWORD, __n128))v7)(v14, 0, v8);
    ((void (*)(_QWORD *, _QWORD))v5)(v15, 0);
    return sub_1004A4A0C(0);
  }
  __break(1u);
  return result;
}

double sub_1004A2EDC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_10001E724(0, &qword_100835968, FIUIWorkoutSplit_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_1004A2F68(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  dispatch_group_t v33;
  id v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  void *v38;
  id v39;
  NSObject *v40;
  id v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  dispatch_group_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  dispatch_group_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[8];
  _QWORD *v64;
  void **aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  void *v68;
  void *v69;
  _QWORD *v70;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v15 = sub_100047110(&qword_10082CEC0);
    v16 = swift_allocObject(v15, 64, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100622F90;
    swift_getErrorValue(a2, v63, &v61);
    v17 = v61;
    v18 = v62;
    *(_QWORD *)(v16 + 56) = v62;
    v19 = sub_10004C480((_QWORD *)(v16 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v16, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a2);
    return;
  }
  if (a1)
  {
    v59 = v12;
    v57 = dispatch_group_create();
    v49 = sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v21 = (void *)static OS_dispatch_queue.main.getter(v20);
    v22 = swift_allocObject(&unk_1007A2F28, 32, 7);
    *(_QWORD *)(v22 + 16) = a3;
    *(_QWORD *)(v22 + 24) = a1;
    v69 = sub_1004A5A20;
    v70 = (_QWORD *)v22;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_1007A2F40;
    v23 = _Block_copy(&aBlock);
    v60 = a1;
    v24 = v23;
    v25 = v70;
    v58 = a3;
    swift_bridgeObjectRetain(v60);
    swift_release(v25);
    static DispatchQoS.unspecified.getter(v26);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v27 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v28 = sub_100047110(&qword_100828C80);
    v29 = sub_10002FB08();
    v55 = v28;
    v56 = v27;
    v53 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v28, v29, v6, v27);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v24);
    v30 = v60;
    _Block_release(v24);

    v54 = *(void (**)(char *, uint64_t))(v7 + 8);
    v54(v9, v6);
    v52 = *(void (**)(char *, uint64_t))(v11 + 8);
    v52(v14, v59);
    if ((unint64_t)v30 >> 62)
    {
      if (v30 >= 0)
        v42 = v30 & 0xFFFFFFFFFFFFFF8;
      else
        v42 = v30;
      swift_bridgeObjectRetain(v30);
      v31 = _CocoaArrayWrapper.endIndex.getter(v42);
      if (v31)
        goto LABEL_6;
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v30);
      if (v31)
      {
LABEL_6:
        if (v31 < 1)
        {
          __break(1u);
          return;
        }
        v32 = 0;
        v51 = *(_QWORD *)&v58[OBJC_IVAR___CHWorkoutDetailSplitDataSource_internalQueue];
        v50 = v30 & 0xC000000000000001;
        v33 = v57;
        do
        {
          if (v50)
            v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
          else
            v34 = *(id *)(v30 + 8 * v32 + 32);
          v35 = v34;
          v36 = (_QWORD *)swift_allocObject(&unk_1007A2F78, 40, 7);
          v37 = v58;
          v36[2] = v58;
          v36[3] = v35;
          v36[4] = v32;
          v69 = sub_1004A5A6C;
          v70 = v36;
          aBlock = _NSConcreteStackBlock;
          v66 = 1107296256;
          v67 = sub_10002D0F8;
          v68 = &unk_1007A2F90;
          v38 = _Block_copy(&aBlock);
          v39 = v37;
          v40 = v33;
          v41 = v35;
          static DispatchQoS.unspecified.getter(v41);
          v64 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
          OS_dispatch_queue.async(group:qos:flags:execute:)(v33, v14, v9, v38);
          _Block_release(v38);

          v54(v9, v6);
          v52(v14, v59);
          swift_release(v70);
          ++v32;
          v30 = v60;
        }
        while (v31 != v32);
      }
    }
    v43 = swift_bridgeObjectRelease(v30);
    v44 = (void *)static OS_dispatch_queue.main.getter(v43);
    v45 = swift_allocObject(&unk_1007A2FC8, 24, 7);
    v46 = v58;
    *(_QWORD *)(v45 + 16) = v58;
    v69 = sub_1004A5AA0;
    v70 = (_QWORD *)v45;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_1007A2FE0;
    v47 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v46);
    v64 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
    v48 = v57;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v14, v9, v44, v47);
    _Block_release(v47);

    v54(v9, v6);
    v52(v14, v59);
    swift_release(v70);
  }
}

uint64_t sub_1004A34E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD, __n128);
  uint64_t *v26;
  uint64_t *v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[4];

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v31 = a2;
    else
      v31 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = _swiftEmptyArrayStorage;
  if (!v8)
    goto LABEL_11;
  v35[0] = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v8);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v32 = a3;
    v33 = a1;
    v11 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a2);
      else
        v12 = *(id *)(a2 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      objc_msgSend(v12, "distanceInMeters", v32, v33);
      v15 = v14;
      objc_msgSend(v13, "duration");
      v17 = v16;
      v18 = type metadata accessor for WorkoutDurationMetrics();
      v19 = swift_allocObject(v18, 160, 7);
      *(_QWORD *)(v19 + 16) = 0;
      *(_QWORD *)(v19 + 24) = 0;
      *(_QWORD *)(v19 + 48) = 0;
      *(_BYTE *)(v19 + 56) = 1;
      *(_QWORD *)(v19 + 72) = 0;
      *(_BYTE *)(v19 + 80) = 1;
      *(_OWORD *)(v19 + 88) = 0u;
      *(_OWORD *)(v19 + 104) = 0u;
      *(_QWORD *)(v19 + 120) = 0;
      *(_BYTE *)(v19 + 128) = 1;
      *(_QWORD *)(v19 + 144) = 0;
      *(_QWORD *)(v19 + 152) = 0;
      *(_QWORD *)(v19 + 136) = 0;
      *(_QWORD *)(v19 + 32) = v15;
      *(_BYTE *)(v19 + 40) = 0;
      *(_QWORD *)(v19 + 64) = v17;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v21 = *(_QWORD *)(v35[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
      specialized ContiguousArray._endMutation()(v22);
    }
    while (v8 != v11);
    v9 = (_QWORD *)v35[0];
    a3 = v32;
    a1 = v33;
LABEL_11:
    KeyPath = swift_getKeyPath(&unk_10063FFF8);
    v24 = swift_getKeyPath(&unk_100640020);
    v25 = (void (*)(_QWORD *, _QWORD, __n128))static Published.subscript.modify(v35, a1, KeyPath, v24);
    v27 = v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v26);
    v34 = *v27;
    *v27 = 0x8000000000000000;
    sub_1003FFEE4((uint64_t)v9, a3, isUniquelyReferenced_nonNull_native);
    v29 = *v27;
    *v27 = v34;
    v30 = swift_bridgeObjectRelease(v29);
    v25(v35, 0, v30);
    swift_release(v24);
    swift_release(KeyPath);
    return sub_1004A4A0C(a4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004A3744(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[5];
  _QWORD *v45;

  v38 = a5;
  v39 = a6;
  v36 = a4;
  v37 = a3;
  v40 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout];
  v14 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity];
  v15 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSplitDataSource_dataCalculator];
  v16 = type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject(v16, 160, 7);
  v17 = v14;
  v18 = a2;
  v19 = v15;
  v20 = v13;
  v21 = sub_1003558F8(v20, v14, v18, v19, 0, 0);

  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = (_QWORD *)swift_allocObject(v36, 40, 7);
  v25 = v37;
  v24[2] = a1;
  v24[3] = v25;
  v24[4] = v21;
  aBlock[4] = v38;
  v45 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = v39;
  v26 = _Block_copy(aBlock);
  v27 = v45;
  v28 = a1;
  swift_retain(v21);
  swift_release(v27);
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = _swiftEmptyArrayStorage;
  v30 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100047110(&qword_100828C80);
  v32 = sub_10002FB08();
  v33 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v40, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v26);
  _Block_release(v26);

  v34 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v9, v33, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v42);
}

uint64_t sub_1004A39E4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void (*v5)(_QWORD *);
  uint64_t *v6;
  void (*v7)(_QWORD *);
  __n128 v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD v15[4];

  v5 = sub_1004A21D4(v15);
  v7 = sub_1004A2174(v14, 1);
  v9 = *v6;
  if (!*v6)
    goto LABEL_8;
  v10 = v6;
  swift_retain(a3);
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(v9);
  *v10 = v9;
  if (v9 >> 62 || (result & 1) == 0)
  {
    result = sub_1004DEE2C(v9);
    v9 = result;
    *v10 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
    swift_release(v12);
    v8 = specialized Array._endMutation()(v13);
LABEL_8:
    ((void (*)(_QWORD *, _QWORD, __n128))v7)(v14, 0, v8);
    return ((uint64_t (*)(_QWORD *, _QWORD))v5)(v15, 0);
  }
  __break(1u);
  return result;
}

id sub_1004A3AC4(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4)
{
  id result;
  uint64_t v8;

  result = (id)sub_1004A4A0C(a2);
  *(_BYTE *)(a1 + *a3) = 1;
  if (*(_BYTE *)(a1 + *a4) == 1)
  {
    v8 = *(_QWORD *)(a1 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate);
    if (v8)
      return objc_msgSend(*(id *)(v8 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator), "stopAnimating");
  }
  return result;
}

uint64_t sub_1004A3B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  unint64_t v13;
  uint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;

  KeyPath = swift_getKeyPath(&unk_10063FFF8);
  v4 = swift_getKeyPath(&unk_100640020);
  static Published.subscript.getter(&v32, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v12 = v32;
  if (*(_QWORD *)v32->cellPadding && (v13 = sub_100030DDC(a1), (v5 & 1) != 0))
  {
    v14 = *(_QWORD *)(*(_QWORD *)v12[1].cellInset + 8 * v13);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRelease(v12, v15, v16, v17, v18, v19, v20, v21);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v31 = v14;
      else
        v31 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v29 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_bridgeObjectRelease_n(v14, 2);
    }
    else
    {
      v29 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v14, v22, v23, v24, v25, v26, v27, v28);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v12, v5, v6, v7, v8, v9, v10, v11);
    return 0;
  }
  return v29;
}

void sub_1004A3C44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  uint64_t v12;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  unint64_t v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  double v38;
  char v39;
  double v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  double v50;
  id v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  void (*v57)(char *, uint64_t);
  id v58;
  void (*v59)(char *, uint64_t);
  NSString v60;
  id v61;
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  uint64_t v65;
  uint64_t v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;

  v2 = v1;
  v4 = sub_100047110(&qword_100821E10);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v90 - v9;
  KeyPath = swift_getKeyPath(&unk_10063FFF8);
  v12 = swift_getKeyPath(&unk_100640020);
  static Published.subscript.getter(&v91, v2, KeyPath, v12);
  swift_release(v12);
  swift_release(KeyPath);
  v20 = v91;
  if (!*(_QWORD *)v91->cellPadding || (v21 = sub_100030DDC(a1), (v13 & 1) == 0))
  {
    v52 = v20;
LABEL_16:
    swift_bridgeObjectRelease(v52, v13, v14, v15, v16, v17, v18, v19);
    return;
  }
  v22 = *(_QWORD *)(*(_QWORD *)v20[1].cellInset + 8 * v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v20, v23, v24, v25, v26, v27, v28, v29);
  if (!((unint64_t)v22 >> 62))
  {
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_25;
  }
  if (v22 < 0)
    v81 = v22;
  else
    v81 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v82 = _CocoaArrayWrapper.endIndex.getter(v81);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v83, v84, v85, v86, v87, v88, v89);
  if (!v82)
  {
LABEL_25:
    v52 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    goto LABEL_16;
  }
LABEL_5:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
  }
  else
  {
    if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v30 = *(_QWORD *)(v22 + 32);
    swift_retain(v30);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v31, v32, v33, v34, v35, v36, v37);
  v38 = *(double *)(v30 + 32);
  v39 = *(_BYTE *)(v30 + 40);
  *(_QWORD *)&v40 = swift_release(v30).n128_u64[0];
  if ((v39 & 1) != 0)
    return;
  v41 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager), "unitManager", v40));
  if (!v41)
    goto LABEL_28;
  v42 = v41;
  v43 = objc_msgSend(*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout), "fiui_activityType");
  if (!v43)
  {
LABEL_29:
    __break(1u);
    return;
  }
  v44 = v43;
  v45 = FIUIDistanceTypeForActivityType(v43);

  v46 = objc_msgSend(v42, "userDistanceHKUnitForDistanceType:", v45);
  if (HKUnit.measurementSystem.getter() == 1)
  {
    v47 = (void *)objc_opt_self(NSUnitLength);
    v48 = objc_msgSend(v47, "meters");
    v49 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v48, v49, v38);
    if (v38 >= 1000.0)
    {
      v58 = objc_msgSend(v47, "kilometers");
      Measurement<>.converted(to:)();

      v59 = *(void (**)(char *, uint64_t))(v5 + 8);
      v59(v7, v4);
      v50 = Measurement.value.getter(v4);
      v59(v10, v4);
    }
    else
    {
      v50 = Measurement.value.getter(v4);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    v51 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  }
  else
  {
    v53 = (void *)objc_opt_self(NSUnitLength);
    v54 = objc_msgSend(v53, "meters");
    v55 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v54, v55, v38);
    v56 = objc_msgSend(v53, "miles");
    Measurement<>.converted(to:)();

    v57 = *(void (**)(char *, uint64_t))(v5 + 8);
    v57(v7, v4);
    v50 = Measurement.value.getter(v4);
    v57(v10, v4);
    v51 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  }
  v60 = String._bridgeToObjectiveC()();
  v61 = objc_msgSend(v51, "localizedStringForKey:value:table:", v60, 0, 0);

  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
  v64 = v63;

  v65 = sub_100047110((uint64_t *)&unk_100827460);
  v66 = swift_allocObject(v65, 72, 7);
  *(_OWORD *)(v66 + 16) = xmmword_100622F90;
  *(_QWORD *)(v66 + 56) = &type metadata for Double;
  *(_QWORD *)(v66 + 64) = &protocol witness table for Double;
  *(double *)(v66 + 32) = v50;
  static String.localizedStringWithFormat(_:_:)(v62, v64, v66);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v66, v67, v68, v69, v70, v71, v72, v73);
  swift_bridgeObjectRelease(v64, v74, v75, v76, v77, v78, v79, v80);

}

void sub_1004A41C0(unint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;

  KeyPath = swift_getKeyPath(&unk_10063FFB0);
  v4 = swift_getKeyPath(&unk_10063FFD8);
  static Published.subscript.getter(&v13, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)v13->cellPadding > a1)
  {
    v12 = *((_BYTE *)&v13[1].super.super.super.super.isa + a1);
    swift_bridgeObjectRelease(v13, v5, v6, v7, v8, v9, v10, v11);
    sub_1001A5750(*(_QWORD *)(v1 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager), v12);
    return;
  }
  __break(1u);
}

void sub_1004A427C(unint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell **v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  const char *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22[3];

  KeyPath = swift_getKeyPath(&unk_10063FFB0);
  v4 = swift_getKeyPath(&unk_10063FFD8);
  static Published.subscript.getter(v22, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)v22[0]->cellPadding <= a1)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v12 = *((unsigned __int8 *)&v22[0][1].super.super.super.super.isa + a1);
  swift_bridgeObjectRelease(v22[0], v5, v6, v7, v8, v9, v10, v11);
  v13 = (CHWorkoutDetailHeartRateTableViewCell **)(v1 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_columnSizes);
  swift_beginAccess(v13, v22, 0, 0);
  v14 = *v13;
  if (*(_QWORD *)v14->cellPadding)
  {
    swift_bridgeObjectRetain(v14);
    sub_1004396A8(v12);
    if ((v15 & 1) != 0)
      swift_bridgeObjectRelease(v14, v15, v16, v17, v18, v19, v20, v21);
    else
      swift_bridgeObjectRelease(v14, v15, v16, v17, v18, v19, v20, v21);
  }
}

uint64_t sub_1004A4388(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *KeyPath;
  uint64_t v19;
  const char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v44;
  id v45;
  id v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  void *v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  char v71;
  __n128 v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  void *v74;
  void *v75;
  char v76;
  char v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  void *OpaqueTypeConformance2;
  char *v98;
  void *v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  unint64_t v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  SEL v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  const char *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  CHWorkoutDetailHeartRateTableViewCell *v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  SEL v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  __n128 v151;
  CHWorkoutDetailHeartRateTableViewCell *v152;
  void *v153;
  void *v154;
  char v155;
  char v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;
  CHWorkoutDetailHeartRateTableViewCell *v158;
  SEL v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  CHWorkoutDetailHeartRateTableViewCell *v173;
  void *v174;
  char v175;
  CHWorkoutDetailHeartRateTableViewCell *v176;

  v4 = v3;
  v168 = a3;
  v7 = type metadata accessor for AttributedString(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v167 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v167 - v12;
  v14 = type metadata accessor for DynamicTypeSize(0);
  v169 = *(_QWORD *)(v14 - 8);
  v170 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100047110(&qword_100820D90);
  __chkstk_darwin(v172);
  v171 = (char *)&v167 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (CHWorkoutDetailHeartRateTableViewCell *)swift_getKeyPath(&unk_10063FFB0);
  v19 = swift_getKeyPath(&unk_10063FFD8);
  static Published.subscript.getter(&v173, v4, KeyPath, v19);
  swift_release(v19);
  swift_release(KeyPath);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (*(_QWORD *)v173->cellPadding <= a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = 0x72656B72616DLL;
  LOBYTE(a2) = *((_BYTE *)&v173[1].super.super.super.super.isa + a2);
  swift_bridgeObjectRelease(v173, v20, v21, v22, v23, v24, v25, v26);
  v27 = sub_1001A561C(a2);
  KeyPath = v28;
  if (v27 == 0x72656B72616DLL && v28 == (CHWorkoutDetailHeartRateTableViewCell *)0xE600000000000000)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE600000000000000, (SEL)0xE600000000000000, v29, v30, v31, v32, v33, v34);
    goto LABEL_7;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, 0x72656B72616DLL, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(KeyPath, v35, v36, v37, v38, v39, v40, v41);
  if ((v19 & 1) == 0)
  {
    v102 = (uint64_t)v13;
    v103 = swift_getKeyPath(&unk_10063FFF8);
    v104 = swift_getKeyPath(&unk_100640020);
    static Published.subscript.getter(&v173, v4, v103, v104);
    swift_release(v104);
    swift_release(v103);
    v112 = v173;
    if (!*(_QWORD *)v173->cellPadding || (v113 = sub_100030DDC(v168), (v105 & 1) == 0))
    {
      swift_bridgeObjectRelease(v112, v105, v106, v107, v108, v109, v110, v111);
      v99 = &type metadata for EmptyView;
      OpaqueTypeConformance2 = &protocol witness table for EmptyView;
      return AnyView.init<A>(_:)(v98, v99, OpaqueTypeConformance2);
    }
    v114 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v112[1].cellInset + 8 * v113);
    swift_bridgeObjectRetain(v114);
    swift_bridgeObjectRelease(v112, v115, v116, v117, v118, v119, v120, v121);
    if (((unint64_t)v114 & 0xC000000000000001) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)(((unint64_t)v114 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        v122 = *((_QWORD *)&v114[1].super.super.super.super.isa + a1);
        swift_retain(v122);
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_28;
    }
    v122 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v114);
LABEL_18:
    v171 = (char *)v122;
    v167 = v102;
    swift_bridgeObjectRelease(v114, v123, v124, v125, v126, v127, v128, v129);
    sub_1001A601C(v122, *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout), *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity), *(_QWORD *)(v4 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager), a2, v102);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v102, v7);
    v130 = Text.init(_:)(v10);
    v132 = v131;
    v134 = v133;
    v136 = v135 & 1;
    sub_1001A5D38(a2);
    v138 = v137;
    v112 = (CHWorkoutDetailHeartRateTableViewCell *)Text.foregroundColor(_:)(v137, v130, v132, v136, v134);
    a1 = v139;
    v172 = v7;
    LOBYTE(v7) = v140;
    v114 = v141;
    swift_release(v138);
    sub_1000E4458(v130, v132, v136);
    swift_bridgeObjectRelease(v134, v142, v143, v144, v145, v146, v147, v148);
    if (qword_10081D688 == -1)
    {
LABEL_19:
      v149 = Font.init(_:)((id)qword_100869FF8);
      v150 = v7 & 1;
      v152 = (CHWorkoutDetailHeartRateTableViewCell *)Text.font(_:)(v149, v112, a1, v150, v114, v151);
      v154 = v153;
      v156 = v155;
      v158 = v157;
      swift_release(v149);
      sub_1000E4458((uint64_t)v112, a1, v150);
      swift_bridgeObjectRelease(v114, v159, v160, v161, v162, v163, v164, v165);
      v173 = v152;
      v174 = v154;
      v175 = v156 & 1;
      v176 = v158;
      v100 = AnyView.init<A>(_:)(&v173, &type metadata for Text, &protocol witness table for Text);
      v166 = swift_release(v171);
      (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v167, v172, v166);
      return v100;
    }
LABEL_28:
    swift_once(&qword_10081D688, sub_1001A536C);
    goto LABEL_19;
  }
LABEL_7:
  v42 = objc_opt_self(NSNumberFormatter);
  if (__OFADD__(a1++, 1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v44 = (void *)v42;
  v45 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
  v46 = objc_msgSend(v44, "localizedStringFromNumber:numberStyle:", v45, 0);

  v47 = (CHWorkoutDetailHeartRateTableViewCell *)static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  v173 = v47;
  v174 = v49;
  v50 = sub_100038CA0();
  v51 = Text.init<A>(_:)(&v173, &type metadata for String, v50);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  sub_1001A5D38(a2);
  v59 = v58;
  KeyPath = (CHWorkoutDetailHeartRateTableViewCell *)Text.foregroundColor(_:)(v58, v51, v53, v57, v55);
  v19 = v60;
  LOBYTE(a2) = v61;
  a1 = v62;
  swift_release(v59);
  sub_1000E4458(v51, v53, v57);
  swift_bridgeObjectRelease(v55, v63, v64, v65, v66, v67, v68, v69);
  if (qword_10081D680 != -1)
LABEL_24:
    swift_once(&qword_10081D680, sub_1001A5284);
  v70 = Font.init(_:)((id)qword_100869FF0);
  v71 = a2 & 1;
  v73 = (CHWorkoutDetailHeartRateTableViewCell *)Text.font(_:)(v70, KeyPath, v19, a2 & 1, a1, v72);
  v75 = v74;
  v77 = v76;
  v79 = v78;
  swift_release(v70);
  sub_1000E4458((uint64_t)KeyPath, v19, v71);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v80, v81, v82, v83, v84, v85, v86);
  v173 = v73;
  v174 = v75;
  v175 = v77 & 1;
  v176 = v79;
  v88 = v169;
  v87 = v170;
  (*(void (**)(char *, _QWORD, uint64_t))(v169 + 104))(v16, enum case for DynamicTypeSize.large(_:), v170);
  v89 = v171;
  View.dynamicTypeSize(_:)(v16, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v16, v87);
  sub_1000E4458((uint64_t)v173, (uint64_t)v174, v175);
  swift_bridgeObjectRelease(v176, v90, v91, v92, v93, v94, v95, v96);
  v173 = (CHWorkoutDetailHeartRateTableViewCell *)&type metadata for Text;
  v174 = &protocol witness table for Text;
  OpaqueTypeConformance2 = (void *)swift_getOpaqueTypeConformance2(&v173, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
  v98 = v89;
  v99 = (void *)v172;
  return AnyView.init<A>(_:)(v98, v99, OpaqueTypeConformance2);
}

uint64_t sub_1004A4A0C(char a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  char *v23;
  NSString *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  NSString *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  NSString *v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t *v60;
  __int128 v61;
  NSAttributedStringKey v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char v68[8];
  _QWORD *v69;

  v3 = v1;
  v57 = type metadata accessor for AttributedString(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v54 = (char *)&v45 - v7;
  KeyPath = swift_getKeyPath(&unk_10063FFF8);
  v9 = swift_getKeyPath(&unk_100640020);
  v58 = v3;
  static Published.subscript.getter(&v66, v3, KeyPath, v9);
  swift_release(v9);
  swift_release(KeyPath);
  v10 = v66;
  v11 = (char *)&unk_100836000;
  v12 = &unk_100836000;
  if (*(_QWORD *)(v66 + 16) && (v13 = sub_100030DDC(a1 & 1), (v14 & 1) != 0))
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v13);
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v10);
    if ((unint64_t)v2 >> 62)
      goto LABEL_41;
    v15 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v15)
    {
      v16 = 0;
      v17 = &v58[v12[130]];
      v18 = *(_QWORD **)&v58[*((_QWORD *)v11 + 129)];
      v50 = v2 & 0xC000000000000001;
      v47 = v2 & 0xFFFFFFFFFFFFFF8;
      v46 = v2 + 32;
      v53 = OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout;
      v60 = &v67;
      v52 = OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager;
      v65 = v18;
      v64 = (char *)v18[2];
      v62 = NSFontAttributeName;
      v61 = xmmword_100622F90;
      v59 = (char *)&type metadata for Any + 8;
      v51 = "";
      v49 = v2;
      v48 = v15;
      while (v50)
      {
        v63 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v2);
        v19 = __OFADD__(v16++, 1);
        if (v19)
          goto LABEL_39;
LABEL_13:
        if (v64)
        {
          swift_bridgeObjectRetain(v65);
          swift_beginAccess(v17, v68, 0, 0);
          __asm { BR              X8 }
        }
        swift_release(v63);
        if (v16 == v15)
        {
          swift_bridgeObjectRelease(v2);
          v12 = (_QWORD *)&unk_100836000;
          v11 = (_BYTE *)&unk_100836000;
          goto LABEL_17;
        }
      }
      if (v16 >= *(_QWORD *)(v47 + 16))
        goto LABEL_40;
      v63 = *(_QWORD *)(v46 + 8 * v16);
      swift_retain(v63);
      v19 = __OFADD__(v16++, 1);
      if (!v19)
        goto LABEL_13;
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      if (v2 < 0)
        v44 = v2;
      else
        v44 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v15 = _CocoaArrayWrapper.endIndex.getter(v44);
      swift_bridgeObjectRelease(v2);
    }
    v20 = v2;
  }
  else
  {
    v20 = v10;
  }
  swift_bridgeObjectRelease(v20);
LABEL_17:
  v21 = *(_QWORD *)&v58[*((_QWORD *)v11 + 129)];
  v22 = *(NSString **)(v21 + 16);
  v11 = &v58[v12[130]];
  v23 = v58;
  swift_bridgeObjectRetain(v21);
  swift_beginAccess(v11, &v66, 0, 0);
  if (v22)
  {
    v24 = 0;
    v25 = v21 + 32;
    v26 = _swiftEmptyArrayStorage;
    v64 = v23;
    v63 = v21;
    v62 = v22;
    do
    {
      v65 = v26;
      v27 = 0;
      if (v24 <= v22)
        v28 = v22;
      else
        v28 = v24;
      v12 = (_QWORD *)((char *)v24 - (char *)v28);
      v29 = v25;
      while (1)
      {
        if (!(_QWORD *)((char *)v12 + v27))
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = *(_QWORD *)v11;
        if (*(_QWORD *)(*(_QWORD *)v11 + 16))
        {
          v2 = *((unsigned __int8 *)v24 + v29);
          v31 = v25;
          swift_bridgeObjectRetain(*(_QWORD *)v11);
          sub_1004396A8(v2);
          v33 = v32;
          swift_bridgeObjectRelease(v30);
          v25 = v31;
          if ((v33 & 1) != 0)
            break;
        }
        ++v27;
        ++v29;
        v22 = (NSString *)((char *)v22 - 1);
        if (v24 == v22)
        {
          v23 = v64;
          v21 = v63;
          v26 = v65;
          goto LABEL_36;
        }
      }
      v34 = v65;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v65);
      v69 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100121894(0, v34[2] + 1, 1);
        v34 = v69;
      }
      v37 = v34[2];
      v36 = v34[3];
      v38 = v34;
      if (v37 >= v36 >> 1)
      {
        sub_100121894(v36 > 1, v37 + 1, 1);
        v38 = v69;
      }
      v39 = (NSString *)((char *)v24 + 1);
      v24 = (NSString *)((char *)v24 + v27 + 1);
      v38[2] = v37 + 1;
      *((_BYTE *)v38 + v37 + 32) = v2;
      v40 = v39 == v22;
      v23 = v64;
      v21 = v63;
      v22 = v62;
      v25 = v31;
      v26 = v38;
    }
    while (!v40);
  }
  else
  {
    v26 = _swiftEmptyArrayStorage;
  }
LABEL_36:

  swift_bridgeObjectRelease(v21);
  v41 = swift_getKeyPath(&unk_10063FFB0);
  v42 = swift_getKeyPath(&unk_10063FFD8);
  v69 = v26;
  return static Published.subscript.setter(&v69, v23, v41, v42);
}

id sub_1004A557C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSplitDataSource(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004A56A0()
{
  return type metadata accessor for WorkoutDetailSplitDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailSplitDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100836448;
  if (!qword_100836448)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailSplitDataSource);
  return result;
}

void sub_1004A56E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[3] = "\b";
  sub_1000DBE4C(319, (unint64_t *)&qword_100835158, &qword_100835160);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000DBE4C(319, &qword_10082B6D8, &qword_10082B6E0);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[9] = &unk_10063FF28;
      v6[10] = &unk_10063FF40;
      v6[11] = &unk_10063FF40;
      swift_updateClassMetadata2(a1, 256, 12, v6, a1 + 80);
    }
  }
}

uint64_t sub_1004A57D0()
{
  return 2;
}

uint64_t sub_1004A57D8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_10063FFB0);
  v2 = swift_getKeyPath(&unk_10063FFD8);
  static Published.subscript.getter(&v5, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease(v5);
  return v3;
}

uint64_t sub_1004A5868@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutDetailSplitDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004A58A4(uint64_t a1)
{
  uint64_t result;

  result = sub_1000083D8(&qword_100829D58, type metadata accessor for WorkoutDetailSplitDataSource, (uint64_t)&unk_10063FF58);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1004A58E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(v8);
  result = swift_release(KeyPath);
  *a4 = v10;
  return result;
}

uint64_t sub_1004A5958@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004A58E0(a1, (uint64_t)&unk_10063FFB0, (uint64_t)&unk_10063FFD8, a2);
}

uint64_t sub_1004A597C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002903B8(a1, a2, a3, a4, (uint64_t)&unk_10063FFB0, (uint64_t)&unk_10063FFD8);
}

uint64_t sub_1004A59A0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004A58E0(a1, (uint64_t)&unk_10063FFF8, (uint64_t)&unk_100640020, a2);
}

uint64_t sub_1004A59C4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002903B8(a1, a2, a3, a4, (uint64_t)&unk_10063FFF8, (uint64_t)&unk_100640020);
}

uint64_t sub_1004A59E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004A5A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004A2864(a1, a2, *(void **)(v2 + 16));
}

void sub_1004A5A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004A2F68(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1004A5A20()
{
  uint64_t v0;

  return sub_1004A34E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 1, 1);
}

uint64_t sub_1004A5A40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004A5A6C()
{
  uint64_t v0;

  return sub_1004A3744(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t)&unk_1007A3018, (uint64_t)sub_1004A5F48, (uint64_t)&unk_1007A3030);
}

id sub_1004A5AA0()
{
  uint64_t v0;

  return sub_1004A3AC4(*(_QWORD *)(v0 + 16), 1, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingStandardSplits, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingCustomSplits);
}

void (*sub_1004A5ACC(_QWORD *a1, uint64_t a2))(uint64_t)
{
  _QWORD *v2;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;

  v5 = malloc(0x50uLL);
  *a1 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v5[8] = sub_1004A5EF8(v5);
  v5[9] = sub_1004A5C04((uint64_t)(v5 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_1004A5B48;
}

void (*sub_1004A5B4C(_QWORD *a1, uint64_t a2))(uint64_t)
{
  _QWORD *v2;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;

  v5 = malloc(0x50uLL);
  *a1 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v5[8] = sub_1004A5F24(v5);
  v5[9] = sub_1004A5D5C(v5 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1004A5B48;
}

void sub_1004A5BC8(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

unint64_t (*sub_1004A5C04(uint64_t a1, uint64_t a2, char a3))(unint64_t result)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t (*result)(unint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v8 = *v3;
  v10 = sub_100049DE0(a2);
  *(_BYTE *)(a1 + 25) = v9 & 1;
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = *(_QWORD *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v10;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(_QWORD *)a1 = v16;
        return sub_1004A5D14;
      }
LABEL_11:
      v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10040102C();
      goto LABEL_7;
    }
    sub_1003F7E14(v13, a3 & 1);
    v17 = sub_100049DE0(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      *(_QWORD *)(a1 + 16) = v17;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (unint64_t (*)(unint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CardTypeFamily);
  __break(1u);
  return result;
}

unint64_t sub_1004A5D14(unint64_t result)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v2 = **(_QWORD ***)(result + 8);
    if ((*(_BYTE *)(result + 25) & 1) != 0)
      *(_QWORD *)(v2[7] + 8 * *(_QWORD *)(result + 16)) = v1;
    else
      return sub_100400690(*(_QWORD *)(result + 16), *(_BYTE *)(result + 24), v1, v2);
  }
  else if ((*(_BYTE *)(result + 25) & 1) != 0)
  {
    return sub_1004D17A4(*(_QWORD *)(result + 16), **(_QWORD **)(result + 8));
  }
  return result;
}

void (*sub_1004A5D5C(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_100030DDC(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_1004A5E78;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_100403FBC();
      goto LABEL_7;
    }
    sub_1003FCAA0(v14, a3 & 1);
    v18 = sub_100030DDC(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

void sub_1004A5E78(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *a1;
  v2 = **a1;
  v3 = *((_BYTE *)*a1 + 32);
  if (v2)
  {
    v4 = v1[3];
    v5 = *(_QWORD **)v1[2];
    if ((v3 & 1) != 0)
      *(_QWORD *)(v5[7] + 8 * v4) = v2;
    else
      sub_100400B30(v4, v1[1], v2, v5);
  }
  else if (((*a1)[4] & 1) != 0)
  {
    sub_1004D2BD0(v1[3], *(_QWORD *)v1[2]);
  }
  v6 = *v1;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v6);
  free(v1);
}

uint64_t (*sub_1004A5EF8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1004A5F18;
}

uint64_t sub_1004A5F18(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_1004A5F24(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1004A6014;
}

uint64_t sub_1004A5F48()
{
  uint64_t v0;

  return sub_1004A39E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1004A5F58()
{
  uint64_t v0;

  return sub_1004A34E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0, 0);
}

uint64_t sub_1004A5F78()
{
  uint64_t v0;

  return sub_1004A3744(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t)&unk_1007A3158, (uint64_t)sub_1004A6008, (uint64_t)&unk_1007A3170);
}

id sub_1004A5FAC()
{
  uint64_t v0;

  return sub_1004A3AC4(*(_QWORD *)(v0 + 16), 0, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingCustomSplits, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingStandardSplits);
}

uint64_t sub_1004A5FDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004A6008()
{
  uint64_t v0;

  return sub_1004A2DE4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

char *sub_1004A605C(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  NSString v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  Class isa;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  double v61;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  objc_super v64;

  v6 = OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v7 = v3;
  *(_QWORD *)&v3[v6] = sub_1004C2368();

  if (a3)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v9, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    v8 = 0;
  }
  v64.receiver = v7;
  v64.super_class = (Class)type metadata accessor for TrendsPregnancyDisclaimerCell();
  v16 = objc_msgSendSuper2(&v64, "initWithStyle:reuseIdentifier:", a1, v8);

  v17 = (char *)v16;
  v18 = objc_msgSend(v17, "contentView");
  v19 = OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView;
  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView]);

  v20 = objc_msgSend(*(id *)&v17[v19], "leadingAnchor");
  v21 = objc_msgSend(v17, "contentView");
  v22 = objc_msgSend(v21, "leadingAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v22, 16.0);
  v24 = objc_msgSend(*(id *)&v17[v19], "topAnchor");
  v25 = objc_msgSend(v17, "contentView");
  v26 = objc_msgSend(v25, "topAnchor");

  v27 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v26, 10.0);
  v28 = objc_msgSend(*(id *)&v17[v19], "trailingAnchor");
  v29 = objc_msgSend(v17, "contentView");
  v30 = objc_msgSend(v29, "trailingAnchor");

  v31 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v30, -16.0);
  v32 = objc_msgSend(*(id *)&v17[v19], "bottomAnchor");
  v33 = objc_msgSend(v17, "contentView");
  v34 = objc_msgSend(v33, "bottomAnchor");

  v35 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v34, -10.0);
  v36 = (void *)objc_opt_self(NSLayoutConstraint);
  v37 = sub_100047110((uint64_t *)&unk_100828340);
  v38 = swift_allocObject(v37, 64, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100623750;
  *(_QWORD *)(v38 + 32) = v23;
  *(_QWORD *)(v38 + 40) = v27;
  *(_QWORD *)(v38 + 48) = v31;
  *(_QWORD *)(v38 + 56) = v35;
  v63 = (CHWorkoutDetailHeartRateTableViewCell *)v38;
  specialized Array._endMutation()(v38);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v39 = v23;
  v40 = v27;
  v41 = v31;
  v42 = v35;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v63, v44, v45, v46, v47, v48, v49, v50);
  objc_msgSend(v36, "activateConstraints:", isa);

  v51 = *(void **)&v17[v19];
  v52 = (void *)objc_opt_self(UIFont);
  v53 = v51;
  v54 = objc_msgSend(v52, "_preferredFontForTextStyle:variant:", UIFontTextStyleFootnote, 256);
  objc_msgSend(v53, "setFont:", v54);

  v55 = *(void **)&v17[v19];
  v56 = (void *)objc_opt_self(UIColor);
  v57 = v55;
  v58 = objc_msgSend(v56, "secondaryLabelColor");
  objc_msgSend(v57, "setTextColor:", v58);

  v59 = *(void **)&v17[v19];
  objc_msgSend(v59, "setNumberOfLines:", 0);
  v60 = v59;
  LODWORD(v61) = 1148846080;
  objc_msgSend(v60, "setContentCompressionResistancePriority:forAxis:", 1, v61);

  return v17;
}

void sub_1004A654C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;

  if (a1 == 2 || a1 == 1)
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v6 = v5;

  }
  else
  {
    v6 = 0xE000000000000000;
  }
  v7 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v7, "setText:", v8);

}

id sub_1004A6738()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsPregnancyDisclaimerCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendsPregnancyDisclaimerCell()
{
  return objc_opt_self(_TtC10FitnessApp29TrendsPregnancyDisclaimerCell);
}

void sub_1004A6798(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(uint64_t), void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v27;

  v24 = a7;
  v25 = a5;
  v12 = type metadata accessor for NavigationRequest(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(qword_1008364F0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004A8424(a1, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    swift_errorRelease(*v18);
    v19 = (void *)objc_opt_self(AMSUserNotification);
    v20 = objc_msgSend(v19, "handleNotificationResponse:bag:", v24, *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_amsBag));
    v21 = swift_allocObject(&unk_1007A3338, 32, 7);
    *(_QWORD *)(v21 + 16) = v25;
    *(_QWORD *)(v21 + 24) = a6;
    aBlock[4] = sub_1004A8490;
    v27 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000064EC;
    aBlock[3] = &unk_1007A3350;
    v22 = _Block_copy(aBlock);
    v23 = v27;
    swift_retain(a6);
    objc_msgSend(v20, "addFinishBlock:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);

  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v13 + 32))(v15, v18, v12);
    sub_1004A6A10((uint64_t)v15, a3, a4, v25, a6);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void sub_1004A6A10(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  char *v5;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  Class isa;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  void (**v52)(uint64_t);
  void (*v53)(uint64_t);
  void *v54;
  uint64_t v55;
  id v56;
  double v57;
  void *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void (*v70)(uint64_t);
  char v71[176];
  void **aBlock;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;

  v70 = a4;
  v66 = a1;
  v68 = type metadata accessor for NavigationRequest(0);
  v67 = *(_QWORD *)(v68 - 8);
  v9 = *(_QWORD *)(v67 + 64);
  __chkstk_darwin(v68);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v18 = (char *)&v64 - v17;
  objc_msgSend(a3, "setDefaultURL:", 0, v16);
  v69 = v5;
  v19 = objc_msgSend(a2, "handleSelectedButton:bag:", a3, *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_amsBag]);
  v76 = sub_1004A6FAC;
  v77 = 0;
  aBlock = _NSConcreteStackBlock;
  v73 = 1107296256;
  v74 = sub_1000064EC;
  v75 = &unk_1007A31C0;
  v20 = _Block_copy(&aBlock);
  objc_msgSend(v19, "addFinishBlock:", v20);
  _Block_release(v20);
  v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v22 = objc_msgSend(v21, "bundleIdentifier");

  if (v22)
  {
    v65 = v22;
    v64 = a5;
    v24 = static Log.engagement.getter(v23);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Foregrounding app", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    v28 = sub_100047110(&qword_1008364D0);
    inited = swift_initStackObject(v28, v71);
    *(_OWORD *)(inited + 16) = xmmword_100620BC0;
    aBlock = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
    v73 = v30;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &aBlock, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = &type metadata for Bool;
    *(_BYTE *)(inited + 72) = 1;
    aBlock = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyUnlockDevice);
    v73 = v31;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), &aBlock, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 168) = &type metadata for Bool;
    *(_BYTE *)(inited + 144) = 1;
    v32 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435E28(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);
    v41 = objc_msgSend((id)objc_opt_self(FBSOpenApplicationOptions), "optionsWithDictionary:", isa);

    v42 = objc_msgSend((id)objc_opt_self(FBSOpenApplicationService), "serviceWithDefaultShellEndpoint");
    if (v42)
    {
      v43 = v42;
      v44 = v67;
      v45 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))((char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v66, v68);
      v46 = *(unsigned __int8 *)(v44 + 80);
      v47 = (v46 + 16) & ~v46;
      v48 = (v9 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
      v49 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
      v50 = swift_allocObject(&unk_1007A31F8, v49 + 16, v46 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v50 + v47, v10, v45);
      v51 = v69;
      *(_QWORD *)(v50 + v48) = v69;
      v52 = (void (**)(uint64_t))(v50 + v49);
      v53 = v64;
      *v52 = v70;
      v52[1] = v53;
      v76 = sub_1004A7CF4;
      v77 = v50;
      aBlock = _NSConcreteStackBlock;
      v73 = 1107296256;
      v74 = sub_1001ABA78;
      v75 = &unk_1007A3210;
      v54 = _Block_copy(&aBlock);
      v55 = v77;
      v56 = v51;
      swift_retain(v53);
      *(_QWORD *)&v57 = swift_release(v55).n128_u64[0];
      v58 = v65;
      objc_msgSend(v43, "openApplication:withOptions:completion:", v65, v41, v54, v57);

      _Block_release(v54);
      v19 = v58;
    }
    else
    {

      v19 = v65;
    }
  }
  else
  {
    v59 = static Log.engagement.getter(v23);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.error.getter(v60);
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Failed to retrieve app bundle identifier", v62, 2u);
      swift_slowDealloc(v62, -1, -1);
    }

    v63 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v70(v63);
  }

}

uint64_t sub_1004A6FAC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.engagement.getter(v8);
  swift_errorRetain(a2);
  v9 = swift_errorRetain(a2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(18, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 67109378;
    LODWORD(v17) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, (char *)&v17 + 4, v12 + 4);
    *(_WORD *)(v12 + 8) = 2112;
    if (a2)
    {
      swift_errorRetain(a2);
      v14 = _swift_stdlib_bridgeErrorToNSError(a2);
      v17 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v12 + 10);
    }
    else
    {
      v17 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v12 + 10);
      v14 = 0;
    }
    *v13 = v14;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "AMS handled button action: success %{BOOL}d, error %@", (uint8_t *)v12, 0x12u);
    v15 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1004A71D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *aBlock;
  _QWORD v65[4];
  uint64_t v66;

  v57 = a4;
  v58 = a6;
  v56 = a5;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v62 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v60 = *(_QWORD *)(v11 - 8);
  v61 = v11;
  __chkstk_darwin(v11);
  v59 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for NavigationRequest(0);
  v13 = *(_QWORD *)(v55 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v55);
  v54 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v53 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.engagement.getter(v18);
  swift_errorRetain(a2);
  v19 = swift_errorRetain(a2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v63 = v9;
  if (v22)
  {
    v50 = v15;
    v51 = a3;
    v52 = v8;
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v23 = 138412290;
    if (a2)
    {
      swift_errorRetain(a2);
      v25 = _swift_stdlib_bridgeErrorToNSError(a2);
      aBlock = (CHWorkoutDetailHeartRateTableViewCell *)v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v65, v23 + 4);
    }
    else
    {
      aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v65, v23 + 4);
      v25 = 0;
    }
    *v24 = v25;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Foregrounded app (error %@", v23, 0xCu);
    v26 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v24, 1, v26);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
    a3 = v51;
    v8 = v52;
    v15 = v50;
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v15);
  sub_10002FB54();
  v28 = (void *)static OS_dispatch_queue.main.getter(v27);
  v30 = v54;
  v29 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v54, a3, v55);
  v31 = *(unsigned __int8 *)(v13 + 80);
  v32 = (v31 + 16) & ~v31;
  v33 = (v14 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject(&unk_1007A3248, v34 + 16, v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v35 + v32, v30, v29);
  v36 = v56;
  v37 = v57;
  *(_QWORD *)(v35 + v33) = v57;
  v38 = (_QWORD *)(v35 + v34);
  v39 = v58;
  *v38 = v36;
  v38[1] = v39;
  v65[3] = sub_1004A7DF8;
  v66 = v35;
  aBlock = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
  v65[0] = 1107296256;
  v65[1] = sub_10002D0F8;
  v65[2] = &unk_1007A3260;
  v40 = _Block_copy(&aBlock);
  v41 = v66;
  v42 = v37;
  swift_retain(v39);
  swift_release(v41);
  v43 = v59;
  static DispatchQoS.unspecified.getter(v44);
  aBlock = &_swiftEmptyArrayStorage;
  v45 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v46 = sub_100047110(&qword_100828C80);
  v47 = sub_10002FB08();
  v48 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v46, v47, v8, v45);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v48, v40);
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v43, v61);
}

uint64_t sub_1004A7658(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  unint64_t v21;
  id v22;
  __n128 v23;
  void (*v24)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;

  v34 = a4;
  v7 = sub_100047110((uint64_t *)&unk_100836170);
  v33 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TrainerTipsGalleryNavigationBegan(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((NavigationRequest.isTrainerTipsGalleryRequest.getter(v12) & 1) != 0)
  {
    v32 = a3;
    v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_eventHub + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(a2
                                               + OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_eventHub));
    TrainerTipsGalleryNavigationBegan.init()();
    v17 = sub_1000083D8(&qword_1008364D8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan, (uint64_t)&protocol conformance descriptor for TrainerTipsGalleryNavigationBegan);
    v18 = v15;
    a3 = v32;
    dispatch thunk of EventHubProtocol.publish<A>(_:)(v14, v10, v17, ObjectType, v18);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  v19 = sub_100016804((_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_urlNavigator)+ 48), *(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_urlNavigator)+ 72));
  v20 = (void *)*v19;
  v21 = v19[1];
  if ((v21 & 0x8000000000000000) != 0)
  {
    v23 = swift_retain(*v19);
    AppCoordinator.navigateToRequest(_:)(a1, v23);
    sub_1001B9E74(v20, v21);
  }
  else
  {
    v22 = v20;
    BrowsingViewController.navigateToRequest(_:)(a1);

  }
  v24 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v7);
  v26 = v25;
  v27 = swift_allocObject(&unk_1007A3298, 32, 7);
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  v24(sub_100110028, v27);
  swift_release(v26);
  v28 = swift_release(v27);
  v29 = (*(uint64_t (**)(char *, uint64_t, __n128))(v33 + 8))(v9, v7, v28);
  return a3(v29);
}

uint64_t sub_1004A7864(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *aBlock;
  _QWORD v45[4];
  uint64_t v46;

  v39 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v40 = *(_QWORD *)(v14 - 8);
  v41 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.engagement.getter(v17);
  swift_errorRetain(a2);
  v18 = swift_errorRetain(a2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v35 = a3;
    v36 = a4;
    v37 = v8;
    v38 = v7;
    v21 = swift_slowAlloc(18, -1);
    v22 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v21 = 67109378;
    LODWORD(aBlock) = v39 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v21 + 4);
    *(_WORD *)(v21 + 8) = 2112;
    if (a2)
    {
      swift_errorRetain(a2);
      v23 = _swift_stdlib_bridgeErrorToNSError(a2);
      aBlock = (CHWorkoutDetailHeartRateTableViewCell *)v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v45, v21 + 10);
    }
    else
    {
      aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v45, v21 + 10);
      v23 = 0;
    }
    *v22 = v23;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "AMS handled URL: success %{BOOL}d, error %@", (uint8_t *)v21, 0x12u);
    v24 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v22, 1, v24);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
    v8 = v37;
    v7 = v38;
    a3 = v35;
    a4 = v36;
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
  sub_10002FB54();
  v26 = (void *)static OS_dispatch_queue.main.getter(v25);
  v27 = swift_allocObject(&unk_1007A3388, 32, 7);
  *(_QWORD *)(v27 + 16) = a3;
  *(_QWORD *)(v27 + 24) = a4;
  v45[3] = sub_10003A294;
  v46 = v27;
  aBlock = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
  v45[0] = 1107296256;
  v45[1] = sub_10002D0F8;
  v45[2] = &unk_1007A33A0;
  v28 = _Block_copy(&aBlock);
  v29 = v46;
  swift_retain(a4);
  swift_release(v29);
  static DispatchQoS.unspecified.getter(v30);
  aBlock = &_swiftEmptyArrayStorage;
  v31 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v32 = sub_100047110(&qword_100828C80);
  v33 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v32, v33, v7, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v13, v43);
}

